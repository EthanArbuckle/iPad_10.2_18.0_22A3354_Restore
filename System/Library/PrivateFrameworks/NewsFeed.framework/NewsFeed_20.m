uint64_t sub_1BB14A5FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v2 + 16);
    v7 = *(_QWORD *)(v5 + 16);
    v6 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain();
    v8 = sub_1BB4AB4B4(v7, v6, 7);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v4 + 56);
      v12 = type metadata accessor for FormatDerivedDataFile();
      v13 = *(_QWORD *)(v12 - 8);
      sub_1BA4C2DD8(v11 + *(_QWORD *)(v13 + 72) * v10, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
    else
    {
      v16 = type metadata accessor for FormatDerivedDataFile();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = type metadata accessor for FormatDerivedDataFile();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
}

uint64_t sub_1BB14A700()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDerivedDataState()
{
  return objc_opt_self();
}

uint64_t sub_1BB14A76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1EF2B6150, (uint64_t)&type metadata for FormatDerivedDataResultBlock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

NewsFeed::FeedGroupBindingOptionsVariant __swiftcall FeedGroupBindingOptionsVariant.init(maxNoAccessArticles:minNoAccessArticles:)(Swift::Int_optional maxNoAccessArticles, Swift::Int_optional minNoAccessArticles)
{
  uint64_t v2;
  Swift::Bool is_nil;
  Swift::Int value;
  char v5;
  NewsFeed::FeedGroupBindingOptionsVariant result;

  is_nil = maxNoAccessArticles.is_nil;
  value = 0x7FFFFFFFFFFFFFFFLL;
  if (!maxNoAccessArticles.is_nil)
    value = maxNoAccessArticles.value;
  if (minNoAccessArticles.is_nil)
  {
    if ((value & 0x8000000000000000) == 0)
    {
      v5 = 1;
      goto LABEL_9;
    }
LABEL_8:
    minNoAccessArticles.value = 0;
    maxNoAccessArticles.value = 0;
    v5 = 1;
    is_nil = 1;
    goto LABEL_9;
  }
  if (value < minNoAccessArticles.value)
    goto LABEL_8;
  v5 = 0;
LABEL_9:
  *(_QWORD *)v2 = maxNoAccessArticles.value;
  *(_BYTE *)(v2 + 8) = is_nil;
  *(_QWORD *)(v2 + 16) = minNoAccessArticles.value;
  *(_BYTE *)(v2 + 24) = v5;
  result.minNoAccessArticles = minNoAccessArticles;
  result.maxNoAccessArticles = maxNoAccessArticles;
  return result;
}

void __swiftcall FeedGroupBindingOptions.init(small:large:)(NewsFeed::FeedGroupBindingOptions *__return_ptr retstr, NewsFeed::FeedGroupBindingOptionsVariant small, NewsFeed::FeedGroupBindingOptionsVariant large)
{
  char v3;
  Swift::Int v4;
  char v5;
  Swift::Int v6;
  char v7;
  Swift::Int v8;
  char v9;

  v3 = *(_BYTE *)(small.maxNoAccessArticles.value + 8);
  v4 = *(_QWORD *)(small.maxNoAccessArticles.value + 16);
  v5 = *(_BYTE *)(small.maxNoAccessArticles.value + 24);
  v6 = **(_QWORD **)&small.maxNoAccessArticles.is_nil;
  v7 = *(_BYTE *)(*(_QWORD *)&small.maxNoAccessArticles.is_nil + 8);
  v8 = *(_QWORD *)(*(_QWORD *)&small.maxNoAccessArticles.is_nil + 16);
  v9 = *(_BYTE *)(*(_QWORD *)&small.maxNoAccessArticles.is_nil + 24);
  retstr->small.maxNoAccessArticles.value = *(_QWORD *)small.maxNoAccessArticles.value;
  retstr->small.maxNoAccessArticles.is_nil = v3;
  retstr->small.minNoAccessArticles.value = v4;
  retstr->small.minNoAccessArticles.is_nil = v5;
  retstr->large.maxNoAccessArticles.value = v6;
  retstr->large.maxNoAccessArticles.is_nil = v7;
  retstr->large.minNoAccessArticles.value = v8;
  retstr->large.minNoAccessArticles.is_nil = v9;
}

uint64_t getEnumTagSinglePayload for FeedEditionConfig.DateWindow(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t getEnumTagSinglePayload for FeedGroupBindingOptionsVariant(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeedGroupBindingOptionsVariant(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupBindingOptionsVariant()
{
  return &type metadata for FeedGroupBindingOptionsVariant;
}

uint64_t sub_1BB14A8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t result;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[2];
  uint64_t v48;

  v40 = a3;
  v5 = sub_1BB86F43C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LayeredMediaImageVariant();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v45 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  v15 = *(_OWORD *)(a2 + 16);
  v47[0] = *(_OWORD *)a2;
  v47[1] = v15;
  v48 = *(_QWORD *)(a2 + 32);
  v16 = MEMORY[0x1E0DEE9D8];
  v46 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v17)
  {
    v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v19 = *(_QWORD *)(v10 + 72);
    v38 = a1;
    v20 = v17;
    v43 = v18;
    v21 = a1 + v18;
    v22 = *MEMORY[0x1E0DB67F0];
    v23 = *MEMORY[0x1E0DB67E8];
    v37 = v20;
    v24 = v20;
    v44 = v9;
    v41 = v23;
    v42 = v22;
    while (1)
    {
      sub_1BB10205C(v21, (uint64_t)v14);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v14[*(int *)(v9 + 24)], v5);
      v25 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
      if (v25 == v22)
        goto LABEL_3;
      if (v25 != v23)
      {
        result = sub_1BB873EAC();
        __break(1u);
        return result;
      }
      if ((objc_msgSend((id)objc_opt_self(), sel_hasExtendedColorDisplay) & 1) == 0)
      {
LABEL_3:
        sub_1BB14AC9C((uint64_t)v14);
      }
      else
      {
        sub_1BAA9E444((uint64_t)v14, v45);
        v26 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7A2CC(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = v46;
        }
        v28 = *(_QWORD *)(v26 + 16);
        v27 = *(_QWORD *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1BAC7A2CC(v27 > 1, v28 + 1, 1);
          v26 = v46;
        }
        *(_QWORD *)(v26 + 16) = v28 + 1;
        sub_1BAA9E444(v45, v26 + v43 + v28 * v19);
        v9 = v44;
        v23 = v41;
        v22 = v42;
      }
      v21 += v19;
      if (!--v24)
      {
        v16 = v46;
        v17 = v37;
        a1 = v38;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1ED39E0B0 != -1)
    swift_once();
  v29 = (void *)qword_1ED4763D0;
  sub_1BA7AA598();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BB87A390;
  v31 = *(_QWORD *)(v16 + 16);
  v32 = MEMORY[0x1E0DEB418];
  v33 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v30 + 64) = v33;
  *(_QWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 96) = v32;
  *(_QWORD *)(v30 + 104) = v33;
  *(_QWORD *)(v30 + 72) = v17;
  v34 = v29;
  sub_1BB87330C();
  sub_1BB86EF44("Found %d wide color variants in total of %d variants", v36, v37);

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v16 + 16))
  {
    a1 = v16;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRetain();
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v39 + 16), *(_QWORD *)(v39 + 40));
  sub_1BB5515C0(a1, (double *)v47, v40);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB14AC9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LayeredMediaImageVariant();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding()
{
  return &type metadata for FormatPuzzleTypeBinding;
}

_QWORD *sub_1BB14ACE8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(_OWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  __int128 v52;
  uint64_t v53;
  void (*v54)(_OWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  _QWORD *v69;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t inited;
  void *v76;
  __int128 v77;
  __int128 v78;
  _QWORD *v79;
  _QWORD *v80;
  __int128 *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  int v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;

  v2 = type metadata accessor for FormatInspectionItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v71 - v7;
  v9 = *a1;
  v73 = a1[1];
  v74 = v9;
  v72 = *((unsigned __int8 *)a1 + 16);
  v11 = a1[3];
  v10 = a1[4];
  v12 = a1[6];
  v71 = a1[5];
  v13 = (void *)a1[7];
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v98 = MEMORY[0x1E0DEE9D8];
  v83 = v8;
  v80 = v8 + 16;
  v81 = (__int128 *)v5;
  v79 = v5 + 16;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, v14);
  v15 = 0;
  v16 = 0;
  v17 = *(_QWORD *)(v3 + 72);
  v18 = *(unsigned __int8 *)(v3 + 80);
  v19 = v13;
  v89 = (v18 + 32) & ~v18;
  v90 = v20;
  v88 = v89 + v17;
  v87 = v18 | 7;
  v86 = xmmword_1BB87CE70;
  v78 = xmmword_1BB8EF2E0;
  v77 = xmmword_1BB8EF2D0;
  v82 = v2;
  v76 = v13;
  do
  {
    LODWORD(v26) = v15;
    v27 = *((_BYTE *)&unk_1E724FB58 + v16 + 32);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = v86;
    v91 = v28;
    v29 = v28 + v89;
    if ((v27 & 1) != 0)
    {
      sub_1BB86D294();
      sub_1BA75A650(v11, v10);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1BB86D27C();
      if (qword_1ED3D5158 != -1)
        swift_once();
      sub_1BB86D270();
      swift_release();
      sub_1BA6E0CBC(v11, v10);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v92 = 0u;
      v93 = 0u;
      sub_1BA967B04((uint64_t)&v92, (uint64_t)&v102);
      if (*((_QWORD *)&v103 + 1))
      {
        sub_1BA967BB4((uint64_t)&v102, (uint64_t)&v99);
        sub_1BA967B60((uint64_t)&v92);
        v21 = v81;
        v30 = (__int128 *)((char *)v81 + *(int *)(v2 + 24));
        v31 = v100;
        *v30 = v99;
        v30[1] = v31;
        v32 = v12;
        v33 = v2;
        v34 = v29;
        v35 = v10;
        v36 = v11;
        v37 = v26;
        v26 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        v38 = *(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
        v39 = v26;
        LOBYTE(v26) = v37;
        v11 = v36;
        v10 = v35;
        v29 = v34;
        v2 = v33;
        v12 = v32;
        v19 = v76;
        v38(v30, 0, 1, v39);
        *v21 = v78;
        v40 = v79;
        *v79 = 0;
        v40[1] = 0;
        v41 = (char *)v21 + *(int *)(v2 + 28);
        *(_QWORD *)v41 = 0;
        *((_QWORD *)v41 + 1) = 0;
        v41[16] = -1;
        sub_1BA967BF0((uint64_t)&v102);
      }
      else
      {
        sub_1BA967B60((uint64_t)&v92);
        v21 = v81;
        v22 = (char *)v81 + *(int *)(v2 + 24);
        v23 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
        *v21 = v78;
        v24 = v79;
        *v79 = 0;
        v24[1] = 0;
        v25 = (char *)v21 + *(int *)(v2 + 28);
        *(_QWORD *)v25 = 0;
        *((_QWORD *)v25 + 1) = 0;
        v25[16] = -1;
      }
      sub_1BAFBC4F8((uint64_t)v21, v29);
    }
    else
    {
      v84 = v28 + v89;
      v85 = v26;
      sub_1BB86D294();
      sub_1BA75A650(v11, v10);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1BB86D27C();
      v42 = v12;
      if (qword_1ED3D5158 != -1)
        swift_once();
      sub_1BB86D270();
      swift_release();
      v43 = objc_msgSend(v19, sel_name);
      v44 = sub_1BB8729A0();
      v46 = v45;

      sub_1BA6E0CBC(v11, v10);
      swift_unknownObjectRelease();
      v47 = v42;
      swift_bridgeObjectRelease();
      v48 = HIBYTE(v46) & 0xF;
      if ((v46 & 0x2000000000000000) == 0)
        v48 = v44 & 0xFFFFFFFFFFFFLL;
      if (v48)
      {
        *(_QWORD *)&v92 = v44;
        *((_QWORD *)&v92 + 1) = v46;
        v49 = MEMORY[0x1E0DEA968];
      }
      else
      {
        swift_bridgeObjectRelease();
        v49 = 0;
        v92 = 0uLL;
        *(_QWORD *)&v93 = 0;
      }
      v26 = (uint64_t)v83;
      v50 = v84;
      *((_QWORD *)&v93 + 1) = v49;
      sub_1BA967B04((uint64_t)&v92, (uint64_t)&v102);
      if (*((_QWORD *)&v103 + 1))
      {
        sub_1BA967BB4((uint64_t)&v102, (uint64_t)&v99);
        sub_1BA967B60((uint64_t)&v92);
        v2 = v82;
        v51 = (_OWORD *)(v26 + *(int *)(v82 + 24));
        v52 = v100;
        *v51 = v99;
        v51[1] = v52;
        v53 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        v54 = *(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
        v55 = v53;
        v26 = (uint64_t)v83;
        v54(v51, 0, 1, v55);
        *(_OWORD *)v26 = v77;
        v56 = v80;
        *v80 = 0;
        v56[1] = 0;
        v57 = v26 + *(int *)(v2 + 28);
        *(_QWORD *)v57 = 0;
        *(_QWORD *)(v57 + 8) = 0;
        *(_BYTE *)(v57 + 16) = -1;
        sub_1BA967BF0((uint64_t)&v102);
      }
      else
      {
        sub_1BA967B60((uint64_t)&v92);
        v2 = v82;
        v58 = v26 + *(int *)(v82 + 24);
        v59 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
        *(_OWORD *)v26 = v77;
        v60 = v80;
        *v80 = 0;
        v60[1] = 0;
        v61 = v26 + *(int *)(v2 + 28);
        *(_QWORD *)v61 = 0;
        *(_QWORD *)(v61 + 8) = 0;
        *(_BYTE *)(v61 + 16) = -1;
      }
      sub_1BAFBC4F8(v26, v50);
      LOBYTE(v26) = v85;
      v12 = v47;
    }
    sub_1BB383BA8(v91);
    v15 = 1;
    v16 = 1u;
  }
  while ((v26 & 1) == 0);
  v62 = sub_1BA97461C(v98);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x7954656C7A7A7550, 0xEA00000000006570, 0, 0, v62, &v99);
  swift_bridgeObjectRelease();
  v63 = v12;
  v64 = (_QWORD *)inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  v64[8] = &off_1E72D2F60;
  v65 = swift_allocObject();
  v64[4] = v65;
  *(_QWORD *)(v65 + 48) = v101;
  v66 = v100;
  *(_OWORD *)(v65 + 16) = v99;
  *(_OWORD *)(v65 + 32) = v66;
  *(_QWORD *)&v92 = v74;
  *((_QWORD *)&v92 + 1) = v73;
  LOBYTE(v93) = v72;
  *((_QWORD *)&v93 + 1) = v11;
  v94 = v10;
  v95 = v71;
  v96 = v63;
  v97 = v19;
  sub_1BB28AFE4(&v92, (uint64_t)&v102);
  v64[12] = &type metadata for FormatInspectionGroup;
  v64[13] = &off_1E72D2F60;
  v67 = swift_allocObject();
  v64[9] = v67;
  *(_QWORD *)(v67 + 48) = v104;
  v68 = v103;
  *(_OWORD *)(v67 + 16) = v102;
  *(_OWORD *)(v67 + 32) = v68;
  v69 = sub_1BB6DF010((uint64_t)v64);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v69;
}

void sub_1BB14B40C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AB478)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AB478);
  }
}

uint64_t sub_1BB14B460()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB14B494()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B8770;
  if (!qword_1ED3B8770)
  {
    v1 = type metadata accessor for FormatMicaSectionDecorationItem();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaSectionDecorationItem, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B8770);
  }
  return result;
}

void sub_1BB14B4DC()
{
  __asm { BR              X11 }
}

id sub_1BB14B524()
{
  double v0;
  double v1;
  double v2;
  double v3;

  return objc_msgSend(objc_allocWithZone((Class)sub_1BB870BD0()), sel_initWithFrame_, v3, v2, v1, v0);
}

void sub_1BB14B590()
{
  sub_1BB14B4DC();
}

uint64_t FeedHeadlineAudioCommandContext.headline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1, a1, type metadata accessor for FeedHeadline);
}

NewsFeed::FeedAudioPlaybackState_optional __swiftcall FeedAudioPlaybackState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedAudioPlaybackState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedAudioPlaybackState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB14B678 + 4 * byte_1BB8EF350[*v0]))(0x6C616974696E69, 0xE700000000000000);
}

uint64_t sub_1BB14B678()
{
  return 0x676E6979616C70;
}

uint64_t sub_1BB14B68C()
{
  return 0x646573756170;
}

uint64_t sub_1BB14B6A0()
{
  return 0x6574656C706D6F63;
}

void sub_1BB14B6BC(char *a1)
{
  sub_1BB805C9C(*a1);
}

void sub_1BB14B6C8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB14B714()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB14B780()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB14B7BC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB14B814()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB14B85C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedAudioPlaybackState_optional sub_1BB14B8C8(Swift::String *a1)
{
  return FeedAudioPlaybackState.init(rawValue:)(*a1);
}

uint64_t sub_1BB14B8D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB14B904 + 4 * byte_1BB8EF360[*v0]))();
}

void sub_1BB14B904(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E6979616C70;
  a1[1] = v1;
}

void sub_1BB14B91C(_QWORD *a1@<X8>)
{
  *a1 = 0x646573756170;
  a1[1] = 0xE600000000000000;
}

void sub_1BB14B934(_QWORD *a1@<X8>)
{
  *a1 = 0x6574656C706D6F63;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1BB14B954()
{
  sub_1BB14F024();
  return sub_1BB872CE8();
}

BOOL static AudioPlayMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AudioPlayMethod.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t AudioPlayMethod.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

BOOL static AudioOrigin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AudioOrigin.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t AudioCommandContext.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t AudioCommandContext.source.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t AudioCommandContext.method.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 32));
  return result;
}

uint64_t AudioCommandContext.origin.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 36));
  return result;
}

uint64_t AudioCommandContext.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA4D78C8(v2 + *(int *)(a1 + 40), a2);
}

uint64_t AudioCommandContext.init(data:source:method:origin:metadata:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;

  v10 = *a2;
  v11 = *a3;
  v12 = *a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a7, a1, a6);
  v15 = (int *)type metadata accessor for AudioCommandContext(0, a6, v13, v14);
  *(_BYTE *)(a7 + v15[7]) = v10;
  *(_BYTE *)(a7 + v15[8]) = v11;
  *(_BYTE *)(a7 + v15[9]) = v12;
  return sub_1BA78DE64(a5, a7 + v15[10]);
}

uint64_t AudioCommandContext.copy<A>(with:)@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[37];
  char v17;
  char v18;
  char v19;

  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, double))(v11 + 16))(v10, v8);
  v12 = a2[8];
  v19 = *(_BYTE *)(v4 + a2[7]);
  v18 = *(_BYTE *)(v4 + v12);
  v13 = a2[10];
  v17 = *(_BYTE *)(v4 + a2[9]);
  sub_1BA4D78C8(v4 + v13, (uint64_t)v16);
  return AudioCommandContext.init(data:source:method:origin:metadata:)((uint64_t)v10, &v19, &v18, &v17, (uint64_t)v16, a3, a4);
}

uint64_t static AudioCommandContext<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  int v24;
  void (*v25)(_BYTE *, uint64_t);
  int v26;
  char v27;
  char v28;
  _BYTE v30[48];
  _BYTE v31[48];
  _BYTE v32[48];
  _BYTE v33[48];

  v6 = objc_msgSend(*(id *)a1, sel_identifier);
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = objc_msgSend(*(id *)a2, sel_identifier);
  v11 = sub_1BB8729A0();
  v13 = v12;

  if (v7 == v11 && v9 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = 0;
    if ((v15 & 1) == 0)
      return v18 & 1;
  }
  v19 = *(unsigned __int8 *)(a1 + 10);
  v20 = *(unsigned __int8 *)(a2 + 10);
  v21 = type metadata accessor for AudioCommandContext(0, a3, v16, v17);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v22 + 16);
  v23(v33, a1, v21);
  v23(v32, a2, v21);
  if (v19 != v20)
  {
    v25 = *(void (**)(_BYTE *, uint64_t))(v22 + 8);
    v25(v32, v21);
    v25(v33, v21);
    v23(v31, a1, v21);
    v23(v30, a2, v21);
    goto LABEL_12;
  }
  v24 = v33[8];
  v25 = *(void (**)(_BYTE *, uint64_t))(v22 + 8);
  v25(v33, v21);
  v26 = v32[8];
  v25(v32, v21);
  v23(v31, a1, v21);
  v23(v30, a2, v21);
  if (v24 != v26)
  {
LABEL_12:
    v25(v30, v21);
    v25(v31, v21);
    v18 = 0;
    return v18 & 1;
  }
  v27 = v31[9];
  v25(v31, v21);
  v28 = v30[9];
  v25(v30, v21);
  v18 = v27 ^ v28 ^ 1;
  return v18 & 1;
}

uint64_t sub_1BB14BE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static AudioCommandContext<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t static ContextMenuGroup.Audio.playLaterInNews(headline:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB14C2A0(a2);
}

uint64_t static ContextMenuItem.Audio.playLaterInNewsItems(headline:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v3 + 32) = sub_1BB14BED0(a2);
  *(_QWORD *)(v3 + 40) = sub_1BB14C0B8(a2);
  sub_1BB872DCC();
  return v3;
}

uint64_t static ContextMenuItem.Audio.playLaterInNewsNext(headline:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB14BED0(a2);
}

uint64_t static ContextMenuItem.Audio.playLaterInNewsLast(headline:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB14C0B8(a2);
}

uint64_t sub_1BB14BED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v12[48];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED3A1858[0] != -1)
    swift_once();
  sub_1BA4C2DD8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA7E84C0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72D0 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C47A0;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

uint64_t sub_1BB14C0B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v12[48];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED3ABA80 != -1)
    swift_once();
  sub_1BA4C2DD8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA7E84C0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72D8 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C47A8;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

uint64_t sub_1BB14C2A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t inited;
  uint64_t v10;
  unint64_t v11;

  v2 = sub_1BB86FD90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(inited + 32) = sub_1BB14BED0(a1);
  *(_QWORD *)(inited + 40) = sub_1BB14C0B8(a1);
  v11 = inited;
  sub_1BB872DCC();
  sub_1BA975EB4(v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB7CF0], v2);
  sub_1BB86FD84();
  swift_allocObject();
  return sub_1BB86FD6C();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV9listenNow8headline14ignorePlaylistACSgSo19FCHeadlineProviding_p_SbtFZ_0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;
  __int16 v15;
  char v16;
  __int128 v17;
  __int128 v18;

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    if (qword_1ED3BC1A0 == -1)
      goto LABEL_5;
    goto LABEL_8;
  }
  if (qword_1ED3BC0F8 != -1)
LABEL_8:
    swift_once();
LABEL_5:
  v17 = 0u;
  v18 = 0u;
  v14 = a1;
  v15 = 0;
  v16 = 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72B8 != -1)
    swift_once();
  v11 = (void *)qword_1EF2C4788;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8530], v4);
  sub_1BB86FB38();
  swift_allocObject();
  v12 = v11;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV07previewH08headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;
  __int16 v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BC0F8 != -1)
    swift_once();
  v15 = 0u;
  v16 = 0u;
  v12 = a1;
  v13 = 0;
  v14 = 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72B8 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C4788;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV10listenNext8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;
  __int16 v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED39F060 != -1)
    swift_once();
  v15 = 0u;
  v16 = 0u;
  v12 = a1;
  v13 = 0;
  v14 = 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72C0 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C4790;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV11listenLater8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;
  __int16 v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED39F040 != -1)
    swift_once();
  v15 = 0u;
  v16 = 0u;
  v12 = a1;
  v13 = 0;
  v14 = 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72C8 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C4798;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV6remove8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;
  __int16 v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED39F020 != -1)
    swift_once();
  v15 = 0u;
  v16 = 0u;
  v12 = a1;
  v13 = 0;
  v14 = 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72E0 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C47B0;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8520], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV010removeFromH7History8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;
  __int16 v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A40D0 != -1)
    swift_once();
  v15 = 0u;
  v16 = 0u;
  v12 = a1;
  v13 = 0;
  v14 = 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72E0 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C47B0;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8520], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV010removeFromH8Playlist8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;
  __int16 v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A40E8 != -1)
    swift_once();
  v15 = 0u;
  v16 = 0u;
  v12 = a1;
  v13 = 0;
  v14 = 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72E0 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C47B0;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8520], v2);
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

unint64_t sub_1BB14D244()
{
  unint64_t result;

  result = qword_1EF2BBEA8;
  if (!qword_1EF2BBEA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AudioListeningSource, &type metadata for AudioListeningSource);
    atomic_store(result, (unint64_t *)&qword_1EF2BBEA8);
  }
  return result;
}

unint64_t sub_1BB14D28C()
{
  unint64_t result;

  result = qword_1EF2BBEB0;
  if (!qword_1EF2BBEB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AudioPlayMethod, &type metadata for AudioPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1EF2BBEB0);
  }
  return result;
}

unint64_t sub_1BB14D2D4()
{
  unint64_t result;

  result = qword_1EF2BBEB8[0];
  if (!qword_1EF2BBEB8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AudioOrigin, &type metadata for AudioOrigin);
    atomic_store(result, qword_1EF2BBEB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.FeedAudio()
{
  return &type metadata for Commands.FeedAudio;
}

ValueMetadata *type metadata accessor for Commands.Audio()
{
  return &type metadata for Commands.Audio;
}

uint64_t initializeBufferWithCopyOfBuffer for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, int *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v42;
  uint64_t v43;
  char *__dst;
  int *v45;
  int *v46;

  v4 = type metadata accessor for FeedHeadline(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v46 = (int *)v4;
    v8 = *(int *)(v4 + 40);
    v9 = (_BYTE *)(a1 + v8);
    v10 = (uint64_t)a2 + v8;
    *v9 = *((_BYTE *)a2 + v8);
    v9[1] = *((_BYTE *)a2 + v8 + 1);
    v11 = type metadata accessor for FeedHeadline.State(0);
    v12 = *(int *)(v11 + 24);
    __dst = &v9[v12];
    v45 = (int *)v11;
    v13 = (char *)(v10 + v12);
    v14 = (int *)type metadata accessor for SharedItem();
    v43 = *((_QWORD *)v14 - 1);
    v15 = *(unsigned int (**)(char *, uint64_t, int *))(v43 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v15(v13, 1, v14))
    {
      v16 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(__dst, v13, v18);
      __dst[v14[5]] = v13[v14[5]];
      v19 = v14[6];
      v20 = *(void **)&v13[v19];
      *(_QWORD *)&__dst[v19] = v20;
      v21 = v14[7];
      v42 = &__dst[v21];
      v22 = &v13[v21];
      v23 = sub_1BB86C67C();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      v25 = v20;
      v24(v42, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v43 + 56))(__dst, 0, 1, v14);
    }
    v9[v45[7]] = *(_BYTE *)(v10 + v45[7]);
    v9[v45[8]] = *(_BYTE *)(v10 + v45[8]);
    v9[v45[9]] = *(_BYTE *)(v10 + v45[9]);
    v9[v45[10]] = *(_BYTE *)(v10 + v45[10]);
    v26 = v46[11];
    v27 = (void *)(a1 + v26);
    v28 = (char *)a2 + v26;
    v29 = sub_1BB871B24();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = v46[12];
    v33 = (_QWORD *)(a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    if (v35 >= 0x11)
    {
      *v33 = *v34;
      v33[1] = v35;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    v36 = v46[13];
    v37 = *(uint64_t *)((char *)a2 + v36);
    if (v37 >= 2)
    {
      if (v37 == 2)
      {
        *(_QWORD *)(a1 + v36) = 2;
      }
      else
      {
        *(_QWORD *)(a1 + v36) = v37;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(_QWORD *)(a1 + v36) = v37;
    }
    v38 = v46[14];
    v39 = *(void **)((char *)a2 + v38);
    *(_QWORD *)(a1 + v38) = v39;
    v40 = v39;
  }
  return a1;
}

void destroy for FeedHeadlineAudioCommandContext(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v2 = (int *)type metadata accessor for FeedHeadline(0);
  v3 = a1 + v2[10];
  v4 = v3 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v5 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);

    v7 = v4 + *(int *)(v5 + 28);
    v8 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + v2[11];
  v10 = sub_1BB871B24();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  if (*(_QWORD *)(a1 + v2[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + v2[13]) >= 3uLL)
    swift_unknownObjectRelease();

}

uint64_t initializeWithCopy for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  int *v12;
  unsigned int (*v13)(char *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  char *v38;
  uint64_t v39;
  char *v40;
  char *__dst;
  int *v42;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v42 = (int *)type metadata accessor for FeedHeadline(0);
  v6 = v42[10];
  v7 = (_BYTE *)(a1 + v6);
  v8 = a2 + v6;
  *v7 = *(_BYTE *)(a2 + v6);
  v7[1] = *(_BYTE *)(a2 + v6 + 1);
  v9 = (int *)type metadata accessor for FeedHeadline.State(0);
  v10 = v9[6];
  __dst = &v7[v10];
  v11 = (char *)(v8 + v10);
  v12 = (int *)type metadata accessor for SharedItem();
  v39 = *((_QWORD *)v12 - 1);
  v13 = *(unsigned int (**)(char *, uint64_t, int *))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v13(v11, 1, v12))
  {
    v14 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(__dst, v11, v15);
    __dst[v12[5]] = v11[v12[5]];
    v16 = v12[6];
    v17 = *(void **)&v11[v16];
    *(_QWORD *)&__dst[v16] = v17;
    v18 = v12[7];
    v40 = &__dst[v18];
    v38 = &v11[v18];
    v19 = sub_1BB86C67C();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v21 = v17;
    v20(v40, v38, v19);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v39 + 56))(__dst, 0, 1, v12);
  }
  v7[v9[7]] = *(_BYTE *)(v8 + v9[7]);
  v7[v9[8]] = *(_BYTE *)(v8 + v9[8]);
  v7[v9[9]] = *(_BYTE *)(v8 + v9[9]);
  v7[v9[10]] = *(_BYTE *)(v8 + v9[10]);
  v22 = v42[11];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = sub_1BB871B24();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = v42[12];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  if (v31 >= 0x11)
  {
    *v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  v32 = v42[13];
  v33 = *(_QWORD *)(a2 + v32);
  if (v33 >= 2)
  {
    if (v33 == 2)
    {
      *(_QWORD *)(a1 + v32) = 2;
    }
    else
    {
      *(_QWORD *)(a1 + v32) = v33;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(_QWORD *)(a1 + v32) = v33;
  }
  v34 = v42[14];
  v35 = *(void **)(a2 + v34);
  *(_QWORD *)(a1 + v34) = v35;
  v36 = v35;
  return a1;
}

uint64_t assignWithCopy for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int *v12;
  uint64_t (*v13)(_BYTE *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  char *v57;
  char *v58;
  uint64_t v59;
  int *v60;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v60 = (int *)type metadata accessor for FeedHeadline(0);
  v5 = v60[10];
  v6 = (_BYTE *)(a1 + v5);
  v7 = a2 + v5;
  *v6 = *(_BYTE *)(a2 + v5);
  v6[1] = *(_BYTE *)(a2 + v5 + 1);
  v8 = (int *)type metadata accessor for FeedHeadline.State(0);
  v9 = v8[6];
  v10 = &v6[v9];
  v11 = (_BYTE *)(v7 + v9);
  v12 = (int *)type metadata accessor for SharedItem();
  v59 = *((_QWORD *)v12 - 1);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v59 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (v14)
  {
    if (!v15)
    {
      v16 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
      v10[v12[5]] = v11[v12[5]];
      v17 = v12[6];
      v18 = *(void **)&v11[v17];
      *(_QWORD *)&v10[v17] = v18;
      v19 = v12[7];
      v57 = &v11[v19];
      v58 = &v10[v19];
      v20 = sub_1BB86C67C();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v22 = v18;
      v21(v58, v57, v20);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v59 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_1BB14DF2C((uint64_t)v10);
LABEL_6:
    v23 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  v43 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v10, v11, v43);
  v10[v12[5]] = v11[v12[5]];
  v44 = v12[6];
  v45 = *(void **)&v11[v44];
  v46 = *(void **)&v10[v44];
  *(_QWORD *)&v10[v44] = v45;
  v47 = v45;

  v48 = v12[7];
  v49 = &v10[v48];
  v50 = &v11[v48];
  v51 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
LABEL_7:
  v6[v8[7]] = *(_BYTE *)(v7 + v8[7]);
  v6[v8[8]] = *(_BYTE *)(v7 + v8[8]);
  v6[v8[9]] = *(_BYTE *)(v7 + v8[9]);
  v6[v8[10]] = *(_BYTE *)(v7 + v8[10]);
  v24 = v60[11];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = sub_1BB871B24();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
LABEL_12:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_13:
  v33 = v60[12];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  v36 = *(_QWORD *)(a1 + v33 + 8);
  v37 = *(_QWORD *)(a2 + v33 + 8);
  if (v36 < 0x11)
  {
    if (v37 >= 0x11)
    {
      *v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v37 < 0x11)
  {
    sub_1BA905D68((uint64_t)v34);
LABEL_18:
    *(_OWORD *)v34 = *(_OWORD *)v35;
    goto LABEL_20;
  }
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_20:
  v38 = v60[13];
  v39 = (_QWORD *)(a1 + v38);
  v40 = *(_QWORD *)(a1 + v38);
  v41 = *(_QWORD *)(a2 + v38);
  if (v40 == 2)
  {
    if (v41 >= 2)
    {
      if (v41 == 2)
      {
        v42 = 2;
LABEL_35:
        *v39 = v42;
        goto LABEL_36;
      }
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v41 == 2)
  {
    sub_1BA905D9C(a1 + v38);
LABEL_34:
    v42 = *(_QWORD *)(a2 + v38);
    goto LABEL_35;
  }
  if (v40 >= 2)
  {
    if (v41 >= 2)
    {
      *v39 = v41;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_36;
    }
    swift_unknownObjectRelease();
    goto LABEL_34;
  }
  if (v41 >= 2)
  {
LABEL_29:
    *v39 = v41;
    swift_unknownObjectRetain();
    goto LABEL_36;
  }
LABEL_28:
  *v39 = v41;
LABEL_36:
  v52 = v60[14];
  v53 = *(void **)(a1 + v52);
  v54 = *(void **)(a2 + v52);
  *(_QWORD *)(a1 + v52) = v54;
  v55 = v54;

  return a1;
}

uint64_t sub_1BB14DF2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharedItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = (int *)type metadata accessor for FeedHeadline(0);
  v5 = v4[10];
  v6 = (_BYTE *)(a1 + v5);
  v7 = a2 + v5;
  *v6 = *(_BYTE *)(a2 + v5);
  v6[1] = *(_BYTE *)(a2 + v5 + 1);
  v8 = (int *)type metadata accessor for FeedHeadline.State(0);
  v9 = v8[6];
  v10 = &v6[v9];
  v11 = (char *)(v7 + v9);
  v12 = (int *)type metadata accessor for SharedItem();
  v13 = *((_QWORD *)v12 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    v14 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    v10[v12[5]] = v11[v12[5]];
    *(_QWORD *)&v10[v12[6]] = *(_QWORD *)&v11[v12[6]];
    v16 = v12[7];
    v28 = &v10[v16];
    v17 = &v11[v16];
    v18 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v28, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  }
  v6[v8[7]] = *(_BYTE *)(v7 + v8[7]);
  v6[v8[8]] = *(_BYTE *)(v7 + v8[8]);
  v6[v8[9]] = *(_BYTE *)(v7 + v8[9]);
  v6[v8[10]] = *(_BYTE *)(v7 + v8[10]);
  v19 = v4[11];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1BB871B24();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(_OWORD *)(a1 + v4[12]) = *(_OWORD *)(a2 + v4[12]);
  v25 = v4[13];
  v26 = *(_QWORD *)(a2 + v25);
  if (v26 == 2)
    v26 = 2;
  *(_QWORD *)(a1 + v25) = v26;
  *(_QWORD *)(a1 + v4[14]) = *(_QWORD *)(a2 + v4[14]);
  return a1;
}

uint64_t assignWithTake for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int *v13;
  uint64_t (*v14)(_BYTE *, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v50;
  int *v51;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v51 = (int *)type metadata accessor for FeedHeadline(0);
  v6 = v51[10];
  v7 = (_BYTE *)(a1 + v6);
  v8 = a2 + v6;
  *v7 = *(_BYTE *)(a2 + v6);
  v7[1] = *(_BYTE *)(a2 + v6 + 1);
  v9 = (int *)type metadata accessor for FeedHeadline.State(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = (_BYTE *)(v8 + v10);
  v13 = (int *)type metadata accessor for SharedItem();
  v50 = *((_QWORD *)v13 - 1);
  v14 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v50 + 48);
  v15 = v14(v11, 1, v13);
  v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      v17 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v11, v12, v17);
      v11[v13[5]] = v12[v13[5]];
      *(_QWORD *)&v11[v13[6]] = *(_QWORD *)&v12[v13[6]];
      v18 = v13[7];
      v19 = &v11[v18];
      v20 = &v12[v18];
      v21 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v50 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1BB14DF2C((uint64_t)v11);
LABEL_6:
    v22 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v40 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v11, v12, v40);
  v11[v13[5]] = v12[v13[5]];
  v41 = v13[6];
  v42 = *(void **)&v11[v41];
  *(_QWORD *)&v11[v41] = *(_QWORD *)&v12[v41];

  v43 = v13[7];
  v44 = &v11[v43];
  v45 = &v12[v43];
  v46 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
LABEL_7:
  v7[v9[7]] = *(_BYTE *)(v8 + v9[7]);
  v7[v9[8]] = *(_BYTE *)(v8 + v9[8]);
  v7[v9[9]] = *(_BYTE *)(v8 + v9[9]);
  v7[v9[10]] = *(_BYTE *)(v8 + v9[10]);
  v23 = v51[11];
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = sub_1BB871B24();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
LABEL_12:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
LABEL_13:
  v32 = v51[12];
  v33 = a1 + v32;
  v34 = a2 + v32;
  if (*(_QWORD *)(a1 + v32 + 8) < 0x11uLL)
  {
LABEL_16:
    *(_OWORD *)v33 = *(_OWORD *)v34;
    goto LABEL_18;
  }
  v35 = *(_QWORD *)(v34 + 8);
  if (v35 < 0x11)
  {
    sub_1BA905D68(v33);
    goto LABEL_16;
  }
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v35;
  swift_bridgeObjectRelease();
LABEL_18:
  v36 = v51[13];
  v37 = (unint64_t *)(a1 + v36);
  v38 = *(_QWORD *)(a1 + v36);
  v39 = *(_QWORD *)(a2 + v36);
  if (v38 == 2)
  {
    if (v39 == 2)
      v39 = 2;
    goto LABEL_30;
  }
  if (v39 == 2)
  {
    sub_1BA905D9C(a1 + v36);
  }
  else
  {
    if (v38 < 2)
      goto LABEL_30;
    if (v39 >= 2)
    {
      *v37 = v39;
      swift_unknownObjectRelease();
      goto LABEL_31;
    }
    swift_unknownObjectRelease();
  }
  v39 = *(_QWORD *)(a2 + v36);
LABEL_30:
  *v37 = v39;
LABEL_31:
  v47 = v51[14];
  v48 = *(void **)(a1 + v47);
  *(_QWORD *)(a1 + v47) = *(_QWORD *)(a2 + v47);

  return a1;
}

uint64_t getEnumTagSinglePayload for FeedHeadlineAudioCommandContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB14E600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedHeadline(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedHeadlineAudioCommandContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB14E648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedHeadline(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedAudioPlaybackState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB14E6D4 + 4 * byte_1BB8EF369[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB14E708 + 4 * byte_1BB8EF364[v4]))();
}

uint64_t sub_1BB14E708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB14E710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB14E718);
  return result;
}

uint64_t sub_1BB14E724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB14E72CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB14E730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB14E738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioListeningSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB14E790 + 4 * byte_1BB8EF373[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB14E7C4 + 4 * byte_1BB8EF36E[v4]))();
}

uint64_t sub_1BB14E7C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB14E7CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB14E7D4);
  return result;
}

uint64_t sub_1BB14E7E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB14E7E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB14E7EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB14E7F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioListeningSource()
{
  return &type metadata for AudioListeningSource;
}

uint64_t storeEnumTagSinglePayload for AudioPlayMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB14E85C + 4 * byte_1BB8EF37D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB14E890 + 4 * byte_1BB8EF378[v4]))();
}

uint64_t sub_1BB14E890(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB14E898(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB14E8A0);
  return result;
}

uint64_t sub_1BB14E8AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB14E8B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB14E8B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB14E8C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioPlayMethod()
{
  return &type metadata for AudioPlayMethod;
}

uint64_t storeEnumTagSinglePayload for AudioOrigin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BB14E928 + 4 * byte_1BB8EF387[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BB14E95C + 4 * byte_1BB8EF382[v4]))();
}

uint64_t sub_1BB14E95C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB14E964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB14E96CLL);
  return result;
}

uint64_t sub_1BB14E978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB14E980);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BB14E984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB14E98C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioOrigin()
{
  return &type metadata for AudioOrigin;
}

_QWORD *sub_1BB14E9A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 10) & 0xFFFFFFFFFFFFFFF8) + 32 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v10 = (char *)v4 + v6;
    *v10 = *((_BYTE *)a2 + v6);
    v10[1] = *((_BYTE *)a2 + v6 + 1);
    v10[2] = *((_BYTE *)a2 + v6 + 2);
    v11 = ((unint64_t)v4 + v6 + 10) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)a2 + v6 + 10) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_QWORD *)(v12 + 24);
    if (v13 < 0xFFFFFFFF)
    {
      v14 = *(_OWORD *)(v12 + 16);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *(_OWORD *)(v11 + 16) = v14;
    }
    else
    {
      *(_QWORD *)(v11 + 24) = v13;
      (**(void (***)(void))(v13 - 8))();
    }
  }
  return v4;
}

unint64_t sub_1BB14EA94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  result = (a1 + *(_QWORD *)(v3 + 64) + 10) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

uint64_t sub_1BB14EAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (_BYTE *)(v6 + a1);
  v8 = (_BYTE *)(v6 + a2);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v9 = (unint64_t)(v7 + 10) & 0xFFFFFFFFFFFFFFF8;
  v10 = (unint64_t)(v8 + 10) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 24);
  if (v11 < 0xFFFFFFFF)
  {
    v12 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v12;
  }
  else
  {
    *(_QWORD *)(v9 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
  }
  return a1;
}

uint64_t sub_1BB14EB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (_BYTE *)(v6 + a1);
  v8 = (_BYTE *)(v6 + a2);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v9 = (unint64_t)(v7 + 10) & 0xFFFFFFFFFFFFFFF8;
  v10 = (unint64_t)(v8 + 10) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 24);
  if (*(_QWORD *)(v9 + 24) < 0xFFFFFFFFuLL)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(v9 + 24) = v11;
      (**(void (***)(unint64_t, unint64_t))(v11 - 8))(v9, v10);
      return a1;
    }
LABEL_7:
    v12 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v12;
    return a1;
  }
  if (v11 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(v9);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)v9, (uint64_t *)v10);
  return a1;
}

uint64_t sub_1BB14EC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (_BYTE *)(v6 + a1);
  v8 = (_BYTE *)(v6 + a2);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v9 = (_OWORD *)((unint64_t)(v7 + 10) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((unint64_t)(v8 + 10) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  return a1;
}

uint64_t sub_1BB14ECD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD *v10;
  __int128 v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (_BYTE *)(v6 + a1);
  v8 = v6 + a2;
  *v7 = *(_BYTE *)(v6 + a2);
  v7[1] = *(_BYTE *)(v6 + a2 + 1);
  v7[2] = *(_BYTE *)(v6 + a2 + 2);
  v9 = (v6 + a1 + 10) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v9 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_1(v9);
  v10 = (_OWORD *)((v8 + 10) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  *(_OWORD *)v9 = *v10;
  *(_OWORD *)(v9 + 16) = v11;
  return a1;
}

uint64_t sub_1BB14ED68(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 10) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      if ((v12 + 1) >= 2)
        return v12;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 10) & 0xFFFFFFFFFFFFFFF8) + 32) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB14EDE4 + 4 * byte_1BB8EF38C[v10]))();
  }
}

void sub_1BB14EE70(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 10) & 0xFFFFFFF8) == 0xFFFFFFE0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 10) & 0xFFFFFFF8) != 0xFFFFFFE0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 10) & 0xFFFFFFFFFFFFFFF8) + 32);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BB14EF64()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BB14EFECLL);
}

void sub_1BB14EF6C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BB14EF74);
  JUMPOUT(0x1BB14EFECLL);
}

void sub_1BB14EFBC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB14EFECLL);
}

void sub_1BB14EFC4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB14EFECLL);
}

uint64_t sub_1BB14EFCC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x1BB14EFD8);
    *(_QWORD *)(((v6 + v5 + 10) & 0xFFFFFFFFFFFFFFF8) + 24) = a2;
LABEL_6:
    JUMPOUT(0x1BB14EFECLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

ValueMetadata *type metadata accessor for ContextMenuGroup.Audio()
{
  return &type metadata for ContextMenuGroup.Audio;
}

ValueMetadata *type metadata accessor for ContextMenuItem.Audio()
{
  return &type metadata for ContextMenuItem.Audio;
}

unint64_t sub_1BB14F024()
{
  unint64_t result;

  result = qword_1ED3C59F8;
  if (!qword_1ED3C59F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedAudioPlaybackState, &type metadata for FeedAudioPlaybackState);
    atomic_store(result, (unint64_t *)&qword_1ED3C59F8);
  }
  return result;
}

void sub_1BB14F068(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BB86F6E8();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t FormatDataAccessibilityValue.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1BA62ECD4(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t FormatDataAccessibilityValue.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_1BA62ECD4(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatDataAccessibilityValue()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for A12_V10()
{
  return &type metadata for A12_V10;
}

uint64_t sub_1BB14F150(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[19];
  _BYTE v15[304];
  char v16;

  sub_1BA4CDF6C(0, &qword_1EF2BC028, (uint64_t (*)(void))sub_1BB152CE4, (uint64_t)&type metadata for A12_V10.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v12 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  memcpy(v15, v1 + 2, sizeof(v15));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB152CE4();
  sub_1BB8746C8();
  v14[0] = v12;
  *(_QWORD *)&v14[1] = v8;
  *((_QWORD *)&v14[1] + 1) = v9;
  v16 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  v10 = v13;
  sub_1BB8741AC();
  if (!v10)
  {
    memcpy(v14, v15, sizeof(v14));
    v16 = 1;
    sub_1BA82F554();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB14F304@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v19[38];
  char v20;

  v17 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BC018, (uint64_t (*)(void))sub_1BB152CE4, (uint64_t)&type metadata for A12_V10.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v18 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB152CE4();
  sub_1BB87468C();
  if (!v2)
  {
    v8 = v5;
    v9 = v17;
    type metadata accessor for CGRect(0);
    v20 = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v10 = v18;
    sub_1BB8740D4();
    v11 = v19[0];
    v12 = v19[1];
    v13 = v19[2];
    v14 = v19[3];
    v20 = 1;
    sub_1BA82F510();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v10);
    memcpy(v9 + 4, v19, 0x130uLL);
    *v9 = v11;
    v9[1] = v12;
    v9[2] = v13;
    v9[3] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB14F4EC()
{
  sub_1BB152CE4();
  return sub_1BB874710();
}

uint64_t sub_1BB14F514()
{
  sub_1BB152CE4();
  return sub_1BB87471C();
}

uint64_t sub_1BB14F53C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB14F304(a1, a2);
}

uint64_t sub_1BB14F550(_QWORD *a1)
{
  return sub_1BB14F150(a1);
}

uint64_t sub_1BB14F564()
{
  sub_1BB1528E4();
  return sub_1BB86D96C();
}

uint64_t sub_1BB14F5CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v4[312];
  _BYTE v5[320];

  memset(v5, 0, 32);
  v5[32] = 1;
  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BB152C50((uint64_t)v5);
  sub_1BB152C88((uint64_t)v5, (uint64_t)v4);
  sub_1BA4CDF6C(0, &qword_1EF2BBFE8, (uint64_t (*)(void))sub_1BA82F598, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1BB14F688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  unsigned __int8 v19;
  uint64_t v20;
  void *v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  unsigned __int8 v64;
  ValueMetadata *v65;
  unint64_t v66;
  uint64_t v67;

  v67 = a2;
  v47 = a3;
  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86C8E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GroupLayoutContext();
  v51 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  MEMORY[0x1E0C80A78](v11);
  v53 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v56 = (uint64_t)&v43 - v14;
  v15 = type metadata accessor for GroupLayoutBindingContext();
  v48 = *(_QWORD *)(v15 - 8);
  v49 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = *v3;
  v18 = (void *)*((_QWORD *)v3 + 1);
  v19 = v3[16];
  *(_QWORD *)&v63 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v63))
  {
    sub_1BA7E415C();
    swift_allocError();
    *(_OWORD *)v20 = 0u;
    *(_OWORD *)(v20 + 16) = 0u;
    *(_QWORD *)(v20 + 32) = 0;
    *(_BYTE *)(v20 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    v46 = a1;
    v45 = v17;
    sub_1BA4C2DD8(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    sub_1BA4C2DD8(v67, v56, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v22 = v18;
    v23 = v19;
    sub_1BA7C26A0(v18, v19);
    sub_1BB86C8D4();
    v24 = sub_1BB86C8C8();
    v44 = v25;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v65 = &type metadata for A12_V10;
    v26 = sub_1BA8EE66C();
    v66 = v26;
    v27 = v50;
    LOBYTE(v63) = v50;
    *((_QWORD *)&v63 + 1) = v22;
    v64 = v23;
    type metadata accessor for GroupLayoutKey();
    v28 = swift_allocObject();
    sub_1BA7C26A0(v22, v23);
    v61 = sub_1BB874734();
    v62 = v29;
    v59 = 95;
    v60 = 0xE100000000000000;
    v57 = 45;
    v58 = 0xE100000000000000;
    sub_1BA7114A0();
    v30 = sub_1BB873B04();
    v32 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = v32;
    v33 = (uint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v34 = v44;
    *v33 = v24;
    v33[1] = v34;
    sub_1BA4C010C((uint64_t)&v63, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v35 = v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4((uint64_t)v45, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v35, 0, 1, v49);
    v36 = v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4(v56, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v36, 0, 1, v52);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
    sub_1BA7C2538(v22, v23);
    v65 = &type metadata for A12_V10;
    v66 = v26;
    LOBYTE(v63) = v27;
    *((_QWORD *)&v63 + 1) = v22;
    v64 = v23;
    v37 = v53;
    sub_1BA4C2DD8(v67, v53, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA7C26A0(v22, v23);
    v38 = v54;
    v39 = v55;
    sub_1BA789374(0, 0, 0, 0, 1, 0, 0, 0, v55);
    if (v38)
    {
      sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
    }
    else
    {
      v40 = type metadata accessor for A12_V10.Bound();
      v41 = v47;
      v47[3] = v40;
      v41[4] = sub_1BA4A2870(qword_1EF2BBEF8, (uint64_t (*)(uint64_t))type metadata accessor for A12_V10.Bound, (uint64_t)&unk_1BB8EF8A8);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
      *boxed_opaque_existential_0 = v28;
      sub_1BA4CECCC(&v63, (uint64_t)(boxed_opaque_existential_0 + 1));
      sub_1BA5193C4(v37, (uint64_t)boxed_opaque_existential_0 + *(int *)(v40 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      return sub_1BA5193C4(v39, (uint64_t)boxed_opaque_existential_0 + *(int *)(v40 + 28), type metadata accessor for FeedHeadline);
    }
  }
}

uint64_t sub_1BB14FB64@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40[19];
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[304];
  char v45;
  __int128 v46[3];

  v3 = sub_1BB86DA38();
  v36 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *v1;
  v13 = type metadata accessor for A12_V10.Bound();
  sub_1BA4C2DD8((uint64_t)v1 + *(int *)(v13 + 28), (uint64_t)v8, type metadata accessor for FeedHeadline);
  v14 = (char *)v1 + *(int *)(v13 + 24);
  v15 = type metadata accessor for GroupLayoutContext();
  v16 = *(_QWORD *)(*(_QWORD *)&v14[*(int *)(v15 + 40)] + 16);
  v38 = v15;
  v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BA4C010C(v16 + 16, (uint64_t)v40);
  sub_1BA4C010C(v16 + 56, (uint64_t)v46);
  v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v40, inited + 16);
  sub_1BA4CECCC(v46, inited + 56);
  *(double *)(inited + 96) = v18;
  v45 = 2;
  swift_retain();
  FeedLayoutStylerFactory.styler(withHeading:)(&v45, (uint64_t *)&v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  HeadlineViewLayout.Context.init(key:model:styler:)(v12, (uint64_t)v8, (uint64_t)&v41, v11);
  v20 = *MEMORY[0x1E0DB5D88];
  v21 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v5, v20, v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v36 + 104))(v5, *MEMORY[0x1E0DB6200], v37);
  v39 = v11;
  sub_1BB152980(0, &qword_1EF2BBFA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  sub_1BB86DB40();
  v37 = v41;
  v23 = v42;
  v22 = v43;
  memcpy(v40, v44, sizeof(v40));
  sub_1BA4AD288(0, &qword_1ED3B9D08, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
  sub_1BA640FB4();
  v26 = v25;
  v27 = swift_allocBox();
  v29 = v28;
  v30 = (void *)(v28 + *(int *)(v26 + 48));
  v31 = *(int *)(v26 + 64);
  sub_1BA4C2DD8((uint64_t)v11, v28, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v30, v40, 0x130uLL);
  *(_QWORD *)(v29 + v31) = *(_QWORD *)&v14[*(int *)(v38 + 28)];
  *(_QWORD *)(v24 + 32) = v27 | 0x4000000000000000;
  *(_QWORD *)&v46[0] = v24;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B39E4();
  sub_1BA6B39A0();
  v32 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  *(_OWORD *)(a1 + 8) = v37;
  *(_QWORD *)(a1 + 24) = v23;
  *(_QWORD *)(a1 + 32) = v22;
  v33 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v32;
  *(_QWORD *)(a1 + 48) = v33;
  return sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Context);
}

uint64_t sub_1BB14FF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2BBFB8, (uint64_t (*)(void))sub_1BB1528A0, (uint64_t)&type metadata for A12_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 12;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB152980(0, &qword_1EF2BBFC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB152940(&qword_1EF2BBFC8, &qword_1EF2BBFC0, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB1500AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v17)(uint64_t, _QWORD *);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(uint64_t *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v45 = a2;
  v46 = sub_1BB86DA38();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1BB86D93C();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2BBFB8, (uint64_t (*)(void))sub_1BB1528A0, (uint64_t)&type metadata for A12_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v39 - v11);
  v50 = a1;
  v13 = sub_1BB86D438();
  v14 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DB5A38], v13);
  *v12 = v14;
  v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104);
  v16(v12, *MEMORY[0x1E0DB6318], v9);
  v17 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB152980(0, &qword_1EF2BBFD0, MEMORY[0x1E0DB5A10]);
  v19 = v18;
  v42 = sub_1BB152940(&qword_1EF2BBFD8, &qword_1EF2BBFD0, v17, MEMORY[0x1E0DB5A18]);
  v43 = v19;
  sub_1BB86D4EC();
  v41 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v41(v12, v9);
  v50 = a1;
  swift_getKeyPath();
  v16(v12, *MEMORY[0x1E0DB6410], v9);
  v20 = (char *)v7 + v5[5];
  v21 = *MEMORY[0x1E0DB61C8];
  v22 = sub_1BB86DA20();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v20, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  v24 = (void **)MEMORY[0x1E0DC4918];
  *v7 = 0;
  *(_QWORD *)((char *)v7 + v5[6]) = 0;
  v25 = *v24;
  *(_QWORD *)((char *)v7 + v5[7]) = v25;
  v26 = *MEMORY[0x1E0DC49E8];
  v27 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 8);
  v28 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 16);
  v29 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 24);
  v30 = qword_1ED3BC390;
  v31 = v25;
  if (v30 != -1)
    swift_once();
  swift_retain();
  v32 = v40;
  sub_1BB86D2B8();
  v33 = swift_release();
  v34 = MEMORY[0x1E0C80A78](v33);
  *(&v39 - 8) = v26;
  *(&v39 - 7) = v27;
  *(&v39 - 6) = v28;
  *(&v39 - 5) = v29;
  v36 = v45;
  v35 = v46;
  *(&v39 - 4) = (uint64_t)v32;
  *(&v39 - 3) = v36;
  v38 = (unint64_t)v7;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v44 + 104))(v48, *MEMORY[0x1E0DB6208], v35, v34);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v49);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for HeadlineViewLayout.Options);
  v38 = sub_1BB1529FC();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v41)(v12, v9);
}

uint64_t sub_1BB1504E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_0;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9D60, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  v4 = v1 + *(int *)(a1 + 28);
  *(_QWORD *)(v3 + 56) = type metadata accessor for FeedHeadline(0);
  *(_QWORD *)(v3 + 64) = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v3 + 32));
  sub_1BA4C2DD8(v4, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  return v3;
}

uint64_t sub_1BB1505A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB14F688(a1, a2, a3);
}

uint64_t sub_1BB1505B8()
{
  return sub_1BB690A94();
}

unint64_t sub_1BB1505C8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB1505F4();
  result = sub_1BB150638();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB1505F4()
{
  unint64_t result;

  result = qword_1EF2BBEE8;
  if (!qword_1EF2BBEE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF7F4, &type metadata for A12_V10);
    atomic_store(result, (unint64_t *)&qword_1EF2BBEE8);
  }
  return result;
}

unint64_t sub_1BB150638()
{
  unint64_t result;

  result = qword_1EF2BBEF0;
  if (!qword_1EF2BBEF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF81C, &type metadata for A12_V10);
    atomic_store(result, (unint64_t *)&qword_1EF2BBEF0);
  }
  return result;
}

uint64_t type metadata accessor for A12_V10.Bound()
{
  uint64_t result;

  result = qword_1EF2BBF58;
  if (!qword_1EF2BBF58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB1506B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  char *v43;
  int *v44;
  unsigned int (*v45)(char *, uint64_t, int *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  id v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v70;
  char *v71;
  int *v72;
  void *__dst;
  char *__dsta;
  uint64_t v75;
  char *v76;
  uint64_t v77;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    v31 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    v75 = a3;
    v77 = a1;
    v12 = *(int *)(a3 + 24);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1BB86D7A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = (int *)type metadata accessor for GroupLayoutContext();
    v17 = v16[5];
    v18 = v13 + v17;
    v19 = v14 + v17;
    v20 = sub_1BB86D660();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = v16[6];
    v22 = v13 + v21;
    v23 = v14 + v21;
    *(_OWORD *)v22 = *(_OWORD *)(v14 + v21);
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(_BYTE *)(v22 + 19) = *(_BYTE *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    v24 = *(_QWORD *)(v14 + v21 + 24);
    if (v24 >= 2)
      v24 = swift_bridgeObjectRetain();
    *(_QWORD *)(v22 + 24) = v24;
    v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    v27 = (const void *)(v23 + v26);
    v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v32 = sub_1BB8705C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(__dst, v27, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(_QWORD *)(v22 + *(int *)(v25 + 40)) = *(_QWORD *)(v23 + *(int *)(v25 + 40));
    *(_QWORD *)(v13 + v16[7]) = *(_QWORD *)(v14 + v16[7]);
    *(_QWORD *)(v13 + v16[8]) = *(_QWORD *)(v14 + v16[8]);
    *(_BYTE *)(v13 + v16[9]) = *(_BYTE *)(v14 + v16[9]);
    *(_QWORD *)(v13 + v16[10]) = *(_QWORD *)(v14 + v16[10]);
    *(_BYTE *)(v13 + v16[11]) = *(_BYTE *)(v14 + v16[11]);
    *(_QWORD *)(v13 + v16[12]) = *(_QWORD *)(v14 + v16[12]);
    v33 = *(int *)(v75 + 28);
    v34 = v77 + v33;
    v35 = (uint64_t)a2 + v33;
    v36 = *(uint64_t *)((char *)a2 + v33 + 8);
    *(_QWORD *)v34 = *(uint64_t *)((char *)a2 + v33);
    *(_QWORD *)(v34 + 8) = v36;
    *(_QWORD *)(v34 + 16) = *(uint64_t *)((char *)a2 + v33 + 16);
    *(_BYTE *)(v34 + 24) = *((_BYTE *)a2 + v33 + 24);
    v37 = *(uint64_t *)((char *)a2 + v33 + 40);
    *(_QWORD *)(v34 + 32) = *(uint64_t *)((char *)a2 + v33 + 32);
    *(_QWORD *)(v34 + 40) = v37;
    *(_QWORD *)(v34 + 48) = *(uint64_t *)((char *)a2 + v33 + 48);
    *(_BYTE *)(v34 + 56) = *((_BYTE *)a2 + v33 + 56);
    v72 = (int *)type metadata accessor for FeedHeadline(0);
    v38 = v72[10];
    v39 = (_BYTE *)(v34 + v38);
    v40 = v35 + v38;
    *v39 = *(_BYTE *)(v35 + v38);
    v39[1] = *(_BYTE *)(v35 + v38 + 1);
    v41 = (int *)type metadata accessor for FeedHeadline.State(0);
    v42 = v41[6];
    v71 = &v39[v42];
    v43 = (char *)(v40 + v42);
    v44 = (int *)type metadata accessor for SharedItem();
    v70 = *((_QWORD *)v44 - 1);
    v45 = *(unsigned int (**)(char *, uint64_t, int *))(v70 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v45(v43, 1, v44))
    {
      v46 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(v71, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v47 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v71, v43, v47);
      v71[v44[5]] = v43[v44[5]];
      v48 = v44[6];
      v49 = *(void **)&v43[v48];
      *(_QWORD *)&v71[v48] = v49;
      v50 = v44[7];
      __dsta = &v43[v50];
      v76 = &v71[v50];
      v51 = sub_1BB86C67C();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      v53 = v49;
      v52(v76, __dsta, v51);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v70 + 56))(v71, 0, 1, v44);
    }
    v39[v41[7]] = *(_BYTE *)(v40 + v41[7]);
    v39[v41[8]] = *(_BYTE *)(v40 + v41[8]);
    v39[v41[9]] = *(_BYTE *)(v40 + v41[9]);
    v39[v41[10]] = *(_BYTE *)(v40 + v41[10]);
    v54 = v72[11];
    v55 = (void *)(v34 + v54);
    v56 = (const void *)(v35 + v54);
    v57 = sub_1BB871B24();
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    v31 = v77;
    v60 = v72[12];
    v61 = (_QWORD *)(v34 + v60);
    v62 = (_QWORD *)(v35 + v60);
    v63 = v62[1];
    if (v63 >= 0x11)
    {
      *v61 = *v62;
      v61[1] = v63;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v61 = *(_OWORD *)v62;
    }
    v64 = v72[13];
    v65 = *(_QWORD *)(v35 + v64);
    if (v65 >= 2)
    {
      if (v65 == 2)
      {
        *(_QWORD *)(v34 + v64) = 2;
      }
      else
      {
        *(_QWORD *)(v34 + v64) = v65;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(_QWORD *)(v34 + v64) = v65;
    }
    v66 = v72[14];
    v67 = *(void **)(v35 + v66);
    *(_QWORD *)(v34 + v66) = v67;
    v68 = v67;
  }
  return v31;
}

void sub_1BB150BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1 + 8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = v5 + *(int *)(v7 + 20);
  v9 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v5 + *(int *)(v7 + 24);
  if (*(_QWORD *)(v10 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v11 = v10 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  swift_release();
  swift_release();
  v14 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v15 = (int *)type metadata accessor for FeedHeadline(0);
  v16 = v14 + v15[10];
  v17 = v16 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v18 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
  {
    v19 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);

    v20 = v17 + *(int *)(v18 + 28);
    v21 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  }
  v22 = v14 + v15[11];
  v23 = sub_1BB871B24();
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  if (*(_QWORD *)(v14 + v15[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v14 + v15[13]) >= 3uLL)
    swift_unknownObjectRelease();

}

uint64_t sub_1BB150E3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  int *v42;
  unsigned int (*v43)(char *, uint64_t, int *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  id v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v68;
  char *v69;
  char *v70;
  int *__dst;
  char *__dsta;
  uint64_t v73;
  int *v74;
  uint64_t v75;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  __dst = a3;
  v73 = a2;
  v10 = a3[6];
  v75 = a1;
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = (int *)type metadata accessor for GroupLayoutContext();
  v15 = v14[5];
  v16 = v11 + v15;
  v17 = v12 + v15;
  v18 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = v14[6];
  v20 = v11 + v19;
  v21 = v12 + v19;
  *(_OWORD *)v20 = *(_OWORD *)(v12 + v19);
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(_BYTE *)(v20 + 19) = *(_BYTE *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  v22 = *(_QWORD *)(v12 + v19 + 24);
  if (v22 >= 2)
    v22 = swift_bridgeObjectRetain();
  *(_QWORD *)(v20 + 24) = v22;
  v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  v24 = *(int *)(v23 + 36);
  v25 = (void *)(v20 + v24);
  v26 = (const void *)(v21 + v24);
  v27 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v25, v26, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_QWORD *)(v20 + *(int *)(v23 + 40)) = *(_QWORD *)(v21 + *(int *)(v23 + 40));
  *(_QWORD *)(v11 + v14[7]) = *(_QWORD *)(v12 + v14[7]);
  *(_QWORD *)(v11 + v14[8]) = *(_QWORD *)(v12 + v14[8]);
  *(_BYTE *)(v11 + v14[9]) = *(_BYTE *)(v12 + v14[9]);
  *(_QWORD *)(v11 + v14[10]) = *(_QWORD *)(v12 + v14[10]);
  *(_BYTE *)(v11 + v14[11]) = *(_BYTE *)(v12 + v14[11]);
  *(_QWORD *)(v11 + v14[12]) = *(_QWORD *)(v12 + v14[12]);
  v31 = __dst[7];
  v32 = v75 + v31;
  v33 = v73 + v31;
  v34 = *(_QWORD *)(v73 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)(v73 + v31);
  *(_QWORD *)(v32 + 8) = v34;
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v73 + v31 + 16);
  *(_BYTE *)(v32 + 24) = *(_BYTE *)(v73 + v31 + 24);
  v35 = *(_QWORD *)(v73 + v31 + 40);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v73 + v31 + 32);
  *(_QWORD *)(v32 + 40) = v35;
  *(_QWORD *)(v32 + 48) = *(_QWORD *)(v73 + v31 + 48);
  *(_BYTE *)(v32 + 56) = *(_BYTE *)(v73 + v31 + 56);
  v74 = (int *)type metadata accessor for FeedHeadline(0);
  v36 = v74[10];
  v37 = (_BYTE *)(v32 + v36);
  v38 = v33 + v36;
  *v37 = *(_BYTE *)(v33 + v36);
  v37[1] = *(_BYTE *)(v33 + v36 + 1);
  v39 = (int *)type metadata accessor for FeedHeadline.State(0);
  v40 = v39[6];
  __dsta = &v37[v40];
  v41 = (char *)(v38 + v40);
  v42 = (int *)type metadata accessor for SharedItem();
  v68 = *((_QWORD *)v42 - 1);
  v43 = *(unsigned int (**)(char *, uint64_t, int *))(v68 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v43(v41, 1, v42))
  {
    v44 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dsta, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(__dsta, v41, v45);
    __dsta[v42[5]] = v41[v42[5]];
    v46 = v42[6];
    v47 = *(void **)&v41[v46];
    *(_QWORD *)&__dsta[v46] = v47;
    v48 = v42[7];
    v69 = &v41[v48];
    v70 = &__dsta[v48];
    v49 = sub_1BB86C67C();
    v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
    v51 = v47;
    v50(v70, v69, v49);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v68 + 56))(__dsta, 0, 1, v42);
  }
  v37[v39[7]] = *(_BYTE *)(v38 + v39[7]);
  v37[v39[8]] = *(_BYTE *)(v38 + v39[8]);
  v37[v39[9]] = *(_BYTE *)(v38 + v39[9]);
  v37[v39[10]] = *(_BYTE *)(v38 + v39[10]);
  v52 = v74[11];
  v53 = (void *)(v32 + v52);
  v54 = (const void *)(v33 + v52);
  v55 = sub_1BB871B24();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v53, v54, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  v58 = v74[12];
  v59 = (_QWORD *)(v32 + v58);
  v60 = (_QWORD *)(v33 + v58);
  v61 = v60[1];
  if (v61 >= 0x11)
  {
    *v59 = *v60;
    v59[1] = v61;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v59 = *(_OWORD *)v60;
  }
  v62 = v74[13];
  v63 = *(_QWORD *)(v33 + v62);
  if (v63 >= 2)
  {
    if (v63 == 2)
    {
      *(_QWORD *)(v32 + v62) = 2;
    }
    else
    {
      *(_QWORD *)(v32 + v62) = v63;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(_QWORD *)(v32 + v62) = v63;
  }
  v64 = v74[14];
  v65 = *(void **)(v33 + v64);
  *(_QWORD *)(v32 + v64) = v65;
  v66 = v65;
  return v75;
}

_QWORD *sub_1BB151350(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t (*v47)(char *, uint64_t, int *);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  id v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  id v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  id v89;
  uint64_t v91;
  char *__src;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  int *v98;
  _QWORD *v99;

  v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  v95 = a3;
  v97 = a2;
  v7 = *(int *)(a3 + 24);
  v99 = a1;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = v11[6];
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  v20 = (unint64_t *)&v8[v16 + 24];
  v21 = *(_QWORD *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v17 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v20 = *((_QWORD *)v18 + 3);
    }
  }
  else
  {
    *v20 = v21;
    if (v21 >= 2)
      swift_bridgeObjectRetain();
  }
  v93 = type metadata accessor for FeedLayoutSolverOptions(0);
  v22 = *(int *)(v93 + 36);
  v23 = (uint64_t)&v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v91 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  v28 = v27((uint64_t)v24, 1, v25);
  if ((_DWORD)v23)
  {
    if (v28)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v30 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
      v31 = (void *)v91;
LABEL_13:
      memcpy(v31, v24, v30);
      goto LABEL_16;
    }
    v33 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v91, v24, v33);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v91, 0, 1, v25);
  }
  else
  {
    if (v28)
    {
      sub_1BA4A2E80(v91, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v30 = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64);
      v31 = (void *)v91;
      goto LABEL_13;
    }
    v34 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v91, v24, v34);
  }
LABEL_16:
  *(_QWORD *)&v17[*(int *)(v93 + 40)] = *(_QWORD *)&v18[*(int *)(v93 + 40)];
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  *(_QWORD *)&v8[v11[8]] = *(_QWORD *)&v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  *(_QWORD *)&v8[v11[10]] = *(_QWORD *)&v9[v11[10]];
  swift_retain();
  swift_release();
  v8[v11[11]] = v9[v11[11]];
  *(_QWORD *)&v8[v11[12]] = *(_QWORD *)&v9[v11[12]];
  swift_retain();
  swift_release();
  v35 = *(int *)(v95 + 28);
  v36 = (char *)v99 + v35;
  v37 = (char *)v97 + v35;
  *(_QWORD *)v36 = *(_QWORD *)((char *)v97 + v35);
  *((_QWORD *)v36 + 1) = *(_QWORD *)((char *)v97 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = *((_QWORD *)v37 + 2);
  v36[24] = v37[24];
  *((_QWORD *)v36 + 2) = v38;
  *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
  *((_QWORD *)v36 + 5) = *((_QWORD *)v37 + 5);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v36[56] = v37[56];
  v98 = (int *)type metadata accessor for FeedHeadline(0);
  v39 = v98[10];
  v40 = &v36[v39];
  v41 = &v37[v39];
  *v40 = v37[v39];
  v40[1] = v37[v39 + 1];
  v42 = (int *)type metadata accessor for FeedHeadline.State(0);
  v43 = v42[6];
  v44 = &v40[v43];
  v45 = &v41[v43];
  v46 = (int *)type metadata accessor for SharedItem();
  v96 = *((_QWORD *)v46 - 1);
  v47 = *(uint64_t (**)(char *, uint64_t, int *))(v96 + 48);
  v48 = v47(v44, 1, v46);
  v49 = v47(v45, 1, v46);
  if (v48)
  {
    if (!v49)
    {
      v50 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v44, v45, v50);
      v44[v46[5]] = v45[v46[5]];
      v51 = v46[6];
      v52 = *(void **)&v45[v51];
      *(_QWORD *)&v44[v51] = v52;
      v53 = v46[7];
      __src = &v45[v53];
      v94 = &v44[v53];
      v54 = sub_1BB86C67C();
      v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      v56 = v52;
      v55(v94, __src, v54);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v96 + 56))(v44, 0, 1, v46);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if (v49)
  {
    sub_1BA4A2E80((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
LABEL_21:
    v57 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_22;
  }
  v77 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 24))(v44, v45, v77);
  v44[v46[5]] = v45[v46[5]];
  v78 = v46[6];
  v79 = *(void **)&v45[v78];
  v80 = *(void **)&v44[v78];
  *(_QWORD *)&v44[v78] = v79;
  v81 = v79;

  v82 = v46[7];
  v83 = &v44[v82];
  v84 = &v45[v82];
  v85 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 24))(v83, v84, v85);
LABEL_22:
  v40[v42[7]] = v41[v42[7]];
  v40[v42[8]] = v41[v42[8]];
  v40[v42[9]] = v41[v42[9]];
  v40[v42[10]] = v41[v42[10]];
  v58 = v98[11];
  v59 = &v36[v58];
  v60 = &v37[v58];
  v61 = sub_1BB871B24();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v64 = v63(v59, 1, v61);
  v65 = v63(v60, 1, v61);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
LABEL_27:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v59, v60, v61);
LABEL_28:
  v67 = v98[12];
  v68 = &v36[v67];
  v69 = &v37[v67];
  v70 = *(_QWORD *)&v36[v67 + 8];
  v71 = *(_QWORD *)&v37[v67 + 8];
  if (v70 < 0x11)
  {
    if (v71 >= 0x11)
    {
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  if (v71 < 0x11)
  {
    sub_1BA905D68((uint64_t)v68);
LABEL_33:
    *(_OWORD *)v68 = *(_OWORD *)v69;
    goto LABEL_35;
  }
  *(_QWORD *)v68 = *(_QWORD *)v69;
  *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_35:
  v72 = v98[13];
  v73 = &v36[v72];
  v74 = *(_QWORD *)&v36[v72];
  v75 = *(_QWORD *)&v37[v72];
  if (v74 == 2)
  {
    if (v75 >= 2)
    {
      if (v75 == 2)
      {
        v76 = 2;
LABEL_50:
        *(_QWORD *)v73 = v76;
        goto LABEL_51;
      }
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  if (v75 == 2)
  {
    sub_1BA905D9C((uint64_t)&v36[v72]);
LABEL_49:
    v76 = *(_QWORD *)&v37[v72];
    goto LABEL_50;
  }
  if (v74 >= 2)
  {
    if (v75 >= 2)
    {
      *(_QWORD *)v73 = v75;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_51;
    }
    swift_unknownObjectRelease();
    goto LABEL_49;
  }
  if (v75 >= 2)
  {
LABEL_44:
    *(_QWORD *)v73 = v75;
    swift_unknownObjectRetain();
    goto LABEL_51;
  }
LABEL_43:
  *(_QWORD *)v73 = v75;
LABEL_51:
  v86 = v98[14];
  v87 = *(void **)&v36[v86];
  v88 = *(void **)&v37[v86];
  *(_QWORD *)&v36[v86] = v88;
  v89 = v88;

  return v99;
}

uint64_t sub_1BB151B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *__dst;
  char *v52;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = (int *)type metadata accessor for GroupLayoutContext();
  v9 = v8[5];
  v10 = v5 + v9;
  v11 = v6 + v9;
  v12 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = v8[6];
  v14 = v5 + v13;
  v15 = v6 + v13;
  *(_OWORD *)v14 = *(_OWORD *)(v6 + v13);
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v6 + v13 + 16);
  *(_WORD *)(v14 + 17) = *(_WORD *)(v6 + v13 + 17);
  *(_BYTE *)(v14 + 19) = *(_BYTE *)(v6 + v13 + 19);
  *(_DWORD *)(v14 + 20) = *(_DWORD *)(v6 + v13 + 20);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v6 + v13 + 24);
  v16 = type metadata accessor for FeedLayoutSolverOptions(0);
  v17 = *(int *)(v16 + 36);
  __dst = (void *)(v14 + v17);
  v18 = (const void *)(v15 + v17);
  v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(_QWORD *)(v14 + *(int *)(v16 + 40)) = *(_QWORD *)(v15 + *(int *)(v16 + 40));
  *(_QWORD *)(v5 + v8[7]) = *(_QWORD *)(v6 + v8[7]);
  *(_QWORD *)(v5 + v8[8]) = *(_QWORD *)(v6 + v8[8]);
  *(_BYTE *)(v5 + v8[9]) = *(_BYTE *)(v6 + v8[9]);
  *(_QWORD *)(v5 + v8[10]) = *(_QWORD *)(v6 + v8[10]);
  *(_BYTE *)(v5 + v8[11]) = *(_BYTE *)(v6 + v8[11]);
  *(_QWORD *)(v5 + v8[12]) = *(_QWORD *)(v6 + v8[12]);
  v23 = *(int *)(a3 + 28);
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_OWORD *)v24 = *(_OWORD *)(a2 + v23);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(a2 + v23 + 16);
  *(_BYTE *)(v24 + 24) = *(_BYTE *)(a2 + v23 + 24);
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(a2 + v23 + 32);
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(a2 + v23 + 40);
  *(_BYTE *)(v24 + 56) = *(_BYTE *)(a2 + v23 + 56);
  v26 = (int *)type metadata accessor for FeedHeadline(0);
  v27 = v26[10];
  v28 = (_BYTE *)(v24 + v27);
  v29 = v25 + v27;
  *v28 = *(_BYTE *)(v25 + v27);
  v28[1] = *(_BYTE *)(v25 + v27 + 1);
  v30 = (int *)type metadata accessor for FeedHeadline.State(0);
  v31 = v30[6];
  v32 = &v28[v31];
  v33 = (char *)(v29 + v31);
  v34 = (int *)type metadata accessor for SharedItem();
  v35 = *((_QWORD *)v34 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))(v33, 1, v34))
  {
    v36 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v32, v33, v37);
    v32[v34[5]] = v33[v34[5]];
    *(_QWORD *)&v32[v34[6]] = *(_QWORD *)&v33[v34[6]];
    v38 = v34[7];
    v52 = &v32[v38];
    v39 = &v33[v38];
    v40 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v52, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v35 + 56))(v32, 0, 1, v34);
  }
  v28[v30[7]] = *(_BYTE *)(v29 + v30[7]);
  v28[v30[8]] = *(_BYTE *)(v29 + v30[8]);
  v28[v30[9]] = *(_BYTE *)(v29 + v30[9]);
  v28[v30[10]] = *(_BYTE *)(v29 + v30[10]);
  v41 = v26[11];
  v42 = (void *)(v24 + v41);
  v43 = (const void *)(v25 + v41);
  v44 = sub_1BB871B24();
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  *(_OWORD *)(v24 + v26[12]) = *(_OWORD *)(v25 + v26[12]);
  v47 = v26[13];
  v48 = *(_QWORD *)(v25 + v47);
  if (v48 == 2)
    v48 = 2;
  *(_QWORD *)(v24 + v47) = v48;
  *(_QWORD *)(v24 + v26[14]) = *(_QWORD *)(v25 + v26[14]);
  return a1;
}

uint64_t sub_1BB151F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  int *v45;
  uint64_t (*v46)(_BYTE *, uint64_t, int *);
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(void *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v84 = a3;
  v86 = a2;
  v6 = *(int *)(a3 + 24);
  v88 = a1;
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = v10[6];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(v8 + v15);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v8 + v15 + 16);
  *(_BYTE *)(v16 + 17) = *(_BYTE *)(v8 + v15 + 17);
  *(_BYTE *)(v16 + 18) = *(_BYTE *)(v8 + v15 + 18);
  *(_BYTE *)(v16 + 19) = *(_BYTE *)(v8 + v15 + 19);
  *(_BYTE *)(v16 + 20) = *(_BYTE *)(v8 + v15 + 20);
  *(_BYTE *)(v16 + 21) = *(_BYTE *)(v8 + v15 + 21);
  *(_BYTE *)(v16 + 22) = *(_BYTE *)(v8 + v15 + 22);
  *(_BYTE *)(v16 + 23) = *(_BYTE *)(v8 + v15 + 23);
  v18 = (unint64_t *)(v7 + v15 + 24);
  v19 = *(_QWORD *)(v8 + v15 + 24);
  if (*v18 < 2)
    goto LABEL_4;
  if (v19 < 2)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v19 = *(_QWORD *)(v17 + 24);
LABEL_4:
    *v18 = v19;
    goto LABEL_6;
  }
  *v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  v83 = type metadata accessor for FeedLayoutSolverOptions(0);
  v20 = *(int *)(v83 + 36);
  v21 = v16 + v20;
  v22 = (const void *)(v17 + v20);
  v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  v82 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  v26 = v25((uint64_t)v22, 1, v23);
  if ((_DWORD)v21)
  {
    if (v26)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v28 = *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64);
      v29 = (void *)v82;
LABEL_11:
      memcpy(v29, v22, v28);
      goto LABEL_14;
    }
    v31 = sub_1BB8705C4();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v82, v22, v31);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v82, 0, 1, v23);
  }
  else
  {
    if (v26)
    {
      sub_1BA4A2E80(v82, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v28 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
      v29 = (void *)v82;
      goto LABEL_11;
    }
    v32 = sub_1BB8705C4();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v82, v22, v32);
  }
LABEL_14:
  *(_QWORD *)(v16 + *(int *)(v83 + 40)) = *(_QWORD *)(v17 + *(int *)(v83 + 40));
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  *(_QWORD *)(v7 + v10[10]) = *(_QWORD *)(v8 + v10[10]);
  swift_release();
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_QWORD *)(v7 + v10[12]) = *(_QWORD *)(v8 + v10[12]);
  swift_release();
  v33 = *(int *)(v84 + 28);
  v34 = v88 + v33;
  v35 = v86 + v33;
  v36 = *(_QWORD *)(v86 + v33 + 8);
  *(_QWORD *)v34 = *(_QWORD *)(v86 + v33);
  *(_QWORD *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  *(_BYTE *)(v34 + 24) = *(_BYTE *)(v35 + 24);
  v37 = *(_QWORD *)(v35 + 40);
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_QWORD *)(v34 + 40) = v37;
  swift_unknownObjectRelease();
  *(_QWORD *)(v34 + 48) = *(_QWORD *)(v35 + 48);
  swift_unknownObjectRelease();
  *(_BYTE *)(v34 + 56) = *(_BYTE *)(v35 + 56);
  v87 = (int *)type metadata accessor for FeedHeadline(0);
  v38 = v87[10];
  v39 = (_BYTE *)(v34 + v38);
  v40 = v35 + v38;
  *v39 = *(_BYTE *)(v35 + v38);
  v39[1] = *(_BYTE *)(v35 + v38 + 1);
  v41 = (int *)type metadata accessor for FeedHeadline.State(0);
  v42 = v41[6];
  v43 = &v39[v42];
  v44 = (_BYTE *)(v40 + v42);
  v45 = (int *)type metadata accessor for SharedItem();
  v85 = *((_QWORD *)v45 - 1);
  v46 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v85 + 48);
  v47 = v46(v43, 1, v45);
  v48 = v46(v44, 1, v45);
  if (v47)
  {
    if (!v48)
    {
      v49 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v43, v44, v49);
      v43[v45[5]] = v44[v45[5]];
      *(_QWORD *)&v43[v45[6]] = *(_QWORD *)&v44[v45[6]];
      v50 = v45[7];
      v51 = &v43[v50];
      v52 = &v44[v50];
      v53 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v85 + 56))(v43, 0, 1, v45);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v48)
  {
    sub_1BA4A2E80((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
LABEL_19:
    v54 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_20;
  }
  v72 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v72 - 8) + 40))(v43, v44, v72);
  v43[v45[5]] = v44[v45[5]];
  v73 = v45[6];
  v74 = *(void **)&v43[v73];
  *(_QWORD *)&v43[v73] = *(_QWORD *)&v44[v73];

  v75 = v45[7];
  v76 = &v43[v75];
  v77 = &v44[v75];
  v78 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
LABEL_20:
  v39[v41[7]] = *(_BYTE *)(v40 + v41[7]);
  v39[v41[8]] = *(_BYTE *)(v40 + v41[8]);
  v39[v41[9]] = *(_BYTE *)(v40 + v41[9]);
  v39[v41[10]] = *(_BYTE *)(v40 + v41[10]);
  v55 = v87[11];
  v56 = (void *)(v34 + v55);
  v57 = (void *)(v35 + v55);
  v58 = sub_1BB871B24();
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60(v57, 1, v58);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(void *, void *, uint64_t))(v59 + 32))(v56, v57, v58);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v62)
  {
    (*(void (**)(void *, uint64_t))(v59 + 8))(v56, v58);
LABEL_25:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v59 + 40))(v56, v57, v58);
LABEL_26:
  v64 = v87[12];
  v65 = v34 + v64;
  v66 = v35 + v64;
  if (*(_QWORD *)(v34 + v64 + 8) < 0x11uLL)
  {
LABEL_29:
    *(_OWORD *)v65 = *(_OWORD *)v66;
    goto LABEL_31;
  }
  v67 = *(_QWORD *)(v66 + 8);
  if (v67 < 0x11)
  {
    sub_1BA905D68(v65);
    goto LABEL_29;
  }
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *(_QWORD *)(v65 + 8) = v67;
  swift_bridgeObjectRelease();
LABEL_31:
  v68 = v87[13];
  v69 = (unint64_t *)(v34 + v68);
  v70 = *(_QWORD *)(v34 + v68);
  v71 = *(_QWORD *)(v35 + v68);
  if (v70 == 2)
  {
    if (v71 == 2)
      v71 = 2;
    goto LABEL_43;
  }
  if (v71 == 2)
  {
    sub_1BA905D9C(v34 + v68);
  }
  else
  {
    if (v70 < 2)
      goto LABEL_43;
    if (v71 >= 2)
    {
      *v69 = v71;
      swift_unknownObjectRelease();
      goto LABEL_44;
    }
    swift_unknownObjectRelease();
  }
  v71 = *(_QWORD *)(v35 + v68);
LABEL_43:
  *v69 = v71;
LABEL_44:
  v79 = v87[14];
  v80 = *(void **)(v34 + v79);
  *(_QWORD *)(v34 + v79) = *(_QWORD *)(v35 + v79);

  return v88;
}

uint64_t sub_1BB15266C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB152678(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for FeedHeadline(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1BB152718()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB152724(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for FeedHeadline(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_1BB1527C0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FeedHeadline(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BB15285C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BBF98, (uint64_t (*)(uint64_t))type metadata accessor for A12_V10.Bound, (uint64_t)&unk_1BB8EF880);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB152898(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB14FF54(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB1528A0()
{
  unint64_t result;

  result = qword_1EF2BBFA8;
  if (!qword_1EF2BBFA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF9D8, &type metadata for A12_V10.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2BBFA8);
  }
  return result;
}

unint64_t sub_1BB1528E4()
{
  unint64_t result;

  result = qword_1EF2BBFB0;
  if (!qword_1EF2BBFB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF9A8, &type metadata for A12_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BBFB0);
  }
  return result;
}

uint64_t sub_1BB152928()
{
  return swift_deallocObject();
}

uint64_t sub_1BB152938(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1500AC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB152940(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB152980(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB152980(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V10.Layout;
    v8[1] = &type metadata for A12_V10.Layout.Attributes;
    v8[2] = sub_1BB1528A0();
    v8[3] = sub_1BB1528E4();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BB1529FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BBFE0;
  if (!qword_1EF2BBFE0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BBFE8, (uint64_t (*)(void))sub_1BA82F598, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5A60], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BBFE0);
  }
  return result;
}

void *__swift_memcpy336_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x150uLL);
}

uint64_t getEnumTagSinglePayload for A12_V10.Layout.Attributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 336))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for A12_V10.Layout.Attributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 336) = v3;
  return result;
}

ValueMetadata *type metadata accessor for A12_V10.Layout.Attributes()
{
  return &type metadata for A12_V10.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V10.Layout()
{
  return &type metadata for A12_V10.Layout;
}

unint64_t sub_1BB152B34()
{
  unint64_t result;

  result = qword_1EF2BBFF0;
  if (!qword_1EF2BBFF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF948, &type metadata for A12_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BBFF0);
  }
  return result;
}

unint64_t sub_1BB152B7C()
{
  unint64_t result;

  result = qword_1EF2BBFF8;
  if (!qword_1EF2BBFF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF920, &type metadata for A12_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BBFF8);
  }
  return result;
}

unint64_t sub_1BB152BC4()
{
  unint64_t result;

  result = qword_1EF2BC000;
  if (!qword_1EF2BC000)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF8F8, &type metadata for A12_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BC000);
  }
  return result;
}

unint64_t sub_1BB152C0C()
{
  unint64_t result;

  result = qword_1EF2BC008;
  if (!qword_1EF2BC008)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF970, &type metadata for A12_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BC008);
  }
  return result;
}

double sub_1BB152C50(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 304) = 1;
  return result;
}

uint64_t sub_1BB152C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1EF2BC010, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB152CE4()
{
  unint64_t result;

  result = qword_1EF2BC020;
  if (!qword_1EF2BC020)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFACC, &type metadata for A12_V10.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC020);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V10.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB152D74 + 4 * byte_1BB8EF7E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB152DA8 + 4 * byte_1BB8EF7E0[v4]))();
}

uint64_t sub_1BB152DA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB152DB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB152DB8);
  return result;
}

uint64_t sub_1BB152DC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB152DCCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB152DD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB152DD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V10.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V10.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB152DF8()
{
  unint64_t result;

  result = qword_1EF2BC030;
  if (!qword_1EF2BC030)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFAA4, &type metadata for A12_V10.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC030);
  }
  return result;
}

unint64_t sub_1BB152E40()
{
  unint64_t result;

  result = qword_1EF2BC038;
  if (!qword_1EF2BC038)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFA14, &type metadata for A12_V10.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC038);
  }
  return result;
}

unint64_t sub_1BB152E88()
{
  unint64_t result;

  result = qword_1EF2BC040;
  if (!qword_1EF2BC040)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFA3C, &type metadata for A12_V10.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC040);
  }
  return result;
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerObserver.webEmbedDataSourceManager(_:dataVisualization:didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1BB152ED4()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  sub_1BB1530C4(v0 + OBJC_IVAR____TtC8NewsFeed37WeakWebEmbedDataSourceManagerObserver_dataVisualization);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB152F0C()
{
  return type metadata accessor for WeakWebEmbedDataSourceManagerObserver();
}

uint64_t type metadata accessor for WeakWebEmbedDataSourceManagerObserver()
{
  uint64_t result;

  result = qword_1ED3CECC8;
  if (!qword_1ED3CECC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB152F50()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WebEmbedDataVisualization();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BB152FC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = a1[3];
  v7 = a1[4];
  v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  return sub_1BB153018((uint64_t)v8, a2, a3, v3, v6, v7);
}

uint64_t sub_1BB153018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v15[5];

  v15[3] = a5;
  v15[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_0, a1, a5);
  if (MEMORY[0x1BCCE5D40](a4 + 16))
  {
    v12 = *(_QWORD *)(a4 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v15, a2, a3, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1BB1530C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebEmbedDataVisualization();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB153100(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v15 = a5;
  v16 = a4;
  sub_1BB153A90(0, &qword_1EF2BC070, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1539C4();
  sub_1BB8746C8();
  LOBYTE(v18) = 0;
  sub_1BB87417C();
  if (!v5)
  {
    v12 = v15;
    v18 = v16;
    v17 = 1;
    sub_1BB153AEC();
    sub_1BB8741AC();
    v18 = v12;
    v17 = 2;
    sub_1BB153B30();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BB153284()
{
  sub_1BB153CE4();
  return sub_1BB872D78();
}

uint64_t sub_1BB1532E0()
{
  sub_1BB153CE4();
  return sub_1BB872D24();
}

uint64_t sub_1BB15332C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BA847BCC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BB153368()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F746164696C6176;
  if (*v0 != 1)
    v1 = 0x617461646174656DLL;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB1533CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB153E48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB1533F0()
{
  sub_1BB1539C4();
  return sub_1BB874710();
}

uint64_t sub_1BB153418()
{
  sub_1BB1539C4();
  return sub_1BB87471C();
}

uint64_t sub_1BB153440@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1BB153774(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BB15346C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB153100(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1BB153488(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  if (*a1 == *a2 && a1[1] == a2[1])
    return sub_1BA857260(v2, v4) & (v3 == v5);
  v7 = sub_1BB874398();
  result = 0;
  if ((v7 & 1) != 0)
    return sub_1BA857260(v2, v4) & (v3 == v5);
  return result;
}

uint64_t sub_1BB1534FC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB7EAF90((uint64_t)v3, v1);
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB153570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  sub_1BB872A90();
  sub_1BB7EAF90(a1, v3);
  return sub_1BB8745D8();
}

uint64_t sub_1BB1535B8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB7EAF90((uint64_t)v3, v1);
  sub_1BB8745D8();
  return sub_1BB874608();
}

_QWORD *initializeWithCopy for FormatDerivedDataOptionReference(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatDerivedDataOptionReference(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataOptionReference(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionReference()
{
  return &type metadata for FormatDerivedDataOptionReference;
}

unint64_t sub_1BB153730()
{
  unint64_t result;

  result = qword_1EF2BC048;
  if (!qword_1EF2BC048)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFC14, &type metadata for FormatDerivedDataOptionReference);
    atomic_store(result, (unint64_t *)&qword_1EF2BC048);
  }
  return result;
}

uint64_t sub_1BB153774(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1BB153A90(0, &qword_1EF2BC050, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1539C4();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v12) = 0;
    v8 = sub_1BB874098();
    v11 = 1;
    sub_1BB153A08();
    swift_bridgeObjectRetain();
    sub_1BB8740D4();
    v11 = 2;
    sub_1BB153A4C();
    swift_bridgeObjectRetain();
    v10 = 0;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BB1539C4()
{
  unint64_t result;

  result = qword_1EF2BC058;
  if (!qword_1EF2BC058)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFF78, &type metadata for FormatDerivedDataOptionReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC058);
  }
  return result;
}

unint64_t sub_1BB153A08()
{
  unint64_t result;

  result = qword_1EF2BC060;
  if (!qword_1EF2BC060)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E008, &type metadata for FormatOptionValidator);
    atomic_store(result, (unint64_t *)&qword_1EF2BC060);
  }
  return result;
}

unint64_t sub_1BB153A4C()
{
  unint64_t result;

  result = qword_1EF2BC068;
  if (!qword_1EF2BC068)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFF50, &type metadata for FormatDerivedDataOptionReference.Metadata);
    atomic_store(result, (unint64_t *)&qword_1EF2BC068);
  }
  return result;
}

void sub_1BB153A90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB1539C4();
    v7 = a3(a1, &type metadata for FormatDerivedDataOptionReference.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB153AEC()
{
  unint64_t result;

  result = qword_1EF2BC078;
  if (!qword_1EF2BC078)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93DFE0, &type metadata for FormatOptionValidator);
    atomic_store(result, (unint64_t *)&qword_1EF2BC078);
  }
  return result;
}

unint64_t sub_1BB153B30()
{
  unint64_t result;

  result = qword_1EF2BC080;
  if (!qword_1EF2BC080)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFF28, &type metadata for FormatDerivedDataOptionReference.Metadata);
    atomic_store(result, (unint64_t *)&qword_1EF2BC080);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataOptionReference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB153BC0 + 4 * byte_1BB8EFBA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB153BF4 + 4 * byte_1BB8EFBA0[v4]))();
}

uint64_t sub_1BB153BF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB153BFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB153C04);
  return result;
}

uint64_t sub_1BB153C10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB153C18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB153C1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB153C24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionReference.CodingKeys()
{
  return &type metadata for FormatDerivedDataOptionReference.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionReference.Metadata()
{
  return &type metadata for FormatDerivedDataOptionReference.Metadata;
}

unint64_t sub_1BB153C54()
{
  unint64_t result;

  result = qword_1EF2BC088;
  if (!qword_1EF2BC088)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFCD0, &type metadata for FormatDerivedDataOptionReference.Metadata);
    atomic_store(result, (unint64_t *)&qword_1EF2BC088);
  }
  return result;
}

unint64_t sub_1BB153C9C()
{
  unint64_t result;

  result = qword_1EF2BC090;
  if (!qword_1EF2BC090)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFCA0, &type metadata for FormatDerivedDataOptionReference.Metadata);
    atomic_store(result, (unint64_t *)&qword_1EF2BC090);
  }
  return result;
}

unint64_t sub_1BB153CE4()
{
  unint64_t result;

  result = qword_1EF2BC098;
  if (!qword_1EF2BC098)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFCF8, &type metadata for FormatDerivedDataOptionReference.Metadata);
    atomic_store(result, (unint64_t *)&qword_1EF2BC098);
  }
  return result;
}

unint64_t sub_1BB153D2C()
{
  unint64_t result;

  result = qword_1EF2BC0A0;
  if (!qword_1EF2BC0A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFD30, &type metadata for FormatDerivedDataOptionReference.Metadata);
    atomic_store(result, (unint64_t *)&qword_1EF2BC0A0);
  }
  return result;
}

unint64_t sub_1BB153D74()
{
  unint64_t result;

  result = qword_1EF2BC0A8;
  if (!qword_1EF2BC0A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFF00, &type metadata for FormatDerivedDataOptionReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC0A8);
  }
  return result;
}

unint64_t sub_1BB153DBC()
{
  unint64_t result;

  result = qword_1EF2BC0B0;
  if (!qword_1EF2BC0B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFE70, &type metadata for FormatDerivedDataOptionReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC0B0);
  }
  return result;
}

unint64_t sub_1BB153E04()
{
  unint64_t result;

  result = qword_1EF2BC0B8;
  if (!qword_1EF2BC0B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EFE98, &type metadata for FormatDerivedDataOptionReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC0B8);
  }
  return result;
}

uint64_t sub_1BB153E48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F746164696C6176 && a2 == 0xE900000000000072 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t FormatWebEmbedData.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedData.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem, a1, (uint64_t (*)(_QWORD))sub_1BA6DA0C0);
}

uint64_t FormatWebEmbedData.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url;
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatWebEmbedData.indexFileURLPromise.getter()
{
  return swift_retain();
}

uint64_t FormatWebEmbedData.dataURLPromise.getter()
{
  return swift_retain();
}

uint64_t FormatWebEmbedData.dataVisualization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization, a1, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
}

uint64_t FormatWebEmbedData.config.getter()
{
  return swift_retain();
}

uint64_t sub_1BB1540AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v5 = v4;
  v44 = a4;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v47 = (uint64_t)&v39 - v12;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v46 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6DA0C0(0);
  MEMORY[0x1E0C80A78](v16);
  v40 = (uint64_t)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v39 - v23;
  v42 = a1;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v48 = a3;
  v39 = v25;
  ((void (*)(uint64_t, uint64_t, uint64_t, double))v25)(v4 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url, a3, v13, v22);
  v45 = v14;
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v26(v24, 1, 1, v13);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A580, (uint64_t (*)(uint64_t))sub_1BA6EF3B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_indexFileURLPromise) = sub_1BB86E9E0();
  v26(v24, 1, 1, v13);
  swift_allocObject();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataURLPromise) = sub_1BB86E9E0();
  v27 = v4 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization;
  v28 = type metadata accessor for WebEmbedDataVisualization();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v27, 1, 1, v28);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_config) = v44;
  v43 = a2;
  if (a2)
  {
    v39(v46, v48, v13);
    v26(v24, 1, 1, v13);
    v30 = type metadata accessor for FeedHeadline(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v47, 1, 1, v30);
    v31 = (uint64_t)v41;
    v29((uint64_t)v41, 1, 1, v28);
    v26(v20, 1, 1, v13);
    swift_allocObject();
    swift_retain();
    v32 = sub_1BB86E9E0();
    v26(v20, 1, 1, v13);
    swift_allocObject();
    v33 = sub_1BB86E9E0();
    v34 = v40;
    FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v42, v43, v46, (uint64_t)v24, v32, v33, v47, v31, v40, 2u);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v13);
    v35 = type metadata accessor for FeedItem(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
    sub_1BB154798(v34, v5 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v13);
    v36 = v5 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem;
    v37 = type metadata accessor for FeedItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  }
  return v5;
}

uint64_t FormatWebEmbedData.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem, (uint64_t (*)(_QWORD))sub_1BA6DA0C0);
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url;
  v2 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  swift_release();
  return v0;
}

uint64_t FormatWebEmbedData.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem, (uint64_t (*)(_QWORD))sub_1BA6DA0C0);
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url;
  v2 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB15468C()
{
  return type metadata accessor for FormatWebEmbedData();
}

uint64_t type metadata accessor for FormatWebEmbedData()
{
  uint64_t result;

  result = qword_1ED3A63C8;
  if (!qword_1ED3A63C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB1546D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BA6DA0C0(319);
  if (v0 <= 0x3F)
  {
    sub_1BB86C67C();
    if (v1 <= 0x3F)
    {
      sub_1BA6CAB4C(319);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for FormatWebEmbedData()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB154798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA6DA0C0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t FormatGroupNodeMask.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v3;
  return sub_1BA71CA6C(v3);
}

uint64_t FormatGroupNodeMask.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeMask.style.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeMask.animation.getter()
{
  return swift_retain();
}

unint64_t FormatGroupNodeMask.size.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v2;
  return sub_1BA719718(v3);
}

uint64_t (*FormatGroupNodeMask.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatGroupNodeMask.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatGroupNodeMask.adjustments.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *FormatGroupNodeMask.__allocating_init(style:animation:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;

  v8 = (_QWORD *)swift_allocObject();
  v9 = *a3;
  v8[2] = a1;
  v8[3] = a2;
  swift_beginAccess();
  v8[4] = v9;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

_QWORD *FormatGroupNodeMask.init(style:animation:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;

  v6 = *a3;
  v4[2] = a1;
  v4[3] = a2;
  swift_beginAccess();
  v4[4] = v6;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t FormatGroupNodeMask.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatGroupNodeMask.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB154ACC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB154B64(&qword_1EF2BC0C0, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMask);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB154B00(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB154B64(&qword_1ED3BE5E0, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMask);
  a1[2] = sub_1BB154B64(&qword_1ED39FE70, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMask);
  result = sub_1BB154B64(&qword_1EF2BC0C8, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMask);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB154B64(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatGroupNodeMask();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB154BA0(_QWORD *a1)
{
  return FormatGroupNodeMask.encode(to:)(a1);
}

uint64_t sub_1BB154BC0(_QWORD *a1, _QWORD *a2)
{
  return static FormatGroupNodeMask.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1BB154BCC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = v4;
  return sub_1BA71CA6C(v4);
}

uint64_t sub_1BB154C18@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatGroupNodeMask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatGroupNodeMask.__allocating_init(style:animation:size:adjustments:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

char *sub_1BB154C78(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *result;
  uint64_t v10;
  char *v11;
  char *v12;
  _QWORD *v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  id *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char **, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  id v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  char *v72;
  char *v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  void *v107;
  id v108;
  id v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  unsigned __int8 v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char *v126;
  char *v127;
  uint64_t v128;
  int v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(char *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  char *v152;
  id v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  _QWORD *v158;
  unint64_t v159;
  char *v160;
  int *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(char *, uint64_t, uint64_t);
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  unint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  char *v181;
  int *v182;
  unsigned int (*v183)(char *, uint64_t, int *);
  uint64_t v184;
  char *v185;
  _QWORD *v186;
  unint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  __int128 v194;
  int v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  __int128 v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  __int128 v207;
  __int128 v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  const void *v217;
  uint64_t v218;
  unsigned int (*v219)(const void *, uint64_t, uint64_t);
  uint64_t v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  int *v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  void (*v231)(char *, uint64_t, uint64_t);
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  _QWORD *v239;
  unint64_t v240;
  char *v241;
  _QWORD *v242;
  unint64_t v243;
  char *v244;
  _QWORD *v245;
  unint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  _QWORD *v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  int *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  void (*v269)(char *, uint64_t, uint64_t);
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  _QWORD *v278;
  unint64_t v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  void *v295;
  uint64_t v296;
  uint64_t v297;
  void (*v298)(char *, char *, uint64_t);
  id v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  __int128 v307;
  _OWORD *v308;
  _OWORD *v309;
  char *v310;
  char *v311;
  char *v312;
  uint64_t v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  unsigned int (*v317)(char *, uint64_t, uint64_t);
  uint64_t v318;
  uint64_t v319;
  char *v320;
  _QWORD *v321;
  uint64_t v322;
  uint64_t v323;
  unsigned int (*v324)(_QWORD *, uint64_t, uint64_t);
  uint64_t v325;
  __int128 v326;
  _OWORD *v327;
  _OWORD *v328;
  char *v329;
  char *v330;
  uint64_t v331;
  char *v332;
  _QWORD *v333;
  unint64_t v334;
  uint64_t v335;
  unint64_t v336;
  __int128 v337;
  _OWORD *v338;
  _OWORD *v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  char *v345;
  char *v346;
  int *v347;
  uint64_t v348;
  char *v349;
  int *v350;
  unsigned int (*v351)(char *, uint64_t, int *);
  _QWORD *v352;
  uint64_t v353;
  __int128 v354;
  __int128 v355;
  char *v356;
  char *v357;
  char *v358;
  char *v359;
  _OWORD *v360;
  _OWORD *v361;
  __int128 v362;
  char *v363;
  char *v364;
  char *v365;
  char *v366;
  char *v367;
  char *v368;
  __int128 v369;
  uint64_t v370;
  void *v371;
  id v372;
  __int128 v373;
  char *v374;
  char *v375;
  char *v376;
  char *v377;
  _QWORD *v378;
  unint64_t v379;
  char *v380;
  char *v381;
  char *v382;
  char *v383;
  char *v384;
  char *v385;
  _QWORD *v386;
  unint64_t v387;
  char *v388;
  char *v389;
  char *v390;
  char *v391;
  char *v392;
  char *v393;
  char *v394;
  __int128 v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  void *v401;
  uint64_t v402;
  char *v403;
  char *v404;
  int *v405;
  char *v406;
  id v407;
  char *v408;
  uint64_t v409;
  char *v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  _QWORD *v416;
  _QWORD *v417;
  unint64_t v418;
  uint64_t v419;
  unint64_t v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  char *v425;
  char *v426;
  char *v427;
  char *v428;
  _QWORD *v429;
  unint64_t v430;
  uint64_t v431;
  void *v432;
  void (*v433)(_QWORD *, _QWORD, uint64_t, int *);
  id v434;
  uint64_t v435;
  char *v436;
  uint64_t *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  int EnumCaseMultiPayload;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  char *v446;
  char *v447;
  __int128 v448;
  uint64_t v449;
  uint64_t v450;
  void *v451;
  uint64_t v452;
  char *v453;
  _QWORD *v454;
  uint64_t v455;
  unsigned int (*v456)(_QWORD *, uint64_t, uint64_t);
  id v457;
  uint64_t v458;
  id *v459;
  unsigned int v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  unsigned __int8 v466;
  void *v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  int v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  unsigned int (*v484)(char *, uint64_t, uint64_t);
  uint64_t v485;
  id v486;
  uint64_t v487;
  unsigned int (**v488)(_QWORD *, uint64_t, uint64_t);
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  char *v494;
  uint64_t v495;
  unsigned int (*v496)(char *, uint64_t, uint64_t);
  const void *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  _QWORD *v508;
  unint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  unint64_t v514;
  uint64_t v515;
  char *v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  char *v520;
  _QWORD *v521;
  uint64_t v522;
  uint64_t v523;
  void *v524;
  void (*v525)(char *, _QWORD, uint64_t, uint64_t);
  id v526;
  uint64_t v527;
  char *v528;
  uint64_t v529;
  char *v530;
  _QWORD *v531;
  uint64_t v532;
  int *v533;
  uint64_t v534;
  char *__dst;
  _QWORD *__dsta;
  void (*__dstb)(char *, char *, void *);
  _QWORD *__dstc;
  char *v539;
  char *v540;
  void *v541;
  char *v542;
  char v543;
  char *v544;
  char *v545;
  void *v546;
  int *v547;
  int *v548;
  int *v549;
  char *v550;
  char v551;
  void *v552;
  void (**v553)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  char *v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  char v562;
  uint64_t v563;
  uint64_t v564;
  int *v565;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
    return a1;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = sub_1BB871B24();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1u:
    case 2u:
    case 3u:
    case 7u:
    case 8u:
    case 0x13u:
      *(_QWORD *)a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4u:
      v10 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v11 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v11;
          v12 = a2[3];
          *((_QWORD *)a1 + 2) = a2[2];
          *((_QWORD *)a1 + 3) = v12;
          a1[32] = *((_BYTE *)a2 + 32);
          v13 = a2 + 5;
          v14 = (unint64_t)a2[6];
          swift_bridgeObjectRetain();
          if (v14 >= 0x11)
          {
            *((_QWORD *)a1 + 5) = *v13;
            *((_QWORD *)a1 + 6) = v14;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)v13;
          }
          goto LABEL_227;
        case 1u:
          v154 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v154;
          v155 = a2[3];
          *((_QWORD *)a1 + 2) = a2[2];
          *((_QWORD *)a1 + 3) = v155;
          a1[32] = *((_BYTE *)a2 + 32);
          v156 = a2[6];
          *((_QWORD *)a1 + 5) = a2[5];
          *((_QWORD *)a1 + 6) = v156;
          v157 = a2[8];
          *((_QWORD *)a1 + 7) = a2[7];
          *((_QWORD *)a1 + 8) = v157;
          v158 = a2 + 9;
          v159 = (unint64_t)a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v159 >= 0x11)
          {
            *((_QWORD *)a1 + 9) = *v158;
            *((_QWORD *)a1 + 10) = v159;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 72) = *(_OWORD *)v158;
          }
          goto LABEL_227;
        case 2u:
          v160 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v160;
          v161 = (int *)type metadata accessor for FeedBannerAd();
          v162 = v161[5];
          v163 = &a1[v162];
          v164 = (uint64_t)a2 + v162;
          v165 = sub_1BB8721C0();
          v166 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 16);
          swift_bridgeObjectRetain();
          v166(v163, v164, v165);
          *(_QWORD *)&a1[v161[6]] = *(char **)((char *)a2 + v161[6]);
          v167 = v161[7];
          v168 = &a1[v167];
          v169 = (uint64_t)a2 + v167;
          *(_QWORD *)v168 = *(_QWORD *)v169;
          v168[8] = *(_BYTE *)(v169 + 8);
          v170 = v161[8];
          v171 = &a1[v170];
          v172 = (uint64_t)a2 + v170;
          v173 = *(_QWORD *)(v172 + 8);
          if (v173 >= 0x11)
            goto LABEL_87;
          *(_OWORD *)v171 = *(_OWORD *)v172;
          goto LABEL_227;
        case 3u:
          v174 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v174;
          *((_QWORD *)a1 + 2) = a2[2];
          a1[24] = *((_BYTE *)a2 + 24);
          v175 = a2[5];
          *((_QWORD *)a1 + 4) = a2[4];
          *((_QWORD *)a1 + 5) = v175;
          *((_QWORD *)a1 + 6) = a2[6];
          a1[56] = *((_BYTE *)a2 + 56);
          v547 = (int *)type metadata accessor for FeedHeadline(0);
          v176 = v547[10];
          v177 = &a1[v176];
          v178 = (uint64_t)a2 + v176;
          *v177 = *((_BYTE *)a2 + v176);
          v177[1] = *((_BYTE *)a2 + v176 + 1);
          v179 = (int *)type metadata accessor for FeedHeadline.State(0);
          v180 = v179[6];
          __dst = &v177[v180];
          v181 = (char *)(v178 + v180);
          v182 = (int *)type metadata accessor for SharedItem();
          v532 = *((_QWORD *)v182 - 1);
          v183 = *(unsigned int (**)(char *, uint64_t, int *))(v532 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v183(v181, 1, v182))
          {
            v184 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v181, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
          }
          else
          {
            v293 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(__dst, v181, v293);
            __dst[v182[5]] = v181[v182[5]];
            v294 = v182[6];
            v295 = *(void **)&v181[v294];
            *(_QWORD *)&__dst[v294] = v295;
            v296 = v182[7];
            v542 = &__dst[v296];
            v530 = &v181[v296];
            v297 = sub_1BB86C67C();
            v298 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 16);
            v299 = v295;
            v298(v542, v530, v297);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v532 + 56))(__dst, 0, 1, v182);
          }
          v177[v179[7]] = *(_BYTE *)(v178 + v179[7]);
          v177[v179[8]] = *(_BYTE *)(v178 + v179[8]);
          v177[v179[9]] = *(_BYTE *)(v178 + v179[9]);
          v177[v179[10]] = *(_BYTE *)(v178 + v179[10]);
          v300 = v547[11];
          v301 = &a1[v300];
          v302 = (char *)a2 + v300;
          v303 = sub_1BB871B24();
          v304 = *(_QWORD *)(v303 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v304 + 48))(v302, 1, v303))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v301, v302, *(_QWORD *)(*(_QWORD *)(v305 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v304 + 16))(v301, v302, v303);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v304 + 56))(v301, 0, 1, v303);
          }
          v331 = v547[12];
          v332 = &a1[v331];
          v333 = (char **)((char *)a2 + v331);
          v334 = v333[1];
          if (v334 >= 0x11)
          {
            *(_QWORD *)v332 = *v333;
            *((_QWORD *)v332 + 1) = v334;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v332 = *(_OWORD *)v333;
          }
          v335 = v547[13];
          v336 = *(unint64_t *)((char *)a2 + v335);
          if (v336 >= 2)
          {
            if (v336 == 2)
            {
              *(_QWORD *)&a1[v335] = 2;
            }
            else
            {
              *(_QWORD *)&a1[v335] = v336;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)&a1[v335] = v336;
          }
          v370 = v547[14];
          v371 = *(char **)((char *)a2 + v370);
          *(_QWORD *)&a1[v370] = v371;
          v372 = v371;
          goto LABEL_227;
        case 4u:
          v185 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v185;
          a1[16] = *((_BYTE *)a2 + 16);
          v186 = a2 + 3;
          v187 = (unint64_t)a2[4];
          if (v187 >= 0x11)
          {
            *((_QWORD *)a1 + 3) = *v186;
            *((_QWORD *)a1 + 4) = v187;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v186;
          }
          v262 = a2[6];
          *((_QWORD *)a1 + 5) = a2[5];
          *((_QWORD *)a1 + 6) = v262;
          v263 = (int *)type metadata accessor for FeedWebEmbed();
          v264 = v263[8];
          v265 = &a1[v264];
          v266 = (uint64_t)a2 + v264;
          v267 = sub_1BB86C67C();
          v268 = *(_QWORD *)(v267 - 8);
          v269 = *(void (**)(char *, uint64_t, uint64_t))(v268 + 16);
          swift_bridgeObjectRetain();
          v269(v265, v266, v267);
          v549 = v263;
          v270 = v263[9];
          v271 = &a1[v270];
          v272 = (char *)a2 + v270;
          __dstb = (void (*)(char *, char *, void *))v269;
          v541 = (void *)v267;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))((char *)a2 + v270, 1, v267))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v271, v272, *(_QWORD *)(*(_QWORD *)(v273 - 8) + 64));
          }
          else
          {
            v269(v271, (uint64_t)v272, v267);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v268 + 56))(v271, 0, 1, v267);
          }
          *(_QWORD *)&a1[v263[10]] = *(char **)((char *)a2 + v263[10]);
          *(_QWORD *)&a1[v263[11]] = *(char **)((char *)a2 + v263[11]);
          v319 = v263[12];
          v320 = &a1[v319];
          v321 = (char **)((char *)a2 + v319);
          v322 = type metadata accessor for FeedHeadline(0);
          v323 = *(_QWORD *)(v322 - 8);
          v324 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v323 + 48);
          swift_retain();
          swift_retain();
          if (v324(v321, 1, v322))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v325 - 8) + 64));
          }
          else
          {
            v529 = v323;
            v342 = v321[1];
            *(_QWORD *)v320 = *v321;
            *((_QWORD *)v320 + 1) = v342;
            *((_QWORD *)v320 + 2) = v321[2];
            v320[24] = *((_BYTE *)v321 + 24);
            v343 = v321[5];
            *((_QWORD *)v320 + 4) = v321[4];
            *((_QWORD *)v320 + 5) = v343;
            *((_QWORD *)v320 + 6) = v321[6];
            v320[56] = *((_BYTE *)v321 + 56);
            v531 = v321;
            v533 = (int *)v322;
            v344 = *(int *)(v322 + 40);
            v345 = &v320[v344];
            v346 = (char *)v321 + v344;
            *v345 = *((_BYTE *)v321 + v344);
            v345[1] = *((_BYTE *)v321 + v344 + 1);
            v347 = (int *)type metadata accessor for FeedHeadline.State(0);
            v348 = v347[6];
            v528 = &v345[v348];
            v349 = &v346[v348];
            v350 = (int *)type metadata accessor for SharedItem();
            v527 = *((_QWORD *)v350 - 1);
            v351 = *(unsigned int (**)(char *, uint64_t, int *))(v527 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            v352 = v320;
            if (v351(v349, 1, v350))
            {
              v353 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v528, v349, *(_QWORD *)(*(_QWORD *)(v353 - 8) + 64));
            }
            else
            {
              v399 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v399 - 8) + 16))(v528, v349, v399);
              v528[v350[5]] = v349[v350[5]];
              v400 = v350[6];
              v401 = *(void **)&v349[v400];
              *(_QWORD *)&v528[v400] = v401;
              v402 = v350[7];
              v403 = v349;
              v404 = &v528[v402];
              v405 = v347;
              v406 = &v403[v402];
              v407 = v401;
              v408 = v406;
              v347 = v405;
              __dstb(v404, v408, v541);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v527 + 56))(v528, 0, 1, v350);
            }
            v345[v347[7]] = v346[v347[7]];
            v345[v347[8]] = v346[v347[8]];
            v345[v347[9]] = v346[v347[9]];
            v345[v347[10]] = v346[v347[10]];
            v409 = v533[11];
            v410 = (char *)v352 + v409;
            v411 = (char *)v531 + v409;
            v412 = sub_1BB871B24();
            v413 = *(_QWORD *)(v412 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v413 + 48))(v411, 1, v412))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v410, v411, *(_QWORD *)(*(_QWORD *)(v414 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v413 + 16))(v410, v411, v412);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v413 + 56))(v410, 0, 1, v412);
            }
            v415 = v533[12];
            v416 = (_QWORD *)((char *)v352 + v415);
            v417 = (_QWORD *)((char *)v531 + v415);
            v418 = v417[1];
            if (v418 >= 0x11)
            {
              *v416 = *v417;
              v416[1] = v418;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v416 = *(_OWORD *)v417;
            }
            v419 = v533[13];
            v420 = *(_QWORD *)((char *)v531 + v419);
            if (v420 >= 2)
            {
              if (v420 == 2)
              {
                *(_QWORD *)((char *)v352 + v419) = 2;
              }
              else
              {
                *(_QWORD *)((char *)v352 + v419) = v420;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(_QWORD *)((char *)v352 + v419) = v420;
            }
            v431 = v533[14];
            v432 = *(void **)((char *)v531 + v431);
            *(_QWORD *)((char *)v352 + v431) = v432;
            v433 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v529 + 56);
            v434 = v432;
            v433(v352, 0, 1, v533);
          }
          v435 = v549[13];
          v436 = &a1[v435];
          v437 = (uint64_t *)((char *)a2 + v435);
          v438 = type metadata accessor for WebEmbedDataVisualization();
          v439 = *(_QWORD *)(v438 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v439 + 48))(v437, 1, v438))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v436, v437, *(_QWORD *)(*(_QWORD *)(v440 - 8) + 64));
          }
          else
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            v442 = *v437;
            if (EnumCaseMultiPayload == 1)
            {
              v443 = v437[1];
              *(_QWORD *)v436 = v442;
              *((_QWORD *)v436 + 1) = v443;
              v444 = type metadata accessor for GenericDataVisualization();
              v445 = *(int *)(v444 + 20);
              v446 = &v436[v445];
              v447 = (char *)v437 + v445;
              swift_bridgeObjectRetain();
              __dstb(v446, v447, v541);
              *(_QWORD *)&v436[*(int *)(v444 + 24)] = *(uint64_t *)((char *)v437 + *(int *)(v444 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_QWORD *)v436 = v442;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v439 + 56))(v436, 0, 1, v438);
          }
          a1[v549[14]] = *((_BYTE *)a2 + v549[14]);
          goto LABEL_227;
        case 5u:
          v188 = *a2;
          v189 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v189;
          *((_QWORD *)a1 + 2) = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          *((_QWORD *)a1 + 4) = a2[4];
          a1[40] = *((_BYTE *)a2 + 40);
          v190 = a2[7];
          *((_QWORD *)a1 + 6) = a2[6];
          *((_QWORD *)a1 + 7) = v190;
          a1[64] = *((_BYTE *)a2 + 64);
          v191 = a2[10];
          v192 = v188;
          swift_bridgeObjectRetain();
          v193 = v190;
          if (v191 == (char *)1)
          {
            v194 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 88) = v194;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            *((_QWORD *)a1 + 9) = a2[9];
            *((_QWORD *)a1 + 10) = v191;
            v274 = a2[12];
            *((_QWORD *)a1 + 11) = a2[11];
            *((_QWORD *)a1 + 12) = v274;
            v276 = a2[13];
            v275 = a2[14];
            *((_QWORD *)a1 + 13) = v276;
            *((_QWORD *)a1 + 14) = v275;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v277 = v276;
          }
          v278 = a2 + 15;
          v279 = (unint64_t)a2[16];
          if (v279 >= 0x11)
          {
            *((_QWORD *)a1 + 15) = *v278;
            *((_QWORD *)a1 + 16) = v279;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v278;
          }
          a1[136] = *((_BYTE *)a2 + 136);
          goto LABEL_227;
        case 6u:
          v195 = *((unsigned __int8 *)a2 + 281);
          if (v195 == 2)
          {
            v356 = a2[1];
            *(_QWORD *)a1 = *a2;
            *((_QWORD *)a1 + 1) = v356;
            *((_QWORD *)a1 + 2) = a2[2];
            a1[24] = *((_BYTE *)a2 + 24);
            *((_QWORD *)a1 + 4) = a2[4];
            a1[40] = *((_BYTE *)a2 + 40);
            v357 = a2[7];
            *((_QWORD *)a1 + 6) = a2[6];
            *((_QWORD *)a1 + 7) = v357;
            v358 = a2[9];
            *((_QWORD *)a1 + 8) = a2[8];
            *((_QWORD *)a1 + 9) = v358;
            v359 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v359 != (char *)1)
            {
              *((_QWORD *)a1 + 10) = a2[10];
              *((_QWORD *)a1 + 11) = v359;
              v380 = a2[15];
              swift_bridgeObjectRetain();
              if (v380)
              {
                v381 = a2[16];
                *((_QWORD *)a1 + 15) = v380;
                *((_QWORD *)a1 + 16) = v381;
                (**((void (***)(uint64_t, uint64_t, char *))v380 - 1))((uint64_t)(a1 + 96), (uint64_t)(a2 + 12), v380);
                *((_QWORD *)a1 + 17) = a2[17];
              }
              else
              {
                v448 = *((_OWORD *)a2 + 7);
                *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
                *((_OWORD *)a1 + 7) = v448;
                *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
              }
              a1[144] = *((_BYTE *)a2 + 144);
              goto LABEL_195;
            }
            v360 = a1 + 80;
            v361 = a2 + 10;
            v362 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v362;
            a1[144] = *((_BYTE *)a2 + 144);
LABEL_180:
            v424 = v361[1];
            *v360 = *v361;
            v360[1] = v424;
            goto LABEL_195;
          }
          if (v195 != 1)
          {
            v363 = *a2;
            v364 = a2[1];
            *(_QWORD *)a1 = *a2;
            *((_QWORD *)a1 + 1) = v364;
            *((_QWORD *)a1 + 2) = a2[2];
            *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
            *((_QWORD *)a1 + 4) = a2[4];
            a1[40] = *((_BYTE *)a2 + 40);
            v365 = a2[7];
            *((_QWORD *)a1 + 6) = a2[6];
            *((_QWORD *)a1 + 7) = v365;
            a1[64] = *((_BYTE *)a2 + 64);
            v366 = a2[10];
            v367 = v363;
            swift_bridgeObjectRetain();
            v368 = v365;
            if (v366 == (char *)1)
            {
              v369 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 88) = v369;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              *((_QWORD *)a1 + 9) = a2[9];
              *((_QWORD *)a1 + 10) = v366;
              v382 = a2[12];
              *((_QWORD *)a1 + 11) = a2[11];
              *((_QWORD *)a1 + 12) = v382;
              v384 = a2[13];
              v383 = a2[14];
              *((_QWORD *)a1 + 13) = v384;
              *((_QWORD *)a1 + 14) = v383;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v385 = v384;
            }
            v386 = a2 + 15;
            v387 = (unint64_t)a2[16];
            if (v387 >= 0x11)
            {
              *((_QWORD *)a1 + 15) = *v386;
              *((_QWORD *)a1 + 16) = v387;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v386;
            }
            a1[136] = *((_BYTE *)a2 + 136);
            goto LABEL_195;
          }
          v196 = *a2;
          v197 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v197;
          *((_QWORD *)a1 + 2) = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          *((_QWORD *)a1 + 4) = a2[4];
          a1[40] = *((_BYTE *)a2 + 40);
          v198 = a2[7];
          *((_QWORD *)a1 + 6) = a2[6];
          *((_QWORD *)a1 + 7) = v198;
          a1[64] = *((_BYTE *)a2 + 64);
          v199 = a2[10];
          v200 = v196;
          swift_bridgeObjectRetain();
          v201 = v198;
          if (v199 == (char *)1)
          {
            v202 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 88) = v202;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            *((_QWORD *)a1 + 9) = a2[9];
            *((_QWORD *)a1 + 10) = v199;
            v374 = a2[12];
            *((_QWORD *)a1 + 11) = a2[11];
            *((_QWORD *)a1 + 12) = v374;
            v376 = a2[13];
            v375 = a2[14];
            *((_QWORD *)a1 + 13) = v376;
            *((_QWORD *)a1 + 14) = v375;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v377 = v376;
          }
          v378 = a2 + 15;
          v379 = (unint64_t)a2[16];
          if (v379 >= 0x11)
          {
            *((_QWORD *)a1 + 15) = *v378;
            *((_QWORD *)a1 + 16) = v379;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v378;
          }
          v361 = a2 + 18;
          v388 = a2[18];
          a1[136] = *((_BYTE *)a2 + 136);
          if (!v388)
          {
            v360 = a1 + 144;
            v421 = *((_OWORD *)a2 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
            *((_OWORD *)a1 + 16) = v421;
            *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            v422 = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
            *((_OWORD *)a1 + 12) = v422;
            v423 = *((_OWORD *)a2 + 14);
            *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 14) = v423;
            goto LABEL_180;
          }
          v389 = a2[19];
          v390 = a2[20];
          *((_QWORD *)a1 + 18) = v388;
          *((_QWORD *)a1 + 19) = v389;
          *((_QWORD *)a1 + 20) = v390;
          *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
          *((_QWORD *)a1 + 22) = a2[22];
          a1[184] = *((_BYTE *)a2 + 184);
          v391 = a2[25];
          *((_QWORD *)a1 + 24) = a2[24];
          *((_QWORD *)a1 + 25) = v391;
          a1[208] = *((_BYTE *)a2 + 208);
          v392 = a2[28];
          v393 = v388;
          swift_bridgeObjectRetain();
          v394 = v391;
          if (v392 == (char *)1)
          {
            v395 = *(_OWORD *)(a2 + 29);
            *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
            *(_OWORD *)(a1 + 232) = v395;
            *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
          }
          else
          {
            *((_QWORD *)a1 + 27) = a2[27];
            *((_QWORD *)a1 + 28) = v392;
            v425 = a2[30];
            *((_QWORD *)a1 + 29) = a2[29];
            *((_QWORD *)a1 + 30) = v425;
            v427 = a2[31];
            v426 = a2[32];
            *((_QWORD *)a1 + 31) = v427;
            *((_QWORD *)a1 + 32) = v426;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v428 = v427;
          }
          v429 = a2 + 33;
          v430 = (unint64_t)a2[34];
          if (v430 >= 0x11)
          {
            *((_QWORD *)a1 + 33) = *v429;
            *((_QWORD *)a1 + 34) = v430;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 264) = *(_OWORD *)v429;
          }
          a1[280] = *((_BYTE *)a2 + 280);
LABEL_195:
          a1[281] = v195;
LABEL_227:
          swift_storeEnumTagMultiPayload();
LABEL_228:
          v501 = type metadata accessor for FormatItemNodeData();
          v502 = *(int *)(v501 + 20);
          v503 = &a1[v502];
          v504 = (uint64_t)a2 + v502;
          v505 = *(uint64_t *)((char *)a2 + v502 + 8);
          *(_QWORD *)v503 = *(char **)((char *)a2 + v502);
          *((_QWORD *)v503 + 1) = v505;
          v506 = *(uint64_t *)((char *)a2 + v502 + 24);
          *((_QWORD *)v503 + 2) = *(char **)((char *)a2 + v502 + 16);
          *((_QWORD *)v503 + 3) = v506;
          v507 = *(uint64_t *)((char *)a2 + v502 + 40);
          *((_QWORD *)v503 + 4) = *(char **)((char *)a2 + v502 + 32);
          *((_QWORD *)v503 + 5) = v507;
          v508 = (char **)((char *)a2 + v502 + 48);
          v509 = *(unint64_t *)((char *)a2 + v502 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v565 = (int *)v501;
          if (v509 >= 0xF)
          {
            *((_QWORD *)v503 + 6) = *v508;
            *((_QWORD *)v503 + 7) = v509;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)v503 + 3) = *(_OWORD *)v508;
          }
          v510 = *(_QWORD *)(v504 + 72);
          *((_QWORD *)v503 + 8) = *(_QWORD *)(v504 + 64);
          *((_QWORD *)v503 + 9) = v510;
          v511 = *(_QWORD *)(v504 + 88);
          *((_QWORD *)v503 + 10) = *(_QWORD *)(v504 + 80);
          *((_QWORD *)v503 + 11) = v511;
          v512 = *(_QWORD *)(v504 + 104);
          *((_QWORD *)v503 + 12) = *(_QWORD *)(v504 + 96);
          *((_QWORD *)v503 + 13) = v512;
          *((_QWORD *)v503 + 14) = *(_QWORD *)(v504 + 112);
          v503[120] = *(_BYTE *)(v504 + 120);
          v513 = v565[6];
          v514 = *(unint64_t *)((char *)a2 + v513);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA728598(v514);
          *(_QWORD *)&a1[v513] = v514;
          v515 = v565[7];
          v516 = &a1[v515];
          v517 = (uint64_t)a2 + v515;
          v518 = sub_1BB86FE38();
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v518 - 8) + 16))(v516, v517, v518);
          v519 = v565[8];
          v520 = &a1[v519];
          v521 = (char **)((char *)a2 + v519);
          v522 = v521[1];
          if (v522)
          {
            *(_QWORD *)v520 = *v521;
            *((_QWORD *)v520 + 1) = v522;
            *((_QWORD *)v520 + 2) = v521[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v520 = *(_OWORD *)v521;
            *((_QWORD *)v520 + 2) = v521[2];
          }
LABEL_234:
          swift_storeEnumTagMultiPayload();
          return a1;
        case 7u:
          v203 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v203;
          *((_QWORD *)a1 + 2) = a2[2];
          a1[24] = *((_BYTE *)a2 + 24);
          *((_QWORD *)a1 + 4) = a2[4];
          a1[40] = *((_BYTE *)a2 + 40);
          v204 = a2[7];
          *((_QWORD *)a1 + 6) = a2[6];
          *((_QWORD *)a1 + 7) = v204;
          v205 = a2[9];
          *((_QWORD *)a1 + 8) = a2[8];
          *((_QWORD *)a1 + 9) = v205;
          v206 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v206 == (char *)1)
          {
            v207 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v207;
            a1[144] = *((_BYTE *)a2 + 144);
            v208 = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 6) = v208;
          }
          else
          {
            *((_QWORD *)a1 + 10) = a2[10];
            *((_QWORD *)a1 + 11) = v206;
            v280 = a2[15];
            swift_bridgeObjectRetain();
            if (v280)
            {
              v281 = a2[16];
              *((_QWORD *)a1 + 15) = v280;
              *((_QWORD *)a1 + 16) = v281;
              (**((void (***)(uint64_t, uint64_t, char *))v280 - 1))((uint64_t)(a1 + 96), (uint64_t)(a2 + 12), v280);
              *((_QWORD *)a1 + 17) = a2[17];
            }
            else
            {
              v373 = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
              *((_OWORD *)a1 + 7) = v373;
              *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
            }
            a1[144] = *((_BYTE *)a2 + 144);
          }
          goto LABEL_227;
        case 8u:
          v209 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v209;
          v210 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v211 = &a1[v210];
          v212 = (uint64_t)a2 + v210;
          v213 = *(uint64_t *)((char *)a2 + v210 + 8);
          *(_QWORD *)v211 = *(char **)((char *)a2 + v210);
          *((_QWORD *)v211 + 1) = v213;
          v214 = *(uint64_t *)((char *)a2 + v210 + 24);
          *((_QWORD *)v211 + 2) = *(char **)((char *)a2 + v210 + 16);
          *((_QWORD *)v211 + 3) = v214;
          v215 = type metadata accessor for FormatCustomItem.Resolved();
          v216 = *(int *)(v215 + 24);
          v540 = &v211[v216];
          v548 = (int *)v215;
          v217 = (const void *)(v212 + v216);
          v218 = type metadata accessor for FormatCustomItem.Action();
          __dsta = *(_QWORD **)(v218 - 8);
          v219 = (unsigned int (*)(const void *, uint64_t, uint64_t))__dsta[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v219(v217, 1, v218))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v540, v217, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
          }
          else
          {
            v306 = sub_1BB86C67C();
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v306 - 8) + 16))(v540, v217, v306);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v540, 0, 1, v218);
          }
          *(_QWORD *)&v211[v548[7]] = *(_QWORD *)(v212 + v548[7]);
          swift_bridgeObjectRetain();
          goto LABEL_227;
        case 9u:
          v221 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v221;
          v222 = a2[3];
          *((_QWORD *)a1 + 2) = a2[2];
          *((_QWORD *)a1 + 3) = v222;
          v223 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v223)
          {
            v224 = a2[8];
            *((_QWORD *)a1 + 7) = v223;
            *((_QWORD *)a1 + 8) = v224;
            (**((void (***)(uint64_t, uint64_t, char *))v223 - 1))((uint64_t)(a1 + 32), (uint64_t)(a2 + 4), v223);
          }
          else
          {
            v307 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v307;
            *((_QWORD *)a1 + 8) = a2[8];
          }
          v308 = a1 + 72;
          v309 = a2 + 9;
          v310 = a2[12];
          if (v310)
          {
            v311 = a2[13];
            *((_QWORD *)a1 + 12) = v310;
            *((_QWORD *)a1 + 13) = v311;
            (**((void (***)(_OWORD *, _OWORD *))v310 - 1))(v308, v309);
          }
          else
          {
            v337 = *(_OWORD *)(a2 + 11);
            *v308 = *v309;
            *(_OWORD *)(a1 + 88) = v337;
            *((_QWORD *)a1 + 13) = a2[13];
          }
          v338 = a1 + 112;
          v339 = a2 + 14;
          v340 = a2[17];
          if (v340)
          {
            v341 = a2[18];
            *((_QWORD *)a1 + 17) = v340;
            *((_QWORD *)a1 + 18) = v341;
            (**((void (***)(_OWORD *, _OWORD *))v340 - 1))(v338, v339);
          }
          else
          {
            v355 = *((_OWORD *)a2 + 8);
            *v338 = *v339;
            *((_OWORD *)a1 + 8) = v355;
            *((_QWORD *)a1 + 18) = a2[18];
          }
          goto LABEL_227;
        case 0xAu:
          v225 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v225;
          v226 = (int *)type metadata accessor for FeedEngagementBanner();
          v227 = v226[5];
          v228 = &a1[v227];
          v229 = (uint64_t)a2 + v227;
          v230 = sub_1BB86EDAC();
          v231 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v230 - 8) + 16);
          swift_bridgeObjectRetain();
          v231(v228, v229, v230);
          *(_QWORD *)&a1[v226[6]] = *(char **)((char *)a2 + v226[6]);
          v232 = v226[7];
          v233 = &a1[v232];
          v234 = (uint64_t)a2 + v232;
          *(_QWORD *)v233 = *(_QWORD *)v234;
          v233[8] = *(_BYTE *)(v234 + 8);
          v235 = v226[8];
          v171 = &a1[v235];
          v172 = (uint64_t)a2 + v235;
          v173 = *(_QWORD *)(v172 + 8);
          if (v173 >= 0x11)
          {
LABEL_87:
            *(_QWORD *)v171 = *(_QWORD *)v172;
            *((_QWORD *)v171 + 1) = v173;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v171 = *(_OWORD *)v172;
          }
          goto LABEL_227;
        case 0xBu:
          *(_QWORD *)a1 = *a2;
          swift_retain();
          goto LABEL_227;
        case 0xCu:
          v236 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v236;
          v237 = a2[3];
          *((_QWORD *)a1 + 2) = a2[2];
          *((_QWORD *)a1 + 3) = v237;
          a1[32] = *((_BYTE *)a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_227;
        case 0xDu:
          v238 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v238;
          a1[16] = *((_BYTE *)a2 + 16);
          v239 = a2 + 3;
          v240 = (unint64_t)a2[4];
          if (v240 >= 0x11)
          {
            *((_QWORD *)a1 + 3) = *v239;
            *((_QWORD *)a1 + 4) = v240;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v239;
          }
          v282 = a2[6];
          *((_QWORD *)a1 + 5) = a2[5];
          *((_QWORD *)a1 + 6) = v282;
          v283 = a2[8];
          *((_QWORD *)a1 + 7) = a2[7];
          *((_QWORD *)a1 + 8) = v283;
          a1[72] = *((_BYTE *)a2 + 72);
          *((_QWORD *)a1 + 10) = a2[10];
          v284 = a2[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v285 = v283;
          swift_bridgeObjectRetain();
          if (v284)
          {
            v286 = a2[15];
            *((_QWORD *)a1 + 14) = v284;
            *((_QWORD *)a1 + 15) = v286;
            (**((void (***)(uint64_t, uint64_t, char *))v284 - 1))((uint64_t)(a1 + 88), (uint64_t)(a2 + 11), v284);
          }
          else
          {
            v326 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 104) = v326;
            *((_QWORD *)a1 + 15) = a2[15];
          }
          v327 = a1 + 128;
          v328 = a2 + 16;
          v329 = a2[19];
          if (v329)
          {
            v330 = a2[20];
            *((_QWORD *)a1 + 19) = v329;
            *((_QWORD *)a1 + 20) = v330;
            (**((void (***)(_OWORD *, _OWORD *))v329 - 1))(v327, v328);
          }
          else
          {
            v354 = *((_OWORD *)a2 + 9);
            *v327 = *v328;
            *((_OWORD *)a1 + 9) = v354;
            *((_QWORD *)a1 + 20) = a2[20];
          }
          goto LABEL_227;
        case 0xEu:
          v241 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v241;
          a1[16] = *((_BYTE *)a2 + 16);
          v242 = a2 + 3;
          v243 = (unint64_t)a2[4];
          if (v243 >= 0x11)
          {
            *((_QWORD *)a1 + 3) = *v242;
            *((_QWORD *)a1 + 4) = v243;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v242;
          }
          v287 = a2[6];
          *((_QWORD *)a1 + 5) = a2[5];
          *((_QWORD *)a1 + 6) = v287;
          *((_QWORD *)a1 + 7) = a2[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_227;
        case 0xFu:
          v244 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v244;
          a1[16] = *((_BYTE *)a2 + 16);
          v245 = a2 + 3;
          v246 = (unint64_t)a2[4];
          if (v246 >= 0x11)
          {
            *((_QWORD *)a1 + 3) = *v245;
            *((_QWORD *)a1 + 4) = v246;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v245;
          }
          v288 = a2[6];
          *((_QWORD *)a1 + 5) = a2[5];
          *((_QWORD *)a1 + 6) = v288;
          v289 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)&a1[v289] = *(char **)((char *)a2 + v289);
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v290 = (char *)&loc_1BB156408 + 4 * word_1BB8F019E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x10u:
          v247 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v247;
          v248 = a2[3];
          *((_QWORD *)a1 + 2) = a2[2];
          *((_QWORD *)a1 + 3) = v248;
          v249 = a2[5];
          *((_QWORD *)a1 + 4) = a2[4];
          *((_QWORD *)a1 + 5) = v249;
          *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
          v250 = a2[10];
          *((_QWORD *)a1 + 9) = a2[9];
          *((_QWORD *)a1 + 10) = v250;
          v251 = a2[12];
          *((_QWORD *)a1 + 11) = a2[11];
          *((_QWORD *)a1 + 12) = v251;
          *((_QWORD *)a1 + 13) = a2[13];
          a1[112] = *((_BYTE *)a2 + 112);
          v252 = a2[16];
          *((_QWORD *)a1 + 15) = a2[15];
          *((_QWORD *)a1 + 16) = v252;
          a1[136] = *((_BYTE *)a2 + 136);
          v253 = a2[19];
          *((_QWORD *)a1 + 18) = a2[18];
          *((_QWORD *)a1 + 19) = v253;
          v254 = a2[21];
          *((_QWORD *)a1 + 20) = a2[20];
          *((_QWORD *)a1 + 21) = v254;
          a1[184] = *((_BYTE *)a2 + 184);
          *((_QWORD *)a1 + 22) = a2[22];
          v255 = a2[25];
          *((_QWORD *)a1 + 24) = a2[24];
          *((_QWORD *)a1 + 25) = v255;
          a1[224] = *((_BYTE *)a2 + 224);
          v256 = a2[27];
          *((_QWORD *)a1 + 26) = a2[26];
          *((_QWORD *)a1 + 27) = v256;
          v257 = a2 + 29;
          v258 = (unint64_t)a2[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v258 >= 0x11)
          {
            *((_QWORD *)a1 + 29) = *v257;
            *((_QWORD *)a1 + 30) = v258;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 232) = *(_OWORD *)v257;
          }
          goto LABEL_227;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          goto LABEL_228;
      }
    case 5u:
      v15 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v15;
      v16 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v16;
      v17 = a2[5];
      *((_QWORD *)a1 + 4) = a2[4];
      *((_QWORD *)a1 + 5) = v17;
      v18 = a2[7];
      *((_QWORD *)a1 + 6) = a2[6];
      *((_QWORD *)a1 + 7) = v18;
      v19 = a2[9];
      *((_QWORD *)a1 + 8) = a2[8];
      *((_QWORD *)a1 + 9) = v19;
      a1[80] = *((_BYTE *)a2 + 80);
      v20 = a2[12];
      *((_QWORD *)a1 + 11) = a2[11];
      *((_QWORD *)a1 + 12) = v20;
      a1[104] = *((_BYTE *)a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 6u:
      v21 = type metadata accessor for FormatAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)a1 = *a2;
          v22 = (id *)(a2 + 1);
          v23 = *((unsigned __int8 *)a2 + 16);
          swift_bridgeObjectRetain();
          if (v23 <= 0xFD)
          {
            v153 = *v22;
            sub_1BA727178(*v22, v23);
            *((_QWORD *)a1 + 1) = v153;
            a1[16] = v23;
          }
          else
          {
            *((_QWORD *)a1 + 1) = *v22;
            a1[16] = *((_BYTE *)a2 + 16);
          }
          goto LABEL_200;
        case 1u:
          v110 = *a2;
          v111 = (uint64_t)a2[1];
          v112 = (uint64_t)a2[2];
          v113 = (uint64_t)a2[3];
          v114 = (uint64_t)a2[4];
          v559 = v21;
          v115 = *((_BYTE *)a2 + 41);
          v116 = *((_BYTE *)a2 + 40);
          sub_1BA7271AC(*a2, v111, v112, v113, v114, v116, v115);
          *(_QWORD *)a1 = v110;
          *((_QWORD *)a1 + 1) = v111;
          *((_QWORD *)a1 + 2) = v112;
          *((_QWORD *)a1 + 3) = v113;
          *((_QWORD *)a1 + 4) = v114;
          a1[40] = v116;
          a1[41] = v115;
          v21 = v559;
          v117 = a2[7];
          *((_QWORD *)a1 + 6) = a2[6];
          LOBYTE(v111) = *((_BYTE *)a2 + 64);
          swift_bridgeObjectRetain();
          sub_1BA727178(v117, v111);
          *((_QWORD *)a1 + 7) = v117;
          a1[64] = v111;
          goto LABEL_200;
        case 2u:
          *(_QWORD *)a1 = *a2;
          swift_retain();
          goto LABEL_200;
        case 4u:
          v118 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v118;
          v119 = a2[3];
          *((_QWORD *)a1 + 2) = a2[2];
          *((_QWORD *)a1 + 3) = v119;
          v120 = a2[5];
          *((_QWORD *)a1 + 4) = a2[4];
          *((_QWORD *)a1 + 5) = v120;
          v121 = (uint64_t)a2[6];
          v122 = (uint64_t)a2[7];
          v560 = v21;
          v123 = (uint64_t)a2[8];
          v124 = (uint64_t)a2[9];
          v125 = *((_BYTE *)a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA7261E0(v121, v122, v123, v124, v125);
          *((_QWORD *)a1 + 6) = v121;
          *((_QWORD *)a1 + 7) = v122;
          *((_QWORD *)a1 + 8) = v123;
          *((_QWORD *)a1 + 9) = v124;
          v21 = v560;
          a1[80] = v125;
          v126 = a2[12];
          *((_QWORD *)a1 + 11) = a2[11];
          *((_QWORD *)a1 + 12) = v126;
          v127 = a2[14];
          *((_QWORD *)a1 + 13) = a2[13];
          *((_QWORD *)a1 + 14) = v127;
          *((_QWORD *)a1 + 15) = a2[15];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_200;
        case 5u:
          v128 = type metadata accessor for FormatPurchaseData(0);
          v129 = swift_getEnumCaseMultiPayload();
          if (v129 == 1)
          {
            v259 = type metadata accessor for FormatPurchaseLandingPageData();
            v260 = *(_QWORD *)(v259 - 8);
            if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v260 + 48))(a2, 1, v259))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
            }
            else
            {
              v564 = v21;
              v312 = a2[1];
              *(_QWORD *)a1 = *a2;
              *((_QWORD *)a1 + 1) = v312;
              v313 = *(int *)(v259 + 20);
              v550 = &a1[v313];
              v314 = (char *)a2 + v313;
              v315 = type metadata accessor for FormatPostPurchaseData();
              v316 = *(_QWORD *)(v315 - 8);
              v317 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v316 + 48);
              swift_bridgeObjectRetain();
              if (v317(v314, 1, v315))
              {
                sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                memcpy(v550, v314, *(_QWORD *)(*(_QWORD *)(v318 - 8) + 64));
              }
              else
              {
                v396 = sub_1BB86C67C();
                v397 = *(_QWORD *)(v396 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v397 + 48))(v314, 2, v396))
                {
                  v398 = v316;
                  memcpy(v550, v314, *(_QWORD *)(v316 + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v397 + 16))(v550, v314, v396);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v397 + 56))(v550, 0, 2, v396);
                  v398 = v316;
                }
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v398 + 56))(v550, 0, 1, v315);
              }
              v21 = v564;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v260 + 56))(a1, 0, 1, v259);
            }
          }
          else
          {
            if (v129)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
              goto LABEL_200;
            }
            v561 = v21;
            v130 = a2[1];
            *(_QWORD *)a1 = *a2;
            *((_QWORD *)a1 + 1) = v130;
            v131 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
            v132 = &a1[v131];
            v133 = (char *)a2 + v131;
            v134 = type metadata accessor for FormatPostPurchaseData();
            v135 = *(_QWORD *)(v134 - 8);
            v136 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48);
            swift_bridgeObjectRetain();
            if (v136(v133, 1, v134))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
              v21 = v561;
            }
            else
            {
              v291 = sub_1BB86C67C();
              v292 = *(_QWORD *)(v291 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v292 + 48))(v133, 2, v291))
              {
                memcpy(v132, v133, *(_QWORD *)(v135 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v292 + 16))(v132, v133, v291);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v292 + 56))(v132, 0, 2, v291);
              }
              v21 = v561;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
            }
          }
          swift_storeEnumTagMultiPayload();
LABEL_200:
          swift_storeEnumTagMultiPayload();
LABEL_201:
          v449 = type metadata accessor for FormatButtonNodeDataAction();
          v450 = *(int *)(v449 + 20);
          v451 = *(char **)((char *)a2 + v450);
          *(_QWORD *)&a1[v450] = v451;
          v452 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
          v453 = &a1[v452];
          v454 = (char **)((char *)a2 + v452);
          v455 = *(_QWORD *)(v449 - 8);
          v456 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v455 + 48);
          v457 = v451;
          if (v456(v454, 1, v449))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
            memcpy(v453, v454, *(_QWORD *)(*(_QWORD *)(v458 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                *(_QWORD *)v453 = *v454;
                v459 = (id *)(v454 + 1);
                v460 = *((unsigned __int8 *)v454 + 16);
                swift_bridgeObjectRetain();
                if (v460 <= 0xFD)
                {
                  v486 = *v459;
                  sub_1BA727178(*v459, v460);
                  *((_QWORD *)v453 + 1) = v486;
                  v453[16] = v460;
                }
                else
                {
                  *((_QWORD *)v453 + 1) = *v459;
                  v453[16] = *((_BYTE *)v454 + 16);
                }
                goto LABEL_240;
              case 1u:
                v461 = *v454;
                v462 = v454[1];
                v554 = v455;
                v463 = v454[2];
                v464 = v454[3];
                v465 = v454[4];
                v551 = *((_BYTE *)v454 + 41);
                v466 = *((_BYTE *)v454 + 40);
                sub_1BA7271AC((id)*v454, v462, v463, v464, v465, v466, v551);
                *(_QWORD *)v453 = v461;
                *((_QWORD *)v453 + 1) = v462;
                *((_QWORD *)v453 + 2) = v463;
                *((_QWORD *)v453 + 3) = v464;
                v455 = v554;
                *((_QWORD *)v453 + 4) = v465;
                v453[40] = v466;
                v453[41] = v551;
                v467 = (void *)v454[7];
                *((_QWORD *)v453 + 6) = v454[6];
                LOBYTE(v462) = *((_BYTE *)v454 + 64);
                swift_bridgeObjectRetain();
                sub_1BA727178(v467, v462);
                *((_QWORD *)v453 + 7) = v467;
                v453[64] = v462;
                goto LABEL_240;
              case 2u:
                *(_QWORD *)v453 = *v454;
                swift_retain();
                goto LABEL_240;
              case 4u:
                v468 = v454[1];
                *(_QWORD *)v453 = *v454;
                *((_QWORD *)v453 + 1) = v468;
                v469 = v454[3];
                *((_QWORD *)v453 + 2) = v454[2];
                *((_QWORD *)v453 + 3) = v469;
                v470 = v454[5];
                *((_QWORD *)v453 + 4) = v454[4];
                *((_QWORD *)v453 + 5) = v470;
                v555 = v455;
                v471 = v454[6];
                v472 = v454[7];
                v473 = v454[8];
                v552 = (void *)v454[9];
                v543 = *((_BYTE *)v454 + 80);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BA7261E0(v471, v472, v473, (uint64_t)v552, v543);
                *((_QWORD *)v453 + 6) = v471;
                *((_QWORD *)v453 + 7) = v472;
                v455 = v555;
                *((_QWORD *)v453 + 8) = v473;
                *((_QWORD *)v453 + 9) = v552;
                v453[80] = v543;
                v474 = v454[12];
                *((_QWORD *)v453 + 11) = v454[11];
                *((_QWORD *)v453 + 12) = v474;
                v475 = v454[14];
                *((_QWORD *)v453 + 13) = v454[13];
                *((_QWORD *)v453 + 14) = v475;
                *((_QWORD *)v453 + 15) = v454[15];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_240;
              case 5u:
                v476 = type metadata accessor for FormatPurchaseData(0);
                v477 = swift_getEnumCaseMultiPayload();
                if (v477 == 1)
                {
                  v557 = v455;
                  v487 = type metadata accessor for FormatPurchaseLandingPageData();
                  v488 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v487 - 8);
                  if (v488[6](v454, 1, v487))
                  {
                    sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
                    memcpy(v453, v454, *(_QWORD *)(*(_QWORD *)(v489 - 8) + 64));
                  }
                  else
                  {
                    v553 = (void (**)(char *, _QWORD, uint64_t, uint64_t))v488;
                    v492 = v454[1];
                    *(_QWORD *)v453 = *v454;
                    *((_QWORD *)v453 + 1) = v492;
                    v493 = *(int *)(v487 + 20);
                    v544 = &v453[v493];
                    v494 = (char *)v454 + v493;
                    v495 = type metadata accessor for FormatPostPurchaseData();
                    __dstc = *(_QWORD **)(v495 - 8);
                    v496 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstc[6];
                    swift_bridgeObjectRetain();
                    v497 = v494;
                    v534 = v495;
                    if (v496(v494, 1, v495))
                    {
                      sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                      memcpy(v544, v494, *(_QWORD *)(*(_QWORD *)(v498 - 8) + 64));
                    }
                    else
                    {
                      v499 = sub_1BB86C67C();
                      v500 = *(_QWORD *)(v499 - 8);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v500 + 48))(v497, 2, v499))
                      {
                        memcpy(v544, v497, __dstc[8]);
                      }
                      else
                      {
                        (*(void (**)(char *, const void *, uint64_t))(v500 + 16))(v544, v497, v499);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v500 + 56))(v544, 0, 2, v499);
                      }
                      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v544, 0, 1, v534);
                    }
                    v553[7](v453, 0, 1, v487);
                  }
                  v455 = v557;
                }
                else
                {
                  if (v477)
                  {
                    memcpy(v453, v454, *(_QWORD *)(*(_QWORD *)(v476 - 8) + 64));
                    goto LABEL_240;
                  }
                  v556 = v455;
                  v478 = v454[1];
                  *(_QWORD *)v453 = *v454;
                  *((_QWORD *)v453 + 1) = v478;
                  v479 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
                  v480 = &v453[v479];
                  v481 = (char *)v454 + v479;
                  v482 = type metadata accessor for FormatPostPurchaseData();
                  v483 = *(_QWORD *)(v482 - 8);
                  v484 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v483 + 48);
                  swift_bridgeObjectRetain();
                  if (v484(v481, 1, v482))
                  {
                    sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                    memcpy(v480, v481, *(_QWORD *)(*(_QWORD *)(v485 - 8) + 64));
                  }
                  else
                  {
                    v490 = sub_1BB86C67C();
                    v491 = *(_QWORD *)(v490 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v491 + 48))(v481, 2, v490))
                    {
                      memcpy(v480, v481, *(_QWORD *)(v483 + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v491 + 16))(v480, v481, v490);
                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v491 + 56))(v480, 0, 2, v490);
                    }
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v483 + 56))(v480, 0, 1, v482);
                  }
                  v455 = v556;
                }
                swift_storeEnumTagMultiPayload();
LABEL_240:
                swift_storeEnumTagMultiPayload();
LABEL_241:
                v523 = *(int *)(v449 + 20);
                v524 = *(void **)((char *)v454 + v523);
                *(_QWORD *)&v453[v523] = v524;
                v525 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v455 + 56);
                v526 = v524;
                v525(v453, 0, 1, v449);
                break;
              default:
                memcpy(v453, v454, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
                goto LABEL_241;
            }
          }
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          goto LABEL_201;
      }
      goto LABEL_234;
    case 0xAu:
      v24 = type metadata accessor for FormatViewBackground(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v25 + 48))(a2, 1, v24))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v91 = swift_getEnumCaseMultiPayload();
        if (v91 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v138 = (uint64_t)a2[2];
          v545 = a2[3];
          v139 = (uint64_t)a2[4];
          v140 = (uint64_t)a2[5];
          v141 = (uint64_t)a2[6];
          v142 = (uint64_t)a2[7];
          v143 = (uint64_t)a2[8];
          v539 = a2[9];
          v562 = *((_BYTE *)a2 + 80);
          sub_1BAA8C5C0(v138, (uint64_t)v545, v139, v140, v141, v142, v143, (uint64_t)v539, v562);
          *((_QWORD *)a1 + 2) = v138;
          *((_QWORD *)a1 + 3) = v545;
          *((_QWORD *)a1 + 4) = v139;
          *((_QWORD *)a1 + 5) = v140;
          *((_QWORD *)a1 + 6) = v141;
          *((_QWORD *)a1 + 7) = v142;
          *((_QWORD *)a1 + 8) = v143;
          *((_QWORD *)a1 + 9) = v539;
          a1[80] = v562;
          v144 = (uint64_t)a2[11];
          v563 = (uint64_t)a2[12];
          v145 = (uint64_t)a2[13];
          v146 = (uint64_t)a2[14];
          v147 = (uint64_t)a2[15];
          v148 = (uint64_t)a2[16];
          v150 = (uint64_t)a2[17];
          v149 = (uint64_t)a2[18];
          v546 = (void *)v149;
          v151 = *((_BYTE *)a2 + 152);
          sub_1BAA8C5C0(v144, v563, v145, v146, v147, v148, v150, v149, v151);
          *((_QWORD *)a1 + 11) = v144;
          *((_QWORD *)a1 + 12) = v563;
          *((_QWORD *)a1 + 13) = v145;
          *((_QWORD *)a1 + 14) = v146;
          *((_QWORD *)a1 + 15) = v147;
          *((_QWORD *)a1 + 16) = v148;
          *((_QWORD *)a1 + 17) = v150;
          *((_QWORD *)a1 + 18) = v546;
          a1[152] = v151;
        }
        else if (v91 == 1)
        {
          *(_QWORD *)a1 = *a2;
          v92 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
          v93 = &a1[v92];
          v94 = (char *)a2 + v92;
          v95 = sub_1BB86FBD4();
          v96 = *(_QWORD *)(v95 - 8);
          v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48);
          swift_retain();
          if (v97(v94, 1, v95))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
            memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v93, v94, v95);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
          }
        }
        else
        {
          v152 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v152;
          swift_retain();
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
      }
      goto LABEL_234;
    case 0xBu:
      *(_QWORD *)a1 = *a2;
      v27 = type metadata accessor for FormatMicaData();
      v28 = *(int *)(v27 + 20);
      v29 = &a1[v28];
      v30 = (char *)a2 + v28;
      v31 = sub_1BB86FBD4();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      swift_retain();
      if (v33(v30, 1, v31))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      v99 = *(int *)(v27 + 24);
      v100 = &a1[v99];
      v101 = (uint64_t)a2 + v99;
      *(_DWORD *)v100 = *(_DWORD *)v101;
      v100[4] = *(_BYTE *)(v101 + 4);
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xCu:
      v35 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v35;
      v36 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v36;
      a1[32] = *((_BYTE *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xDu:
      v37 = sub_1BB86C67C();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(void (**)(char *, char **, uint64_t))(v38 + 16);
      v39(a1, a2, v37);
      v40 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
      v41 = &a1[v40];
      v42 = (char *)a2 + v40;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))((char *)a2 + v40, 1, v37))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v39(v41, (char **)v42, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
      }
      v102 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
      v103 = &a1[v102];
      v104 = (uint64_t)a2 + v102;
      v105 = *(void **)v104;
      *(_QWORD *)v103 = *(_QWORD *)v104;
      v103[8] = *(_BYTE *)(v104 + 8);
      *((_QWORD *)v103 + 2) = *(_QWORD *)(v104 + 16);
      *((_WORD *)v103 + 12) = *(_WORD *)(v104 + 24);
      v107 = *(void **)(v104 + 32);
      v106 = *(_QWORD *)(v104 + 40);
      *((_QWORD *)v103 + 4) = v107;
      *((_QWORD *)v103 + 5) = v106;
      v108 = v105;
      v109 = v107;
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xEu:
      v44 = *a2;
      v45 = (uint64_t)a2[1];
      v46 = a2[2];
      v47 = (uint64_t)a2[3];
      v48 = a2[4];
      v49 = (uint64_t)a2[5];
      v50 = a2[6];
      v51 = *((_BYTE *)a2 + 56);
      sub_1BA8996DC(v44, v45, v46, v47, v48, v49, v50, v51);
      *(_QWORD *)a1 = v44;
      *((_QWORD *)a1 + 1) = v45;
      *((_QWORD *)a1 + 2) = v46;
      *((_QWORD *)a1 + 3) = v47;
      *((_QWORD *)a1 + 4) = v48;
      *((_QWORD *)a1 + 5) = v49;
      *((_QWORD *)a1 + 6) = v50;
      a1[56] = v51;
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xFu:
      v52 = sub_1BB86C8B0();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(a1, a2, v52);
      v53 = (int *)type metadata accessor for SharedItem();
      a1[v53[5]] = *((_BYTE *)a2 + v53[5]);
      v54 = v53[6];
      v55 = *(char **)((char *)a2 + v54);
      *(_QWORD *)&a1[v54] = v55;
      v56 = v53[7];
      v57 = &a1[v56];
      v58 = (uint64_t)a2 + v56;
      v59 = sub_1BB86C67C();
      v60 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
      v61 = v55;
      v60(v57, v58, v59);
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x10u:
      v62 = *a2;
      v63 = (uint64_t)a2[1];
      v64 = a2[2];
      v65 = (uint64_t)a2[3];
      v66 = (uint64_t)a2[4];
      v67 = (uint64_t)a2[5];
      v68 = (uint64_t)a2[6];
      v69 = (uint64_t)a2[7];
      v70 = *((_BYTE *)a2 + 64);
      sub_1BA7F6D0C(v62, v63, (char)v64, v65, v66, v67, v68, v69, v70);
      *(_QWORD *)a1 = v62;
      *((_QWORD *)a1 + 1) = v63;
      *((_QWORD *)a1 + 2) = v64;
      *((_QWORD *)a1 + 3) = v65;
      *((_QWORD *)a1 + 4) = v66;
      *((_QWORD *)a1 + 5) = v67;
      *((_QWORD *)a1 + 6) = v68;
      *((_QWORD *)a1 + 7) = v69;
      a1[64] = v70;
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x11u:
      v71 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v71;
      v72 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v72;
      v73 = a2[5];
      *((_QWORD *)a1 + 4) = a2[4];
      *((_QWORD *)a1 + 5) = v73;
      *((_QWORD *)a1 + 6) = a2[6];
      a1[56] = *((_BYTE *)a2 + 56);
      v74 = (int *)type metadata accessor for FormatVideoPlayerData();
      v75 = v74[9];
      v558 = &a1[v75];
      v76 = (uint64_t)a2 + v75;
      v77 = sub_1BB86C67C();
      v78 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v78(v558, v76, v77);
      *(_QWORD *)&a1[v74[10]] = *(char **)((char *)a2 + v74[10]);
      a1[v74[11]] = *((_BYTE *)a2 + v74[11]);
      v79 = v74[12];
      v80 = &a1[v79];
      v81 = (uint64_t)a2 + v79;
      *(_OWORD *)v80 = *(_OWORD *)v81;
      v82 = *(_QWORD *)(v81 + 24);
      *((_QWORD *)v80 + 2) = *(_QWORD *)(v81 + 16);
      *((_QWORD *)v80 + 3) = v82;
      v80[32] = *(_BYTE *)(v81 + 32);
      v83 = *(_QWORD *)(v81 + 48);
      *((_QWORD *)v80 + 5) = *(_QWORD *)(v81 + 40);
      *((_QWORD *)v80 + 6) = v83;
      a1[v74[13]] = *((_BYTE *)a2 + v74[13]);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x12u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v84 = (uint64_t)a2[1];
      sub_1BA897950(v84);
      *((_QWORD *)a1 + 1) = v84;
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x14u:
      v85 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v85;
      v86 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v87 = &a1[v86];
      v88 = (uint64_t)a2 + v86;
      v89 = sub_1BB871E24();
      v90 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 16);
      swift_bridgeObjectRetain();
      v90(v87, v88, v89);
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
      return a1;
  }
}

uint64_t sub_1BB158220(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id *v11;
  unsigned int v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t *, uint64_t);
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  char v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  int v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  unsigned __int8 v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  void *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  id v128;
  uint64_t v129;
  unint64_t v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  char *v150;
  int *v151;
  unsigned int (*v152)(char *, uint64_t, int *);
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  id v159;
  id v160;
  __int128 v161;
  __int128 v162;
  int v163;
  void *v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  id v168;
  id v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  const void *v182;
  uint64_t v183;
  unsigned int (*v184)(const void *, uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  int *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  void (*v214)(uint64_t, uint64_t, uint64_t);
  uint64_t v215;
  void *v216;
  char *v217;
  uint64_t v218;
  void *v219;
  id v220;
  uint64_t v221;
  char v222;
  void *v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  void (*v235)(char *, char *, uint64_t);
  id v236;
  uint64_t v237;
  void *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  __int128 v244;
  __int128 v245;
  _OWORD *v246;
  __int128 *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  unsigned int (*v253)(char *, uint64_t, uint64_t);
  uint64_t v254;
  uint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  unsigned int (*v260)(_QWORD *, uint64_t, uint64_t);
  uint64_t v261;
  __int128 v262;
  __int128 v263;
  _OWORD *v264;
  __int128 *v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  _QWORD *v269;
  uint64_t v270;
  unint64_t v271;
  __int128 v272;
  __int128 v273;
  _OWORD *v274;
  __int128 *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _BYTE *v279;
  char *v280;
  int *v281;
  uint64_t v282;
  char *v283;
  int *v284;
  unsigned int (*v285)(char *, uint64_t, int *);
  _QWORD *v286;
  uint64_t v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  uint64_t v292;
  uint64_t v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  void *v297;
  uint64_t v298;
  void *v299;
  uint64_t v300;
  id v301;
  id v302;
  __int128 v303;
  __int128 v304;
  uint64_t v305;
  void *v306;
  id v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  void *v311;
  id v312;
  uint64_t v313;
  char v314;
  void *v315;
  id v316;
  void *v317;
  uint64_t v318;
  void *v319;
  uint64_t v320;
  id v321;
  id v322;
  __int128 v323;
  __int128 v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  uint64_t v328;
  uint64_t v329;
  void *v330;
  uint64_t v331;
  char *v332;
  char *v333;
  int *v334;
  char *v335;
  id v336;
  char *v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  _QWORD *v345;
  _QWORD *v346;
  uint64_t v347;
  unint64_t v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  void *v355;
  id v356;
  uint64_t v357;
  void *v358;
  void (*v359)(_QWORD *, _QWORD, uint64_t, int *);
  id v360;
  uint64_t v361;
  _QWORD *v362;
  _QWORD *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  int EnumCaseMultiPayload;
  uint64_t v368;
  uint64_t v369;
  char *v370;
  char *v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  void (*v375)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v376;
  uint64_t v377;
  void *v378;
  uint64_t v379;
  _QWORD *v380;
  _QWORD *v381;
  uint64_t v382;
  unsigned int (*v383)(_QWORD *, uint64_t, uint64_t);
  id v384;
  uint64_t v385;
  id *v386;
  unsigned int v387;
  id v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unsigned __int8 v394;
  void *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  int v400;
  uint64_t v401;
  char *v402;
  char *v403;
  uint64_t v404;
  uint64_t v405;
  unsigned int (*v406)(char *, uint64_t, uint64_t);
  uint64_t v407;
  id v408;
  uint64_t v409;
  unsigned int (**v410)(_QWORD *, uint64_t, uint64_t);
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  uint64_t v416;
  unsigned int (*v417)(char *, uint64_t, uint64_t);
  const void *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  int *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  unint64_t v427;
  uint64_t v428;
  unint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  _QWORD *v435;
  _QWORD *v436;
  __int128 v437;
  uint64_t v438;
  void *v439;
  void (*v440)(_QWORD *, _QWORD, uint64_t, uint64_t);
  id v441;
  uint64_t result;
  uint64_t v443;
  char *v444;
  uint64_t v445;
  char *v446;
  _QWORD *v447;
  uint64_t v448;
  int *v449;
  uint64_t v450;
  char *__dst;
  _QWORD *__dsta;
  void (*__dstb)(char *, char *, void *);
  void *__dstc;
  void *v455;
  char *v456;
  void *v457;
  char *v458;
  char v459;
  char *v460;
  void *v461;
  void *v462;
  int *v463;
  int *v464;
  int *v465;
  void *v466;
  char v467;
  void *v468;
  void *v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  char v478;
  uint64_t v479;
  uint64_t v480;

  if ((uint64_t *)a1 != a2)
  {
    sub_1BA7249BC(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1BB871B24();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_235;
      case 1u:
      case 2u:
      case 3u:
      case 7u:
      case 8u:
      case 0x13u:
        *(_QWORD *)a1 = *a2;
        swift_retain();
        goto LABEL_235;
      case 4u:
        v7 = type metadata accessor for FeedItem(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_QWORD *)(a1 + 16) = a2[2];
            v8 = a2[3];
            *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
            *(_QWORD *)(a1 + 24) = v8;
            v9 = a2[6];
            swift_bridgeObjectRetain();
            if (v9 >= 0x11)
            {
              *(_QWORD *)(a1 + 40) = a2[5];
              *(_QWORD *)(a1 + 48) = a2[6];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
            }
            goto LABEL_221;
          case 1u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_QWORD *)(a1 + 16) = a2[2];
            v129 = a2[3];
            *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
            *(_QWORD *)(a1 + 24) = v129;
            *(_QWORD *)(a1 + 40) = a2[5];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = a2[7];
            *(_QWORD *)(a1 + 64) = a2[8];
            v130 = a2[10];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v130 >= 0x11)
            {
              *(_QWORD *)(a1 + 72) = a2[9];
              *(_QWORD *)(a1 + 80) = a2[10];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            }
            goto LABEL_221;
          case 2u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            v131 = (int *)type metadata accessor for FeedBannerAd();
            v132 = v131[5];
            v133 = a1 + v132;
            v134 = (uint64_t)a2 + v132;
            v135 = sub_1BB8721C0();
            v136 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
            swift_bridgeObjectRetain();
            v136(v133, v134, v135);
            *(_QWORD *)(a1 + v131[6]) = *(uint64_t *)((char *)a2 + v131[6]);
            v137 = v131[7];
            v138 = a1 + v137;
            v139 = (uint64_t)a2 + v137;
            v140 = *(_BYTE *)(v139 + 8);
            *(_QWORD *)v138 = *(_QWORD *)v139;
            *(_BYTE *)(v138 + 8) = v140;
            v141 = v131[8];
            v142 = a1 + v141;
            v143 = (uint64_t)a2 + v141;
            if (*(_QWORD *)(v143 + 8) >= 0x11uLL)
              goto LABEL_85;
            *(_OWORD *)v142 = *(_OWORD *)v143;
            goto LABEL_221;
          case 3u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            v144 = a2[2];
            *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
            *(_QWORD *)(a1 + 16) = v144;
            *(_QWORD *)(a1 + 32) = a2[4];
            *(_QWORD *)(a1 + 40) = a2[5];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
            v463 = (int *)type metadata accessor for FeedHeadline(0);
            v145 = v463[10];
            v146 = (_BYTE *)(a1 + v145);
            v147 = (uint64_t)a2 + v145;
            *v146 = *((_BYTE *)a2 + v145);
            v146[1] = *((_BYTE *)a2 + v145 + 1);
            v148 = (int *)type metadata accessor for FeedHeadline.State(0);
            v149 = v148[6];
            __dst = &v146[v149];
            v150 = (char *)(v147 + v149);
            v151 = (int *)type metadata accessor for SharedItem();
            v448 = *((_QWORD *)v151 - 1);
            v152 = *(unsigned int (**)(char *, uint64_t, int *))(v448 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v152(v150, 1, v151))
            {
              v153 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
            }
            else
            {
              v230 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(__dst, v150, v230);
              __dst[v151[5]] = v150[v151[5]];
              v231 = v151[6];
              v232 = *(void **)&v150[v231];
              *(_QWORD *)&__dst[v231] = v232;
              v233 = v151[7];
              v458 = &__dst[v233];
              v446 = &v150[v233];
              v234 = sub_1BB86C67C();
              v235 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 16);
              v236 = v232;
              v235(v458, v446, v234);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v448 + 56))(__dst, 0, 1, v151);
            }
            v146[v148[7]] = *(_BYTE *)(v147 + v148[7]);
            v146[v148[8]] = *(_BYTE *)(v147 + v148[8]);
            v146[v148[9]] = *(_BYTE *)(v147 + v148[9]);
            v146[v148[10]] = *(_BYTE *)(v147 + v148[10]);
            v237 = v463[11];
            v238 = (void *)(a1 + v237);
            v239 = (char *)a2 + v237;
            v240 = sub_1BB871B24();
            v241 = *(_QWORD *)(v240 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v241 + 48))(v239, 1, v240))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v238, v239, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v241 + 16))(v238, v239, v240);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v241 + 56))(v238, 0, 1, v240);
            }
            v267 = v463[12];
            v268 = (_QWORD *)(a1 + v267);
            v269 = (uint64_t *)((char *)a2 + v267);
            if (v269[1] >= 0x11uLL)
            {
              *v268 = *v269;
              v268[1] = v269[1];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v268 = *(_OWORD *)v269;
            }
            v270 = v463[13];
            v271 = *(uint64_t *)((char *)a2 + v270);
            if (v271 >= 2)
            {
              if (v271 == 2)
              {
                *(_QWORD *)(a1 + v270) = 2;
              }
              else
              {
                *(_QWORD *)(a1 + v270) = v271;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(_QWORD *)(a1 + v270) = v271;
            }
            v305 = v463[14];
            v306 = *(void **)((char *)a2 + v305);
            *(_QWORD *)(a1 + v305) = v306;
            v307 = v306;
            goto LABEL_221;
          case 4u:
            *(_QWORD *)a1 = *a2;
            v154 = a2[1];
            *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
            *(_QWORD *)(a1 + 8) = v154;
            if ((unint64_t)a2[4] >= 0x11)
            {
              *(_QWORD *)(a1 + 24) = a2[3];
              *(_QWORD *)(a1 + 32) = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
            }
            *(_QWORD *)(a1 + 40) = a2[5];
            *(_QWORD *)(a1 + 48) = a2[6];
            v208 = (int *)type metadata accessor for FeedWebEmbed();
            v209 = v208[8];
            v210 = a1 + v209;
            v211 = (uint64_t)a2 + v209;
            v212 = sub_1BB86C67C();
            v213 = *(_QWORD *)(v212 - 8);
            v214 = *(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16);
            swift_bridgeObjectRetain();
            v214(v210, v211, v212);
            v465 = v208;
            v215 = v208[9];
            v216 = (void *)(a1 + v215);
            v217 = (char *)a2 + v215;
            __dstb = (void (*)(char *, char *, void *))v214;
            v457 = (void *)v212;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48))((uint64_t)a2 + v215, 1, v212))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
              memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
            }
            else
            {
              v214((uint64_t)v216, (uint64_t)v217, v212);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v213 + 56))(v216, 0, 1, v212);
            }
            *(_QWORD *)(a1 + v208[10]) = *(uint64_t *)((char *)a2 + v208[10]);
            *(_QWORD *)(a1 + v208[11]) = *(uint64_t *)((char *)a2 + v208[11]);
            v255 = v208[12];
            v256 = (_QWORD *)(a1 + v255);
            v257 = (uint64_t *)((char *)a2 + v255);
            v258 = type metadata accessor for FeedHeadline(0);
            v259 = *(_QWORD *)(v258 - 8);
            v260 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v259 + 48);
            swift_retain();
            swift_retain();
            if (v260(v257, 1, v258))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
              memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
            }
            else
            {
              v445 = v259;
              *v256 = *v257;
              v447 = v257;
              v256[1] = v257[1];
              v277 = v257[2];
              *((_BYTE *)v256 + 24) = *((_BYTE *)v257 + 24);
              v256[2] = v277;
              v256[4] = v257[4];
              v256[5] = v257[5];
              v256[6] = v257[6];
              *((_BYTE *)v256 + 56) = *((_BYTE *)v257 + 56);
              v449 = (int *)v258;
              v278 = *(int *)(v258 + 40);
              v279 = (char *)v256 + v278;
              v280 = (char *)v257 + v278;
              *v279 = *((_BYTE *)v257 + v278);
              v279[1] = *((_BYTE *)v257 + v278 + 1);
              v281 = (int *)type metadata accessor for FeedHeadline.State(0);
              v282 = v281[6];
              v444 = &v279[v282];
              v283 = &v280[v282];
              v284 = (int *)type metadata accessor for SharedItem();
              v443 = *((_QWORD *)v284 - 1);
              v285 = *(unsigned int (**)(char *, uint64_t, int *))(v443 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              v286 = v256;
              if (v285(v283, 1, v284))
              {
                v287 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v444, v283, *(_QWORD *)(*(_QWORD *)(v287 - 8) + 64));
              }
              else
              {
                v328 = sub_1BB86C8B0();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v444, v283, v328);
                v444[v284[5]] = v283[v284[5]];
                v329 = v284[6];
                v330 = *(void **)&v283[v329];
                *(_QWORD *)&v444[v329] = v330;
                v331 = v284[7];
                v332 = v283;
                v333 = &v444[v331];
                v334 = v281;
                v335 = &v332[v331];
                v336 = v330;
                v337 = v335;
                v281 = v334;
                __dstb(v333, v337, v457);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v443 + 56))(v444, 0, 1, v284);
              }
              v279[v281[7]] = v280[v281[7]];
              v279[v281[8]] = v280[v281[8]];
              v279[v281[9]] = v280[v281[9]];
              v279[v281[10]] = v280[v281[10]];
              v338 = v449[11];
              v339 = (char *)v286 + v338;
              v340 = (char *)v447 + v338;
              v341 = sub_1BB871B24();
              v342 = *(_QWORD *)(v341 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v342 + 48))(v340, 1, v341))
              {
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
                memcpy(v339, v340, *(_QWORD *)(*(_QWORD *)(v343 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v342 + 16))(v339, v340, v341);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v342 + 56))(v339, 0, 1, v341);
              }
              v344 = v449[12];
              v345 = (_QWORD *)((char *)v286 + v344);
              v346 = (_QWORD *)((char *)v447 + v344);
              if (v346[1] >= 0x11uLL)
              {
                *v345 = *v346;
                v345[1] = v346[1];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)v345 = *(_OWORD *)v346;
              }
              v347 = v449[13];
              v348 = *(_QWORD *)((char *)v447 + v347);
              if (v348 >= 2)
              {
                if (v348 == 2)
                {
                  *(_QWORD *)((char *)v286 + v347) = 2;
                }
                else
                {
                  *(_QWORD *)((char *)v286 + v347) = v348;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(_QWORD *)((char *)v286 + v347) = v348;
              }
              v357 = v449[14];
              v358 = *(void **)((char *)v447 + v357);
              *(_QWORD *)((char *)v286 + v357) = v358;
              v359 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v445 + 56);
              v360 = v358;
              v359(v286, 0, 1, v449);
            }
            v361 = v465[13];
            v362 = (_QWORD *)(a1 + v361);
            v363 = (uint64_t *)((char *)a2 + v361);
            v364 = type metadata accessor for WebEmbedDataVisualization();
            v365 = *(_QWORD *)(v364 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v365 + 48))(v363, 1, v364))
            {
              sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
              memcpy(v362, v363, *(_QWORD *)(*(_QWORD *)(v366 - 8) + 64));
            }
            else
            {
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              *v362 = *v363;
              if (EnumCaseMultiPayload == 1)
              {
                v362[1] = v363[1];
                v368 = type metadata accessor for GenericDataVisualization();
                v369 = *(int *)(v368 + 20);
                v370 = (char *)v362 + v369;
                v371 = (char *)v363 + v369;
                swift_bridgeObjectRetain();
                __dstb(v370, v371, v457);
                *(_QWORD *)((char *)v362 + *(int *)(v368 + 24)) = *(_QWORD *)((char *)v363 + *(int *)(v368 + 24));
                swift_bridgeObjectRetain();
              }
              else
              {
                swift_retain();
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v365 + 56))(v362, 0, 1, v364);
            }
            *(_BYTE *)(a1 + v465[14]) = *((_BYTE *)a2 + v465[14]);
            goto LABEL_221;
          case 5u:
            v155 = (void *)*a2;
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
            *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
            v156 = a2[4];
            *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
            *(_QWORD *)(a1 + 32) = v156;
            *(_QWORD *)(a1 + 48) = a2[6];
            v157 = (void *)a2[7];
            *(_QWORD *)(a1 + 56) = v157;
            *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
            v158 = a2[10];
            v159 = v155;
            swift_bridgeObjectRetain();
            v160 = v157;
            if (v158 == 1)
            {
              v161 = *(_OWORD *)(a2 + 9);
              v162 = *(_OWORD *)(a2 + 13);
              *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 104) = v162;
              *(_OWORD *)(a1 + 72) = v161;
            }
            else
            {
              *(_QWORD *)(a1 + 72) = a2[9];
              *(_QWORD *)(a1 + 80) = a2[10];
              *(_QWORD *)(a1 + 88) = a2[11];
              *(_QWORD *)(a1 + 96) = a2[12];
              v219 = (void *)a2[13];
              *(_QWORD *)(a1 + 104) = v219;
              *(_QWORD *)(a1 + 112) = a2[14];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v220 = v219;
            }
            if ((unint64_t)a2[16] >= 0x11)
            {
              *(_QWORD *)(a1 + 120) = a2[15];
              *(_QWORD *)(a1 + 128) = a2[16];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
            }
            *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
            goto LABEL_221;
          case 6u:
            v163 = *((unsigned __int8 *)a2 + 281);
            if (v163 == 2)
            {
              *(_QWORD *)a1 = *a2;
              *(_QWORD *)(a1 + 8) = a2[1];
              *(_QWORD *)(a1 + 16) = a2[2];
              *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
              v292 = a2[4];
              *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
              *(_QWORD *)(a1 + 32) = v292;
              *(_QWORD *)(a1 + 48) = a2[6];
              *(_QWORD *)(a1 + 56) = a2[7];
              *(_QWORD *)(a1 + 64) = a2[8];
              *(_QWORD *)(a1 + 72) = a2[9];
              v293 = a2[11];
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v293 == 1)
              {
                *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
                v294 = *((_OWORD *)a2 + 6);
                v295 = *((_OWORD *)a2 + 7);
                v296 = *((_OWORD *)a2 + 8);
                *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
                *(_OWORD *)(a1 + 112) = v295;
                *(_OWORD *)(a1 + 128) = v296;
                *(_OWORD *)(a1 + 96) = v294;
              }
              else
              {
                *(_QWORD *)(a1 + 80) = a2[10];
                *(_QWORD *)(a1 + 88) = a2[11];
                v313 = a2[15];
                swift_bridgeObjectRetain();
                if (v313)
                {
                  *(_QWORD *)(a1 + 120) = v313;
                  *(_QWORD *)(a1 + 128) = a2[16];
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v313 - 8))(a1 + 96, (uint64_t)(a2 + 12), v313);
                  v314 = *((_BYTE *)a2 + 144);
                  *(_QWORD *)(a1 + 136) = a2[17];
                  *(_BYTE *)(a1 + 144) = v314;
                }
                else
                {
                  v372 = *((_OWORD *)a2 + 6);
                  v373 = *((_OWORD *)a2 + 7);
                  v374 = *((_OWORD *)a2 + 8);
                  *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
                  *(_OWORD *)(a1 + 112) = v373;
                  *(_OWORD *)(a1 + 128) = v374;
                  *(_OWORD *)(a1 + 96) = v372;
                }
              }
            }
            else if (v163 == 1)
            {
              v164 = (void *)*a2;
              *(_QWORD *)a1 = *a2;
              *(_QWORD *)(a1 + 8) = a2[1];
              *(_QWORD *)(a1 + 16) = a2[2];
              *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
              *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
              v165 = a2[4];
              *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
              *(_QWORD *)(a1 + 32) = v165;
              *(_QWORD *)(a1 + 48) = a2[6];
              v166 = (void *)a2[7];
              *(_QWORD *)(a1 + 56) = v166;
              *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
              v167 = a2[10];
              v168 = v164;
              swift_bridgeObjectRetain();
              v169 = v166;
              if (v167 == 1)
              {
                v170 = *(_OWORD *)(a2 + 9);
                v171 = *(_OWORD *)(a2 + 13);
                *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 104) = v171;
                *(_OWORD *)(a1 + 72) = v170;
              }
              else
              {
                *(_QWORD *)(a1 + 72) = a2[9];
                *(_QWORD *)(a1 + 80) = a2[10];
                *(_QWORD *)(a1 + 88) = a2[11];
                *(_QWORD *)(a1 + 96) = a2[12];
                v311 = (void *)a2[13];
                *(_QWORD *)(a1 + 104) = v311;
                *(_QWORD *)(a1 + 112) = a2[14];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v312 = v311;
              }
              if ((unint64_t)a2[16] >= 0x11)
              {
                *(_QWORD *)(a1 + 120) = a2[15];
                *(_QWORD *)(a1 + 128) = a2[16];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
              }
              *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
              v317 = (void *)a2[18];
              if (v317)
              {
                *(_QWORD *)(a1 + 144) = v317;
                *(_QWORD *)(a1 + 152) = a2[19];
                *(_QWORD *)(a1 + 160) = a2[20];
                *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
                *(_BYTE *)(a1 + 169) = *((_BYTE *)a2 + 169);
                v318 = a2[22];
                *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
                *(_QWORD *)(a1 + 176) = v318;
                *(_QWORD *)(a1 + 192) = a2[24];
                v319 = (void *)a2[25];
                *(_QWORD *)(a1 + 200) = v319;
                *(_BYTE *)(a1 + 208) = *((_BYTE *)a2 + 208);
                v320 = a2[28];
                v321 = v317;
                swift_bridgeObjectRetain();
                v322 = v319;
                if (v320 == 1)
                {
                  v323 = *(_OWORD *)(a2 + 27);
                  v324 = *(_OWORD *)(a2 + 31);
                  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
                  *(_OWORD *)(a1 + 248) = v324;
                  *(_OWORD *)(a1 + 216) = v323;
                }
                else
                {
                  *(_QWORD *)(a1 + 216) = a2[27];
                  *(_QWORD *)(a1 + 224) = a2[28];
                  *(_QWORD *)(a1 + 232) = a2[29];
                  *(_QWORD *)(a1 + 240) = a2[30];
                  v355 = (void *)a2[31];
                  *(_QWORD *)(a1 + 248) = v355;
                  *(_QWORD *)(a1 + 256) = a2[32];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v356 = v355;
                }
                if ((unint64_t)a2[34] >= 0x11)
                {
                  *(_QWORD *)(a1 + 264) = a2[33];
                  *(_QWORD *)(a1 + 272) = a2[34];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
                }
                *(_BYTE *)(a1 + 280) = *((_BYTE *)a2 + 280);
              }
              else
              {
                *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
                v349 = *((_OWORD *)a2 + 10);
                v350 = *((_OWORD *)a2 + 11);
                v351 = *((_OWORD *)a2 + 13);
                *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
                *(_OWORD *)(a1 + 208) = v351;
                *(_OWORD *)(a1 + 160) = v349;
                *(_OWORD *)(a1 + 176) = v350;
                v352 = *((_OWORD *)a2 + 14);
                v353 = *((_OWORD *)a2 + 15);
                v354 = *((_OWORD *)a2 + 16);
                *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
                *(_OWORD *)(a1 + 240) = v353;
                *(_OWORD *)(a1 + 256) = v354;
                *(_OWORD *)(a1 + 224) = v352;
              }
            }
            else
            {
              v297 = (void *)*a2;
              *(_QWORD *)a1 = *a2;
              *(_QWORD *)(a1 + 8) = a2[1];
              *(_QWORD *)(a1 + 16) = a2[2];
              *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
              *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
              v298 = a2[4];
              *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
              *(_QWORD *)(a1 + 32) = v298;
              *(_QWORD *)(a1 + 48) = a2[6];
              v299 = (void *)a2[7];
              *(_QWORD *)(a1 + 56) = v299;
              *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
              v300 = a2[10];
              v301 = v297;
              swift_bridgeObjectRetain();
              v302 = v299;
              if (v300 == 1)
              {
                v303 = *(_OWORD *)(a2 + 9);
                v304 = *(_OWORD *)(a2 + 13);
                *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 104) = v304;
                *(_OWORD *)(a1 + 72) = v303;
              }
              else
              {
                *(_QWORD *)(a1 + 72) = a2[9];
                *(_QWORD *)(a1 + 80) = a2[10];
                *(_QWORD *)(a1 + 88) = a2[11];
                *(_QWORD *)(a1 + 96) = a2[12];
                v315 = (void *)a2[13];
                *(_QWORD *)(a1 + 104) = v315;
                *(_QWORD *)(a1 + 112) = a2[14];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v316 = v315;
              }
              if ((unint64_t)a2[16] >= 0x11)
              {
                *(_QWORD *)(a1 + 120) = a2[15];
                *(_QWORD *)(a1 + 128) = a2[16];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
              }
              *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
            }
            *(_BYTE *)(a1 + 281) = v163;
            goto LABEL_221;
          case 7u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
            v172 = a2[4];
            *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
            *(_QWORD *)(a1 + 32) = v172;
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = a2[7];
            *(_QWORD *)(a1 + 64) = a2[8];
            *(_QWORD *)(a1 + 72) = a2[9];
            v173 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v173 == 1)
            {
              *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
              v174 = *((_OWORD *)a2 + 6);
              v175 = *((_OWORD *)a2 + 7);
              v176 = *((_OWORD *)a2 + 8);
              *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
              *(_OWORD *)(a1 + 112) = v175;
              *(_OWORD *)(a1 + 128) = v176;
              *(_OWORD *)(a1 + 96) = v174;
            }
            else
            {
              *(_QWORD *)(a1 + 80) = a2[10];
              *(_QWORD *)(a1 + 88) = a2[11];
              v221 = a2[15];
              swift_bridgeObjectRetain();
              if (v221)
              {
                *(_QWORD *)(a1 + 120) = v221;
                *(_QWORD *)(a1 + 128) = a2[16];
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v221 - 8))(a1 + 96, (uint64_t)(a2 + 12), v221);
                v222 = *((_BYTE *)a2 + 144);
                *(_QWORD *)(a1 + 136) = a2[17];
                *(_BYTE *)(a1 + 144) = v222;
              }
              else
              {
                v308 = *((_OWORD *)a2 + 6);
                v309 = *((_OWORD *)a2 + 7);
                v310 = *((_OWORD *)a2 + 8);
                *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
                *(_OWORD *)(a1 + 112) = v309;
                *(_OWORD *)(a1 + 128) = v310;
                *(_OWORD *)(a1 + 96) = v308;
              }
            }
            goto LABEL_221;
          case 8u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            v177 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
            v178 = (_QWORD *)(a1 + v177);
            v179 = (uint64_t)a2 + v177;
            *v178 = *(uint64_t *)((char *)a2 + v177);
            v178[1] = *(uint64_t *)((char *)a2 + v177 + 8);
            v178[2] = *(uint64_t *)((char *)a2 + v177 + 16);
            v178[3] = *(uint64_t *)((char *)a2 + v177 + 24);
            v180 = type metadata accessor for FormatCustomItem.Resolved();
            v181 = *(int *)(v180 + 24);
            v456 = (char *)v178 + v181;
            v464 = (int *)v180;
            v182 = (const void *)(v179 + v181);
            v183 = type metadata accessor for FormatCustomItem.Action();
            __dsta = *(_QWORD **)(v183 - 8);
            v184 = (unsigned int (*)(const void *, uint64_t, uint64_t))__dsta[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v184(v182, 1, v183))
            {
              sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
              memcpy(v456, v182, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
            }
            else
            {
              v243 = sub_1BB86C67C();
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v243 - 8) + 16))(v456, v182, v243);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v456, 0, 1, v183);
            }
            *(_QWORD *)((char *)v178 + v464[7]) = *(_QWORD *)(v179 + v464[7]);
            swift_bridgeObjectRetain();
            goto LABEL_221;
          case 9u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_QWORD *)(a1 + 24) = a2[3];
            v186 = a2[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v186)
            {
              *(_QWORD *)(a1 + 56) = v186;
              *(_QWORD *)(a1 + 64) = a2[8];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v186 - 8))(a1 + 32, (uint64_t)(a2 + 4), v186);
            }
            else
            {
              v244 = *((_OWORD *)a2 + 2);
              v245 = *((_OWORD *)a2 + 3);
              *(_QWORD *)(a1 + 64) = a2[8];
              *(_OWORD *)(a1 + 32) = v244;
              *(_OWORD *)(a1 + 48) = v245;
            }
            v246 = (_OWORD *)(a1 + 72);
            v247 = (__int128 *)(a2 + 9);
            v248 = a2[12];
            if (v248)
            {
              *(_QWORD *)(a1 + 96) = v248;
              *(_QWORD *)(a1 + 104) = a2[13];
              (**(void (***)(_OWORD *, __int128 *))(v248 - 8))(v246, v247);
            }
            else
            {
              v272 = *v247;
              v273 = *(_OWORD *)(a2 + 11);
              *(_QWORD *)(a1 + 104) = a2[13];
              *v246 = v272;
              *(_OWORD *)(a1 + 88) = v273;
            }
            v274 = (_OWORD *)(a1 + 112);
            v275 = (__int128 *)(a2 + 14);
            v276 = a2[17];
            if (v276)
            {
              *(_QWORD *)(a1 + 136) = v276;
              *(_QWORD *)(a1 + 144) = a2[18];
              (**(void (***)(_OWORD *, __int128 *))(v276 - 8))(v274, v275);
            }
            else
            {
              v290 = *v275;
              v291 = *((_OWORD *)a2 + 8);
              *(_QWORD *)(a1 + 144) = a2[18];
              *v274 = v290;
              *(_OWORD *)(a1 + 128) = v291;
            }
            goto LABEL_221;
          case 0xAu:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            v187 = (int *)type metadata accessor for FeedEngagementBanner();
            v188 = v187[5];
            v189 = a1 + v188;
            v190 = (uint64_t)a2 + v188;
            v191 = sub_1BB86EDAC();
            v192 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v191 - 8) + 16);
            swift_bridgeObjectRetain();
            v192(v189, v190, v191);
            *(_QWORD *)(a1 + v187[6]) = *(uint64_t *)((char *)a2 + v187[6]);
            v193 = v187[7];
            v194 = a1 + v193;
            v195 = (uint64_t)a2 + v193;
            v196 = *(_BYTE *)(v195 + 8);
            *(_QWORD *)v194 = *(_QWORD *)v195;
            *(_BYTE *)(v194 + 8) = v196;
            v197 = v187[8];
            v142 = a1 + v197;
            v143 = (uint64_t)a2 + v197;
            if (*(_QWORD *)(v143 + 8) >= 0x11uLL)
            {
LABEL_85:
              *(_QWORD *)v142 = *(_QWORD *)v143;
              *(_QWORD *)(v142 + 8) = *(_QWORD *)(v143 + 8);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v142 = *(_OWORD *)v143;
            }
            goto LABEL_221;
          case 0xBu:
            *(_QWORD *)a1 = *a2;
            swift_retain();
            goto LABEL_221;
          case 0xCu:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_QWORD *)(a1 + 16) = a2[2];
            v198 = a2[3];
            *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
            *(_QWORD *)(a1 + 24) = v198;
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_221;
          case 0xDu:
            *(_QWORD *)a1 = *a2;
            v199 = a2[1];
            *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
            *(_QWORD *)(a1 + 8) = v199;
            if ((unint64_t)a2[4] >= 0x11)
            {
              *(_QWORD *)(a1 + 24) = a2[3];
              *(_QWORD *)(a1 + 32) = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
            }
            *(_QWORD *)(a1 + 40) = a2[5];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = a2[7];
            v223 = (void *)a2[8];
            *(_QWORD *)(a1 + 64) = v223;
            *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
            *(_QWORD *)(a1 + 80) = a2[10];
            v224 = a2[14];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            v225 = v223;
            swift_bridgeObjectRetain();
            if (v224)
            {
              *(_QWORD *)(a1 + 112) = v224;
              *(_QWORD *)(a1 + 120) = a2[15];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v224 - 8))(a1 + 88, (uint64_t)(a2 + 11), v224);
            }
            else
            {
              v262 = *(_OWORD *)(a2 + 11);
              v263 = *(_OWORD *)(a2 + 13);
              *(_QWORD *)(a1 + 120) = a2[15];
              *(_OWORD *)(a1 + 88) = v262;
              *(_OWORD *)(a1 + 104) = v263;
            }
            v264 = (_OWORD *)(a1 + 128);
            v265 = (__int128 *)(a2 + 16);
            v266 = a2[19];
            if (v266)
            {
              *(_QWORD *)(a1 + 152) = v266;
              *(_QWORD *)(a1 + 160) = a2[20];
              (**(void (***)(_OWORD *, __int128 *))(v266 - 8))(v264, v265);
            }
            else
            {
              v288 = *v265;
              v289 = *((_OWORD *)a2 + 9);
              *(_QWORD *)(a1 + 160) = a2[20];
              *v264 = v288;
              *(_OWORD *)(a1 + 144) = v289;
            }
            goto LABEL_221;
          case 0xEu:
            *(_QWORD *)a1 = *a2;
            v200 = a2[1];
            *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
            *(_QWORD *)(a1 + 8) = v200;
            if ((unint64_t)a2[4] >= 0x11)
            {
              *(_QWORD *)(a1 + 24) = a2[3];
              *(_QWORD *)(a1 + 32) = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
            }
            *(_QWORD *)(a1 + 40) = a2[5];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = a2[7];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_221;
          case 0xFu:
            *(_QWORD *)a1 = *a2;
            v201 = a2[1];
            *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
            *(_QWORD *)(a1 + 8) = v201;
            if ((unint64_t)a2[4] >= 0x11)
            {
              *(_QWORD *)(a1 + 24) = a2[3];
              *(_QWORD *)(a1 + 32) = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
            }
            *(_QWORD *)(a1 + 40) = a2[5];
            *(_QWORD *)(a1 + 48) = a2[6];
            v226 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            *(_QWORD *)(a1 + v226) = *(uint64_t *)((char *)a2 + v226);
            type metadata accessor for PuzzleStatistic();
            type metadata accessor for PuzzleStatisticCategory(0);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            v227 = (char *)&loc_1BB159BD0 + 4 * word_1BB8F0304[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
            return result;
          case 0x10u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_QWORD *)(a1 + 24) = a2[3];
            *(_QWORD *)(a1 + 32) = a2[4];
            *(_QWORD *)(a1 + 40) = a2[5];
            *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
            *(_BYTE *)(a1 + 49) = *((_BYTE *)a2 + 49);
            *(_QWORD *)(a1 + 56) = a2[7];
            *(_QWORD *)(a1 + 64) = a2[8];
            *(_QWORD *)(a1 + 72) = a2[9];
            *(_QWORD *)(a1 + 80) = a2[10];
            *(_QWORD *)(a1 + 88) = a2[11];
            *(_QWORD *)(a1 + 96) = a2[12];
            *(_QWORD *)(a1 + 104) = a2[13];
            *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
            *(_QWORD *)(a1 + 120) = a2[15];
            *(_QWORD *)(a1 + 128) = a2[16];
            *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
            *(_QWORD *)(a1 + 144) = a2[18];
            *(_QWORD *)(a1 + 152) = a2[19];
            *(_QWORD *)(a1 + 160) = a2[20];
            *(_QWORD *)(a1 + 168) = a2[21];
            v202 = a2[22];
            *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
            *(_QWORD *)(a1 + 176) = v202;
            *(_QWORD *)(a1 + 192) = a2[24];
            *(_QWORD *)(a1 + 200) = a2[25];
            *(_QWORD *)(a1 + 208) = a2[26];
            v203 = a2[27];
            *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
            *(_QWORD *)(a1 + 216) = v203;
            v204 = a2[30];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v204 >= 0x11)
            {
              *(_QWORD *)(a1 + 232) = a2[29];
              *(_QWORD *)(a1 + 240) = a2[30];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
            }
LABEL_221:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v423 = (int *)type metadata accessor for FormatItemNodeData();
        v424 = v423[5];
        v425 = a1 + v424;
        v426 = (uint64_t)a2 + v424;
        *(_QWORD *)v425 = *(uint64_t *)((char *)a2 + v424);
        *(_QWORD *)(v425 + 8) = *(uint64_t *)((char *)a2 + v424 + 8);
        *(_QWORD *)(v425 + 16) = *(uint64_t *)((char *)a2 + v424 + 16);
        *(_QWORD *)(v425 + 24) = *(uint64_t *)((char *)a2 + v424 + 24);
        *(_QWORD *)(v425 + 32) = *(uint64_t *)((char *)a2 + v424 + 32);
        *(_QWORD *)(v425 + 40) = *(uint64_t *)((char *)a2 + v424 + 40);
        v427 = *(uint64_t *)((char *)a2 + v424 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v427 >= 0xF)
        {
          *(_QWORD *)(v425 + 48) = *(_QWORD *)(v426 + 48);
          *(_QWORD *)(v425 + 56) = *(_QWORD *)(v426 + 56);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v425 + 48) = *(_OWORD *)(v426 + 48);
        }
        *(_QWORD *)(v425 + 64) = *(_QWORD *)(v426 + 64);
        *(_QWORD *)(v425 + 72) = *(_QWORD *)(v426 + 72);
        *(_QWORD *)(v425 + 80) = *(_QWORD *)(v426 + 80);
        *(_QWORD *)(v425 + 88) = *(_QWORD *)(v426 + 88);
        *(_QWORD *)(v425 + 96) = *(_QWORD *)(v426 + 96);
        *(_QWORD *)(v425 + 104) = *(_QWORD *)(v426 + 104);
        *(_QWORD *)(v425 + 112) = *(_QWORD *)(v426 + 112);
        *(_BYTE *)(v425 + 120) = *(_BYTE *)(v426 + 120);
        v428 = v423[6];
        v429 = *(uint64_t *)((char *)a2 + v428);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA728598(v429);
        *(_QWORD *)(a1 + v428) = v429;
        v430 = v423[7];
        v431 = a1 + v430;
        v432 = (uint64_t)a2 + v430;
        v433 = sub_1BB86FE38();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v433 - 8) + 16))(v431, v432, v433);
        v434 = v423[8];
        v435 = (_QWORD *)(a1 + v434);
        v436 = (uint64_t *)((char *)a2 + v434);
        if (v436[1])
        {
          *v435 = *v436;
          v435[1] = v436[1];
          v435[2] = v436[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v437 = *(_OWORD *)v436;
          v435[2] = v436[2];
          *(_OWORD *)v435 = v437;
        }
        goto LABEL_235;
      case 5u:
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = a2[3];
        *(_QWORD *)(a1 + 32) = a2[4];
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_QWORD *)(a1 + 56) = a2[7];
        *(_QWORD *)(a1 + 64) = a2[8];
        *(_QWORD *)(a1 + 72) = a2[9];
        *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
        *(_QWORD *)(a1 + 88) = a2[11];
        *(_QWORD *)(a1 + 96) = a2[12];
        *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_235;
      case 6u:
        v10 = type metadata accessor for FormatAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(_QWORD *)a1 = *a2;
            v11 = (id *)(a2 + 1);
            v12 = *((unsigned __int8 *)a2 + 16);
            swift_bridgeObjectRetain();
            if (v12 <= 0xFD)
            {
              v128 = *v11;
              sub_1BA727178(*v11, v12);
              *(_QWORD *)(a1 + 8) = v128;
              *(_BYTE *)(a1 + 16) = v12;
            }
            else
            {
              v13 = *v11;
              *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
              *(_QWORD *)(a1 + 8) = v13;
            }
            goto LABEL_195;
          case 1u:
            v92 = *a2;
            v93 = a2[1];
            v94 = a2[2];
            v95 = a2[3];
            v96 = a2[4];
            v475 = v10;
            v97 = *((_BYTE *)a2 + 41);
            v98 = *((_BYTE *)a2 + 40);
            sub_1BA7271AC((id)*a2, v93, v94, v95, v96, v98, v97);
            *(_QWORD *)a1 = v92;
            *(_QWORD *)(a1 + 8) = v93;
            *(_QWORD *)(a1 + 16) = v94;
            *(_QWORD *)(a1 + 24) = v95;
            *(_QWORD *)(a1 + 32) = v96;
            *(_BYTE *)(a1 + 40) = v98;
            *(_BYTE *)(a1 + 41) = v97;
            v10 = v475;
            *(_QWORD *)(a1 + 48) = a2[6];
            v99 = (void *)a2[7];
            LOBYTE(v93) = *((_BYTE *)a2 + 64);
            swift_bridgeObjectRetain();
            sub_1BA727178(v99, v93);
            *(_QWORD *)(a1 + 56) = v99;
            *(_BYTE *)(a1 + 64) = v93;
            goto LABEL_195;
          case 2u:
            *(_QWORD *)a1 = *a2;
            swift_retain();
            goto LABEL_195;
          case 4u:
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_QWORD *)(a1 + 24) = a2[3];
            *(_QWORD *)(a1 + 32) = a2[4];
            *(_QWORD *)(a1 + 40) = a2[5];
            v100 = a2[6];
            v101 = a2[7];
            v476 = v10;
            v102 = a2[8];
            v103 = a2[9];
            v104 = *((_BYTE *)a2 + 80);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7261E0(v100, v101, v102, v103, v104);
            *(_QWORD *)(a1 + 48) = v100;
            *(_QWORD *)(a1 + 56) = v101;
            *(_QWORD *)(a1 + 64) = v102;
            *(_QWORD *)(a1 + 72) = v103;
            v10 = v476;
            *(_BYTE *)(a1 + 80) = v104;
            *(_QWORD *)(a1 + 88) = a2[11];
            *(_QWORD *)(a1 + 96) = a2[12];
            *(_QWORD *)(a1 + 104) = a2[13];
            *(_QWORD *)(a1 + 112) = a2[14];
            *(_QWORD *)(a1 + 120) = a2[15];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_195;
          case 5u:
            v105 = type metadata accessor for FormatPurchaseData(0);
            v106 = swift_getEnumCaseMultiPayload();
            if (v106 == 1)
            {
              v205 = type metadata accessor for FormatPurchaseLandingPageData();
              v206 = *(_QWORD *)(v205 - 8);
              if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v206 + 48))(a2, 1, v205))
              {
                sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
                memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
              }
              else
              {
                v480 = v10;
                *(_QWORD *)a1 = *a2;
                *(_QWORD *)(a1 + 8) = a2[1];
                v249 = *(int *)(v205 + 20);
                v466 = (void *)(a1 + v249);
                v250 = (char *)a2 + v249;
                v251 = type metadata accessor for FormatPostPurchaseData();
                v252 = *(_QWORD *)(v251 - 8);
                v253 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v252 + 48);
                swift_bridgeObjectRetain();
                if (v253(v250, 1, v251))
                {
                  sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                  memcpy(v466, v250, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
                }
                else
                {
                  v325 = sub_1BB86C67C();
                  v326 = *(_QWORD *)(v325 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v326 + 48))(v250, 2, v325))
                  {
                    v327 = v466;
                    memcpy(v466, v250, *(_QWORD *)(v252 + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, char *, uint64_t))(v326 + 16))(v466, v250, v325);
                    v375 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v326 + 56);
                    v327 = v466;
                    v375(v466, 0, 2, v325);
                  }
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v252 + 56))(v327, 0, 1, v251);
                }
                v10 = v480;
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v206 + 56))(a1, 0, 1, v205);
              }
            }
            else
            {
              if (v106)
              {
                memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
                goto LABEL_195;
              }
              v477 = v10;
              *(_QWORD *)a1 = *a2;
              *(_QWORD *)(a1 + 8) = a2[1];
              v107 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
              v108 = (void *)(a1 + v107);
              v109 = (char *)a2 + v107;
              v110 = type metadata accessor for FormatPostPurchaseData();
              v111 = *(_QWORD *)(v110 - 8);
              v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
              swift_bridgeObjectRetain();
              if (v112(v109, 1, v110))
              {
                sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
                v10 = v477;
              }
              else
              {
                v228 = sub_1BB86C67C();
                v229 = *(_QWORD *)(v228 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v229 + 48))(v109, 2, v228))
                {
                  memcpy(v108, v109, *(_QWORD *)(v111 + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v229 + 16))(v108, v109, v228);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v229 + 56))(v108, 0, 2, v228);
                }
                v10 = v477;
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
              }
            }
            swift_storeEnumTagMultiPayload();
LABEL_195:
            swift_storeEnumTagMultiPayload();
LABEL_196:
            v376 = type metadata accessor for FormatButtonNodeDataAction();
            v377 = *(int *)(v376 + 20);
            v378 = *(void **)((char *)a2 + v377);
            *(_QWORD *)(a1 + v377) = v378;
            v379 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
            v380 = (_QWORD *)(a1 + v379);
            v381 = (uint64_t *)((char *)a2 + v379);
            v382 = *(_QWORD *)(v376 - 8);
            v383 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v382 + 48);
            v384 = v378;
            if (v383(v381, 1, v376))
            {
              sub_1BA4A3FB4(0, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
              memcpy(v380, v381, *(_QWORD *)(*(_QWORD *)(v385 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  *v380 = *v381;
                  v386 = (id *)(v381 + 1);
                  v387 = *((unsigned __int8 *)v381 + 16);
                  swift_bridgeObjectRetain();
                  if (v387 <= 0xFD)
                  {
                    v408 = *v386;
                    sub_1BA727178(*v386, v387);
                    v380[1] = v408;
                    *((_BYTE *)v380 + 16) = v387;
                  }
                  else
                  {
                    v388 = *v386;
                    *((_BYTE *)v380 + 16) = *((_BYTE *)v381 + 16);
                    v380[1] = v388;
                  }
                  goto LABEL_233;
                case 1u:
                  v389 = *v381;
                  v390 = v381[1];
                  v470 = v382;
                  v391 = v381[2];
                  v392 = v381[3];
                  v393 = v381[4];
                  v467 = *((_BYTE *)v381 + 41);
                  v394 = *((_BYTE *)v381 + 40);
                  sub_1BA7271AC((id)*v381, v390, v391, v392, v393, v394, v467);
                  *v380 = v389;
                  v380[1] = v390;
                  v380[2] = v391;
                  v380[3] = v392;
                  v382 = v470;
                  v380[4] = v393;
                  *((_BYTE *)v380 + 40) = v394;
                  *((_BYTE *)v380 + 41) = v467;
                  v380[6] = v381[6];
                  v395 = (void *)v381[7];
                  LOBYTE(v390) = *((_BYTE *)v381 + 64);
                  swift_bridgeObjectRetain();
                  sub_1BA727178(v395, v390);
                  v380[7] = v395;
                  *((_BYTE *)v380 + 64) = v390;
                  goto LABEL_233;
                case 2u:
                  *v380 = *v381;
                  swift_retain();
                  goto LABEL_233;
                case 4u:
                  *v380 = *v381;
                  v380[1] = v381[1];
                  v380[2] = v381[2];
                  v380[3] = v381[3];
                  v380[4] = v381[4];
                  v380[5] = v381[5];
                  v471 = v382;
                  v396 = v381[6];
                  v397 = v381[7];
                  v398 = v381[8];
                  v468 = (void *)v381[9];
                  v459 = *((_BYTE *)v381 + 80);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1BA7261E0(v396, v397, v398, (uint64_t)v468, v459);
                  v380[6] = v396;
                  v380[7] = v397;
                  v382 = v471;
                  v380[8] = v398;
                  v380[9] = v468;
                  *((_BYTE *)v380 + 80) = v459;
                  v380[11] = v381[11];
                  v380[12] = v381[12];
                  v380[13] = v381[13];
                  v380[14] = v381[14];
                  v380[15] = v381[15];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_233;
                case 5u:
                  v399 = type metadata accessor for FormatPurchaseData(0);
                  v400 = swift_getEnumCaseMultiPayload();
                  if (v400 == 1)
                  {
                    v473 = v382;
                    v409 = type metadata accessor for FormatPurchaseLandingPageData();
                    v410 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v409 - 8);
                    if (v410[6](v381, 1, v409))
                    {
                      sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
                      memcpy(v380, v381, *(_QWORD *)(*(_QWORD *)(v411 - 8) + 64));
                    }
                    else
                    {
                      v469 = v410;
                      *v380 = *v381;
                      v380[1] = v381[1];
                      v414 = *(int *)(v409 + 20);
                      v460 = (char *)v380 + v414;
                      v415 = (char *)v381 + v414;
                      v416 = type metadata accessor for FormatPostPurchaseData();
                      v450 = *(_QWORD *)(v416 - 8);
                      v417 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v450 + 48);
                      swift_bridgeObjectRetain();
                      v418 = v415;
                      __dstc = (void *)v416;
                      if (v417(v415, 1, v416))
                      {
                        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                        memcpy(v460, v415, *(_QWORD *)(*(_QWORD *)(v419 - 8) + 64));
                      }
                      else
                      {
                        v420 = sub_1BB86C67C();
                        v421 = *(_QWORD *)(v420 - 8);
                        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v421 + 48))(v418, 2, v420))
                        {
                          v422 = v450;
                          memcpy(v460, v418, *(_QWORD *)(v450 + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, const void *, uint64_t))(v421 + 16))(v460, v418, v420);
                          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v421 + 56))(v460, 0, 2, v420);
                          v422 = v450;
                        }
                        (*(void (**)(char *, _QWORD, uint64_t, void *))(v422 + 56))(v460, 0, 1, __dstc);
                      }
                      (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v469 + 7))(v380, 0, 1, v409);
                    }
                    v382 = v473;
                  }
                  else
                  {
                    if (v400)
                    {
                      memcpy(v380, v381, *(_QWORD *)(*(_QWORD *)(v399 - 8) + 64));
                      goto LABEL_233;
                    }
                    v472 = v382;
                    *v380 = *v381;
                    v380[1] = v381[1];
                    v401 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
                    v402 = (char *)v380 + v401;
                    v403 = (char *)v381 + v401;
                    v404 = type metadata accessor for FormatPostPurchaseData();
                    v405 = *(_QWORD *)(v404 - 8);
                    v406 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v405 + 48);
                    swift_bridgeObjectRetain();
                    if (v406(v403, 1, v404))
                    {
                      sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                      memcpy(v402, v403, *(_QWORD *)(*(_QWORD *)(v407 - 8) + 64));
                      v382 = v472;
                    }
                    else
                    {
                      v412 = sub_1BB86C67C();
                      v413 = *(_QWORD *)(v412 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v413 + 48))(v403, 2, v412))
                      {
                        memcpy(v402, v403, *(_QWORD *)(v405 + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(v413 + 16))(v402, v403, v412);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v413 + 56))(v402, 0, 2, v412);
                      }
                      v382 = v472;
                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v405 + 56))(v402, 0, 1, v404);
                    }
                  }
                  swift_storeEnumTagMultiPayload();
LABEL_233:
                  swift_storeEnumTagMultiPayload();
LABEL_234:
                  v438 = *(int *)(v376 + 20);
                  v439 = *(void **)((char *)v381 + v438);
                  *(_QWORD *)((char *)v380 + v438) = v439;
                  v440 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v382 + 56);
                  v441 = v439;
                  v440(v380, 0, 1, v376);
                  break;
                default:
                  memcpy(v380, v381, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
                  goto LABEL_234;
              }
            }
            break;
          default:
            memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            goto LABEL_196;
        }
        goto LABEL_235;
      case 0xAu:
        v14 = type metadata accessor for FormatViewBackground(0);
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
          memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          v73 = swift_getEnumCaseMultiPayload();
          if (v73 == 2)
          {
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            v114 = a2[2];
            v461 = (void *)a2[3];
            v115 = a2[4];
            v116 = a2[5];
            v117 = a2[6];
            v118 = a2[7];
            v119 = a2[8];
            v455 = (void *)a2[9];
            v478 = *((_BYTE *)a2 + 80);
            sub_1BAA8C5C0(v114, (uint64_t)v461, v115, v116, v117, v118, v119, (uint64_t)v455, v478);
            *(_QWORD *)(a1 + 16) = v114;
            *(_QWORD *)(a1 + 24) = v461;
            *(_QWORD *)(a1 + 32) = v115;
            *(_QWORD *)(a1 + 40) = v116;
            *(_QWORD *)(a1 + 48) = v117;
            *(_QWORD *)(a1 + 56) = v118;
            *(_QWORD *)(a1 + 64) = v119;
            *(_QWORD *)(a1 + 72) = v455;
            *(_BYTE *)(a1 + 80) = v478;
            v120 = a2[11];
            v479 = a2[12];
            v121 = a2[13];
            v122 = a2[14];
            v123 = a2[15];
            v124 = a2[16];
            v126 = a2[17];
            v125 = a2[18];
            v462 = (void *)v125;
            v127 = *((_BYTE *)a2 + 152);
            sub_1BAA8C5C0(v120, v479, v121, v122, v123, v124, v126, v125, v127);
            *(_QWORD *)(a1 + 88) = v120;
            *(_QWORD *)(a1 + 96) = v479;
            *(_QWORD *)(a1 + 104) = v121;
            *(_QWORD *)(a1 + 112) = v122;
            *(_QWORD *)(a1 + 120) = v123;
            *(_QWORD *)(a1 + 128) = v124;
            *(_QWORD *)(a1 + 136) = v126;
            *(_QWORD *)(a1 + 144) = v462;
            *(_BYTE *)(a1 + 152) = v127;
          }
          else if (v73 == 1)
          {
            *(_QWORD *)a1 = *a2;
            v74 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
            v75 = (void *)(a1 + v74);
            v76 = (char *)a2 + v74;
            v77 = sub_1BB86FBD4();
            v78 = *(_QWORD *)(v77 - 8);
            v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
            swift_retain();
            if (v79(v76, 1, v77))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
              memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
            }
          }
          else
          {
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = a2[1];
            swift_retain();
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
        goto LABEL_235;
      case 0xBu:
        *(_QWORD *)a1 = *a2;
        v17 = type metadata accessor for FormatMicaData();
        v18 = *(int *)(v17 + 20);
        v19 = (void *)(a1 + v18);
        v20 = (char *)a2 + v18;
        v21 = sub_1BB86FBD4();
        v22 = *(_QWORD *)(v21 - 8);
        v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_retain();
        if (v23(v20, 1, v21))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        v81 = *(int *)(v17 + 24);
        v82 = a1 + v81;
        v83 = (int *)((char *)a2 + v81);
        v84 = *v83;
        *(_BYTE *)(v82 + 4) = *((_BYTE *)v83 + 4);
        *(_DWORD *)v82 = v84;
        goto LABEL_235;
      case 0xCu:
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = a2[3];
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_235;
      case 0xDu:
        v25 = sub_1BB86C67C();
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v26 + 16);
        v27(a1, a2, v25);
        v28 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
        v29 = (void *)(a1 + v28);
        v30 = (char *)a2 + v28;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((uint64_t)a2 + v28, 1, v25))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v27((uint64_t)v29, (uint64_t *)v30, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
        }
        v85 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
        v86 = a1 + v85;
        v87 = (uint64_t)a2 + v85;
        v88 = *(void **)v87;
        *(_QWORD *)v86 = *(_QWORD *)v87;
        *(_BYTE *)(v86 + 8) = *(_BYTE *)(v87 + 8);
        *(_QWORD *)(v86 + 16) = *(_QWORD *)(v87 + 16);
        *(_BYTE *)(v86 + 24) = *(_BYTE *)(v87 + 24);
        *(_BYTE *)(v86 + 25) = *(_BYTE *)(v87 + 25);
        v89 = *(void **)(v87 + 32);
        *(_QWORD *)(v86 + 32) = v89;
        *(_QWORD *)(v86 + 40) = *(_QWORD *)(v87 + 40);
        v90 = v88;
        v91 = v89;
        goto LABEL_235;
      case 0xEu:
        v32 = (void *)*a2;
        v33 = a2[1];
        v34 = (void *)a2[2];
        v35 = a2[3];
        v36 = (void *)a2[4];
        v37 = a2[5];
        v38 = (void *)a2[6];
        v39 = *((_BYTE *)a2 + 56);
        sub_1BA8996DC(v32, v33, v34, v35, v36, v37, v38, v39);
        *(_QWORD *)a1 = v32;
        *(_QWORD *)(a1 + 8) = v33;
        *(_QWORD *)(a1 + 16) = v34;
        *(_QWORD *)(a1 + 24) = v35;
        *(_QWORD *)(a1 + 32) = v36;
        *(_QWORD *)(a1 + 40) = v37;
        *(_QWORD *)(a1 + 48) = v38;
        *(_BYTE *)(a1 + 56) = v39;
        goto LABEL_235;
      case 0xFu:
        v40 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
        v41 = (int *)type metadata accessor for SharedItem();
        *(_BYTE *)(a1 + v41[5]) = *((_BYTE *)a2 + v41[5]);
        v42 = v41[6];
        v43 = *(void **)((char *)a2 + v42);
        *(_QWORD *)(a1 + v42) = v43;
        v44 = v41[7];
        v45 = a1 + v44;
        v46 = (uint64_t)a2 + v44;
        v47 = sub_1BB86C67C();
        v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
        v49 = v43;
        v48(v45, v46, v47);
        goto LABEL_235;
      case 0x10u:
        v50 = (void *)*a2;
        v51 = a2[1];
        v52 = a2[2];
        v53 = a2[3];
        v54 = a2[4];
        v55 = a2[5];
        v56 = a2[6];
        v57 = a2[7];
        v58 = *((_BYTE *)a2 + 64);
        sub_1BA7F6D0C(v50, v51, v52, v53, v54, v55, v56, v57, v58);
        *(_QWORD *)a1 = v50;
        *(_QWORD *)(a1 + 8) = v51;
        *(_QWORD *)(a1 + 16) = v52;
        *(_QWORD *)(a1 + 24) = v53;
        *(_QWORD *)(a1 + 32) = v54;
        *(_QWORD *)(a1 + 40) = v55;
        *(_QWORD *)(a1 + 48) = v56;
        *(_QWORD *)(a1 + 56) = v57;
        *(_BYTE *)(a1 + 64) = v58;
        goto LABEL_235;
      case 0x11u:
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = a2[3];
        *(_QWORD *)(a1 + 32) = a2[4];
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
        v59 = (int *)type metadata accessor for FormatVideoPlayerData();
        v60 = v59[9];
        v474 = a1 + v60;
        v61 = (uint64_t)a2 + v60;
        v62 = sub_1BB86C67C();
        v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v63(v474, v61, v62);
        *(_QWORD *)(a1 + v59[10]) = *(uint64_t *)((char *)a2 + v59[10]);
        *(_BYTE *)(a1 + v59[11]) = *((_BYTE *)a2 + v59[11]);
        v64 = v59[12];
        v65 = a1 + v64;
        v66 = (uint64_t)a2 + v64;
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
        *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
        *(_QWORD *)(v65 + 24) = *(_QWORD *)(v66 + 24);
        *(_BYTE *)(v65 + 32) = *(_BYTE *)(v66 + 32);
        *(_QWORD *)(v65 + 40) = *(_QWORD *)(v66 + 40);
        *(_QWORD *)(v65 + 48) = *(_QWORD *)(v66 + 48);
        *(_BYTE *)(a1 + v59[13]) = *((_BYTE *)a2 + v59[13]);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_235;
      case 0x12u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v67 = a2[1];
        sub_1BA897950(v67);
        *(_QWORD *)(a1 + 8) = v67;
        goto LABEL_235;
      case 0x14u:
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        v68 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        v69 = a1 + v68;
        v70 = (uint64_t)a2 + v68;
        v71 = sub_1BB871E24();
        v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        v72(v69, v70, v71);
LABEL_235:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB15BBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  void *v97;
  const void *v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD *v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  const void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  const void *v124;
  uint64_t v125;
  unsigned int (**v126)(const void *, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  const void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int *v138;
  uint64_t v139;
  _OWORD *v140;
  _OWORD *v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int (**v157)(const void *, uint64_t, uint64_t);
  const void *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _OWORD *v170;
  _OWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _OWORD *v178;
  _OWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  int *v203;
  uint64_t v204;
  _OWORD *v205;
  _OWORD *v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t result;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int *v222;
  uint64_t v223;
  char *v224;
  _QWORD *v225;
  void (*v226)(char *, char *, uint64_t);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  int *v234;
  int *v235;
  unsigned int (**v236)(const void *, uint64_t, uint64_t);
  char *v237;
  void (**__dst)(void *, const void *, uint64_t);
  void *__dsta;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1BB871B24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_112;
    case 4u:
      v7 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v8 = (int *)type metadata accessor for FeedBannerAd();
          v9 = v8[5];
          v10 = a1 + v9;
          v11 = a2 + v9;
          v12 = sub_1BB8721C0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
          *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
          v13 = v8[7];
          v14 = a1 + v13;
          v15 = a2 + v13;
          *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
          *(_QWORD *)v14 = *(_QWORD *)v15;
          *(_OWORD *)(a1 + v8[8]) = *(_OWORD *)(a2 + v8[8]);
          goto LABEL_104;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
          v234 = (int *)type metadata accessor for FeedHeadline(0);
          v78 = v234[10];
          v79 = (_BYTE *)(a1 + v78);
          v80 = a2 + v78;
          *v79 = *(_BYTE *)(a2 + v78);
          v79[1] = *(_BYTE *)(a2 + v78 + 1);
          v81 = (int *)type metadata accessor for FeedHeadline.State(0);
          v82 = v81[6];
          v83 = &v79[v82];
          v84 = (char *)(v80 + v82);
          v85 = (int *)type metadata accessor for SharedItem();
          v86 = *((_QWORD *)v85 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v86 + 48))(v84, 1, v85))
          {
            v87 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          }
          else
          {
            v128 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v83, v84, v128);
            v83[v85[5]] = v84[v85[5]];
            *(_QWORD *)&v83[v85[6]] = *(_QWORD *)&v84[v85[6]];
            v129 = v85[7];
            v230 = &v83[v129];
            v130 = &v84[v129];
            v131 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v230, v130, v131);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v86 + 56))(v83, 0, 1, v85);
          }
          v79[v81[7]] = *(_BYTE *)(v80 + v81[7]);
          v79[v81[8]] = *(_BYTE *)(v80 + v81[8]);
          v79[v81[9]] = *(_BYTE *)(v80 + v81[9]);
          v79[v81[10]] = *(_BYTE *)(v80 + v81[10]);
          v132 = v234[11];
          v133 = (void *)(a1 + v132);
          v134 = (const void *)(a2 + v132);
          v135 = sub_1BB871B24();
          v136 = *(_QWORD *)(v135 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v134, 1, v135))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v136 + 32))(v133, v134, v135);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
          }
          *(_OWORD *)(a1 + v234[12]) = *(_OWORD *)(a2 + v234[12]);
          v146 = v234[13];
          v147 = *(_QWORD *)(a2 + v146);
          if (v147 == 2)
            v147 = 2;
          *(_QWORD *)(a1 + v146) = v147;
          *(_QWORD *)(a1 + v234[14]) = *(_QWORD *)(a2 + v234[14]);
          goto LABEL_104;
        case 4u:
          v88 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v88;
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          v89 = (int *)type metadata accessor for FeedWebEmbed();
          v90 = v89[8];
          v91 = a1 + v90;
          v92 = a2 + v90;
          v93 = sub_1BB86C67C();
          v94 = *(_QWORD *)(v93 - 8);
          v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
          v95(v91, v92, v93);
          v235 = v89;
          v96 = v89[9];
          v97 = (void *)(a1 + v96);
          v98 = (const void *)(a2 + v96);
          v226 = (void (*)(char *, char *, uint64_t))v95;
          v229 = v93;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(a2 + v96, 1, v93))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
          }
          else
          {
            v95((uint64_t)v97, (uint64_t)v98, v93);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v97, 0, 1, v93);
          }
          v138 = v89;
          *(_QWORD *)(a1 + v89[10]) = *(_QWORD *)(a2 + v89[10]);
          *(_QWORD *)(a1 + v89[11]) = *(_QWORD *)(a2 + v89[11]);
          v139 = v89[12];
          v140 = (_OWORD *)(a1 + v139);
          v141 = (_OWORD *)(a2 + v139);
          v142 = (int *)type metadata accessor for FeedHeadline(0);
          v143 = *((_QWORD *)v142 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v143 + 48))(v141, 1, v142))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
          }
          else
          {
            v220 = v143;
            *v140 = *v141;
            *((_QWORD *)v140 + 2) = *((_QWORD *)v141 + 2);
            *((_BYTE *)v140 + 24) = *((_BYTE *)v141 + 24);
            *((_QWORD *)v140 + 4) = *((_QWORD *)v141 + 4);
            *(_OWORD *)((char *)v140 + 40) = *(_OWORD *)((char *)v141 + 40);
            *((_BYTE *)v140 + 56) = *((_BYTE *)v141 + 56);
            v148 = v142[10];
            v149 = (char *)v140 + v148;
            v150 = (char *)v141 + v148;
            *v149 = *((_BYTE *)v141 + v148);
            v149[1] = *((_BYTE *)v141 + v148 + 1);
            v151 = type metadata accessor for FeedHeadline.State(0);
            v152 = *(int *)(v151 + 24);
            v222 = (int *)v151;
            v224 = &v149[v152];
            v153 = &v150[v152];
            v154 = (int *)type metadata accessor for SharedItem();
            v219 = *((_QWORD *)v154 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v219 + 48))(v153, 1, v154))
            {
              v155 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v224, v153, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
            }
            else
            {
              v160 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v224, v153, v160);
              v224[v154[5]] = v153[v154[5]];
              *(_QWORD *)&v224[v154[6]] = *(_QWORD *)&v153[v154[6]];
              v226(&v224[v154[7]], &v153[v154[7]], v229);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v219 + 56))(v224, 0, 1, v154);
            }
            v149[v222[7]] = v150[v222[7]];
            v149[v222[8]] = v150[v222[8]];
            v149[v222[9]] = v150[v222[9]];
            v149[v222[10]] = v150[v222[10]];
            v161 = v142[11];
            v162 = (char *)v140 + v161;
            v163 = (char *)v141 + v161;
            v164 = sub_1BB871B24();
            v165 = *(_QWORD *)(v164 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v162, v163, v164);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v162, 0, 1, v164);
            }
            v138 = v235;
            *(_OWORD *)((char *)v140 + v142[12]) = *(_OWORD *)((char *)v141 + v142[12]);
            v167 = v142[13];
            v168 = *(_QWORD *)((char *)v141 + v167);
            if (v168 == 2)
              v168 = 2;
            *(_QWORD *)((char *)v140 + v167) = v168;
            *(_QWORD *)((char *)v140 + v142[14]) = *(_QWORD *)((char *)v141 + v142[14]);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v220 + 56))(v140, 0, 1, v142);
          }
          v169 = v138[13];
          v170 = (_OWORD *)(a1 + v169);
          v171 = (_OWORD *)(a2 + v169);
          v172 = type metadata accessor for WebEmbedDataVisualization();
          v173 = *(_QWORD *)(v172 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *v170 = *v171;
              v175 = type metadata accessor for GenericDataVisualization();
              v226((char *)v170 + *(int *)(v175 + 20), (char *)v171 + *(int *)(v175 + 20), v229);
              *(_QWORD *)((char *)v170 + *(int *)(v175 + 24)) = *(_QWORD *)((char *)v171 + *(int *)(v175 + 24));
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v170, v171, *(_QWORD *)(v173 + 64));
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
          }
          *(_BYTE *)(a1 + v138[14]) = *(_BYTE *)(a2 + v138[14]);
          goto LABEL_104;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v100 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v101 = (_OWORD *)(a1 + v100);
          v102 = a2 + v100;
          v103 = *(_OWORD *)(a2 + v100 + 16);
          *v101 = *(_OWORD *)(a2 + v100);
          v101[1] = v103;
          v104 = type metadata accessor for FormatCustomItem.Resolved();
          v105 = *(int *)(v104 + 24);
          v106 = (char *)v101 + v105;
          v107 = (const void *)(v102 + v105);
          v108 = type metadata accessor for FormatCustomItem.Action();
          v109 = *(_QWORD *)(v108 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
          }
          else
          {
            v145 = sub_1BB86C67C();
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v106, v107, v145);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
          }
          *(_QWORD *)((char *)v101 + *(int *)(v104 + 28)) = *(_QWORD *)(v102 + *(int *)(v104 + 28));
          goto LABEL_104;
        case 0xAu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v111 = (int *)type metadata accessor for FeedEngagementBanner();
          v112 = v111[5];
          v113 = a1 + v112;
          v114 = a2 + v112;
          v115 = sub_1BB86EDAC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
          *(_QWORD *)(a1 + v111[6]) = *(_QWORD *)(a2 + v111[6]);
          v116 = v111[7];
          v117 = a1 + v116;
          v118 = a2 + v116;
          *(_BYTE *)(v117 + 8) = *(_BYTE *)(v118 + 8);
          *(_QWORD *)v117 = *(_QWORD *)v118;
          *(_OWORD *)(a1 + v111[8]) = *(_OWORD *)(a2 + v111[8]);
LABEL_104:
          swift_storeEnumTagMultiPayload();
          break;
        case 0xFu:
          v119 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v119;
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          v120 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)(a1 + v120) = *(_QWORD *)(a2 + v120);
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          v121 = (char *)&loc_1BB15C5B4 + 4 * word_1BB8F0352[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        default:
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v203 = (int *)type metadata accessor for FormatItemNodeData();
      v204 = v203[5];
      v205 = (_OWORD *)(a1 + v204);
      v206 = (_OWORD *)(a2 + v204);
      v207 = v206[3];
      v205[2] = v206[2];
      v205[3] = v207;
      v208 = v206[1];
      *v205 = *v206;
      v205[1] = v208;
      *(_OWORD *)((char *)v205 + 105) = *(_OWORD *)((char *)v206 + 105);
      v209 = v206[6];
      v210 = v206[4];
      v205[5] = v206[5];
      v205[6] = v209;
      v205[4] = v210;
      *(_QWORD *)(a1 + v203[6]) = *(_QWORD *)(a2 + v203[6]);
      v211 = v203[7];
      v212 = a1 + v211;
      v213 = a2 + v211;
      v214 = sub_1BB86FE38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v212, v213, v214);
      v215 = v203[8];
      v216 = a1 + v215;
      v217 = a2 + v215;
      *(_OWORD *)v216 = *(_OWORD *)v217;
      *(_QWORD *)(v216 + 16) = *(_QWORD *)(v217 + 16);
      goto LABEL_112;
    case 6u:
      v16 = type metadata accessor for FormatAction();
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        goto LABEL_85;
      }
      v17 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v75 = type metadata accessor for FormatPurchaseLandingPageData();
        v76 = *(_QWORD *)(v75 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(a2, 1, v75))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v123 = *(int *)(v75 + 20);
          __dsta = (void *)(a1 + v123);
          v124 = (const void *)(a2 + v123);
          v125 = type metadata accessor for FormatPostPurchaseData();
          v126 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v125 - 8);
          if (v126[6](v124, 1, v125))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dsta, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
          }
          else
          {
            v236 = v126;
            v156 = sub_1BB86C67C();
            v231 = *(_QWORD *)(v156 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v231 + 48))(v124, 2, v156))
            {
              v157 = v236;
              v158 = v124;
              v159 = __dsta;
              memcpy(__dsta, v158, (size_t)v236[8]);
            }
            else
            {
              v159 = __dsta;
              (*(void (**)(void))(v231 + 32))();
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v231 + 56))(__dsta, 0, 2, v156);
              v157 = v236;
            }
            ((void (*)(void *, _QWORD, uint64_t, uint64_t))v157[7])(v159, 0, 1, v125);
          }
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(a1, 0, 1, v75);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_84;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v19 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v20 = (void *)(a1 + v19);
        v21 = (const void *)(a2 + v19);
        v22 = type metadata accessor for FormatPostPurchaseData();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v122 = sub_1BB86C67C();
          __dst = *(void (***)(void *, const void *, uint64_t))(v122 - 8);
          if (((unsigned int (*)(const void *, uint64_t, uint64_t))__dst[6])(v21, 2, v122))
          {
            memcpy(v20, v21, *(_QWORD *)(v23 + 64));
          }
          else
          {
            __dst[4](v20, v21, v122);
            ((void (*)(void *, _QWORD, uint64_t, uint64_t))__dst[7])(v20, 0, 2, v122);
          }
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_84:
      swift_storeEnumTagMultiPayload();
LABEL_85:
      v176 = type metadata accessor for FormatButtonNodeDataAction();
      *(_QWORD *)(a1 + *(int *)(v176 + 20)) = *(_QWORD *)(a2 + *(int *)(v176 + 20));
      v177 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
      v178 = (_OWORD *)(a1 + v177);
      v179 = (_OWORD *)(a2 + v177);
      v180 = *(_QWORD *)(v176 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v180 + 48))(v179, 1, v176))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
        memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
        goto LABEL_112;
      }
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        goto LABEL_111;
      }
      v182 = type metadata accessor for FormatPurchaseData(0);
      v183 = swift_getEnumCaseMultiPayload();
      if (v183 == 1)
      {
        v189 = type metadata accessor for FormatPurchaseLandingPageData();
        v190 = *(_QWORD *)(v189 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v190 + 48))(v179, 1, v189))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          *v178 = *v179;
          v196 = *(int *)(v189 + 20);
          v228 = v190;
          v233 = (char *)v178 + v196;
          v197 = (char *)v179 + v196;
          v198 = type metadata accessor for FormatPostPurchaseData();
          v225 = *(_QWORD **)(v198 - 8);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v225[6])(v197, 1, v198))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v233, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
            v200 = v228;
          }
          else
          {
            v223 = v198;
            v201 = sub_1BB86C67C();
            v221 = *(_QWORD *)(v201 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v197, 2, v201))
            {
              v202 = v225;
              memcpy(v233, v197, v225[8]);
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v233, v197, v201);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v221 + 56))(v233, 0, 2, v201);
              v202 = v225;
            }
            v200 = v228;
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v202[7])(v233, 0, 1, v223);
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v178, 0, 1, v189);
        }
      }
      else
      {
        if (v183)
        {
          memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
          goto LABEL_110;
        }
        *v178 = *v179;
        v184 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v237 = (char *)v178 + v184;
        v185 = (char *)v179 + v184;
        v186 = type metadata accessor for FormatPostPurchaseData();
        v187 = *(_QWORD *)(v186 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v187 + 48))(v185, 1, v186))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v237, v185, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
        }
        else
        {
          v232 = v187;
          v192 = sub_1BB86C67C();
          v227 = *(_QWORD *)(v192 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v227 + 48))(v185, 2, v192))
          {
            v193 = v232;
            v194 = v185;
            v195 = v237;
            memcpy(v237, v194, *(_QWORD *)(v232 + 64));
          }
          else
          {
            v195 = v237;
            (*(void (**)(void))(v227 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v227 + 56))(v237, 0, 2, v192);
            v193 = v232;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v195, 0, 1, v186);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_110:
      swift_storeEnumTagMultiPayload();
LABEL_111:
      *(_QWORD *)((char *)v178 + *(int *)(v176 + 20)) = *(_QWORD *)((char *)v179 + *(int *)(v176 + 20));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v178, 0, 1, v176);
LABEL_112:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xAu:
      v25 = type metadata accessor for FormatViewBackground(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(a2, 1, v25))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v62 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
          v63 = (void *)(a1 + v62);
          v64 = (const void *)(a2 + v62);
          v65 = sub_1BB86FBD4();
          v66 = *(_QWORD *)(v65 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
            memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v66 + 32))(v63, v64, v65);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
      }
      goto LABEL_112;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v28 = type metadata accessor for FormatMicaData();
      v29 = *(int *)(v28 + 20);
      v30 = (void *)(a1 + v29);
      v31 = (const void *)(a2 + v29);
      v32 = sub_1BB86FBD4();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v68 = *(int *)(v28 + 24);
      v69 = a1 + v68;
      v70 = a2 + v68;
      *(_DWORD *)v69 = *(_DWORD *)v70;
      *(_BYTE *)(v69 + 4) = *(_BYTE *)(v70 + 4);
      goto LABEL_112;
    case 0xDu:
      v35 = sub_1BB86C67C();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
      v37(a1, a2, v35);
      v38 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
      v39 = (void *)(a1 + v38);
      v40 = (const void *)(a2 + v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v38, 1, v35))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v37((uint64_t)v39, (uint64_t)v40, v35);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
      }
      v71 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
      v72 = (_OWORD *)(a1 + v71);
      v73 = (_OWORD *)(a2 + v71);
      v74 = v73[1];
      *v72 = *v73;
      v72[1] = v74;
      v72[2] = v73[2];
      goto LABEL_112;
    case 0xFu:
      v42 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(a1, a2, v42);
      v43 = (int *)type metadata accessor for SharedItem();
      *(_BYTE *)(a1 + v43[5]) = *(_BYTE *)(a2 + v43[5]);
      *(_QWORD *)(a1 + v43[6]) = *(_QWORD *)(a2 + v43[6]);
      v44 = v43[7];
      v45 = a1 + v44;
      v46 = a2 + v44;
      v47 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
      goto LABEL_112;
    case 0x11u:
      v48 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v48;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v49 = (int *)type metadata accessor for FormatVideoPlayerData();
      v50 = v49[9];
      v51 = a1 + v50;
      v52 = a2 + v50;
      v53 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      *(_QWORD *)(a1 + v49[10]) = *(_QWORD *)(a2 + v49[10]);
      *(_BYTE *)(a1 + v49[11]) = *(_BYTE *)(a2 + v49[11]);
      v54 = v49[12];
      v55 = a1 + v54;
      v56 = a2 + v54;
      v57 = *(_OWORD *)(v56 + 16);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *(_OWORD *)(v55 + 16) = v57;
      *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
      *(_QWORD *)(v55 + 48) = *(_QWORD *)(v56 + 48);
      *(_BYTE *)(a1 + v49[13]) = *(_BYTE *)(a2 + v49[13]);
      goto LABEL_112;
    case 0x14u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v58 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v59 = a1 + v58;
      v60 = a2 + v58;
      v61 = sub_1BB871E24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      goto LABEL_112;
    default:
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t static FormatMicaNodeArchive.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB15DC70();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v9[*(int *)(v10 + 48)];
  sub_1BB15DD0C(a1, (uint64_t)v9);
  sub_1BB15DD0C(a2, v11);
  sub_1BB0428DC((uint64_t)v9, (uint64_t)v6);
  LOBYTE(a2) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  sub_1BB15DE64(v11);
  sub_1BB15DE64((uint64_t)v6);
  return a2 & 1;
}

void sub_1BB15DC70()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BC0D0)
  {
    type metadata accessor for FormatMicaNodeArchive();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BC0D0);
  }
}

uint64_t type metadata accessor for FormatMicaNodeArchive()
{
  uint64_t result;

  result = qword_1ED39D0B0;
  if (!qword_1ED39D0B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB15DD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatMicaNodeArchive();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB15DD50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMicaNodeArchive.init(from:)(a1, a2);
}

uint64_t sub_1BB15DD64(_QWORD *a1)
{
  return FormatMicaNodeArchive.encode(to:)(a1);
}

uint64_t sub_1BB15DD78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB15DC70();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v9[*(int *)(v10 + 48)];
  sub_1BB15DD0C(a1, (uint64_t)v9);
  sub_1BB15DD0C(a2, v11);
  sub_1BB0428DC((uint64_t)v9, (uint64_t)v6);
  LOBYTE(a2) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  sub_1BB15DE64(v11);
  sub_1BB15DE64((uint64_t)v6);
  return a2 & 1;
}

uint64_t sub_1BB15DE64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatURL();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB15DEA0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB15DF38(&qword_1EF2BC0D8, (uint64_t)&protocol conformance descriptor for FormatMicaNodeArchive);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB15DED4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB15DF38(&qword_1ED39E6A8, (uint64_t)&protocol conformance descriptor for FormatMicaNodeArchive);
  a1[2] = sub_1BB15DF38(&qword_1ED39E6A0, (uint64_t)&protocol conformance descriptor for FormatMicaNodeArchive);
  result = sub_1BB15DF38((unint64_t *)&unk_1EF2BC0E0, (uint64_t)&protocol conformance descriptor for FormatMicaNodeArchive);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB15DF38(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatMicaNodeArchive();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatMicaNodeArchive(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for FormatURL();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = *(_QWORD *)a2;
      v10 = *(_QWORD *)(a2 + 8);
      v11 = *(_QWORD *)(a2 + 16);
      v12 = *(_BYTE *)(a2 + 24);
      sub_1BA690C00(v9, v10, v11, v12);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v10;
      *(_QWORD *)(a1 + 16) = v11;
      *(_BYTE *)(a1 + 24) = v12;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v7 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v7;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v13 = sub_1BB86C67C();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(a1 + *(int *)(v14 + 20)) = *(_QWORD *)(a2 + *(int *)(v14 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FormatMicaNodeArchive(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for FormatURL();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return sub_1BA5A7EF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for FormatAbsoluteURL();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatMicaNodeArchive(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for FormatURL();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_BYTE *)(a2 + 24);
    sub_1BA690C00(v6, v7, v8, v9);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)(a1 + *(int *)(v11 + 20)) = *(_QWORD *)(a2 + *(int *)(v11 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FormatMicaNodeArchive(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BB15DE64(a1);
    type metadata accessor for FormatURL();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v5 = *(_QWORD *)a2;
      v6 = *(_QWORD *)(a2 + 8);
      v7 = *(_QWORD *)(a2 + 16);
      v8 = *(_BYTE *)(a2 + 24);
      sub_1BA690C00(v5, v6, v7, v8);
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = v7;
      *(_BYTE *)(a1 + 24) = v8;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v9 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(a1 + *(int *)(v10 + 20)) = *(_QWORD *)(a2 + *(int *)(v10 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for FormatMicaNodeArchive(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for FormatURL();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = type metadata accessor for FormatAbsoluteURL();
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for FormatMicaNodeArchive(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BB15DE64((uint64_t)a1);
    v4 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v5 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMicaNodeArchive(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatURL();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatMicaNodeArchive(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for FormatURL();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_1BB15E564(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for FormatURL();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void sub_1BB15E5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void *v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  char v32;
  id v33;
  uint64_t v34;

  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v10 = Strong;
    v11 = a3 + 16;
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(unsigned __int8 *)(v12 + 24);
    if (v13 == 255
      || (v13 & 1) == 0
      && (v15 = *(double *)(v12 + 16),
          v16 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 104),
          swift_beginAccess(),
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v5),
          sub_1BB86C844(),
          v18 = v17,
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5),
          v15 >= -v18))
    {
      v14 = *(void **)(v12 + *(_QWORD *)(*(_QWORD *)v12 + 112));
    }
    else
    {
      v14 = (void *)sub_1BAA6A4CC(v10);
    }
    swift_beginAccess();
    v19 = MEMORY[0x1BCCE5D40](v11);
    if (!v19)
      goto LABEL_20;
    v20 = (void *)v19;
    v21 = v14;
    v22 = objc_msgSend(v20, sel_attributedText);
    v23 = v22;
    if (v22)
    {
      v24 = objc_msgSend(v22, sel_string);

      v25 = sub_1BB8729A0();
      v23 = v26;

    }
    else
    {
      v25 = 0;
    }
    v27 = objc_msgSend(v21, sel_string);
    v28 = sub_1BB8729A0();
    v30 = v29;

    if (!v23)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      v33 = v20;
      objc_msgSend(v33, sel_setAttributedText_, v21);

LABEL_20:
      swift_release();
      return;
    }
    if (v25 != v28 || v23 != v30)
    {
      v32 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v32 & 1) != 0)
      {

        swift_release();
        return;
      }
      goto LABEL_19;
    }

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1BB15E85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  int v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  uint64_t v21;

  v5 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v12 = Strong;
      v13 = *(_QWORD *)(a3 + 16);
      v14 = *(unsigned __int8 *)(v13 + 24);
      if (v14 == 255
        || (v14 & 1) == 0
        && (v15 = *(double *)(v13 + 16),
            v16 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 104),
            swift_beginAccess(),
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v5),
            sub_1BB86C844(),
            v18 = v17,
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5),
            v15 >= -v18))
      {
        v19 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 112));
      }
      else
      {
        v19 = (void *)sub_1BAA6A4CC(v12);
      }
      v20 = v19;
      sub_1BB873888();

      swift_release();
    }
    else
    {

    }
  }
}

uint64_t sub_1BB15E9EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED3BA8B8 != -1)
      swift_once();
    v6 = sub_1BB86C67C();
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v4, a1, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
    sub_1BB86FF70();
    sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB15EB60()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB15EB8C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(uint64_t *__return_ptr, uint64_t, uint64_t, void (*)(), _QWORD *);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char **v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  int v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[128];
  __int128 v70;
  uint64_t v71;
  uint64_t v72[2];
  char v73;

  v9 = v8;
  v64 = a7;
  v65 = a8;
  v62 = a6;
  v63 = a5;
  v67 = a4;
  v13 = sub_1BB86C8B0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB8736F0();
  swift_beginAccess();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 128));
  objc_msgSend(a3, sel_setNumberOfLines_, 0);
  v17 = *(_QWORD *)(a2 + 24);
  v18 = &a3[OBJC_IVAR____TtC8NewsFeed11FormatLabel_identifier];
  *(_QWORD *)v18 = *(_QWORD *)(a2 + 16);
  *((_QWORD *)v18 + 1) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 96);
  v66 = v19;
  if (v19)
    v20 = *(_BYTE *)(v19 + 552) & 1;
  else
    v20 = 0;
  objc_msgSend(a3, sel_setAccessibilityIgnoresInvertColors_, v20);
  v68 = a1;
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(unsigned __int8 *)(v21 + 24);
  if (v22 == 255)
  {
    v31 = *(id *)(v21 + *(_QWORD *)(*(_QWORD *)v21 + 112));
    sub_1BB873888();

LABEL_14:
    v42 = v68;
    goto LABEL_15;
  }
  v23 = *(_QWORD *)(v21 + 16);
  v24 = v8[4];
  if ((v22 & 1) != 0)
  {
    v61 = *(unsigned __int8 *)(v21 + 24);
    v32 = v23;
    sub_1BA749544(v23, 1);
    v33 = (id)sub_1BAA6A4CC(v24);
    sub_1BB873888();

    v34 = v9[2];
    v62 = v9;
    v59 = v9[3];
    v60 = v34;
    v35 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v36 = swift_allocObject();
    swift_weakInit();
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = v35;
    v37[3] = v36;
    v37[4] = v68;
    v38 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, void (*)(), _QWORD *))(v32 + 88);
    swift_retain();
    swift_retain();
    swift_retain();
    v38(v72, v60, v59, sub_1BB15F3E8, v37);
    swift_release();
    swift_release();
    swift_release();
    sub_1BA678A04((uint64_t)v72, (uint64_t)&v70);
    if (v71)
    {
      __swift_project_boxed_opaque_existential_1(&v70, v71);
      sub_1BB86DCF0();
      sub_1BA72F5F4(v32, v61);
      sub_1BA502AD0((uint64_t)v72, &qword_1ED3B0798, (void (*)(uint64_t))sub_1BA8979DC);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    }
    else
    {
      sub_1BA502AD0((uint64_t)v72, &qword_1ED3B0798, (void (*)(uint64_t))sub_1BA8979DC);
      sub_1BA72F5F4(v32, v61);
      sub_1BA502AD0((uint64_t)&v70, &qword_1ED3B0798, (void (*)(uint64_t))sub_1BA8979DC);
    }
    goto LABEL_14;
  }
  v25 = v9[4];
  v26 = *(double *)(v21 + 16);
  v27 = v21 + *(_QWORD *)(*(_QWORD *)v21 + 104);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v27, v13);
  sub_1BB86C844();
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (-v29 <= v26)
    v30 = *(_QWORD *)(v21 + *(_QWORD *)(*(_QWORD *)v21 + 112));
  else
    v30 = sub_1BAA6A4CC(v25);
  objc_msgSend(a3, sel_setAttributedText_, v30);
  v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v40 = swift_allocObject();
  swift_weakInit();
  v41 = (_QWORD *)swift_allocObject();
  v42 = v68;
  v41[2] = v40;
  v41[3] = v42;
  v41[4] = v39;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BA67BA5C(v26, v63, (uint64_t)sub_1BB15F42C, (uint64_t)v41);
  swift_release();
  swift_release();
  swift_release();
LABEL_15:
  v43 = v66;
  v44 = *(_QWORD *)(a2 + 144);
  v45 = *(unsigned __int8 *)(a2 + 152);
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setAccessibilityElementsHidden_, 0);
  if (v45 > 0xFD)
    goto LABEL_21;
  if ((v45 & 0x80) != 0)
  {
    if (!(v44 | v45 ^ 0x80))
      goto LABEL_21;
    v46 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    v46 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(a3, *v46, 1);
LABEL_21:
  v47 = *(_QWORD *)(a2 + 136);
  if (v43)
  {
    v48 = *(_QWORD *)(v43 + 192);
    swift_bridgeObjectRetain();
  }
  else
  {
    v48 = 0;
  }
  v49 = objc_msgSend(a3, sel_layer);
  v72[0] = 0;
  v72[1] = 0;
  v73 = -2;
  sub_1BA67832C(v47, v49, v64, v48, v72);

  swift_bridgeObjectRelease();
  if (v43)
  {
    sub_1BA7443B4(v43 + 64, (uint64_t)v69);
    sub_1BA7443B4((uint64_t)v69, (uint64_t)&v70);
    v50 = sub_1BAB05F98((uint64_t)&v70);
    v51 = v67;
    if (v50 != 1)
    {
      sub_1BA7439D4(&v70, (uint64_t)v72);
      v54 = (char *)&loc_1BB15F194 + dword_1BB15F364[sub_1BAB05900((uint64_t)v72)];
      __asm { BR              X10 }
    }
    sub_1BA7443B4((uint64_t)v69, (uint64_t)v72);
  }
  else
  {
    sub_1BB15F374((uint64_t)&v70);
    sub_1BA7443B4((uint64_t)&v70, (uint64_t)v72);
    v51 = v67;
  }
  v52 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  sub_1BA6A0C50(v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
  if (v43)
  {
    v53 = *(_QWORD *)(v43 + 512);
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = 0;
  }
  *(_QWORD *)&v70 = v53;
  sub_1BA6786EC(v47, a3, (uint64_t *)&v70, v51);
  swift_bridgeObjectRelease();
  v55 = *(_QWORD *)(v42 + 24);
  v56 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1BA678D44(v55, (uint64_t)sub_1BB15F3B8, v56);
  return swift_release_n();
}

double sub_1BB15F374(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0x1FFFFFFFELL;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_1BB15F394()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB15F3B8(uint64_t a1)
{
  return sub_1BB15E9EC(a1);
}

uint64_t sub_1BB15F3C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB15F3E8()
{
  uint64_t *v0;

  sub_1BB15E85C(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroy_8Tm_4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB15F42C()
{
  uint64_t *v0;

  sub_1BB15E5C0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BB15F43C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v16[2];

  v2 = v1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - v8;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource)
    || (sub_1BB86E71C(),
        v10 = objc_msgSend(v16[1], sel_linkMetadata),
        swift_unknownObjectRelease(),
        !v10))
  {
    v13 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
LABEL_8:
    sub_1BB15F634(*(void **)(v2 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model), *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model + 8), a1);
    return sub_1BA7F0A80((uint64_t)v9);
  }
  v11 = objc_msgSend(v10, sel_URL);

  if (v11)
  {
    sub_1BB86C5EC();

    v12 = sub_1BB86C67C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  sub_1BA7F0AD4((uint64_t)v6, (uint64_t)v9);
  sub_1BB86C67C();
  v14 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12) == 1)
    goto LABEL_8;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v9, v12);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v12);
}

void sub_1BB15F634(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v5;
  _QWORD *v6;
  id v7;
  void *v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;

  if ((a2 & 1) != 0)
  {
    v7 = a1;
    FCFeedDescriptor.feedURL.getter();
    v8 = a1;
    v9 = 1;
  }
  else
  {
    if ((objc_msgSend((id)swift_unknownObjectRetain(), sel_isPublic) & 1) != 0)
    {
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v5 = objc_msgSend(a1, sel_identifier, 0xD000000000000013, 0x80000001BB9720D0);
      sub_1BB8729A0();

      sub_1BB872AFC(v6);
      swift_bridgeObjectRelease();
      sub_1BB86C634();
      swift_bridgeObjectRelease();
      sub_1BB1608AC(a1, 0);
      return;
    }
    v10 = objc_msgSend(a1, sel_identifier);
    if (!v10)
    {
      sub_1BB8729A0();
      v10 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    v11 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_, v10);

    sub_1BB86C5EC();
    v8 = a1;
    v9 = 0;
  }
  sub_1BB1608AC(v8, v9);
  v12 = sub_1BB86C67C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 0, 1, v12);
}

uint64_t sub_1BB15F7F8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  char v9;
  id v10;
  id v12;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource)
    && (sub_1BB86E71C(),
        v2 = objc_msgSend(v12, sel_linkMetadata),
        swift_unknownObjectRelease(),
        v2)
    && (v3 = objc_msgSend(v2, sel_title), v2, v3))
  {
    v4 = sub_1BB8729A0();

  }
  else
  {
    v5 = v1 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model;
    v6 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model);
    if ((*(_BYTE *)(v5 + 8) & 1) != 0)
    {
      v7 = v6;
      v4 = FCFeedDescriptor.feedExternalTitle.getter();
      v8 = v6;
      v9 = 1;
    }
    else
    {
      v10 = objc_msgSend((id)swift_unknownObjectRetain(), sel_name);
      v4 = sub_1BB8729A0();

      v8 = v6;
      v9 = 0;
    }
    sub_1BB1608AC(v8, v9);
  }
  return v4;
}

id SharingTagURLActivityItemSource.__allocating_init(tag:linkPresentationSource:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;

  swift_getObjectType();
  return sub_1BB1601C0(a1, a2, v2);
}

id SharingTagURLActivityItemSource.init(tag:linkPresentationSource:)(uint64_t a1, uint64_t a2)
{
  char *v2;

  swift_getObjectType();
  return sub_1BB160234(a1, a2, v2);
}

id SharingTagURLActivityItemSource.__allocating_init(feedDescriptor:linkPresentationSource:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(_QWORD *)v6 = a1;
  v6[8] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SharingTagURLActivityItemSource.init(feedDescriptor:linkPresentationSource:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(_QWORD *)v6 = a1;
  v6[8] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SharingTagURLActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingTagURLActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingTagURLActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingTagURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v9[3];
  uint64_t v10;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB15F43C((uint64_t)v4);
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    result = (_OWORD *)sub_1BA7F0A80((uint64_t)v4);
    *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    v10 = v5;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 32))(boxed_opaque_existential_0, v4, v5);
    return sub_1BA76EAE0(v9, (_OWORD *)a1);
  }
  return result;
}

void SharingTagURLActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v40;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  if (a1)
  {
    v13 = sub_1BB8729A0();
    v15 = v14;
    if (v13 == sub_1BB8729A0() && v15 == v16)
    {
      v25 = a1;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v18 = sub_1BB874398();
      v19 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        sub_1BB15F43C((uint64_t)v9);
        v20 = sub_1BB86C67C();
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v20) != 1)
        {
          *(_QWORD *)(a2 + 24) = v20;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
          (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 32))(boxed_opaque_existential_0, v9, v20);

          return;
        }

        v22 = (uint64_t)v9;
        goto LABEL_11;
      }
    }
    type metadata accessor for SharingHTMLBuilder();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = 0;
    *(_QWORD *)(inited + 24) = 0xE000000000000000;
    swift_beginAccess();
    *(_QWORD *)(inited + 16) = 0;
    *(_QWORD *)(inited + 24) = 0xE000000000000000;
    swift_bridgeObjectRelease();
    v27 = sub_1BB15F7F8();
    v29 = v28;
    sub_1BB15F43C((uint64_t)v12);
    v30 = sub_1BB86C67C();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v30) == 1)
    {
      sub_1BA7F0A80((uint64_t)v12);
      v32 = 0;
      v33 = 0;
    }
    else
    {
      v32 = sub_1BB86C538();
      v33 = v34;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
    }
    v35 = sub_1BB1602A4(inited, v27, v29, v32, v33);
    v37 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    if (v37)
    {
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

      *(_QWORD *)a2 = v35;
      *(_QWORD *)(a2 + 8) = v37;
      return;
    }

    goto LABEL_20;
  }
  sub_1BB15F43C((uint64_t)v6);
  v23 = sub_1BB86C67C();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v6, 1, v23) != 1)
  {
    *(_QWORD *)(a2 + 24) = v23;
    v38 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
    (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 32))(v38, v6, v23);
    return;
  }
  v22 = (uint64_t)v6;
LABEL_11:
  sub_1BA7F0A80(v22);
LABEL_20:
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
}

LPLinkMetadata_optional __swiftcall SharingTagURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  uint64_t v1;
  objc_class *v2;
  Swift::Bool v3;
  objc_class *v4;
  id v5;
  LPLinkMetadata_optional result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource))
  {
    sub_1BB86E71C();
    v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

id sub_1BB1601C0(uint64_t a1, uint64_t a2, Class a3)
{
  char *v5;
  objc_class *ObjectType;
  char *v7;
  objc_super v9;

  v5 = (char *)objc_allocWithZone(a3);
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = &v5[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(_QWORD *)v7 = a1;
  v7[8] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = a2;
  v9.receiver = v5;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1BB160234(uint64_t a1, uint64_t a2, char *a3)
{
  objc_class *ObjectType;
  char *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v7 = &a3[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(_QWORD *)v7 = a1;
  v7[8] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = a2;
  v9.receiver = a3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1BB1602A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  _UNKNOWN **v20;
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  _UNKNOWN **v24;
  uint64_t ObjCClassFromMetadata;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN **v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _UNKNOWN **v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _UNKNOWN **v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  __int128 v53[2];
  _QWORD v54[3];
  uint64_t v55;
  _UNKNOWN **v56;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v51 - v12;
  swift_beginAccess();
  sub_1BB872AFC(v14);
  swift_endAccess();
  v55 = type metadata accessor for SharingHTMLBuilder();
  v56 = &off_1E7301510;
  v54[0] = a1;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  swift_retain();
  sub_1BB3355C8(a2, (uint64_t **)v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BA4CECCC(v53, (uint64_t)v54);
  v15 = v55;
  v16 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **))v16[2])(v53, v15, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BA4CECCC(v53, (uint64_t)v54);
  if (a5)
  {
    v17 = v55;
    v18 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v18[6])(v53, a4, a5, a4, a5, v17, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    sub_1BA4CECCC(v53, (uint64_t)v54);
  }
  v19 = v55;
  v20 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **))v20[2])(v53, v19, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BA4CECCC(v53, (uint64_t)v54);
  v21 = v55;
  v22 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **))v22[2])(v53, v21, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BA4CECCC(v53, (uint64_t)v54);
  v23 = v55;
  v24 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_bundleForClass_, ObjCClassFromMetadata);
  v28 = sub_1BB86C340();
  v30 = v29;

  ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v24[7])(v53, v28, v30, v23, v24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BA4CECCC(v53, (uint64_t)v54);
  v31 = v55;
  v32 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, _UNKNOWN **))v32[7])(v53, 32, 0xE100000000000000, v31, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BA4CECCC(v53, (uint64_t)v54);
  v33 = objc_msgSend((id)objc_opt_self(), sel_nss_MarketingPageURL);
  if (v33)
  {
    v34 = v33;
    v35 = (uint64_t)v52;
    sub_1BB86C5EC();

    v36 = sub_1BB86C67C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
  else
  {
    v36 = sub_1BB86C67C();
    v35 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v52, 1, 1, v36);
  }
  sub_1BA7F0AD4(v35, (uint64_t)v13);
  sub_1BB86C67C();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v13, 1, v36) == 1)
  {
    sub_1BA7F0A80((uint64_t)v13);
  }
  else
  {
    v38 = sub_1BB86C538();
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v36);
    v41 = v55;
    v42 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    v43 = objc_msgSend(v26, sel_bundleForClass_, ObjCClassFromMetadata);
    v44 = sub_1BB86C340();
    v46 = v45;

    ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v42[6])(v53, v44, v46, v38, v40, v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    sub_1BA4CECCC(v53, (uint64_t)v54);
  }
  v47 = v55;
  v48 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  v49 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v48[8])(v47, v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return v49;
}

uint64_t type metadata accessor for SharingTagURLActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingTagURLActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingTagURLActivityItemSource.__allocating_init(tag:linkPresentationSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SharingTagURLActivityItemSource.__allocating_init(feedDescriptor:linkPresentationSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t initializeBufferWithCopyOfBuffer for SharingTagURLActivityItemSource.Model(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BB160890(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1BB160890(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_unknownObjectRetain();
}

void destroy for SharingTagURLActivityItemSource.Model(uint64_t a1)
{
  sub_1BB1608AC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1BB1608AC(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_unknownObjectRelease();
}

uint64_t assignWithCopy for SharingTagURLActivityItemSource.Model(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BB160890(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BB1608AC(v5, v6);
  return a1;
}

uint64_t assignWithTake for SharingTagURLActivityItemSource.Model(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BB1608AC(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SharingTagURLActivityItemSource.Model()
{
  return &type metadata for SharingTagURLActivityItemSource.Model;
}

uint64_t destroy for FormatDerivedDataOptionScope(uint64_t a1)
{
  return sub_1BA865168(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed28FormatDerivedDataOptionScopeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA9ED4DC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataOptionScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA9ED4DC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA865168(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataOptionScope(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA865168(v4, v5, v6);
  return a1;
}

uint64_t sub_1BB160A4C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 5);
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionScope()
{
  return &type metadata for FormatDerivedDataOptionScope;
}

unint64_t sub_1BB160A78()
{
  unint64_t result;

  result = qword_1EF2BC100;
  if (!qword_1EF2BC100)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F06A0, &type metadata for FormatDerivedDataOptionScope);
    atomic_store(result, (unint64_t *)&qword_1EF2BC100);
  }
  return result;
}

void sub_1BB160ABC(uint64_t a1, uint64_t a2, char a3)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BB160B04()
{
  sub_1BB8745D8();
  sub_1BB872A90();
  return sub_1BB874608();
}

void sub_1BB160B6C()
{
  sub_1BB8745D8();
  JUMPOUT(0x1BB160B50);
}

uint64_t sub_1BB160B7C(uint64_t a1)
{
  return sub_1BB160F3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1BB160B98()
{
  uint64_t v0;

  sub_1BB160ABC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_1BB160BA4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB160BD8()
{
  sub_1BB8745D8();
  return sub_1BB872A90();
}

uint64_t sub_1BB160C20()
{
  return sub_1BB8745D8();
}

void sub_1BB160C3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB160C78()
{
  sub_1BB8745D8();
  sub_1BB872A90();
  return sub_1BB874608();
}

void sub_1BB160CE0()
{
  sub_1BB8745D8();
  JUMPOUT(0x1BB160CC4);
}

void sub_1BB160CF0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB160D34()
{
  _QWORD *v0;

  sub_1BB872AFC((_QWORD *)0x6F6C732F746F6F72);
  sub_1BB872AFC(v0);
  return 0x6F6C732F746F6F72;
}

void sub_1BB160F30()
{
  uint64_t v0;

  sub_1BB160CF0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1BB160F3C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_1BB160F58 + 4 * byte_1BB8F0638[a3]))();
}

uint64_t sub_1BB160F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_1BB874398();
}

uint64_t sub_1BB16103C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v2 = 0;
LABEL_38:
    swift_bridgeObjectRelease();
    return v2;
  }
  v2 = 0;
  v3 = 0;
  v4 = (unsigned __int8 *)(a1 + 48);
  v5 = 5;
  while (1)
  {
    v7 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    if (!(v8 >> 6))
    {
      if (v5 != 5 || v3 | v2)
        goto LABEL_42;
      swift_bridgeObjectRetain();
      v5 = 0;
      v2 = v7;
      v3 = v6;
      goto LABEL_5;
    }
    if (v8 >> 6 == 1)
    {
      if (v5 >= 2u)
      {
        if (v5 != 3)
          goto LABEL_42;
        v5 = 4;
      }
      else
      {
        v5 = 2;
      }
      goto LABEL_5;
    }
    if (!(v6 | v7) && v8 == 128)
      goto LABEL_5;
    v9 = v7 == 1 && v6 == 0;
    if (v9 && v8 == 128 || v7 == 2 && !v6 && v8 == 128 || v7 == 3 && !v6 && v8 == 128)
      goto LABEL_5;
    if (v7 != 4 || v6 || v8 != 128)
      break;
    if (v5 != 2)
    {
      v6 = 0;
      v7 = 4;
      goto LABEL_42;
    }
    v5 = 3;
LABEL_5:
    v4 += 24;
    if (!--v1)
      goto LABEL_38;
  }
  if (v7 == 5 && !v6 && v8 == 128)
    goto LABEL_5;
  if (v5 < 2u)
  {
    v5 = 1;
    goto LABEL_5;
  }
  v6 = 0;
  v7 = 6;
LABEL_42:
  type metadata accessor for FormatDerivedDataError();
  sub_1BA87DD80();
  swift_allocError();
  *(_QWORD *)v11 = v2;
  *(_QWORD *)(v11 + 8) = v3;
  *(_BYTE *)(v11 + 16) = v5;
  *(_QWORD *)(v11 + 24) = v7;
  *(_QWORD *)(v11 + 32) = v6;
  *(_BYTE *)(v11 + 40) = v8;
  swift_storeEnumTagMultiPayload();
  sub_1BA895B64(v7, v6, v8);
  sub_1BA895B64(v7, v6, v8);
  sub_1BA9ED4DC(v2, v3, v5);
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1BA865168(v2, v3, v5);
  sub_1BA895B84(v7, v6, v8);
  return v2;
}

uint64_t FormatMediaTimingFunctionName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1612B4 + 4 * byte_1BB8F06F0[*v0]))(0x7261656E696CLL, 0xE600000000000000);
}

uint64_t sub_1BB1612B4()
{
  return 0x6E4965736165;
}

uint64_t sub_1BB1612C4()
{
  return 0x74754F65736165;
}

uint64_t sub_1BB1612DC()
{
  return 0x61456E4965736165;
}

uint64_t sub_1BB161300()
{
  return 0x746C7561666564;
}

NewsFeed::FormatMediaTimingFunctionName_optional __swiftcall FormatMediaTimingFunctionName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatMediaTimingFunctionName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BB161370(char *a1)
{
  sub_1BB7F0CAC(*a1);
}

unint64_t sub_1BB161380()
{
  unint64_t result;

  result = qword_1EF2BC108;
  if (!qword_1EF2BC108)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionName, &type metadata for FormatMediaTimingFunctionName);
    atomic_store(result, (unint64_t *)&qword_1EF2BC108);
  }
  return result;
}

void sub_1BB1613C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB16140C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB161494()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB1614CC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB161540()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB161584()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatMediaTimingFunctionName_optional sub_1BB16160C(Swift::String *a1)
{
  return FormatMediaTimingFunctionName.init(rawValue:)(*a1);
}

uint64_t sub_1BB161618()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB161644 + 4 * byte_1BB8F0704[*v0]))();
}

void sub_1BB161644(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6E4965736165;
  a1[1] = v1;
}

void sub_1BB161658(_QWORD *a1@<X8>)
{
  *a1 = 0x74754F65736165;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1BB1616B0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB1616DC();
  result = sub_1BB161720();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB1616DC()
{
  unint64_t result;

  result = qword_1EF2BC110;
  if (!qword_1EF2BC110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionName, &type metadata for FormatMediaTimingFunctionName);
    atomic_store(result, (unint64_t *)&qword_1EF2BC110);
  }
  return result;
}

unint64_t sub_1BB161720()
{
  unint64_t result;

  result = qword_1EF2BC118;
  if (!qword_1EF2BC118)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionName, &type metadata for FormatMediaTimingFunctionName);
    atomic_store(result, (unint64_t *)&qword_1EF2BC118);
  }
  return result;
}

unint64_t sub_1BB161764(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE7ABAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB161788(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB1617BC();
  a1[2] = sub_1BB161800();
  result = sub_1BB161380();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1617BC()
{
  unint64_t result;

  result = qword_1EF2BC120;
  if (!qword_1EF2BC120)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionName, &type metadata for FormatMediaTimingFunctionName);
    atomic_store(result, (unint64_t *)&qword_1EF2BC120);
  }
  return result;
}

unint64_t sub_1BB161800()
{
  unint64_t result;

  result = qword_1EF2BC128;
  if (!qword_1EF2BC128)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionName, &type metadata for FormatMediaTimingFunctionName);
    atomic_store(result, (unint64_t *)&qword_1EF2BC128);
  }
  return result;
}

uint64_t sub_1BB161844()
{
  sub_1BB161720();
  return sub_1BB872D60();
}

uint64_t sub_1BB1618A0(_QWORD *a1)
{
  return FormatMediaTimingFunctionName.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatMediaTimingFunctionName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB161900 + 4 * byte_1BB8F070E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB161934 + 4 * byte_1BB8F0709[v4]))();
}

uint64_t sub_1BB161934(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB16193C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB161944);
  return result;
}

uint64_t sub_1BB161950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB161958);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB16195C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB161964(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMediaTimingFunctionName()
{
  return &type metadata for FormatMediaTimingFunctionName;
}

id sub_1BB161980()
{
  char *v0;

  return objc_msgSend((id)objc_opt_self(), sel_functionWithName_, **((_QWORD **)&unk_1E72E8DF8 + *v0));
}

void FormatWebEmbedNodeBinding.bind(binder:context:)()
{
  sub_1BB16221C();
}

uint64_t sub_1BB1619F0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8[3];

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v4 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)(v1 + 16);
    v5 = *(_QWORD *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    v7 = 6;
    sub_1BAC68C24(v5, v4, v3, 1);
    result = sub_1BB6B84D4(v8, &v7);
    if (!v2)
    {
      v6 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *sub_1BB161AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)();
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v50 = a1;
  v46 = a2;
  v48 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v48);
  v47 = (uint64_t *)((char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v43 - v5;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C67C();
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - v15;
  v17 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char **)((char *)&v43 - v22);
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    v23 = v10;
    v43 = v13;
    v25 = *(_QWORD *)(v2 + 8);
    v24 = *(_QWORD *)(v2 + 16);
    v26 = *(_QWORD *)v2;
    FormatOptionCollection.subscript.getter(*(_QWORD *)v2, v25, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1BA98DC18((uint64_t)v6);
      v23 = v47;
      *v47 = v26;
      v23[1] = v25;
      swift_storeEnumTagMultiPayload();
      sub_1BA689E84();
      swift_allocError();
      sub_1BAB53980((uint64_t)v23, v27);
      swift_bridgeObjectRetain();
      swift_willThrow();
      v28 = type metadata accessor for FormatLayoutError;
LABEL_8:
      sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))v28);
      return v23;
    }
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_retain();
    v35 = v49;
    sub_1BA711ECC();
    swift_release();
    if (v35)
    {
      v28 = type metadata accessor for FormatOption;
      goto LABEL_8;
    }
    sub_1BA7E0DB4(v51, v26, v25, v24, v50, (uint64_t)v16);
    swift_release();
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v37 = *(_QWORD *)(v50 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    v38 = *(_QWORD *)(v50 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    v39 = (uint64_t)v43;
    v40 = v44;
    v41 = v45;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v16, v45);
    type metadata accessor for FormatWebEmbedData();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v42 = v46;
    swift_retain();
    v23 = (_QWORD *)sub_1BB1540AC(v37, v38, v39, v42);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
  }
  else
  {
    v29 = v21;
    v30 = v49;
    sub_1BA758A00(*(_QWORD *)(v50 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v43 - v22);
    if (!v30)
    {
      v32 = *(_QWORD *)(v50 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
      v31 = *(_QWORD *)(v50 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
      sub_1BA5193C4((uint64_t)v23, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      type metadata accessor for FormatWebEmbedData();
      v23 = (_QWORD *)swift_allocObject();
      v23[2] = v32;
      v23[3] = v31;
      (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))((uint64_t)v23 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url, &v19[v29[8]], v45);
      *(_QWORD *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_indexFileURLPromise) = *(_QWORD *)&v19[v29[10]];
      *(_QWORD *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataURLPromise) = *(_QWORD *)&v19[v29[11]];
      sub_1BB044324((uint64_t)&v19[v29[13]], (uint64_t)v23 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization);
      v33 = (char *)v23 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem;
      sub_1BA5193C4((uint64_t)v19, (uint64_t)v23 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v34 = type metadata accessor for FeedItem(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
      *(_QWORD *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_config) = v46;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
  }
  return v23;
}

uint64_t sub_1BB161FBC(uint64_t a1)
{
  return sub_1BB1619F0(a1);
}

void sub_1BB161FD0()
{
  sub_1BB16221C();
}

BOOL _s8NewsFeed25FormatWebEmbedNodeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  if ((v5 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v10 = v2 == v6 && v3 == v7;
      if (v10 || (sub_1BB874398() & 1) != 0)
      {
        v11 = 1;
        sub_1BAC68C24(v6, v7, v8, 1);
        sub_1BAC68C24(v2, v3, v4, 1);
        sub_1BAC68C24(v6, v7, v8, 1);
        sub_1BAC68C24(v2, v3, v4, 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12 = sub_1BA8869D0(v4, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAED0DBC(v2, v3, v4, 1);
        sub_1BAED0DBC(v6, v7, v8, 1);
        sub_1BAED0DBC(v6, v7, v8, 1);
        sub_1BAED0DBC(v2, v3, v4, 1);
        if ((v12 & 1) != 0)
          return v11;
        return 0;
      }
      sub_1BAC68C24(v6, v7, v8, 1);
      sub_1BAC68C24(v2, v3, v4, 1);
      sub_1BAED0DBC(v2, v3, v4, 1);
      v13 = v6;
      v14 = v7;
      v15 = v8;
      v16 = 1;
LABEL_14:
      sub_1BAED0DBC(v13, v14, v15, v16);
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    sub_1BAC68C24(v6, v7, v8, v9);
    sub_1BAED0DBC(v2, v3, v4, v5);
    v13 = v6;
    v14 = v7;
    v15 = v8;
    v16 = v9;
    goto LABEL_14;
  }
  if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    goto LABEL_13;
  sub_1BAED0DBC(*(_QWORD *)a1, v3, v4, 0);
  sub_1BAED0DBC(v6, v7, v8, 0);
  return ((v6 ^ v2) & 1) == 0;
}

void sub_1BB16221C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];
  char v12;

  v2 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11[-1] - v4;
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v7 = *(_QWORD *)(v0 + 8);
    v6 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)v0;
    v11[0] = *(_QWORD *)v0;
    v11[1] = v7;
    v11[2] = v6;
    v12 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BB6B84D4(v11, &v12);
    if (!v2)
    {
      sub_1BB3757A0(v8, v7, v9, 1, (uint64_t)v5);
      sub_1BA98DC18((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1BB162328(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB16234C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB16234C()
{
  unint64_t result;

  result = qword_1EF2BC130;
  if (!qword_1EF2BC130)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeBinding, &type metadata for FormatWebEmbedNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2BC130);
  }
  return result;
}

unint64_t sub_1BB162390(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA55C398();
  a1[2] = sub_1BA5432F8();
  result = sub_1BB1623C4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1623C4()
{
  unint64_t result;

  result = qword_1EF2BC138;
  if (!qword_1EF2BC138)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeBinding, &type metadata for FormatWebEmbedNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2BC138);
  }
  return result;
}

uint64_t destroy for FormatWebEmbedNodeBinding(uint64_t a1)
{
  return sub_1BAED0DBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatWebEmbedNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BAC68C24(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatWebEmbedNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BAC68C24(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BAED0DBC(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatWebEmbedNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BAED0DBC(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatWebEmbedNodeBinding()
{
  return &type metadata for FormatWebEmbedNodeBinding;
}

id sub_1BB162540(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t inited;
  uint64_t (*v24)(unint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(unint64_t, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  _QWORD v45[2];
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  objc_class *ObjectType;
  uint64_t v51;
  uint64_t v52;
  objc_super v53;
  _QWORD *v54;

  v4 = v3;
  v52 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = sub_1BB86EB84();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C1CE8();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0930, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v47 = (uint64_t)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v45 - v18;
  v20 = OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_tableView;
  v21 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v49 = v4;
  *(_QWORD *)&v4[v20] = objc_msgSend(v21, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v54 = a1;
  swift_bridgeObjectRetain();
  sub_1BB163BD0(&v54);
  v48 = 0;
  swift_bridgeObjectRelease();
  v22 = v54;
  sub_1BA4B07F0(0, &qword_1EF2BC1A8, (uint64_t (*)(uint64_t))sub_1BB163C50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  *(_BYTE *)(inited + 32) = 0;
  v24 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 16);
  v51 = a3;
  v25 = a3;
  v26 = v24;
  v24((unint64_t)v19, v25, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v7);
  v27 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1BA6BF98C(v52, (uint64_t)v14);
  sub_1BA6BF98C((uint64_t)v19, v27);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v28((uint64_t)v14, 1, v7) == 1)
  {
    sub_1BA6BF694((uint64_t)v19);
    if (v28(v27, 1, v7) == 1)
    {
      sub_1BA6BF694((uint64_t)v14);
LABEL_9:
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3CFB30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v38 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
      v32 = v51;
      v30 = v26(v31 + v38, v51, v7);
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  v45[1] = inited + 32;
  v29 = v47;
  sub_1BA6BF98C((uint64_t)v14, v47);
  if (v28(v27, 1, v7) == 1)
  {
    sub_1BA6BF694((uint64_t)v19);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v29, v7);
LABEL_6:
    v30 = sub_1BB163CCC((uint64_t)v14);
    goto LABEL_7;
  }
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  v45[0] = v22;
  v34 = v46;
  v33(v46, v27, v7);
  sub_1BA66184C(&qword_1ED39C378, MEMORY[0x1E0DB4DE8]);
  v35 = sub_1BB872958();
  v36 = *(void (**)(char *, uint64_t))(v9 + 8);
  v37 = v34;
  v22 = (_QWORD *)v45[0];
  v36(v37, v7);
  sub_1BA6BF694((uint64_t)v19);
  v36((char *)v29, v7);
  v30 = sub_1BA6BF694((uint64_t)v14);
  if ((v35 & 1) != 0)
    goto LABEL_9;
LABEL_7:
  v31 = MEMORY[0x1E0DEE9D8];
  v32 = v51;
LABEL_10:
  *(_QWORD *)(inited + 40) = v31;
  *(_BYTE *)(inited + 48) = 1;
  MEMORY[0x1E0C80A78](v30);
  v45[-2] = v32;
  swift_retain();
  sub_1BAC9C5D4((uint64_t (*)(_QWORD))sub_1BB163D08, (uint64_t)&v45[-4], (uint64_t)v22);
  *(_QWORD *)(inited + 56) = v39;
  *(_BYTE *)(inited + 64) = 2;
  MEMORY[0x1E0C80A78](v39);
  v45[-2] = v32;
  *(_QWORD *)(inited + 72) = sub_1BB162A68((uint64_t (*)(char *))sub_1BB163D34, (uint64_t)&v45[-4], (uint64_t)v22);
  v40 = sub_1BA8F50C8(inited);
  swift_setDeallocating();
  sub_1BB163C50();
  swift_arrayDestroy();
  v41 = v49;
  *(_QWORD *)&v49[OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_sections] = v40;
  v42 = v52;
  sub_1BA6BF98C(v52, (uint64_t)&v41[OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_selectedRemoteVersion]);

  v53.receiver = v41;
  v53.super_class = ObjectType;
  v43 = objc_msgSendSuper2(&v53, sel_initWithNibName_bundle_, 0, 0);
  sub_1BA6BF694(v42);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v32, v7);
  return v43;
}

uint64_t sub_1BB162A68(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v30)(char *);
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v30 = a1;
  v31 = a2;
  v5 = sub_1BB86EB84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v24 - v10;
  v33 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v26 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v13 = a3 + v26;
    v14 = *(_QWORD *)(v6 + 72);
    v24[1] = a3;
    v25 = v14;
    v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    v15 = MEMORY[0x1E0DEE9D8];
    v27 = v6;
    v28 = v5;
    while (1)
    {
      v29(v11, v13, v5, v9);
      v16 = v30(v11);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        swift_bridgeObjectRelease();
        swift_release();
        return v15;
      }
      if ((v16 & 1) == 0)
        break;
      v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v17(v32, v11, v5);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v33 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BA790A6C(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v33;
      }
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BA790A6C(v19 > 1, v20 + 1, 1);
        v15 = v33;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      v21 = v25;
      v22 = v15 + v26 + v20 * v25;
      v5 = v28;
      v17((char *)v22, v32, v28);
      v33 = v15;
      v13 += v21;
      --v12;
      v6 = v27;
      if (!v12)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    swift_bridgeObjectRelease();
    return v33;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

void sub_1BB162D40()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  objc_super v21;

  v1 = v0;
  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_tableView];
  objc_msgSend(v6, sel_setDataSource_, v1);
  objc_msgSend(v6, sel_setAlwaysBounceVertical_, 1);
  v7 = objc_msgSend(v4, sel_secondaryLabelColor);
  objc_msgSend(v6, sel_setTintColor_, v7);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setTableFooterView_, v8);

  sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
  sub_1BB873234();
  v9 = objc_msgSend(v1, sel_navigationItem);
  v10 = (void *)sub_1BB872970();
  objc_msgSend(v9, sel_setTitle_, v10);

  v11 = objc_msgSend(v1, sel_navigationItem);
  sub_1BA65E330();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB8856E0;
  v13 = (void *)sub_1BB872970();
  v14 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v13);

  if (!v14)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v15 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v16 = v1;
  v17 = objc_msgSend(v15, sel_initWithImage_style_target_action_, v14, 0, v16, sel_doDismiss);

  *(_QWORD *)(v12 + 32) = v17;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v18 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setRightBarButtonItems_, v18);

  v19 = objc_msgSend(v16, sel_view);
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, sel_addSubview_, v6);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t *sub_1BB1631CC@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

uint64_t sub_1BB16325C()
{
  return type metadata accessor for DebugFormatUploadDiffVersionsViewController();
}

uint64_t type metadata accessor for DebugFormatUploadDiffVersionsViewController()
{
  uint64_t result;

  result = qword_1EF2BC180;
  if (!qword_1EF2BC180)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB1632A0()
{
  unint64_t v0;

  sub_1BA4B07F0(319, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BB1633A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t result;
  _QWORD *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v50 = a1;
  v3 = sub_1BB86CBE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C1CE8();
  v51 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v49 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - v13;
  v15 = sub_1BB86EB84();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v48 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v47 - v19;
  MEMORY[0x1E0C80A78](v21);
  v52 = (char *)&v47 - v22;
  v23 = sub_1BB86CBD4();
  if (v23 <= 2)
  {
    v24 = *(_QWORD *)(v53 + OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_sections);
    if (*(_QWORD *)(v24 + 16))
    {
      v25 = sub_1BA7C25B0(v23);
      if ((v26 & 1) != 0)
      {
        v6 = *(char **)(*(_QWORD *)(v24 + 56) + 8 * v25);
        swift_bridgeObjectRetain();
        v27 = sub_1BB86CBB0();
        if ((v27 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v27 < *((_QWORD *)v6 + 2))
        {
          v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
          v28(v20, &v6[((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v27], v15);
          swift_bridgeObjectRelease();
          v29 = v52;
          v47 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
          v47(v52, v20, v15);
          sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
          v30 = (void *)sub_1BB87321C();
          v31 = objc_msgSend(v30, sel_textLabel);
          if (v31)
          {
            v32 = v31;
            sub_1BB86EB24();
            v33 = (void *)sub_1BB872970();
            swift_bridgeObjectRelease();
            objc_msgSend(v32, sel_setText_, v33);

            v29 = v52;
          }
          v34 = objc_msgSend(v30, sel_textLabel);
          if (v34)
          {
            v35 = v34;
            v36 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
            objc_msgSend(v35, sel_setFont_, v36);

          }
          v37 = v53 + OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_selectedRemoteVersion;
          v28(v14, v29, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
          v38 = (uint64_t)&v9[*(int *)(v51 + 48)];
          sub_1BA6BF98C(v37, (uint64_t)v9);
          sub_1BA6BF98C((uint64_t)v14, v38);
          v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
          if (v39((uint64_t)v9, 1, v15) == 1)
          {
            sub_1BA6BF694((uint64_t)v14);
            if (v39(v38, 1, v15) == 1)
            {
              sub_1BA6BF694((uint64_t)v9);
LABEL_18:
              v41 = 3;
              goto LABEL_19;
            }
          }
          else
          {
            v40 = v49;
            sub_1BA6BF98C((uint64_t)v9, v49);
            if (v39(v38, 1, v15) != 1)
            {
              v42 = v48;
              v47(v48, (char *)v38, v15);
              sub_1BA66184C(&qword_1ED39C378, MEMORY[0x1E0DB4DE8]);
              v43 = sub_1BB872958();
              v44 = *(void (**)(char *, uint64_t))(v16 + 8);
              v44(v42, v15);
              sub_1BA6BF694((uint64_t)v14);
              v44((char *)v40, v15);
              sub_1BA6BF694((uint64_t)v9);
              if ((v43 & 1) != 0)
                goto LABEL_18;
LABEL_16:
              v41 = 0;
LABEL_19:
              objc_msgSend(v30, sel_setAccessoryType_, v41);
              objc_msgSend(v30, sel_setSelectionStyle_, 0);
              (*(void (**)(char *, uint64_t))(v16 + 8))(v29, v15);
              return (uint64_t)v30;
            }
            sub_1BA6BF694((uint64_t)v14);
            (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v40, v15);
          }
          sub_1BB163CCC((uint64_t)v9);
          goto LABEL_16;
        }
        __break(1u);
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v55 = 0;
  v56 = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v55 = 0xD000000000000013;
  v56 = 0x80000001BB97BCF0;
  v54 = sub_1BB86CBD4();
  sub_1BB87420C();
  sub_1BB872AFC(v46);
  swift_bridgeObjectRelease();
  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatUploadDiffVersionsViewController.Section(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB163B08 + 4 * byte_1BB8F09A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB163B3C + 4 * byte_1BB8F09A0[v4]))();
}

uint64_t sub_1BB163B3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB163B44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB163B4CLL);
  return result;
}

uint64_t sub_1BB163B58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB163B60);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB163B64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB163B6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadDiffVersionsViewController.Section()
{
  return &type metadata for DebugFormatUploadDiffVersionsViewController.Section;
}

unint64_t sub_1BB163B8C()
{
  unint64_t result;

  result = qword_1EF2BC198;
  if (!qword_1EF2BC198)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F0A6C, &type metadata for DebugFormatUploadDiffVersionsViewController.Section);
    atomic_store(result, (unint64_t *)&qword_1EF2BC198);
  }
  return result;
}

void sub_1BB163BD0(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BA792CD8(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BB163DA0(v5);
  *a1 = v3;
}

void sub_1BB163C50()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BC1B0)
  {
    sub_1BA4B07F0(255, &qword_1EF2AA038, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BC1B0);
  }
}

uint64_t sub_1BB163CCC(uint64_t a1)
{
  uint64_t v2;

  sub_1BA6C1CE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB163D08()
{
  return sub_1BB86EB30() & 1;
}

uint64_t sub_1BB163D34()
{
  sub_1BB86EB84();
  sub_1BA66184C((unint64_t *)&qword_1ED3B0910, MEMORY[0x1E0DB4DE0]);
  return sub_1BB87291C() & 1;
}

void sub_1BB163DA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  char *v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  void (*v146)(char *, char *, uint64_t);
  uint64_t v147;
  char *v148;
  char *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;

  v2 = v1;
  v4 = sub_1BB86EB84();
  v155 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v141 = (char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v153 = (char *)&v135 - v7;
  MEMORY[0x1E0C80A78](v8);
  v148 = (char *)&v135 - v9;
  MEMORY[0x1E0C80A78](v10);
  v149 = (char *)&v135 - v11;
  v12 = a1[1];
  v13 = sub_1BB8741F4();
  if (v13 >= v12)
  {
    if (v12 < 0)
      goto LABEL_140;
    if (v12)
      sub_1BB1647FC(0, v12, 1, a1);
    return;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_148;
  v152 = v4;
  v138 = v13;
  if (v12 < 2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    v143 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80));
    if (v12 != 1)
    {
      v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v20 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_105:
      v137 = v18;
      if (v21 >= 2)
      {
        v127 = (char *)*a1;
        do
        {
          v128 = v21 - 2;
          if (v21 < 2)
            goto LABEL_135;
          if (!v127)
            goto LABEL_147;
          v129 = v20;
          v130 = v20 + 32;
          v131 = *(_QWORD *)&v20[16 * v128 + 32];
          v132 = *(_QWORD *)&v20[16 * v21 + 24];
          sub_1BB164A6C((unint64_t)&v127[*(_QWORD *)(v155 + 72) * v131], (unint64_t)&v127[*(_QWORD *)(v155 + 72) * *(_QWORD *)&v130[16 * v21 - 16]], (unint64_t)&v127[*(_QWORD *)(v155 + 72) * v132], v143);
          if (v2)
            break;
          if (v132 < v131)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v129 = sub_1BACAB464((uint64_t)v129);
          if (v128 >= *((_QWORD *)v129 + 2))
            goto LABEL_137;
          v133 = &v129[16 * v128 + 32];
          *(_QWORD *)v133 = v131;
          *((_QWORD *)v133 + 1) = v132;
          v134 = *((_QWORD *)v129 + 2);
          if (v21 > v134)
            goto LABEL_138;
          v20 = v129;
          memmove(&v129[16 * v21 + 16], &v129[16 * v21 + 32], 16 * (v134 - v21));
          *((_QWORD *)v129 + 2) = v134 - 1;
          v21 = v134 - 1;
        }
        while (v134 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v137 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v137 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_1BB872E74();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v155 + 80);
    v137 = v16;
    v143 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v20 = (char *)MEMORY[0x1E0DEE9D8];
  v150 = a1;
  while (1)
  {
    v22 = v19;
    v23 = v19 + 1;
    v142 = v19;
    if (v19 + 1 >= v12)
    {
      v35 = v19 + 1;
    }
    else
    {
      v24 = (char *)*a1;
      v25 = v155;
      v26 = *(_QWORD *)(v155 + 72);
      v144 = v24;
      v147 = v12;
      v27 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
      v28 = v152;
      v27(v149, &v24[v26 * v23], v152);
      v29 = &v24[v26 * v22];
      v30 = v148;
      v27(v148, v29, v28);
      v31 = sub_1BA66184C((unint64_t *)&qword_1ED3B0910, MEMORY[0x1E0DB4DE0]);
      v32 = v149;
      v151 = v31;
      LODWORD(v146) = sub_1BB872910();
      v33 = *(void (**)(char *, uint64_t))(v25 + 8);
      v34 = v30;
      v22 = v142;
      v33(v34, v28);
      v33(v32, v28);
      v35 = v22 + 2;
      v154 = v26;
      if (v22 + 2 >= v147)
      {
        v12 = v147;
        v43 = v26;
      }
      else
      {
        v139 = v20;
        v136 = v2;
        v145 = v26 * v23;
        v36 = v144;
        v37 = v26 * v35;
        while (1)
        {
          v38 = v35;
          v39 = v149;
          v40 = v152;
          v27(v149, &v36[v37], v152);
          v41 = v148;
          v27(v148, &v36[v145], v40);
          v42 = sub_1BB872910();
          v33(v41, v40);
          v33(v39, v40);
          if (((v146 ^ v42) & 1) != 0)
            break;
          v35 = v38 + 1;
          v43 = v154;
          v36 += v154;
          if (v147 == v38 + 1)
          {
            v12 = v147;
            v35 = v147;
            v2 = v136;
            v20 = v139;
            v22 = v142;
            goto LABEL_25;
          }
        }
        v20 = v139;
        v35 = v38;
        v2 = v136;
        v22 = v142;
        v12 = v147;
        v43 = v154;
      }
LABEL_25:
      a1 = v150;
      if ((v146 & 1) != 0)
      {
        if (v35 < v22)
          goto LABEL_141;
        if (v22 < v35)
        {
          v139 = v20;
          v44 = 0;
          v45 = v43 * (v35 - 1);
          v46 = v35 * v43;
          v47 = v22;
          v48 = v22 * v43;
          v151 = v35;
          do
          {
            if (v47 != v35 + v44 - 1)
            {
              if (!v144)
                goto LABEL_146;
              v50 = v2;
              v51 = &v144[v48];
              v52 = &v144[v45];
              v53 = v144;
              v146 = *(void (**)(char *, char *, uint64_t))(v155 + 32);
              v146(v141, &v144[v48], v152);
              if (v48 < v45 || v51 >= &v53[v46])
              {
                v49 = v152;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v49 = v152;
                if (v48 != v45)
                  swift_arrayInitWithTakeBackToFront();
              }
              v146(v52, v141, v49);
              v2 = v50;
              a1 = v150;
              v35 = v151;
              v43 = v154;
            }
            ++v47;
            --v44;
            v45 -= v43;
            v46 -= v43;
            v48 += v43;
          }
          while (v47 < v35 + v44);
          v20 = v139;
          v22 = v142;
          v12 = v147;
        }
      }
    }
    v54 = v152;
    if (v35 >= v12)
      goto LABEL_57;
    if (__OFSUB__(v35, v22))
      goto LABEL_139;
    if (v35 - v22 >= v138)
      goto LABEL_57;
    if (__OFADD__(v22, v138))
      goto LABEL_142;
    v55 = v22 + v138 >= v12 ? v12 : v22 + v138;
    if (v55 < v22)
      break;
    if (v35 != v55)
    {
      v139 = v20;
      v140 = v55;
      v136 = v2;
      v56 = *(_QWORD *)(v155 + 72);
      v144 = *(char **)(v155 + 16);
      v145 = v56;
      v57 = v56 * (v35 - 1);
      v58 = v35 * v56;
      do
      {
        v60 = 0;
        v151 = v35;
        v146 = (void (*)(char *, char *, uint64_t))v58;
        v147 = v57;
        while (1)
        {
          v154 = v22;
          v61 = *a1;
          v62 = (char *)(v58 + v60 + *a1);
          v63 = v149;
          v64 = (void (*)(char *, uint64_t, uint64_t))v144;
          ((void (*)(char *, char *, uint64_t))v144)(v149, v62, v54);
          v65 = v57 + v60 + v61;
          v66 = a1;
          v67 = v148;
          v64(v148, v65, v54);
          sub_1BA66184C((unint64_t *)&qword_1ED3B0910, MEMORY[0x1E0DB4DE0]);
          LOBYTE(v61) = sub_1BB872910();
          v68 = *(void (**)(char *, uint64_t))(v155 + 8);
          v68(v67, v54);
          v68(v63, v54);
          if ((v61 & 1) == 0)
            break;
          v69 = *v66;
          if (!*v66)
            goto LABEL_144;
          v58 = (uint64_t)v146;
          v57 = v147;
          v70 = (char *)(v69 + v147 + v60);
          v71 = *(void (**)(char *, char *, uint64_t))(v155 + 32);
          v72 = v152;
          v71(v153, (char *)v146 + v69 + v60, v152);
          v54 = v72;
          swift_arrayInitWithTakeFrontToBack();
          v71(v70, v153, v72);
          v60 -= v145;
          v22 = v154 + 1;
          a1 = v150;
          v59 = v151;
          if (v151 == v154 + 1)
            goto LABEL_50;
        }
        v59 = v151;
        v54 = v152;
        a1 = v66;
        v58 = (uint64_t)v146;
        v57 = v147;
LABEL_50:
        v35 = v59 + 1;
        v57 += v145;
        v58 += v145;
        v22 = v142;
      }
      while (v35 != v140);
      v35 = v140;
      v2 = v136;
      v20 = v139;
    }
LABEL_57:
    if (v35 < v22)
      goto LABEL_134;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v151 = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v20 = sub_1BACAA368(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
    v75 = *((_QWORD *)v20 + 2);
    v74 = *((_QWORD *)v20 + 3);
    v21 = v75 + 1;
    if (v75 >= v74 >> 1)
      v20 = sub_1BACAA368((char *)(v74 > 1), v75 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v21;
    v76 = v20 + 32;
    v77 = &v20[16 * v75 + 32];
    v78 = v151;
    *(_QWORD *)v77 = v22;
    *((_QWORD *)v77 + 1) = v78;
    if (v75)
    {
      while (1)
      {
        v79 = v21 - 1;
        if (v21 >= 4)
        {
          v84 = &v76[16 * v21];
          v85 = *((_QWORD *)v84 - 8);
          v86 = *((_QWORD *)v84 - 7);
          v90 = __OFSUB__(v86, v85);
          v87 = v86 - v85;
          if (v90)
            goto LABEL_123;
          v89 = *((_QWORD *)v84 - 6);
          v88 = *((_QWORD *)v84 - 5);
          v90 = __OFSUB__(v88, v89);
          v82 = v88 - v89;
          v83 = v90;
          if (v90)
            goto LABEL_124;
          v91 = v21 - 2;
          v92 = &v76[16 * v21 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v90 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v90)
            goto LABEL_126;
          v90 = __OFADD__(v82, v95);
          v96 = v82 + v95;
          if (v90)
            goto LABEL_129;
          if (v96 >= v87)
          {
            v114 = &v76[16 * v79];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v90 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v90)
              goto LABEL_133;
            v107 = v82 < v117;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            v108 = *((_QWORD *)v20 + 4);
            v109 = *((_QWORD *)v20 + 5);
            v90 = __OFSUB__(v109, v108);
            v101 = v109 - v108;
            v102 = v90;
            goto LABEL_88;
          }
          v81 = *((_QWORD *)v20 + 4);
          v80 = *((_QWORD *)v20 + 5);
          v90 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          v83 = v90;
        }
        if ((v83 & 1) != 0)
          goto LABEL_125;
        v91 = v21 - 2;
        v97 = &v76[16 * v21 - 32];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v100 = __OFSUB__(v98, v99);
        v101 = v98 - v99;
        v102 = v100;
        if (v100)
          goto LABEL_128;
        v103 = &v76[16 * v79];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v90 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v90)
          goto LABEL_131;
        if (__OFADD__(v101, v106))
          goto LABEL_132;
        if (v101 + v106 >= v82)
        {
          v107 = v82 < v106;
LABEL_94:
          if (v107)
            v79 = v91;
          goto LABEL_96;
        }
LABEL_88:
        if ((v102 & 1) != 0)
          goto LABEL_127;
        v110 = &v76[16 * v79];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v90 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v90)
          goto LABEL_130;
        if (v113 < v101)
          goto LABEL_15;
LABEL_96:
        v118 = v79 - 1;
        if (v79 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v119 = (char *)*a1;
        if (!*a1)
          goto LABEL_145;
        v120 = v20;
        v121 = &v76[16 * v118];
        v122 = *(_QWORD *)v121;
        v123 = &v76[16 * v79];
        v124 = *((_QWORD *)v123 + 1);
        sub_1BB164A6C((unint64_t)&v119[*(_QWORD *)(v155 + 72) * *(_QWORD *)v121], (unint64_t)&v119[*(_QWORD *)(v155 + 72) * *(_QWORD *)v123], (unint64_t)&v119[*(_QWORD *)(v155 + 72) * v124], v143);
        if (v2)
          goto LABEL_116;
        if (v124 < v122)
          goto LABEL_120;
        if (v79 > *((_QWORD *)v120 + 2))
          goto LABEL_121;
        v125 = v120;
        *(_QWORD *)v121 = v122;
        *(_QWORD *)&v76[16 * v118 + 8] = v124;
        v126 = *((_QWORD *)v120 + 2);
        if (v79 >= v126)
          goto LABEL_122;
        v20 = v125;
        v21 = v126 - 1;
        memmove(&v76[16 * v79], v123 + 16, 16 * (v126 - 1 - v79));
        *((_QWORD *)v20 + 2) = v126 - 1;
        a1 = v150;
        if (v126 <= 2)
          goto LABEL_15;
      }
    }
    v21 = 1;
LABEL_15:
    v12 = a1[1];
    v19 = v151;
    if (v151 >= v12)
    {
      v18 = v137;
      goto LABEL_105;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1BB873EA0();
  __break(1u);
}

void sub_1BB1647FC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a1;
  v7 = sub_1BB86EB84();
  v36 = *(_QWORD **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)&v26 - v10;
  v12.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v31 = (char *)&v26 - v13;
  v34 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v14 = v36[9];
    v29 = (void (*)(char *, uint64_t, uint64_t))v36[2];
    v30 = a4;
    v38 = v14 * (v34 - 1);
    v33 = v14;
    v37 = v14 * v34;
LABEL_5:
    v15 = 0;
    v16 = v28;
    while (1)
    {
      v17 = *a4;
      v18 = v31;
      v19 = v29;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v29)(v31, v37 + v15 + *a4, v7, v12);
      v20 = v32;
      v19(v32, v38 + v15 + v17, v7);
      sub_1BA66184C((unint64_t *)&qword_1ED3B0910, MEMORY[0x1E0DB4DE0]);
      LOBYTE(v17) = sub_1BB872910();
      v21 = (void (*)(char *, uint64_t))v36[1];
      v22 = v20;
      a4 = v30;
      v21(v22, v7);
      v21(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v38 += v33;
        v37 += v33;
        if (++v34 == v27)
          return;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = (char *)(v23 + v38 + v15);
      v25 = (void (*)(char *, uint64_t, uint64_t))v36[4];
      v25(v35, v23 + v37 + v15, v7);
      swift_arrayInitWithTakeFrontToBack();
      v25(v24, (uint64_t)v35, v7);
      v15 -= v33;
      if (v34 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BB164A6C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, unint64_t, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v8 = sub_1BB86EB84();
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v50 = (char *)&v45 - v11;
  v52 = v12;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_64;
  v15 = (uint64_t)(a2 - a1) / v13;
  v55 = a1;
  v54 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v30 = a4 + v18;
      v53 = a4 + v18;
      v55 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v32 = -v13;
        v46 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
        v47 = a1;
        v48 = a4;
        v49 = -v13;
        do
        {
          v33 = a3 + v32;
          v34 = v50;
          v35 = v46;
          v46(v50, v30 + v32, v8);
          v36 = a2 + v32;
          v37 = a3;
          v38 = v51;
          v35(v51, v36, v8);
          sub_1BA66184C((unint64_t *)&qword_1ED3B0910, MEMORY[0x1E0DB4DE0]);
          v39 = sub_1BB872910();
          v40 = *(void (**)(char *, uint64_t))(v52 + 8);
          v40(v38, v8);
          v40(v34, v8);
          if ((v39 & 1) != 0)
          {
            if (v37 < a2 || v33 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v41 = v47;
              v42 = v48;
            }
            else
            {
              v41 = v47;
              v42 = v48;
              if (v37 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v32 = v49;
            v55 += v49;
          }
          else
          {
            v43 = v53;
            v53 += v49;
            if (v37 < v43 || v33 >= v43)
            {
              swift_arrayInitWithTakeFrontToBack();
              v36 = a2;
              v41 = v47;
              v42 = v48;
            }
            else
            {
              v41 = v47;
              v42 = v48;
              if (v37 != v43)
                swift_arrayInitWithTakeBackToFront();
              v36 = a2;
            }
            v32 = v49;
          }
          v30 = v53;
          if (v53 <= v42)
            break;
          a2 = v36;
          a3 = v33;
        }
        while (v36 > v41);
      }
      goto LABEL_61;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v49 = a4 + v17;
    v53 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
      v21 = v50;
      do
      {
        v22 = a4;
        v23 = a3;
        v20(v21, a2, v8);
        v24 = v51;
        v20(v51, v22, v8);
        sub_1BA66184C((unint64_t *)&qword_1ED3B0910, MEMORY[0x1E0DB4DE0]);
        v25 = sub_1BB872910();
        v26 = *(void (**)(char *, uint64_t))(v52 + 8);
        v26(v24, v8);
        v26(v21, v8);
        v27 = v55;
        if ((v25 & 1) != 0)
        {
          v28 = a2 + v13;
          if (v55 < a2 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v55 == a2)
              v27 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v29 = v54 + v13;
          if (v55 < v54 || v55 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v55 != v54)
              swift_arrayInitWithTakeBackToFront();
          }
          v54 = v29;
          v28 = a2;
        }
        v55 = v27 + v13;
        a4 = v54;
        if (v54 >= v49)
          break;
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_61:
    sub_1BACAAB64(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_65:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB164F88(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  _QWORD *v6;

  if (a1 > 2)
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB87420C();
    sub_1BB872AFC(v6);
    swift_bridgeObjectRelease();
    result = sub_1BB873EAC();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_sections);
    if (*(_QWORD *)(v2 + 16) && (v3 = sub_1BA7C25B0(a1), (v4 & 1) != 0))
      return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v3) + 16);
    else
      return 0;
  }
  return result;
}

unint64_t sub_1BB165084(uint64_t a1)
{
  unint64_t result;
  unsigned int v3;
  _QWORD *v4;

  result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 2)
    {
      v3 = 1702323534;
      return v3 | 0x6556207200000000;
    }
    if (a1 == 1)
    {
      v3 = 1701080143;
      return v3 | 0x6556207200000000;
    }
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB87420C();
    sub_1BB872AFC(v4);
    swift_bridgeObjectRelease();
    result = sub_1BB873EAC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB1651A4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t result;
  _QWORD *v7;

  v2 = 0xD000000000000063;
  if (a1 == 2 || a1 == 1)
    return v2;
  if (!a1)
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_sections);
    if (!*(_QWORD *)(v3 + 16))
      return 0;
    v4 = sub_1BA7C25B0(0);
    if ((v5 & 1) == 0)
      return 0;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4) + 16))
      return 0;
    return 0xD00000000000006ELL;
  }
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB87420C();
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

_QWORD *sub_1BB165304(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t started;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v19;
  _BYTE *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    v11 = *(int *)(a3 + 36);
    __dst = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    v13 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v14 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(__dst, v12, v14);
        started = type metadata accessor for StartTime(0);
        __dst[*(int *)(started + 20)] = v12[*(int *)(started + 20)];
        goto LABEL_7;
      case 8u:
      case 9u:
        v17 = sub_1BB86C8B0();
        v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        v18(__dst, v12, v17);
        v19 = type metadata accessor for StartTimeEndTime(0);
        v18(&__dst[*(int *)(v19 + 20)], &v12[*(int *)(v19 + 20)], v17);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    *((_BYTE *)v4 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t sub_1BB165720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      v6 = sub_1BB86C8B0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
      break;
    case 8:
    case 9:
      v7 = sub_1BB86C8B0();
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v9(v4, v7);
      v8 = v4 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
      result = ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v7);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1BB16581C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t started;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  v9 = *(int *)(a3 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  v12 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      v13 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      started = type metadata accessor for StartTime(0);
      v10[*(int *)(started + 20)] = v11[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      v15 = sub_1BB86C8B0();
      v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v10, v11, v15);
      v17 = type metadata accessor for StartTimeEndTime(0);
      v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      break;
  }
  *((_BYTE *)a1 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  return a1;
}

_QWORD *sub_1BB165BE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t started;
  uint64_t v12;
  void (*v13)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 36);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BA4A2E80((uint64_t)a1 + v6, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    v9 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v10 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
        started = type metadata accessor for StartTime(0);
        v7[*(int *)(started + 20)] = v8[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        v12 = sub_1BB86C8B0();
        v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        v13(v7, v8, v12);
        v14 = type metadata accessor for StartTimeEndTime(0);
        v13(&v7[*(int *)(v14 + 20)], &v8[*(int *)(v14 + 20)], v12);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  *((_BYTE *)a1 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  return a1;
}

_OWORD *sub_1BB165FF8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t started;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      v12 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      started = type metadata accessor for StartTime(0);
      v9[*(int *)(started + 20)] = v10[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      v14 = sub_1BB86C8B0();
      v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
      v15(v9, v10, v14);
      v16 = type metadata accessor for StartTimeEndTime(0);
      v15(&v9[*(int *)(v16 + 20)], &v10[*(int *)(v16 + 20)], v14);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  *((_BYTE *)a1 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  return a1;
}

_QWORD *sub_1BB166374(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t started;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    sub_1BA4A2E80((uint64_t)a1 + v9, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    v12 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v13 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
        started = type metadata accessor for StartTime(0);
        v10[*(int *)(started + 20)] = v11[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        v15 = sub_1BB86C8B0();
        v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v16(v10, v11, v15);
        v17 = type metadata accessor for StartTimeEndTime(0);
        v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
  }
  *((_BYTE *)a1 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1BB166748()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB166754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SportsDataVisualizationResponseMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1BB1667D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1667DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SportsDataVisualizationResponseMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataVisualizationResponseScoreItem()
{
  uint64_t result;

  result = qword_1ED3AA888;
  if (!qword_1ED3AA888)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB16688C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SportsDataVisualizationResponseEventStatus(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB166924@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v29 = a2;
  v32 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1E0C80A78](v32);
  v33 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA61B370();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB167510(0, &qword_1ED3AB590, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *((_BYTE *)v13 + *(int *)(v14 + 40)) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB167444();
  v15 = v35;
  sub_1BB87468C();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v35 = v8;
  v28 = v11;
  v17 = (uint64_t)a1;
  LOBYTE(v36) = 0;
  *v13 = sub_1BB874098();
  v13[1] = v18;
  LOBYTE(v36) = 1;
  v13[2] = sub_1BB87402C();
  v13[3] = v19;
  LOBYTE(v36) = 2;
  v13[4] = sub_1BB87402C();
  v13[5] = v20;
  LOBYTE(v36) = 3;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v37 = 3;
    sub_1BA4A2870((unint64_t *)&qword_1ED3BBEB8, (uint64_t (*)(uint64_t))sub_1BA61B370, MEMORY[0x1E0DB3610]);
    v21 = v31;
    sub_1BB8740D4();
    v22 = v7;
    v27 = 0;
    v23 = v34;
    v24 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v21);
  }
  else
  {
    v27 = 0;
    v24 = MEMORY[0x1E0DEE9D8];
    v22 = v7;
  }
  v13[6] = v24;
  LOBYTE(v36) = 5;
  sub_1BA4A2870(&qword_1ED3AA800, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseMetadata, (uint64_t)&unk_1BB958180);
  v25 = (uint64_t)v33;
  sub_1BB8740D4();
  sub_1BB167488(v25, (uint64_t)v13 + *(int *)(v28 + 36));
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3AB098, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v37 = 4;
  sub_1BB028B6C((unint64_t *)&unk_1ED3AB0A0, (uint64_t (*)(void))sub_1BA920B6C, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v22);
  v13[7] = v36;
  sub_1BB1674CC((uint64_t)v13, v29);
  __swift_destroy_boxed_opaque_existential_1(v17);
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseScoreItem);
}

uint64_t sub_1BB166FAC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(void);
  uint64_t (*v11)(void);
  uint64_t v13;
  char v14;
  __int128 v15;

  v3 = v1;
  sub_1BB167510(0, &qword_1EF2BC1B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB167444();
  sub_1BB8746C8();
  LOBYTE(v15) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v15 = *(_OWORD *)(v3 + 16);
    v14 = 1;
    v10 = MEMORY[0x1E0DEB940];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BB028B08((unint64_t *)&qword_1ED39BDB0, (unint64_t *)&qword_1ED3B9200, (uint64_t (*)(_QWORD, uint64_t))v10, MEMORY[0x1E0DEE988]);
    sub_1BB8741AC();
    v15 = *(_OWORD *)(v3 + 32);
    v14 = 2;
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 48);
    v14 = 3;
    v11 = MEMORY[0x1E0DEAEC8];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB028B08((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, uint64_t))v11, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 56);
    v14 = 4;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3AB098, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB028B6C(&qword_1EF2AA9C8, (uint64_t (*)(void))sub_1BA920C70, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    type metadata accessor for SportsDataVisualizationResponseScoreItem();
    LOBYTE(v15) = 5;
    type metadata accessor for SportsDataVisualizationResponseMetadata();
    sub_1BA4A2870(&qword_1EF2BC1C0, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseMetadata, (uint64_t)&unk_1BB958158);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB1672BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1672F8 + 4 * byte_1BB8F0ADC[*v0]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BB1672F8()
{
  return 0x6449746E657665;
}

uint64_t sub_1BB167310()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BB167330()
{
  return 0x736449676174;
}

uint64_t sub_1BB167344()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB167368()
{
  return 0x74654D746E657665;
}

uint64_t sub_1BB16738C()
{
  return 0x72756F5361746164;
}

uint64_t sub_1BB1673A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB167710(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB1673CC()
{
  sub_1BB167444();
  return sub_1BB874710();
}

uint64_t sub_1BB1673F4()
{
  sub_1BB167444();
  return sub_1BB87471C();
}

uint64_t sub_1BB16741C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB166924(a1, a2);
}

uint64_t sub_1BB167430(_QWORD *a1)
{
  return sub_1BB166FAC(a1);
}

unint64_t sub_1BB167444()
{
  unint64_t result;

  result = qword_1ED3AA870;
  if (!qword_1ED3AA870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F0C7C, &type metadata for SportsDataVisualizationResponseScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA870);
  }
  return result;
}

uint64_t sub_1BB167488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1674CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB167510(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB167444();
    v7 = a3(a1, &type metadata for SportsDataVisualizationResponseScoreItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseScoreItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB1675B8 + 4 * byte_1BB8F0AE8[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB1675EC + 4 * byte_1BB8F0AE3[v4]))();
}

uint64_t sub_1BB1675EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1675F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1675FCLL);
  return result;
}

uint64_t sub_1BB167608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB167610);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB167614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB16761C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseScoreItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseScoreItem.CodingKeys;
}

unint64_t sub_1BB16763C()
{
  unint64_t result;

  result = qword_1EF2BC1C8;
  if (!qword_1EF2BC1C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F0C54, &type metadata for SportsDataVisualizationResponseScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC1C8);
  }
  return result;
}

unint64_t sub_1BB167684()
{
  unint64_t result;

  result = qword_1ED3AA880;
  if (!qword_1ED3AA880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F0BC4, &type metadata for SportsDataVisualizationResponseScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA880);
  }
  return result;
}

unint64_t sub_1BB1676CC()
{
  unint64_t result;

  result = qword_1ED3AA878;
  if (!qword_1ED3AA878)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F0BEC, &type metadata for SportsDataVisualizationResponseScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA878);
  }
  return result;
}

uint64_t sub_1BB167710(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6E6143636D75 && a2 == 0xEE0064496C616369;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615465756761656CLL && a2 == 0xEB00000000644967 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736449676174 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53617461446C7275 && a2 == 0xEE0073656372756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74654D746E657665 && a2 == 0xED00006174616461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x72756F5361746164 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

NewsFeed::PuzzleTeaserInteractionType_optional __swiftcall PuzzleTeaserInteractionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::PuzzleTeaserInteractionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PuzzleTeaserInteractionType.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 1752461154;
  if (*v0)
    return v1;
  else
    return 0x6E4572657474656CLL;
}

uint64_t sub_1BB167B34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F201C(*a1, *a2);
}

unint64_t sub_1BB167B44()
{
  unint64_t result;

  result = qword_1EF2BC1D0;
  if (!qword_1EF2BC1D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleTeaserInteractionType, &type metadata for PuzzleTeaserInteractionType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC1D0);
  }
  return result;
}

uint64_t sub_1BB167B88()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB167C2C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB167CAC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzleTeaserInteractionType_optional sub_1BB167D4C(Swift::String *a1)
{
  return PuzzleTeaserInteractionType.init(rawValue:)(*a1);
}

void sub_1BB167D58(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB00000000797274;
  v4 = 0x80000001BB95E570;
  v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    v5 = 1752461154;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E4572657474656CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB167DBC()
{
  sub_1BB167F30();
  return sub_1BB872D60();
}

uint64_t sub_1BB167E18()
{
  sub_1BB167F30();
  return sub_1BB872D0C();
}

uint64_t storeEnumTagSinglePayload for PuzzleTeaserInteractionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB167EB0 + 4 * byte_1BB8F0CD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB167EE4 + 4 * byte_1BB8F0CD0[v4]))();
}

uint64_t sub_1BB167EE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB167EEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB167EF4);
  return result;
}

uint64_t sub_1BB167F00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB167F08);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB167F0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB167F14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleTeaserInteractionType()
{
  return &type metadata for PuzzleTeaserInteractionType;
}

unint64_t sub_1BB167F30()
{
  unint64_t result;

  result = qword_1EF2BC1D8;
  if (!qword_1EF2BC1D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleTeaserInteractionType, &type metadata for PuzzleTeaserInteractionType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC1D8);
  }
  return result;
}

uint64_t static CoverIssueViewLayout.makeLayoutForMyMagazines(context:factories:options:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1BB86DA38();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *a3;
  v14 = a1;
  v15 = a2;
  v16 = v10;
  (*(void (**)(_BYTE *, _QWORD, double))(v11 + 104))(v9, *MEMORY[0x1E0DB6208], v7);
  sub_1BAA46860(0, (unint64_t *)&qword_1ED39C2F0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  return sub_1BB86DB34();
}

uint64_t sub_1BB168048(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, double);
  uint64_t v32;
  double v33;
  double v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;

  v41 = a4;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v39 - v10;
  v12 = a2[40];
  v13 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v12);
  v14 = (*(double (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  if (qword_1ED39E210 != -1)
    swift_once();
  objc_msgSend((id)qword_1ED476400, sel_size);
  v17 = v14 * (v15 / v16);
  v18 = a2[40];
  v19 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 48))(v18, v19);
  v20 = a2[40];
  v21 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
  v22 = a1;
  v42 = a1;
  v23 = *MEMORY[0x1E0DB6410];
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v24 = v40(v11, v23, v8);
  MEMORY[0x1E0C80A78](v24);
  *(&v39 - 8) = a3;
  *(&v39 - 7) = (uint64_t)a2;
  *((_OWORD *)&v39 - 3) = xmmword_1BB8F0E00;
  v35 = v17;
  v36 = *(double **)&v14;
  v25 = MEMORY[0x1E0DB5DD0];
  sub_1BAA46860(0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  v27 = v26;
  v28 = sub_1BAA468DC(&qword_1ED39C2B0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))v25, MEMORY[0x1E0DB5DD8]);
  v37 = v28;
  sub_1BB86D4BC();
  v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v11, v8);
  v42 = v22;
  v30 = *MEMORY[0x1E0DB63C0];
  v31 = (void (*)(char *, uint64_t, uint64_t, double))v40;
  v40(v11, v30, v8);
  v37 = v27;
  v38 = v28;
  v35 = COERCE_DOUBLE(sub_1BB16A760);
  v36 = 0;
  sub_1BB86D540();
  v32 = ((uint64_t (*)(char *, uint64_t))v29)(v11, v8);
  v42 = v22;
  v33 = MEMORY[0x1E0C80A78](v32);
  v31(v11, v30, v8, v33);
  v37 = v27;
  v38 = v28;
  v35 = COERCE_DOUBLE(sub_1BB16AF28);
  v36 = &v35;
  sub_1BB86D540();
  return ((uint64_t (*)(char *, uint64_t))v29)(v11, v8);
}

uint64_t sub_1BB1683C8(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t *);
  uint64_t (*v26)(uint64_t, _QWORD *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, uint64_t);
  void (*v32)(uint64_t *);
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  char *v50;
  uint64_t v51;
  void (*v52)(uint64_t *, uint64_t);
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70;
  void (*v71)(uint64_t *);
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  void (*v75)(uint64_t *, uint64_t);
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, _QWORD, uint64_t);
  uint64_t *v84;
  void (*v85)(uint64_t *);
  uint64_t v86;
  uint64_t result;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  void (*KeyPath)(uint64_t, _QWORD, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t *);
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t *, uint64_t);
  uint64_t v105;
  unsigned int v106;
  void *v107;
  void *v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  char v118;
  void *v119;
  uint64_t v120;
  _BYTE v121[40];
  char v122;
  uint64_t v123;
  void *v124;
  _OWORD v125[6];
  __int128 v126;
  _OWORD v127[3];

  v99 = a4;
  v91 = a2;
  v107 = a1;
  sub_1BB16AF40();
  v100 = v10;
  v95 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v94 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v97 = (uint64_t *)((char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v96 = (uint64_t *)((char *)&v89 - v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v89 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v89 - v22);
  *(_QWORD *)&v125[0] = a1;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0x4024000000000000;
  *v23 = v24;
  v25 = *(void (**)(uint64_t *))(v14 + 104);
  v106 = *MEMORY[0x1E0DB63F0];
  v25(v23);
  v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v28 = v27;
  v29 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v26, MEMORY[0x1E0DB5A18]);
  v103 = v28;
  v30 = v29;
  sub_1BB86D4EC();
  v31 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  v98 = v23;
  v32 = v25;
  v104 = v31;
  v31(v23, v13);
  v124 = v107;
  KeyPath = (void (*)(uint64_t, _QWORD, uint64_t))swift_getKeyPath();
  v33 = *MEMORY[0x1E0DB6410];
  v93 = (uint64_t)v20;
  v105 = v13;
  ((void (*)(char *, uint64_t, uint64_t))v25)(v20, v33, v13);
  v123 = v91[3];
  v34 = *(_OWORD *)(a3 + 88);
  v35 = *(_OWORD *)(a3 + 120);
  v126 = *(_OWORD *)(a3 + 104);
  v127[0] = v35;
  *(_OWORD *)((char *)v127 + 9) = *(_OWORD *)(a3 + 129);
  v36 = *(_OWORD *)(a3 + 24);
  v37 = *(_OWORD *)(a3 + 56);
  v125[2] = *(_OWORD *)(a3 + 40);
  v125[3] = v37;
  v125[4] = *(_OWORD *)(a3 + 72);
  v125[5] = v34;
  v125[0] = *(_OWORD *)(a3 + 8);
  v125[1] = v36;
  v38 = *(void **)&v125[0];
  if ((_QWORD)v34 == 1 || (v39 = (void *)*((_QWORD *)&v126 + 1)) == 0)
  {
    swift_retain();
    sub_1BA8D1F08((uint64_t)v125);
    FCIssue.issueCoverModel.getter((uint64_t)&v119);
    sub_1BA8D1FE4((uint64_t)v125);
    v38 = v119;
    v40 = v120;
    v46 = *(_OWORD *)v121;
    v43 = *(_OWORD *)&v121[16];
    v45 = *(_QWORD *)&v121[32];
    v44 = v122;
  }
  else
  {
    v40 = *(_QWORD *)&v127[0];
    v119 = *(void **)&v125[0];
    v120 = *(_QWORD *)&v127[0];
    *(_QWORD *)v121 = *((_QWORD *)&v126 + 1);
    memset(&v121[8], 0, 32);
    v122 = 0;
    swift_retain();
    v41 = v39;
    v42 = v38;
    v43 = 0uLL;
    v44 = 0;
    v45 = 0;
    v46 = (unint64_t)v39;
  }
  v113 = v38;
  v114 = v40;
  v115 = v46;
  v116 = v43;
  v117 = v45;
  v118 = v44;
  v102 = a3;
  v91 = (_QWORD *)(a3 + 296);
  v48 = *(_QWORD *)(a3 + 320);
  v47 = *(_QWORD *)(a3 + 328);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 296), v48);
  v49 = (*(double (**)(uint64_t, uint64_t))(v47 + 64))(v48, v47);
  LOBYTE(v108) = 0;
  v109 = 0x4010000000000000;
  v110 = v49;
  v111 = -1;
  v112 = 0x3FE0000000000000;
  sub_1BA4CDF6C(0, &qword_1ED39C280, (uint64_t (*)(void))sub_1BA8D93BC, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BA915CEC();
  sub_1BB16B024();
  sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
  v50 = v94;
  sub_1BB86D684();
  v51 = v93;
  sub_1BB86D4D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v100);
  v52 = v104;
  v53 = v105;
  v104((uint64_t *)v51, v105);
  v119 = v107;
  v54 = v107;
  v55 = swift_allocObject();
  *(double *)(v55 + 16) = a5;
  v56 = v98;
  *v98 = v55;
  v101 = v32;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v32)(v56, v106, v53);
  sub_1BB86D4EC();
  v52(v56, v53);
  v119 = v54;
  sub_1BA71C838();
  v58 = v57;
  v95 = v57;
  v93 = swift_allocBox();
  v60 = v59;
  v61 = (uint64_t *)(v59 + *(int *)(v58 + 48));
  LODWORD(v94) = *MEMORY[0x1E0DB5F98];
  v62 = v94;
  v63 = sub_1BB86D894();
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 104);
  v90 = v63;
  v64(v60, v62, v63);
  KeyPath = v64;
  v65 = swift_allocObject();
  v100 = v30;
  v66 = *(_QWORD *)(v102 + 320);
  v67 = *(_QWORD *)(v102 + 328);
  __swift_project_boxed_opaque_existential_1(v91, v66);
  *(double *)(v65 + 16) = (*(double (**)(uint64_t, uint64_t))(v67 + 24))(v66, v67);
  *v61 = v65;
  v68 = v56;
  v64((uint64_t)v61, *MEMORY[0x1E0DB5FA0], v63);
  v69 = v96;
  *v96 = v93;
  LODWORD(v93) = *MEMORY[0x1E0DB63D0];
  v70 = v105;
  v71 = v101;
  v72 = ((uint64_t (*)(uint64_t *))v101)(v69);
  MEMORY[0x1E0C80A78](v72);
  sub_1BB86D498();
  v73 = v68;
  v74 = v69;
  v75 = v104;
  v104(v74, v70);
  v76 = v107;
  v113 = v107;
  v77 = swift_allocObject();
  *(double *)(v77 + 16) = a6;
  *v68 = v77;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v71)(v68, v106, v70);
  sub_1BB86D4EC();
  v75(v68, v70);
  v113 = v76;
  v78 = v95;
  v79 = swift_allocBox();
  v81 = v80 + *(int *)(v78 + 48);
  v82 = v90;
  v83 = KeyPath;
  KeyPath(v80, v94, v90);
  v83(v81, *MEMORY[0x1E0DB5FB8], v82);
  v84 = v97;
  *v97 = v79;
  v85 = v101;
  v86 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v101)(v84, v93, v70);
  MEMORY[0x1E0C80A78](v86);
  sub_1BB86D498();
  result = ((uint64_t (*)(uint64_t *, uint64_t))v75)(v84, v70);
  if ((v99 & 2) != 0)
  {
    v108 = v107;
    v88 = swift_allocObject();
    *(_QWORD *)(v88 + 16) = 0x4038000000000000;
    *v73 = v88;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v85)(v73, v106, v70);
    sub_1BB86D4EC();
    return ((uint64_t (*)(uint64_t *, uint64_t))v75)(v73, v70);
  }
  return result;
}

uint64_t sub_1BB168C2C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v23 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v22 - v6);
  v25 = a1;
  sub_1BA71C838();
  v9 = v8;
  v22 = swift_allocBox();
  v11 = v10;
  v12 = (uint64_t *)(v10 + *(int *)(v9 + 48));
  v13 = *MEMORY[0x1E0DB5F98];
  v14 = sub_1BB86D894();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
  v15(v11, v13, v14);
  v16 = swift_allocObject();
  v17 = a2[40];
  v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v17);
  *(double *)(v16 + 16) = (*(double (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
  *v12 = v16;
  v15((uint64_t)v12, *MEMORY[0x1E0DB5FA0], v14);
  v19 = v23;
  *v7 = v22;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB63D0], v19);
  v24 = a2;
  v20 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v20, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v19);
}

uint64_t sub_1BB168E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(uint64_t, _QWORD *);
  id v19;
  _QWORD v20[2];

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v20 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 336);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    v18 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v18, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v19 = v17;
    sub_1BB86D4E0();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB16907C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (**v9)(uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  void (*v23)(void);
  uint64_t (*v24)(void (**)(uint64_t *, uint64_t));
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t (*v29)(uint64_t, _QWORD *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD **v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  unsigned int *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t *, _QWORD, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t);
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(void);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t *, _QWORD, uint64_t);
  uint64_t v76;
  uint64_t (*v77)(uint64_t, _QWORD *);
  void (*v78)(uint64_t *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  void (*v91)(uint64_t *, _QWORD, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t *, _QWORD, uint64_t);
  uint64_t v95;
  uint64_t (*v96)(uint64_t, _QWORD *);
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(void);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t *, _QWORD, uint64_t);
  uint64_t v114;
  uint64_t (*v115)(uint64_t, _QWORD *);
  void (*v116)(uint64_t *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t *, _QWORD, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(uint64_t, _QWORD *);
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t (*v135)(void (**)(uint64_t *, uint64_t));
  uint64_t v136;
  unsigned int v137;
  uint64_t v138;
  void (*v139)(void);
  _QWORD *v140;
  void (*v141)(uint64_t *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD v146[7];
  char v147;
  uint64_t v148;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v144 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (void (**)(uint64_t *, uint64_t))((char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v133 - v11);
  v13 = *(unsigned __int8 *)(a2 + 32);
  v143 = v7;
  if (!v13)
  {
    v39 = *(_QWORD *)(a2 + 56);
    sub_1BA915B28(a2, (uint64_t)v146);
    v142 = a1;
    if ((v39 & 1) != 0)
    {
      v60 = v147;
      sub_1BA915C30((uint64_t)v146);
      if ((v60 & 8) == 0)
      {
        v148 = a1;
        sub_1BA71C838();
        v62 = v61;
        v63 = swift_allocBox();
        v65 = v64;
        v140 = (uint64_t *)((char *)v64 + *(int *)(v62 + 48));
        v141 = (void (*)(uint64_t *, uint64_t))v63;
        v66 = swift_allocObject();
        *(double *)(v66 + 16) = a3;
        *v65 = v66;
        v67 = *MEMORY[0x1E0DB5FA0];
        v68 = sub_1BB86D894();
        v69 = *(void (**)(void))(*(_QWORD *)(v68 - 8) + 104);
        ((void (*)(uint64_t *, uint64_t, uint64_t))v69)(v65, v67, v68);
        v70 = swift_allocObject();
        v71 = *(_QWORD *)(a2 + 320);
        v72 = *(_QWORD *)(a2 + 328);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 296), v71);
        *(double *)(v70 + 16) = (*(double (**)(uint64_t, uint64_t))(v72 + 8))(v71, v72);
        *v140 = v70;
        v69();
        *v12 = (uint64_t)v141;
        v74 = v143;
        v73 = v144;
        v75 = *(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v143 + 104);
        v76 = v75(v12, *MEMORY[0x1E0DB63D0], v144);
        v141 = (void (*)(uint64_t *, uint64_t))&v133;
        MEMORY[0x1E0C80A78](v76);
        *(&v133 - 4) = (uint64_t *)a2;
        *((double *)&v133 - 3) = a3;
        v77 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
        sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
        v132 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v77, MEMORY[0x1E0DB5A18]);
        sub_1BB86D4BC();
        v78 = *(void (**)(uint64_t *, uint64_t))(v74 + 8);
        v78(v12, v73);
        v148 = v142;
        v79 = swift_allocObject();
        *(_QWORD *)(v79 + 16) = 0x4010000000000000;
        *v12 = v79;
        v75(v12, *MEMORY[0x1E0DB63E8], v73);
        sub_1BB86D4EC();
        v78(v12, v73);
        a1 = v142;
      }
    }
    else
    {
      sub_1BA915C30((uint64_t)v146);
    }
    v146[0] = a1;
    sub_1BA71C838();
    v81 = v80;
    v82 = swift_allocBox();
    v84 = v83;
    v85 = (char *)v83 + *(int *)(v81 + 48);
    v86 = sub_1BB86D894();
    v87 = swift_allocBox();
    v89 = v88;
    v90 = swift_allocObject();
    *(double *)(v90 + 16) = a3;
    *v89 = v90;
    v91 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v86 - 8) + 104);
    v91(v89, *MEMORY[0x1E0DB5FA0], v86);
    *v84 = v87;
    v91(v84, *MEMORY[0x1E0DB5FA8], v86);
    v91((uint64_t *)v85, *MEMORY[0x1E0DB5FB8], v86);
    *v12 = v82;
    v93 = v143;
    v92 = v144;
    v94 = *(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v143 + 104);
    v95 = v94(v12, *MEMORY[0x1E0DB63D0], v144);
    MEMORY[0x1E0C80A78](v95);
    v96 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    v132 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v96, MEMORY[0x1E0DB5A18]);
    sub_1BB86D498();
    v56 = *(void (**)(uint64_t *, uint64_t))(v93 + 8);
    v56(v12, v92);
    v146[0] = v142;
    v97 = swift_allocObject();
    *(_QWORD *)(v97 + 16) = 0x4010000000000000;
    *v12 = v97;
    v94(v12, *MEMORY[0x1E0DB63E8], v92);
    sub_1BB86D4EC();
    v58 = v12;
    v59 = v92;
    return ((uint64_t (*)(uint64_t *, uint64_t))v56)(v58, v59);
  }
  if (v13 == 1)
  {
    v148 = a1;
    sub_1BA71C838();
    v15 = v14;
    v141 = (void (*)(uint64_t *, uint64_t))swift_allocBox();
    v17 = v16;
    v136 = v15;
    v18 = v16 + *(int *)(v15 + 48);
    v142 = a1;
    v19 = *MEMORY[0x1E0DB5FB8];
    v20 = sub_1BB86D894();
    v21 = v12;
    v22 = (uint64_t *)a2;
    v23 = *(void (**)(void))(*(_QWORD *)(v20 - 8) + 104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v17, v19, v20);
    v139 = v23;
    v140 = (_QWORD *)v20;
    ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v18, v19, v20);
    *v9 = v141;
    v24 = *(uint64_t (**)(void (**)(uint64_t *, uint64_t)))(v7 + 104);
    v137 = *MEMORY[0x1E0DB63D0];
    v25 = v144;
    v26 = v24(v9);
    v27 = v22;
    v28 = v21;
    v141 = (void (*)(uint64_t *, uint64_t))&v133;
    MEMORY[0x1E0C80A78](v26);
    v29 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    v31 = v30;
    v32 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v29, MEMORY[0x1E0DB5A18]);
    v132 = v32;
    sub_1BB86D498();
    v33 = *(_QWORD ***)(v143 + 8);
    ((void (*)(_QWORD, uint64_t))v33)(v9, v25);
    v146[0] = v142;
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = 0x4010000000000000;
    *v21 = v34;
    v35 = *MEMORY[0x1E0DB63E8];
    v36 = *MEMORY[0x1E0DB63E8];
    v135 = (uint64_t (*)(_QWORD))v24;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v24)(v21, v36, v25);
    v143 = v31;
    v138 = v32;
    sub_1BB86D4EC();
    v141 = (void (*)(uint64_t *, uint64_t))v33;
    ((void (*)(uint64_t *, uint64_t))v33)(v21, v25);
    v37 = v27[7];
    sub_1BA915B28((uint64_t)v27, (uint64_t)v146);
    if ((v37 & 1) == 0)
      return sub_1BA915C30((uint64_t)v146);
    v42 = v147;
    result = sub_1BA915C30((uint64_t)v146);
    if ((v42 & 8) == 0)
    {
      v145 = v142;
      v43 = v136;
      v44 = swift_allocBox();
      v46 = v45;
      v133 = (uint64_t *)((char *)v45 + *(int *)(v43 + 48));
      v134 = v44;
      v47 = swift_allocObject();
      *(double *)(v47 + 16) = a3;
      *v46 = v47;
      v48 = v139;
      ((void (*)(uint64_t *, _QWORD, _QWORD *))v139)(v46, *MEMORY[0x1E0DB5FA0], v140);
      v49 = swift_allocObject();
      LODWORD(v136) = v35;
      v50 = v49;
      v51 = v27[40];
      v52 = v27[41];
      __swift_project_boxed_opaque_existential_1(v27 + 37, v51);
      *(double *)(v50 + 16) = (*(double (**)(uint64_t, uint64_t))(v52 + 8))(v51, v52);
      *v133 = v50;
      v48();
      v53 = (uint64_t (*)(uint64_t *, _QWORD, uint64_t))v135;
      *v28 = v134;
      v54 = v144;
      v55 = v53(v28, v137, v144);
      MEMORY[0x1E0C80A78](v55);
      *(&v133 - 4) = v27;
      *((double *)&v133 - 3) = a3;
      v132 = v138;
      sub_1BB86D4BC();
      v56 = v141;
      v141(v28, v54);
      v145 = v142;
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = 0x4010000000000000;
      *v28 = v57;
      v53(v28, v136, v54);
      sub_1BB86D4EC();
      v58 = v28;
      v59 = v54;
      return ((uint64_t (*)(_QWORD, _QWORD))v56)(v58, v59);
    }
  }
  else
  {
    v40 = *(_QWORD *)(a2 + 56);
    sub_1BA915B28(a2, (uint64_t)v146);
    v41 = (unsigned int *)MEMORY[0x1E0DB63D0];
    if ((v40 & 1) != 0)
    {
      v98 = v147;
      sub_1BA915C30((uint64_t)v146);
      if ((v98 & 8) == 0)
      {
        v148 = a1;
        sub_1BA71C838();
        v100 = v99;
        v101 = swift_allocBox();
        v103 = v102;
        v140 = (uint64_t *)((char *)v102 + *(int *)(v100 + 48));
        v141 = (void (*)(uint64_t *, uint64_t))v101;
        v104 = swift_allocObject();
        *(double *)(v104 + 16) = a3;
        *v103 = v104;
        v105 = *MEMORY[0x1E0DB5FA0];
        v106 = sub_1BB86D894();
        v142 = a1;
        v107 = *(void (**)(void))(*(_QWORD *)(v106 - 8) + 104);
        ((void (*)(uint64_t *, uint64_t, uint64_t))v107)(v103, v105, v106);
        v108 = swift_allocObject();
        v109 = *(_QWORD *)(a2 + 320);
        v110 = *(_QWORD *)(a2 + 328);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 296), v109);
        *(double *)(v108 + 16) = (*(double (**)(uint64_t, uint64_t))(v110 + 8))(v109, v110);
        *v140 = v108;
        v107();
        *v12 = (uint64_t)v141;
        v111 = v143;
        v112 = v144;
        v113 = *(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v143 + 104);
        v114 = v113(v12, *MEMORY[0x1E0DB63D0], v144);
        v141 = (void (*)(uint64_t *, uint64_t))&v133;
        MEMORY[0x1E0C80A78](v114);
        *(&v133 - 4) = (uint64_t *)a2;
        *((double *)&v133 - 3) = a3;
        v115 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
        sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
        v132 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v115, MEMORY[0x1E0DB5A18]);
        a1 = v142;
        sub_1BB86D4BC();
        v116 = *(void (**)(uint64_t *, uint64_t))(v111 + 8);
        v116(v12, v112);
        v148 = a1;
        v117 = swift_allocObject();
        *(_QWORD *)(v117 + 16) = 0x4010000000000000;
        *v12 = v117;
        v113(v12, *MEMORY[0x1E0DB63E8], v112);
        sub_1BB86D4EC();
        v118 = v112;
        v41 = (unsigned int *)MEMORY[0x1E0DB63D0];
        v116(v12, v118);
      }
    }
    else
    {
      sub_1BA915C30((uint64_t)v146);
    }
    v146[0] = a1;
    sub_1BA71C838();
    v120 = v119;
    v121 = swift_allocBox();
    v123 = v122;
    v124 = (char *)v122 + *(int *)(v120 + 48);
    v125 = sub_1BB86D894();
    v126 = swift_allocBox();
    sub_1BB86D888();
    *v123 = v126;
    v127 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v125 - 8) + 104);
    v127(v123, *MEMORY[0x1E0DB5FA8], v125);
    v127((uint64_t *)v124, *MEMORY[0x1E0DB5FB8], v125);
    *v12 = v121;
    v129 = v143;
    v128 = v144;
    v130 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v143 + 104))(v12, *v41, v144);
    MEMORY[0x1E0C80A78](v130);
    v131 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    v132 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v131, MEMORY[0x1E0DB5A18]);
    sub_1BB86D498();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v129 + 8))(v12, v128);
  }
  return result;
}

uint64_t sub_1BB169CFC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v24 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v23 - v6);
  v26 = a1;
  KeyPath = swift_getKeyPath();
  sub_1BA71C838();
  v9 = v8;
  v10 = swift_allocBox();
  v12 = v11;
  v13 = (uint64_t *)(v11 + *(int *)(v9 + 48));
  v14 = *MEMORY[0x1E0DB5F98];
  v15 = sub_1BB86D894();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104);
  v16(v12, v14, v15);
  v17 = swift_allocObject();
  v18 = a2[40];
  v19 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v18);
  *(double *)(v17 + 16) = (*(double (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  *v13 = v17;
  v16((uint64_t)v13, *MEMORY[0x1E0DB5FA0], v15);
  *v7 = v10;
  v20 = v24;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB63D0], v24);
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v21, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v20);
}

uint64_t sub_1BB169F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(uint64_t, _QWORD *);
  id v19;
  _QWORD v20[2];

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v20 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 360);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    v18 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v18, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v19 = v17;
    sub_1BB86D4E0();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB16A164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void (*v27)(uint64_t, _QWORD, uint64_t);
  uint64_t (*v28)(uint64_t, _QWORD *);
  _QWORD v29[2];

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v29 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29[1] = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 360);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    sub_1BAA46934();
    sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = *(_QWORD *)(v20 + 72);
    v22 = *(unsigned __int8 *)(v20 + 80);
    v29[0] = v5;
    v23 = (v22 + 32) & ~v22;
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BB87A390;
    v25 = v24 + v23;
    v26 = v17;
    sub_1BB86D9A8();
    v27 = *(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104);
    v27(v25, *MEMORY[0x1E0DB5B98], v19);
    sub_1BB86D9A8();
    v27(v25 + v21, *MEMORY[0x1E0DB5BA8], v19);
    v28 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v28, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v6 + 8))(v8, v29[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB16A46C(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *, uint64_t, uint64_t);
  uint64_t v33;
  _QWORD v35[3];
  void (*v36)(uint64_t *, uint64_t);
  void (*v37)(uint64_t *, uint64_t, uint64_t);
  uint64_t v38;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (_QWORD *)((char *)v35 - v11);
  v38 = a1;
  v13 = swift_allocObject();
  v14 = a2 + 37;
  v15 = a2[40];
  v16 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v15);
  v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  v19 = a2[40];
  v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(v14, v19);
  *(double *)(v13 + 16) = (v17 - (*(double (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18)) * 0.5;
  *v12 = v13;
  v20 = *MEMORY[0x1E0DB63F0];
  v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  v37(v12, v20, v9);
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v35[2] = v22;
  v35[1] = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v21, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v36 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v36(v12, v9);
  v38 = a1;
  swift_getKeyPath();
  sub_1BA71C838();
  v24 = v23;
  v25 = swift_allocBox();
  v27 = v26;
  v28 = (uint64_t *)((char *)v26 + *(int *)(v24 + 48));
  v29 = swift_allocObject();
  *(double *)(v29 + 16) = a3;
  *v27 = v29;
  v30 = *MEMORY[0x1E0DB5FA0];
  v31 = sub_1BB86D894();
  v32 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104);
  v32(v27, v30, v31);
  v33 = swift_allocObject();
  *(double *)(v33 + 16) = a4;
  *v28 = v33;
  v32(v28, v30, v31);
  *v12 = v25;
  v37(v12, *MEMORY[0x1E0DB63D0], v9);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v36)(v12, v9);
}

uint64_t sub_1BB16A760(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  void (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  uint64_t v59;
  void (*v60)(void);
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*KeyPath)(uint64_t *, uint64_t);
  uint64_t v71;
  unsigned int v72;
  void (*v73)(uint64_t, uint64_t);
  unsigned int v74;
  void (*v75)(uint64_t *);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;

  v1 = *a1;
  v76 = (uint64_t)a1;
  v78 = v1;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v59 = *(_QWORD *)(v3 - 8);
  v5 = v59;
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v59 - v6);
  v79 = a1;
  KeyPath = (void (*)(uint64_t *, uint64_t))swift_getKeyPath();
  sub_1BA71C838();
  v9 = v8;
  v10 = swift_allocBox();
  v12 = v11;
  v13 = (uint64_t *)(v11 + *(int *)(v9 + 48));
  v14 = *MEMORY[0x1E0DB5F98];
  v15 = sub_1BB86D894();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104);
  v71 = v15;
  v16(v12, v14);
  v73 = v16;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0x4000000000000000;
  *v13 = v17;
  v72 = *MEMORY[0x1E0DB5FA0];
  ((void (*)(uint64_t *))v16)(v13);
  *v7 = v10;
  v74 = *MEMORY[0x1E0DB63D0];
  v75 = *(void (**)(uint64_t *))(v5 + 104);
  v18 = v4;
  v77 = v4;
  v75(v7);
  sub_1BAA46934();
  v69 = v19;
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v21 = *(_QWORD *)(v20 - 8);
  v61 = v20;
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v66 = v24;
  v67 = v22;
  v68 = v23 | 7;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
  v26 = v25 + v24;
  v63 = *MEMORY[0x1E0DB5C30];
  v27 = v63;
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  v62 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
  v29 = v27;
  v30 = v28;
  v62(v26, v29);
  v31 = *MEMORY[0x1E0DB5C68];
  v60 = *(void (**)(void))(v21 + 104);
  v32 = v31;
  ((void (*)(uint64_t))v60)(v26);
  v65 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
  v64 = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = *(void (**)(uint64_t *, uint64_t))(v59 + 8);
  KeyPath(v7, v18);
  v79 = (_QWORD *)v76;
  v76 = swift_getKeyPath();
  v33 = swift_allocBox();
  v35 = v34;
  v36 = (uint64_t *)((char *)v34 + *(int *)(v9 + 48));
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = 0x403C000000000000;
  *v35 = v37;
  v38 = v35;
  v39 = v72;
  v40 = v71;
  v41 = (void (*)(uint64_t *, uint64_t, uint64_t))v73;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v73)(v38, v72, v71);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = 0x403C000000000000;
  *v36 = v42;
  v41(v36, v39, v40);
  *v7 = v33;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v75)(v7, v74, v77);
  v43 = v66;
  v44 = 2 * v67;
  v45 = v67;
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1BB87FC80;
  v47 = v46 + v43;
  v48 = v30;
  v49 = v62;
  ((void (*)(uint64_t, _QWORD, uint64_t))v62)(v47, v63, v30);
  v50 = v60;
  v51 = v61;
  ((void (*)(uint64_t, uint64_t, uint64_t))v60)(v47, v32, v61);
  v52 = v47 + v45;
  ((void (*)(uint64_t, _QWORD, uint64_t))v49)(v52, *MEMORY[0x1E0DB5C58], v48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v50)(v52, v32, v51);
  __asm { FMOV            V0.2D, #-10.0 }
  *(_OWORD *)(v47 + v44) = _Q0;
  v50();
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))KeyPath)(v7, v77);
}

uint64_t sub_1BB16AC1C(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, _QWORD *);
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v31 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v30 - v6);
  v33 = a1;
  KeyPath = swift_getKeyPath();
  sub_1BA71C838();
  v9 = v8;
  v10 = swift_allocBox();
  v12 = v11;
  v13 = (uint64_t *)((char *)v11 + *(int *)(v9 + 48));
  v14 = swift_allocObject();
  *(double *)(v14 + 16) = a2;
  *v12 = v14;
  v15 = *MEMORY[0x1E0DB5FA0];
  v16 = sub_1BB86D894();
  v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104);
  v17(v12, v15, v16);
  v18 = swift_allocObject();
  *(double *)(v18 + 16) = a2;
  *v13 = v18;
  v17(v13, v15, v16);
  *v7 = v10;
  v19 = v31;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB63D0], v31);
  sub_1BAA46934();
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
  v25 = v24 + v23;
  v26 = *MEMORY[0x1E0DB5C58];
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v22 + 104))(v25, *MEMORY[0x1E0DB5C68], v21);
  v28 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v28, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v19);
}

uint64_t sub_1BB16AF14(void *a1)
{
  uint64_t v1;

  return sub_1BB1683C8(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 64), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_1BB16AF28(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB16AC1C(a1, *(double *)(v1 + 16));
}

uint64_t sub_1BB16AF30()
{
  return swift_deallocObject();
}

void sub_1BB16AF40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C2A8)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C280, (uint64_t (*)(void))sub_1BA8D93BC, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
    type metadata accessor for IssueCoverViewLayoutAttributesFactory();
    sub_1BA915CEC();
    sub_1BB16B024();
    sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
    v0 = sub_1BB86D690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C2A8);
  }
}

unint64_t sub_1BB16B024()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39C278;
  if (!qword_1ED39C278)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C280, (uint64_t (*)(void))sub_1BA8D93BC, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5A60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39C278);
  }
  return result;
}

uint64_t sub_1BB16B08C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB168C2C(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1BB16B094(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB16907C(a1, *(_QWORD *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1BB16B0A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB16A164(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB16B0A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB169F24(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB16B0B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB16A46C(a1, *(_QWORD **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1BB16B0CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB169CFC(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1BB16B0D4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB16B0F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB168E34(a1, *(_QWORD *)(v1 + 16));
}

uint64_t FormatGroupNodeMaskDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 88));
}

id FormatGroupNodeMaskDataLayoutAttributes.maskData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v3 = *(void **)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_QWORD *)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v2;
  return sub_1BA7F6D0C(v3, v4, v5, v6, v7, v8, v9, v10, v2);
}

uint64_t FormatGroupNodeMaskDataLayoutAttributes.deinit()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  sub_1BA7F6D98(*(void **)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
  return v0;
}

uint64_t FormatGroupNodeMaskDataLayoutAttributes.__deallocating_deinit()
{
  FormatGroupNodeMaskDataLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatGroupNodeMaskDataLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB16B208@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Font.init(from:)(a1, a2);
}

void sub_1BB16B21C(_QWORD *a1)
{
  FormatGroupBinding.Font.encode(to:)(a1);
}

void _s8NewsFeed18FormatGroupBindingV4FontO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X16 }
}

uint64_t sub_1BB16B280@<X0>(unsigned int a1@<W8>)
{
  int v1;
  double v2;
  double v3;
  double v4;
  double v5;
  BOOL v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  if ((v1 & 0xFFFFFFu) >= 0x400000)
    goto LABEL_33;
  if (HIWORD(a1))
  {
    if (HIWORD(a1) == 1)
    {
      if (BYTE2(v1) != 1 || v5 != v4)
        goto LABEL_33;
    }
    else if (BYTE2(v1) != 2 || v5 != v4)
    {
      goto LABEL_33;
    }
  }
  else
  {
    if (BYTE2(v1))
      v7 = 0;
    else
      v7 = v5 == v4;
    if (!v7)
      goto LABEL_33;
  }
  if ((a1 & 0xFF00) == 0xC00)
  {
    if ((v1 & 0xFF00) == 0xC00)
      goto LABEL_22;
    goto LABEL_33;
  }
  if ((v1 & 0xFF00) == 0xC00)
    goto LABEL_33;
  if ((a1 & 1) != 0)
  {
    if ((v1 & 1) == 0)
      goto LABEL_33;
  }
  else if ((v1 & 1) != 0 || v3 != v2)
  {
    goto LABEL_33;
  }
  v10 = FormatFontScalingStyle.rawValue.getter();
  v12 = v11;
  if (v10 == FormatFontScalingStyle.rawValue.getter() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    v9 = 1;
    return v9 & 1;
  }
  v14 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_33:
    v9 = 0;
    return v9 & 1;
  }
LABEL_22:
  v9 = 1;
  return v9 & 1;
}

unint64_t sub_1BB16B458(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB16B47C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB16B47C()
{
  unint64_t result;

  result = qword_1EF2BC1E0;
  if (!qword_1EF2BC1E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Font, &type metadata for FormatGroupBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2BC1E0);
  }
  return result;
}

unint64_t sub_1BB16B4C0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE77FA0();
  a1[2] = sub_1BAEF97B0();
  result = sub_1BB16B4F4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB16B4F4()
{
  unint64_t result;

  result = qword_1EF2BC1E8;
  if (!qword_1EF2BC1E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Font, &type metadata for FormatGroupBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2BC1E8);
  }
  return result;
}

uint64_t _s4FontOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3D && *(_BYTE *)(a1 + 19))
    return (*(_DWORD *)a1 + 61);
  v3 = (*(_BYTE *)(a1 + 18) & 0x3C | (*(unsigned __int8 *)(a1 + 18) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s4FontOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 61;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_WORD *)(result + 16) = 0;
      *(_BYTE *)(result + 18) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1BB16B5E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 18) >> 6;
}

uint64_t sub_1BB16B5F4(uint64_t a1)
{
  uint64_t result;
  int v2;

  v2 = *(unsigned __int16 *)(a1 + 16);
  result = a1 + 16;
  *(_BYTE *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x3F;
  *(_WORD *)result = v2;
  return result;
}

uint64_t sub_1BB16B610(uint64_t a1, int a2)
{
  uint64_t result;
  int v3;

  v3 = *(unsigned __int16 *)(a1 + 16);
  result = a1 + 16;
  *(_BYTE *)(result + 2) = ((v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0x3FFFF | (a2 << 22)) >> 16;
  *(_WORD *)result = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Font()
{
  return &type metadata for FormatGroupBinding.Font;
}

uint64_t Dictionary<>.formatVersion.setter(uint64_t a1)
{
  return sub_1BB16BAB4(a1);
}

uint64_t Dictionary<>.ignoreMetadata.setter(char a1)
{
  return sub_1BB16B6B0(a1);
}

uint64_t Dictionary<>.bindingContent.setter(char a1)
{
  return sub_1BB16B6B0(a1);
}

uint64_t sub_1BB16B6B0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  _BYTE v10[24];
  uint64_t v11;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v10[-v3];
  v5 = sub_1BB873E58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB873E4C();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    v11 = MEMORY[0x1E0DEAFA0];
    v10[0] = a1 & 1;
    return sub_1BB4A9CB8((uint64_t)v10, (uint64_t)v8);
  }
  return result;
}

uint64_t Dictionary<>.allowSourceMaps.setter(char a1)
{
  return sub_1BB16B6B0(a1);
}

uint64_t Dictionary<>.errorOnUnknownKeys.setter(char a1)
{
  return sub_1BB16B6B0(a1);
}

uint64_t Dictionary<>.ignoreMetadata.getter(uint64_t a1)
{
  return sub_1BA6ED778(a1);
}

uint64_t static CodingUserInfoKey.appVersion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB16B870(a1);
}

uint64_t static CodingUserInfoKey.formatVersion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB16B870(a1);
}

uint64_t sub_1BB16B870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  sub_1BB873E4C();
  v5 = sub_1BB873E58();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  __break(1u);
  return result;
}

uint64_t static CodingUserInfoKey.ignoreMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB16B870(a1);
}

uint64_t static CodingUserInfoKey.bindingContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB16B870(a1);
}

uint64_t static CodingUserInfoKey.allowSourceMaps.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB16B870(a1);
}

uint64_t static CodingUserInfoKey.errorOnUnknownKeys.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB16B870(a1);
}

void (*Dictionary<>.ignoreMetadata.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  *v3 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[1] = malloc(v5);
  v3[2] = malloc(v5);
  v6 = sub_1BB873E58();
  v3[3] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[4] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v3[6] = malloc(v8);
  *((_BYTE *)v3 + 56) = Dictionary<>.ignoreMetadata.getter(*v1) & 1;
  return sub_1BB16BA70;
}

void sub_1BB16BA70(uint64_t a1, char a2)
{
  sub_1BB16C380(a1, a2);
}

uint64_t Dictionary<>.appVersion.setter(uint64_t a1)
{
  return sub_1BB16BAB4(a1);
}

uint64_t sub_1BB16BAB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t v13[4];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v13 - v3;
  v5 = sub_1BB873E58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB873E4C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = sub_1BB86EB84();
    v13[3] = v10;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
    v12 = *(_QWORD *)(v10 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(boxed_opaque_existential_0, a1, v10);
    sub_1BB4A9CB8((uint64_t)v13, (uint64_t)v8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, v10);
  }
  return result;
}

void (*Dictionary<>.appVersion.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  void *v12;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[8] = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[9] = malloc(v5);
  v3[10] = malloc(v5);
  v6 = sub_1BB873E58();
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[12] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[13] = malloc(v8);
  v3[14] = malloc(v8);
  v9 = sub_1BB86EB84();
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v3[17] = malloc(v11);
  v12 = malloc(v11);
  v3[18] = v12;
  Dictionary<>.appVersion.getter(*v1, (uint64_t)v12);
  return sub_1BB16BCE8;
}

void sub_1BB16BCE8(uint64_t **a1, char a2)
{
  sub_1BB16BFA4(a1, a2);
}

uint64_t sub_1BB16BD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, double);
  uint64_t result;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v22[2];
  uint64_t v23[4];

  v22[0] = a2;
  v22[1] = a6;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - v8;
  v10 = sub_1BB873E58();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86EB84();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v19(v18, a1, v14, v16);
  sub_1BB873E4C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v23[3] = v14;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
    ((void (*)(uint64_t *, char *, uint64_t))v19)(boxed_opaque_existential_0, v18, v14);
    sub_1BB4A9CB8((uint64_t)v23, (uint64_t)v13);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

void (*Dictionary<>.formatVersion.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  void *v12;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[8] = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[9] = malloc(v5);
  v3[10] = malloc(v5);
  v6 = sub_1BB873E58();
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[12] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[13] = malloc(v8);
  v3[14] = malloc(v8);
  v9 = sub_1BB86EB84();
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v3[17] = malloc(v11);
  v12 = malloc(v11);
  v3[18] = v12;
  Dictionary<>.formatVersion.getter(*v1, (uint64_t)v12);
  return sub_1BB16BF80;
}

void sub_1BB16BF80(uint64_t **a1, char a2)
{
  sub_1BB16BFA4(a1, a2);
}

void sub_1BB16BFA4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t *boxed_opaque_existential_0;
  void (*v15)(void *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void *v22;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[11];
    v4 = v2[12];
    v5 = v2[9];
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2[16] + 16);
    v6(v2[17], v2[18], v2[15]);
    sub_1BB873E4C();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) != 1)
    {
      v8 = (void *)v2[17];
      v7 = (void *)v2[18];
      v10 = v2[15];
      v9 = v2[16];
      v12 = (void *)v2[13];
      v11 = (void *)v2[14];
      v13 = (void *)v2[9];
      v22 = (void *)v2[10];
      (*(void (**)(void *, void *, uint64_t))(v2[12] + 32))(v12, v13, v2[11]);
      v2[3] = v10;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v2);
      v6((uint64_t)boxed_opaque_existential_0, (uint64_t)v8, v10);
      sub_1BB4A9CB8((uint64_t)v2, (uint64_t)v12);
      v15 = *(void (**)(void *, uint64_t))(v9 + 8);
      v15(v8, v10);
      v15(v7, v10);
LABEL_6:
      free(v7);
      free(v8);
      free(v11);
      free(v12);
      free(v22);
      free(v13);
      free(v2);
      return;
    }
    __break(1u);
  }
  else
  {
    v16 = v2[11];
    v17 = v2[12];
    v18 = v2[10];
    sub_1BB873E4C();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) != 1)
    {
      v8 = (void *)v2[17];
      v7 = (void *)v2[18];
      v20 = v2[15];
      v19 = v2[16];
      v12 = (void *)v2[13];
      v11 = (void *)v2[14];
      v13 = (void *)v2[9];
      v22 = (void *)v2[10];
      (*(void (**)(void *))(v2[12] + 32))(v11);
      v2[7] = v20;
      v21 = __swift_allocate_boxed_opaque_existential_0(v2 + 4);
      (*(void (**)(uint64_t *, void *, uint64_t))(v19 + 16))(v21, v7, v20);
      sub_1BB4A9CB8((uint64_t)(v2 + 4), (uint64_t)v11);
      (*(void (**)(void *, uint64_t))(v19 + 8))(v7, v20);
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_1BB16C17C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  uint64_t result;
  _BYTE v11[24];
  uint64_t v12;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v11[-v3];
  v5 = sub_1BB873E58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *a1;
  sub_1BB873E4C();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    v12 = MEMORY[0x1E0DEAFA0];
    v11[0] = v9;
    return sub_1BB4A9CB8((uint64_t)v11, (uint64_t)v8);
  }
  return result;
}

void (*Dictionary<>.bindingContent.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  *v3 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9A40, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[1] = malloc(v5);
  v3[2] = malloc(v5);
  v6 = sub_1BB873E58();
  v3[3] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[4] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v3[6] = malloc(v8);
  *((_BYTE *)v3 + 56) = Dictionary<>.bindingContent.getter(*v1) & 1;
  return sub_1BB16C35C;
}

void sub_1BB16C35C(uint64_t a1, char a2)
{
  sub_1BB16C380(a1, a2);
}

void sub_1BB16C380(uint64_t a1, char a2)
{
  _QWORD *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;

  v2 = *(_QWORD **)a1;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v6 = v2[1];
    sub_1BB873E4C();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
    {
      v8 = (void *)v2[5];
      v7 = (void *)v2[6];
      v10 = (void *)v2[1];
      v9 = (void *)v2[2];
      (*(void (**)(void *, void *, _QWORD))(v2[4] + 32))(v8, v10, v2[3]);
      v14 = MEMORY[0x1E0DEAFA0];
      v13[0] = v3;
      v11 = (uint64_t)v8;
LABEL_6:
      sub_1BB4A9CB8((uint64_t)v13, v11);
      free(v7);
      free(v8);
      free(v9);
      free(v10);
      free(v2);
      return;
    }
    __break(1u);
  }
  else
  {
    v12 = v2[2];
    sub_1BB873E4C();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) != 1)
    {
      v8 = (void *)v2[5];
      v7 = (void *)v2[6];
      v10 = (void *)v2[1];
      v9 = (void *)v2[2];
      (*(void (**)(void *, void *, _QWORD))(v2[4] + 32))(v7, v9, v2[3]);
      v14 = MEMORY[0x1E0DEAFA0];
      v13[0] = v3;
      v11 = (uint64_t)v7;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t (*Dictionary<>.allowSourceMaps.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = Dictionary<>.allowSourceMaps.getter(*v1) & 1;
  return sub_1BB16C508;
}

uint64_t sub_1BB16C508(uint64_t a1)
{
  return Dictionary<>.allowSourceMaps.setter(*(_BYTE *)(a1 + 8));
}

uint64_t (*Dictionary<>.errorOnUnknownKeys.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = Dictionary<>.errorOnUnknownKeys.getter(*v1) & 1;
  return sub_1BB16C568;
}

uint64_t sub_1BB16C568(uint64_t a1)
{
  return Dictionary<>.errorOnUnknownKeys.setter(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1BB16C58C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = Dictionary<>.ignoreMetadata.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BB16C5B8(char *a1)
{
  return sub_1BB16C17C(a1);
}

uint64_t sub_1BB16C5EC()
{
  return 0;
}

uint64_t sub_1BB16C5FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Dictionary<>.appVersion.getter(*a1, a2);
}

uint64_t sub_1BB16C604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB16BD08(a1, a2, a3, a4, 0x737265567070612ELL, 0xEB000000006E6F69);
}

uint64_t sub_1BB16C634()
{
  return 0;
}

uint64_t sub_1BB16C644@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Dictionary<>.formatVersion.getter(*a1, a2);
}

uint64_t sub_1BB16C64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB16BD08(a1, a2, a3, a4, 0x5674616D726F662ELL, 0xEE006E6F69737265);
}

uint64_t sub_1BB16C680()
{
  return 0;
}

uint64_t sub_1BB16C690@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = Dictionary<>.bindingContent.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BB16C6BC(char *a1)
{
  return sub_1BB16C17C(a1);
}

uint64_t sub_1BB16C6F0()
{
  return 0;
}

uint64_t sub_1BB16C700@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = Dictionary<>.allowSourceMaps.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BB16C72C(char *a1)
{
  return sub_1BB16C17C(a1);
}

uint64_t sub_1BB16C758()
{
  return 0;
}

uint64_t sub_1BB16C768@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = Dictionary<>.errorOnUnknownKeys.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BB16C794(char *a1)
{
  return sub_1BB16C17C(a1);
}

uint64_t sub_1BB16C7C0()
{
  return 0;
}

uint64_t ImageRequestOptions.init(scale:traitCollection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = a2 + *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  v7 = sub_1BB86F550();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(double *)a2 = a3;
  *(_QWORD *)(a2 + 8) = a1;
  return result;
}

uint64_t ImageRequestOptions.init(scale:traitCollection:border:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v5;

  *(double *)a3 = a4;
  *(_QWORD *)(a3 + 8) = a1;
  v5 = a3 + *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  return sub_1BB16C87C(a2, v5);
}

uint64_t sub_1BB16C87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA65805C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageRequestOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v5;
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86F550();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    v12 = v5;
    if (v11(v8, 1, v9))
    {
      sub_1BA65805C();
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

_QWORD *assignWithCopy for ImageRequestOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BB86F550();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BA65805C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

_QWORD *initializeWithTake for ImageRequestOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86F550();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BA65805C();
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithTake for ImageRequestOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = (void *)a1[1];
  a1[1] = a2[1];

  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86F550();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA65805C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageRequestOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB16CCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA65805C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ImageRequestOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB16CD38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA65805C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t FormatBackgroundLayoutManager.create(background:options:gutterView:)(uint64_t a1, __int128 *a2, void *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  void (*v16)(char *, uint64_t);
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[8];
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v4 = v3;
  v7 = *v4;
  v25[0] = a1;
  v25[1] = v7;
  v8 = sub_1BB8705C4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v25 - v13;
  v15 = a2[1];
  v26 = *a2;
  v27 = v15;
  v28 = *((_QWORD *)a2 + 4);
  swift_getObjectType();
  sub_1BB16CFFC((uint64_t)&v26);
  sub_1BB871008();
  sub_1BB16D040((uint64_t)&v26);
  sub_1BB16D080((uint64_t)v11, a3, (uint64_t)v14);
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  v25[4] = v4;
  v25[5] = v25[0];
  v25[6] = &v26;
  v25[7] = v14;
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  sub_1BB86EC14();
  sub_1BA657D64();
  v17 = (void *)sub_1BB87345C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, v11, v8);
  sub_1BB16D584(0);
  sub_1BB86E98C();
  swift_release();

  swift_release();
  v20 = swift_allocObject();
  v21 = v27;
  *(_OWORD *)(v20 + 16) = v26;
  *(_OWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 48) = v28;
  sub_1BB16CFFC((uint64_t)&v26);
  v22 = (void *)sub_1BB86E854();
  v23 = sub_1BB86EA1C();
  swift_release();
  swift_release();

  v16(v14, v8);
  return v23;
}

uint64_t sub_1BB16CFFC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(id *)a1;
  v5 = v2;
  v6 = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1BB16D040(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  swift_unknownObjectRelease();

  return a1;
}

uint64_t sub_1BB16D080@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD v33[7];
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v39 = a3;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2BC208, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)v33 - v6;
  v7 = sub_1BB86FC70();
  MEMORY[0x1E0C80A78](v7);
  v38 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB870588();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v37 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB870B7C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB8705C4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    objc_msgSend(a2, sel_frame, v18);
    v34 = v22;
    v35 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v20, a1, v16, v18);
    sub_1BB8705B8();
    v34 = v24;
    v35 = v23;
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DBA690], v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v37, *MEMORY[0x1E0DB9470], v9);
  sub_1BB8704F8();
  v33[5] = v26;
  v33[6] = v25;
  sub_1BB870504();
  v33[4] = v27;
  sub_1BB870558();
  v33[1] = v29;
  v33[2] = v28;
  v33[3] = sub_1BB870540();
  sub_1BB870564();
  sub_1BB8705AC();
  sub_1BB870570();
  sub_1BB870534();
  sub_1BB870528();
  sub_1BB8704EC();
  v30 = v36;
  sub_1BB8704E0();
  v31 = sub_1BB871044();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  return sub_1BB870594();
}

uint64_t sub_1BB16D3EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v6[2];
  uint64_t v7;

  v1 = v0[3];
  v3 = v0[4];
  v2 = v0[5];
  v4 = *(_OWORD *)(v3 + 16);
  v6[0] = *(_OWORD *)v3;
  v6[1] = v4;
  v7 = *(_QWORD *)(v3 + 32);
  return FormatBackgroundLayoutSolver.resolve(background:options:layoutOptions:)(v1, v6, v2);
}

uint64_t sub_1BB16D430@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  uint64_t result;
  _OWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  *(_QWORD *)&v11[0] = *a1;
  v3 = *(_QWORD *)&v11[0];
  swift_retain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 32);
  v5 = *(_QWORD *)(*(_QWORD *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 40);
  v6 = *(_QWORD *)(*(_QWORD *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 48);
  v7 = *(_BYTE *)(*(_QWORD *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 56);
  v11[0] = *(_OWORD *)(*(_QWORD *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult);
  v11[1] = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 16);
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BB870540();
  v9 = FormatLayoutViewFactory.create(layoutResult:traitCollection:)(v11, (uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  type metadata accessor for FormatBackgroundLayout();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v9;
  *a2 = result;
  return result;
}

uint64_t sub_1BB16D568(uint64_t a1, uint64_t a2)
{
  return sub_1BB16DBE0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB16D430);
}

void sub_1BB16D584(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BC1F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBackgroundLayout, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB16D5A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB16DC4C(v1 + 16, "Failed to resolve layout for background configuration with error=%{public}@", 75, a1);
}

uint64_t FormatBackgroundLayoutManager.relayout(options:gutterView:)(__int128 *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  void *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v3 = v2;
  v6 = *v3;
  v7 = sub_1BB8705C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = a1[1];
  v35 = *a1;
  v36 = v14;
  v37 = *((_QWORD *)a1 + 4);
  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v34)
  {
    v29 = v7;
    v15 = a2;
    v16 = v34;
    v32 = v34;
    swift_getObjectType();
    v31 = v6;
    sub_1BB16CFFC((uint64_t)&v35);
    sub_1BB871008();
    sub_1BB16D040((uint64_t)&v35);
    v17 = v13;
    sub_1BB16D080((uint64_t)v10, v15, (uint64_t)v13);
    v33 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    v18 = v29;
    v19 = v33(v10, v29);
    MEMORY[0x1E0C80A78](v19);
    *(&v29 - 4) = (uint64_t)v3;
    *(&v29 - 3) = v16;
    *(&v29 - 2) = (uint64_t)&v35;
    *(&v29 - 1) = (uint64_t)v17;
    v20 = v17;
    v30 = v17;
    type metadata accessor for FormatBackgroundLayoutSolverResult();
    sub_1BB86EC14();
    sub_1BA657D64();
    v21 = (void *)sub_1BB87345C();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v20, v18);
    v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v23 + v22, v10, v18);
    sub_1BB16D584(0);
    sub_1BB86E98C();
    swift_release();

    swift_release();
    v24 = swift_allocObject();
    v25 = v36;
    *(_OWORD *)(v24 + 16) = v35;
    *(_OWORD *)(v24 + 32) = v25;
    *(_QWORD *)(v24 + 48) = v37;
    sub_1BB16CFFC((uint64_t)&v35);
    v26 = (void *)sub_1BB86E854();
    v27 = sub_1BB86EA1C();
    swift_release();
    swift_release();

    swift_release();
    v33(v30, v18);
  }
  else
  {
    v34 = 0;
    sub_1BA4B07F0(0, &qword_1EF2BC200, (uint64_t (*)(uint64_t))sub_1BB16D584, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  return v27;
}

uint64_t sub_1BB16D8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a4;
  v25 = a2;
  v6 = sub_1BB8705C4();
  v7 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = type metadata accessor for FormatContent.Resolved();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(a1 + 16);
  v13 = v25 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content;
  v25 = sub_1BB86E6F8();
  sub_1BA5E34EC(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v6);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (*(unsigned __int8 *)(v7 + 80) + v15 + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = swift_allocObject();
  sub_1BA562B24((uint64_t)v12, v17 + v14);
  v18 = v17 + v15;
  v19 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v18 = *(_OWORD *)a3;
  *(_OWORD *)(v18 + 16) = v19;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(a3 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v16, (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
  sub_1BB16CFFC(a3);
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  type metadata accessor for FormatBackgroundLayoutSolver();
  v20 = (void *)v25;
  v21 = sub_1BB86EC08();

  swift_release();
  return v21;
}

uint64_t sub_1BB16DAA8()
{
  uint64_t *v0;

  return sub_1BB16D8D8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1BB16DAC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  void *v10;
  id v11;
  uint64_t result;
  _OWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v3 = *a1;
  v4 = *a1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult;
  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(v4 + 40);
  v7 = *(_QWORD *)(v4 + 48);
  v8 = *(_BYTE *)(v4 + 56);
  v9 = *(_OWORD *)(v4 + 16);
  v13[0] = *(_OWORD *)v4;
  v13[1] = v9;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1BB870540();
  v11 = FormatLayoutViewFactory.create(layoutResult:traitCollection:)(v13, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  type metadata accessor for FormatBackgroundLayout();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v11;
  *a2 = result;
  return result;
}

uint64_t sub_1BB16DBC4(uint64_t a1, uint64_t a2)
{
  return sub_1BB16DBE0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB16DAC4);
}

uint64_t sub_1BB16DBE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB8705C4() - 8) + 80);
  return a3(a1, a2, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_1BB16DC4C@<X0>(uint64_t a1@<X1>, const char *a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = sub_1BB8732F4();
  sub_1BA7AA598();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 0xE000000000000000;
  sub_1BB86EF44(a2, a3, 2, &dword_1BA493000, v7, v8, v9);
  result = swift_bridgeObjectRelease();
  *a4 = 0;
  return result;
}

uint64_t sub_1BB16DD68@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB16DC4C(v1 + 16, "Failed to reload layout for background configuration with error=%{public}@", 74, a1);
}

uint64_t FormatBackgroundLayoutManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatBackgroundLayoutManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB16DDEC(uint64_t a1, __int128 *a2, void *a3)
{
  return FormatBackgroundLayoutManager.create(background:options:gutterView:)(a1, a2, a3);
}

uint64_t sub_1BB16DE0C(__int128 *a1, void *a2)
{
  return FormatBackgroundLayoutManager.relayout(options:gutterView:)(a1, a2);
}

uint64_t dispatch thunk of FormatBackgroundLayoutManagerType.create(background:options:gutterView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FormatBackgroundLayoutManagerType.relayout(options:gutterView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for FormatBackgroundLayoutManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatBackgroundLayoutManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB16DE68()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = (int *)type metadata accessor for FormatContent.Resolved();
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v37 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BB8705C4();
  v6 = *(_QWORD *)(v5 - 8);
  v36 = *(unsigned __int8 *)(v6 + 80);
  v7 = v0 + v4;
  swift_bridgeObjectRelease();
  v8 = v0 + v4 + v1[5];
  v9 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v10 = v0 + v4 + v1[14];
  v11 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v33 = (v3 + 16) & ~v3;
    v34 = v6;
    v35 = v5;
    swift_bridgeObjectRelease();
    v12 = v10 + v11[5];
    swift_bridgeObjectRelease();
    v13 = type metadata accessor for FormatWebEmbed();
    v14 = v12 + *(int *)(v13 + 20);
    v15 = sub_1BB86C67C();
    v16 = *(_QWORD *)(v15 - 8);
    v32 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v32(v14, v15);
    v17 = v12 + *(int *)(v13 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15))
      v32(v17, v15);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v18 = v10 + v11[8];
    v19 = type metadata accessor for WebEmbedDataVisualization();
    v4 = v33;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v20 = type metadata accessor for GenericDataVisualization();
        v32(v18 + *(int *)(v20 + 20), v15);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v21 = v10 + v11[9];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    v23 = v22;
    v24 = *(_QWORD *)(v22 - 8);
    v6 = v34;
    v5 = v35;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
  }

  swift_bridgeObjectRelease();
  v25 = v7 + v1[18];
  v26 = sub_1BB871E24();
  v27 = *(_QWORD *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  v28 = (v37 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + v36 + 40) & ~v36;
  v30 = v0 + v28;

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v29, v5);
  return swift_deallocObject();
}

uint64_t sub_1BB16E240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for FormatContent.Resolved() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB8705C4() - 8) + 80);
  return sub_1BB4389DC(a1, (_QWORD *)(v1 + v4), v1 + v5, v1 + ((v5 + v6 + 40) & ~v6));
}

uint64_t sub_1BB16E2C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  _BYTE v19[24];

  v3 = sub_1BB871398();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4A968C();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v19[-v9];
  v11 = v1 + qword_1ED3CF618;
  swift_beginAccess();
  sub_1BB16F210(v11, (uint64_t)v10);
  v12 = sub_1BB870A80();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v10, v12);
  sub_1BB16F1D4((uint64_t)v10);
  sub_1BB87138C();
  sub_1BB87138C();
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_blackColor);
  v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.2);

  v17 = objc_msgSend(v14, sel_clearColor);
  sub_1BB870A44();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v7, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess();
  sub_1BB16F254((uint64_t)v7, v11);
  return swift_endAccess();
}

id VideoView.videoButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1ED476878);
}

id VideoView.liveIcon.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1ED476B40);
}

id VideoView.durationView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1ED476B30);
}

id VideoView.logoView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1ED476B28);
}

id VideoView.gradientView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1ED476B38);
}

id VideoView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *VideoView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  objc_super v32;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4A968C();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[qword_1ED3CF620] = 0x4024000000000000;
  *(_QWORD *)&v5[qword_1ED3CF610] = 0x4076800000000000;
  *(_QWORD *)&v5[qword_1ED3CF608] = 0x4054000000000000;
  v14 = &v5[qword_1ED3CF618];
  v15 = sub_1BB870A80();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v17 = qword_1ED476878;
  v18 = objc_allocWithZone(MEMORY[0x1E0D977A8]);
  v19 = v5;
  *(_QWORD *)&v5[v17] = objc_msgSend(v18, sel_init);
  v20 = qword_1ED476B40;
  type metadata accessor for VideoLiveIcon();
  *(_QWORD *)&v19[v20] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v21 = qword_1ED476B30;
  type metadata accessor for VideoDurationView();
  *(_QWORD *)&v19[v21] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v22 = qword_1ED476B28;
  sub_1BB87171C();
  *(_QWORD *)&v19[v22] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v23 = qword_1ED476B38;
  sub_1BB870234();
  *(_QWORD *)&v19[v23] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);

  v32.receiver = v19;
  v32.super_class = ObjectType;
  v24 = (char *)objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  v25 = *(_QWORD *)&v24[qword_1ED476878];
  v26 = v24;
  objc_msgSend(v26, sel_addSubview_, v25);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[qword_1ED476B40]);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[qword_1ED476B30]);
  v27 = *(void **)&v26[qword_1ED476B38];
  objc_msgSend(v26, sel_addSubview_, v27);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v26[qword_1ED476B28]);
  v28 = (void *)objc_opt_self();
  v29 = v27;
  v30 = objc_msgSend(v28, sel_clearColor);
  objc_msgSend(v29, sel_setBackgroundColor_, v30);

  sub_1BB16E2C4((uint64_t)v13);
  v16(v13, 0, 1, v15);
  sub_1BB870228();

  return v26;
}

char *sub_1BB16E8BC(double a1, double a2, double a3, double a4)
{
  return VideoView.init(frame:)(a1, a2, a3, a4);
}

void sub_1BB16E8DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BB16F058();
}

Swift::Void __swiftcall VideoView.layoutSubviews()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;
  objc_super v24;
  CGRect v25;
  CGRect v26;

  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, sel_layoutSubviews);
  sub_1BB8736F0();
  objc_msgSend(v0, sel_center);
  sub_1BB8736FC();
  v1 = (void *)objc_opt_self();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1BB16EFC8;
  *(_QWORD *)(v3 + 24) = v2;
  v22 = sub_1BA4D7950;
  v23 = v3;
  v4 = MEMORY[0x1E0C809B0];
  v18 = MEMORY[0x1E0C809B0];
  v19 = 1107296256;
  v20 = sub_1BA4D7928;
  v21 = &block_descriptor_41;
  v5 = _Block_copy(&v18);
  v6 = v0;
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performWithoutAnimation_, v5);
  _Block_release(v5);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BB16F000;
  *(_QWORD *)(v9 + 24) = v8;
  v22 = sub_1BAA0239C;
  v23 = v9;
  v18 = v4;
  v19 = 1107296256;
  v20 = sub_1BA4D7928;
  v21 = &block_descriptor_13_2;
  v10 = _Block_copy(&v18);
  v11 = v6;
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performWithoutAnimation_, v10);
  _Block_release(v10);
  v12 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v12 & 1) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1BB8736F0();
  objc_msgSend(v11, sel_bounds);
  CGRectGetWidth(v25);
  objc_msgSend(v11, sel_bounds);
  CGRectGetHeight(v26);
  sub_1BB8736FC();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BB16F038;
  *(_QWORD *)(v14 + 24) = v13;
  v22 = sub_1BAA0239C;
  v23 = v14;
  v18 = MEMORY[0x1E0C809B0];
  v19 = 1107296256;
  v20 = sub_1BA4D7928;
  v21 = &block_descriptor_23;
  v15 = _Block_copy(&v18);
  v16 = v11;
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performWithoutAnimation_, v15);
  _Block_release(v15);
  v17 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if ((v17 & 1) != 0)
LABEL_7:
    __break(1u);
}

id sub_1BB16ECC0(char *a1, _QWORD *a2, _QWORD *a3)
{
  void *v4;
  id result;
  void *v6;
  CGRect v7;

  v4 = *(void **)(*(_QWORD *)&a1[*a2] + *a3);
  result = objc_msgSend(v4, sel_font);
  if (result)
  {
    v6 = result;
    objc_msgSend(result, sel_capHeight);

    objc_msgSend(v4, sel_intrinsicContentSize);
    sub_1BB8736F0();
    objc_msgSend(a1, sel_bounds);
    CGRectGetHeight(v7);
    return (id)sub_1BB8736FC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB16EDA8(char *a1)
{
  void *v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;
  CGRect v7;

  v2 = *(void **)&a1[qword_1ED476B28];
  objc_msgSend(a1, sel_bounds);
  CGRectGetWidth(v4);
  objc_msgSend(v2, sel_bounds);
  CGRectGetWidth(v5);
  objc_msgSend(a1, sel_bounds);
  CGRectGetHeight(v6);
  objc_msgSend(v2, sel_bounds);
  CGRectGetHeight(v7);
  return sub_1BB8736FC();
}

void sub_1BB16EE58(void *a1)
{
  id v1;

  v1 = a1;
  VideoView.layoutSubviews()();

}

void sub_1BB16EE8C()
{
  uint64_t v0;

  sub_1BB16F1D4(v0 + qword_1ED3CF618);

}

id VideoView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BB16EF2C(uint64_t a1)
{
  sub_1BB16F1D4(a1 + qword_1ED3CF618);

}

uint64_t sub_1BB16EFA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB16EFC8()
{
  uint64_t v0;

  return sub_1BB16ECC0(*(char **)(v0 + 16), &qword_1ED476B40, &OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label);
}

uint64_t sub_1BB16EFF0()
{
  return swift_deallocObject();
}

id sub_1BB16F000()
{
  uint64_t v0;

  return sub_1BB16ECC0(*(char **)(v0 + 16), &qword_1ED476B30, &OBJC_IVAR____TtC8NewsFeed17VideoDurationView_label);
}

uint64_t sub_1BB16F028()
{
  return swift_deallocObject();
}

uint64_t sub_1BB16F038()
{
  uint64_t v0;

  return sub_1BB16EDA8(*(char **)(v0 + 16));
}

uint64_t sub_1BB16F040()
{
  return swift_deallocObject();
}

uint64_t sub_1BB16F050()
{
  return type metadata accessor for VideoView();
}

void sub_1BB16F058()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)&v0[qword_1ED3CF620] = 0x4024000000000000;
  *(_QWORD *)&v0[qword_1ED3CF610] = 0x4076800000000000;
  *(_QWORD *)&v0[qword_1ED3CF608] = 0x4054000000000000;
  v1 = &v0[qword_1ED3CF618];
  v2 = sub_1BB870A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = qword_1ED476878;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977A8]), sel_init);
  v4 = qword_1ED476B40;
  type metadata accessor for VideoLiveIcon();
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v5 = qword_1ED476B30;
  type metadata accessor for VideoDurationView();
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v6 = qword_1ED476B28;
  sub_1BB87171C();
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v7 = qword_1ED476B38;
  sub_1BB870234();
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB16F1D4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A968C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB16F210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A968C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB16F254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A968C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t FeedPuzzleType.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedPuzzleType.debugTitle.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_name);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

id FeedPuzzleType.debugAssetHandle.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 56), sel_coverImageAssetHandle);
}

uint64_t FeedPuzzleType.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedPuzzleType.additionalFormatFeedItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 56);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9D60, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v2 + 56) = &type metadata for FeedTag;
  *(_QWORD *)(v2 + 64) = sub_1BA6A96BC();
  v3 = swift_allocObject();
  *(_QWORD *)(v2 + 32) = v3;
  v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  *(_OWORD *)(v3 + 96) = xmmword_1BB87FC90;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_BYTE *)(v3 + 160) = 0;
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 24) = v7;
  *(_QWORD *)(v3 + 32) = v1;
  *(_BYTE *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0xE000000000000000;
  *(_QWORD *)(v3 + 48) = 0;
  *(_BYTE *)(v3 + 56) = 0;
  v8 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = v8;
  return v2;
}

uint64_t sub_1BB16F450()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

void FeedPuzzleType.traits.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void FeedPuzzleType.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedPuzzleType.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA75A650(v2, v3);
}

uint64_t FeedPuzzleType.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPuzzleType.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FeedPuzzleType.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FeedPuzzleType.puzzleType.getter()
{
  return swift_unknownObjectRetain();
}

double FeedPuzzleType.init(identifier:puzzleType:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double result;

  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  result = 0.0;
  *(_OWORD *)(a4 + 24) = xmmword_1BB88C450;
  *(_QWORD *)(a4 + 40) = a1;
  *(_QWORD *)(a4 + 48) = a2;
  *(_QWORD *)(a4 + 56) = a3;
  return result;
}

uint64_t sub_1BB16F578()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_name);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

id sub_1BB16F5DC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 56), sel_coverImageAssetHandle);
}

uint64_t FeedPuzzleType.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v8 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  sub_1BA75A650(v4, v8);
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BB16F694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v8 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  sub_1BA75A650(v4, v8);
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t static FeedPuzzleType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t FeedPuzzleType.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB16FE5C();
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB16F7D0()
{
  sub_1BB8745CC();
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB16F850()
{
  sub_1BB1701AC();
  return sub_1BB86EC50();
}

uint64_t sub_1BB16F888()
{
  sub_1BB8745CC();
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB16F904(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t FeedPuzzleType.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - v4;
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - v12;
  v14 = *(void **)(v1 + 56);
  v15 = objc_msgSend(v14, sel_identifier, v11);
  if (!v15)
  {
    sub_1BB8729A0();
    v15 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleTypeID_, v15);

  if (v16)
  {
    sub_1BB86C5EC();

    v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v17(v5, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v17(v13, v5, v6);
      sub_1BB86C58C();
      v18 = objc_msgSend(v14, sel_name);
      sub_1BB8729A0();

      sub_1BB8714AC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v19 = sub_1BB8714B8();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 0, 1, v19);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_1BA7F0A80((uint64_t)v5);
  v21 = sub_1BB8714B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
}

_QWORD *sub_1BB16FBA8()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;

  v1 = *(void **)(v0 + 56);
  v2 = objc_msgSend(v1, sel_puzzlePrimaryColor);

  if (v2)
  {
    v3 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v3[2] = v5 + 1;
    v6 = &v3[2 * v5];
    v6[4] = 0xD00000000000001DLL;
    v6[5] = 0x80000001BB97C000;
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v7 = objc_msgSend(v1, sel_themeColor);

  if (v7)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v9 = v3[2];
    v8 = v3[3];
    if (v9 >= v8 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v8 > 1), v9 + 1, 1, v3);
    v3[2] = v9 + 1;
    v10 = &v3[2 * v9];
    v10[4] = 0xD00000000000001BLL;
    v10[5] = 0x80000001BB97BFE0;
  }
  v11 = objc_msgSend(v1, sel_darkStylePuzzlePrimaryColor);

  if (v11)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v13 = v3[2];
    v12 = v3[3];
    if (v13 >= v12 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v12 > 1), v13 + 1, 1, v3);
    v3[2] = v13 + 1;
    v14 = &v3[2 * v13];
    v14[4] = 0xD000000000000022;
    v14[5] = 0x80000001BB97BFB0;
  }
  v15 = objc_msgSend(v1, sel_darkStyleThemeColor);

  if (v15)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
    v17 = v3[2];
    v16 = v3[3];
    if (v17 >= v16 >> 1)
      v3 = sub_1BA6EA0D0((_QWORD *)(v16 > 1), v17 + 1, 1, v3);
    v3[2] = v17 + 1;
    v18 = &v3[2 * v17];
    v18[4] = 0xD000000000000020;
    v18[5] = 0x80000001BB97BF80;
  }
  return v3;
}

unint64_t sub_1BB16FE5C()
{
  unint64_t result;

  result = qword_1EF2BC228;
  if (!qword_1EF2BC228)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzleType, &type metadata for FeedPuzzleType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC228);
  }
  return result;
}

unint64_t sub_1BB16FEA0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA9B57C0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for FeedPuzzleType(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FeedPuzzleType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (v6 >= 0x11)
  {
    *(_QWORD *)(a1 + 24) = *v5;
    *(_QWORD *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedPuzzleType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  unint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a1 + 24);
  v6 = (_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
  {
    if (v7 >= 0x11)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA905D68(a1 + 24);
    goto LABEL_6;
  }
  if (v7 < 0x11)
  {
LABEL_6:
    *v5 = *v6;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedPuzzleType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_OWORD *)(a1 + 24);
  v6 = (_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
  {
    v7 = *(_QWORD *)(a2 + 32);
    if (v7 >= 0x11)
    {
      *(_QWORD *)(a1 + 24) = *v6;
      *(_QWORD *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA905D68((uint64_t)v5);
  }
  *v5 = *(_OWORD *)v6;
LABEL_6:
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPuzzleType(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedPuzzleType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_1BB1701AC()
{
  unint64_t result;

  result = qword_1EF2BC238;
  if (!qword_1EF2BC238)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPuzzleType, &type metadata for FeedPuzzleType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC238);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding()
{
  return &type metadata for FormatPuzzleBinding;
}

_QWORD *sub_1BB170208(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_0;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  _OWORD v46[2];
  __int128 v47;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;
  id v51;
  _OWORD v52[2];
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v42 = type metadata accessor for FormatInspectionItem(0);
  v2 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  v6 = v5;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v45[2] = a1;
  v10 = sub_1BA8A2110((void (*)(uint64_t))sub_1BB170780, (uint64_t)v45, (uint64_t)&unk_1E724FB08);
  sub_1BAF89090(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v10, v52);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  v43 = inited + 32;
  *(_QWORD *)(v11 + 48) = v53;
  v12 = v52[1];
  *(_OWORD *)(v11 + 16) = v52[0];
  *(_OWORD *)(v11 + 32) = v12;
  v13 = MEMORY[0x1E0DEE9D8];
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  v41 = v15 + v14;
  sub_1BA93EB58(a1, (uint64_t)v49);
  v48 = v6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v47);
  v17 = objc_msgSend(v51, sel_publishDate);
  if (v17)
  {
    v18 = v17;
    sub_1BB86C874();

    v19 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
  }
  else
  {
    v20 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
  }
  sub_1BA5193C4((uint64_t)v8, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BA76EAE0(&v47, v54);
  sub_1BA967B04((uint64_t)v54, (uint64_t)&v47);
  if (v48)
  {
    sub_1BA967BB4((uint64_t)&v47, (uint64_t)v46);
    sub_1BA967B60((uint64_t)v54);
    v21 = v42;
    v22 = &v4[*(int *)(v42 + 24)];
    v23 = v46[1];
    *(_OWORD *)v22 = v46[0];
    *((_OWORD *)v22 + 1) = v23;
    v24 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 0, 1, v24);
    *(_OWORD *)v4 = xmmword_1BB8F1250;
    *((_QWORD *)v4 + 2) = 0;
    *((_QWORD *)v4 + 3) = 0;
    v25 = &v4[*(int *)(v21 + 28)];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = -1;
    sub_1BA967BF0((uint64_t)&v47);
  }
  else
  {
    sub_1BA967B60((uint64_t)v54);
    v26 = v42;
    v27 = &v4[*(int *)(v42 + 24)];
    v28 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    *(_OWORD *)v4 = xmmword_1BB8F1250;
    *((_QWORD *)v4 + 2) = 0;
    *((_QWORD *)v4 + 3) = 0;
    v29 = &v4[*(int *)(v26 + 28)];
    *(_QWORD *)v29 = 0;
    *((_QWORD *)v29 + 1) = 0;
    v29[16] = -1;
  }
  sub_1BA5193C4((uint64_t)v4, v41, type metadata accessor for FormatInspectionItem);
  sub_1BA93EBE8((uint64_t)v49);
  sub_1BB383BA8(v15);
  v30 = sub_1BA97461C(v44);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x6D69542065746144, 0xE900000000000065, 0, 0, v30, v54);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v31 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v31;
  *(_QWORD *)(v31 + 48) = v55;
  v32 = v54[1];
  *(_OWORD *)(v31 + 16) = v54[0];
  *(_OWORD *)(v31 + 32) = v32;
  *(_QWORD *)&v49[0] = v13;
  v33 = 15;
  v34 = &byte_1E724FAF8;
  do
  {
    v35 = *v34++;
    LOBYTE(v46[0]) = v35;
    sub_1BB0E7DE8((uint64_t)v46);
    sub_1BB383BA8(v47);
    --v33;
  }
  while (v33);
  v36 = sub_1BA97461C(*(uint64_t *)&v49[0]);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x656C7A7A7550, 0xE600000000000000, 0, 0, v36, v49);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v37 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v37;
  *(_QWORD *)(v37 + 48) = v50;
  v38 = v49[1];
  *(_OWORD *)(v37 + 16) = v49[0];
  *(_OWORD *)(v37 + 32) = v38;
  v39 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v39;
}

uint64_t sub_1BB170780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB5188D0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1BB17079C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatTextNodeAttachmentAlignment.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x61437265746E6563;
  else
    return 0x656E696C65736162;
}

uint64_t sub_1BB170818(char *a1, char *a2)
{
  return sub_1BB7EDCB0(*a1, *a2);
}

unint64_t sub_1BB170828()
{
  unint64_t result;

  result = qword_1EF2BC240;
  if (!qword_1EF2BC240)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachmentAlignment, &type metadata for FormatTextNodeAttachmentAlignment);
    atomic_store(result, (unint64_t *)&qword_1EF2BC240);
  }
  return result;
}

uint64_t sub_1BB17086C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1708F8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB170960()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB1709E8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x656E696C65736162;
  if (*v1)
    v2 = 0x61437265746E6563;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xEF74686769654870;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1BB170A34(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB170A60();
  result = sub_1BA4D4674();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB170A60()
{
  unint64_t result;

  result = qword_1EF2BC248;
  if (!qword_1EF2BC248)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachmentAlignment, &type metadata for FormatTextNodeAttachmentAlignment);
    atomic_store(result, (unint64_t *)&qword_1EF2BC248);
  }
  return result;
}

unint64_t sub_1BB170AA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB170AC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB170AC8()
{
  unint64_t result;

  result = qword_1EF2BC250;
  if (!qword_1EF2BC250)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachmentAlignment, &type metadata for FormatTextNodeAttachmentAlignment);
    atomic_store(result, (unint64_t *)&qword_1EF2BC250);
  }
  return result;
}

unint64_t sub_1BB170B0C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA574C04();
  a1[2] = sub_1BA58FD8C();
  result = sub_1BB170828();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeAttachmentAlignment()
{
  return &type metadata for FormatTextNodeAttachmentAlignment;
}

uint64_t sub_1BB170B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (a16 < 0)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for LayeredMediaLayer(uint64_t a1)
{
  return sub_1BA8FB414(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
}

uint64_t initializeWithCopy for LayeredMediaLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_BYTE *)(a2 + 120);
  sub_1BB170B50(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 120) = v19;
  return a1;
}

uint64_t assignWithCopy for LayeredMediaLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 72);
  v27 = *(_QWORD *)(a2 + 80);
  v28 = *(_QWORD *)(a2 + 88);
  v29 = *(_QWORD *)(a2 + 96);
  v30 = *(_QWORD *)(a2 + 104);
  v31 = *(_QWORD *)(a2 + 112);
  v32 = *(_BYTE *)(a2 + 120);
  sub_1BB170B50(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31, v32);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v26;
  *(_QWORD *)(a1 + 80) = v27;
  *(_QWORD *)(a1 + 88) = v28;
  *(_QWORD *)(a1 + 96) = v29;
  *(_QWORD *)(a1 + 104) = v30;
  *(_QWORD *)(a1 + 112) = v31;
  *(_BYTE *)(a1 + 120) = v32;
  sub_1BA8FB414(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24);
  return a1;
}

uint64_t assignWithTake for LayeredMediaLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v3 = *(_QWORD *)(a2 + 112);
  v4 = *(_BYTE *)(a2 + 120);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 112);
  v17 = *(_BYTE *)(a1 + 120);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v3;
  *(_BYTE *)(a1 + 120) = v4;
  sub_1BA8FB414(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMediaLayer(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 121))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 120) & 0x7E | (*(unsigned __int8 *)(a1 + 120) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaLayer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 121) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 112) = 0;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 120) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1BB170FA4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 120) = *(_BYTE *)(result + 120) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaLayer()
{
  return &type metadata for LayeredMediaLayer;
}

uint64_t destroy for LayeredMediaLayer.Image()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayeredMediaLayer.Image(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMediaLayer.Image(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v7;
  return a1;
}

uint64_t assignWithTake for LayeredMediaLayer.Image(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMediaLayer.Image(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 113))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LayeredMediaLayer.Image(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 113) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaLayer.Image()
{
  return &type metadata for LayeredMediaLayer.Image;
}

uint64_t destroy for LayeredMediaLayer.Video()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayeredMediaLayer.Video(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMediaLayer.Video(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v6;
  v7 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v7;
  return a1;
}

uint64_t assignWithTake for LayeredMediaLayer.Video(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMediaLayer.Video()
{
  return &type metadata for LayeredMediaLayer.Video;
}

uint64_t sub_1BB171510(_QWORD *a1, double *a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  char *v64;
  double v65;
  double v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  uint64_t v76;

  v67 = a1;
  v5 = type metadata accessor for InternalErrorViewLayout.Context();
  v69 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v70 = v6;
  v71 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  v74 = a2[1];
  v75 = v7;
  v8 = a2[2];
  v9 = a2[4];
  v72 = a2[3];
  v73 = v8;
  v10 = a2[5];
  v11 = a2[6];
  v12 = a2[7];
  v49 = a2[8];
  v48 = a2[9];
  v47 = a2[10];
  v13 = a2[12];
  v46 = a2[11];
  v14 = a2[13];
  v15 = a2[14];
  v16 = a2[15];
  v53 = a2[16];
  v52 = a2[17];
  v51 = a2[18];
  v50 = a2[19];
  v57 = a2[20];
  v56 = a2[21];
  v55 = a2[22];
  v54 = a2[23];
  v61 = a2[24];
  v60 = a2[25];
  v59 = a2[26];
  v58 = a2[27];
  v17 = a2[28];
  v65 = a2[29];
  v66 = v17;
  v62 = a2[30];
  v63 = a2[31];
  v18 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_titleLabel];
  objc_msgSend(v18, sel_setNumberOfLines_, 0);
  v19 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_subtitleLabel];
  objc_msgSend(v19, sel_setNumberOfLines_, 0);
  v20 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_footerLabel];
  objc_msgSend(v20, sel_setNumberOfLines_, 0);
  v21 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_iconImageView];
  objc_msgSend(v21, sel_setFrame_, v9, v10, v11, v12);
  objc_msgSend(v18, sel_setFrame_, v13, v14, v15, v16);
  v68 = *(id *)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_errorLabel];
  objc_msgSend(v68, sel_setFrame_, v49, v48, v47, v46);
  objc_msgSend(v19, sel_setFrame_, v53, v52, v51, v50);
  objc_msgSend(v20, sel_setFrame_, v57, v56, v55, v54);
  v22 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_button];
  objc_msgSend(v22, sel_setFrame_, v61, v60, v59, v58);
  v23 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_attachmentLabel];
  objc_msgSend(v23, sel_setFrame_, v66, v65, v62, v63);
  v24 = (void *)sub_1BB872970();
  v25 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v24);

  objc_msgSend(v21, sel_setImage_, v25);
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_whiteColor);
  objc_msgSend(v21, sel_setTintColor_, v27);

  v28 = v67;
  objc_msgSend(v18, sel_setAttributedText_, v67[3]);
  objc_msgSend(v68, sel_setAttributedText_, v28[4]);
  v29 = v19;
  v30 = (uint64_t)v28;
  objc_msgSend(v29, sel_setAttributedText_, v28[5]);
  objc_msgSend(v20, sel_setAttributedText_, v28[6]);
  v31 = v28[8];
  v68 = v23;
  objc_msgSend(v23, sel_setAttributedText_, v31);
  objc_msgSend(v22, sel_setAttributedTitle_forState_, v28[7], 0);
  v32 = objc_msgSend(v26, sel_whiteColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v32);

  v33 = objc_msgSend(v22, sel_layer);
  objc_msgSend(v33, sel_setCornerRadius_, 14.0);

  v34 = objc_msgSend(v22, sel_layer);
  objc_msgSend(v34, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  if (qword_1ED3D2058 != -1)
    swift_once();
  objc_msgSend(a3, sel_setBackgroundColor_, qword_1ED476CA8);
  v35 = swift_allocObject();
  v64 = a3;
  swift_weakInit();
  v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v37 = v71;
  sub_1BB172810((uint64_t)v28, v71);
  v38 = (*(unsigned __int8 *)(v69 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  v39 = (v38 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v35;
  sub_1BA5193C4(v37, v40 + v38, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
  *(_QWORD *)(v40 + v39) = v36;

  swift_release();
  v41 = (void *)sub_1BB86F898();
  v42 = swift_allocObject();
  v43 = v76;
  swift_weakInit();
  sub_1BB172810(v30, v37);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v42;
  sub_1BA5193C4(v37, v44 + v38, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);

  swift_release();
  return sub_1BB7D9DCC(*(void **)&v64[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_debugButton], *(_QWORD *)(v30 + 16), *(_QWORD *)(v43 + 16), v75, v74, v73, v72);
}

uint64_t sub_1BB171BF8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  void (*v51)(uint64_t *, _QWORD, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v89 = sub_1BB86FE2C();
  v5 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C0530, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB74E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v90 = (char *)&v77 - v10;
  sub_1BA4B07F0(0, &qword_1EF2CC0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8], v8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v77 - v12;
  sub_1BA4B07F0(0, qword_1ED3B0048, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, v8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v77 - v15);
  v17 = type metadata accessor for DebugGroupLayoutKey();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v91 = result;
  if (result)
  {
    v94 = a2;
    sub_1BB27CA04(v16);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      swift_release();
      return sub_1BA5C699C((uint64_t)v16, qword_1ED3B0048, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
    }
    else
    {
      v88 = v5;
      v78 = a3 + 16;
      sub_1BA5193C4((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
      v22 = &v20[*(int *)(v17 + 24)];
      v23 = *((_QWORD *)v22 + 4);
      v24 = *((_QWORD *)v22 + 5);
      v92 = v22;
      v93 = v22 + 8;
      __swift_project_boxed_opaque_existential_1((_QWORD *)v22 + 1, v23);
      (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v24 + 64))(&v96, v23, v24);
      v25 = v98;
      if (v98)
      {
        v26 = v99;
        __swift_project_boxed_opaque_existential_1(&v96, v98);
        v81 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
      }
      else
      {
        sub_1BA554698((uint64_t)&v96);
        v81 = 0;
      }
      v85 = v7;
      v87 = v13;
      v27 = *(int *)(v17 + 28);
      v86 = v20;
      v28 = (uint64_t)&v20[v27];
      LOBYTE(v96) = v20[v27 + *(int *)(type metadata accessor for GroupLayoutContext() + 44)];
      FeedKind.rawValue.getter();
      sub_1BB872A24();
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(v91 + 16);
      v30 = *(_QWORD *)(v29 + 16);
      v82 = *(_QWORD *)(v29 + 24);
      sub_1BB8714A0();
      v84 = v30;
      swift_unknownObjectRetain();
      v83 = sub_1BB871464();
      if (qword_1EF2A7070 != -1)
        swift_once();
      v31 = sub_1BB86F9A0();
      v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EF2BC8A8);
      v33 = *(_QWORD *)(v31 - 8);
      v34 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v90, v32, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v31);
      v96 = 0;
      v97 = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v96 = 0xD000000000000010;
      v97 = 0x80000001BB97C0C0;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v35);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v36);
      sub_1BB872AFC(v37);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v38);
      sub_1BB872AFC(&v100);
      swift_bridgeObjectRelease();
      v81 = v96;
      v80 = v97;
      sub_1BA4B07F0(0, &qword_1EF2C0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB79E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v39 = sub_1BB86FC28();
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(_QWORD *)(v40 + 72);
      v42 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1BB8827B0;
      v79 = v43;
      v44 = (uint64_t *)(v43 + v42);
      v45 = swift_allocObject();
      v46 = v78;
      swift_beginAccess();
      v47 = (void *)MEMORY[0x1BCCE5D40](v46);
      if (v47)
      {
        v48 = v47;
        v49 = objc_msgSend(v47, sel_window);

      }
      else
      {
        v49 = 0;
      }
      v50 = v88;
      *(_QWORD *)(v45 + 16) = v49;
      *v44 = v45;
      v51 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v40 + 104);
      v51(v44, *MEMORY[0x1E0DB79B8], v39);
      v52 = (_QWORD *)swift_allocObject();
      if (qword_1ED3BB468 != -1)
        swift_once();
      v53 = sub_1BB86EB84();
      __swift_project_value_buffer(v53, (uint64_t)qword_1ED3B8FC8);
      v52[2] = sub_1BB86EB24();
      v52[3] = v54;
      v52[4] = 0xD000000000000013;
      v52[5] = 0x80000001BB97C0E0;
      *(uint64_t *)((char *)v44 + v41) = (uint64_t)v52;
      v51((uint64_t *)((char *)v44 + v41), *MEMORY[0x1E0DB79C0], v39);
      v55 = type metadata accessor for InternalErrorViewLayout.Context();
      sub_1BB77E2D0((uint64_t)v94 + *(int *)(v55 + 48), 1, (uint64_t *)((char *)v44 + 2 * v41));
      static RadarAttachment.feedGroup(_:)(v93, (uint64_t *)((char *)v44 + 3 * v41));
      static RadarAttachment.feedGroupLayoutContext(_:)(v28, (uint64_t *)((char *)v44 + 4 * v41));
      v56 = *(_QWORD *)(v91 + 24);
      v57 = MEMORY[0x1E0DEE9D8];
      v95 = MEMORY[0x1E0DEE9D8];
      v58 = *(_QWORD *)(v56 + 16);
      if (v58)
      {
        v59 = (_QWORD *)(v56 + 32);
        v78 = v56;
        swift_bridgeObjectRetain_n();
        v60 = v93;
        do
        {
          v63 = v59[3];
          v64 = v59[4];
          v94 = __swift_project_boxed_opaque_existential_1(v59, v63);
          v65 = v92;
          __swift_project_boxed_opaque_existential_1(v60, *((_QWORD *)v92 + 4));
          v66 = sub_1BB86DEE8();
          v68 = v67;
          v70 = *((_QWORD *)v65 + 4);
          v69 = *((_QWORD *)v65 + 5);
          __swift_project_boxed_opaque_existential_1(v60, v70);
          (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v69 + 64))(&v96, v70, v69);
          v71 = v98;
          if (v98)
          {
            v72 = v99;
            __swift_project_boxed_opaque_existential_1(&v96, v98);
            v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 8))(v71, v72);
            v71 = v73;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
          }
          else
          {
            sub_1BA554698((uint64_t)&v96);
            v61 = 0;
          }
          v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8))(v66, v68, v61, v71, v63, v64);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BB386C94(v62);
          v59 += 5;
          --v58;
        }
        while (v58);
        swift_bridgeObjectRelease_n();
        v57 = v95;
        v50 = v88;
      }
      swift_getObjectType();
      v96 = v79;
      sub_1BB386C94(v57);
      (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v85, *MEMORY[0x1E0DB7E18], v89);
      v74 = (uint64_t)v87;
      sub_1BB871320();
      v75 = sub_1BB87132C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 0, 1, v75);
      sub_1BB86FF70();
      v76 = (uint64_t)v86;
      sub_1BA5C699C(v74, &qword_1EF2CC0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8]);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      return sub_1BB172C54(v76);
    }
  }
  return result;
}

uint64_t sub_1BB1724F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD v19[5];

  sub_1BA4B07F0(0, qword_1ED3B0048, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (_QWORD *)((char *)v19 - v4);
  v6 = type metadata accessor for DebugGroupLayoutKey();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    sub_1BB27CA04(v5);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_release();
      return sub_1BA5C699C((uint64_t)v5, qword_1ED3B0048, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
      v19[2] = *(_QWORD *)(*(_QWORD *)(v11 + 16) + 24);
      v19[1] = swift_getObjectType();
      v12 = qword_1ED3A4078;
      swift_unknownObjectRetain();
      if (v12 != -1)
        swift_once();
      sub_1BA4B07F0(0, &qword_1EF2C0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB79E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v13 = *(_QWORD *)(sub_1BB86FC28() - 8);
      v14 = *(_QWORD *)(v13 + 72);
      v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BB87FC80;
      v17 = (uint64_t *)(v16 + v15);
      v18 = type metadata accessor for InternalErrorViewLayout.Context();
      sub_1BB77E2D0(a2 + *(int *)(v18 + 48), 1, v17);
      static RadarAttachment.feedGroup(_:)(&v9[*(int *)(v6 + 24) + 8], (uint64_t *)((char *)v17 + v14));
      static RadarAttachment.feedGroupLayoutContext(_:)((uint64_t)&v9[*(int *)(v6 + 28)], (uint64_t *)((char *)v17 + 2 * v14));
      v19[4] = v16;
      sub_1BB86FF70();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_1BB172C54((uint64_t)v9);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB172794()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB1727C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB1727EC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB172810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InternalErrorViewLayout.Context();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB172854()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for InternalErrorViewLayout.Context();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  v3 = v0 + v2 + *(int *)(v1 + 48);
  type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + 16) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB074B08();
    v5 = v3 + *(int *)(v4 + 80);
    __swift_destroy_boxed_opaque_existential_1(v5 + 8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
    v7 = sub_1BB86D8A0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB172A18()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for InternalErrorViewLayout.Context() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1BB171BF8(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + v2), *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB172A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for InternalErrorViewLayout.Context();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = (id *)(v0 + ((v2 + 24) & ~v2));
  swift_bridgeObjectRelease();
  swift_release();

  v4 = (char *)v3 + *(int *)(v1 + 48);
  type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    if (*((_QWORD *)v4 + 2) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB074B08();
    v6 = &v4[*(int *)(v5 + 80)];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v6 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = &v6[*(int *)(type metadata accessor for GroupLayoutBindingContext() + 52)];
    v8 = sub_1BB86D8A0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB172C14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InternalErrorViewLayout.Context() - 8) + 80);
  return sub_1BB1724F0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1BB172C54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugGroupLayoutKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB172C90()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB172CB4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatArticleList.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleList.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t FormatArticleList.init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t FormatArticleList.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatArticleList.init(from:)(a1);
  return v2;
}

_QWORD *FormatArticleList.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v3 = v1;
  v14[1] = *v1;
  sub_1BB1730A0(0, &qword_1EF2BC258, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB172EE4();
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v11 = sub_1BB874098();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v3[2] = v11;
    v3[3] = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

unint64_t sub_1BB172EE4()
{
  unint64_t result;

  result = qword_1EF2BC260;
  if (!qword_1EF2BC260)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F16BC, &type metadata for FormatArticleList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC260);
  }
  return result;
}

uint64_t sub_1BB172F28()
{
  sub_1BB172EE4();
  return sub_1BB874710();
}

uint64_t sub_1BB172F50()
{
  sub_1BB172EE4();
  return sub_1BB87471C();
}

uint64_t FormatArticleList.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatArticleList.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatArticleList.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB1730A0(0, &qword_1EF2BC268, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB172EE4();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1BB1730A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB172EE4();
    v7 = a3(a1, &type metadata for FormatArticleList.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *sub_1BB1730FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatArticleList.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB173150(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB1730A0(0, &qword_1EF2BC268, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB172EE4();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t FormatArticleList.debugDescription.getter()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  return 0xD00000000000001ELL;
}

uint64_t sub_1BB1732DC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB173360((unint64_t *)&unk_1EF2B1C48, (uint64_t)&protocol conformance descriptor for FormatArticleList);
  a1[2] = sub_1BB173360((unint64_t *)&unk_1EF2B1C98, (uint64_t)&protocol conformance descriptor for FormatArticleList);
  result = sub_1BB173360(&qword_1EF2BC270, (uint64_t)&protocol conformance descriptor for FormatArticleList);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatArticleList()
{
  return objc_opt_self();
}

uint64_t sub_1BB173360(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatArticleList();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB17339C()
{
  return FormatArticleList.debugDescription.getter();
}

uint64_t method lookup function for FormatArticleList()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatArticleList.__allocating_init(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FormatArticleList.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for FormatArticleList.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB173428 + 4 * byte_1BB8F14F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB173448 + 4 * byte_1BB8F14F5[v4]))();
}

_BYTE *sub_1BB173428(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB173448(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB173450(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB173458(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB173460(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB173468(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatArticleList.CodingKeys()
{
  return &type metadata for FormatArticleList.CodingKeys;
}

unint64_t sub_1BB173488()
{
  unint64_t result;

  result = qword_1EF2BC278;
  if (!qword_1EF2BC278)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1694, &type metadata for FormatArticleList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC278);
  }
  return result;
}

unint64_t sub_1BB1734D0()
{
  unint64_t result;

  result = qword_1EF2BC280;
  if (!qword_1EF2BC280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1604, &type metadata for FormatArticleList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC280);
  }
  return result;
}

unint64_t sub_1BB173518()
{
  unint64_t result;

  result = qword_1EF2BC288;
  if (!qword_1EF2BC288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F162C, &type metadata for FormatArticleList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC288);
  }
  return result;
}

void sub_1BB17355C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB1735C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  if (!*(_QWORD *)(*(_QWORD *)(v6 + *(int *)(type metadata accessor for FormatContentSubgroupFilterContext() + 24))
                  + 16))
    goto LABEL_5;
  v2 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BA6E35A8(v2, v1);
  if ((v3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v4 = 0;
    return v4 & 1;
  }
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  v4 = sub_1BB4A4D10(v6);
  sub_1BA7F4208();
  return v4 & 1;
}

void static FormatContentSubgroupFilter.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BB1739F4@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  char v4;

  if (a1 >> 60)
  {
    v4 = 0;
  }
  else
  {
    if (*(_QWORD *)(v1 + 16) != *(_QWORD *)(a1 + 16) || *(_QWORD *)(v1 + 24) != *(_QWORD *)(a1 + 24))
      return sub_1BB874398();
    v4 = 1;
  }
  return v4 & 1;
}

uint64_t sub_1BB173B8C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB173BE8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB173C48()
{
  sub_1BA817BF8();
  return sub_1BB874710();
}

uint64_t sub_1BB173C70()
{
  sub_1BA817BF8();
  return sub_1BB87471C();
}

uint64_t sub_1BB173C98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BA824310(*a1);
  v5 = v4;
  if (v3 == sub_1BA824310(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB173D20()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA824310(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB173D80()
{
  unsigned __int8 *v0;

  sub_1BA824310(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB173DC0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA824310(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB173E1C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB173E40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB173E68()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB173E8C()
{
  unint64_t result;

  result = qword_1EF2BC290;
  if (!qword_1EF2BC290)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterPrecededBy, &type metadata for FormatContentSubgroupFilterPrecededBy);
    atomic_store(result, (unint64_t *)&qword_1EF2BC290);
  }
  return result;
}

unint64_t sub_1BB173ED0()
{
  unint64_t result;

  result = qword_1ED3AA770[0];
  if (!qword_1ED3AA770[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterRequirements, &type metadata for FormatContentSubgroupFilterRequirements);
    atomic_store(result, qword_1ED3AA770);
  }
  return result;
}

uint64_t sub_1BB173F14()
{
  return swift_deallocObject();
}

unint64_t sub_1BB173F24()
{
  unint64_t result;

  result = qword_1EF2BC298;
  if (!qword_1EF2BC298)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterPrecededBy, &type metadata for FormatContentSubgroupFilterPrecededBy);
    atomic_store(result, (unint64_t *)&qword_1EF2BC298);
  }
  return result;
}

unint64_t sub_1BB173F68()
{
  unint64_t result;

  result = qword_1ED3AA768;
  if (!qword_1ED3AA768)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterRequirements, &type metadata for FormatContentSubgroupFilterRequirements);
    atomic_store(result, (unint64_t *)&qword_1ED3AA768);
  }
  return result;
}

unint64_t sub_1BB173FAC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA824004();
  a1[2] = sub_1BA824048();
  result = sub_1BB173FE0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB173FE0()
{
  unint64_t result;

  result = qword_1EF2BC2A0;
  if (!qword_1EF2BC2A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilter, &type metadata for FormatContentSubgroupFilter);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilter()
{
  return &type metadata for FormatContentSubgroupFilter;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilter.CodingType()
{
  return &type metadata for FormatContentSubgroupFilter.CodingType;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupFilter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB174094 + 4 * byte_1BB8F1751[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB1740C8 + 4 * byte_1BB8F174C[v4]))();
}

uint64_t sub_1BB1740C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1740D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1740D8);
  return result;
}

uint64_t sub_1BB1740E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1740ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB1740F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1740F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilter.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilter.CodingKeys;
}

unint64_t sub_1BB174118()
{
  unint64_t result;

  result = qword_1EF2BC2A8;
  if (!qword_1EF2BC2A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1950, &type metadata for FormatContentSubgroupFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2A8);
  }
  return result;
}

unint64_t sub_1BB174160()
{
  unint64_t result;

  result = qword_1EF2BC2B0;
  if (!qword_1EF2BC2B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F19F0, &type metadata for FormatContentSubgroupFilter.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2B0);
  }
  return result;
}

uint64_t sub_1BB1741A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB1741E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB1741E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CCC70)
  {
    sub_1BAFD87F4();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CCC70);
  }
}

uint64_t sub_1BB17423C(uint64_t a1)
{
  uint64_t v2;

  sub_1BB1741E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB17428C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;

  v4 = *a2;
  v3 = a2[1];
  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
    v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state + 8);
    if (!v9 || (*v8 == v4 ? (v10 = v9 == v3) : (v10 = 0), !v10 && (sub_1BB874398() & 1) == 0))
    {
      *v8 = v4;
      v8[1] = v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BB507664();
    }

  }
}

uint64_t sub_1BB17434C()
{
  return sub_1BB86DF84();
}

uint64_t sub_1BB1744F8(_QWORD *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t result;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = (_QWORD *)*a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 + 56);
  v7 = &a3[OBJC_IVAR____TtC8NewsFeed15FormatStateView_identifier];
  *(_QWORD *)v7 = *(_QWORD *)(v5 + 48);
  *((_QWORD *)v7 + 1) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BB8736F0();
  swift_beginAccess();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 56));
  v8 = *(_QWORD *)(a2 + 24);
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v41 = a3;
  v13 = &a3[OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews];
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v15 = 0;
  v16 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    v17 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v18 = v17 | (v15 << 6);
LABEL_21:
    v22 = *(_QWORD *)v13;
    if (*(_QWORD *)(*(_QWORD *)v13 + 16))
    {
      v23 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v18);
      v24 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18);
      v26 = *v23;
      v25 = v23[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v27 = sub_1BA6E35A8(v26, v25);
      if ((v28 & 1) != 0)
      {
        v29 = *(id *)(*(_QWORD *)(v22 + 56) + 8 * v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_setFrame_, *(double *)(*(_QWORD *)(v24 + 32) + 16), *(double *)(*(_QWORD *)(v24 + 32) + 24), *(double *)(*(_QWORD *)(v24 + 32) + 32), *(double *)(*(_QWORD *)(v24 + 32) + 40));

        result = swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
    }
  }
  v19 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_32:
    __break(1u);
    return result;
  }
  if (v19 >= v16)
    goto LABEL_24;
  v20 = *(_QWORD *)(v9 + 8 * v19);
  ++v15;
  if (v20)
    goto LABEL_20;
  v15 = v19 + 1;
  if (v19 + 1 >= v16)
    goto LABEL_24;
  v20 = *(_QWORD *)(v9 + 8 * v15);
  if (v20)
    goto LABEL_20;
  v15 = v19 + 2;
  if (v19 + 2 >= v16)
    goto LABEL_24;
  v20 = *(_QWORD *)(v9 + 8 * v15);
  if (v20)
  {
LABEL_20:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
    goto LABEL_21;
  }
  v21 = v19 + 3;
  if (v21 < v16)
  {
    v20 = *(_QWORD *)(v9 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v15 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_32;
        if (v15 >= v16)
          goto LABEL_24;
        v20 = *(_QWORD *)(v9 + 8 * v15);
        ++v21;
        if (v20)
          goto LABEL_20;
      }
    }
    v15 = v21;
    goto LABEL_20;
  }
LABEL_24:
  swift_release();
  v30 = v43[9];
  v32 = *(_QWORD *)(v42 + 16);
  v31 = *(_QWORD *)(v42 + 24);
  if (v30 < 0)
  {
    v33 = v30 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    v36 = v41;
    v35 = v31;
  }
  else
  {
    swift_retain_n();
    sub_1BB248B88(v32, v31, &v46);
    v46 = v48;
    v47 = v49;
    sub_1BB1749D4();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v33 = sub_1BB86DF90();
    sub_1BA86DA90(v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v30;
    v35 = v31;
    sub_1BA86DA90(v34);
    v36 = v41;
  }
  sub_1BB86DF9C();
  v37 = v47;
  v38 = &v36[OBJC_IVAR____TtC8NewsFeed15FormatStateView_state];
  *(_QWORD *)v38 = v46;
  *((_QWORD *)v38 + 1) = v37;
  swift_bridgeObjectRelease();
  sub_1BB507664();
  sub_1BB86DFA8();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for FormatLayoutViewToken();
  sub_1BB86E4B8();
  swift_release();
  swift_release();
  v39 = v43[10];
  v40 = v43[11];
  v44[0] = v43[9];
  v44[1] = v39;
  v44[2] = v40;
  sub_1BAA41258(v44[0]);
  swift_retain();
  sub_1BAA41654(v32, v35, (uint64_t)sub_1BB1749CC, v33, &v46);
  swift_release();
  sub_1BA86DA90(v44[0]);
  sub_1BA678A04((uint64_t)&v46, (uint64_t)v44);
  if (v45)
  {
    __swift_project_boxed_opaque_existential_1(v44, v45);
    sub_1BB86DCF0();
    swift_release();
    sub_1BAACC92C((uint64_t)&v46);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  else
  {
    sub_1BAACC92C((uint64_t)&v46);
    swift_release();
    return sub_1BAACC92C((uint64_t)v44);
  }
}

uint64_t sub_1BB1749A0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB1749C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1BB17428C(a1, a2, v2);
}

uint64_t sub_1BB1749CC()
{
  return sub_1BB17434C();
}

void sub_1BB1749D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B07D8)
  {
    sub_1BB174A34();
    v0 = sub_1BB86DFB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B07D8);
  }
}

unint64_t sub_1BB174A34()
{
  unint64_t result;

  result = qword_1ED3B7390;
  if (!qword_1ED3B7390)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineEvent, &type metadata for FormatStateMachineEvent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7390);
  }
  return result;
}

uint64_t FormatGroupNodeRenderer.render<A>(context:layoutAttributes:view:auxViews:traitCollection:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1BB174AAC(a2, a3, a4, a5);
}

uint64_t FormatGroupNodeRenderer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FormatGroupNodeRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BB174AAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v16[2];
  char v17;

  v7 = *(_QWORD *)(a1 + 200);
  sub_1BB87372C();
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a1 + 128));
  if (v7)
  {
    objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, *(_BYTE *)(v7 + 178) & 1);
    v8 = *(_QWORD *)(a1 + 136);
    v10 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v7 + 72);
    v11 = *(_QWORD *)(v7 + 80);
    v12 = *(_BYTE *)(v7 + 88);
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v9, v11, v12);
  }
  else
  {
    objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, 0);
    v9 = 0;
    v11 = 0;
    v10 = 0;
    v8 = *(_QWORD *)(a1 + 136);
    v12 = -2;
  }
  v13 = objc_msgSend(a2, sel_layer);
  v16[0] = v9;
  v16[1] = v11;
  v17 = v12;
  sub_1BA67832C(v8, v13, a4, v10, v16);

  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v9, v11, v12);
  if (v7)
  {
    v7 = *(_QWORD *)(v7 + 56);
    swift_bridgeObjectRetain();
  }
  v16[0] = v7;
  sub_1BA6786EC(v8, a2, v16, a3);
  return swift_bridgeObjectRelease();
}

uint64_t method lookup function for FormatGroupNodeRenderer()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for FeedCursorEntity()
{
  return &type metadata for FeedCursorEntity;
}

uint64_t sub_1BB174C58@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t (*v50)(uint64_t, uint64_t, unint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t result;
  char *v104;
  char *v105;
  char *v106;
  _QWORD *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  unint64_t v123;
  unint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  char *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t, uint64_t, uint64_t);
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;

  v147 = a2;
  v161 = a1;
  v141 = a3;
  v146 = *(_QWORD *)a1;
  v143 = sub_1BB86DFF0();
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v155 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  v154 = (char *)&v141 - v5;
  sub_1BA50CAF0(0, &qword_1ED39A6E0, &qword_1ED39A6D8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0]);
  MEMORY[0x1E0C80A78](v6);
  v160 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v145 = (char *)&v141 - v9;
  sub_1BA50CAF0(0, &qword_1ED39A6F0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8]);
  MEMORY[0x1E0C80A78](v10);
  v157 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v144 = (char *)&v141 - v13;
  sub_1BA841114();
  MEMORY[0x1E0C80A78](v14);
  v162 = (char *)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v159 = (char *)&v141 - v17;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED39A6C0, (void (*)(uint64_t))sub_1BA841074);
  MEMORY[0x1E0C80A78](v18);
  v166 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v141 - v21;
  sub_1BA4A3FB4(0, &qword_1ED39A6B0, sub_1BA841178);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v141 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v141 - v27;
  v29 = MEMORY[0x1E0DEA968];
  v30 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v141 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v141 - v35;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v29, v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v38 = v37;
  v151 = v37;
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v152 = v39;
  v149 = v36;
  v39(v36, 1, 1, v37);
  v150 = v33;
  v39(v33, 1, 1, v38);
  v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8];
  sub_1BA50CAA8(0, &qword_1ED39A708, v29, v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  v163 = v41;
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v29, v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  v153 = v42;
  swift_allocObject();
  v164 = sub_1BB86F058();
  sub_1BA841178(0);
  v44 = v43;
  v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v45(v28, 1, 1, v43);
  v45(v25, 1, 1, v44);
  sub_1BA50CC40(0, &qword_1ED39A700, v40);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA84122C(0);
  swift_allocObject();
  v165 = sub_1BB86F058();
  v45(v28, 1, 1, v44);
  v45(v25, 1, 1, v44);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v173 = sub_1BB86F058();
  sub_1BA841074();
  v47 = v46;
  v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
  v48(v22, 1, 1, v46);
  v49 = v166;
  v48(v166, 1, 1, v47);
  v50 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8];
  sub_1BA5AA4C4(0, (unint64_t *)&qword_1ED39A710, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA84118C();
  swift_allocObject();
  v167 = sub_1BB86F058();
  v48(v22, 1, 1, v47);
  v48(v49, 1, 1, v47);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v156 = sub_1BB86F058();
  v51 = v151;
  v52 = v152;
  v152(v149, 1, 1, v151);
  v52(v150, 1, 1, v51);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v158 = sub_1BB86F058();
  sub_1BA50CB54(0, &qword_1ED3A3C40, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
  v54 = v53;
  v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v56 = v159;
  v55(v159, 1, 1, v53);
  v57 = v162;
  v55(v162, 1, 1, v54);
  sub_1BA50CB54(0, &qword_1ED3A3CB0, v50);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA50CB54(0, &qword_1ED3A3BD8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v166 = (char *)sub_1BB86F058();
  v55(v56, 1, 1, v54);
  v55(v57, 1, 1, v54);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v162 = (char *)sub_1BB86F058();
  v58 = MEMORY[0x1E0DEB418];
  v59 = MEMORY[0x1E0DB2EE8];
  sub_1BA50CAA8(0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v61 = v60;
  v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56);
  v63 = v144;
  v62(v144, 1, 1, v60);
  v64 = v157;
  v62(v157, 1, 1, v61);
  sub_1BA50CAA8(0, &qword_1ED39A720, v58, v59, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A688, v58, v59, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v159 = (char *)sub_1BB86F058();
  v62(v63, 1, 1, v61);
  v62(v64, 1, 1, v61);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v65 = sub_1BB86F058();
  v66 = MEMORY[0x1E0DEAFA0];
  v67 = MEMORY[0x1E0DB2ED0];
  sub_1BA50CAA8(0, &qword_1ED39A6D8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v69 = v68;
  v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56);
  v70(v145, 1, 1, v68);
  v70(v160, 1, 1, v69);
  sub_1BA50CAA8(0, &qword_1ED39A718, v66, v67, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A680, v66, v67, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v71 = sub_1BB86F058();
  v72 = v151;
  v73 = v152;
  v152(v149, 1, 1, v151);
  v73(v150, 1, 1, v72);
  swift_allocObject();
  swift_retain();
  sub_1BB86F214();
  swift_allocObject();
  v163 = sub_1BB86F058();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v157 = (char *)v65;
  swift_retain();
  v160 = (char *)v71;
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v74 = *((_QWORD *)v161 + 3);
  v171 = *((_QWORD *)v161 + 2);
  v172 = v74;
  swift_bridgeObjectRetain();
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v150 = (char *)sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v75 = &v161[qword_1ED476780];
  v76 = sub_1BB86C8B0();
  v77 = *(_QWORD *)(v76 - 8);
  v153 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  v78 = v154;
  v151 = v76;
  v153(v154, v75, v76);
  v152 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
  v152(v78, 0, 1, v76);
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v79 = v154;
  v80 = v151;
  v153(v154, &v161[qword_1ED4767C0], v151);
  v152(v79, 0, 1, v80);
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v154 = (char *)sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v81 = sub_1BB6386BC();
  if (v81)
  {
    v82 = *(_QWORD *)(v81 + 16);
    v83 = *(_QWORD *)(v81 + 24);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    v82 = 0;
    v83 = 1;
  }
  v171 = v82;
  v172 = v83;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v154 = (char *)sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v84 = &v161[*(_QWORD *)(*(_QWORD *)v161 + 264)];
  swift_beginAccess();
  if (*(_QWORD *)v84)
  {
    v85 = sub_1BB63B804();
    v86 = swift_bridgeObjectRetain();
  }
  else
  {
    v85 = 0;
    v86 = 1;
  }
  v168 = v85;
  v169 = v86;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v154 = (char *)sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v87 = swift_release();
  v91 = FeedCursor.rootCursor.getter(v87, v88, v89, v90);
  v93 = v91[2];
  v92 = v91[3];
  swift_bridgeObjectRetain();
  swift_release();
  v168 = v93;
  v169 = v92;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v94 = v161;
  v168 = *(_QWORD *)&v161[qword_1ED4767F0];
  LOBYTE(v169) = 0;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v168 = *(_QWORD *)((char *)v94 + qword_1ED476798);
  LOBYTE(v169) = 0;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v95 = swift_release();
  LOBYTE(v168) = FeedCursor.reachedEnd.getter(v95, v96, v97, v98) & 1;
  sub_1BB86F238();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86F064();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v99 = 8 * v161[32];
  v100 = *(_QWORD *)&aActive_3[v99];
  v101 = *(_QWORD *)&aRepooledexpand[v99 + 16];
  v168 = v100;
  v169 = v101;
  sub_1BB86F238();
  swift_release();
  sub_1BB86E2CC();
  swift_allocObject();
  v154 = (char *)sub_1BB86BD40();
  v102 = v148;
  sub_1BB86E2B4();
  if (v102)
  {
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    return swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v104 = v166;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v153 = 0;
    v152 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1BB86F064();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v168 = 0x2D617461642E63;
    v169 = 0xE700000000000000;
    v105 = v104;
    v106 = v161;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v107);
    swift_bridgeObjectRelease();
    v108 = v168;
    v109 = v169;
    v110 = *((_QWORD *)v106 + 2);
    v111 = v106;
    v112 = v105;
    v113 = *((_QWORD *)v111 + 3);
    swift_bridgeObjectRetain();
    v114 = sub_1BB86DFD8();
    v168 = sub_1BAA8469C(v108, v109, v110, v113, v114, v115);
    v169 = v116;
    v170 = v117;
    sub_1BA4CDF6C(0, &qword_1ED3A10E8, (uint64_t (*)(void))sub_1BA5C6DD8, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E0DB29F0]);
    v151 = v118;
    swift_allocObject();
    v168 = sub_1BB86F0E8();
    sub_1BB86F238();
    swift_release();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v152 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1BB86F064();
    swift_release();
    v119 = v161;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v120 = v165;
    swift_release();
    v121 = v164;
    swift_release();
    v168 = 0x2D6C6F6F702E63;
    v169 = 0xE700000000000000;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v122);
    swift_bridgeObjectRelease();
    v123 = v169;
    v150 = (char *)v168;
    v124 = *((_QWORD *)v119 + 3);
    v149 = (char *)*((_QWORD *)v119 + 2);
    swift_bridgeObjectRetain();
    v168 = sub_1BB86DFE4();
    sub_1BB86E5B4();
    sub_1BA4A2870(&qword_1ED39A568, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4370], MEMORY[0x1E0DB4378]);
    v125 = v153;
    v126 = sub_1BB86BD28();
    v153 = v125;
    if (v125)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v155, v143);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      v128 = v126;
      v129 = v127;
      swift_release();
      v168 = sub_1BAA8469C((uint64_t)v150, v123, (uint64_t)v149, v124, v128, v129);
      v169 = v130;
      v170 = v131;
      swift_allocObject();
      v168 = sub_1BB86F0E8();
      sub_1BB86F238();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v155, v143);
      swift_release();
      swift_release();
      swift_release();
      v132 = v159;
      swift_release();
      v133 = v162;
      swift_release();
      swift_release();
      v134 = v158;
      swift_release();
      v135 = v156;
      swift_release();
      v136 = v167;
      swift_release();
      v137 = v173;
      swift_release();
      swift_release();
      result = swift_release();
      v138 = v141;
      *v141 = v121;
      v138[1] = v120;
      v138[2] = v137;
      v138[3] = v136;
      v138[4] = v135;
      v138[5] = v134;
      v138[6] = (uint64_t)v112;
      v138[7] = (uint64_t)v133;
      v139 = v157;
      v138[8] = (uint64_t)v132;
      v138[9] = (uint64_t)v139;
      v140 = v163;
      v138[10] = (uint64_t)v160;
      v138[11] = v140;
    }
  }
  return result;
}

uint64_t sub_1BB176D7C()
{
  if (qword_1EF2A6C98 != -1)
    swift_once();
  qword_1ED476390 = qword_1EF2AC7F0;
  *(_QWORD *)algn_1ED476398 = *(_QWORD *)algn_1EF2AC7F8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB176DCC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB176DF4 + 4 * byte_1BB8F1B50[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1BB176DF4()
{
  return 0x4464657461657263;
}

uint64_t sub_1BB176E28()
{
  return 0x7543746E65726170;
}

uint64_t sub_1BB176E4C()
{
  return 0x737275437478656ELL;
}

unint64_t sub_1BB176E78()
{
  return 0xD000000000000011;
}

unint64_t sub_1BB176EB4()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB176ED0()
{
  return 0x756A6441746F6C73;
}

uint64_t sub_1BB176EF4()
{
  return 0x4564656863616572;
}

uint64_t sub_1BB176F10()
{
  return 1684957547;
}

uint64_t sub_1BB176F20(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2BC2E0, (uint64_t (*)(void))sub_1BB178E34, (uint64_t)&type metadata for FeedCursorEntity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB178E34();
  sub_1BB8746C8();
  v14 = *v3;
  v13 = 0;
  sub_1BA50CAA8(0, &qword_1ED39A670, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  sub_1BAA7CFE0();
  sub_1BB8741AC();
  if (!v2)
  {
    v12 = v3;
    v14 = v3[1];
    v13 = 1;
    sub_1BA84122C(0);
    sub_1BA4A2870((unint64_t *)&qword_1EF2AD4B0, (uint64_t (*)(uint64_t))sub_1BA84122C, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v14 = v12[2];
    v13 = 2;
    sub_1BB8741AC();
    v14 = v12[3];
    v13 = 3;
    sub_1BA84118C();
    sub_1BA4A2870(&qword_1EF2AD4A8, (uint64_t (*)(uint64_t))sub_1BA84118C, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v14 = v12[4];
    v13 = 4;
    sub_1BB8741AC();
    v10 = v12;
    v14 = v12[5];
    v13 = 5;
    sub_1BB8741AC();
    v14 = v10[6];
    v13 = 6;
    sub_1BA50CB54(0, &qword_1ED3A3BD8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980]);
    sub_1BAA0C260(&qword_1EF2AD4B8, MEMORY[0x1E0DB2990]);
    sub_1BB8741AC();
    v14 = v12[7];
    v13 = 7;
    sub_1BB8741AC();
    v14 = v12[8];
    v13 = 8;
    sub_1BA50CAA8(0, &qword_1ED39A688, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    sub_1BB178F48();
    sub_1BB8741AC();
    v14 = v12[9];
    v13 = 9;
    sub_1BB8741AC();
    v14 = v12[10];
    v13 = 10;
    sub_1BA50CAA8(0, &qword_1ED39A680, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    sub_1BB178FB0();
    sub_1BB8741AC();
    v14 = v12[11];
    v13 = 11;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB1773F0()
{
  unsigned __int8 *v0;

  return sub_1BB176DCC(*v0);
}

uint64_t sub_1BB1773F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB1791BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB17741C()
{
  sub_1BB178E34();
  return sub_1BB874710();
}

uint64_t sub_1BB177444()
{
  sub_1BB178E34();
  return sub_1BB87471C();
}

uint64_t sub_1BB17746C()
{
  uint64_t v0;

  if (qword_1ED39E478 != -1)
    swift_once();
  v0 = qword_1ED476390;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BB1774C8()
{
  sub_1BA5C6D50();
  return sub_1BB86F004();
}

uint64_t sub_1BB177500()
{
  sub_1BA5C6D50();
  return sub_1BB86F01C();
}

uint64_t sub_1BB177538()
{
  sub_1BA5C6D50();
  return sub_1BB86F010();
}

double sub_1BB177588@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[6];

  sub_1BB1776F8(a1, (char **)v8);
  if (!v2)
  {
    v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    result = *(double *)v8;
    v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1BB1775D0(_QWORD *a1)
{
  return sub_1BB176F20(a1);
}

uint64_t sub_1BB1775E4()
{
  sub_1BA5C6D50();
  return sub_1BB86F040();
}

uint64_t sub_1BB17761C()
{
  sub_1BA5C6D50();
  return sub_1BB86F034();
}

uint64_t sub_1BB17765C()
{
  sub_1BA5C6D50();
  return sub_1BB86F028();
}

unint64_t sub_1BB1776B4()
{
  unint64_t result;

  result = qword_1EF2BC2B8;
  if (!qword_1EF2BC2B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1CCC, &type metadata for FeedCursorEntity);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2B8);
  }
  return result;
}

uint64_t sub_1BB1776F8@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  void (*v36)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  char *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, unint64_t);
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, char *);
  char *v55;
  uint64_t (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t, uint64_t);
  void (*v76)(char *, uint64_t, uint64_t, char *);
  char *v77;
  _QWORD *v78;
  char *v79;
  unint64_t v80;
  uint64_t result;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char **v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char **v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  void (*v136)(char *, uint64_t, uint64_t, char *);
  uint64_t v137;
  char v138;
  char *v139;

  v131 = (_QWORD *)a1;
  v111 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BC2C0, (uint64_t (*)(void))sub_1BB178E34, (uint64_t)&type metadata for FeedCursorEntity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v115 = v2;
  v114 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v132 = (char *)&v110 - v3;
  sub_1BA50CAF0(0, &qword_1ED39A6E0, &qword_1ED39A6D8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0]);
  MEMORY[0x1E0C80A78](v4);
  v126 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v122 = (char *)&v110 - v7;
  sub_1BA50CAF0(0, &qword_1ED39A6F0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8]);
  MEMORY[0x1E0C80A78](v8);
  v127 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v121 = (char *)&v110 - v11;
  sub_1BA841114();
  MEMORY[0x1E0C80A78](v12);
  v128 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v120 = (char *)&v110 - v15;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED39A6C0, (void (*)(uint64_t))sub_1BA841074);
  MEMORY[0x1E0C80A78](v16);
  v129 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v119 = (char *)&v110 - v19;
  sub_1BA4A3FB4(0, &qword_1ED39A6B0, sub_1BA841178);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v110 - v24;
  v26 = MEMORY[0x1E0DEA968];
  v27 = MEMORY[0x1E0DB2EC0];
  sub_1BA50CAF0(0, (unint64_t *)&qword_1ED39A6D0, &qword_1ED39A6C8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v110 - v32;
  sub_1BA50CAA8(0, &qword_1ED39A6C8, v26, v27, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v35 = v34;
  v36 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*((_QWORD *)v34 - 1) + 56);
  v135 = v34;
  v136 = v36;
  v133 = v33;
  v36(v33, 1, 1, v34);
  v134 = v30;
  v36(v30, 1, 1, v35);
  v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8];
  sub_1BA50CAA8(0, &qword_1ED39A708, v26, v27, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  v137 = v38;
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A670, v26, v27, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  v40 = v39;
  swift_allocObject();
  v124 = sub_1BB86F058();
  sub_1BA841178(0);
  v42 = v41;
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v43(v25, 1, 1, v41);
  v43(v22, 1, 1, v42);
  sub_1BA50CC40(0, &qword_1ED39A700, v37);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA84122C(0);
  v45 = v44;
  swift_allocObject();
  v123 = sub_1BB86F058();
  v43(v25, 1, 1, v42);
  v43(v22, 1, 1, v42);
  swift_allocObject();
  sub_1BB86F214();
  v113 = v45;
  swift_allocObject();
  v118 = sub_1BB86F058();
  sub_1BA841074();
  v47 = v46;
  v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
  v49 = v119;
  v48(v119, 1, 1, v46);
  v50 = v129;
  v48(v129, 1, 1, v47);
  v51 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8];
  sub_1BA5AA4C4(0, (unint64_t *)&qword_1ED39A710, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA84118C();
  v53 = v52;
  swift_allocObject();
  v117 = sub_1BB86F058();
  v48(v49, 1, 1, v47);
  v48(v50, 1, 1, v47);
  swift_allocObject();
  sub_1BB86F214();
  v112 = v53;
  swift_allocObject();
  v119 = (char *)sub_1BB86F058();
  v55 = v135;
  v54 = (void (*)(char *, uint64_t, uint64_t, char *))v136;
  v136(v133, 1, 1, v135);
  v54(v134, 1, 1, v55);
  swift_allocObject();
  sub_1BB86F214();
  v130 = v40;
  swift_allocObject();
  v116 = sub_1BB86F058();
  v56 = MEMORY[0x1E0DB2C88];
  sub_1BA50CB54(0, &qword_1ED3A3C40, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2C88]);
  v58 = v57;
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56);
  v60 = v120;
  v59(v120, 1, 1, v57);
  v61 = v128;
  v59(v128, 1, 1, v58);
  sub_1BA50CB54(0, &qword_1ED3A3CB0, v51);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CB54(0, &qword_1ED3A3BD8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v129 = (char *)sub_1BB86F058();
  v59(v60, 1, 1, v58);
  v59(v61, 1, 1, v58);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v120 = (char *)sub_1BB86F058();
  v62 = MEMORY[0x1E0DEB418];
  v63 = MEMORY[0x1E0DB2EE8];
  sub_1BA50CAA8(0, &qword_1ED39A6E8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))v56);
  v65 = v64;
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56);
  v67 = v121;
  v66(v121, 1, 1, v64);
  v68 = v127;
  v66(v127, 1, 1, v65);
  sub_1BA50CAA8(0, &qword_1ED39A720, v62, v63, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  v69 = v63;
  v70 = MEMORY[0x1E0DB2980];
  sub_1BA50CAA8(0, &qword_1ED39A688, v62, v69, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
  swift_allocObject();
  v128 = (char *)sub_1BB86F058();
  v66(v67, 1, 1, v65);
  v66(v68, 1, 1, v65);
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v127 = (char *)sub_1BB86F058();
  v71 = MEMORY[0x1E0DEAFA0];
  v72 = MEMORY[0x1E0DB2ED0];
  sub_1BA50CAA8(0, &qword_1ED39A6D8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88]);
  v74 = v73;
  v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56);
  v75(v122, 1, 1, v73);
  v75(v126, 1, 1, v74);
  sub_1BA50CAA8(0, &qword_1ED39A718, v71, v72, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  sub_1BB86F214();
  sub_1BA50CAA8(0, &qword_1ED39A680, v71, v72, (uint64_t (*)(_QWORD, uint64_t, uint64_t))v70);
  swift_allocObject();
  v126 = (char *)sub_1BB86F058();
  v77 = v135;
  v76 = (void (*)(char *, uint64_t, uint64_t, char *))v136;
  v136(v133, 1, 1, v135);
  v76(v134, 1, 1, v77);
  v78 = v131;
  swift_allocObject();
  sub_1BB86F214();
  swift_allocObject();
  v137 = sub_1BB86F058();
  __swift_project_boxed_opaque_existential_1(v78, v78[3]);
  sub_1BB178E34();
  v79 = v125;
  sub_1BB87468C();
  if (v79)
    goto LABEL_3;
  v138 = 0;
  v80 = sub_1BAA7CF10();
  sub_1BB8740D4();
  v136 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v80;
  v82 = v139;
  swift_retain();
  swift_release();
  v138 = 1;
  sub_1BA4A2870((unint64_t *)&qword_1EF2AD478, (uint64_t (*)(uint64_t))sub_1BA84122C, MEMORY[0x1E0DB2998]);
  sub_1BB8740D4();
  v83 = v139;
  swift_retain();
  swift_release();
  v138 = 2;
  sub_1BB8740D4();
  v135 = v83;
  v84 = v139;
  swift_retain();
  swift_release();
  v138 = 3;
  sub_1BA4A2870(&qword_1EF2AD470, (uint64_t (*)(uint64_t))sub_1BA84118C, MEMORY[0x1E0DB2998]);
  sub_1BB8740D4();
  v133 = v82;
  v134 = v84;
  v85 = v139;
  swift_retain();
  swift_release();
  v138 = 4;
  sub_1BB8740D4();
  v86 = (uint64_t)v139;
  swift_retain();
  swift_release();
  v138 = 5;
  sub_1BB8740D4();
  v124 = v86;
  v125 = v85;
  v87 = (uint64_t)v139;
  swift_retain();
  swift_release();
  v138 = 6;
  sub_1BAA0C260(&qword_1EF2AD480, MEMORY[0x1E0DB2998]);
  sub_1BB8740D4();
  v123 = v87;
  v88 = (uint64_t)v139;
  swift_retain();
  swift_release();
  v138 = 7;
  sub_1BB8740D4();
  v89 = v139;
  swift_retain();
  swift_release();
  v138 = 8;
  sub_1BB178E78();
  sub_1BB8740D4();
  v121 = v139;
  v122 = v89;
  swift_retain();
  swift_release();
  v138 = 9;
  sub_1BB8740D4();
  v133 = 0;
  v120 = v139;
  swift_retain();
  swift_release();
  v138 = 10;
  sub_1BB178EE0();
  v90 = v133;
  sub_1BB8740D4();
  v133 = v90;
  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v132, v115);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v91 = (char *)v88;
    swift_release();
    swift_release();
    v92 = v121;
    swift_release();
    v93 = v120;
    swift_release();
    v128 = v92;
    v129 = v91;
    v127 = v93;
LABEL_8:
    v78 = v131;
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  v94 = v139;
  swift_retain();
  swift_release();
  v138 = 11;
  v95 = v133;
  sub_1BB8740D4();
  v133 = v95;
  if (v95)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v132, v115);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v96 = (char *)v88;
    swift_release();
    swift_release();
    v97 = v121;
    swift_release();
    v98 = v120;
    swift_release();
    swift_release();
    v128 = v97;
    v129 = v96;
    v126 = v94;
    v127 = v98;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v114 + 8))(v132, v115);
  v99 = v139;
  swift_retain();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
  swift_release();
  v119 = v94;
  swift_release();
  swift_release();
  v100 = v121;
  swift_release();
  swift_release();
  v118 = v88;
  swift_release();
  v101 = v123;
  swift_release();
  v102 = v124;
  swift_release();
  v103 = v125;
  swift_release();
  v104 = v134;
  swift_release();
  v105 = v135;
  swift_release();
  v106 = v82;
  result = swift_release();
  v107 = v111;
  *v111 = v106;
  v107[1] = v105;
  v107[2] = v104;
  v107[3] = v103;
  v107[4] = (char *)v102;
  v107[5] = (char *)v101;
  v108 = v122;
  v107[6] = (char *)v118;
  v107[7] = v108;
  v109 = v120;
  v107[8] = v100;
  v107[9] = v109;
  v107[10] = v119;
  v107[11] = v99;
  return result;
}

unint64_t sub_1BB178E34()
{
  unint64_t result;

  result = qword_1EF2BC2C8;
  if (!qword_1EF2BC2C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1E20, &type metadata for FeedCursorEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2C8);
  }
  return result;
}

unint64_t sub_1BB178E78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BC2D0;
  if (!qword_1EF2BC2D0)
  {
    sub_1BA50CAA8(255, &qword_1ED39A688, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2998], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2D0);
  }
  return result;
}

unint64_t sub_1BB178EE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BC2D8;
  if (!qword_1EF2BC2D8)
  {
    sub_1BA50CAA8(255, &qword_1ED39A680, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2998], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2D8);
  }
  return result;
}

unint64_t sub_1BB178F48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BC2E8;
  if (!qword_1EF2BC2E8)
  {
    sub_1BA50CAA8(255, &qword_1ED39A688, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB2EE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2990], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2E8);
  }
  return result;
}

unint64_t sub_1BB178FB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BC2F0;
  if (!qword_1EF2BC2F0)
  {
    sub_1BA50CAA8(255, &qword_1ED39A680, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2980]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB2990], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedCursorEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB179064 + 4 * byte_1BB8F1B61[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB179098 + 4 * byte_1BB8F1B5C[v4]))();
}

uint64_t sub_1BB179098(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1790A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1790A8);
  return result;
}

uint64_t sub_1BB1790B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1790BCLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB1790C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1790C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedCursorEntity.CodingKeys()
{
  return &type metadata for FeedCursorEntity.CodingKeys;
}

unint64_t sub_1BB1790E8()
{
  unint64_t result;

  result = qword_1EF2BC2F8;
  if (!qword_1EF2BC2F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1DF8, &type metadata for FeedCursorEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC2F8);
  }
  return result;
}

unint64_t sub_1BB179130()
{
  unint64_t result;

  result = qword_1EF2BC300;
  if (!qword_1EF2BC300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1D68, &type metadata for FeedCursorEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC300);
  }
  return result;
}

unint64_t sub_1BB179178()
{
  unint64_t result;

  result = qword_1EF2BC308;
  if (!qword_1EF2BC308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F1D90, &type metadata for FeedCursorEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC308);
  }
  return result;
}

uint64_t sub_1BB1791BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7543746E65726170 && a2 == 0xEE006449726F7372 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737275437478656ELL && a2 == 0xEC0000006449726FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73727543746F6F72 && a2 == 0xEC0000006449726FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB97C1F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB97C210 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB97C230 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x756A6441746F6C73 && a2 == 0xEE00746E656D7473 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4564656863616572 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t FormatBlockNode.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlockNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBlockNode.throws.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t FormatBlockNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlockNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlockNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatBlockNode.blockIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBlockNode.blockIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlockNode.blockIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatBlockNode.throws.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 48) = a1;
  return result;
}

uint64_t (*FormatBlockNode.throws.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatBlockNode.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlockNode.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatBlockNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlockNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatBlockNode.__allocating_init(identifier:blockIdentifier:throws:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  swift_beginAccess();
  *(_BYTE *)(v14 + 48) = a5;
  swift_beginAccess();
  *(_QWORD *)(v14 + 56) = a6;
  swift_beginAccess();
  *(_QWORD *)(v14 + 64) = a7;
  return v14;
}

uint64_t FormatBlockNode.init(identifier:blockIdentifier:throws:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  swift_beginAccess();
  *(_BYTE *)(v7 + 48) = a5;
  swift_beginAccess();
  *(_QWORD *)(v7 + 56) = a6;
  swift_beginAccess();
  *(_QWORD *)(v7 + 64) = a7;
  return v7;
}

uint64_t FormatBlockNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatBlockNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB179CB0(_QWORD *a1)
{
  return FormatBlockNode.encode(to:)(a1);
}

uint64_t sub_1BB179CD0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed15FormatBlockNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

_QWORD *sub_1BB179CDC(uint64_t a1, uint64_t a2)
{
  return FormatBlockNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BB179CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[6];

  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(a2 + 56);
  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  sub_1BB3D81F8(v9);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    result = *v8;
    v11 = *(_QWORD *)(*v8 + 16);
    if (v11)
    {
      v12 = result + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v13 = *(_QWORD *)(v5 + 72);
      v14[0] = result;
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA900B30(v12, (uint64_t)v7);
        v14[5] = *((_QWORD *)v7 + 2);
        swift_retain();
        sub_1BAC49F9C();
        swift_release();
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v12 += v13;
        --v11;
      }
      while (v11);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BB179E70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = swift_retain();
  sub_1BB3D9C50(v4, a1, v3);
  return swift_release();
}

void sub_1BB179EB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B2E38[0])
  {
    sub_1BA7C2A4C();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, qword_1ED3B2E38);
  }
}

uint64_t sub_1BB179F08(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2BC310, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlockNode, (uint64_t)&protocol conformance descriptor for FormatBlockNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB179F44(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BB688, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlockNode, (uint64_t)&protocol conformance descriptor for FormatBlockNode);
  a1[2] = sub_1BA50AD30(&qword_1ED39FA20, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlockNode, (uint64_t)&protocol conformance descriptor for FormatBlockNode);
  result = sub_1BA50AD30(&qword_1EF2BC318, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlockNode, (uint64_t)&protocol conformance descriptor for FormatBlockNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB179FBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2BC320, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlockNode, (uint64_t)&protocol conformance descriptor for FormatBlockNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB179FF8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB17A044@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 48);
  return result;
}

uint64_t sub_1BB17A088(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 48) = v2;
  return result;
}

uint64_t sub_1BB17A0C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB17A114@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatBlockNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatBlockNode.__allocating_init(identifier:blockIdentifier:throws:options:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void __swiftcall DefaultFontBook.audioTrackFontBook()(NewsFeed::AudioTrackFontBook *__return_ptr retstr)
{
  sub_1BB17A538((unint64_t *)retstr);
}

void sub_1BB17A18C(NewsFeed::AudioTrackFontBook *a1@<X8>)
{
  DefaultFontBook.audioTrackFontBook()(a1);
}

void __swiftcall CondensedFontBook.headlineFontBook(heading:)(NewsFeed::HeadlineFontBook *__return_ptr retstr, NewsFeed::Heading heading)
{
  objc_class *v3;
  void *v4;
  double v5;
  objc_class *v6;
  objc_class *v7;
  objc_class *v8;
  objc_class *v9;

  sub_1BA7425CC();
  v3 = (objc_class *)sub_1BB873690();
  v4 = (void *)objc_opt_self();
  v5 = *MEMORY[0x1E0DC1440];
  v6 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1440]);
  v7 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 11.0, *MEMORY[0x1E0DC1438]);
  v8 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_, 11.0);
  v9 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 13.0, v5);
  retstr->titleFont.super.isa = v3;
  retstr->excerptFont.super.isa = v6;
  retstr->accessoryFont.super.isa = v7;
  retstr->publisherFont.super.isa = v8;
  retstr->adBadgeFont.super.isa = v9;
}

id _s8NewsFeed15DefaultFontBookV03gapdE0AA03GapdE0VyF_0@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  id v3;
  id result;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0]);
  result = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t _s8NewsFeed15DefaultFontBookV010coverIssuedE0AA05CovergdE0VyF_0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1BA7425CC();
  v2 = sub_1BB873690();
  v3 = sub_1BB873690();
  v4 = sub_1BB873690();
  v5 = sub_1BB873690();
  v6 = sub_1BB873690();
  result = sub_1BB873690();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = result;
  return result;
}

void __swiftcall CondensedFontBook.audioTrackFontBook()(NewsFeed::AudioTrackFontBook *__return_ptr retstr)
{
  sub_1BB17A538((unint64_t *)retstr);
}

uint64_t sub_1BB17A538@<X0>(unint64_t *a1@<X8>)
{
  uint64_t inited;
  void *v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;

  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v3 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v4 = sub_1BA7425CC();
  v5 = v3;
  v6 = sub_1BB873690();
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 40) = v6;
  v7 = sub_1BA76E82C(inited);
  v8 = (id)*MEMORY[0x1E0CA85F8];
  sub_1BB8729F4();
  v9 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v16 = 0xBFC3333333333333;
  sub_1BA76EAE0(&v16, v15);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BB4C0470(v15, v9, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  v11 = sub_1BB873690();
  v12 = sub_1BB873690();
  v13 = sub_1BB873690();
  result = sub_1BB873690();
  *a1 = v7;
  a1[1] = v11;
  a1[2] = v12;
  a1[3] = v13;
  a1[4] = result;
  return result;
}

void sub_1BB17A738(NewsFeed::Heading a1@<W0>, NewsFeed::HeadlineFontBook *a2@<X8>)
{
  CondensedFontBook.headlineFontBook(heading:)(a2, a1);
}

void sub_1BB17A74C(NewsFeed::AudioTrackFontBook *a1@<X8>)
{
  CondensedFontBook.audioTrackFontBook()(a1);
}

uint64_t ScalingFontBook.__allocating_init(contentResizeScale:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale;
  v4 = sub_1BB86D93C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t ScalingFontBook.init(contentResizeScale:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale;
  v4 = sub_1BB86D93C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

id sub_1BB17A81C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  id v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id result;

  v3 = *a1;
  sub_1BB86D930();
  sub_1BA7425CC();
  if (v3 > 1)
  {
    v16 = *MEMORY[0x1E0DC1448];
    v4 = sub_1BB873690();
    sub_1BB86D930();
    v18 = round(v17 * 60.0 * 0.25);
    if (byte_1EF3D0978)
      v19 = v18;
    else
      v19 = 15.0;
    v8 = (void *)objc_opt_self();
    v9 = *MEMORY[0x1E0DC1440];
    v10 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v19, *MEMORY[0x1E0DC1440]);
    sub_1BB86D930();
    v21 = round(v20 * 52.0 * 0.25);
    if (!byte_1EF3D0978)
      v21 = 13.0;
    v13 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v21, v16);
    sub_1BB86D930();
    v15 = round(v22 * 56.0 * 0.25);
    if (!byte_1EF3D0978)
      v15 = 14.0;
  }
  else
  {
    v4 = sub_1BB873690();
    sub_1BB86D930();
    v6 = round(v5 * 60.0 * 0.25);
    if (byte_1EF3D0978)
      v7 = v6;
    else
      v7 = 15.0;
    v8 = (void *)objc_opt_self();
    v9 = *MEMORY[0x1E0DC1440];
    v10 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v7, *MEMORY[0x1E0DC1440]);
    sub_1BB86D930();
    v12 = round(v11 * 52.0 * 0.25);
    if (!byte_1EF3D0978)
      v12 = 13.0;
    v13 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v12, *MEMORY[0x1E0DC1448]);
    sub_1BB86D930();
    v15 = round(v14 * 56.0 * 0.25);
    if (!byte_1EF3D0978)
      v15 = 14.0;
  }
  v23 = objc_msgSend(v8, sel_systemFontOfSize_, v15);
  result = objc_msgSend(v8, sel_systemFontOfSize_weight_, 13.0, v9);
  *a2 = v4;
  a2[1] = (uint64_t)v10;
  a2[2] = (uint64_t)v13;
  a2[3] = (uint64_t)v23;
  a2[4] = (uint64_t)result;
  return result;
}

uint64_t sub_1BB17AB4C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t inited;
  void *v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;

  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v3 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v4 = sub_1BA7425CC();
  v5 = v3;
  v6 = sub_1BB873690();
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 40) = v6;
  v7 = sub_1BA76E82C(inited);
  v8 = (id)*MEMORY[0x1E0CA85F8];
  sub_1BB8729F4();
  v9 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v16 = 0xBFC3333333333333;
  sub_1BA76EAE0(&v16, v15);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BB4C0470(v15, v9, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  v11 = sub_1BB873690();
  v12 = sub_1BB873690();
  v13 = sub_1BB873690();
  result = sub_1BB873690();
  *a1 = v7;
  a1[1] = v11;
  a1[2] = v12;
  a1[3] = v13;
  a1[4] = result;
  return result;
}

uint64_t ScalingFontBook.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale;
  v2 = sub_1BB86D93C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScalingFontBook.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale;
  v2 = sub_1BB86D93C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id sub_1BB17ADD4@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB17A81C(a1, a2);
}

uint64_t sub_1BB17ADF4@<X0>(unint64_t *a1@<X8>)
{
  return sub_1BB17AB4C(a1);
}

uint64_t dispatch thunk of FontBookProviding.headlineFontBook(heading:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FontBookProviding.gapFontBook()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FontBookProviding.coverIssueFontBook()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FontBookProviding.audioTrackFontBook()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for DefaultFontBook()
{
  return &type metadata for DefaultFontBook;
}

ValueMetadata *type metadata accessor for CondensedFontBook()
{
  return &type metadata for CondensedFontBook;
}

uint64_t sub_1BB17AE48()
{
  return type metadata accessor for ScalingFontBook();
}

uint64_t type metadata accessor for ScalingFontBook()
{
  uint64_t result;

  result = qword_1EF2BC358;
  if (!qword_1EF2BC358)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB17AE8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86D93C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ScalingFontBook()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScalingFontBook.__allocating_init(contentResizeScale:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ScalingFontBook.headlineFontBook(heading:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ScalingFontBook.gapFontBook()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ScalingFontBook.coverIssueFontBook()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ScalingFontBook.audioTrackFontBook()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t FormatGroupNodeMaskRendererResult.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatGroupNodeMaskRendererResult.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatGroupMaskSupplementaryLayer(_QWORD *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  id v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(id *)a2;
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void destroy for FormatGroupMaskSupplementaryLayer(id *a1)
{

}

uint64_t assignWithCopy for FormatGroupMaskSupplementaryLayer(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;

  return a1;
}

void **assignWithTake for FormatGroupMaskSupplementaryLayer(void **a1, _OWORD *a2)
{
  void *v3;

  v3 = *a1;
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for FormatGroupMaskSupplementaryLayer(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x38 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatGroupMaskSupplementaryLayer(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BB17B0FC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_1BB17B108(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1BB17B118(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupMaskSupplementaryLayer()
{
  return &type metadata for FormatGroupMaskSupplementaryLayer;
}

uint64_t type metadata accessor for FormatGroupNodeMaskRendererResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatGroupNodeMaskRendererResult()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB17B16C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;

  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v3);
  v34 = (_DWORD *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (_DWORD *)((char *)&v31 - v9);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for FormatSlotDefinitionItemSet();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v33 = (uint64_t)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v31 - v18;
  v20 = type metadata accessor for FormatDerivedDataBindingSwitchCaseResult();
  v21 = *(int *)(v20 + 20);
  v35 = a1;
  sub_1BA57B488(a1 + v21, (uint64_t)v13, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  v32 = v15;
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v22(v13, 1, v14) == 1)
  {
    sub_1BA502AD0((uint64_t)v13, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v23 = v36;
  }
  else
  {
    sub_1BA8C88F0((uint64_t)v13, (uint64_t)v19);
    v24 = v1 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchResult() + 20);
    v25 = v36;
    sub_1BB17B490(v24, (uint64_t)v19, *(unsigned __int8 *)(v1 + 16), v10);
    v26 = (uint64_t)v19;
    v23 = v25;
    result = sub_1BAA44288(v26);
    if (v25)
      return result;
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v10, 0, 1, v14);
    sub_1BAA442C4((uint64_t)v10, v24);
  }
  sub_1BA57B488(v35 + *(int *)(v20 + 24), (uint64_t)v7, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v22(v7, 1, v14) == 1)
    return sub_1BA502AD0((uint64_t)v7, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  v28 = v33;
  sub_1BA8C88F0((uint64_t)v7, v33);
  v29 = v1 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchResult() + 24);
  sub_1BB17B490(v29, v28, *(unsigned __int8 *)(v1 + 16), v34);
  result = sub_1BAA44288(v28);
  if (!v23)
  {
    v30 = v34;
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v14);
    return sub_1BAA442C4((uint64_t)v30, v29);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataBindingSwitchResult()
{
  uint64_t result;

  result = qword_1EF2BC460;
  if (!qword_1EF2BC460)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB17B490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, _DWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  _DWORD *v46;
  int v47;
  uint64_t v48;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  uint64_t v64;
  _DWORD *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _DWORD *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  _DWORD *v83;
  char *v84;
  uint64_t v85;

  v84 = (char *)a1;
  LODWORD(v82) = a3;
  v85 = a2;
  v83 = a4;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v4);
  v81 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v78 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v78 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v78 - v13;
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v78 - v16;
  v18 = type metadata accessor for FormatSlotDefinitionItemSet();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v78 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v78 - v26;
  sub_1BA57B488((uint64_t)v84, (uint64_t)v17, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v29 = v18;
  if (v28(v17, 1, v18) == 1)
  {
    sub_1BA502AD0((uint64_t)v17, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v30 = *(_QWORD *)(v85 + 8);
    if ((v82 & 1) != 0)
      v31 = *(_DWORD *)v85;
    else
      v31 = 0;
    v46 = v83;
    v47 = *(_DWORD *)(v85 + 4);
    sub_1BA57B488(v85 + *(int *)(v18 + 36), (uint64_t)v83 + *(int *)(v18 + 36), (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    *v46 = v31;
    v46[1] = v47;
    v48 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v46 + 1) = v30;
    *((_QWORD *)v46 + 2) = v48;
    *((_QWORD *)v46 + 3) = 0;
    *((_QWORD *)v46 + 4) = 0;
    return swift_bridgeObjectRetain();
  }
  else
  {
    v79 = v24;
    v80 = v11;
    v84 = v21;
    v32 = (uint64_t)v81;
    v82 = (uint64_t)v14;
    sub_1BA8C88F0((uint64_t)v17, (uint64_t)v27);
    v33 = *((_QWORD *)v27 + 1);
    v34 = *(_QWORD *)(v85 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = sub_1BA857E18(v33, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v27;
    if ((v35 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v37 = swift_bridgeObjectRetain();
      v82 = sub_1BA90C438(v37, v33);
      v38 = v85;
      if (*(_DWORD *)v85 >= *(_DWORD *)v27)
        v39 = *(_DWORD *)v27;
      else
        v39 = *(_DWORD *)v85;
      if (*(_DWORD *)(v85 + 4) <= *((_DWORD *)v27 + 1))
        v40 = *((_DWORD *)v27 + 1);
      else
        v40 = *(_DWORD *)(v85 + 4);
      LODWORD(v80) = v40;
      v41 = (uint64_t)v27;
      sub_1BA57B488((uint64_t)&v27[*(int *)(v29 + 36)], v32, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v42 = (uint64_t)v84;
      sub_1BAA44244(v38, (uint64_t)v84);
      v43 = sub_1BB86E710();
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v32, 1, v43) == 1)
      {
        v45 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
        sub_1BA57B488(v42 + *(int *)(v29 + 36), (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        sub_1BAA44288(v42);
        sub_1BA502AD0(v32, (unint64_t *)&qword_1ED3C47E8, v45);
      }
      else
      {
        sub_1BAA44288(v42);
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v8, v32, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v8, 0, 1, v43);
      }
      v65 = v83;
      v66 = v82;
      v67 = (int)v80;
      sub_1BAA44288(v41);
      *v65 = v39;
      v65[1] = v67;
      v68 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)v65 + 1) = v66;
      *((_QWORD *)v65 + 2) = v68;
      *((_QWORD *)v65 + 3) = 0;
      *((_QWORD *)v65 + 4) = 0;
      v69 = (uint64_t)v65 + *(int *)(v29 + 36);
      v70 = (uint64_t)v8;
    }
    else
    {
      v50 = *((_DWORD *)v27 + 1);
      v51 = v85;
      if (v50 != *(_DWORD *)(v85 + 4))
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1BA87DD80();
        swift_allocError();
        v72 = v71;
        sub_1BB17BA80();
        v74 = (uint64_t)&v72[*(int *)(v73 + 48)];
        v75 = (uint64_t)&v72[*(int *)(v73 + 64)];
        *v72 = 4;
        sub_1BAA44244((uint64_t)v36, v74);
        sub_1BAA44244(v51, v75);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return sub_1BAA44288((uint64_t)v36);
      }
      swift_bridgeObjectRetain();
      v52 = swift_bridgeObjectRetain();
      v53 = sub_1BA90C438(v52, v33);
      LODWORD(v84) = *v36;
      v54 = (uint64_t)v80;
      sub_1BA57B488((uint64_t)v36 + *(int *)(v29 + 36), (uint64_t)v80, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v55 = (uint64_t)v79;
      sub_1BAA44244(v51, (uint64_t)v79);
      v56 = sub_1BB86E710();
      v57 = *(_QWORD *)(v56 - 8);
      v58 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v54, 1, v56) == 1;
      v59 = v55;
      v60 = v82;
      if (v58)
      {
        v61 = v53;
        v62 = v59;
        v63 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
        sub_1BA57B488(v59 + *(int *)(v29 + 36), v82, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v64 = v62;
        v53 = v61;
        sub_1BAA44288(v64);
        sub_1BA502AD0(v54, (unint64_t *)&qword_1ED3C47E8, v63);
      }
      else
      {
        sub_1BAA44288(v59);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v60, v54, v56);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v60, 0, 1, v56);
      }
      sub_1BAA44288((uint64_t)v36);
      v76 = v83;
      *v83 = (_DWORD)v84;
      v76[1] = v50;
      v77 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)v76 + 1) = v53;
      *((_QWORD *)v76 + 2) = v77;
      *((_QWORD *)v76 + 3) = 0;
      *((_QWORD *)v76 + 4) = 0;
      v69 = (uint64_t)v76 + *(int *)(v29 + 36);
      v70 = v60;
    }
    return sub_1BA6E7324(v70, v69);
  }
}

void sub_1BB17BA80()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF2BC400)
  {
    type metadata accessor for FormatSlotDefinitionItemSet();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2BC400);
  }
}

_QWORD *sub_1BB17BAEC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for FormatSlotDefinitionItemSet();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v39 = v12;
      *v9 = *v10;
      v16 = v10[2];
      v9[1] = v10[1];
      v9[2] = v16;
      v17 = v10[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17)
      {
        v18 = v10[4];
        v9[3] = v17;
        v9[4] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
      }
      v19 = *(int *)(v11 + 36);
      v20 = (char *)v9 + v19;
      v21 = (char *)v10 + v19;
      v22 = sub_1BB86E710();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v12 = v39;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v9, 0, 1, v11);
    }
    v25 = *(int *)(a3 + 24);
    v26 = (_QWORD *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    if (v13(v27, 1, v11))
    {
      sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v29 = v27[2];
      v26[1] = v27[1];
      v26[2] = v29;
      v30 = v27[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30)
      {
        v31 = v27[4];
        v26[3] = v30;
        v26[4] = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v26 + 3) = *(_OWORD *)(v27 + 3);
      }
      v32 = *(int *)(v11 + 36);
      v33 = (char *)v26 + v32;
      v34 = (char *)v27 + v32;
      v35 = sub_1BB86E710();
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1BB17BE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FormatSlotDefinitionItemSet();
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v7 = v4 + *(int *)(v5 + 36);
    v8 = sub_1BB86E710();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  v10 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v10 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v12 = v10 + *(int *)(v5 + 36);
    v13 = sub_1BB86E710();
    v14 = *(_QWORD *)(v13 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  return result;
}

uint64_t sub_1BB17BF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v37 = v11;
    *v8 = *v9;
    v14 = v9[2];
    v8[1] = v9[1];
    v8[2] = v14;
    v15 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15)
    {
      v16 = v9[4];
      v8[3] = v15;
      v8[4] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    }
    v17 = *(int *)(v10 + 36);
    v18 = (char *)v8 + v17;
    v19 = (char *)v9 + v17;
    v20 = sub_1BB86E710();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v11 = v37;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v8, 0, 1, v10);
  }
  v23 = *(int *)(a3 + 24);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  if (v12(v25, 1, v10))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v27 = v25[2];
    v24[1] = v25[1];
    v24[2] = v27;
    v28 = v25[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28)
    {
      v29 = v25[4];
      v24[3] = v28;
      v24[4] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v24 + 3) = *(_OWORD *)(v25 + 3);
    }
    v30 = *(int *)(v10 + 36);
    v31 = (char *)v24 + v30;
    v32 = (char *)v25 + v30;
    v33 = sub_1BB86E710();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1BB17C2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  size_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1BAA44288(v7);
      goto LABEL_7;
    }
    v61 = v10;
    *(_DWORD *)v7 = *(_DWORD *)v8;
    *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
    *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v8 + 24);
    if (*(_QWORD *)(v7 + 24))
    {
      if (v16)
      {
        *(_QWORD *)(v7 + 24) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      sub_1BAA44B5C(v7 + 24);
    }
    else if (v16)
    {
      *(_QWORD *)(v7 + 24) = v16;
      *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
LABEL_20:
    v23 = *(int *)(v9 + 36);
    v24 = (void *)(v7 + v23);
    v25 = (void *)(v8 + v23);
    v26 = sub_1BB86E710();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
    v59 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    v29 = v28(v25, 1, v26);
    if ((_DWORD)v24)
    {
      if (!v29)
      {
        (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v59, v25, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v59, 0, 1, v26);
        goto LABEL_28;
      }
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v31 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
      v32 = v59;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v59, v25, v26);
        goto LABEL_28;
      }
      (*(void (**)(void *, uint64_t))(v27 + 8))(v59, v26);
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v31 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64);
      v32 = v59;
    }
    memcpy(v32, v25, v31);
LABEL_28:
    v10 = v61;
    goto LABEL_29;
  }
  if (v13)
  {
LABEL_7:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_29;
  }
  v60 = v10;
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  v14 = *(_QWORD *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(_QWORD *)(v7 + 24) = v14;
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
  }
  v17 = *(int *)(v9 + 36);
  v18 = (void *)(v7 + v17);
  v19 = (const void *)(v8 + v17);
  v20 = sub_1BB86E710();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v10 = v60;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v7, 0, 1, v9);
LABEL_29:
  v34 = *(int *)(a3 + 24);
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = v11(a1 + v34, 1, v9);
  v38 = v11(v36, 1, v9);
  if (!v37)
  {
    if (v38)
    {
      sub_1BAA44288(v35);
      goto LABEL_35;
    }
    *(_DWORD *)v35 = *(_DWORD *)v36;
    *(_DWORD *)(v35 + 4) = *(_DWORD *)(v36 + 4);
    *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v43 = *(_QWORD *)(v36 + 24);
    if (*(_QWORD *)(v35 + 24))
    {
      if (v43)
      {
        *(_QWORD *)(v35 + 24) = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_50:
        v51 = *(int *)(v9 + 36);
        v52 = (void *)(v35 + v51);
        v36 += v51;
        v53 = sub_1BB86E710();
        v54 = *(_QWORD *)(v53 - 8);
        v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
        v56 = v55(v52, 1, v53);
        v57 = v55((void *)v36, 1, v53);
        if (v56)
        {
          if (!v57)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v54 + 16))(v52, v36, v53);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v52, 0, 1, v53);
            return a1;
          }
        }
        else
        {
          if (!v57)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v54 + 24))(v52, v36, v53);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v54 + 8))(v52, v53);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v41 = *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64);
        v42 = v52;
        goto LABEL_36;
      }
      sub_1BAA44B5C(v35 + 24);
    }
    else if (v43)
    {
      *(_QWORD *)(v35 + 24) = v43;
      *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_50;
    }
    *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
    goto LABEL_50;
  }
  if (v38)
  {
LABEL_35:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v41 = *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64);
    v42 = (void *)v35;
LABEL_36:
    memcpy(v42, (const void *)v36, v41);
    return a1;
  }
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_DWORD *)(v35 + 4) = *(_DWORD *)(v36 + 4);
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
  v39 = *(_QWORD *)(v36 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39)
  {
    *(_QWORD *)(v35 + 24) = v39;
    *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
  }
  v44 = *(int *)(v9 + 36);
  v45 = (void *)(v35 + v44);
  v46 = (const void *)(v36 + v44);
  v47 = sub_1BB86E710();
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  return a1;
}

uint64_t sub_1BB17C980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
    *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
    v13 = *(int *)(v9 + 36);
    __dst = (char *)v7 + v13;
    v14 = (char *)v8 + v13;
    v15 = sub_1BB86E710();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = *(int *)(a3 + 24);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  if (v11((_QWORD *)(a2 + v18), 1, v9))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    *(_OWORD *)(v19 + 1) = *(_OWORD *)(v20 + 1);
    *(_OWORD *)(v19 + 3) = *(_OWORD *)(v20 + 3);
    v22 = *(int *)(v9 + 36);
    v23 = (char *)v19 + v22;
    v24 = (char *)v20 + v22;
    v25 = sub_1BB86E710();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1BB17CC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  size_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1BAA44288((uint64_t)v8);
      goto LABEL_7;
    }
    v60 = v11;
    *v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRelease();
    v8[2] = v9[2];
    swift_bridgeObjectRelease();
    v22 = v9[3];
    if (v8[3])
    {
      if (v22)
      {
        v8[3] = v22;
        swift_bridgeObjectRelease();
        v8[4] = v9[4];
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_1BAA44B5C((uint64_t)(v8 + 3));
    }
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
LABEL_15:
    v23 = *(int *)(v10 + 36);
    v24 = (char *)v8 + v23;
    v25 = (char *)v9 + v23;
    v26 = sub_1BB86E710();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v58 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    v29 = v28(v25, 1, v26);
    if ((_DWORD)v24)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 32))(v58, v25, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v58, 0, 1, v26);
        goto LABEL_23;
      }
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v31 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
      v32 = v58;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 40))(v58, v25, v26);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v27 + 8))(v58, v26);
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v31 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64);
      v32 = v58;
    }
    memcpy(v32, v25, v31);
LABEL_23:
    v11 = v60;
    goto LABEL_24;
  }
  if (v14)
  {
LABEL_7:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_24;
  }
  v59 = v11;
  *v8 = *v9;
  *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
  *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
  v15 = *(int *)(v10 + 36);
  v16 = (char *)v8 + v15;
  v17 = (char *)v9 + v15;
  v18 = sub_1BB86E710();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v11 = v59;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v8, 0, 1, v10);
LABEL_24:
  v34 = *(int *)(a3 + 24);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v12((_QWORD *)(a1 + v34), 1, v10);
  v38 = v12(v36, 1, v10);
  if (!v37)
  {
    if (v38)
    {
      sub_1BAA44288((uint64_t)v35);
      goto LABEL_30;
    }
    *v35 = *v36;
    v35[1] = v36[1];
    swift_bridgeObjectRelease();
    v35[2] = v36[2];
    swift_bridgeObjectRelease();
    v48 = v36[3];
    if (v35[3])
    {
      if (v48)
      {
        v35[3] = v48;
        swift_bridgeObjectRelease();
        v35[4] = v36[4];
        swift_bridgeObjectRelease();
LABEL_40:
        v50 = *(int *)(v10 + 36);
        v51 = (char *)v35 + v50;
        v36 = (_QWORD *)((char *)v36 + v50);
        v52 = sub_1BB86E710();
        v53 = *(_QWORD *)(v52 - 8);
        v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
        v55 = v54(v51, 1, v52);
        v56 = v54((char *)v36, 1, v52);
        if (v55)
        {
          if (!v56)
          {
            (*(void (**)(char *, _QWORD *, uint64_t))(v53 + 32))(v51, v36, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v51, 0, 1, v52);
            return a1;
          }
        }
        else
        {
          if (!v56)
          {
            (*(void (**)(char *, _QWORD *, uint64_t))(v53 + 40))(v51, v36, v52);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v52);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v46 = *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64);
        v47 = v51;
        goto LABEL_31;
      }
      sub_1BAA44B5C((uint64_t)(v35 + 3));
    }
    *(_OWORD *)(v35 + 3) = *(_OWORD *)(v36 + 3);
    goto LABEL_40;
  }
  if (v38)
  {
LABEL_30:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v46 = *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64);
    v47 = (char *)v35;
LABEL_31:
    memcpy(v47, v36, v46);
    return a1;
  }
  *v35 = *v36;
  *(_OWORD *)(v35 + 1) = *(_OWORD *)(v36 + 1);
  *(_OWORD *)(v35 + 3) = *(_OWORD *)(v36 + 3);
  v39 = *(int *)(v10 + 36);
  v40 = (char *)v35 + v39;
  v41 = (char *)v36 + v39;
  v42 = sub_1BB86E710();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  return a1;
}

uint64_t sub_1BB17D1C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB17D1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB17D25C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB17D268(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1BB17D2EC()
{
  unint64_t v0;

  sub_1BA4A3FB4(319, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t FeatureAvailability.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FeatureAvailability.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t FeatureAvailability.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FeatureAvailability.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t FeatureAvailabilityType.appleNewsContent.getter()
{
  return 0;
}

uint64_t FeatureAvailabilityType.allowSharingAlways.getter()
{
  return 0;
}

uint64_t FeatureAvailabilityType.appleNewsPrivateData.getter()
{
  return 0;
}

uint64_t sub_1BB17D3C0(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3AC0D8);
}

uint64_t FeatureAvailabilityType.useNewReportConcern.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3AC0D8);
}

uint64_t sub_1BB17D3F8(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3C21F0);
}

uint64_t FeatureAvailabilityType.useMoreToReadEOA.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3C21F0);
}

uint64_t sub_1BB17D430(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3A0D18);
}

uint64_t FeatureAvailabilityType.useMoreFromIssueEOA.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3A0D18);
}

uint64_t sub_1BB17D468(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1EF2A6CE0);
}

uint64_t FeatureAvailabilityType.useMultipleNativeAds.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1EF2A6CE0);
}

uint64_t FeatureAvailabilityType.narrativeAudio.getter()
{
  return 0;
}

uint64_t FeatureAvailabilityType.appleMagazineContent.getter()
{
  return 0;
}

uint64_t FeatureAvailabilityType.cardFeed.getter()
{
  return 1;
}

uint64_t sub_1BB17D4B8(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED39ED60);
}

uint64_t FeatureAvailabilityType.videoInFeed.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED39ED60);
}

uint64_t sub_1BB17D4F0(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3A10A0);
}

uint64_t FeatureAvailabilityType.puzzles.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3A10A0);
}

uint64_t sub_1BB17D528(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1EF2A6CF0);
}

uint64_t FeatureAvailabilityType.navigationImprovementsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1EF2A6CF0);
}

uint64_t sub_1BB17D560(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, qword_1ED3A10B8);
}

uint64_t FeatureAvailabilityType.articleViewerImprovementsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, qword_1ED3A10B8);
}

uint64_t sub_1BB17D598(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3A3380);
}

uint64_t FeatureAvailabilityType.liveActivitiesEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3A3380);
}

uint64_t sub_1BB17D5D0(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3A33B0);
}

uint64_t FeatureAvailabilityType.enableAIAttribution.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3A33B0);
}

uint64_t sub_1BB17D608(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3A0D08);
}

uint64_t sub_1BB17D624(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char v4;

  if ((_s8NewsFeed23FeatureAvailabilityTypePAAE019allowFollowingOfEndH16ArticlePublisherSbvg_0() & 1) == 0)
    return 0;
  sub_1BB86D294();
  sub_1BB86D27C();
  if (*a3 != -1)
    swift_once();
  v4 = sub_1BB86D288();
  swift_release();
  return v4 & 1;
}

uint64_t FeatureAvailabilityType.useOfflineMode.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3A0D08);
}

uint64_t sub_1BB17D6C8(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3C3FD8);
}

uint64_t FeatureAvailabilityType.feedDifferentiationModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3C3FD8);
}

uint64_t sub_1BB17D700(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3D5160);
}

uint64_t FeatureAvailabilityType.feedDensityModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3D5160);
}

uint64_t sub_1BB17D738(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3C3FE8);
}

uint64_t sub_1BB17D754(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char v4;

  sub_1BB86D294();
  sub_1BB86D27C();
  if (*a3 != -1)
    swift_once();
  v4 = sub_1BB86D288();
  swift_release();
  return v4 & 1;
}

uint64_t FeatureAvailabilityType.inFeedDebugging.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D754(a1, a2, &qword_1ED3C3FE8);
}

uint64_t FeatureAvailabilityType.useSponsoredSuperFeeds.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1ED3AD160);
}

uint64_t FeatureAvailabilityType.useSponsoredSuperFeedEligibilityOverrides.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BB17D624(a1, a2, &qword_1EF2A6D08);
}

uint64_t _s8NewsFeed23FeatureAvailabilityTypePAAE019allowFollowingOfEndH16ArticlePublisherSbvg_0()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (!v1)
    return 0;
  v2 = sub_1BB8729A0();
  v4 = v3;

  if (v2 == 0x6C7070612E6D6F63 && v4 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

uint64_t type metadata accessor for FeatureAvailability()
{
  return objc_opt_self();
}

uint64_t method lookup function for FeatureAvailability()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureAvailability.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.appleNewsContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.allowSharingAlways.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.interstellarEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.appleNewsPrivateData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.allowFollowingOfEndOfArticlePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.allowLikeDislike.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useNewReportConcern.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useMoreToReadEOA.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useMoreFromIssueEOA.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useMultipleNativeAds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.improvedBlockingBehavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.shouldDisplaySaveInTopBar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.appleMagazineContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.cardFeed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.videoInFeed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.puzzles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.navigationImprovementsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.articleViewerImprovementsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.liveActivitiesEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.enableAIAttribution.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useOfflineMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.feedDifferentiationModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.feedDensityModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.inFeedDebugging.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t sub_1BB17DA30(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v13;
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      FormatSlotTransform.description.getter();
      v6 = v5;
      v8 = v7;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
        sub_1BA7447E8(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB17DB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for DebugFormatCompilerResultOutput();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v15 = v1;
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B1E0(0, v7, 0);
    v8 = v17;
    v16 = type metadata accessor for DebugFormatCompilerResultEntry();
    v9 = *(_QWORD *)(v16 - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1BA4C2DD8(v10 + *(int *)(v16 + 20), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
      v17 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BAC7B1E0(v12 > 1, v13 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      sub_1BA5193C4((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

_QWORD *sub_1BB17DC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  void *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  int64_t v84;
  uint64_t i;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  unint64_t v92;
  unint64_t v93;
  char v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  unsigned __int8 *v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  char v126;
  unint64_t v127;
  unint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  id *v136;
  int EnumCaseMultiPayload;
  unint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int (*v145)(uint64_t, uint64_t, _QWORD *);
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  int64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  unint64_t v204;
  uint64_t (*v205)();
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  unint64_t v237;
  unint64_t v238;
  _QWORD *v239;
  uint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t *v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t *v250;
  char *v251;
  char *v252;
  uint64_t v253;
  __int128 *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t *v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  __int128 v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  _QWORD *v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  char v291;
  uint64_t v292;
  unint64_t v293;
  uint64_t v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;

  sub_1BA9B5BA0(0);
  MEMORY[0x1E0C80A78](v1);
  v257 = (uint64_t)&v241 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1E0C80A78](v3);
  v250 = (uint64_t *)((char *)&v241 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v248 = (uint64_t *)((char *)&v241 - v6);
  MEMORY[0x1E0C80A78](v7);
  v246 = (uint64_t *)((char *)&v241 - v8);
  v256 = type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1E0C80A78](v256);
  v249 = (uint64_t)&v241 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v247 = (uint64_t)&v241 - v11;
  MEMORY[0x1E0C80A78](v12);
  v245 = (uint64_t)&v241 - v13;
  v14 = type metadata accessor for FormatSlotDefinitionItemSet();
  v255 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v287 = (uint64_t)&v241 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatSlotDefinition();
  v253 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v274 = (uint64_t *)((char *)&v241 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB1826F0();
  v261 = v18;
  v259 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v252 = (char *)&v241 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2BC5A8, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22);
  v260 = (char *)&v241 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v258 = (uint64_t *)((char *)&v241 - v25);
  v271 = type metadata accessor for FormatFile();
  v284 = *(_QWORD *)(v271 - 8);
  MEMORY[0x1E0C80A78](v271);
  v281 = (uint64_t)&v241 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v273 = (uint64_t)&v241 - v28;
  MEMORY[0x1E0C80A78](v29);
  v268 = (uint64_t)&v241 - v30;
  v280 = type metadata accessor for DebugFormatCompilerResultOutput();
  v243 = *(_QWORD *)(v280 - 8);
  MEMORY[0x1E0C80A78](v280);
  v32 = (char *)&v241 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v285 = (uint64_t)&v241 - v34;
  sub_1BA4B07F0(0, &qword_1ED39C990, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, v20);
  MEMORY[0x1E0C80A78](v35);
  v278 = (uint64_t)&v241 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v241 - v38;
  v40 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v40);
  v242 = (uint64_t *)((char *)&v241 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286 = type metadata accessor for DebugFormatGroupItem();
  v42 = *(_QWORD *)(v286 - 8);
  MEMORY[0x1E0C80A78](v286);
  v44 = (char *)&v241 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v45);
  v47 = (uint64_t *)((char *)&v241 - v46);
  MEMORY[0x1E0C80A78](v48);
  v251 = (char *)&v241 - v49;
  sub_1BA4B07F0(0, &qword_1EF2BAC00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, v20);
  MEMORY[0x1E0C80A78](v50);
  v264 = (char *)&v241 - v51;
  v267 = type metadata accessor for DebugFormatEditorLayoutContext();
  v266 = *(_QWORD *)(v267 - 8);
  MEMORY[0x1E0C80A78](v267);
  v53 = (char *)&v241 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = v0;
  v272 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package);
  v54 = (__int128 *)(v272 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  v55 = *((_QWORD *)v54 + 1);
  v254 = v54;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v56 = sub_1BA85DEDC(v55);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v295 = v56;
  sub_1BA766EFC((uint64_t *)&v295);
  v244 = v39;
  v262 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v57 = (_QWORD *)v295;
  v58 = *(_QWORD *)(v295 + 16);
  v288 = v44;
  *(_QWORD *)&v279 = v32;
  v277 = v58;
  if (v58)
  {
    v263 = v53;
    v59 = 0;
    LODWORD(v276) = *(unsigned __int8 *)(v270
                                       + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_filterToActiveDevice);
    v265 = OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_editor;
    v275 = v295 + 32;
    v60 = MEMORY[0x1E0DEE9D8];
    v61 = MEMORY[0x1E0DEE9D8];
    v62 = (uint64_t)v264;
    v269 = v295;
    while (v59 < v57[2])
    {
      v63 = *(_QWORD *)(v275 + 8 * v59);
      v289 = v63;
      if ((_DWORD)v276)
      {
        swift_retain();
        sub_1BB86E494();
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v266 + 48))(v62, 1, v267) == 1)
        {
          sub_1BA5C699C(v62, &qword_1EF2BAC00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        }
        else
        {
          v64 = (uint64_t)v263;
          sub_1BA5193C4(v62, (uint64_t)v263, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
          if (v289 == sub_1BB86D63C())
          {
            v282 = v59;
            v65 = *((_QWORD *)v254 + 2);
            v295 = *v254;
            *(_QWORD *)&v296 = v65;
            v66 = FormatGroupCollection.subscript.getter(v289);
            if (!v66)
              v66 = v60;
            v67 = *(_QWORD *)(v66 + 16);
            if (v67)
            {
              v283 = (_QWORD *)v61;
              v294 = v60;
              v290 = v66;
              sub_1BAC7B1B4(0, v67, 0);
              v68 = v290;
              v60 = v294;
              v69 = v67 - 1;
              v70 = 32;
              v71 = v251;
              while (1)
              {
                v295 = *(_OWORD *)(v68 + v70);
                v72 = *(_OWORD *)(v68 + v70 + 16);
                v73 = *(_OWORD *)(v68 + v70 + 32);
                v74 = *(_OWORD *)(v68 + v70 + 48);
                v299 = *(_OWORD *)(v68 + v70 + 64);
                v297 = v73;
                v298 = v74;
                v296 = v72;
                v75 = *(_OWORD *)(v68 + v70 + 80);
                v76 = *(_OWORD *)(v68 + v70 + 96);
                v77 = *(_OWORD *)(v68 + v70 + 128);
                v302 = *(_OWORD *)(v68 + v70 + 112);
                v303 = v77;
                v300 = v75;
                v301 = v76;
                memmove(v71, (const void *)(v68 + v70), 0x90uLL);
                swift_storeEnumTagMultiPayload();
                sub_1BA8C88FC((uint64_t)&v295);
                v294 = v60;
                v79 = *(_QWORD *)(v60 + 16);
                v78 = *(_QWORD *)(v60 + 24);
                if (v79 >= v78 >> 1)
                {
                  sub_1BAC7B1B4(v78 > 1, v79 + 1, 1);
                  v60 = v294;
                }
                *(_QWORD *)(v60 + 16) = v79 + 1;
                sub_1BA5193C4((uint64_t)v71, v60+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v79, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
                if (!v69)
                  break;
                --v69;
                v70 += 144;
                v68 = v290;
              }
              swift_bridgeObjectRelease();
              v61 = (unint64_t)v283;
              v62 = (uint64_t)v264;
              v57 = (_QWORD *)v269;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v59 = v282;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v61 = (unint64_t)sub_1BB392DC4(0, *(_QWORD *)(v61 + 16) + 1, 1, (_QWORD *)v61);
            v101 = *(_QWORD *)(v61 + 16);
            v100 = *(_QWORD *)(v61 + 24);
            v102 = v289;
            if (v101 >= v100 >> 1)
            {
              v61 = (unint64_t)sub_1BB392DC4((_QWORD *)(v100 > 1), v101 + 1, 1, (_QWORD *)v61);
              v102 = v289;
            }
            *(_QWORD *)(v61 + 16) = v101 + 1;
            v103 = (_QWORD *)(v61 + 32 * v101);
            v103[4] = v102;
            v103[5] = 0;
            *((_BYTE *)v103 + 48) = 0;
            v103[7] = v60;
            sub_1BA4A2E80((uint64_t)v263, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
            v60 = MEMORY[0x1E0DEE9D8];
          }
          else
          {
            sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
          }
        }
      }
      else
      {
        v282 = v59;
        v80 = *(_QWORD *)(v272 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups + 16);
        v295 = *(_OWORD *)(v272 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        *(_QWORD *)&v296 = v80;
        v81 = FormatGroupCollection.subscript.getter(v63);
        if (v81)
          v82 = v81;
        else
          v82 = v60;
        v83 = *(_QWORD *)(v82 + 16);
        if (v83)
        {
          v283 = (_QWORD *)v61;
          v294 = v60;
          sub_1BAC7B1B4(0, v83, 0);
          v60 = v294;
          v84 = v83 - 1;
          for (i = 32; ; i += 144)
          {
            v295 = *(_OWORD *)(v82 + i);
            v86 = *(_OWORD *)(v82 + i + 16);
            v87 = *(_OWORD *)(v82 + i + 32);
            v88 = *(_OWORD *)(v82 + i + 48);
            v299 = *(_OWORD *)(v82 + i + 64);
            v297 = v87;
            v298 = v88;
            v296 = v86;
            v89 = *(_OWORD *)(v82 + i + 80);
            v90 = *(_OWORD *)(v82 + i + 96);
            v91 = *(_OWORD *)(v82 + i + 128);
            v302 = *(_OWORD *)(v82 + i + 112);
            v303 = v91;
            v300 = v89;
            v301 = v90;
            memmove(v47, (const void *)(v82 + i), 0x90uLL);
            swift_storeEnumTagMultiPayload();
            sub_1BA8C88FC((uint64_t)&v295);
            v294 = v60;
            v93 = *(_QWORD *)(v60 + 16);
            v92 = *(_QWORD *)(v60 + 24);
            if (v93 >= v92 >> 1)
            {
              sub_1BAC7B1B4(v92 > 1, v93 + 1, 1);
              v60 = v294;
            }
            *(_QWORD *)(v60 + 16) = v93 + 1;
            sub_1BA5193C4((uint64_t)v47, v60+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v93, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
            if (!v84)
              break;
            --v84;
          }
          swift_bridgeObjectRelease();
          v61 = (unint64_t)v283;
          v62 = (uint64_t)v264;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v59 = v282;
        v94 = swift_isUniquelyReferenced_nonNull_native();
        v57 = (_QWORD *)v269;
        if ((v94 & 1) == 0)
          v61 = (unint64_t)sub_1BB392DC4(0, *(_QWORD *)(v61 + 16) + 1, 1, (_QWORD *)v61);
        v96 = *(_QWORD *)(v61 + 16);
        v95 = *(_QWORD *)(v61 + 24);
        v97 = v289;
        if (v96 >= v95 >> 1)
        {
          v61 = (unint64_t)sub_1BB392DC4((_QWORD *)(v95 > 1), v96 + 1, 1, (_QWORD *)v61);
          v97 = v289;
        }
        *(_QWORD *)(v61 + 16) = v96 + 1;
        v98 = (_QWORD *)(v61 + 32 * v96);
        v98[4] = v97;
        v98[5] = 0;
        *((_BYTE *)v98 + 48) = 0;
        v98[7] = v60;
        v60 = MEMORY[0x1E0DEE9D8];
      }
      if (++v59 == v277)
      {
        swift_release();
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
  }
  else
  {
    swift_release();
    v61 = MEMORY[0x1E0DEE9D8];
LABEL_43:
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2BC5B0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatGroupItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v104 = *(_QWORD *)(v42 + 72);
    v105 = *(unsigned __int8 *)(v42 + 80);
    v106 = (v105 + 32) & ~v105;
    v267 = 4 * v104;
    v277 = v107;
    v276 = v105 | 7;
    v47 = (uint64_t *)swift_allocObject();
    *((_OWORD *)v47 + 1) = xmmword_1BB87D7A0;
    v289 = v106;
    v108 = (char *)v47 + v106;
    v109 = v272;
    v110 = *(_QWORD *)(v272 + 16);
    v111 = *(_QWORD *)(v272 + 24);
    *(_QWORD *)v108 = 0x696669746E656449;
    *((_QWORD *)v108 + 1) = 0xEA00000000007265;
    *((_QWORD *)v108 + 2) = v110;
    *((_QWORD *)v108 + 3) = v111;
    swift_storeEnumTagMultiPayload();
    v112 = &v108[v104];
    v113 = (uint64_t *)(v109 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
    swift_beginAccess();
    v114 = *v113;
    v115 = v113[1];
    *(_QWORD *)v112 = 1701667150;
    *((_QWORD *)v112 + 1) = 0xE400000000000000;
    *((_QWORD *)v112 + 2) = v114;
    *((_QWORD *)v112 + 3) = v115;
    swift_storeEnumTagMultiPayload();
    v290 = v104;
    v275 = 2 * v104;
    v116 = &v108[2 * v104];
    v117 = (uint64_t *)(v109 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
    swift_beginAccess();
    v118 = *v117;
    v119 = v117[1];
    *(_QWORD *)v116 = 0x7470697263736544;
    *((_QWORD *)v116 + 1) = 0xEB000000006E6F69;
    *((_QWORD *)v116 + 2) = v118;
    *((_QWORD *)v116 + 3) = v119;
    swift_storeEnumTagMultiPayload();
    v120 = (unsigned __int8 *)(v109 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
    swift_beginAccess();
    v121 = *v120;
    if (v121 == 4)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v122 = 0xE800000000000000;
      v123 = 0x6C61636974726576;
    }
    else
    {
      v292 = 0;
      v293 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v124);
      v291 = v121;
      sub_1BB873E34();
      v123 = v292;
      v122 = v293;
    }
    v269 = 3 * v290;
    v125 = &v108[3 * v290];
    *(_QWORD *)v125 = 0x6F69746365726944;
    *((_QWORD *)v125 + 1) = 0xE90000000000006ELL;
    *((_QWORD *)v125 + 2) = v123;
    *((_QWORD *)v125 + 3) = v122;
    swift_storeEnumTagMultiPayload();
    v126 = swift_isUniquelyReferenced_nonNull_native();
    v57 = (_QWORD *)v271;
    if ((v126 & 1) != 0)
      goto LABEL_47;
  }
  v61 = (unint64_t)sub_1BB392DC4(0, *(_QWORD *)(v61 + 16) + 1, 1, (_QWORD *)v61);
LABEL_47:
  v128 = *(_QWORD *)(v61 + 16);
  v127 = *(_QWORD *)(v61 + 24);
  if (v128 >= v127 >> 1)
    v61 = (unint64_t)sub_1BB392DC4((_QWORD *)(v127 > 1), v128 + 1, 1, (_QWORD *)v61);
  *(_QWORD *)(v61 + 16) = v128 + 1;
  v129 = (_QWORD *)(v61 + 32 * v128);
  v129[4] = 0;
  v129[5] = 0;
  *((_BYTE *)v129 + 48) = 2;
  v129[7] = v47;
  v130 = *(_QWORD *)(v270 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_compilerResultOutputs);
  v131 = *(_QWORD *)(v130 + 16);
  if (!v131)
  {
    v152 = swift_allocObject();
    *(_OWORD *)(v152 + 16) = xmmword_1BB87CE70;
    swift_storeEnumTagMultiPayload();
    v154 = *(_QWORD *)(v61 + 16);
    v153 = *(_QWORD *)(v61 + 24);
    if (v154 >= v153 >> 1)
      v61 = (unint64_t)sub_1BB392DC4((_QWORD *)(v153 > 1), v154 + 1, 1, (_QWORD *)v61);
    *(_QWORD *)(v61 + 16) = v154 + 1;
    v283 = (_QWORD *)v61;
    v155 = (_QWORD *)(v61 + 32 * v154);
    *((_OWORD *)v155 + 2) = xmmword_1BB8F2220;
    *((_BYTE *)v155 + 48) = 1;
    v155[7] = v152;
    goto LABEL_102;
  }
  v283 = (_QWORD *)v61;
  v132 = v130 + ((*(unsigned __int8 *)(v243 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80));
  v133 = *(_QWORD *)(v243 + 72);
  v282 = v130;
  swift_bridgeObjectRetain_n();
  v134 = MEMORY[0x1E0DEE9D8];
  do
  {
    v135 = v285;
    sub_1BA4C2DD8(v132, v285, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
    v136 = (id *)v279;
    sub_1BA4C2DD8(v135, v279, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v138 = v284;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {

        v139 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v138 + 56);
        v140 = v278;
        v139(v278, 1, 1, v57);
        goto LABEL_58;
      }
      sub_1BAF05E00();

    }
    v142 = (uint64_t)v136;
    v143 = v273;
    sub_1BA5193C4(v142, v273, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v144 = v143;
    v140 = v278;
    sub_1BA5193C4(v144, v278, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v139 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v138 + 56);
    v139(v140, 0, 1, v57);
LABEL_58:
    sub_1BA4A2E80(v285, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
    v145 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v138 + 48);
    if (v145(v140, 1, v57) == 1)
    {
      sub_1BA5C699C(v140, &qword_1ED39C990, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile);
    }
    else
    {
      v146 = v268;
      sub_1BA5193C4(v140, v268, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
      sub_1BA5193C4(v146, v281, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v134 = sub_1BB392DB0(0, *(_QWORD *)(v134 + 16) + 1, 1, v134);
      v148 = *(_QWORD *)(v134 + 16);
      v147 = *(_QWORD *)(v134 + 24);
      if (v148 >= v147 >> 1)
        v134 = sub_1BB392DB0(v147 > 1, v148 + 1, 1, v134);
      *(_QWORD *)(v134 + 16) = v148 + 1;
      sub_1BA5193C4(v281, v134+ ((*(unsigned __int8 *)(v284 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v284 + 80))+ *(_QWORD *)(v284 + 72) * v148, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
      v57 = (_QWORD *)v271;
    }
    v132 += v133;
    --v131;
  }
  while (v131);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v134 + 16))
  {
    v149 = (uint64_t)v244;
    sub_1BA4C2DD8(v134 + ((*(unsigned __int8 *)(v284 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v284 + 80)), (uint64_t)v244, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v150 = 0;
    v151 = v261;
    v57 = v260;
  }
  else
  {
    v150 = 1;
    v151 = v261;
    v57 = v260;
    v149 = (uint64_t)v244;
  }
  v156 = v271;
  v139(v149, v150, 1, (_QWORD *)v271);
  swift_bridgeObjectRelease();
  if (v145(v149, 1, (_QWORD *)v156) == 1)
  {
    sub_1BA5C699C(v149, &qword_1ED39C990, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v47 = v242;
      sub_1BA5193C4(v149, (uint64_t)v242, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      v157 = v47[15];
      v158 = *(_QWORD *)(v157 + 16);
      v280 = v289 + 5 * v290;
      v278 = v157;
      swift_bridgeObjectRetain();
      v61 = 0;
      v279 = xmmword_1BB8827B0;
      v159 = (uint64_t)v288;
      v281 = v158;
      while (1)
      {
        if (v61 == v158)
        {
          v160 = 1;
          v61 = v158;
        }
        else
        {
          if ((v61 & 0x8000000000000000) != 0)
            goto LABEL_121;
          if (v61 >= *(_QWORD *)(v278 + 16))
            goto LABEL_122;
          v161 = (uint64_t)&v252[*(int *)(v151 + 48)];
          sub_1BA4C2DD8(v278+ ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))+ *(_QWORD *)(v253 + 72) * v61, v161, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          v162 = (uint64_t)v57 + *(int *)(v151 + 48);
          *v57 = v61;
          sub_1BA5193C4(v161, v162, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
          v160 = 0;
          ++v61;
        }
        v163 = v259;
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v259 + 56))(v57, v160, 1, v151);
        v164 = (uint64_t)v57;
        v165 = v258;
        sub_1BB182758(v164, (uint64_t)v258);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v163 + 48))(v165, 1, v151) == 1)
          break;
        v166 = *v165;
        v167 = v274;
        sub_1BA5193C4((uint64_t)v165 + *(int *)(v151 + 48), (uint64_t)v274, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
        v168 = 0x73746F6C53;
        if (v166)
          v168 = 0;
        v285 = v168;
        v169 = 0xE500000000000000;
        if (v166)
          v169 = 0;
        v284 = v169;
        v170 = swift_allocObject();
        *(_OWORD *)(v170 + 16) = v279;
        v282 = v170;
        v171 = (_QWORD *)(v170 + v289);
        v172 = *v167;
        v173 = v167[1];
        *v171 = 0x696669746E656449;
        v171[1] = 0xEA00000000007265;
        v171[2] = v172;
        v171[3] = v173;
        swift_storeEnumTagMultiPayload();
        v174 = (_QWORD *)((char *)v171 + v290);
        v175 = v167[2];
        v176 = v167[3];
        v177 = 0xE400000000000000;
        *v174 = 1701667150;
        v174[1] = 0xE400000000000000;
        v174[2] = v175;
        v174[3] = v176;
        swift_storeEnumTagMultiPayload();
        v178 = (_QWORD *)((char *)v171 + v275);
        v179 = v167[4];
        v180 = v167[5];
        *v178 = 0x7470697263736544;
        v178[1] = 0xEB000000006E6F69;
        v178[2] = v179;
        v178[3] = v180;
        swift_storeEnumTagMultiPayload();
        v181 = *(_QWORD *)(v167[7] + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v181)
        {
          v182 = swift_bridgeObjectRetain();
          v183 = v262;
          v184 = sub_1BB17DA30(v182);
          v262 = v183;
          swift_bridgeObjectRelease();
          v292 = v184;
          sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA6A0BA4();
          v185 = sub_1BB872904();
          v177 = v186;
          swift_bridgeObjectRelease();
        }
        else
        {
          v185 = 1701736302;
        }
        v187 = (_QWORD *)((char *)v171 + v269);
        *v187 = 0x726F66736E617254;
        v187[1] = 0xEA0000000000736DLL;
        v187[2] = v185;
        v187[3] = v177;
        swift_storeEnumTagMultiPayload();
        v188 = (_QWORD *)((char *)v171 + v267);
        v189 = (uint64_t)v274;
        *v188 = v274[8];
        swift_storeEnumTagMultiPayload();
        v190 = *(_QWORD *)(v189 + 48);
        v191 = *(_QWORD *)(v190 + 16);
        if (v191)
        {
          v292 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAC7B1B4(0, v191, 0);
          v192 = v190 + ((*(unsigned __int8 *)(v255 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v255 + 80));
          v193 = *(_QWORD *)(v255 + 72);
          do
          {
            v194 = v287;
            sub_1BA4C2DD8(v192, v287, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
            sub_1BA4C2DD8(v194, v159, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
            swift_storeEnumTagMultiPayload();
            sub_1BA4A2E80(v194, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
            v195 = v292;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BAC7B1B4(0, *(_QWORD *)(v195 + 16) + 1, 1);
              v195 = v292;
            }
            v197 = *(_QWORD *)(v195 + 16);
            v196 = *(_QWORD *)(v195 + 24);
            if (v197 >= v196 >> 1)
            {
              sub_1BAC7B1B4(v196 > 1, v197 + 1, 1);
              v195 = v292;
            }
            *(_QWORD *)(v195 + 16) = v197 + 1;
            v198 = v195 + v289 + v197 * v290;
            v159 = (uint64_t)v288;
            sub_1BA5193C4((uint64_t)v288, v198, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
            v192 += v193;
            --v191;
          }
          while (v191);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          v195 = MEMORY[0x1E0DEE9D8];
        }
        v292 = v282;
        sub_1BB386CA8(v195);
        v199 = v292;
        v201 = v283[2];
        v200 = v283[3];
        v47 = (uint64_t *)(v201 + 1);
        v57 = v260;
        v158 = v281;
        if (v201 >= v200 >> 1)
          v283 = sub_1BB392DC4((_QWORD *)(v200 > 1), v201 + 1, 1, v283);
        v202 = v283;
        v283[2] = v47;
        v203 = &v202[4 * v201];
        v204 = v284;
        v203[4] = v285;
        v203[5] = v204;
        *((_BYTE *)v203 + 48) = 1;
        v203[7] = v199;
        sub_1BA4A2E80((uint64_t)v274, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
        v151 = v261;
      }
      swift_bridgeObjectRelease();
      v205 = type metadata accessor for FormatPackage;
      v206 = (uint64_t)v242;
    }
    else
    {
      v205 = type metadata accessor for FormatFile;
      v206 = v149;
    }
    sub_1BA4A2E80(v206, (uint64_t (*)(_QWORD))v205);
  }
LABEL_102:
  v207 = v289;
  v208 = swift_allocObject();
  *(_OWORD *)(v208 + 16) = xmmword_1BB87FC80;
  v209 = (_QWORD *)(v208 + v207);
  v289 = v272 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  v210 = v245;
  sub_1BA4C2DD8(v272 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v245, type metadata accessor for FormatCompilerOptions);
  v211 = v257;
  sub_1BA4C2DD8(v210 + *(int *)(v256 + 24), v257, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
  v212 = v211;
  v213 = v246;
  sub_1BA5193C4(v212, (uint64_t)v246, type metadata accessor for FormatCompilerOptions.Newsroom);
  sub_1BA4A2E80(v210, type metadata accessor for FormatCompilerOptions);
  v215 = *v213;
  v214 = v213[1];
  sub_1BA5931BC(*v213, v214);
  sub_1BA4A2E80((uint64_t)v213, type metadata accessor for FormatCompilerOptions.Newsroom);
  v288 = (char *)v208;
  if (v214 == 1)
  {
    v216 = 0;
    v214 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v215, v214);
    if (v214)
      v216 = v215;
    else
      v216 = 0;
  }
  *v209 = 16721;
  v209[1] = 0xE200000000000000;
  v209[2] = v216;
  v209[3] = v214;
  swift_storeEnumTagMultiPayload();
  v217 = v247;
  sub_1BA4C2DD8(v289, v247, type metadata accessor for FormatCompilerOptions);
  v218 = v257;
  sub_1BA4C2DD8(v217 + *(int *)(v256 + 24), v257, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
  v219 = v248;
  sub_1BA5193C4(v218, (uint64_t)v248, type metadata accessor for FormatCompilerOptions.Newsroom);
  sub_1BA4A2E80(v217, type metadata accessor for FormatCompilerOptions);
  v220 = *v219;
  v221 = v219[1];
  v223 = v219[2];
  v222 = v219[3];
  sub_1BA5931BC(*v219, v221);
  sub_1BA4A2E80((uint64_t)v219, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v221 == 1)
  {
    v224 = 0;
    v222 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v220, v221);
    if (v222)
      v224 = v223;
    else
      v224 = 0;
  }
  v225 = (_QWORD *)((char *)v209 + v290);
  *v225 = 0x676E6967617453;
  v225[1] = 0xE700000000000000;
  v225[2] = v224;
  v225[3] = v222;
  swift_storeEnumTagMultiPayload();
  v226 = v249;
  sub_1BA4C2DD8(v289, v249, type metadata accessor for FormatCompilerOptions);
  v227 = v257;
  sub_1BA4C2DD8(v226 + *(int *)(v256 + 24), v257, (uint64_t (*)(_QWORD))sub_1BA9B5BA0);
  v228 = v250;
  sub_1BA5193C4(v227, (uint64_t)v250, type metadata accessor for FormatCompilerOptions.Newsroom);
  sub_1BA4A2E80(v226, type metadata accessor for FormatCompilerOptions);
  v229 = *v228;
  v230 = v228[1];
  v232 = v228[4];
  v231 = v228[5];
  sub_1BA5931BC(*v228, v230);
  sub_1BA4A2E80((uint64_t)v228, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v230 == 1)
  {
    v233 = 0;
    v231 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA5931FC(v229, v230);
    if (v231)
      v233 = v232;
    else
      v233 = 0;
  }
  v234 = (uint64_t)v288;
  v235 = (_QWORD *)((char *)v209 + v275);
  *v235 = 0x69746375646F7250;
  v235[1] = 0xEA00000000006E6FLL;
  v235[2] = v233;
  v235[3] = v231;
  swift_storeEnumTagMultiPayload();
  v236 = v283;
  v238 = v283[2];
  v237 = v283[3];
  if (v238 >= v237 >> 1)
    v236 = sub_1BB392DC4((_QWORD *)(v237 > 1), v238 + 1, 1, v283);
  v236[2] = v238 + 1;
  v239 = &v236[4 * v238];
  *((_OWORD *)v239 + 2) = xmmword_1BB8A1A10;
  *((_BYTE *)v239 + 48) = 2;
  v239[7] = v234;
  return v236;
}

char *sub_1BB17FA4C(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  objc_super v17;
  uint64_t v18;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_contentSizeObserver] = 0;
  v8 = OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView;
  v9 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v10 = v3;
  *(_QWORD *)&v3[v8] = objc_msgSend(v9, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_editor] = a1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package] = a2;
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections] = MEMORY[0x1E0DEE9D8];
  v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_filterToActiveDevice] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v12 = sub_1BB18262C(a2, v18, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
    v13 = v12;
  else
    v13 = v11;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_compilerResultOutputs] = v13;

  v17.receiver = v10;
  v17.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, 0, 0);
  v15 = sub_1BB17DC7C();

  swift_release();
  swift_release();
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections] = v15;
  swift_bridgeObjectRelease();
  return v14;
}

id sub_1BB17FCB4()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  void *v4;
  id v5;
  objc_super v7;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_contentSizeObserver;
  v4 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_contentSizeObserver];
  if (v4)
  {
    v5 = v4;
    sub_1BB86C430();

    v4 = *(void **)&v1[v3];
  }
  *(_QWORD *)&v1[v3] = 0;

  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_1BB17FDC8()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  objc_super v6;

  v1 = v0;
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    v5 = objc_msgSend(v1, sel_navigationItem);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1BB180210);
}

id sub_1BB180230(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package);
  v5 = OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_compilerResultOutputs;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_compilerResultOutputs);
  swift_bridgeObjectRetain();
  v7 = sub_1BB18262C(v4, v3, v6);
  result = (id)swift_bridgeObjectRelease();
  if (v7)
  {
    *(_QWORD *)(a1 + v5) = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections) = sub_1BB17DC7C();
    swift_bridgeObjectRelease();
    return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView), sel_reloadData);
  }
  return result;
}

id sub_1BB1802F0(uint64_t a1)
{
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections) = sub_1BB17DC7C();
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView), sel_reloadData);
}

id sub_1BB18033C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView), sel_reloadData);
}

void sub_1BB180354(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  v3 = *a1;
  v4 = a3 + 16;
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1BCCE5D40](v4);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v3, sel_contentSize);
    sub_1BB873624();
    objc_msgSend(v6, sel_setPreferredContentSize_);

    v7 = objc_msgSend(v6, sel_view);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_setNeedsLayout);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for DebugFormatGroupViewController()
{
  return objc_opt_self();
}

void sub_1BB1805B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v1 = type metadata accessor for FormatSlotDefinitionItemSet();
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v25[2] = (char *)v25 - v5;
  v26 = type metadata accessor for DebugFormatEditorLayoutContext();
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25[0] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2BAC00, v8, v3);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA4B07F0(0, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78], v3);
  MEMORY[0x1E0C80A78](v11);
  v28 = (char *)v25 - v12;
  v13 = type metadata accessor for DebugFormatGroupItem();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v30 = (uint64_t)v25 - v18;
  v19 = sub_1BB86CBD4();
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections);
    if (v19 < *(_QWORD *)(v20 + 16))
    {
      v25[1] = v6;
      v21 = *(_QWORD *)(v20 + 32 * v19 + 56);
      swift_bridgeObjectRetain();
      v22 = sub_1BB86CBC8();
      if ((v22 & 0x8000000000000000) == 0)
      {
        if (v22 < *(_QWORD *)(v21 + 16))
        {
          v27 = v0;
          v23 = v30;
          sub_1BA4C2DD8(v21+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v22, v30, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
          swift_bridgeObjectRelease();
          sub_1BA4C2DD8(v23, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
          v24 = (char *)&loc_1BB18085C + dword_1BB1817A4[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
LABEL_9:
        __break(1u);
        JUMPOUT(0x1BB1817A4);
      }
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  __break(1u);
  goto LABEL_8;
}

uint64_t sub_1BB1817B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;
  char v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package);
  v4 = *a1;
  v3 = a1[1];
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) == 6)
  {
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if (v11 == *(_QWORD *)(v2 + 16) && v12 == *(_QWORD *)(v2 + 24))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = sub_1BB874398();
      swift_bridgeObjectRelease();
      v7 = 0;
      if ((v6 & 1) == 0)
        return v7 & 1;
    }
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if (v11 != v4 || v12 != v3)
      goto LABEL_22;
  }
  else
  {
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if (v11 == *(_QWORD *)(v2 + 16) && v12 == *(_QWORD *)(v2 + 24))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = sub_1BB874398();
      swift_bridgeObjectRelease();
      v7 = 0;
      if ((v9 & 1) == 0)
        return v7 & 1;
    }
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if (v11 != v4 || v12 != v3)
    {
LABEL_22:
      v7 = sub_1BB874398();
      goto LABEL_23;
    }
  }
  v7 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1BB181B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[9];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v28[8] = (char *)v28 - v4;
  v29 = type metadata accessor for DebugFormatEditorLayoutContext();
  v5 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v28[1] = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2BAC00, v7, v2);
  MEMORY[0x1E0C80A78](v8);
  v28[6] = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v28[5] = (char *)v28 - v11;
  sub_1BA4B07F0(0, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78], v2);
  MEMORY[0x1E0C80A78](v12);
  v28[7] = (char *)v28 - v13;
  sub_1BA4B07F0(0, qword_1EF2ADE58, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, v2);
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for FormatSlotDefinitionItemSet();
  v28[4] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v16 = type metadata accessor for DebugFormatGroupItem();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v31 = (uint64_t)v28 - v21;
  v22 = sub_1BB86CBD4();
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections);
    if (v22 < *(_QWORD *)(v23 + 16))
    {
      v28[3] = v15;
      v24 = *(_QWORD *)(v23 + 32 * v22 + 56);
      swift_bridgeObjectRetain();
      v25 = sub_1BB86CBC8();
      if ((v25 & 0x8000000000000000) == 0)
      {
        if (v25 < *(_QWORD *)(v24 + 16))
        {
          v28[2] = v5;
          v26 = v31;
          sub_1BA4C2DD8(v24+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v25, v31, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
          swift_bridgeObjectRelease();
          sub_1BA4C2DD8(v26, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
          v27 = (char *)&loc_1BB181E14 + *((int *)qword_1BB182418 + swift_getEnumCaseMultiPayload());
          __asm { BR              X10 }
        }
LABEL_9:
        __break(1u);
        JUMPOUT(0x1BB182418);
      }
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  __break(1u);
  goto LABEL_8;
}

void sub_1BB18242C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  if (*(_QWORD *)(a1 + 16))
  {
    v3 = v2;
    type metadata accessor for DebugFormatInspectorPaneViewController();
    v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_editor];
    swift_retain();
    swift_bridgeObjectRetain();
    v10 = (id)sub_1BB2099E8(v6, a1, 0, 0);
    objc_msgSend(v10, sel_setModalPresentationStyle_, 7);
    v7 = objc_msgSend(v10, sel_popoverPresentationController);
    objc_msgSend(v7, sel_setSourceView_, a2);

    v8 = objc_msgSend(v10, sel_popoverPresentationController);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, sel_setPermittedArrowDirections_, 4);

    }
    objc_msgSend(v10, sel_setPreferredContentSize_, 375.0, 0.0);
    objc_msgSend(v3, sel_presentViewController_animated_completion_, v10, 1, 0);

  }
}

uint64_t sub_1BB18262C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)(a2 + 16))
  {
    v6 = *(_QWORD *)(a1 + 16);
    v5 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain();
    v7 = sub_1BA6E35A8(v6, v5);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10 = sub_1BB17DB14(v9);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  v10 = MEMORY[0x1E0DEE9D8];
LABEL_6:
  v11 = *(_QWORD *)(v10 + 16);
  if (!*(_QWORD *)(a3 + 16))
  {
    if (v11)
      return v10;
    goto LABEL_8;
  }
  if (v11)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

void sub_1BB1826F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BC5A0)
  {
    type metadata accessor for FormatSlotDefinition();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BC5A0);
  }
}

uint64_t sub_1BB182758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1EF2BC5A8, (uint64_t (*)(uint64_t))sub_1BB1826F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1827B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BB1827CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

char *keypath_get_selector_contentSize()
{
  return sel_contentSize;
}

uint64_t sub_1BB1827F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB18281C(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BB180354(a1, a2, v2);
}

ValueMetadata *_s10GapOfflineVMa()
{
  return &_s10GapOfflineVN;
}

ValueMetadata *_s3GapVMa()
{
  return &_s3GapVN;
}

uint64_t sub_1BB182854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C010C(v1, a1);
}

uint64_t sub_1BB182870()
{
  return sub_1BB690D4C();
}

uint64_t sub_1BB182880@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t inited;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  uint64_t v34;
  __int128 v35;
  __int128 *v36;
  __int128 v37[2];
  uint64_t v38[5];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47[9];

  v3 = sub_1BB86DA38();
  v34 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s10GapOfflineV5BoundVMa(0);
  v6 = v1 + *(int *)(v5 + 24);
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_BYTE *)(v6 + 32);
  v9 = *(_QWORD *)(v6 + 40);
  v10 = *(_QWORD *)(v6 + 48);
  v11 = *(_QWORD *)(v6 + 56);
  v12 = *(_QWORD *)(v6 + 64);
  v13 = *(_QWORD *)(v6 + 72);
  v14 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)&v39 = *(_QWORD *)v6;
  *((_QWORD *)&v39 + 1) = v7;
  v40 = *(_OWORD *)(v6 + 16);
  LOBYTE(v41) = v8;
  *((_QWORD *)&v41 + 1) = v9;
  v42 = v10;
  v43 = v11;
  v44 = v12;
  v45 = v13;
  v46 = v14;
  v15 = v1 + *(int *)(v5 + 20);
  v16 = type metadata accessor for GroupLayoutContext();
  v17 = *(int *)(v16 + 40);
  v18 = v15;
  v32[1] = v15;
  v19 = *(_QWORD *)(*(_QWORD *)(v15 + v17) + 16);
  v20 = *(double *)(v18 + *(int *)(v16 + 32));
  sub_1BA4C010C(v19 + 16, (uint64_t)v47);
  sub_1BA4C010C(v19 + 56, (uint64_t)v37);
  v21 = v20 * *(double *)(v19 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v47, inited + 16);
  sub_1BA4CECCC(v37, inited + 56);
  *(double *)(inited + 96) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA75A650(v13, v14);
  sub_1BB33E5BC(v38);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1BB3B1AEC(&v39, (uint64_t)v38, (uint64_t)v47);
  v36 = v47;
  (*(void (**)(char *, _QWORD, _QWORD))(v34 + 104))(v33, *MEMORY[0x1E0DB6208], v35);
  sub_1BB184CA4();
  swift_allocObject();
  sub_1BB86DB34();
  sub_1BB86DB40();
  swift_release();
  v23 = v39;
  v24 = v40;
  v35 = v41;
  v25 = v42;
  v26 = v43;
  sub_1BA6B391C(0, &qword_1ED3B9D08, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DED1E8]);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BB87CE70;
  v28 = swift_allocObject();
  sub_1BB184DF8((uint64_t)v47, v28 + 16);
  *(_OWORD *)(v28 + 152) = v23;
  *(_OWORD *)(v28 + 168) = v24;
  *(_OWORD *)(v28 + 184) = v35;
  *(_QWORD *)(v28 + 200) = v25;
  *(_QWORD *)(v28 + 208) = v26;
  *(_QWORD *)(v27 + 32) = v28 | 0x2000000000000000;
  *(_QWORD *)&v39 = v27;
  sub_1BA6B391C(0, (unint64_t *)&qword_1ED3B9350, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B39E4();
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  *(_OWORD *)(a1 + 8) = v23;
  *(_OWORD *)(a1 + 24) = v24;
  v30 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v29;
  *(_QWORD *)(a1 + 48) = v30;
  return sub_1BB184E34((uint64_t)v47);
}

uint64_t sub_1BB182BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9D60, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  v4 = (uint64_t *)(v1 + *(int *)(a1 + 24));
  v6 = *v4;
  v5 = v4[1];
  v7 = v4[2];
  v8 = v4[3];
  v9 = *((_BYTE *)v4 + 32);
  v10 = v4[6];
  v11 = v4[8];
  v16 = v4[7];
  v17 = v4[5];
  v12 = v4[9];
  v13 = v4[10];
  *(_QWORD *)(v3 + 56) = &type metadata for FeedGapOffline;
  *(_QWORD *)(v3 + 64) = sub_1BACB5734();
  v14 = swift_allocObject();
  *(_QWORD *)(v3 + 32) = v14;
  *(_QWORD *)(v14 + 16) = v6;
  *(_QWORD *)(v14 + 24) = v5;
  *(_QWORD *)(v14 + 32) = v7;
  *(_QWORD *)(v14 + 40) = v8;
  *(_BYTE *)(v14 + 48) = v9;
  *(_QWORD *)(v14 + 56) = v17;
  *(_QWORD *)(v14 + 64) = v10;
  *(_QWORD *)(v14 + 72) = v16;
  *(_QWORD *)(v14 + 80) = v11;
  *(_QWORD *)(v14 + 88) = v12;
  *(_QWORD *)(v14 + 96) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA75A650(v12, v13);
  return v3;
}

uint64_t sub_1BB182CE8()
{
  return sub_1BB690D64();
}

uint64_t _s10GapOfflineV5BoundVMa(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3AC688);
}

_QWORD *sub_1BB182D0C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  char *__dst;
  uint64_t v40;
  uint64_t *v41;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v40 = a3;
    v41 = a2;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BB86D7A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for GroupLayoutContext();
    v13 = v12[5];
    v14 = &v9[v13];
    v15 = v10 + v13;
    v16 = sub_1BB86D660();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v12[6];
    v18 = &v9[v17];
    v19 = v10 + v17;
    *(_OWORD *)v18 = *(_OWORD *)(v10 + v17);
    v18[16] = *(_BYTE *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    v18[19] = *(_BYTE *)(v10 + v17 + 19);
    *((_DWORD *)v18 + 5) = *(_DWORD *)(v10 + v17 + 20);
    v20 = *(_QWORD *)(v10 + v17 + 24);
    if (v20 >= 2)
      v20 = swift_bridgeObjectRetain();
    *((_QWORD *)v18 + 3) = v20;
    v21 = type metadata accessor for FeedLayoutSolverOptions(0);
    v22 = *(int *)(v21 + 36);
    __dst = &v18[v22];
    v23 = (const void *)(v19 + v22);
    v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v28 = sub_1BB8705C4();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(__dst, v23, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    *(_QWORD *)&v18[*(int *)(v21 + 40)] = *(_QWORD *)(v19 + *(int *)(v21 + 40));
    *(_QWORD *)&v9[v12[7]] = *(_QWORD *)(v10 + v12[7]);
    *(_QWORD *)&v9[v12[8]] = *(_QWORD *)(v10 + v12[8]);
    v9[v12[9]] = *(_BYTE *)(v10 + v12[9]);
    *(_QWORD *)&v9[v12[10]] = *(_QWORD *)(v10 + v12[10]);
    v9[v12[11]] = *(_BYTE *)(v10 + v12[11]);
    *(_QWORD *)&v9[v12[12]] = *(_QWORD *)(v10 + v12[12]);
    v29 = *(int *)(v40 + 24);
    v30 = (char *)v4 + v29;
    v31 = (uint64_t)v41 + v29;
    v32 = *(_QWORD *)(v31 + 8);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = *(_QWORD *)(v31 + 24);
    *((_QWORD *)v30 + 2) = *(_QWORD *)(v31 + 16);
    *((_QWORD *)v30 + 3) = v33;
    v30[32] = *(_BYTE *)(v31 + 32);
    v34 = *(_QWORD *)(v31 + 48);
    *((_QWORD *)v30 + 5) = *(_QWORD *)(v31 + 40);
    *((_QWORD *)v30 + 6) = v34;
    v35 = *(_QWORD *)(v31 + 64);
    *((_QWORD *)v30 + 7) = *(_QWORD *)(v31 + 56);
    *((_QWORD *)v30 + 8) = v35;
    v36 = (_QWORD *)(v31 + 72);
    v37 = *(_QWORD *)(v31 + 80);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37 >= 0x11)
    {
      *((_QWORD *)v30 + 9) = *v36;
      *((_QWORD *)v30 + 10) = v37;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v30 + 72) = *(_OWORD *)v36;
    }
    *(_QWORD *)((char *)v4 + *(int *)(v40 + 28)) = *(uint64_t *)((char *)v41 + *(int *)(v40 + 28));
  }
  swift_retain();
  return v4;
}

uint64_t sub_1BB183004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for GroupLayoutContext();
  v7 = v4 + *(int *)(v6 + 20);
  v8 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *(int *)(v6 + 24);
  if (*(_QWORD *)(v9 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  v13 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 80) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BB183144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v38 = a3;
  v39 = a2;
  v7 = *(int *)(a3 + 20);
  v40 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  v19 = *(_QWORD *)(v9 + v16 + 24);
  if (v19 >= 2)
    v19 = swift_bridgeObjectRetain();
  *(_QWORD *)(v17 + 24) = v19;
  v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v20 + 36);
  v22 = (void *)(v17 + v21);
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(_QWORD *)(v17 + *(int *)(v20 + 40)) = *(_QWORD *)(v18 + *(int *)(v20 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  v28 = *(int *)(v38 + 24);
  v29 = v40 + v28;
  v30 = v39 + v28;
  v31 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_QWORD *)(v29 + 8) = v31;
  v32 = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 24) = v32;
  *(_BYTE *)(v29 + 32) = *(_BYTE *)(v30 + 32);
  v33 = *(_QWORD *)(v30 + 48);
  *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v29 + 48) = v33;
  v34 = *(_QWORD *)(v30 + 64);
  *(_QWORD *)(v29 + 56) = *(_QWORD *)(v30 + 56);
  *(_QWORD *)(v29 + 64) = v34;
  v35 = (_QWORD *)(v30 + 72);
  v36 = *(_QWORD *)(v30 + 80);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36 >= 0x11)
  {
    *(_QWORD *)(v29 + 72) = *v35;
    *(_QWORD *)(v29 + 80) = v36;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v29 + 72) = *(_OWORD *)v35;
  }
  *(_QWORD *)(v40 + *(int *)(v38 + 28)) = *(_QWORD *)(v39 + *(int *)(v38 + 28));
  swift_retain();
  return v40;
}

uint64_t *sub_1BB183404(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v42 = a3;
  v43 = a2;
  v6 = *(int *)(a3 + 20);
  v44 = a1;
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  v19 = (unint64_t *)&v7[v15 + 24];
  v20 = *(_QWORD *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v16 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v19 = *((_QWORD *)v17 + 3);
    }
  }
  else
  {
    *v19 = v20;
    if (v20 >= 2)
      swift_bridgeObjectRetain();
  }
  v41 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v41 + 36);
  v22 = (uint64_t)&v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v40 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (v27)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64);
      v30 = (void *)v40;
LABEL_13:
      memcpy(v30, v23, v29);
      goto LABEL_16;
    }
    v32 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v40, v23, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v40, 0, 1, v24);
  }
  else
  {
    if (v27)
    {
      sub_1BA4A2E80(v40, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v29 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
      v30 = (void *)v40;
      goto LABEL_13;
    }
    v33 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v40, v23, v33);
  }
LABEL_16:
  *(_QWORD *)&v16[*(int *)(v41 + 40)] = *(_QWORD *)&v17[*(int *)(v41 + 40)];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  *(_QWORD *)&v7[v10[10]] = *(_QWORD *)&v8[v10[10]];
  swift_retain();
  swift_release();
  v7[v10[11]] = v8[v10[11]];
  *(_QWORD *)&v7[v10[12]] = *(_QWORD *)&v8[v10[12]];
  swift_retain();
  swift_release();
  v34 = *(int *)(v42 + 24);
  v35 = (char *)v44 + v34;
  v36 = (char *)v43 + v34;
  *(_QWORD *)v35 = *(uint64_t *)((char *)v43 + v34);
  *((_QWORD *)v35 + 1) = *(uint64_t *)((char *)v43 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
  v37 = *((_QWORD *)v36 + 3);
  v35[32] = v36[32];
  *((_QWORD *)v35 + 3) = v37;
  *((_QWORD *)v35 + 5) = *((_QWORD *)v36 + 5);
  *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 7) = *((_QWORD *)v36 + 7);
  *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = *((_QWORD *)v36 + 10);
  if (*((_QWORD *)v35 + 10) >= 0x11uLL)
  {
    if (v38 >= 0x11)
    {
      *((_QWORD *)v35 + 9) = *((_QWORD *)v36 + 9);
      *((_QWORD *)v35 + 10) = *((_QWORD *)v36 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1BA905D68((uint64_t)(v35 + 72));
    goto LABEL_21;
  }
  if (v38 < 0x11)
  {
LABEL_21:
    *(_OWORD *)(v35 + 72) = *(_OWORD *)(v36 + 72);
    goto LABEL_23;
  }
  *((_QWORD *)v35 + 9) = *((_QWORD *)v36 + 9);
  *((_QWORD *)v35 + 10) = *((_QWORD *)v36 + 10);
  swift_bridgeObjectRetain();
LABEL_23:
  *(uint64_t *)((char *)v44 + *(int *)(v42 + 28)) = *(uint64_t *)((char *)v43 + *(int *)(v42 + 28));
  swift_retain();
  swift_release();
  return v44;
}

uint64_t sub_1BB183848(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *__dst;
  uint64_t v34;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[6];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(v8 + v15);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(_BYTE *)(v16 + 19) = *(_BYTE *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v8 + v15 + 24);
  v18 = type metadata accessor for FeedLayoutSolverOptions(0);
  v19 = *(int *)(v18 + 36);
  __dst = (void *)(v16 + v19);
  v34 = v18;
  v20 = (const void *)(v17 + v19);
  v21 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(__dst, v20, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  *(_QWORD *)(v16 + *(int *)(v34 + 40)) = *(_QWORD *)(v17 + *(int *)(v34 + 40));
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  *(_QWORD *)(v7 + v10[10]) = *(_QWORD *)(v8 + v10[10]);
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_QWORD *)(v7 + v10[12]) = *(_QWORD *)(v8 + v10[12]);
  v25 = a3[6];
  v26 = a3[7];
  v27 = a1 + v25;
  v28 = a2 + v25;
  v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_QWORD *)(v27 + 80) = *(_QWORD *)(v28 + 80);
  v30 = *(_OWORD *)(v28 + 64);
  v31 = *(_OWORD *)(v28 + 32);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(v28 + 48);
  *(_OWORD *)(v27 + 64) = v30;
  *(_OWORD *)(v27 + 32) = v31;
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  return a1;
}

uint64_t sub_1BB183A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v47 = a3;
  v48 = a2;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 18) = *(_BYTE *)(v9 + v16 + 18);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_BYTE *)(v17 + 20) = *(_BYTE *)(v9 + v16 + 20);
  *(_BYTE *)(v17 + 21) = *(_BYTE *)(v9 + v16 + 21);
  *(_BYTE *)(v17 + 22) = *(_BYTE *)(v9 + v16 + 22);
  *(_BYTE *)(v17 + 23) = *(_BYTE *)(v9 + v16 + 23);
  v19 = (unint64_t *)(v8 + v16 + 24);
  v20 = *(_QWORD *)(v9 + v16 + 24);
  v49 = a1;
  if (*v19 < 2)
    goto LABEL_4;
  if (v20 < 2)
  {
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v20 = *(_QWORD *)(v18 + 24);
LABEL_4:
    *v19 = v20;
    goto LABEL_6;
  }
  *v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  v46 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v46 + 36);
  v22 = v17 + v21;
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v45 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    v28 = v49;
    if (v27)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v30 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
      v31 = (void *)v45;
LABEL_11:
      memcpy(v31, v23, v30);
      goto LABEL_14;
    }
    v33 = sub_1BB8705C4();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v45, v23, v33);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v45, 0, 1, v24);
  }
  else
  {
    v28 = v49;
    if (v27)
    {
      sub_1BA4A2E80(v45, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v30 = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64);
      v31 = (void *)v45;
      goto LABEL_11;
    }
    v34 = sub_1BB8705C4();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v45, v23, v34);
  }
LABEL_14:
  *(_QWORD *)(v17 + *(int *)(v46 + 40)) = *(_QWORD *)(v18 + *(int *)(v46 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  swift_release();
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  swift_release();
  v35 = *(int *)(v47 + 24);
  v36 = v28 + v35;
  v37 = v48 + v35;
  v38 = *(_QWORD *)(v48 + v35 + 8);
  *(_QWORD *)v36 = *(_QWORD *)(v48 + v35);
  *(_QWORD *)(v36 + 8) = v38;
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v37 + 24);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
  *(_QWORD *)(v36 + 24) = v39;
  *(_BYTE *)(v36 + 32) = *(_BYTE *)(v37 + 32);
  v40 = *(_QWORD *)(v37 + 48);
  *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
  *(_QWORD *)(v36 + 48) = v40;
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(v37 + 64);
  *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
  *(_QWORD *)(v36 + 64) = v41;
  swift_bridgeObjectRelease();
  v42 = (_QWORD *)(v37 + 72);
  if (*(_QWORD *)(v36 + 80) >= 0x11uLL)
  {
    v43 = *(_QWORD *)(v37 + 80);
    if (v43 >= 0x11)
    {
      *(_QWORD *)(v36 + 72) = *v42;
      *(_QWORD *)(v36 + 80) = v43;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_1BA905D68(v36 + 72);
  }
  *(_OWORD *)(v36 + 72) = *(_OWORD *)v42;
LABEL_19:
  *(_QWORD *)(v28 + *(int *)(v47 + 28)) = *(_QWORD *)(v48 + *(int *)(v47 + 28));
  swift_release();
  return v28;
}

uint64_t sub_1BB183E44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB183E54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB183E64()
{
  return sub_1BA836B4C();
}

uint64_t sub_1BB183E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v36 = a3;
  v37 = a2;
  v7 = *(int *)(a3 + 20);
  v38 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  v19 = *(_QWORD *)(v9 + v16 + 24);
  if (v19 >= 2)
    v19 = swift_bridgeObjectRetain();
  *(_QWORD *)(v17 + 24) = v19;
  v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v20 + 36);
  v22 = (void *)(v17 + v21);
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(_QWORD *)(v17 + *(int *)(v20 + 40)) = *(_QWORD *)(v18 + *(int *)(v20 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  v28 = *(int *)(v36 + 24);
  v29 = v38 + v28;
  v30 = v37 + v28;
  v31 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_QWORD *)(v29 + 8) = v31;
  v32 = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 24) = v32;
  *(_BYTE *)(v29 + 32) = *(_BYTE *)(v30 + 32);
  v33 = (_QWORD *)(v30 + 40);
  v34 = *(_QWORD *)(v30 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v34 >= 0x11)
  {
    *(_QWORD *)(v29 + 40) = *v33;
    *(_QWORD *)(v29 + 48) = v34;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v29 + 40) = *(_OWORD *)v33;
  }
  *(_QWORD *)(v38 + *(int *)(v36 + 28)) = *(_QWORD *)(v37 + *(int *)(v36 + 28));
  swift_retain();
  return v38;
}

uint64_t *sub_1BB184110(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v42 = a3;
  v43 = a2;
  v6 = *(int *)(a3 + 20);
  v44 = a1;
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  v19 = (unint64_t *)&v7[v15 + 24];
  v20 = *(_QWORD *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v16 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v19 = *((_QWORD *)v17 + 3);
    }
  }
  else
  {
    *v19 = v20;
    if (v20 >= 2)
      swift_bridgeObjectRetain();
  }
  v41 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v41 + 36);
  v22 = (uint64_t)&v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v40 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (v27)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64);
      v30 = (void *)v40;
LABEL_13:
      memcpy(v30, v23, v29);
      goto LABEL_16;
    }
    v32 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v40, v23, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v40, 0, 1, v24);
  }
  else
  {
    if (v27)
    {
      sub_1BA4A2E80(v40, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v29 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
      v30 = (void *)v40;
      goto LABEL_13;
    }
    v33 = sub_1BB8705C4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v40, v23, v33);
  }
LABEL_16:
  *(_QWORD *)&v16[*(int *)(v41 + 40)] = *(_QWORD *)&v17[*(int *)(v41 + 40)];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  *(_QWORD *)&v7[v10[10]] = *(_QWORD *)&v8[v10[10]];
  swift_retain();
  swift_release();
  v7[v10[11]] = v8[v10[11]];
  *(_QWORD *)&v7[v10[12]] = *(_QWORD *)&v8[v10[12]];
  swift_retain();
  swift_release();
  v34 = *(int *)(v42 + 24);
  v35 = (char *)v44 + v34;
  v36 = (char *)v43 + v34;
  *(_QWORD *)v35 = *(uint64_t *)((char *)v43 + v34);
  *((_QWORD *)v35 + 1) = *(uint64_t *)((char *)v43 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
  v37 = *((_QWORD *)v36 + 3);
  v35[32] = v36[32];
  *((_QWORD *)v35 + 3) = v37;
  v38 = *((_QWORD *)v36 + 6);
  if (*((_QWORD *)v35 + 6) >= 0x11uLL)
  {
    if (v38 >= 0x11)
    {
      *((_QWORD *)v35 + 5) = *((_QWORD *)v36 + 5);
      *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1BA905D68((uint64_t)(v35 + 40));
    goto LABEL_21;
  }
  if (v38 < 0x11)
  {
LABEL_21:
    *(_OWORD *)(v35 + 40) = *(_OWORD *)(v36 + 40);
    goto LABEL_23;
  }
  *((_QWORD *)v35 + 5) = *((_QWORD *)v36 + 5);
  *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
  swift_bridgeObjectRetain();
LABEL_23:
  *(uint64_t *)((char *)v44 + *(int *)(v42 + 28)) = *(uint64_t *)((char *)v43 + *(int *)(v42 + 28));
  swift_retain();
  swift_release();
  return v44;
}

uint64_t sub_1BB184514(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v30;
  void *__dst;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[6];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(v8 + v15);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(_BYTE *)(v16 + 19) = *(_BYTE *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(_QWORD *)(v16 + 24) = *(_QWORD *)(v8 + v15 + 24);
  v30 = type metadata accessor for FeedLayoutSolverOptions(0);
  v18 = *(int *)(v30 + 36);
  __dst = (void *)(v16 + v18);
  v19 = (const void *)(v17 + v18);
  v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(__dst, v19, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  *(_QWORD *)(v16 + *(int *)(v30 + 40)) = *(_QWORD *)(v17 + *(int *)(v30 + 40));
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  *(_QWORD *)(v7 + v10[10]) = *(_QWORD *)(v8 + v10[10]);
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_QWORD *)(v7 + v10[12]) = *(_QWORD *)(v8 + v10[12]);
  v24 = a3[6];
  v25 = a3[7];
  v26 = a1 + v24;
  v27 = a2 + v24;
  v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_QWORD *)(v26 + 48) = *(_QWORD *)(v27 + 48);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  return a1;
}

uint64_t sub_1BB184750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v43;
  void *__src;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v47 = a3;
  v48 = a2;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  *(_OWORD *)v17 = *(_OWORD *)(v9 + v16);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v9 + v16 + 16);
  *(_BYTE *)(v17 + 17) = *(_BYTE *)(v9 + v16 + 17);
  *(_BYTE *)(v17 + 18) = *(_BYTE *)(v9 + v16 + 18);
  *(_BYTE *)(v17 + 19) = *(_BYTE *)(v9 + v16 + 19);
  *(_BYTE *)(v17 + 20) = *(_BYTE *)(v9 + v16 + 20);
  *(_BYTE *)(v17 + 21) = *(_BYTE *)(v9 + v16 + 21);
  *(_BYTE *)(v17 + 22) = *(_BYTE *)(v9 + v16 + 22);
  *(_BYTE *)(v17 + 23) = *(_BYTE *)(v9 + v16 + 23);
  v19 = (unint64_t *)(v8 + v16 + 24);
  v20 = *(_QWORD *)(v9 + v16 + 24);
  v43 = a1;
  if (*v19 < 2)
    goto LABEL_4;
  if (v20 < 2)
  {
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v20 = *(_QWORD *)(v18 + 24);
LABEL_4:
    *v19 = v20;
    goto LABEL_6;
  }
  *v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  v46 = type metadata accessor for FeedLayoutSolverOptions(0);
  v21 = *(int *)(v46 + 36);
  v22 = v17 + v21;
  v23 = (void *)(v18 + v21);
  v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v45 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  __src = v23;
  v27 = v26((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    v28 = v43;
    if (v27)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v30 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
      v31 = (void *)v45;
LABEL_11:
      memcpy(v31, __src, v30);
      goto LABEL_14;
    }
    v33 = sub_1BB8705C4();
    (*(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v45, __src, v33);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v45, 0, 1, v24);
  }
  else
  {
    v28 = v43;
    if (v27)
    {
      sub_1BA4A2E80(v45, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v30 = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64);
      v31 = (void *)v45;
      goto LABEL_11;
    }
    v34 = sub_1BB8705C4();
    (*(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v45, __src, v34);
  }
LABEL_14:
  *(_QWORD *)(v17 + *(int *)(v46 + 40)) = *(_QWORD *)(v18 + *(int *)(v46 + 40));
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_BYTE *)(v8 + v11[9]) = *(_BYTE *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  swift_release();
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v9 + v11[12]);
  swift_release();
  v35 = *(int *)(v47 + 24);
  v36 = v28 + v35;
  v37 = v48 + v35;
  v38 = *(_QWORD *)(v48 + v35 + 8);
  *(_QWORD *)v36 = *(_QWORD *)(v48 + v35);
  *(_QWORD *)(v36 + 8) = v38;
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v37 + 24);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
  *(_QWORD *)(v36 + 24) = v39;
  *(_BYTE *)(v36 + 32) = *(_BYTE *)(v37 + 32);
  v40 = (_QWORD *)(v37 + 40);
  if (*(_QWORD *)(v36 + 48) >= 0x11uLL)
  {
    v41 = *(_QWORD *)(v37 + 48);
    if (v41 >= 0x11)
    {
      *(_QWORD *)(v36 + 40) = *v40;
      *(_QWORD *)(v36 + 48) = v41;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_1BA905D68(v36 + 40);
  }
  *(_OWORD *)(v36 + 40) = *(_OWORD *)v40;
LABEL_19:
  *(_QWORD *)(v28 + *(int *)(v47 + 28)) = *(_QWORD *)(v48 + *(int *)(v47 + 28));
  swift_release();
  return v28;
}

uint64_t sub_1BB184AE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB184B6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB184BF0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1ED3AC678, _s10GapOfflineV5BoundVMa, (uint64_t)&unk_1BB8F23F8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB184C2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64) >= 0x11uLL)
    swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocObject();
}

uint64_t sub_1BB184C68()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB184C9C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB3B25D8(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BB184CA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC668)
  {
    sub_1BB184D1C();
    sub_1BB184D60();
    v0 = sub_1BB86DB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC668);
  }
}

unint64_t sub_1BB184D1C()
{
  unint64_t result;

  result = qword_1ED3AC760;
  if (!qword_1ED3AC760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapOfflineViewLayout, &type metadata for GapOfflineViewLayout);
    atomic_store(result, (unint64_t *)&qword_1ED3AC760);
  }
  return result;
}

unint64_t sub_1BB184D60()
{
  unint64_t result;

  result = qword_1ED3AC748;
  if (!qword_1ED3AC748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GapOfflineViewLayout.Attributes, &type metadata for GapOfflineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AC748);
  }
  return result;
}

uint64_t sub_1BB184DA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) >= 0x11uLL)
    swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB184DF8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for GapOfflineViewLayout.Context(a2, a1);
  return a2;
}

uint64_t sub_1BB184E34(uint64_t a1)
{
  destroy for GapOfflineViewLayout.Context(a1);
  return a1;
}

uint64_t sub_1BB184E68()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for DebugFormatCodeViewController()
{
  uint64_t result;

  result = qword_1EF2BC5D8;
  if (!qword_1EF2BC5D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB184EE8()
{
  return swift_initClassMetadata2();
}

char *sub_1BB184F34(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  uint64_t v20;
  id v21;
  char *v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  char *v32;
  void *v33;
  char *v34;
  id v35;
  void *v36;
  char *v37;
  id v38;
  uint64_t v40;
  char *v41;
  objc_class *ObjectType;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  objc_super v46;
  objc_super v47;
  objc_super v48;
  _QWORD v49[3];
  uint64_t v50;
  _UNKNOWN **v51;

  v44 = a2;
  v45 = (uint64_t (*)(uint64_t))a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BB86BD10();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1BB86BCE0();
  MEMORY[0x1E0C80A78](v7);
  sub_1BB86BD4C();
  swift_allocObject();
  v41 = v2;
  v8 = sub_1BB86BD40();
  sub_1BB18556C(0, &qword_1EF2AB3B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  sub_1BB86BCC8();
  sub_1BB86BCD4();
  v49[0] = v9;
  sub_1BA4A2870(&qword_1EF2AB3C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE0E0], MEMORY[0x1E0CAE0F8]);
  sub_1BB18556C(0, &qword_1EF2AB3C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA959058();
  v10 = v45;
  sub_1BB873BC4();
  sub_1BB86BCEC();
  *v6 = 0x7974696E69666E69;
  v6[1] = 0xE800000000000000;
  v6[2] = 0x74696E69666E692DLL;
  v6[3] = 0xE900000000000079;
  v6[4] = 7233902;
  v6[5] = 0xE300000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAE180], v3);
  sub_1BB86BD1C();
  v43 = v8;
  if (v10)
  {
    swift_retain();
    v11 = v10(v8);
    v13 = v12;
    v14 = (void *)v11;
    sub_1BA49EBE0((uint64_t)v10);
    v15 = 0;
  }
  else
  {
    sub_1BB1855C4();
    v14 = (void *)swift_allocError();
    v13 = 0;
    v15 = 1;
  }
  v16 = type metadata accessor for DebugFormatCodeJSONLoader();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v14;
  *(_QWORD *)(v17 + 24) = v13;
  *(_BYTE *)(v17 + 32) = v15;
  v50 = v16;
  v51 = &off_1E7306BA8;
  v49[0] = v17;
  v18 = (objc_class *)type metadata accessor for DebugFormatCodeDisplayViewController();
  v19 = (char *)objc_allocWithZone(v18);
  v20 = OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView;
  v21 = objc_allocWithZone(MEMORY[0x1E0DC3E50]);
  sub_1BB185608(v14, v13, v15);
  swift_retain();
  v22 = v19;
  *(_QWORD *)&v19[v20] = objc_msgSend(v21, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BA4C010C((uint64_t)v49, (uint64_t)&v22[OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_loader]);

  v48.receiver = v22;
  v48.super_class = v18;
  v23 = objc_msgSendSuper2(&v48, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  swift_release();
  v24 = v41;
  *(_QWORD *)&v41[qword_1EF2BC5C8] = v23;
  v25 = type metadata accessor for DebugFormatCodeYAMLLoader();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v14;
  *(_QWORD *)(v26 + 24) = v13;
  *(_BYTE *)(v26 + 32) = v15;
  v50 = v25;
  v51 = &off_1E730B3B0;
  v49[0] = v26;
  v27 = (char *)objc_allocWithZone(v18);
  v28 = OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView;
  v29 = objc_allocWithZone(MEMORY[0x1E0DC3E50]);
  sub_1BB185608(v14, v13, v15);
  swift_retain();
  v30 = v27;
  *(_QWORD *)&v27[v28] = objc_msgSend(v29, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BA4C010C((uint64_t)v49, (uint64_t)&v30[OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_loader]);

  v47.receiver = v30;
  v47.super_class = v18;
  v31 = objc_msgSendSuper2(&v47, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  swift_release();
  *(_QWORD *)&v24[qword_1EF2BC5D0] = v31;

  v46.receiver = v24;
  v46.super_class = ObjectType;
  v32 = (char *)objc_msgSendSuper2(&v46, sel_initWithNibName_bundle_, 0, 0);
  v33 = *(void **)&v32[qword_1EF2BC5D0];
  sub_1BA4A2870(&qword_1EF2BC630, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCodeDisplayViewController, (uint64_t)&unk_1BB90F458);
  v34 = v32;
  v35 = v33;
  sub_1BB8708B8();

  v36 = *(void **)&v34[qword_1EF2BC5C8];
  v37 = v34;
  v38 = v36;
  sub_1BB8708B8();
  sub_1BA49EBE0((uint64_t)v45);

  sub_1BB185614(v14, v13, v15);
  swift_release();
  return v37;
}

void sub_1BB185478()
{
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB1854D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BB185500()
{
  uint64_t v0;

}

void sub_1BB18552C(uint64_t a1)
{

}

uint64_t sub_1BB185564()
{
  return type metadata accessor for DebugFormatCodeViewController();
}

void sub_1BB18556C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB86BCE0();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB1855C4()
{
  unint64_t result;

  result = qword_1EF2BC628;
  if (!qword_1EF2BC628)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2500, &type metadata for DebugFormatCodeViewController.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2BC628);
  }
  return result;
}

id sub_1BB185608(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)sub_1BA69D44C((uint64_t)a1, a2);
}

void sub_1BB185614(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_1BA69D314((uint64_t)a1, a2);
}

uint64_t storeEnumTagSinglePayload for DebugFormatCodeViewController.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB185660 + 4 * byte_1BB8F2460[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB185680 + 4 * byte_1BB8F2465[v4]))();
}

_BYTE *sub_1BB185660(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB185680(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB185688(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB185690(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB185698(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB1856A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCodeViewController.Errors()
{
  return &type metadata for DebugFormatCodeViewController.Errors;
}

unint64_t sub_1BB1856C0()
{
  unint64_t result;

  result = qword_1EF2BC638;
  if (!qword_1EF2BC638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F24D8, &type metadata for DebugFormatCodeViewController.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2BC638);
  }
  return result;
}

uint64_t sub_1BB185704(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[6];

  v53 = a6;
  v54 = a7;
  v51 = a4;
  v52 = a2;
  v14 = sub_1BB87261C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BB86C67C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a3;
  if (*a3 < 0)
  {
    v50 = v9;
    v39 = v51;
    v40 = v52;
    v42 = v53;
    v41 = v54;
    v46 = a9;
    v47 = a8;
    v43 = *(_QWORD *)(v23 + 16);
    v44 = *(_QWORD *)(v23 + 24);
    v49 = v44 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    v48 = v43 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (objc_msgSend(a5, sel_userInterfaceStyle) == (id)2)
      aBlock[0] = v44;
    else
      aBlock[0] = v43;
    sub_1BB185704(a1, v40, aBlock, v39, a5, v42, v41, v47, v46);
    swift_release();
    return swift_release();
  }
  else
  {
    v24 = v20;
    v25 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v25, v24);
    v26 = *(void **)(v9 + 16);
    v27 = (void *)sub_1BB86C58C();
    v28 = objc_msgSend(v26, sel_assetHandleForURL_lifetimeHint_, v27, 0);

    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF530], v14);
    v29 = (void *)sub_1BB873498();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v28;
    v32[3] = v31;
    v33 = v53;
    v34 = v54;
    v32[4] = v30;
    v32[5] = v33;
    v32[6] = v34;
    aBlock[4] = sub_1BB185FEC;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_42;
    v35 = _Block_copy(aBlock);
    v36 = v28;
    swift_retain();
    swift_release();
    v37 = objc_msgSend(v36, sel_downloadIfNeededWithCompletionQueue_completion_, v29, v35);
    _Block_release(v35);

    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v24);
  }
}

uint64_t sub_1BB185AAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v25 = a3;
  v26 = a5;
  v23 = a4;
  v24 = a2;
  v6 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1BB872610();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB872664();
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA49A224(0, &qword_1ED39EA78);
  v13 = sub_1BB8729A0();
  v14 = sub_1BAB6B7F0(a1, v13);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v15 = (void *)sub_1BB87345C();
  v16 = (_QWORD *)swift_allocObject();
  v17 = v25;
  v16[2] = v24;
  v16[3] = v17;
  v18 = v23;
  v16[4] = v14;
  v16[5] = v18;
  v16[6] = v26;
  aBlock[4] = sub_1BB186034;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_12_1;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v20 = v14;
  swift_retain();
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  v21 = v30;
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v12, v9, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v12, v28);
}

void sub_1BB185EDC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v6 = a1 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v6);
  if (v7)
  {
    v8 = (void *)v7;
    swift_beginAccess();
    v9 = (void *)MEMORY[0x1BCCE5D40](a2 + 16);

    if (v9)
    {
      sub_1BB871530();
      a4(v8);
    }

  }
}

uint64_t sub_1BB185F8C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB185FB0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB185FEC()
{
  return sub_1BA98FA10((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB185AAC);
}

uint64_t sub_1BB185FF8()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB186034()
{
  return sub_1BA98FA10((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB185EDC);
}

uint64_t sub_1BB186044@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t *v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52[2];
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  unsigned int v56;
  unsigned __int16 v57;
  _QWORD *v58;
  _QWORD *v59;
  _OWORD v60[2];
  uint64_t v61;
  uint64_t v62;

  v3 = v2;
  sub_1BA8E5458();
  MEMORY[0x1E0C80A78](v6);
  v48 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[1];
  *(_QWORD *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v8;
  v50 = a1;
  v9 = a1[2];
  *(_QWORD *)&v53 = v9;
  swift_bridgeObjectRetain();
  FormatOptionValue.type.getter();
  v10 = LOBYTE(v60[0]);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 16) = v10;
  v51 = a2;
  v52[0] = v9;
  *(_BYTE *)(a2 + 40) = 0;
  sub_1BB370FA8();
  if (!*((_QWORD *)&v54 + 1))
  {
    sub_1BB188F8C((uint64_t)&v53);
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_27:
    v39 = v51;
    *(_QWORD *)(v51 + 48) = v14;
    v40 = type metadata accessor for FormatOption();
    v41 = (uint64_t)v50;
    v42 = v48;
    sub_1BA4C2DD8((uint64_t)v50 + *(int *)(v40 + 28), v48, (uint64_t (*)(_QWORD))sub_1BA8E5458);
    sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v43 = type metadata accessor for FormatDerivedDataOption();
    return sub_1BA5193C4(v42, v39 + *(int *)(v43 + 28), (uint64_t (*)(_QWORD))sub_1BA8E5458);
  }
  v60[0] = v53;
  v60[1] = v54;
  v61 = v55;
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v44 = *(_QWORD *)(v55 + 16);
  if (!v44)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_26:
    sub_1BB188FE0((uint64_t)v60);
    goto LABEL_27;
  }
  v46 = v55 + 32;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v14 = v11;
  v45 = result;
  while (1)
  {
    if (v13 >= *(_QWORD *)(result + 16))
    {
      __break(1u);
      return result;
    }
    v55 = 0;
    v53 = 0u;
    v54 = 0u;
    v56 = 0;
    v57 = -512;
    v58 = v11;
    v59 = v11;
    v49 = v13;
    v15 = v46 + 48 * v13;
    v16 = *(_QWORD *)(v15 + 32);
    v17 = *(_QWORD *)(v15 + 40);
    v18 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v18 != -1)
      swift_once();
    v52[0] = v16;
    v52[1] = v17;
    v19 = sub_1BA6E583C(v52);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v11;
LABEL_14:
    swift_bridgeObjectRetain();
    sub_1BA8EBC64(0, 0, 0, 0, 0, 0xFE0000000000uLL);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = v25[2];
    v47 = v25;
    if (v26)
    {
      v27 = v25 + 4;
      do
      {
        v30 = *v27++;
        v29 = (_QWORD *)v30;
        if (v30 >> 60 == 3)
        {
          v62 = v3;
          v31 = v29[2];
          v32 = v29[3];
          v33 = v29[4];
          v34 = v29[5];
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_1BB38D34C(0, v14[2] + 1, 1, v14);
          v36 = v14[2];
          v35 = v14[3];
          v37 = v14;
          if (v36 >= v35 >> 1)
            v37 = sub_1BB38D34C((_QWORD *)(v35 > 1), v36 + 1, 1, v14);
          v37[2] = v36 + 1;
          v14 = v37;
          v28 = &v37[4 * v36];
          v28[4] = v31;
          v28[5] = v32;
          v28[6] = v33;
          v28[7] = v34;
          swift_release();
          v3 = v62;
        }
        --v26;
      }
      while (v26);
    }
    v13 = v49 + 1;
    swift_bridgeObjectRelease();
    result = v45;
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v13 == v44)
    {
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  v21 = v14;
  v22 = (uint64_t *)(v19 + 64);
  while (1)
  {
    v24 = *(v22 - 1);
    v23 = *v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB043358((uint64_t)&v53, v24, v23);
    if (v3)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 += 5;
    if (!--v20)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v21;
      v25 = v58;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  sub_1BA8EBC64(v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55, v56 | ((unint64_t)v57 << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB188FE0((uint64_t)v60);
  swift_bridgeObjectRelease();
  v38 = v51;
  swift_bridgeObjectRelease();
  return sub_1BAA37068(*(_QWORD *)(v38 + 16), *(_QWORD *)(v38 + 24), *(_QWORD *)(v38 + 32), *(_BYTE *)(v38 + 40));
}

uint64_t sub_1BB1864F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  __int128 v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2BC730, (uint64_t (*)(void))sub_1BB188DBC, (uint64_t)&type metadata for FormatDerivedDataOption.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB188DBC();
  sub_1BB8746C8();
  LOBYTE(v13) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v10 = *(_QWORD *)(v3 + 32);
    v11 = *(_BYTE *)(v3 + 40);
    v13 = *(_OWORD *)(v3 + 16);
    v14 = v10;
    v15 = v11;
    v16 = 1;
    sub_1BB188E44();
    sub_1BB8741AC();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + 48);
    v16 = 2;
    sub_1BA4AD288(0, &qword_1EF2BC720, (uint64_t)&type metadata for FormatDerivedDataOptionReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB188E88(&qword_1EF2BC740, (uint64_t (*)(void))sub_1BAA74C5C, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    type metadata accessor for FormatDerivedDataOption();
    LOBYTE(v13) = 3;
    type metadata accessor for FormatVersionRequirement(0);
    sub_1BB188F04(&qword_1EF2ACF88, (uint64_t)&unk_1BB88EEBC);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB186728@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[2];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;

  v19 = a2;
  sub_1BA8E5458();
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BC708, (uint64_t (*)(void))sub_1BB188DBC, (uint64_t)&type metadata for FormatDerivedDataOption.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v21 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB188DBC();
  v10 = v22;
  sub_1BB87468C();
  if (v10)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = v7;
  v11 = v6;
  v13 = (uint64_t)v20;
  v12 = v21;
  LOBYTE(v23) = 0;
  *(_QWORD *)v9 = sub_1BB874098();
  *((_QWORD *)v9 + 1) = v14;
  v26 = 1;
  sub_1BB188E00();
  sub_1BB8740D4();
  v15 = v24;
  v16 = v25;
  *((_OWORD *)v9 + 1) = v23;
  *((_QWORD *)v9 + 4) = v15;
  v9[40] = v16;
  sub_1BA4AD288(0, &qword_1EF2BC720, (uint64_t)&type metadata for FormatDerivedDataOptionReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = 2;
  sub_1BB188E88(&qword_1EF2BC728, (uint64_t (*)(void))sub_1BAA7494C, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  v18[1] = 0;
  *((_QWORD *)v9 + 6) = v23;
  type metadata accessor for FormatVersionRequirement(0);
  LOBYTE(v23) = 3;
  sub_1BB188F04(&qword_1ED3D0B40, (uint64_t)&unk_1BB88F0F4);
  sub_1BB874068();
  (*(void (**)(_QWORD, uint64_t))(v11 + 8))(0, v12);
  sub_1BA5193C4(v13, (uint64_t)&v9[*(int *)(v22 + 28)], (uint64_t (*)(_QWORD))sub_1BA8E5458);
  sub_1BA4C2DD8((uint64_t)v9, v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
}

uint64_t sub_1BB186AD0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB186B04 + 4 * byte_1BB8F2590[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB186B04()
{
  return 1701869940;
}

uint64_t sub_1BB186B14()
{
  return 0x636E657265666572;
}

unint64_t sub_1BB186B2C()
{
  return 0xD000000000000012;
}

uint64_t sub_1BB186B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB1891B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB186B6C()
{
  sub_1BB188DBC();
  return sub_1BB874710();
}

uint64_t sub_1BB186B94()
{
  sub_1BB188DBC();
  return sub_1BB87471C();
}

uint64_t sub_1BB186BBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB186728(a1, a2);
}

uint64_t sub_1BB186BD0(_QWORD *a1)
{
  return sub_1BB1864F4(a1);
}

uint64_t FormatDerivedDataOptionType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  __int128 v14;
  _OWORD v15[2];
  uint64_t v16;

  v16 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15[-1] - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v16;
    sub_1BB186E24();
    v15[0] = 0uLL;
    sub_1BB8740D4();
    if ((_BYTE)v14)
    {
      if (v14 == 1)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v10 = 0;
        v11 = 0uLL;
        v12 = 2;
      }
      else
      {
        v14 = xmmword_1BB87FC90;
        sub_1BB186E68();
        sub_1BB8740D4();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v10 = *(_QWORD *)&v15[0];
        v11 = *(_OWORD *)((char *)v15 + 8);
        v12 = 1;
      }
    }
    else
    {
      v15[0] = xmmword_1BB87FC90;
      sub_1BA74E2A8();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v12 = 0;
      v10 = v14;
      v11 = 0uLL;
    }
    *(_QWORD *)v9 = v10;
    *(_OWORD *)(v9 + 8) = v11;
    *(_BYTE *)(v9 + 24) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BB186E24()
{
  unint64_t result;

  result = qword_1EF2BC640;
  if (!qword_1EF2BC640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2824, &type metadata for FormatDerivedDataOptionType.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC640);
  }
  return result;
}

unint64_t sub_1BB186E68()
{
  unint64_t result;

  result = qword_1EF2BC648;
  if (!qword_1EF2BC648)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDerivedDataOptionStatement, &type metadata for FormatDerivedDataOptionStatement);
    atomic_store(result, (unint64_t *)&qword_1EF2BC648);
  }
  return result;
}

uint64_t FormatDerivedDataOptionType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = *v1;
  v15 = v1[1];
  v16 = v8;
  v14 = v1[2];
  v9 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  if (v9)
  {
    if (v9 != 1)
    {
      LOBYTE(v17) = 1;
      sub_1BB1870DC();
      v18 = 0uLL;
      goto LABEL_8;
    }
    LOBYTE(v17) = 2;
    sub_1BB1870DC();
    v18 = 0uLL;
    v10 = v20;
    sub_1BB8741AC();
    if (!v10)
    {
      *(_QWORD *)&v18 = v16;
      *((_QWORD *)&v18 + 1) = v15;
      v19 = v14;
      v17 = xmmword_1BB87FC90;
      sub_1BB187120();
LABEL_8:
      sub_1BB8741AC();
    }
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_1BB1870DC();
    v18 = 0uLL;
    v11 = v20;
    sub_1BB8741AC();
    if (!v11)
    {
      LOBYTE(v17) = v16;
      v18 = xmmword_1BB87FC90;
      sub_1BA6F60E4();
      goto LABEL_8;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB1870DC()
{
  unint64_t result;

  result = qword_1EF2BC650;
  if (!qword_1EF2BC650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F27FC, &type metadata for FormatDerivedDataOptionType.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC650);
  }
  return result;
}

unint64_t sub_1BB187120()
{
  unint64_t result;

  result = qword_1EF2BC658;
  if (!qword_1EF2BC658)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDerivedDataOptionStatement, &type metadata for FormatDerivedDataOptionStatement);
    atomic_store(result, (unint64_t *)&qword_1EF2BC658);
  }
  return result;
}

uint64_t sub_1BB187164(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F23E0(*a1, *a2);
}

uint64_t sub_1BB187170()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB187204()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB187274()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB187304@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB188F44();
  *a1 = result;
  return result;
}

void sub_1BB187330(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE300000000000000;
  v5 = 7958113;
  if (v2 != 1)
  {
    v5 = 0x6E656D6574617473;
    v4 = 0xE900000000000074;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701869940;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB187384()
{
  sub_1BB188A18();
  return sub_1BB872D60();
}

uint64_t sub_1BB1873E0()
{
  sub_1BB188A18();
  return sub_1BB872D0C();
}

uint64_t sub_1BB187430@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDerivedDataOptionType.init(from:)(a1, a2);
}

uint64_t sub_1BB187444(_QWORD *a1)
{
  return FormatDerivedDataOptionType.encode(to:)(a1);
}

uint64_t FormatDerivedDataOptionType.description.getter()
{
  unsigned __int8 *v0;

  if (!v0[24])
    return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1874C8 + 4 * byte_1BB8F2594[*v0]))(0x6E61656C6F6F62, 0xE700000000000000);
  if (v0[24] == 1)
    return 0x6E656D6574617473;
  return 7958113;
}

uint64_t sub_1BB1874C8()
{
  return 1702125924;
}

uint64_t sub_1BB1874D8()
{
  return 1836412517;
}

uint64_t sub_1BB1874E8()
{
  return 0x74616F6C66;
}

uint64_t sub_1BB1874FC()
{
  return 0x72656765746E69;
}

uint64_t sub_1BB187510()
{
  return 0x676E69727473;
}

uint64_t sub_1BB187524()
{
  return 7107189;
}

uint64_t sub_1BB187534()
{
  return 0x726F6C6F63;
}

uint64_t sub_1BB187548()
{
  return 0x6567616D69;
}

uint64_t sub_1BB18755C()
{
  return 0x6F65646976;
}

uint64_t sub_1BB187570()
{
  return 1953394534;
}

uint64_t sub_1BB187580()
{
  return 0x616C506F65646976;
}

uint64_t _s8NewsFeed27FormatDerivedDataOptionTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(_BYTE *)(a1 + 24))
  {
    if (v5 == 1)
    {
      if (v9 == 1)
      {
        v10 = v3 == v7 && v2 == v6;
        if (v10 || (sub_1BB874398() & 1) != 0)
        {
          v11 = sub_1BA88312C(v4, v8);
          v12 = 1;
          sub_1BAA73684(v7, v6, v8, 1);
          sub_1BAA73684(v3, v2, v4, 1);
          sub_1BAA37068(v3, v2, v4, 1);
          sub_1BAA37068(v7, v6, v8, 1);
          if ((v11 & 1) != 0)
            return v12 & 1;
          goto LABEL_24;
        }
        sub_1BAA73684(v7, v6, v8, 1);
        sub_1BAA73684(v3, v2, v4, 1);
        sub_1BAA37068(v3, v2, v4, 1);
        v18 = v7;
        v19 = v6;
        v20 = v8;
        v21 = 1;
LABEL_23:
        sub_1BAA37068(v18, v19, v20, v21);
LABEL_24:
        v12 = 0;
        return v12 & 1;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_22:
      sub_1BAA73684(v7, v6, v8, v9);
      sub_1BAA37068(v3, v2, v4, v5);
      v18 = v7;
      v19 = v6;
      v20 = v8;
      v21 = v9;
      goto LABEL_23;
    }
    if (v9 != 2 || (v6 | v7 | v8) != 0)
      goto LABEL_22;
    sub_1BAA37068(*(_QWORD *)a1, v2, v4, 2);
    sub_1BAA37068(0, 0, 0, 2);
    v12 = 1;
  }
  else
  {
    if (*(_BYTE *)(a2 + 24))
      goto LABEL_22;
    v13 = FormatOptionType.rawValue.getter();
    v15 = v14;
    if (v13 == FormatOptionType.rawValue.getter() && v15 == v16)
      v12 = 1;
    else
      v12 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BAA37068(v3, v2, v4, 0);
    sub_1BAA37068(v7, v6, v8, 0);
  }
  return v12 & 1;
}

uint64_t destroy for FormatDerivedDataOptionType(uint64_t a1)
{
  return sub_1BAA37068(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatDerivedDataOptionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BAA73684(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataOptionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BAA73684(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BAA37068(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataOptionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BAA37068(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1BB187950(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BB187968(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionType()
{
  return &type metadata for FormatDerivedDataOptionType;
}

uint64_t sub_1BB187994(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v11 = *((_BYTE *)a2 + 40);
  swift_bridgeObjectRetain();
  sub_1BAA73684(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = a2[6];
  v12 = *(int *)(a3 + 28);
  v13 = (char *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for FormatVersionRequirement(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (!v17(v14, 1, v15))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v24 = sub_1BB86EB84();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v13, v14, v24);
      sub_1BA6F3F88();
      v27 = v26;
      v25(&v13[*(int *)(v26 + 48)], &v14[*(int *)(v26 + 48)], v24);
      v23 = *(int *)(v27 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v31 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v13, v14, v31);
        goto LABEL_11;
      }
      v21 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v13, v14, v21);
      sub_1BA8D4E7C();
      v23 = *(int *)(v22 + 48);
    }
    v28 = &v13[v23];
    v29 = &v14[v23];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    return a1;
  }
  sub_1BA8E5458();
  memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  return a1;
}

uint64_t sub_1BB187BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  sub_1BAA37068(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for FormatVersionRequirement(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    result = swift_getEnumCaseMultiPayload();
    switch((_DWORD)result)
    {
      case 2:
        v8 = sub_1BB86EB84();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(v4, v8);
        sub_1BA6F3F88();
        v9(v4 + *(int *)(v10 + 48), v8);
        break;
      case 1:
        v11 = sub_1BB86EB84();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
        sub_1BA8D4E7C();
        break;
      case 0:
        v7 = sub_1BB86EB84();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
      default:
        return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB187CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1BAA73684(v7, v8, v9, v10);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v11 = *(int *)(a3 + 28);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for FormatVersionRequirement(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (!v16(v13, 1, v14))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v22 = sub_1BB86EB84();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      v23(v12, v13, v22);
      sub_1BA6F3F88();
      v25 = v24;
      v23(&v12[*(int *)(v24 + 48)], &v13[*(int *)(v24 + 48)], v22);
      v21 = *(int *)(v25 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v29 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v12, v13, v29);
        goto LABEL_9;
      }
      v19 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v12, v13, v19);
      sub_1BA8D4E7C();
      v21 = *(int *)(v20 + 48);
    }
    v26 = &v12[v21];
    v27 = &v13[v21];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    return a1;
  }
  sub_1BA8E5458();
  memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  return a1;
}

uint64_t sub_1BB187ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_1BAA73684(v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  v13 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  sub_1BAA37068(v10, v11, v12, v13);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 28);
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = type metadata accessor for FormatVersionRequirement(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v8) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if ((_DWORD)v8)
  {
    if (!v20)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v32 = sub_1BB86EB84();
        v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        v33(v15, v16, v32);
        sub_1BA6F3F88();
        v35 = v34;
        v33(&v15[*(int *)(v34 + 48)], &v16[*(int *)(v34 + 48)], v32);
        v24 = *(int *)(v35 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v38 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v15, v16, v38);
          goto LABEL_17;
        }
        v22 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v15, v16, v22);
        sub_1BA8D4E7C();
        v24 = *(int *)(v23 + 48);
      }
      v36 = &v15[v24];
      v37 = &v16[v24];
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      swift_bridgeObjectRetain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      return a1;
    }
    goto LABEL_8;
  }
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
LABEL_8:
    sub_1BA8E5458();
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 2)
    {
      v40 = sub_1BB86EB84();
      v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
      v41(v15, v16, v40);
      sub_1BA6F3F88();
      v43 = v42;
      v41(&v15[*(int *)(v42 + 48)], &v16[*(int *)(v42 + 48)], v40);
      v44 = *(int *)(v43 + 64);
      v45 = &v15[v44];
      v46 = &v16[v44];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v26 == 1)
      {
        v27 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v15, v16, v27);
        sub_1BA8D4E7C();
        v29 = *(int *)(v28 + 48);
        v30 = &v15[v29];
        v31 = &v16[v29];
        *(_QWORD *)v30 = *(_QWORD *)v31;
        *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        v47 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v15, v16, v47);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BB188268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 28);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = type metadata accessor for FormatVersionRequirement(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_1BB86EB84();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v6, v7, v15);
      sub_1BA6F3F88();
      v18 = v17;
      v16(&v6[*(int *)(v17 + 48)], &v7[*(int *)(v17 + 48)], v15);
      v14 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v19 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v6, v7, v19);
        goto LABEL_9;
      }
      v12 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v6, v7, v12);
      sub_1BA8D4E7C();
      v14 = *(int *)(v13 + 48);
    }
    *(_OWORD *)&v6[v14] = *(_OWORD *)&v7[v14];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    return a1;
  }
  sub_1BA8E5458();
  memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_1BB18840C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v7;
  v12 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1BAA37068(v9, v10, v11, v12);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v13 = *(int *)(a3 + 28);
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for FormatVersionRequirement(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v29 = sub_1BB86EB84();
        v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32);
        v30(v14, v15, v29);
        sub_1BA6F3F88();
        v32 = v31;
        v30(&v14[*(int *)(v31 + 48)], &v15[*(int *)(v31 + 48)], v29);
        v24 = *(int *)(v32 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v33 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v14, v15, v33);
          goto LABEL_17;
        }
        v22 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v14, v15, v22);
        sub_1BA8D4E7C();
        v24 = *(int *)(v23 + 48);
      }
      *(_OWORD *)&v14[v24] = *(_OWORD *)&v15[v24];
LABEL_17:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      return a1;
    }
    goto LABEL_8;
  }
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
LABEL_8:
    sub_1BA8E5458();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 2)
    {
      v35 = sub_1BB86EB84();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32);
      v36(v14, v15, v35);
      sub_1BA6F3F88();
      v38 = v37;
      v36(&v14[*(int *)(v37 + 48)], &v15[*(int *)(v37 + 48)], v35);
      *(_OWORD *)&v14[*(int *)(v38 + 64)] = *(_OWORD *)&v15[*(int *)(v38 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v26 == 1)
      {
        v27 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v14, v15, v27);
        sub_1BA8D4E7C();
        *(_OWORD *)&v14[*(int *)(v28 + 48)] = *(_OWORD *)&v15[*(int *)(v28 + 48)];
      }
      else
      {
        v39 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v14, v15, v39);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BB188734()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB188740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA8E5458();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1BB1887BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1887C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA8E5458();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataOption()
{
  uint64_t result;

  result = qword_1EF2BC6B8;
  if (!qword_1EF2BC6B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB188878()
{
  unint64_t v0;

  sub_1BA8E5458();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataOptionType.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB188950 + 4 * byte_1BB8F25A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB188984 + 4 * byte_1BB8F25A0[v4]))();
}

uint64_t sub_1BB188984(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB18898C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB188994);
  return result;
}

uint64_t sub_1BB1889A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1889A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB1889AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1889B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionType.CodingType()
{
  return &type metadata for FormatDerivedDataOptionType.CodingType;
}

unint64_t sub_1BB1889D4()
{
  unint64_t result;

  result = qword_1EF2BC6F8;
  if (!qword_1EF2BC6F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F275C, &type metadata for FormatDerivedDataOptionType.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC6F8);
  }
  return result;
}

unint64_t sub_1BB188A18()
{
  unint64_t result;

  result = qword_1EF2BC700;
  if (!qword_1EF2BC700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F26E4, &type metadata for FormatDerivedDataOptionType.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC700);
  }
  return result;
}

BOOL sub_1BB188A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  _BOOL8 result;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8D874C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8E5458();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v32 - v19;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    v23 = *(_QWORD *)(a1 + 32);
    v24 = *(_BYTE *)(a1 + 40);
    v37 = *(_OWORD *)(a1 + 16);
    v38 = v23;
    v39 = v24;
    v25 = *(_QWORD *)(a2 + 32);
    v26 = *(_BYTE *)(a2 + 40);
    v34 = *(_OWORD *)(a2 + 16);
    v35 = v25;
    v36 = v26;
    if ((_s8NewsFeed27FormatDerivedDataOptionTypeO2eeoiySbAC_ACtFZ_0((uint64_t)&v37, (uint64_t)&v34) & 1) != 0
      && (sub_1BA88468C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48)) & 1) != 0)
    {
      v33 = v7;
      v27 = type metadata accessor for FormatDerivedDataOption();
      sub_1BA4C2DD8(a1 + *(int *)(v27 + 28), (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA8E5458);
      sub_1BA4C2DD8(a2 + *(int *)(v27 + 28), (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA8E5458);
      v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA8E5458);
      sub_1BA4C2DD8((uint64_t)v17, v28, (uint64_t (*)(_QWORD))sub_1BA8E5458);
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v29((uint64_t)v11, 1, v4) == 1)
      {
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA8E5458);
        sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA8E5458);
        if (v29(v28, 1, v4) == 1)
        {
          sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA8E5458);
          return 1;
        }
      }
      else
      {
        sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8E5458);
        if (v29(v28, 1, v4) != 1)
        {
          v30 = (uint64_t)v33;
          sub_1BA5193C4(v28, (uint64_t)v33, type metadata accessor for FormatVersionRequirement);
          v31 = sub_1BA9FD2E0((uint64_t)v14, v30);
          sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
          sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA8E5458);
          sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA8E5458);
          sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
          sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA8E5458);
          return (v31 & 1) != 0;
        }
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA8E5458);
        sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA8E5458);
        sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
      }
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA8D874C);
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BB188DBC()
{
  unint64_t result;

  result = qword_1EF2BC710;
  if (!qword_1EF2BC710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2910, &type metadata for FormatDerivedDataOption.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC710);
  }
  return result;
}

unint64_t sub_1BB188E00()
{
  unint64_t result;

  result = qword_1EF2BC718;
  if (!qword_1EF2BC718)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDerivedDataOptionType, &type metadata for FormatDerivedDataOptionType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC718);
  }
  return result;
}

unint64_t sub_1BB188E44()
{
  unint64_t result;

  result = qword_1EF2BC738;
  if (!qword_1EF2BC738)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDerivedDataOptionType, &type metadata for FormatDerivedDataOptionType);
    atomic_store(result, (unint64_t *)&qword_1EF2BC738);
  }
  return result;
}

uint64_t sub_1BB188E88(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2BC720, (uint64_t)&type metadata for FormatDerivedDataOptionReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB188F04(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatVersionRequirement(255);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB188F44()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BB188F8C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4AD288(0, &qword_1EF2BC748, (uint64_t)&type metadata for AnyFormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB188FE0(uint64_t a1)
{
  destroy for AnyFormatSelectorValue(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataOption.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB189060 + 4 * byte_1BB8F25AF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB189094 + 4 * byte_1BB8F25AA[v4]))();
}

uint64_t sub_1BB189094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB18909C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1890A4);
  return result;
}

uint64_t sub_1BB1890B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1890B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB1890BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1890C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOption.CodingKeys()
{
  return &type metadata for FormatDerivedDataOption.CodingKeys;
}

unint64_t sub_1BB1890E4()
{
  unint64_t result;

  result = qword_1EF2BC750;
  if (!qword_1EF2BC750)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F28E8, &type metadata for FormatDerivedDataOption.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC750);
  }
  return result;
}

unint64_t sub_1BB18912C()
{
  unint64_t result;

  result = qword_1EF2BC758;
  if (!qword_1EF2BC758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2858, &type metadata for FormatDerivedDataOption.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC758);
  }
  return result;
}

unint64_t sub_1BB189174()
{
  unint64_t result;

  result = qword_1EF2BC760;
  if (!qword_1EF2BC760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2880, &type metadata for FormatDerivedDataOption.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC760);
  }
  return result;
}

uint64_t sub_1BB1891B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB9718B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t FormatArticle.selectors.getter()
{
  return sub_1BA4DE208();
}

uint64_t FormatArticle.properties.getter()
{
  return sub_1BA4DE208();
}

uint64_t FormatArticle.__allocating_init(identifier:overrides:selectors:properties:alternate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BA6286BC(a3, v13);
  v14 = (_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
  swift_beginAccess();
  *v14 = a4;
  v15 = (_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
  swift_beginAccess();
  *v15 = a5;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = a6;
  return v12;
}

uint64_t sub_1BB189474@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BA4CDF6C(0, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  v7 = *a1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BA6287C0(v7, (uint64_t)v6);
  return sub_1BA6286BC((uint64_t)v6, a2);
}

uint64_t sub_1BB189530(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA62908C(a1, (uint64_t)v6);
  v7 = *a2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BB1897EC((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t FormatArticle.overrides.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BB1897EC(a1, v3);
  return swift_endAccess();
}

uint64_t (*FormatArticle.overrides.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatArticle.selectors.setter(uint64_t a1)
{
  return sub_1BAA5D084(a1, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
}

uint64_t (*FormatArticle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatArticle.properties.setter(uint64_t a1)
{
  return sub_1BAA5D084(a1, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
}

uint64_t (*FormatArticle.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatArticle.alternate.getter()
{
  return swift_retain();
}

uint64_t FormatArticle.init(identifier:overrides:selectors:properties:alternate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v11 = v6 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BA6286BC(a3, v11);
  v12 = (_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
  swift_beginAccess();
  *v12 = a4;
  v13 = (_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
  swift_beginAccess();
  *v13 = a5;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = a6;
  return v6;
}

uint64_t sub_1BB1897EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatArticleOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t FormatArticle.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatArticle.init(from:)(a1);
  return v2;
}

uint64_t sub_1BB18987C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4CDF6C(0, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB1898D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB18A1F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB1898FC()
{
  sub_1BA62877C();
  return sub_1BB874710();
}

uint64_t sub_1BB189924()
{
  sub_1BA62877C();
  return sub_1BB87471C();
}

uint64_t FormatArticle.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1BB18987C(v0 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      swift_retain();
      swift_release();
      v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t FormatArticle.__deallocating_deinit()
{
  FormatArticle.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatArticle.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD v23[5];
  _QWORD *v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v23[0] = *v2;
  sub_1BA4CDF6C(0, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v23 - v5);
  sub_1BA4CDF6C(0, &qword_1ED39DBC0, (uint64_t (*)(void))sub_1BA62877C, (uint64_t)&type metadata for FormatArticle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v23 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62877C();
  sub_1BB8746C8();
  v26 = 0;
  v12 = v23[1];
  sub_1BB87417C();
  if (v12)
  {
    v13 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  }
  else
  {
    v14 = (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
    swift_beginAccess();
    sub_1BA6287C0(v14, (uint64_t)v6);
    if (qword_1ED3A6D88 != -1)
      swift_once();
    v15 = type metadata accessor for FormatArticleOverrides();
    v16 = (_QWORD *)__swift_project_value_buffer(v15, (uint64_t)qword_1ED3A6D68);
    if (!_s8NewsFeed22FormatArticleOverridesV2eeoiySbAC_ACtFZ_0(v6, v16))
    {
      v25 = 1;
      sub_1BB189F74();
      sub_1BA4A2870(&qword_1ED3A6D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleOverrides, (uint64_t)&protocol conformance descriptor for FormatArticleOverrides);
      sub_1BB874464();
    }
    sub_1BB18987C((uint64_t)v6);
    v17 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
    swift_beginAccess();
    v18 = *v17;
    if (*(_QWORD *)(*v17 + 16))
    {
      v27 = 2;
      swift_bridgeObjectRetain_n();
      v19 = sub_1BA67F4CC(v18);
      swift_bridgeObjectRelease();
      v24 = v19;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v24);
      swift_release();
      v23[2] = v24;
      sub_1BB189F74();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    v20 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
    swift_beginAccess();
    v21 = *v20;
    if (*(_QWORD *)(*v20 + 16))
    {
      v27 = 3;
      v24 = (_QWORD *)v21;
      sub_1BB189F74();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA5DBB94((unint64_t *)&qword_1ED39D9A0, (uint64_t (*)(void))sub_1BA89B7F8, MEMORY[0x1E0DEAF10]);
      sub_1BB874464();
    }
    v24 = *(_QWORD **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
    v27 = 4;
    sub_1BA4A2870(&qword_1ED39CBB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t)&protocol conformance descriptor for FormatArticle);
    sub_1BB87414C();
    v13 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  }
  return v13(v11, v8);
}

uint64_t sub_1BB189E8C(_QWORD *a1)
{
  return FormatArticle.encode(to:)(a1);
}

uint64_t sub_1BB189EAC(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed13FormatArticleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t FormatArticle.debugDescription.getter()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  return 0xD00000000000001ALL;
}

unint64_t sub_1BB189F54()
{
  return FormatArticle.debugDescription.getter();
}

unint64_t sub_1BB189F74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB648;
  if (!qword_1ED3AB648)
  {
    sub_1BA4CDF6C(255, &qword_1ED39DBC0, (uint64_t (*)(void))sub_1BA62877C, (uint64_t)&type metadata for FormatArticle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB648);
  }
  return result;
}

uint64_t sub_1BB189FDC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B38F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t)&protocol conformance descriptor for FormatArticle);
  a1[2] = sub_1BA4A2870(&qword_1ED39CBB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t)&protocol conformance descriptor for FormatArticle);
  result = sub_1BA4A2870(&qword_1EF2BC768, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t)&protocol conformance descriptor for FormatArticle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB18A05C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors, a2);
}

uint64_t sub_1BB18A068(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAA5D014(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
}

uint64_t sub_1BB18A084@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties, a2);
}

uint64_t sub_1BB18A090(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAA5D014(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
}

uint64_t sub_1BB18A0AC()
{
  return type metadata accessor for FormatArticle();
}

uint64_t method lookup function for FormatArticle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatArticle.__allocating_init(identifier:overrides:selectors:properties:alternate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of FormatArticle.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for FormatArticle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB18A12C + 4 * byte_1BB8F296A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB18A160 + 4 * byte_1BB8F2965[v4]))();
}

uint64_t sub_1BB18A160(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB18A168(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB18A170);
  return result;
}

uint64_t sub_1BB18A17C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB18A184);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB18A188(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB18A190(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatArticle.CodingKeys()
{
  return &type metadata for FormatArticle.CodingKeys;
}

unint64_t sub_1BB18A1B0()
{
  unint64_t result;

  result = qword_1EF2BC770;
  if (!qword_1EF2BC770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F2B2C, &type metadata for FormatArticle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC770);
  }
  return result;
}

uint64_t sub_1BB18A1F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74616E7265746C61 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t FormatGroupPriority.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB18A454 + 4 * byte_1BB8F2BB0[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1BB18A454()
{
  return 7827308;
}

uint64_t sub_1BB18A464()
{
  return 1751607656;
}

uint64_t sub_1BB18A470()
{
  return 0x756F72636964756CLL;
}

unint64_t sub_1BB18A490()
{
  unint64_t result;

  result = qword_1EF2BC778;
  if (!qword_1EF2BC778)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupPriority, &type metadata for FormatGroupPriority);
    atomic_store(result, (unint64_t *)&qword_1EF2BC778);
  }
  return result;
}

void sub_1BB18A4D4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB18A518()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB18A578()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB18A5AC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB18A5F8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB18A638()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB18A698()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB18A6C0 + 4 * byte_1BB8F2BC0[*v0]))();
}

void sub_1BB18A6C0(_QWORD *a1@<X8>)
{
  *a1 = 7827308;
  a1[1] = 0xE300000000000000;
}

void sub_1BB18A6D4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1751607656;
  a1[1] = v1;
}

void sub_1BB18A6E4(_QWORD *a1@<X8>)
{
  *a1 = 0x756F72636964756CLL;
  a1[1] = 0xE900000000000073;
}

unint64_t sub_1BB18A704(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB18A730();
  result = sub_1BA4AD698();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB18A730()
{
  unint64_t result;

  result = qword_1EF2BC780;
  if (!qword_1EF2BC780)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupPriority, &type metadata for FormatGroupPriority);
    atomic_store(result, (unint64_t *)&qword_1EF2BC780);
  }
  return result;
}

void sub_1BB18A774(char *a1)
{
  sub_1BB7FCFAC(*a1);
}

unint64_t sub_1BB18A780(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB18A7A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB18A7A4()
{
  unint64_t result;

  result = qword_1EF2BC788;
  if (!qword_1EF2BC788)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupPriority, &type metadata for FormatGroupPriority);
    atomic_store(result, (unint64_t *)&qword_1EF2BC788);
  }
  return result;
}

unint64_t sub_1BB18A7E8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5EF8F4();
  a1[2] = sub_1BAB52A1C();
  result = sub_1BB18A490();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB18A81C(_QWORD *a1)
{
  return FormatGroupPriority.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatGroupPriority()
{
  return &type metadata for FormatGroupPriority;
}

uint64_t dispatch thunk of FeedItemLayoutAttributesDebuggable.groupLayoutKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FeedPuzzleRankState.rawState.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  *a1 = *v1;
  v3 = *MEMORY[0x1E0DB7720];
  v4 = sub_1BB86FB08();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

BOOL static FeedPuzzleRankState.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BB18A8AC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  *a1 = *v1;
  v3 = *MEMORY[0x1E0DB7720];
  v4 = sub_1BB86FB08();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

uint64_t getEnumTagSinglePayload for FormatLayoutOption(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

char *sub_1BB18A918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  void *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  objc_super v37;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = OBJC_IVAR____TtC8NewsFeed34DebugFormatUploadDiffTableViewCell_label;
  v9 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v10 = v4;
  *(_QWORD *)&v4[v8] = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a3)
  {
    v11 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v37.receiver = v10;
  v37.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v37, sel_initWithStyle_reuseIdentifier_, a1, v11);

  v13 = OBJC_IVAR____TtC8NewsFeed34DebugFormatUploadDiffTableViewCell_label;
  v14 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed34DebugFormatUploadDiffTableViewCell_label];
  v15 = v12;
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v16 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v16, sel_addSubview_, v14);

  v17 = (void *)objc_opt_self();
  sub_1BA65E330();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB895C60;
  v19 = objc_msgSend(*(id *)&v12[v13], sel_topAnchor);
  v20 = objc_msgSend(v15, sel_contentView);
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v18 + 32) = v22;
  v23 = objc_msgSend(*(id *)&v12[v13], sel_leadingAnchor);
  v24 = objc_msgSend(v15, sel_contentView);
  v25 = objc_msgSend(v24, sel_leadingAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(_QWORD *)(v18 + 40) = v26;
  v27 = objc_msgSend(*(id *)&v12[v13], sel_trailingAnchor);
  v28 = objc_msgSend(v15, sel_contentView);
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(_QWORD *)(v18 + 48) = v30;
  v31 = objc_msgSend(*(id *)&v12[v13], sel_bottomAnchor);
  v32 = objc_msgSend(v15, sel_contentView);
  v33 = objc_msgSend(v32, sel_bottomAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(_QWORD *)(v18 + 56) = v34;
  sub_1BB872DCC();
  sub_1BAA659B8();
  v35 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_activateConstraints_, v35);

  return v15;
}

uint64_t type metadata accessor for DebugFormatUploadDiffTableViewCell()
{
  return objc_opt_self();
}

uint64_t FormatWebEmbedBinding.SourceItemTip.tipSource(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v3 = type metadata accessor for WebEmbedDataVisualization();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (unint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - v11;
  v13 = a1 + *(int *)(type metadata accessor for FeedWebEmbed() + 52);
  sub_1BA4C2DD8(v13, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    v14 = (uint64_t (*)(_QWORD))sub_1BA6CAB4C;
    v15 = (uint64_t)v12;
LABEL_5:
    sub_1BA4A2E80(v15, v14);
LABEL_6:
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    v17 = v16;
    sub_1BA4C2DD8(v13, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    v18 = sub_1BB872A00();
    *v17 = 0x65726F6373;
    v17[1] = 0xE500000000000000;
    v17[2] = v18;
    v17[3] = v19;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v15 = (uint64_t)v12;
    v14 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
    goto LABEL_5;
  }
  v21 = *v6;
  sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (v21 >> 61)
  {
    swift_release();
    goto LABEL_6;
  }
  swift_release();
  if (qword_1ED3AD228 != -1)
    swift_once();
  v22 = sub_1BB8717AC();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED3AC9D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v25, v23, v22);
}

uint64_t static FormatWebEmbedBinding.SourceItemTip.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatWebEmbedBinding.SourceItemTip.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatWebEmbedBinding.SourceItemTip.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB18B0D0(_QWORD *a1)
{
  return FormatWebEmbedBinding.SourceItemTip.init(from:)(a1);
}

uint64_t sub_1BB18B0E4(_QWORD *a1)
{
  return FormatWebEmbedBinding.SourceItemTip.encode(to:)(a1);
}

unint64_t sub_1BB18B0FC()
{
  unint64_t result;

  result = qword_1EF2BC7C0;
  if (!qword_1EF2BC7C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.SourceItemTip, &type metadata for FormatWebEmbedBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1EF2BC7C0);
  }
  return result;
}

unint64_t sub_1BB18B140(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB18B164();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB18B164()
{
  unint64_t result;

  result = qword_1EF2BC7C8;
  if (!qword_1EF2BC7C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.SourceItemTip, &type metadata for FormatWebEmbedBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1EF2BC7C8);
  }
  return result;
}

unint64_t sub_1BB18B1A8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE95458();
  a1[2] = sub_1BAEEBBB8();
  result = sub_1BB18B0FC();
  a1[3] = result;
  return result;
}

uint64_t _s13SourceItemTipOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB18B21C + 4 * asc_1BB8F2E54[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB18B23C + 4 * byte_1BB8F2E59[v4]))();
}

_BYTE *sub_1BB18B21C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB18B23C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB18B244(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB18B24C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB18B254(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB18B25C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.SourceItemTip()
{
  return &type metadata for FormatWebEmbedBinding.SourceItemTip;
}

uint64_t FormatOrExpression.lhsExpression.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatOrExpression.rhsExpression.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1BB18B298(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, double), uint64_t a4, uint64_t (*a5)(uint64_t, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v18;

  sub_1BA75C00C();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a3(a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if ((v15 & 1) != 0)
    v16 = 1;
  else
    v16 = a5(a1, v14);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v16 & 1;
}

uint64_t sub_1BB18B378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if ((a3() & 1) != 0)
    return 1;
  else
    return a5(a1) & 1;
}

uint64_t sub_1BB18B3C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, double), uint64_t a4, uint64_t (*a5)(uint64_t, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v18;

  sub_1BA75C00C();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a3(a1, a2, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if ((v15 & 1) != 0)
    v16 = 1;
  else
    v16 = a5(a1, v14);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v16 & 1;
}

unint64_t sub_1BB18B4B0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB18B4D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB18B4D4()
{
  unint64_t result;

  result = qword_1EF2BC7D0;
  if (!qword_1EF2BC7D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOrExpression, &type metadata for FormatOrExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BC7D0);
  }
  return result;
}

unint64_t sub_1BB18B518(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA67526C();
  a1[2] = sub_1BA652EE8();
  result = sub_1BB18B54C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB18B54C()
{
  unint64_t result;

  result = qword_1EF2BC7D8;
  if (!qword_1EF2BC7D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOrExpression, &type metadata for FormatOrExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BC7D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOrExpression()
{
  return &type metadata for FormatOrExpression;
}

void FormatColorComponentExpression.component.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void FormatColorComponentExpression.operator.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

double FormatColorComponentExpression.value.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

BOOL _s8NewsFeed30FormatColorComponentExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  char v10;

  v2 = *(double *)(a1 + 8);
  v3 = *(double *)(a2 + 8);
  sub_1BB7ED8CC(*(_BYTE *)a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = FormatOperator.rawValue.getter();
  v7 = v6;
  if (v5 == FormatOperator.rawValue.getter() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  return v2 == v3;
}

unint64_t sub_1BB18B6A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB18B6C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB18B6C8()
{
  unint64_t result;

  result = qword_1EF2BC7E0;
  if (!qword_1EF2BC7E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponentExpression, &type metadata for FormatColorComponentExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2BC7E0);
  }
  return result;
}

unint64_t sub_1BB18B70C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA58EF7C();
  a1[2] = sub_1BA5884C0();
  result = sub_1BB18B740();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB18B740()
{
  unint64_t result;

  result = qword_1EF2BC7E8[0];
  if (!qword_1EF2BC7E8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorComponentExpression, &type metadata for FormatColorComponentExpression);
    atomic_store(result, qword_1EF2BC7E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatColorAssignComponentProcessor(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && a1[16])
    return (*(_DWORD *)a1 + 250);
  v3 = *a1;
  v4 = v3 >= 7;
  v5 = v3 - 7;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatColorComponentExpression()
{
  return &type metadata for FormatColorComponentExpression;
}

unint64_t sub_1BB18B7D8@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return sub_1BA67D3F4(v2);
}

unint64_t sub_1BB18B7E4@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t static FormatCodingStrategy<>.decode(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v6 = v5;
  v12 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], a3);
  v13 = *(_QWORD *)(a5 + 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 72))(a1, a4, v13);
  if ((result & 1) != 0)
    return static FormatCodingStrategy.encode<A>(_:into:forKey:)(a1, v6, a2, a4, a3, v13, v12);
  return result;
}

{
  uint64_t v5;
  uint64_t v11;

  v11 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], a3);
  return static FormatCodingStrategy.encode<A>(_:into:forKey:)(a1, v5, a2, a4, a3, a5, v11);
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v13 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v12 - v9;
  result = static FormatCodingDefaultStrategy.decodeOrDefault<A>(from:forKey:)(v3, a1, a2, (uint64_t)&v12 - v9);
  if (!v4)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v13, v10, AssociatedTypeWitness);
  return result;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v5 = v3;
  v14 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v13 - v10;
  result = static FormatCodingStrategy.decode<A>(from:forKey:)(v5, a1, a2, (uint64_t)&v13 - v10);
  if (!v4)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14, v11, AssociatedTypeWitness);
  return result;
}

uint64_t sub_1BB18B9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(unsigned __int8 *)(a1 + 50);
  v9 = *(unsigned __int16 *)(a1 + 48);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_BYTE *)(a2 + 50) = v8;
  *(_WORD *)(a2 + 48) = v9;
  return sub_1BA714334(v3, v2, v4, v5, v6, v7, v9 | (v8 << 16));
}

uint64_t sub_1BB18BA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(unsigned __int8 *)(a1 + 50);
  v9 = *(unsigned __int16 *)(a1 + 48);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_BYTE *)(a2 + 50) = v8;
  *(_WORD *)(a2 + 48) = v9;
  return sub_1BA714334(v3, v2, v4, v5, v6, v7, v9 | (v8 << 16));
}

unint64_t sub_1BB18BA84@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1BA75D96C(v3, v2);
}

unint64_t sub_1BB18BA94@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1BA75D96C(v3, v2);
}

uint64_t sub_1BB18BAC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1BAC6535C(v3);
}

uint64_t sub_1BB18BAD4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1BAC6535C(v3);
}

uint64_t static FormatCodingDefault<>.== infix(_:_:)()
{
  swift_getAssociatedTypeWitness();
  return sub_1BB872958() & 1;
}

uint64_t sub_1BB18BB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static FormatCodingStrategy<>.decode(rawValue:)(a1, a2);
}

uint64_t sub_1BB18BB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, type metadata accessor for FormatCompilerOptions.Newsroom);
}

uint64_t sub_1BB18BB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, type metadata accessor for FormatCompilerOptions.Newsroom);
}

uint64_t sub_1BB18BBCC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_WORD *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1BB18BBE0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BB18BBF0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BB18BC10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB18BC1C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BB18BC2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BB18BC4C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 4);
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(_BYTE *)(a2 + 4) = v2;
  return result;
}

uint64_t sub_1BB18BC60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB18BC94(a1, (uint64_t (*)(uint64_t))sub_1BA69C808, a2);
}

uint64_t sub_1BB18BC6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB18BCC8(a1, (uint64_t (*)(uint64_t))sub_1BA69C808, a2);
}

uint64_t sub_1BB18BC88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB18BC94(a1, (uint64_t (*)(uint64_t))sub_1BA896BB8, a2);
}

uint64_t sub_1BB18BC94@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = *((_BYTE *)a1 + 16);
  *(_QWORD *)a3 = *a1;
  *(_QWORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 16) = v5;
  return a2(v4);
}

uint64_t sub_1BB18BCAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB18BCC8(a1, (uint64_t (*)(uint64_t))sub_1BA896BB8, a2);
}

uint64_t sub_1BB18BCC8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = *((_BYTE *)a1 + 16);
  *(_QWORD *)a3 = *a1;
  *(_QWORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 16) = v5;
  return a2(v4);
}

uint64_t sub_1BB18BD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, type metadata accessor for FormatPuzzleType.Overrides);
}

uint64_t sub_1BB18BD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, type metadata accessor for FormatPuzzleType.Overrides);
}

uint64_t sub_1BB18BD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
}

uint64_t sub_1BB18BD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
}

uint64_t sub_1BB18BDA0@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v2 = a1[5];
  v3 = a1[7];
  v19 = a1[6];
  v20 = v3;
  v4 = a1[7];
  v21 = a1[8];
  v5 = a1[1];
  v6 = a1[3];
  v15 = a1[2];
  v7 = v15;
  v16 = v6;
  v8 = a1[3];
  v9 = a1[5];
  v17 = a1[4];
  v10 = v17;
  v18 = v9;
  v11 = a1[1];
  v14[0] = *a1;
  v12 = v14[0];
  v14[1] = v11;
  a2[6] = v19;
  a2[7] = v4;
  a2[8] = a1[8];
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v2;
  *a2 = v12;
  a2[1] = v5;
  return sub_1BA8CB1AC((uint64_t)v14);
}

uint64_t sub_1BB18BE10@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v2 = a1[5];
  v3 = a1[7];
  v19 = a1[6];
  v20 = v3;
  v4 = a1[7];
  v21 = a1[8];
  v5 = a1[1];
  v6 = a1[3];
  v15 = a1[2];
  v7 = v15;
  v16 = v6;
  v8 = a1[3];
  v9 = a1[5];
  v17 = a1[4];
  v10 = v17;
  v18 = v9;
  v11 = a1[1];
  v14[0] = *a1;
  v12 = v14[0];
  v14[1] = v11;
  a2[6] = v19;
  a2[7] = v4;
  a2[8] = a1[8];
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v2;
  *a2 = v12;
  a2[1] = v5;
  return sub_1BA8CB1AC((uint64_t)v14);
}

void sub_1BB18BE90(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingNotEmptySetStrategy<A>, a1);
  static FormatCodingTransformStrategy.defaultValue.getter();
}

void static FormatCodingTransformStrategy.defaultValue.getter()
{
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB18BF04()
{
  sub_1BB873EAC();
  __break(1u);
}

void static FormatCodingTransformStrategy.shouldEncode(wrappedValue:)()
{
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB18BFB4(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingColumnSetStrategy<A>, a1);
  static FormatCodingTransformStrategy.defaultValue.getter();
}

void sub_1BB18BFD0(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingSafeishSetStrategy<A>, a1);
  static FormatCodingTransformStrategy.defaultValue.getter();
}

__n128 sub_1BB18BFEC@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t static FormatCodingDefaultStrategy.encodeIfNotDefault<A>(_:into:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t result;

  v13 = *(_QWORD *)(a6 + 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 72))(a1, a4, v13);
  if ((result & 1) != 0)
    return static FormatCodingStrategy.encode<A>(_:into:forKey:)(a1, a2, a3, a4, a5, v13, a7);
  return result;
}

uint64_t FormatCodingDefault.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t FormatCodingDefault.wrappedValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v1, a1, AssociatedTypeWitness);
}

uint64_t (*FormatCodingDefault.wrappedValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCodingDefault.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _BYTE *v6;

  v5 = type metadata accessor for FormatCodingDefault.Errors(0, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB8F33D8, v5);
  swift_allocError();
  *v6 = 1;
  swift_willThrow();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t type metadata accessor for FormatCodingDefault.Errors(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCodingDefault.Errors);
}

uint64_t FormatCodingDefault.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB18C600(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t sub_1BB18C1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatCodingDefault.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t sub_1BB18C1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB18C600(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t FormatCodingDefault.description.getter()
{
  swift_getAssociatedTypeWitness();
  sub_1BB874344();
  return 0;
}

uint64_t sub_1BB18C254()
{
  return static FormatCodingDefault<>.== infix(_:_:)();
}

uint64_t FormatCodingDefault<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  return sub_1BB872868();
}

uint64_t FormatCodingDefault<>.hashValue.getter()
{
  sub_1BB8745CC();
  swift_getAssociatedTypeWitness();
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB18C320()
{
  return FormatCodingDefault<>.hashValue.getter();
}

uint64_t sub_1BB18C328()
{
  return FormatCodingDefault<>.hash(into:)();
}

uint64_t sub_1BB18C330()
{
  sub_1BB8745CC();
  FormatCodingDefault<>.hash(into:)();
  return sub_1BB874608();
}

unint64_t sub_1BB18C4D0@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return sub_1BA71CA6C(v2);
}

unint64_t sub_1BB18C4DC@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return sub_1BA71CA6C(v2);
}

_DWORD *sub_1BB18C508@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1BB18C514(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingSafeishArrayStrategy<A>, a1);
  static FormatCodingTransformStrategy.defaultValue.getter();
}

uint64_t sub_1BB18C530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
}

uint64_t sub_1BB18C550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
}

uint64_t sub_1BB18C580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  v9 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a2 + 56) = v9;
  return sub_1BAEAF798(v3, v2, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1BB18C5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  v9 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a2 + 56) = v9;
  return sub_1BAEAF798(v3, v2, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1BB18C600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _BYTE *v5;

  v4 = type metadata accessor for FormatCodingDefault.Errors(0, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB8F33D8, v4);
  swift_allocError();
  *v5 = 0;
  return swift_willThrow();
}

uint64_t sub_1BB18C65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <> FormatCodingDefault<A>, a1, &v4);
}

uint64_t dispatch thunk of static FormatCodingStrategy.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of static FormatCodingStrategy.shouldEncode(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of static FormatCodingStrategy.encode(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of static FormatCodingStrategy.decode(rawValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t *sub_1BB18C6C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1BB18C758(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_1BB18C7A4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1BB18C7FC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1BB18C854(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1BB18C8AC(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_1BB18C9EC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0u;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1BB18CBC0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB18CC0C + 4 * byte_1BB8F3183[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB18CC40 + 4 * byte_1BB8F317E[v4]))();
}

uint64_t sub_1BB18CC40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB18CC48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB18CC50);
  return result;
}

uint64_t sub_1BB18CC5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB18CC64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB18CC68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB18CC70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BB18CC7C()
{
  JUMPOUT(0x1BCCE5B24);
}

_BYTE *sub_1BB18CC8C@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA647E18(a1, a2);
}

unint64_t sub_1BB18CCA0@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1BB18C4DC(a1, a2);
}

uint64_t sub_1BB18CCB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB18BC2C(a1, a2);
}

uint64_t static FormatContentSubgroupFilterRemove.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1BB18CCE0()
{
  sub_1BB18CE48();
  return sub_1BB874710();
}

uint64_t sub_1BB18CD08()
{
  sub_1BB18CE48();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupFilterRemove.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB18CDF0();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB18CE48();
  sub_1BB8746C8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1BB18CDF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BC870)
  {
    sub_1BB18CE48();
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BC870);
  }
}

unint64_t sub_1BB18CE48()
{
  unint64_t result;

  result = qword_1EF2BC878;
  if (!qword_1EF2BC878)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3550, &type metadata for FormatContentSubgroupFilterRemove.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC878);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterRemove.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

unint64_t sub_1BB18CEB0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB18CEE4();
  a1[2] = sub_1BB18CF28();
  result = sub_1BB18CF6C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB18CEE4()
{
  unint64_t result;

  result = qword_1EF2BC880;
  if (!qword_1EF2BC880)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterRemove, &type metadata for FormatContentSubgroupFilterRemove);
    atomic_store(result, (unint64_t *)&qword_1EF2BC880);
  }
  return result;
}

unint64_t sub_1BB18CF28()
{
  unint64_t result;

  result = qword_1EF2BC888;
  if (!qword_1EF2BC888)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterRemove, &type metadata for FormatContentSubgroupFilterRemove);
    atomic_store(result, (unint64_t *)&qword_1EF2BC888);
  }
  return result;
}

unint64_t sub_1BB18CF6C()
{
  unint64_t result;

  result = qword_1EF2BC890;
  if (!qword_1EF2BC890)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterRemove, &type metadata for FormatContentSubgroupFilterRemove);
    atomic_store(result, (unint64_t *)&qword_1EF2BC890);
  }
  return result;
}

uint64_t sub_1BB18CFB0(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1BB18CFD4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB18CDF0();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB18CE48();
  sub_1BB8746C8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterRemove()
{
  return &type metadata for FormatContentSubgroupFilterRemove;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterRemove.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterRemove.CodingKeys;
}

unint64_t sub_1BB18D0B8()
{
  unint64_t result;

  result = qword_1EF2BC898;
  if (!qword_1EF2BC898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3500, &type metadata for FormatContentSubgroupFilterRemove.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC898);
  }
  return result;
}

unint64_t sub_1BB18D100()
{
  unint64_t result;

  result = qword_1EF2BC8A0;
  if (!qword_1EF2BC8A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3528, &type metadata for FormatContentSubgroupFilterRemove.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC8A0);
  }
  return result;
}

uint64_t sub_1BB18D144(uint64_t a1)
{
  return sub_1BB18D2DC(a1, qword_1EF2BC8A8);
}

uint64_t static RadarComponent.newsFeed.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB18D1E4(&qword_1EF2A7070, (uint64_t)qword_1EF2BC8A8, a1);
}

uint64_t sub_1BB18D194(uint64_t a1)
{
  return sub_1BB18D2DC(a1, qword_1EF2BC8C0);
}

uint64_t static RadarComponent.newsPersonalization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB18D1E4(&qword_1EF2A7078, (uint64_t)qword_1EF2BC8C0, a1);
}

uint64_t sub_1BB18D1E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1BB86F9A0();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1BB18D24C(uint64_t a1)
{
  return sub_1BB18D2DC(a1, qword_1EF2BC8D8);
}

uint64_t static RadarComponent.newsSports.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB18D1E4(&qword_1EF2A7080, (uint64_t)qword_1EF2BC8D8, a1);
}

uint64_t sub_1BB18D2A0(uint64_t a1)
{
  return sub_1BB18D2DC(a1, qword_1EF2BC8F0);
}

uint64_t sub_1BB18D2DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1BB86F9A0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BB86F994();
}

uint64_t static RadarComponent.newsNetworking.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB18D1E4(&qword_1EF2A7088, (uint64_t)qword_1EF2BC8F0, a1);
}

uint64_t sub_1BB18D374()
{
  uint64_t v0;

  v0 = sub_1BB86F9A0();
  __swift_allocate_value_buffer(v0, qword_1EF2BC908);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF2BC908);
  return sub_1BB86F994();
}

uint64_t static RadarComponent.newsAnalytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB18D1E4(qword_1EF2A7090, (uint64_t)qword_1EF2BC908, a1);
}

id CoverViewFollowSwitch.onTap.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap);
}

uint64_t CoverViewFollowSwitch.toggleState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState;
  swift_beginAccess();
  v4 = sub_1BB86F658();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BB18D488@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState;
  swift_beginAccess();
  v4 = sub_1BB86F658();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1BB18D4F0(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1BB86F658();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return CoverViewFollowSwitch.toggleState.setter((uint64_t)v5);
}

uint64_t CoverViewFollowSwitch.toggleState.setter(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int v8;
  uint64_t result;
  uint64_t v10;

  v3 = sub_1BB86F658();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 24))(v7, a1, v3);
  swift_endAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v8 == *MEMORY[0x1E0DB6BE8])
  {
    objc_msgSend(v1, sel_removeTarget_action_forControlEvents_, 0, 0, 0xFFFFFFFFLL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  if (v8 == *MEMORY[0x1E0DB6BF0])
  {
    sub_1BB871368();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

void (*CoverViewFollowSwitch.toggleState.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1BB86F658();
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  v7 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState;
  v3[6] = v6;
  v3[7] = v7;
  swift_beginAccess();
  return sub_1BB18D790;
}

void sub_1BB18D790(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) != 0)
    goto LABEL_6;
  v4 = *(_QWORD *)(v3 + 48);
  v5 = *(_QWORD *)(v3 + 32);
  v6 = *(_QWORD *)(v3 + 40);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 16))(v4, *(_QWORD *)(v3 + 24) + *(_QWORD *)(v3 + 56), v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5);
  if (v7 == *MEMORY[0x1E0DB6BE8])
  {
    objc_msgSend(*(id *)(v3 + 24), sel_removeTarget_action_forControlEvents_, 0, 0, 0xFFFFFFFFLL);
LABEL_6:
    free(*(void **)(v3 + 48));
    free((void *)v3);
    return;
  }
  if (v7 == *MEMORY[0x1E0DB6BF0])
  {
    sub_1BB871368();
    goto LABEL_6;
  }
  sub_1BB873EAC();
  __break(1u);
}

char *sub_1BB18D8B4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  Class v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  objc_super v21;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_titleLabel;
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v13 = v4;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_init);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor] = 0;
  v14 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap;
  sub_1BA563554();
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(v15), sel_init);
  v16 = &v13[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState];
  v17 = *MEMORY[0x1E0DB6BF0];
  v18 = sub_1BB86F658();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);

  v21.receiver = v13;
  v21.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_titleLabel]);
  return v19;
}

void CoverViewFollowSwitch.didUpdateToggleState(toggleState:animated:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = sub_1BB86F658();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  if ((a2 & 1) != 0)
    v7 = 0.2;
  else
    v7 = 0.0;
  v8 = (void *)objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1BB18DD3C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_43;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel_animateWithDuration_animations_, v11, v7);
  _Block_release(v11);
}

uint64_t sub_1BB18DC3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v9;

  v2 = sub_1BB86F658();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if ((_DWORD)result != *MEMORY[0x1E0DB6BE8] && (_DWORD)result != *MEMORY[0x1E0DB6BF0])
  {
    result = sub_1BB873EAC();
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall CoverViewFollowSwitch.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  Class isa;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  isa = a1.value.super.isa;
  v3 = objc_msgSend(v1, sel_traitCollection);
  LODWORD(isa) = objc_msgSend(v3, sel_hasDifferentColorAppearanceComparedToTraitCollection_, isa);

  if ((_DWORD)isa)
  {
    v4 = objc_msgSend(v1, sel_layer);
    v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor];
    if (v5)
      v6 = objc_msgSend(v5, sel_CGColor);
    else
      v6 = 0;
    v7 = v6;
    objc_msgSend(v4, sel_setBorderColor_);

  }
}

id CoverViewFollowSwitch.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB18DF1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState;
  swift_beginAccess();
  v4 = sub_1BB86F658();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void (*sub_1BB18DF84(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CoverViewFollowSwitch.toggleState.modify(v2);
  return sub_1BA9D68C8;
}

void sub_1BB18DFC8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = sub_1BB86F658();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  if ((a2 & 1) != 0)
    v7 = 0.2;
  else
    v7 = 0.0;
  v8 = (void *)objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1BB18DD3C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_7;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel_animateWithDuration_animations_, v11, v7);
  _Block_release(v11);
}

uint64_t sub_1BB18E12C()
{
  return type metadata accessor for CoverViewFollowSwitch();
}

uint64_t type metadata accessor for CoverViewFollowSwitch()
{
  uint64_t result;

  result = qword_1ED39D078;
  if (!qword_1ED39D078)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB18E170()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86F658();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BB18E1FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86F658() - 8) + 80);
  return sub_1BB18DC3C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1BB18E230(char *a1, char *a2)
{
  return sub_1BB7F1D68(*a1, *a2);
}

uint64_t sub_1BB18E23C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB18E2B4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB18E308()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB18E37C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB18E3D8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1635017060;
  if (*v1)
    v2 = 0x617461646174656DLL;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB18E410()
{
  _BYTE *v0;

  if (*v0)
    return 0x617461646174656DLL;
  else
    return 1635017060;
}

uint64_t sub_1BB18E444@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB18E4A4()
{
  sub_1BB18E650();
  return sub_1BB874710();
}

uint64_t sub_1BB18E4CC()
{
  sub_1BB18E650();
  return sub_1BB87471C();
}

uint64_t SportsTaxonomyGraphResource.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  sub_1BB18E8F4(0, &qword_1EF2BC938, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  v10 = *v1;
  v9 = v1[1];
  v12 = v1[2];
  v13 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB18E650();
  sub_1BB8746C8();
  v14 = v10;
  v16 = 0;
  sub_1BB18E694();
  sub_1BB8741AC();
  if (!v2)
  {
    v14 = v13;
    v15 = v12;
    v16 = 1;
    sub_1BB18E6D8();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BB18E650()
{
  unint64_t result;

  result = qword_1ED3A81A0;
  if (!qword_1ED3A81A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3798, &type metadata for SportsTaxonomyGraphResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A81A0);
  }
  return result;
}

unint64_t sub_1BB18E694()
{
  unint64_t result;

  result = qword_1EF2BC940;
  if (!qword_1EF2BC940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB903F4C, &type metadata for SportsTaxonomyGraphResourceRootNode);
    atomic_store(result, (unint64_t *)&qword_1EF2BC940);
  }
  return result;
}

unint64_t sub_1BB18E6D8()
{
  unint64_t result;

  result = qword_1EF2BC948;
  if (!qword_1EF2BC948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9587BC, &type metadata for SportsTaxonomyGraphResourceMetadata);
    atomic_store(result, (unint64_t *)&qword_1EF2BC948);
  }
  return result;
}

uint64_t SportsTaxonomyGraphResource.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;

  sub_1BB18E8F4(0, &qword_1ED3AB478, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB18E650();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = 0;
  sub_1BB18E950();
  sub_1BB8740D4();
  v10 = v14[0];
  v15 = 1;
  sub_1BB18E994();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = v14[0];
  v12 = v14[1];
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB18E8F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB18E650();
    v7 = a3(a1, &type metadata for SportsTaxonomyGraphResource.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB18E950()
{
  unint64_t result;

  result = qword_1ED3AA290;
  if (!qword_1ED3AA290)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB903F24, &type metadata for SportsTaxonomyGraphResourceRootNode);
    atomic_store(result, (unint64_t *)&qword_1ED3AA290);
  }
  return result;
}

unint64_t sub_1BB18E994()
{
  unint64_t result;

  result = qword_1ED3AA270;
  if (!qword_1ED3AA270)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB958794, &type metadata for SportsTaxonomyGraphResourceMetadata);
    atomic_store(result, (unint64_t *)&qword_1ED3AA270);
  }
  return result;
}

uint64_t sub_1BB18E9D8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SportsTaxonomyGraphResource.init(from:)(a1, a2);
}

uint64_t sub_1BB18E9EC(_QWORD *a1)
{
  return SportsTaxonomyGraphResource.encode(to:)(a1);
}

uint64_t destroy for SportsDataVisualizationRecentRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed20FormatInspectionListVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatInspectionList(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FormatInspectionList(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResource()
{
  return &type metadata for SportsTaxonomyGraphResource;
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB18EB6C + 4 * byte_1BB8F3625[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB18EBA0 + 4 * byte_1BB8F3620[v4]))();
}

uint64_t sub_1BB18EBA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB18EBA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB18EBB0);
  return result;
}

uint64_t sub_1BB18EBBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB18EBC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB18EBC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB18EBD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResource.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResource.CodingKeys;
}

unint64_t sub_1BB18EBF0()
{
  unint64_t result;

  result = qword_1EF2BC950;
  if (!qword_1EF2BC950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3770, &type metadata for SportsTaxonomyGraphResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC950);
  }
  return result;
}

unint64_t sub_1BB18EC38()
{
  unint64_t result;

  result = qword_1ED3A81B0;
  if (!qword_1ED3A81B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F36A8, &type metadata for SportsTaxonomyGraphResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A81B0);
  }
  return result;
}

unint64_t sub_1BB18EC80()
{
  unint64_t result;

  result = qword_1ED3A81A8;
  if (!qword_1ED3A81A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F36D0, &type metadata for SportsTaxonomyGraphResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A81A8);
  }
  return result;
}

void FeedGroupKnobsRuleSet.value(for:)()
{
  type metadata accessor for FeedGroupKnobsRuleSet.Selector();
}

uint64_t sub_1BB18ED1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v3);
  v4 = sub_1BB873168();
  if ((v4 & 1) != 0)
    return swift_bridgeObjectRetain();
  *(_QWORD *)(v2 - 88) = v0;
  *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 16);
  MEMORY[0x1E0C80A78](v4);
  sub_1BB87309C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v3);
  sub_1BB872C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v2 - 152);
}

uint64_t FeedGroupKnobsRuleSet.__allocating_init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

void FeedGroupKnobsRuleSet.encode(to:)()
{
  type metadata accessor for FeedGroupKnobsRuleSet.CodingKeys();
}

void sub_1BB18EEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v14 - 224) = MEMORY[0x1BCCE5B24](&unk_1BB8F3B98, a1);
  v15 = sub_1BB8741D0();
  *(_QWORD *)(v14 - 208) = v15;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v14 - 216) = (char *)&a9 - v16;
  *(_QWORD *)(v14 - 200) = v13;
  *(_QWORD *)(v14 - 192) = v10;
  *(_QWORD *)(v14 - 72) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v14 - 152) = v11;
  *(_QWORD *)(v14 - 144) = v11;
  *(_QWORD *)(v14 - 136) = v9;
  *(_QWORD *)(v14 - 128) = v13;
  *(_QWORD *)(v14 - 120) = v12;
  *(_QWORD *)(v14 - 112) = v9;
  *(_QWORD *)(v14 - 104) = v13;
  *(_QWORD *)(v14 - 96) = v12;
  type metadata accessor for FeedGroupKnobsRuleSet.Selector();
}

uint64_t sub_1BB18EF44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v6);
  if ((sub_1BB873168() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_1BB8746B0();
    *(_QWORD *)(v4 - 72) = *(_QWORD *)(*(_QWORD *)(v4 - 192) + 16);
    __swift_mutable_project_boxed_opaque_existential_1(v4 - 152, *(_QWORD *)(v4 - 128));
    v7 = sub_1BB87309C();
    *(_QWORD *)(v4 - 176) = *(_QWORD *)(v4 - 200);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3B8], v7, v4 - 176);
    sub_1BB874404();
    return __swift_destroy_boxed_opaque_existential_1(v4 - 152);
  }
  else
  {
    *(_QWORD *)(v4 - 256) = a1;
    *(_QWORD *)(v4 - 248) = v2;
    *(_QWORD *)(v4 - 240) = v6;
    *(_QWORD *)(v4 - 232) = v1;
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    v9 = *(_QWORD *)(v4 - 216);
    sub_1BB8746C8();
    *(_QWORD *)(v4 - 152) = *(_QWORD *)(*(_QWORD *)(v4 - 192) + 16);
    *(_BYTE *)(v4 - 72) = 0;
    v10 = sub_1BB87309C();
    *(_QWORD *)(v4 - 160) = *(_QWORD *)(v4 - 200);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3B8], v10, v4 - 160);
    v11 = *(_QWORD *)(v4 - 208);
    v12 = *(_QWORD *)(v4 - 184);
    sub_1BB8741AC();
    if (!v12)
    {
      v13 = *(_QWORD *)(v4 - 256);
      *(_QWORD *)(v4 - 152) = *(_QWORD *)(v4 - 248);
      *(_BYTE *)(v4 - 72) = 1;
      *(_QWORD *)(v4 - 168) = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleSet<A>.Selector<A1>, v13);
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], *(_QWORD *)(v4 - 240), v4 - 168);
      sub_1BB8741AC();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 232) + 8))(v9, v11);
  }
}

uint64_t FeedGroupKnobsRuleSet.init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1BB18F160@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1BB18F1B0(*(_QWORD *)(v1 + 48));
  if (!result)
    result = swift_bridgeObjectRetain();
  *a1 = result;
  return result;
}

uint64_t sub_1BB18F1B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13[2];

  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v3 = *(_QWORD *)(v1 + 24);
  v13[0] = *(_QWORD *)(v1 + 16);
  v13[1] = v3;
  swift_bridgeObjectRetain();
  v4 = sub_1BA6E583C(v13);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = (uint64_t *)(v4 + 64);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = sub_1BA71D208(a1, v7);
      v10 = sub_1BA6EB330(v9, v7);
      swift_release();
      if ((v10 & 1) != 0)
      {
        v11 = sub_1BA6EBD20(a1, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRetain();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v6 += 5;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t static FeedGroupKnobsRuleSet.== infix(_:_:)()
{
  if ((sub_1BB87306C() & 1) != 0)
    type metadata accessor for FeedGroupKnobsRuleSet.Selector();
  return 0;
}

_QWORD *FeedGroupKnobsRuleSet.Selector.__allocating_init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *result;
  uint64_t v5;

  result = (_QWORD *)swift_allocObject();
  v5 = *a2;
  result[3] = a2[1];
  result[4] = a1;
  result[2] = v5;
  return result;
}

_QWORD *FeedGroupKnobsRuleSet.Selector.init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *a2;
  v2[3] = a2[1];
  v2[4] = a1;
  v2[2] = v3;
  return v2;
}

void FeedGroupKnobsRuleSet.Selector.__allocating_init(from:)(uint64_t a1)
{
  swift_allocObject();
  FeedGroupKnobsRuleSet.Selector.init(from:)(a1);
}

uint64_t sub_1BB18F45C()
{
  uint64_t v0;

  return v0;
}

void FeedGroupKnobsRuleSet.Selector.init(from:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 120);
  v5 = *(_QWORD *)(v2 + 128);
  v6 = *(_QWORD *)(v2 + 136);
  v10[9] = a1;
  v11 = v3;
  v12 = v4;
  *(_QWORD *)&v13 = v5;
  *((_QWORD *)&v13 + 1) = v6;
  v10[5] = sub_1BB86DD14();
  v7 = sub_1BB873A2C();
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x1E0C80A78](v7);
  v10[6] = (char *)v10 - v8;
  v9 = *(_QWORD *)(v2 + 112);
  v11 = *(_QWORD *)(v2 + 80);
  v12 = v3;
  v10[3] = v3;
  v10[4] = v6;
  v13 = *(_OWORD *)(v2 + 96);
  v14 = v9;
  v15 = v4;
  v16 = v5;
  v17 = v6;
  type metadata accessor for FeedGroupKnobsRuleSet.Selector.CodingKeys();
}

_QWORD *sub_1BB18F52C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  MEMORY[0x1BCCE5B24](&unk_1BB8F3B48, a1);
  v3 = sub_1BB874104();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v8 = *(_QWORD **)(v2 - 168);
  v7 = *(_QWORD *)(v2 - 160);
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v2 - 160) = v4;
    *(_BYTE *)(v2 - 144) = 1;
    v9 = *(_QWORD *)(v2 - 184);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3140], v9);
    v10 = *(_QWORD *)(v2 - 176);
    *(_QWORD *)(v2 - 224) = v6;
    sub_1BB874020();
    v11 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v9) == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 216) + 8))(*(_QWORD *)(v2 - 176), *(_QWORD *)(v2 - 208));
      v12 = sub_1BB872754();
    }
    else
    {
      v13 = *(_QWORD *)(v2 - 184);
      v14 = *(_QWORD *)(v2 - 176);
      v12 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v13);
    }
    v15 = *(_QWORD *)(v2 - 160);
    v16 = *(_QWORD *)(v2 - 224);
    v8[4] = v12;
    *(_BYTE *)(v2 - 65) = 0;
    sub_1BA69C13C();
    sub_1BB8740D4();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v3);
    v18 = *(_QWORD *)(v2 - 136);
    v8[2] = *(_QWORD *)(v2 - 144);
    v8[3] = v18;
  }
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v2 - 152));
  return v8;
}

uint64_t static FeedGroupKnobsRuleSet.Selector.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v2 || (sub_1BB874398() & 1) != 0)
    return sub_1BB87306C();
  else
    return 0;
}

BOOL sub_1BB18F790(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BA86B630(*a1, *a2);
}

uint64_t sub_1BB18F7D0()
{
  return sub_1BA86B734();
}

uint64_t sub_1BB18F808()
{
  return sub_1BA86B640();
}

uint64_t sub_1BB18F840()
{
  sub_1BB8745CC();
  sub_1BA86B640();
  return sub_1BB874608();
}

uint64_t sub_1BB18F894()
{
  char *v0;

  return sub_1BA80E778(*v0);
}

uint64_t sub_1BB18F8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA934678(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB18F910@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA86D32C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB18F948(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F3B48, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB18F97C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F3B48, a1);
  return sub_1BB87471C();
}

uint64_t FeedGroupKnobsRuleSet.Selector.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedGroupKnobsRuleSet.Selector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void FeedGroupKnobsRuleSet.Selector.encode(to:)()
{
  type metadata accessor for FeedGroupKnobsRuleSet.Selector.CodingKeys();
}

uint64_t sub_1BB18FA6C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  MEMORY[0x1BCCE5B24](&unk_1BB8F3B48, a1);
  v4 = sub_1BB8741D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1BB8746C8();
  v8 = v2[3];
  *(_QWORD *)(v3 - 144) = v2[2];
  *(_QWORD *)(v3 - 136) = v8;
  *(_BYTE *)(v3 - 65) = 0;
  sub_1BA68660C();
  v9 = *(_QWORD *)(v3 - 160);
  sub_1BB8741AC();
  if (!v9)
  {
    *(_QWORD *)(v3 - 144) = v2[4];
    *(_BYTE *)(v3 - 65) = 1;
    v10 = sub_1BB87309C();
    *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 168);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3B8], v10, v3 - 152);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB18FBC8()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

void sub_1BB18FC18(uint64_t a1)
{
  FeedGroupKnobsRuleSet.Selector.__allocating_init(from:)(a1);
}

uint64_t sub_1BB18FC2C(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

void sub_1BB18FC40()
{
  FeedGroupKnobsRuleSet.Selector.encode(to:)();
}

uint64_t sub_1BB18FC60(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupKnobsRuleSet.Selector.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB18FC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F39F0, a3);
  return sub_1BB874440();
}

uint64_t sub_1BB18FCC0(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F39F0, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BB18FD0C()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F39F0);
  return sub_1BB872D54();
}

uint64_t sub_1BB18FD5C()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F39F0);
  return sub_1BB872D48();
}

uint64_t sub_1BB18FDAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB18FBC8();
  *a1 = result;
  return result;
}

uint64_t sub_1BB18FDE4()
{
  char *v0;

  return sub_1BA810390(*v0);
}

uint64_t sub_1BB18FDF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB18FBC8();
  *a1 = result;
  return result;
}

uint64_t sub_1BB18FE28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA86D32C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB18FE58(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F3B98, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB18FE8C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F3B98, a1);
  return sub_1BB87471C();
}

uint64_t FeedGroupKnobsRuleSet.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedGroupKnobsRuleSet.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BB18FF10()
{
  FeedGroupKnobsRuleSet.encode(to:)();
}

uint64_t sub_1BB18FF30()
{
  return static FeedGroupKnobsRuleSet.== infix(_:_:)();
}

void type metadata accessor for FeedGroupKnobsRuleSet.Selector.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t method lookup function for FeedGroupKnobsRuleSet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleSet.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleSet.__allocating_init(value:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for FeedGroupKnobsRuleSet.Selector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleSet.Selector.__allocating_init(value:selector:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleSet.Selector.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1BB18FFA4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB18FFF0 + 4 * byte_1BB8F37F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB190024 + 4 * byte_1BB8F37F0[v4]))();
}

uint64_t sub_1BB190024(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19002C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB190034);
  return result;
}

uint64_t sub_1BB190040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB190048);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB19004C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB190054(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BB190060()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB190070()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB190080()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB190090()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t FormatMenuGroupData.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BAC68A68(v2, v3, v4);
}

id FormatMenuGroupData.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  v2 = *(void **)(v1 + 24);
  *(_QWORD *)a1 = v2;
  v3 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1BAC68A80(v2, v3);
}

uint64_t FormatMenuGroupData.style.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t FormatMenuGroupData.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatMenuGroupData(uint64_t a1)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 != 255)
    sub_1BAB5EC9C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v2 & 1);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 != 255)
    sub_1BA92F770(*(void **)(a1 + 24), v3 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatMenuGroupData(uint64_t a1, uint64_t *a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  int v9;
  char v10;
  void *v11;

  v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  }
  else
  {
    v5 = v4 & 1;
    v6 = *a2;
    v7 = a2[1];
    sub_1BAB5EC7C(*a2, v7, v4 & 1);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = v5;
  }
  v8 = (void **)(a2 + 3);
  v9 = *((unsigned __int8 *)a2 + 32);
  if (v9 == 255)
  {
    *(_QWORD *)(a1 + 24) = *v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  }
  else
  {
    v10 = v9 & 1;
    v11 = *v8;
    sub_1BA92F754(*v8, v9 & 1);
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v10;
  }
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatMenuGroupData(uint64_t a1, __int128 *a2)
{
  int v4;
  char v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void **v17;
  int v18;
  char v19;
  void *v20;
  char v21;
  void *v22;
  void *v23;
  char v24;
  char v25;
  void *v26;
  uint64_t v27;

  v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v4 == 255)
    {
      v6 = *a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      v13 = v4 & 1;
      v14 = *(_QWORD *)a2;
      v15 = *((_QWORD *)a2 + 1);
      sub_1BAB5EC7C(*(_QWORD *)a2, v15, v4 & 1);
      *(_QWORD *)a1 = v14;
      *(_QWORD *)(a1 + 8) = v15;
      *(_BYTE *)(a1 + 16) = v13;
    }
  }
  else if (v4 == 255)
  {
    sub_1BB19039C(a1);
    v5 = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 16) = v5;
  }
  else
  {
    v7 = v4 & 1;
    v8 = *(_QWORD *)a2;
    v9 = *((_QWORD *)a2 + 1);
    sub_1BAB5EC7C(*(_QWORD *)a2, v9, v4 & 1);
    v10 = *(_QWORD *)a1;
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(_BYTE *)(a1 + 16);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + 16) = v7;
    sub_1BAB5EC9C(v10, v11, v12);
  }
  v16 = (void **)(a1 + 24);
  v17 = (void **)a2 + 3;
  v18 = *((unsigned __int8 *)a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v18 == 255)
    {
      v20 = *v17;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *v16 = v20;
    }
    else
    {
      v25 = v18 & 1;
      v26 = *v17;
      sub_1BA92F754(v26, v18 & 1);
      *(_QWORD *)(a1 + 24) = v26;
      *(_BYTE *)(a1 + 32) = v25;
    }
  }
  else if (v18 == 255)
  {
    sub_1BB1903D0(a1 + 24);
    v19 = *((_BYTE *)a2 + 32);
    *v16 = *v17;
    *(_BYTE *)(a1 + 32) = v19;
  }
  else
  {
    v21 = v18 & 1;
    v22 = *v17;
    sub_1BA92F754(v22, v18 & 1);
    v23 = *(void **)(a1 + 24);
    v24 = *(_BYTE *)(a1 + 32);
    *(_QWORD *)(a1 + 24) = v22;
    *(_BYTE *)(a1 + 32) = v21;
    sub_1BA92F770(v23, v24);
  }
  v27 = *((_QWORD *)a2 + 5);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v27;
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB19039C(uint64_t a1)
{
  destroy for FormatMenuTitleData(a1);
  return a1;
}

uint64_t sub_1BB1903D0(uint64_t a1)
{
  destroy for FormatMenuImageData(a1);
  return a1;
}

uint64_t assignWithTake for FormatMenuGroupData(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  int v10;
  void *v11;

  v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 255)
    goto LABEL_4;
  v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 255)
  {
    sub_1BB19039C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    goto LABEL_6;
  }
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  sub_1BAB5EC9C(v6, v7, v4 & 1);
LABEL_6:
  v8 = (_QWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a1 + 32);
  if (v9 != 255)
  {
    v10 = *(unsigned __int8 *)(a2 + 32);
    if (v10 != 255)
    {
      v11 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v8;
      *(_BYTE *)(a1 + 32) = v10 & 1;
      sub_1BA92F770(v11, v9 & 1);
      goto LABEL_11;
    }
    sub_1BB1903D0(a1 + 24);
  }
  *(_QWORD *)(a1 + 24) = *v8;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_11:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatMenuGroupData()
{
  return &type metadata for FormatMenuGroupData;
}

uint64_t sub_1BB190508(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  int v13;
  char v14;
  char v15;

  v13 = a4;
  sub_1BB190970(0, &qword_1EF2BC970, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB19092C();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v4)
  {
    v14 = 1;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BB190638()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB19067C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB190B70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB1906A0()
{
  sub_1BB19092C();
  return sub_1BB874710();
}

uint64_t sub_1BB1906C8()
{
  sub_1BB19092C();
  return sub_1BB87471C();
}

uint64_t sub_1BB1906F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1BB190794(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1BB190720(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BB190508(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

ValueMetadata *_s10SwitchDataVMa()
{
  return &_s10SwitchDataVN;
}

unint64_t sub_1BB190750()
{
  unint64_t result;

  result = qword_1EF2BC958;
  if (!qword_1EF2BC958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3C6C, &_s10SwitchDataVN);
    atomic_store(result, (unint64_t *)&qword_1EF2BC958);
  }
  return result;
}

uint64_t sub_1BB190794(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];

  sub_1BB190970(0, &qword_1EF2BC960, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB19092C();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    v8 = sub_1BB874098();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_1BB8740A4();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BB19092C()
{
  unint64_t result;

  result = qword_1EF2BC968;
  if (!qword_1EF2BC968)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3DA8, &_s10SwitchDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2BC968);
  }
  return result;
}

void sub_1BB190970(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB19092C();
    v7 = a3(a1, &_s10SwitchDataV10CodingKeysON, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t _s10SwitchDataV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB190A18 + 4 * byte_1BB8F3C19[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB190A4C + 4 * asc_1BB8F3C14[v4]))();
}

uint64_t sub_1BB190A4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB190A54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB190A5CLL);
  return result;
}

uint64_t sub_1BB190A68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB190A70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB190A74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB190A7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10SwitchDataV10CodingKeysOMa()
{
  return &_s10SwitchDataV10CodingKeysON;
}

unint64_t sub_1BB190A9C()
{
  unint64_t result;

  result = qword_1EF2BC978;
  if (!qword_1EF2BC978)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3D80, &_s10SwitchDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2BC978);
  }
  return result;
}

unint64_t sub_1BB190AE4()
{
  unint64_t result;

  result = qword_1EF2BC980;
  if (!qword_1EF2BC980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3CF0, &_s10SwitchDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2BC980);
  }
  return result;
}

unint64_t sub_1BB190B2C()
{
  unint64_t result;

  result = qword_1EF2BC988;
  if (!qword_1EF2BC988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F3D18, &_s10SwitchDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2BC988);
  }
  return result;
}

uint64_t sub_1BB190B70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BB97C860)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t WebEmbedDatastoreUpdate.visualization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
}

uint64_t WebEmbedDatastoreUpdate.datastore.getter()
{
  type metadata accessor for WebEmbedDatastoreUpdate();
  return swift_retain();
}

uint64_t WebEmbedDatastoreUpdate.hash(into:)()
{
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t WebEmbedDatastoreUpdate.hashValue.getter()
{
  sub_1BB8745CC();
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB190D48()
{
  sub_1BB8745CC();
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB190DA0()
{
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB190DDC()
{
  sub_1BB8745CC();
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t _s8NewsFeed23WebEmbedDatastoreUpdateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v28;

  v4 = type metadata accessor for WebEmbedDatastoreUpdate();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  v10 = WebEmbedDataVisualization.identifier.getter();
  v12 = v11;
  if (v10 == WebEmbedDataVisualization.identifier.getter() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    sub_1BA4C2DD8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  }
  else
  {
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    sub_1BA4C2DD8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    v15 = 0;
    if ((v14 & 1) == 0)
      goto LABEL_12;
  }
  v16 = *(int *)(v4 + 20);
  v17 = *(_QWORD *)&v6[v16];
  v18 = objc_msgSend(*(id *)(*(_QWORD *)&v9[v16] + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString);
  v19 = sub_1BB8729A0();
  v21 = v20;

  v22 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v17
                                                              + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString));
  v23 = sub_1BB8729A0();
  v25 = v24;

  if (v19 == v23 && v21 == v25)
    v15 = 1;
  else
    v15 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  return v15 & 1;
}

unint64_t sub_1BB19105C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BC990;
  if (!qword_1EF2BC990)
  {
    v1 = type metadata accessor for WebEmbedDatastoreUpdate();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDatastoreUpdate, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BC990);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedDatastoreUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    type metadata accessor for WebEmbedDataVisualization();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v8 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v9 = a2[1];
      *a1 = v8;
      a1[1] = v9;
      v10 = type metadata accessor for GenericDataVisualization();
      v11 = *(int *)(v10 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1BB86C67C();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for WebEmbedDatastoreUpdate(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = a1 + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
    v3 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *initializeWithCopy for WebEmbedDatastoreUpdate(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  type metadata accessor for WebEmbedDataVisualization();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v7 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = v7;
    a1[1] = v8;
    v9 = type metadata accessor for GenericDataVisualization();
    v10 = *(int *)(v9 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1BB86C67C();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    *(_QWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 24));
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for WebEmbedDatastoreUpdate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    type metadata accessor for WebEmbedDataVisualization();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      v7 = type metadata accessor for GenericDataVisualization();
      v8 = *(int *)(v7 + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BB86C67C();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for WebEmbedDatastoreUpdate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v7 = type metadata accessor for GenericDataVisualization();
    v8 = *(int *)(v7 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *assignWithTake for WebEmbedDatastoreUpdate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v6 = type metadata accessor for WebEmbedDataVisualization();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v7 = type metadata accessor for GenericDataVisualization();
      v8 = *(int *)(v7 + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedDatastoreUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB191674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for WebEmbedDataVisualization();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WebEmbedDatastoreUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1916FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for WebEmbedDataVisualization();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BB191774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for FormatStateMachineStateStore();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  result = sub_1BB86DD50();
  *(_QWORD *)(v1 + 24) = result;
  qword_1ED476410 = v1;
  return result;
}

uint64_t type metadata accessor for FormatStateMachineStateStore()
{
  return objc_opt_self();
}

uint64_t FormatItemNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB1918D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  _QWORD v81[7];
  unsigned __int8 v82;

  v1 = v0;
  v2 = *v0;
  sub_1BA7754CC(0);
  MEMORY[0x1E0C80A78](v3);
  v59 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v5 = v0[3];
  v70 = v0[2];
  v6 = v0[4];
  v7 = v0[5];
  v68 = v6;
  v9 = v1[6];
  v8 = v1[7];
  v10 = v1[8];
  v11 = v1[9];
  v13 = v1[10];
  v12 = v1[11];
  v14 = *((unsigned __int8 *)v1 + 112);
  v15 = v1[12];
  v71 = v1[13];
  v69 = v5;
  v67 = v7;
  v66 = v8;
  v65 = v10;
  v63 = v13;
  v61 = v15;
  v72 = v12;
  if ((v14 & 0xFE) == 0x7E)
  {
    v60 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v58 = v2;
    v57 = v12 & 1;
    v16 = v12;
    if ((~v9 & 0xF000000000000007) != 0)
    {
      v73 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = v16;
      v18 = v71;
      sub_1BA7643E8(v9, v8, v10, v11, v13, v20, v15, v71, v14, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
      sub_1BB525134();
      v19 = v81[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = v16;
      v18 = v71;
      sub_1BA7643E8(v9, v8, v10, v11, v13, v17, v15, v71, v14, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
      v19 = v9;
    }
    sub_1BA6E6C54(v15, v18, v14);
    sub_1BA7643E8(v9, v8, v10, v11, v13, v72, v15, v18, v14, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
    v60 = v19;
    v72 = v57;
  }
  v21 = v1[15];
  v22 = v1[16];
  v23 = v1[17];
  v24 = v1[18];
  v26 = v1[19];
  v25 = v1[20];
  v27 = v1[21];
  v28 = *((unsigned __int8 *)v1 + 176);
  v64 = v11;
  v62 = v14;
  if (v28 == 255)
  {
    LODWORD(v58) = 255;
    v57 = v21;
    v56 = v22;
    v55 = v23;
  }
  else
  {
    v73 = v21;
    v74 = v22;
    v75 = v23;
    v76 = v24;
    v77 = v26;
    v78 = v25;
    v79 = v27;
    v80 = v28;
    sub_1BB7AF9D4((uint64_t)v81);
    v57 = v81[0];
    v56 = v81[1];
    v24 = v81[3];
    v55 = v81[2];
    v26 = v81[4];
    v25 = v81[5];
    v27 = v81[6];
    LODWORD(v58) = v82;
  }
  v29 = v59;
  sub_1BA4C2DD8((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, v59, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  v54 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  v53 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  v30 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  v31 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
  v32 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  v33 = *v32;
  v34 = (char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  v52 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
  v35 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 16);
  v51 = *((_QWORD *)v34 + 3);
  HIDWORD(v50) = *((unsigned __int16 *)v34 + 16);
  v36 = swift_allocObject();
  swift_beginAccess();
  v37 = v69;
  *(_QWORD *)(v36 + 16) = v70;
  *(_QWORD *)(v36 + 24) = v37;
  v38 = v67;
  *(_QWORD *)(v36 + 32) = v68;
  *(_QWORD *)(v36 + 40) = v38;
  v39 = v66;
  *(_QWORD *)(v36 + 48) = v60;
  *(_QWORD *)(v36 + 56) = v39;
  v40 = v64;
  *(_QWORD *)(v36 + 64) = v65;
  *(_QWORD *)(v36 + 72) = v40;
  v41 = v72;
  *(_QWORD *)(v36 + 80) = v63;
  *(_QWORD *)(v36 + 88) = v41;
  v42 = v71;
  *(_QWORD *)(v36 + 96) = v61;
  *(_QWORD *)(v36 + 104) = v42;
  *(_BYTE *)(v36 + 112) = v62;
  v43 = v56;
  *(_QWORD *)(v36 + 120) = v57;
  *(_QWORD *)(v36 + 128) = v43;
  *(_QWORD *)(v36 + 136) = v55;
  *(_QWORD *)(v36 + 144) = v24;
  *(_QWORD *)(v36 + 152) = v26;
  *(_QWORD *)(v36 + 160) = v25;
  *(_QWORD *)(v36 + 168) = v27;
  v44 = v36 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(_BYTE *)(v36 + 176) = v58;
  sub_1BA5193C4(v29, v44, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  *(_BYTE *)(v36 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = v54;
  *(_BYTE *)(v36 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = v53;
  v45 = (unint64_t *)(v36 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  *v45 = v30;
  v45[1] = v31;
  v46 = (_QWORD *)(v36 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *v46 = v33;
  v47 = v36 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  *(_OWORD *)v47 = v52;
  v48 = v51;
  *(_QWORD *)(v47 + 16) = v35;
  *(_QWORD *)(v47 + 24) = v48;
  *(_WORD *)(v47 + 32) = WORD2(v50);
  sub_1BA77567C(v30);
  swift_bridgeObjectRetain();
  return v36;
}

uint64_t FormatItemNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatItemNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeStyle.previewParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v1 + 96);
  v9 = *(_QWORD *)(v1 + 104);
  v10 = *(_BYTE *)(v1 + 112);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_1BA7643E8(v2, v3, v4, v5, v6, v7, v8, v9, v10, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
}

uint64_t FormatItemNodeStyle.cellSelection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  v4 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v6 = *(_QWORD *)(v1 + 152);
  v7 = *(_QWORD *)(v1 + 160);
  v8 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = *(_BYTE *)(v1 + 176);
  *(_BYTE *)(a1 + 56) = v9;
  return sub_1BA764498(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t FormatItemNodeStyle.cellAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, a1, (uint64_t (*)(_QWORD))sub_1BA7754CC);
}

uint64_t FormatItemNodeStyle.clipsToBounds.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
}

uint64_t FormatItemNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
}

unint64_t FormatItemNodeStyle.swipeActionStyle.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA77567C(v2);
}

uint64_t sub_1BB192004(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatItemNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

__n128 FormatItemNodeStyle.focusParameters.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_WORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = v2;
  return result;
}

uint64_t FormatItemNodeStyle.__allocating_init(identifier:class:previewParameters:cellSelection:cellAction:clipsToBounds:ignoresSmartInvertColors:swipeActionStyle:selectors:focusParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, __int128 *a6, uint64_t a7, char a8, char a9, uint64_t *a10, uint64_t a11, __int128 *a12)
{
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  v16 = swift_allocObject();
  v32 = a5[1];
  v33 = *a5;
  v17 = a5[2];
  v18 = *((_QWORD *)a5 + 6);
  v19 = *((_QWORD *)a5 + 7);
  LOBYTE(a5) = *((_BYTE *)a5 + 64);
  v30 = *a6;
  v31 = v17;
  v28 = a6[2];
  v29 = a6[1];
  v20 = *((_QWORD *)a6 + 6);
  LOBYTE(a6) = *((_BYTE *)a6 + 56);
  v21 = a10[1];
  v39 = *a12;
  v38 = *((_QWORD *)a12 + 2);
  v36 = *a10;
  v37 = *((_QWORD *)a12 + 3);
  v22 = *((_WORD *)a12 + 16);
  swift_beginAccess();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  *(_OWORD *)(v16 + 48) = v33;
  *(_OWORD *)(v16 + 64) = v32;
  *(_OWORD *)(v16 + 80) = v31;
  *(_QWORD *)(v16 + 96) = v18;
  *(_QWORD *)(v16 + 104) = v19;
  *(_BYTE *)(v16 + 112) = (_BYTE)a5;
  *(_OWORD *)(v16 + 120) = v30;
  *(_OWORD *)(v16 + 136) = v29;
  *(_OWORD *)(v16 + 152) = v28;
  *(_QWORD *)(v16 + 168) = v20;
  v23 = v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(_BYTE *)(v16 + 176) = (_BYTE)a6;
  sub_1BA5193C4(a7, v23, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  *(_BYTE *)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = a8;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = a9;
  v24 = (_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  *v24 = v36;
  v24[1] = v21;
  v25 = (_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *v25 = a11;
  v26 = v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  *(_OWORD *)v26 = v39;
  *(_QWORD *)(v26 + 16) = v38;
  *(_QWORD *)(v26 + 24) = v37;
  *(_WORD *)(v26 + 32) = v22;
  return v16;
}

uint64_t FormatItemNodeStyle.init(identifier:class:previewParameters:cellSelection:cellAction:clipsToBounds:ignoresSmartInvertColors:swipeActionStyle:selectors:focusParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, __int128 *a6, uint64_t a7, char a8, char a9, uint64_t *a10, uint64_t a11, __int128 *a12)
{
  uint64_t v12;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  v31 = a5[1];
  v32 = *a5;
  v17 = *((_QWORD *)a5 + 6);
  v18 = *((_QWORD *)a5 + 7);
  v19 = *((_BYTE *)a5 + 64);
  v29 = *a6;
  v30 = a5[2];
  v27 = a6[2];
  v28 = a6[1];
  v20 = *((_QWORD *)a6 + 6);
  v21 = *((_BYTE *)a6 + 56);
  v33 = a10[1];
  v34 = *a10;
  v39 = *a12;
  v37 = *((_QWORD *)a12 + 3);
  v38 = *((_QWORD *)a12 + 2);
  v36 = *((_WORD *)a12 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_OWORD *)(v12 + 48) = v32;
  *(_OWORD *)(v12 + 64) = v31;
  *(_OWORD *)(v12 + 80) = v30;
  *(_QWORD *)(v12 + 96) = v17;
  *(_QWORD *)(v12 + 104) = v18;
  *(_BYTE *)(v12 + 112) = v19;
  *(_OWORD *)(v12 + 120) = v29;
  *(_OWORD *)(v12 + 136) = v28;
  *(_OWORD *)(v12 + 152) = v27;
  *(_QWORD *)(v12 + 168) = v20;
  v22 = v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(_BYTE *)(v12 + 176) = v21;
  sub_1BA5193C4(a7, v22, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  *(_BYTE *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = a8;
  *(_BYTE *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = a9;
  v23 = (_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  *v23 = v34;
  v23[1] = v33;
  v24 = (_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *v24 = a11;
  v25 = v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  *(_OWORD *)v25 = v39;
  *(_QWORD *)(v25 + 16) = v38;
  *(_QWORD *)(v25 + 24) = v37;
  *(_WORD *)(v25 + 32) = v36;
  return v12;
}

uint64_t sub_1BB1924C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t *v13;
  int v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  sub_1BA7754CC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v114 = (uint64_t)&v72 - v10;
  v11 = *a1;
  v12 = (int *)type metadata accessor for FormatItemNodeStyle.Selector(0);
  v13 = (uint64_t *)(a2 + v12[11]);
  v14 = *((unsigned __int16 *)v13 + 16);
  v100 = a3;
  if ((v14 & 0xFF00) == 0x400)
  {
    v13 = (uint64_t *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
    v87 = *(unsigned __int16 *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  }
  else
  {
    v87 = v14;
  }
  v99 = v13[3];
  v98 = v13[2];
  v16 = v13;
  v15 = *v13;
  v97 = v16[1];
  v96 = v15;
  swift_beginAccess();
  v95 = *(_QWORD *)(v11 + 16);
  v113 = *(_QWORD *)(v11 + 24);
  v17 = *(_QWORD *)(a2 + 16);
  v18 = *(_QWORD *)(a2 + 24);
  v19 = *(_QWORD *)(a2 + 32);
  v20 = *(_QWORD *)(a2 + 40);
  v21 = *(_QWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 56);
  v23 = *(unsigned __int8 *)(a2 + 80);
  v86 = v17;
  v85 = v18;
  v84 = v19;
  v83 = v20;
  v82 = v21;
  v111 = v21;
  v25 = *(_QWORD *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 72);
  v81 = v22;
  v110 = v22;
  v79 = v25;
  v109 = v25;
  v80 = v24;
  v108 = v24;
  v107 = v23;
  v90 = *(_QWORD *)(v11 + 32);
  v112 = *(_QWORD *)(v11 + 40);
  if ((v23 & 0xFE) == 0x7E)
  {
    v17 = *(_QWORD *)(v11 + 48);
    v18 = *(_QWORD *)(v11 + 56);
    v19 = *(_QWORD *)(v11 + 64);
    v20 = *(_QWORD *)(v11 + 72);
    v26 = *(_QWORD *)(v11 + 80);
    v27 = *(_QWORD *)(v11 + 88);
    v28 = *(_QWORD *)(v11 + 96);
    v29 = *(_QWORD *)(v11 + 104);
    v107 = *(unsigned __int8 *)(v11 + 112);
    v110 = v27;
    v111 = v26;
    v108 = v29;
    v109 = v28;
    sub_1BA7643E8(v17, v18, v19, v20, v26, v27, v28, v29, v107, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  }
  v91 = v20;
  v92 = v19;
  v93 = v18;
  v94 = v17;
  v30 = *(_QWORD *)(a2 + 88);
  v31 = *(_QWORD *)(a2 + 96);
  v32 = *(_QWORD *)(a2 + 104);
  v33 = *(_QWORD *)(a2 + 112);
  v34 = *(_QWORD *)(a2 + 120);
  v35 = *(_QWORD *)(a2 + 128);
  v36 = *(_QWORD *)(a2 + 136);
  v78 = v30;
  v77 = v31;
  v76 = v32;
  v105 = v33;
  v106 = v32;
  v75 = v34;
  v104 = v34;
  v37 = *(unsigned __int8 *)(a2 + 144);
  v74 = v35;
  v103 = v35;
  v73 = v36;
  v101 = v36;
  v102 = v37;
  if (v37 == 255)
  {
    v30 = *(_QWORD *)(v11 + 120);
    v31 = *(_QWORD *)(v11 + 128);
    v38 = *(_QWORD *)(v11 + 136);
    v39 = *(_QWORD *)(v11 + 152);
    v40 = *(_QWORD *)(v11 + 160);
    v41 = *(_QWORD *)(v11 + 168);
    v42 = *(unsigned __int8 *)(v11 + 176);
    v105 = *(_QWORD *)(v11 + 144);
    v106 = v38;
    v104 = v39;
    v103 = v40;
    v101 = v41;
    v102 = v42;
    sub_1BA764498(v30, v31, v38, v105, v39, v40, v41, v42);
  }
  v88 = v31;
  v89 = v30;
  sub_1BA4C2DD8(a2 + v12[7], (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  v43 = type metadata accessor for FormatItemNodeAction();
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v8, 1, v43) == 1)
  {
    sub_1BA4C2DD8(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, v114, (uint64_t (*)(_QWORD))sub_1BA7754CC);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7643E8(v86, v85, v84, v83, v82, v81, v79, v80, v23, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
    sub_1BA764498(v78, v77, v76, v33, v75, v74, v73, v37);
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  }
  else
  {
    v45 = (uint64_t)v8;
    v46 = v114;
    sub_1BA5193C4(v45, v114, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7643E8(v86, v85, v84, v83, v82, v81, v79, v80, v23, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
    sub_1BA764498(v78, v77, v76, v33, v75, v74, v73, v37);
  }
  v47 = *(unsigned __int8 *)(a2 + v12[8]);
  if (v47 == 2)
    LOBYTE(v47) = *(_BYTE *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  v48 = *(unsigned __int8 *)(a2 + v12[9]);
  if (v48 == 2)
    LOBYTE(v48) = *(_BYTE *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  v49 = (unint64_t *)(a2 + v12[10]);
  v50 = *v49;
  v51 = *v49;
  v52 = v49[1];
  if (*v49 == 3)
  {
    v51 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    v52 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    sub_1BA77567C(v51);
  }
  v53 = (uint64_t *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  v54 = *v53;
  type metadata accessor for FormatItemNodeStyle(0);
  v55 = swift_allocObject();
  swift_beginAccess();
  v56 = v113;
  *(_QWORD *)(v55 + 16) = v95;
  *(_QWORD *)(v55 + 24) = v56;
  v57 = v112;
  *(_QWORD *)(v55 + 32) = v90;
  *(_QWORD *)(v55 + 40) = v57;
  v58 = v93;
  *(_QWORD *)(v55 + 48) = v94;
  *(_QWORD *)(v55 + 56) = v58;
  v59 = v91;
  *(_QWORD *)(v55 + 64) = v92;
  *(_QWORD *)(v55 + 72) = v59;
  v60 = v110;
  *(_QWORD *)(v55 + 80) = v111;
  *(_QWORD *)(v55 + 88) = v60;
  v61 = v108;
  *(_QWORD *)(v55 + 96) = v109;
  *(_QWORD *)(v55 + 104) = v61;
  *(_BYTE *)(v55 + 112) = v107;
  v62 = v88;
  *(_QWORD *)(v55 + 120) = v89;
  *(_QWORD *)(v55 + 128) = v62;
  v63 = v105;
  *(_QWORD *)(v55 + 136) = v106;
  *(_QWORD *)(v55 + 144) = v63;
  v64 = v103;
  *(_QWORD *)(v55 + 152) = v104;
  *(_QWORD *)(v55 + 160) = v64;
  *(_QWORD *)(v55 + 168) = v101;
  v65 = v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(_BYTE *)(v55 + 176) = v102;
  sub_1BA5193C4(v114, v65, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  *(_BYTE *)(v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = v47;
  *(_BYTE *)(v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = v48;
  v66 = (unint64_t *)(v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  *v66 = v51;
  v66[1] = v52;
  v67 = (_QWORD *)(v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *v67 = v54;
  v68 = v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  v69 = v97;
  *(_QWORD *)v68 = v96;
  *(_QWORD *)(v68 + 8) = v69;
  v70 = v99;
  *(_QWORD *)(v68 + 16) = v98;
  *(_QWORD *)(v68 + 24) = v70;
  *(_WORD *)(v68 + 32) = v87;
  *v100 = v55;
  sub_1BA77567C(v50);
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA7643E8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112), (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  sub_1BA7644AC(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 176));
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  sub_1BA7644C0(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB192CCC(_QWORD *a1, _QWORD *a2)
{
  return static FormatItemNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatItemNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeStyle.Selector.previewParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v10 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_1BA7643E8(v2, v3, v4, v5, v6, v7, v8, v9, v10, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
}

uint64_t FormatItemNodeStyle.Selector.cellSelection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 104);
  v5 = *(_QWORD *)(v1 + 112);
  v6 = *(_QWORD *)(v1 + 120);
  v7 = *(_QWORD *)(v1 + 128);
  v8 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = *(_BYTE *)(v1 + 144);
  *(_BYTE *)(a1 + 56) = v9;
  return sub_1BA764498(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t FormatItemNodeStyle.Selector.cellAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))sub_1BA7754CC);
}

uint64_t FormatItemNodeStyle.Selector.clipsToBounds.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatItemNodeStyle.Selector(0) + 32));
}

uint64_t FormatItemNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatItemNodeStyle.Selector(0) + 36));
}

unint64_t FormatItemNodeStyle.Selector.swipeActionStyle.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;

  v3 = (unint64_t *)(v1 + *(int *)(type metadata accessor for FormatItemNodeStyle.Selector(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BA77567C(v4);
}

__n128 FormatItemNodeStyle.Selector.focusParameters.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  __n128 result;
  __int128 v6;

  v3 = v1 + *(int *)(type metadata accessor for FormatItemNodeStyle.Selector(0) + 44);
  v4 = *(_WORD *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = v4;
  return result;
}

uint64_t FormatItemNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

void sub_1BB192E6C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;

  sub_1BA7808F0(0);
  *a2 = *(_QWORD *)(a1 + *(int *)(v4 + 36));
}

BOOL _s8NewsFeed19FormatItemNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  int v77;
  int v78;
  _BOOL4 v79;
  uint64_t v80;
  int v81;
  int v82;
  _BOOL4 v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t v89;
  BOOL v90;
  uint64_t v91;
  __int128 *v92;
  __int16 v93;
  __int128 *v94;
  __int16 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _BYTE v99[12];
  _BOOL4 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned __int8 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned __int8 v135;

  v4 = type metadata accessor for FormatItemNodeAction();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v99[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB19534C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = &v99[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA7754CC(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v99[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v99[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v99[-v19];
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v21 = sub_1BB874398();
    result = 0;
    if ((v21 & 1) == 0)
      return result;
  }
  v107 = v9;
  v108 = v5;
  v112 = v17;
  v109 = v20;
  v106 = v14;
  v105 = v7;
  v110 = v4;
  v111 = v11;
  v24 = *(_QWORD *)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 24);
  v26 = *(_QWORD *)(a1 + 32);
  v25 = *(_QWORD *)(a1 + 40);
  v28 = *(_QWORD *)(a1 + 48);
  v27 = *(_QWORD *)(a1 + 56);
  v29 = *(_QWORD *)(a1 + 64);
  v30 = *(_QWORD *)(a1 + 72);
  v31 = *(_BYTE *)(a1 + 80);
  v33 = *(_QWORD *)(a2 + 16);
  v32 = *(_QWORD *)(a2 + 24);
  v35 = *(_QWORD *)(a2 + 32);
  v34 = *(_QWORD *)(a2 + 40);
  v36 = *(_QWORD *)(a2 + 48);
  v37 = *(_QWORD *)(a2 + 56);
  v38 = *(_QWORD *)(a2 + 64);
  v39 = *(_QWORD *)(a2 + 72);
  v40 = *(_BYTE *)(a2 + 80);
  if ((v31 & 0xFE) == 0x7E)
  {
    if ((v40 & 0xFE) == 0x7E)
      goto LABEL_11;
LABEL_9:
    *(_QWORD *)&v120 = v24;
    *((_QWORD *)&v120 + 1) = v23;
    *(_QWORD *)&v121 = v26;
    *((_QWORD *)&v121 + 1) = v25;
    v122 = v28;
    v123 = v27;
    v124 = v29;
    v125 = v30;
    LOBYTE(v126) = v31;
    v127 = v33;
    v128 = v32;
    v129 = v35;
    v130 = v34;
    v131 = v36;
    v132 = v37;
    v133 = v38;
    v134 = v39;
    v135 = v40;
    sub_1BA7643E8(v33, v32, v35, v34, v36, v37, v38, v39, v40, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
    sub_1BAEE7B28((uint64_t)&v120);
    return 0;
  }
  *(_QWORD *)&v120 = *(_QWORD *)(a1 + 16);
  *((_QWORD *)&v120 + 1) = v23;
  *(_QWORD *)&v121 = v26;
  *((_QWORD *)&v121 + 1) = v25;
  v122 = v28;
  v123 = v27;
  v124 = v29;
  v125 = v30;
  LOBYTE(v126) = v31;
  v104 = v28;
  v103 = v25;
  v102 = v26;
  v101 = v23;
  if ((v40 & 0xFE) == 0x7E)
  {
    v112 = (_BYTE *)v27;
    v111 = (_BYTE *)v39;
    v110 = v38;
    v109 = (_BYTE *)v37;
    v41 = v36;
    v42 = v34;
    sub_1BA5E7FF4(v24);
    sub_1BA6E6C54(v29, v30, v31);
    sub_1BA5E7FF4(v24);
    sub_1BA6E6C54(v29, v30, v31);
    sub_1BA5E800C(v24);
    sub_1BA6E6CC4(v29, v30, v31);
    v34 = v42;
    v36 = v41;
    v37 = (uint64_t)v109;
    v38 = v110;
    v39 = (uint64_t)v111;
    v23 = v101;
    v26 = v102;
    v25 = v103;
    v28 = v104;
    v27 = (uint64_t)v112;
    goto LABEL_9;
  }
  *(_QWORD *)&v113 = v33;
  *((_QWORD *)&v113 + 1) = v32;
  *(_QWORD *)&v114 = v35;
  *((_QWORD *)&v114 + 1) = v34;
  v115 = v36;
  LOBYTE(v116) = v37 & 1;
  v117 = v38;
  v118 = v39;
  v119 = v40;
  v43 = v27;
  sub_1BA7643E8(v24, v23, v26, v25, v28, v27, v29, v30, v31, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  sub_1BA5E7FF4(v24);
  sub_1BA6E6C54(v29, v30, v31);
  v100 = _s8NewsFeed23FormatPreviewParametersV2eeoiySbAC_ACtFZ_0((uint64_t)&v120, (uint64_t)&v113);
  v44 = v124;
  v45 = v125;
  v46 = v126;
  sub_1BA5E800C(v120);
  sub_1BA6E6CC4(v44, v45, v46);
  sub_1BA7643E8(v24, v101, v102, v103, v104, v43, v29, v30, v31, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  if (!v100)
    return 0;
LABEL_11:
  v48 = *(_QWORD *)(a1 + 88);
  v47 = *(_QWORD *)(a1 + 96);
  v50 = *(_QWORD *)(a1 + 104);
  v49 = *(_QWORD *)(a1 + 112);
  v52 = *(_QWORD *)(a1 + 120);
  v51 = *(_QWORD *)(a1 + 128);
  v53 = *(_QWORD *)(a1 + 136);
  v54 = *(unsigned __int8 *)(a1 + 144);
  v55 = *(_QWORD *)(a2 + 88);
  v56 = *(_QWORD *)(a2 + 96);
  v57 = *(_QWORD *)(a2 + 104);
  v58 = *(_QWORD *)(a2 + 112);
  v59 = *(_QWORD *)(a2 + 120);
  v60 = *(_QWORD *)(a2 + 128);
  v61 = *(_QWORD *)(a2 + 136);
  v62 = *(unsigned __int8 *)(a2 + 144);
  if (v54 == 255)
  {
    if (v62 == 255)
      goto LABEL_16;
LABEL_20:
    *(_QWORD *)&v120 = v48;
    *((_QWORD *)&v120 + 1) = v47;
    *(_QWORD *)&v121 = v50;
    *((_QWORD *)&v121 + 1) = v49;
    v122 = v52;
    v123 = v51;
    v124 = v53;
    LOBYTE(v125) = v54;
    v126 = v55;
    v127 = v56;
    v128 = v57;
    v129 = v58;
    v130 = v59;
    v131 = v60;
    v132 = v61;
    LOBYTE(v133) = v62;
    sub_1BA764498(v55, v56, v57, v58, v59, v60, v61, v62);
    sub_1BB1953AC((uint64_t)&v120);
    return 0;
  }
  *(_QWORD *)&v120 = *(_QWORD *)(a1 + 88);
  *((_QWORD *)&v120 + 1) = v47;
  *(_QWORD *)&v121 = v50;
  *((_QWORD *)&v121 + 1) = v49;
  v122 = v52;
  v123 = v51;
  v124 = v53;
  LOBYTE(v125) = v54;
  if (v62 == 255)
  {
    v107 = v55;
    v108 = v56;
    v109 = (_BYTE *)v57;
    v110 = v58;
    v111 = (_BYTE *)v59;
    v112 = (_BYTE *)v60;
    v71 = v53;
    v72 = v61;
    sub_1BA7756B8(v48, v47, v50, v49, v52, v51, v53, v54);
    sub_1BA7756B8(v48, v47, v50, v49, v52, v51, v71, v54);
    sub_1BA763860(v48, v47, v50, v49, v52, v51, v71, v54);
    v55 = v107;
    v56 = v108;
    v57 = (uint64_t)v109;
    v58 = v110;
    v59 = (uint64_t)v111;
    v60 = (uint64_t)v112;
    v61 = v72;
    v53 = v71;
    goto LABEL_20;
  }
  *(_QWORD *)&v113 = v55;
  *((_QWORD *)&v113 + 1) = v56;
  *(_QWORD *)&v114 = v57;
  *((_QWORD *)&v114 + 1) = v58;
  v115 = v59;
  v116 = v60;
  v117 = v61;
  LOBYTE(v118) = v62;
  v63 = v53;
  sub_1BA764498(v48, v47, v50, v49, v52, v51, v53, v54);
  sub_1BA7756B8(v48, v47, v50, v49, v52, v51, v63, v54);
  LODWORD(v104) = _s8NewsFeed19FormatCellSelectionO2eeoiySbAC_ACtFZ_0((uint64_t)&v120, (uint64_t)&v113);
  sub_1BA763860(v120, *((uint64_t *)&v120 + 1), v121, *((uint64_t *)&v121 + 1), v122, v123, v124, v125);
  sub_1BA7644AC(v48, v47, v50, v49, v52, v51, v63, v54);
  if ((v104 & 1) == 0)
    return 0;
LABEL_16:
  v64 = (int *)type metadata accessor for FormatItemNodeStyle.Selector(0);
  v65 = (uint64_t)v109;
  sub_1BA4C2DD8(a1 + v64[7], (uint64_t)v109, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  v66 = (uint64_t)v112;
  sub_1BA4C2DD8(a2 + v64[7], (uint64_t)v112, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  v67 = (uint64_t)v111;
  v68 = (uint64_t)&v111[*(int *)(v107 + 48)];
  sub_1BA4C2DD8(v65, (uint64_t)v111, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  sub_1BA4C2DD8(v66, v68, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
  v70 = v110;
  if (v69(v67, 1, v110) != 1)
  {
    v73 = (uint64_t)v106;
    sub_1BA4C2DD8(v67, (uint64_t)v106, (uint64_t (*)(_QWORD))sub_1BA7754CC);
    if (v69(v68, 1, v70) != 1)
    {
      v74 = (uint64_t)v105;
      sub_1BA5193C4(v68, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      v75 = static FormatItemNodeAction.== infix(_:_:)(v73, v74);
      sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      sub_1BA4A2E80((uint64_t)v112, (uint64_t (*)(_QWORD))sub_1BA7754CC);
      sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))sub_1BA7754CC);
      sub_1BA4A2E80(v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))sub_1BA7754CC);
      if ((v75 & 1) == 0)
        return 0;
      goto LABEL_27;
    }
    sub_1BA4A2E80((uint64_t)v112, (uint64_t (*)(_QWORD))sub_1BA7754CC);
    sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))sub_1BA7754CC);
    sub_1BA4A2E80(v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
LABEL_23:
    sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))sub_1BB19534C);
    return 0;
  }
  sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  if (v69(v68, 1, v70) != 1)
    goto LABEL_23;
  sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))sub_1BA7754CC);
LABEL_27:
  v76 = v64[8];
  v77 = *(unsigned __int8 *)(a1 + v76);
  v78 = *(unsigned __int8 *)(a2 + v76);
  if (v77 == 2)
  {
    if (v78 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v79 = (v77 & 1) == 0;
    if (v78 == 2 || ((v79 ^ v78) & 1) == 0)
      return result;
  }
  v80 = v64[9];
  v81 = *(unsigned __int8 *)(a1 + v80);
  v82 = *(unsigned __int8 *)(a2 + v80);
  if (v81 == 2)
  {
    if (v82 != 2)
      return 0;
LABEL_37:
    v84 = v64[10];
    v85 = *(_QWORD *)(a1 + v84);
    v86 = *(_QWORD *)(a1 + v84 + 8);
    v87 = (unint64_t *)(a2 + v84);
    v88 = *v87;
    v89 = v87[1];
    if (v85 == 3)
    {
      if (v88 == 3)
      {
LABEL_44:
        v91 = v64[11];
        v92 = (__int128 *)(a1 + v91);
        v93 = *(_WORD *)(a1 + v91 + 32);
        v94 = (__int128 *)(a2 + v91);
        v95 = *(_WORD *)(a2 + v91 + 32);
        if ((v93 & 0xFF00) != 0x400)
        {
          v96 = *v94;
          v97 = v94[1];
          v98 = v92[1];
          v120 = *v92;
          v121 = v98;
          LOWORD(v122) = v93;
          if ((v95 & 0xFF00) == 0x400)
            return 0;
          v113 = v96;
          v114 = v97;
          LOWORD(v115) = v95 & 0xFF01;
          return (_s8NewsFeed21FormatFocusParametersV2eeoiySbAC_ACtFZ_0((uint64_t)&v120, (uint64_t)&v113) & 1) != 0;
        }
        return (v95 & 0xFF00) == 0x400;
      }
    }
    else
    {
      *(_QWORD *)&v120 = v85;
      *((_QWORD *)&v120 + 1) = v86;
      if (v88 != 3)
      {
        *(_QWORD *)&v113 = v88;
        *((_QWORD *)&v113 + 1) = v89;
        sub_1BA77567C(v85);
        sub_1BAC68784(v85);
        v90 = _s8NewsFeed30FormatItemNodeSwipeActionStyleO2eeoiySbAC_ACtFZ_0((unint64_t *)&v120, (unint64_t *)&v113);
        sub_1BAC687B4(v120);
        sub_1BA7644C0(v85);
        if (!v90)
          return 0;
        goto LABEL_44;
      }
      sub_1BAC68784(v85);
      sub_1BAC68784(v85);
      sub_1BAC687B4(v85);
    }
    sub_1BA77567C(v88);
    sub_1BA7644C0(v85);
    sub_1BA7644C0(v88);
    return 0;
  }
  result = 0;
  v83 = (v81 & 1) == 0;
  if (v82 != 2 && ((v83 ^ v82) & 1) != 0)
    goto LABEL_37;
  return result;
}

uint64_t sub_1BB193924(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BC998, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB193960(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BA4A2870(&qword_1ED3C8418, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
  result = sub_1BA4A2870(&qword_1ED3A6620, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BB1939BC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3C8418, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
  a1[2] = sub_1BA4A2870(&qword_1ED3A6620, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
  result = sub_1BA4A2870(&qword_1EF2BC9A0, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB193A34(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BC9A8, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle.Selector);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB193A70(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870((unint64_t *)&unk_1ED3C8350, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle.Selector);
  a1[2] = sub_1BA4A2870(&qword_1ED3C8348, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle.Selector);
  result = sub_1BA4A2870(&qword_1EF2BC9B0, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle.Selector);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB193AE8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB193B34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB193B8C()
{
  return type metadata accessor for FormatItemNodeStyle(0);
}

uint64_t method lookup function for FormatItemNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatItemNodeStyle.__allocating_init(identifier:class:previewParameters:cellSelection:cellAction:clipsToBounds:ignoresSmartInvertColors:swipeActionStyle:selectors:focusParameters:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t initializeBufferWithCopyOfBuffer for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  unsigned int v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  int *v51;
  int *v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  v6 = a3;
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = a2 + 2;
  v9 = *((unsigned __int8 *)a2 + 80);
  swift_bridgeObjectRetain();
  if ((v9 & 0xFE) == 0x7E)
  {
    v10 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v10;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v11 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *v8;
    *(_OWORD *)(a1 + 32) = v11;
  }
  else
  {
    v13 = *(_QWORD *)v8;
    if ((~v13 & 0xF000000000000007) != 0)
      swift_retain();
    *(_QWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    if (v9 <= 0xFD)
    {
      v14 = a2[8];
      v15 = a2[9];
      sub_1BA6F2B04(v14, v15, v9);
      *(_QWORD *)(a1 + 64) = v14;
      *(_QWORD *)(a1 + 72) = v15;
      *(_BYTE *)(a1 + 80) = v9;
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    }
  }
  v16 = *((unsigned __int8 *)a2 + 144);
  if (v16 == 255)
  {
    v24 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 104) = v24;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)((char *)a2 + 129);
  }
  else
  {
    v17 = a2[11];
    v18 = a2[12];
    v19 = a2[13];
    v20 = a2[14];
    v51 = v6;
    v21 = a2[15];
    v22 = a2[16];
    v23 = a2[17];
    sub_1BA7756B8(v17, v18, v19, v20, v21, v22, v23, v16);
    *(_QWORD *)(a1 + 88) = v17;
    *(_QWORD *)(a1 + 96) = v18;
    *(_QWORD *)(a1 + 104) = v19;
    *(_QWORD *)(a1 + 112) = v20;
    *(_QWORD *)(a1 + 120) = v21;
    *(_QWORD *)(a1 + 128) = v22;
    v6 = v51;
    *(_QWORD *)(a1 + 136) = v23;
    *(_BYTE *)(a1 + 144) = v16;
  }
  v25 = v6[7];
  v26 = (uint64_t *)(a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for FormatItemNodeAction();
  v29 = *(_QWORD *)(v28 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for FormatCommandOpenURL();
      v37 = swift_getEnumCaseMultiPayload();
      if (v37 == 2 || v37 == 1)
      {
        v38 = *((_QWORD *)v27 + 1);
        *v26 = *(_QWORD *)v27;
        v26[1] = v38;
        v26[2] = *((_QWORD *)v27 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        v39 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v26, v27, v39);
        v40 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v26 + *(int *)(v40 + 20)) = *(_QWORD *)&v27[*(int *)(v40 + 20)];
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v26, v27, *(_QWORD *)(v29 + 64));
LABEL_25:
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        goto LABEL_26;
      }
      v32 = *(_QWORD *)v27;
      v33 = *((_QWORD *)v27 + 1);
      v34 = *((_QWORD *)v27 + 2);
      v52 = v6;
      v35 = v27[25];
      v36 = v27[24];
      sub_1BB193F74(v32, v33, v34, v36, v35, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
      *v26 = v32;
      v26[1] = v33;
      v26[2] = v34;
      *((_BYTE *)v26 + 24) = v36;
      *((_BYTE *)v26 + 25) = v35;
      v6 = v52;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  sub_1BA7754CC(0);
  memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_26:
  v41 = v6[9];
  *(_BYTE *)(a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  *(_BYTE *)(a1 + v41) = *((_BYTE *)a2 + v41);
  v42 = v6[10];
  v43 = a1 + v42;
  v44 = (uint64_t)a2 + v42;
  if (*(_QWORD *)v44 < 4uLL)
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
  }
  else
  {
    v45 = *(_QWORD *)(v44 + 8);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_QWORD *)(v43 + 8) = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v46 = v6[11];
  v47 = a1 + v46;
  v48 = (uint64_t)a2 + v46;
  v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(_WORD *)(v47 + 32) = *(_WORD *)(v48 + 32);
  return a1;
}

uint64_t sub_1BB193F74(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t assignWithCopy for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  _OWORD *v7;
  int v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unsigned int v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _OWORD *v35;
  __int128 *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t *, uint64_t, uint64_t);
  int v72;
  int v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  size_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  char v87;
  unsigned int v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 *v100;
  __int128 v101;
  __int128 v102;
  uint64_t v104;
  uint64_t v105;
  int *v106;
  int *v107;
  int *v108;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 16);
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 80) & 0xFE;
  if ((*(_BYTE *)(a1 + 80) & 0xFE) == 0x7E)
  {
    if (v8 == 126)
    {
      *v6 = *v7;
      v9 = *(_OWORD *)(a2 + 32);
      v10 = *(_OWORD *)(a2 + 48);
      v11 = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_OWORD *)(a1 + 48) = v10;
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 32) = v9;
      goto LABEL_24;
    }
    v15 = *(_QWORD *)v7;
    if ((~v15 & 0xF000000000000007) != 0)
      swift_retain();
    *(_QWORD *)(a1 + 16) = v15;
    v16 = *(_OWORD *)(a2 + 24);
    v17 = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v17;
    *(_OWORD *)(a1 + 24) = v16;
    v18 = *(unsigned __int8 *)(a2 + 80);
    if (v18 > 0xFD)
    {
      v19 = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = v19;
      goto LABEL_24;
    }
    goto LABEL_20;
  }
  if (v8 == 126)
  {
    sub_1BB194768((_QWORD *)(a1 + 16));
    *v6 = *v7;
    v13 = *(_OWORD *)(a2 + 48);
    v12 = *(_OWORD *)(a2 + 64);
    v14 = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v13;
    *(_OWORD *)(a1 + 64) = v12;
    *(_OWORD *)(a1 + 32) = v14;
    goto LABEL_24;
  }
  v20 = *(_QWORD *)v7;
  v21 = *(_QWORD *)v7 & 0xF000000000000007;
  if ((~*(_QWORD *)v6 & 0xF000000000000007) == 0)
  {
    if (v21 != 0xF000000000000007)
    {
      *(_QWORD *)v6 = v20;
      swift_retain();
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  if (v21 == 0xF000000000000007)
  {
    sub_1BAA5FA24(a1 + 16);
    v20 = *(_QWORD *)v7;
LABEL_15:
    *(_QWORD *)v6 = v20;
    goto LABEL_17;
  }
  *(_QWORD *)v6 = v20;
  swift_retain();
  swift_release();
LABEL_17:
  v22 = *(_OWORD *)(a2 + 24);
  v23 = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v23;
  *(_OWORD *)(a1 + 24) = v22;
  v24 = (_OWORD *)(a1 + 64);
  v25 = (_OWORD *)(a2 + 64);
  v18 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) <= 0xFDu)
  {
    if (v18 <= 0xFD)
    {
      v30 = *(_QWORD *)(a2 + 64);
      v31 = *(_QWORD *)(a2 + 72);
      sub_1BA6F2B04(v30, v31, *(_BYTE *)(a2 + 80));
      v32 = *(_QWORD *)(a1 + 64);
      v33 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v30;
      *(_QWORD *)(a1 + 72) = v31;
      v34 = *(_BYTE *)(a1 + 80);
      *(_BYTE *)(a1 + 80) = v18;
      sub_1BA6F2B88(v32, v33, v34);
    }
    else
    {
      sub_1BA9F0244(a1 + 64);
      v29 = *(_BYTE *)(a2 + 80);
      *v24 = *v25;
      *(_BYTE *)(a1 + 80) = v29;
    }
    goto LABEL_24;
  }
  if (v18 > 0xFD)
  {
    v26 = *v25;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *v24 = v26;
    goto LABEL_24;
  }
LABEL_20:
  v27 = *(_QWORD *)(a2 + 64);
  v28 = *(_QWORD *)(a2 + 72);
  sub_1BA6F2B04(v27, v28, v18);
  *(_QWORD *)(a1 + 64) = v27;
  *(_QWORD *)(a1 + 72) = v28;
  *(_BYTE *)(a1 + 80) = v18;
LABEL_24:
  v35 = (_OWORD *)(a1 + 88);
  v36 = (__int128 *)(a2 + 88);
  v37 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 255)
  {
    if (v37 == 255)
    {
      v63 = *v36;
      v64 = *(_OWORD *)(a2 + 104);
      v65 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 104) = v64;
      *(_OWORD *)(a1 + 120) = v65;
      *v35 = v63;
    }
    else
    {
      v53 = *(_QWORD *)(a2 + 88);
      v54 = *(_QWORD *)(a2 + 96);
      v55 = *(_QWORD *)(a2 + 104);
      v56 = *(_QWORD *)(a2 + 112);
      v107 = a3;
      v57 = *(_QWORD *)(a2 + 120);
      v58 = *(_QWORD *)(a2 + 128);
      v59 = *(_QWORD *)(a2 + 136);
      sub_1BA7756B8(v53, v54, v55, v56, v57, v58, v59, v37);
      *(_QWORD *)(a1 + 88) = v53;
      *(_QWORD *)(a1 + 96) = v54;
      *(_QWORD *)(a1 + 104) = v55;
      *(_QWORD *)(a1 + 112) = v56;
      *(_QWORD *)(a1 + 120) = v57;
      *(_QWORD *)(a1 + 128) = v58;
      a3 = v107;
      *(_QWORD *)(a1 + 136) = v59;
      *(_BYTE *)(a1 + 144) = v37;
    }
  }
  else if (v37 == 255)
  {
    sub_1BB19479C(a1 + 88);
    v61 = *(_OWORD *)(a2 + 104);
    v60 = *(_OWORD *)(a2 + 120);
    v62 = *v36;
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 104) = v61;
    *(_OWORD *)(a1 + 120) = v60;
    *v35 = v62;
  }
  else
  {
    v38 = *(_QWORD *)(a2 + 88);
    v39 = *(_QWORD *)(a2 + 96);
    v40 = *(_QWORD *)(a2 + 104);
    v41 = *(_QWORD *)(a2 + 112);
    v106 = a3;
    v42 = *(_QWORD *)(a2 + 120);
    v43 = *(_QWORD *)(a2 + 128);
    v44 = *(_QWORD *)(a2 + 136);
    sub_1BA7756B8(v38, v39, v40, v41, v42, v43, v44, v37);
    v45 = *(_QWORD *)(a1 + 88);
    v46 = *(_QWORD *)(a1 + 96);
    v47 = *(_QWORD *)(a1 + 104);
    v48 = *(_QWORD *)(a1 + 112);
    v49 = *(_QWORD *)(a1 + 120);
    v50 = *(_QWORD *)(a1 + 128);
    v51 = *(_QWORD *)(a1 + 136);
    *(_QWORD *)(a1 + 88) = v38;
    *(_QWORD *)(a1 + 96) = v39;
    *(_QWORD *)(a1 + 104) = v40;
    *(_QWORD *)(a1 + 112) = v41;
    *(_QWORD *)(a1 + 120) = v42;
    *(_QWORD *)(a1 + 128) = v43;
    a3 = v106;
    *(_QWORD *)(a1 + 136) = v44;
    v52 = *(_BYTE *)(a1 + 144);
    *(_BYTE *)(a1 + 144) = v37;
    sub_1BA763860(v45, v46, v47, v48, v49, v50, v51, v52);
  }
  v66 = a3[7];
  v67 = (uint64_t *)(a1 + v66);
  v68 = (char *)(a2 + v66);
  v69 = type metadata accessor for FormatItemNodeAction();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v70 + 48);
  v72 = v71(v67, 1, v69);
  v73 = v71((uint64_t *)v68, 1, v69);
  if (v72)
  {
    if (!v73)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        type metadata accessor for FormatCommandOpenURL();
        v89 = swift_getEnumCaseMultiPayload();
        if (v89 == 2 || v89 == 1)
        {
          *v67 = *(_QWORD *)v68;
          v67[1] = *((_QWORD *)v68 + 1);
          v67[2] = *((_QWORD *)v68 + 2);
          swift_bridgeObjectRetain();
        }
        else
        {
          v91 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v67, v68, v91);
          v92 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v67 + *(int *)(v92 + 20)) = *(_QWORD *)&v68[*(int *)(v92 + 20)];
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v67, v68, *(_QWORD *)(v70 + 64));
LABEL_55:
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
          goto LABEL_56;
        }
        v75 = *(_QWORD *)v68;
        v76 = *((_QWORD *)v68 + 1);
        v77 = *((_QWORD *)v68 + 2);
        v108 = a3;
        v78 = v68[25];
        v79 = v68[24];
        sub_1BB193F74(v75, v76, v77, v79, v78, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
        *v67 = v75;
        v67[1] = v76;
        v67[2] = v77;
        *((_BYTE *)v67 + 24) = v79;
        *((_BYTE *)v67 + 25) = v78;
        a3 = v108;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_55;
    }
    goto LABEL_38;
  }
  if (v73)
  {
    sub_1BA4A2E80((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
LABEL_38:
    sub_1BA7754CC(0);
    v81 = *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64);
    goto LABEL_39;
  }
  if (a1 == a2)
    goto LABEL_56;
  sub_1BA4A2E80((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
  v82 = swift_getEnumCaseMultiPayload();
  if (v82 != 1)
  {
    if (!v82)
    {
      v83 = *(_QWORD *)v68;
      v84 = *((_QWORD *)v68 + 1);
      v85 = *((_QWORD *)v68 + 2);
      v86 = a3;
      v87 = v68[25];
      v88 = v68[24];
      sub_1BB193F74(v83, v84, v85, v88, v87, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
      *v67 = v83;
      v67[1] = v84;
      v67[2] = v85;
      *((_BYTE *)v67 + 24) = v88;
      *((_BYTE *)v67 + 25) = v87;
      a3 = v86;
      swift_storeEnumTagMultiPayload();
      goto LABEL_56;
    }
    v81 = *(_QWORD *)(v70 + 64);
LABEL_39:
    memcpy(v67, v68, v81);
    goto LABEL_56;
  }
  type metadata accessor for FormatCommandOpenURL();
  v90 = swift_getEnumCaseMultiPayload();
  if (v90 == 2 || v90 == 1)
  {
    *v67 = *(_QWORD *)v68;
    v67[1] = *((_QWORD *)v68 + 1);
    v67[2] = *((_QWORD *)v68 + 2);
    swift_bridgeObjectRetain();
  }
  else
  {
    v104 = sub_1BB86C67C();
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v67, v68, v104);
    v105 = type metadata accessor for FormatAbsoluteURL();
    *(uint64_t *)((char *)v67 + *(int *)(v105 + 20)) = *(_QWORD *)&v68[*(int *)(v105 + 20)];
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
LABEL_56:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v93 = a3[10];
  v94 = (unint64_t *)(a1 + v93);
  v95 = a2 + v93;
  v96 = *(_QWORD *)(a1 + v93);
  v97 = *(_QWORD *)(a2 + v93);
  if (v96 == 3)
  {
    if (v97 >= 4)
      goto LABEL_63;
    goto LABEL_66;
  }
  if (v97 == 3)
  {
    sub_1BB194804((unint64_t *)(a1 + v93));
    goto LABEL_66;
  }
  if (v96 >= 3)
  {
    if (v97 >= 3)
    {
      *v94 = v97;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v94[1] = *(_QWORD *)(v95 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    sub_1BB1947D0(a1 + v93);
    goto LABEL_66;
  }
  if (v97 < 3)
  {
LABEL_66:
    *(_OWORD *)v94 = *(_OWORD *)v95;
    goto LABEL_67;
  }
LABEL_63:
  *v94 = v97;
  v94[1] = *(_QWORD *)(v95 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_67:
  v98 = a3[11];
  v99 = a1 + v98;
  v100 = (__int128 *)(a2 + v98);
  v101 = *v100;
  v102 = v100[1];
  *(_WORD *)(v99 + 32) = *((_WORD *)v100 + 16);
  *(_OWORD *)v99 = v101;
  *(_OWORD *)(v99 + 16) = v102;
  return a1;
}

_QWORD *sub_1BB194768(_QWORD *a1)
{
  destroy for FormatPreviewParameters(a1);
  return a1;
}

uint64_t sub_1BB19479C(uint64_t a1)
{
  destroy for FormatCellSelection(a1);
  return a1;
}

uint64_t sub_1BB1947D0(uint64_t a1)
{
  destroy for FormatSizeEquation();
  return a1;
}

unint64_t *sub_1BB194804(unint64_t *a1)
{
  destroy for FormatItemNodeSwipeActionStyle(a1);
  return a1;
}

uint64_t initializeWithTake for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = a3[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  v11 = type metadata accessor for FormatItemNodeAction();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BA7754CC(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = type metadata accessor for FormatCommandOpenURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v9, v10, v15);
        v16 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v9[*(int *)(v16 + 20)] = *(_QWORD *)&v10[*(int *)(v16 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_WORD *)(v19 + 32) = *(_WORD *)(v20 + 32);
  return a1;
}

uint64_t sub_1BB194A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA7754CC(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1BB194A88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA7754CC(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

_QWORD *sub_1BB194AFC(double *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  char *v22;
  void (*v23)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int16 v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  double *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t inited;
  _BYTE v91[40];
  uint64_t v92;
  __int128 v93;
  char v94;
  _OWORD v95[2];
  uint64_t v96;
  _OWORD v97[2];
  uint64_t v98;

  v86 = a1;
  sub_1BA7754CC(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB898AA0;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v6);
  v8 = v7;
  sub_1BA8C88C8(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 32) & ~v12;
  v88 = v11;
  v89 = v9;
  v83 = v12 | 7;
  v84 = v8;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  v15 = (_QWORD *)(v14 + v13);
  v85 = v5;
  if (a2)
  {
    v16 = *(_QWORD *)(a2 + 40);
    v82 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(_QWORD *)v91 = sub_1BB1918D0();
    memset(&v91[8], 0, 32);
    v92 = 0;
    v93 = xmmword_1BB8F4200;
    v17 = swift_allocObject();
    sub_1BA9F1094((uint64_t)v91, v17 + 16);
    v18 = sub_1BA9F10D0;
  }
  else
  {
    v17 = 0;
    v82 = 0;
    v16 = 0xE000000000000000;
    v18 = sub_1BB739F50;
  }
  v19 = type metadata accessor for FormatInspectionItem(0);
  v20 = (uint64_t (**)())((char *)v15 + *(int *)(v19 + 24));
  *v20 = v18;
  v20[1] = (uint64_t (*)())v17;
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
  *(_QWORD *)(v14 + v13) = v82;
  v15[2] = 0;
  v15[3] = 0;
  v15[1] = v16;
  v22 = (char *)v15 + *(int *)(v19 + 28);
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = -1;
  v23 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v23(v15, 0, 1, v19);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v14, v95);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v24 = inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v24 + 64) = &off_1E72D2F60;
  v25 = swift_allocObject();
  *(_QWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v25 + 48) = v96;
  v26 = v95[1];
  *(_OWORD *)(v25 + 16) = v95[0];
  *(_OWORD *)(v25 + 32) = v26;
  v27 = v88;
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BB87D7A0;
  v29 = (_QWORD *)(v28 + v13);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1835365449, 0xE400000000000000, v29);
  v23(v29, 0, 1, v19);
  if (a2)
  {
    sub_1BAAF6B38(0x6F74207370696C43, 0xEF73646E756F4220, *(_BYTE *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds), (_QWORD *)((char *)v29 + v27));
    v23((_QWORD *)((char *)v29 + v27), 0, 1, v19);
    v30 = (uint64_t)v85;
    sub_1BA4C2DD8(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t)v85, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  }
  else
  {
    sub_1BAAF6B38(0x6F74207370696C43, 0xEF73646E756F4220, 2, (_QWORD *)((char *)v29 + v27));
    v23((_QWORD *)((char *)v29 + v27), 0, 1, v19);
    v31 = type metadata accessor for FormatItemNodeAction();
    v30 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v85, 1, 1, v31);
  }
  sub_1BAAFCB14(0x746341206C6C6543, 0xEB000000006E6F69, v30, (_QWORD *)((char *)v29 + 2 * v27));
  v23((_QWORD *)((char *)v29 + 2 * v27), 0, 1, v19);
  if (a2)
    v32 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  else
    v32 = 2;
  v33 = (_QWORD *)((char *)v29 + 3 * v88);
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v32, v33);
  v23(v33, 0, 1, v19);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v28, v97);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v34 = inited;
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v34 + 104) = &off_1E72D2F60;
  v35 = swift_allocObject();
  *(_QWORD *)(v34 + 72) = v35;
  *(_QWORD *)(v35 + 48) = v98;
  v36 = v97[1];
  *(_OWORD *)(v35 + 16) = v97[0];
  *(_OWORD *)(v35 + 32) = v36;
  v87 = a2;
  if (a2)
  {
    v37 = *(_QWORD *)(a2 + 48);
    v38 = *(_QWORD *)(a2 + 56);
    v39 = *(_QWORD *)(a2 + 64);
    v40 = *(_QWORD *)(a2 + 72);
    v41 = *(_QWORD *)(a2 + 80);
    v42 = *(_QWORD *)(a2 + 88);
    v43 = *(_QWORD *)(a2 + 96);
    v44 = *(_QWORD *)(a2 + 104);
    LODWORD(v89) = *(unsigned __int8 *)(a2 + 112);
    v45 = v37;
    v46 = v38;
    v47 = v39;
    v48 = v40;
    v49 = v41;
    v50 = v42;
    v51 = v43;
    a2 = v44;
    sub_1BA7643E8(v37, v38, v39, v40, v41, v42, v43, v44, v89, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  }
  else
  {
    v45 = 0;
    v46 = 0;
    v47 = 0;
    v48 = 0;
    v49 = 0;
    v50 = 0;
    v51 = 0;
    LODWORD(v89) = 126;
  }
  *(_QWORD *)v91 = v45;
  *(_QWORD *)&v91[8] = v46;
  *(_QWORD *)&v91[16] = v47;
  *(_QWORD *)&v91[24] = v48;
  *(_QWORD *)&v91[32] = v49;
  v92 = v50;
  *(_QWORD *)&v93 = v51;
  *((_QWORD *)&v93 + 1) = a2;
  v52 = v89;
  v94 = v89;
  v53 = sub_1BAF99268(v86, (uint64_t)v91);
  v54 = v45;
  v55 = v53;
  sub_1BA7643E8(v54, v46, v47, v48, v49, v50, v51, a2, v52, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  v56 = inited;
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(v56 + 144) = &off_1E7335C38;
  *(_QWORD *)(v56 + 112) = v55;
  if (v87)
  {
    v57 = *(_QWORD *)(v87 + 120);
    v58 = *(_QWORD *)(v87 + 128);
    v59 = *(_QWORD *)(v87 + 136);
    v60 = *(_QWORD *)(v87 + 144);
    v61 = *(_QWORD *)(v87 + 152);
    v62 = *(_QWORD *)(v87 + 160);
    v63 = *(_QWORD *)(v87 + 168);
    v64 = *(_BYTE *)(v87 + 176);
    sub_1BA764498(v57, v58, v59, v60, v61, v62, v63, v64);
  }
  else
  {
    v57 = 0;
    v58 = 0;
    v59 = 0;
    v60 = 0;
    v61 = 0;
    v62 = 0;
    v63 = 0;
    v64 = -1;
  }
  v65 = (_QWORD *)inited;
  v89 = inited + 32;
  *(_QWORD *)v91 = v57;
  *(_QWORD *)&v91[8] = v58;
  *(_QWORD *)&v91[16] = v59;
  *(_QWORD *)&v91[24] = v60;
  *(_QWORD *)&v91[32] = v61;
  v92 = v62;
  *(_QWORD *)&v93 = v63;
  BYTE8(v93) = v64;
  v66 = sub_1BB7B14FC((uint64_t)v91);
  v67 = v57;
  v68 = v66;
  sub_1BA7644AC(v67, v58, v59, v60, v61, v62, v63, v64);
  v65[22] = &type metadata for FormatInspection;
  v65[23] = &off_1E7335C38;
  v65[19] = v68;
  v69 = v87;
  if (v87)
  {
    v71 = *(_QWORD *)(v87 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    v70 = *(_QWORD *)(v87 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    sub_1BA77567C(v71);
  }
  else
  {
    v70 = 0;
    v71 = 3;
  }
  *(_QWORD *)v91 = v71;
  *(_QWORD *)&v91[8] = v70;
  v72 = sub_1BAF56978((uint64_t *)v91);
  sub_1BA7644C0(v71);
  v73 = inited;
  *(_QWORD *)(inited + 216) = &type metadata for FormatInspection;
  *(_QWORD *)(v73 + 224) = &off_1E7335C38;
  *(_QWORD *)(v73 + 192) = v72;
  if (v69)
  {
    v74 = *(_OWORD *)(v69 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
    v75 = *(_OWORD *)(v69 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 16);
    v76 = *(_WORD *)(v69 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  }
  else
  {
    v74 = 0uLL;
    v76 = 1024;
    v75 = 0uLL;
  }
  *(_OWORD *)v91 = v74;
  *(_OWORD *)&v91[16] = v75;
  *(_WORD *)&v91[32] = v76;
  v77 = sub_1BB1FD354((uint64_t *)v91);
  v78 = inited;
  *(_QWORD *)(inited + 256) = &type metadata for FormatInspection;
  *(_QWORD *)(v78 + 264) = &off_1E7335C38;
  *(_QWORD *)(v78 + 232) = v77;
  v79 = sub_1BB6DF010(v78);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v79;
}

uint64_t sub_1BB1952E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB19531C()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

void sub_1BB19534C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B59F8)
  {
    sub_1BA7754CC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B59F8);
  }
}

uint64_t sub_1BB1953AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 120);
  sub_1BA7644AC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  sub_1BA7644AC(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatUploadConfirmSection()
{
  return &type metadata for DebugFormatUploadConfirmSection;
}

uint64_t sub_1BB19544C()
{
  uint64_t v0;
  unsigned __int8 v2;

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB195E5C();
  v0 = swift_allocObject();
  if (v2 - 1 > 1)
  {
    *(_OWORD *)(v0 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v0 + 32) = 0x746567726154;
    *(_QWORD *)(v0 + 40) = 0xE600000000000000;
    *(_QWORD *)(v0 + 72) = &type metadata for DebugFormatUploadTarget;
    *(_QWORD *)(v0 + 80) = sub_1BB195EB0();
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    *(_BYTE *)(v0 + 88) = 0;
  }
  else
  {
    *(_OWORD *)(v0 + 16) = xmmword_1BB87A390;
    *(_QWORD *)(v0 + 32) = 0x746567726154;
    *(_QWORD *)(v0 + 40) = 0xE600000000000000;
    *(_QWORD *)(v0 + 72) = &type metadata for DebugFormatUploadTarget;
    *(_QWORD *)(v0 + 80) = sub_1BB195EB0();
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    *(_BYTE *)(v0 + 88) = 0;
    *(_QWORD *)(v0 + 96) = 0x6D6E6F7269766E45;
    *(_QWORD *)(v0 + 104) = 0xEB00000000746E65;
    *(_QWORD *)(v0 + 136) = &type metadata for DebugFormatBackendEnvironment;
    *(_QWORD *)(v0 + 144) = sub_1BB195EF4();
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    *(_BYTE *)(v0 + 152) = 0;
  }
  swift_release();
  return 0x64616F6C7055;
}

void sub_1BB195614(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1BB195664()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v27[7];
  char v28;
  uint64_t v29;

  v2 = 0x726564616568;
  swift_bridgeObjectRetain();
  sub_1BA689E44(0x726564616568, v1);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_1BA7114A0();
    v5 = sub_1BB873ABC();
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v8 = sub_1BA9C0430(1uLL, 0x726564616568, v1);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v8, v10, v12, v14);
    swift_bridgeObjectRelease();
    v27[1] = v7;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v5;
  }
  v16 = MEMORY[0x1E0DEE9D8];
  v27[0] = MEMORY[0x1E0DEE9D8];
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_5;
  }
  else
  {
    v17 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
LABEL_5:
      if (v17 >= 1)
      {
        if ((v0 & 0xC000000000000001) != 0)
        {
          v18 = (char *)&loc_1BB19588C
              + dword_1BB195DEC[*(unsigned __int8 *)(*(_QWORD *)(MEMORY[0x1BCCE4630](0, v0) + 16)
                                                   + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role)];
          __asm { BR              X9 }
        }
        __asm { BR              X9 }
      }
      __break(1u);
LABEL_26:
      __break(1u);
      JUMPOUT(0x1BB195DD0);
    }
  }
  swift_bridgeObjectRelease();
  v19 = v27[0];
  if ((v27[0] & 0x8000000000000000) != 0 || (v27[0] & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BB873F30();
    swift_release();
    if (v20)
      goto LABEL_13;
LABEL_23:
    swift_release();
    return v2;
  }
  v20 = *(_QWORD *)(v27[0] + 16);
  if (!v20)
    goto LABEL_23;
LABEL_13:
  v29 = v16;
  sub_1BAC7A404(0, v20 & ~(v20 >> 63), 0);
  if (v20 < 0)
    goto LABEL_26;
  v21 = 0;
  v22 = v29;
  do
  {
    if ((v19 & 0xC000000000000001) != 0)
      v23 = MEMORY[0x1BCCE4630](v21, v19);
    else
      v23 = swift_retain();
    v27[0] = v23;
    v28 = 1;
    v29 = v22;
    v25 = *(_QWORD *)(v22 + 16);
    v24 = *(_QWORD *)(v22 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_1BAC7A404(v24 > 1, v25 + 1, 1);
      v22 = v29;
    }
    ++v21;
    *(_QWORD *)(v22 + 16) = v25 + 1;
    sub_1BA92F644((uint64_t)v27, v22 + (v25 << 6) + 32);
  }
  while (v20 != v21);
  swift_release();
  return v2;
}

void sub_1BB195E5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B1728)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B1728);
  }
}

unint64_t sub_1BB195EB0()
{
  unint64_t result;

  result = qword_1EF2BC9B8;
  if (!qword_1EF2BC9B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatUploadTarget, &type metadata for DebugFormatUploadTarget);
    atomic_store(result, (unint64_t *)&qword_1EF2BC9B8);
  }
  return result;
}

unint64_t sub_1BB195EF4()
{
  unint64_t result;

  result = qword_1EF2BC9C0;
  if (!qword_1EF2BC9C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatBackendEnvironment, &type metadata for DebugFormatBackendEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EF2BC9C0);
  }
  return result;
}

uint64_t sub_1BB195F38()
{
  void *v0;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  objc_msgSend(v0, sel_displayGamut);
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  if (objc_msgSend(v0, sel_horizontalSizeClass))
    v2 = (_QWORD *)0xE700000000000000;
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  if (objc_msgSend(v0, sel_verticalSizeClass))
    v5 = (_QWORD *)0xE700000000000000;
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  objc_msgSend(v0, sel_displayScale);
  sub_1BB872FDC();
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v8);
  sub_1BB872AFC(v9);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v10);
  objc_msgSend(v0, sel_userInterfaceStyle);
  sub_1BB872AFC(v11);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v12);
  return 91;
}

void sub_1BB19625C(char a1)
{
  __asm { BR              X10 }
}

id sub_1BB196280()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
}

id sub_1BB1962A4()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
}

id sub_1BB1962C8()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
}

id sub_1BB1962EC()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.988235294, 0.729411765, 0.0117647059, 1.0);
}

uint64_t SportsEventState.selectors.getter(char a1)
{
  uint64_t v1;

  v1 = sub_1BA862444((uint64_t)*(&off_1E72EC750 + a1));
  swift_arrayDestroy();
  return v1;
}

void *static SportsEventState.allCases.getter()
{
  return &unk_1E72707A0;
}

void sub_1BB19639C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB1963E8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB19644C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB196488()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB1964D8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB196520()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB196584@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s8NewsFeed16SportsEventStateO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1BB1965B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB1965E0 + 4 * byte_1BB8F424C[*v0]))();
}

void sub_1BB1965E0(_QWORD *a1@<X8>)
{
  *a1 = 0x656D61476576696CLL;
  a1[1] = 0xE800000000000000;
}

void sub_1BB1965FC(_QWORD *a1@<X8>)
{
  *a1 = 0x656D614774736F70;
  a1[1] = 0xE800000000000000;
}

void sub_1BB196618(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6E776F6E6B6E75;
  a1[1] = v1;
}

uint64_t sub_1BB196630()
{
  sub_1BB196B0C();
  return sub_1BB872D60();
}

uint64_t sub_1BB19668C()
{
  sub_1BB196B0C();
  return sub_1BB872D0C();
}

void sub_1BB1966D8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72511A0;
}

void sub_1BB1966E8(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB19673C@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB196790 + 4 * byte_1BB8F4254[a1]))(0x656D61476576696CLL);
}

uint64_t sub_1BB196790(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656D61476576696CLL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t SportsEventState.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB196868 + 4 * byte_1BB8F4258[a1]))(0x656D6167657270, 0xE700000000000000);
}

uint64_t sub_1BB196868()
{
  return 0x656D61476576696CLL;
}

uint64_t sub_1BB196890()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1BB1968A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1968D4 + 4 * byte_1BB8F425C[*v0]))(0x656D6167657270, 0xE700000000000000);
}

uint64_t sub_1BB1968D4()
{
  return 0x656D61476576696CLL;
}

uint64_t sub_1BB1968FC()
{
  return 0x6E776F6E6B6E75;
}

uint64_t _s8NewsFeed16SportsEventStateO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1BB19695C()
{
  unint64_t result;

  result = qword_1ED3A5B50;
  if (!qword_1ED3A5B50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEventState, &type metadata for SportsEventState);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B50);
  }
  return result;
}

unint64_t sub_1BB1969A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BC9C8;
  if (!qword_1EF2BC9C8)
  {
    sub_1BB1969EC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BC9C8);
  }
  return result;
}

void sub_1BB1969EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BC9D0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BC9D0);
  }
}

uint64_t storeEnumTagSinglePayload for SportsEventState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB196A8C + 4 * byte_1BB8F4265[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB196AC0 + 4 * byte_1BB8F4260[v4]))();
}

uint64_t sub_1BB196AC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB196AC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB196AD0);
  return result;
}

uint64_t sub_1BB196ADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB196AE4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB196AE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB196AF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEventState()
{
  return &type metadata for SportsEventState;
}

unint64_t sub_1BB196B0C()
{
  unint64_t result;

  result = qword_1EF2BC9D8;
  if (!qword_1EF2BC9D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEventState, &type metadata for SportsEventState);
    atomic_store(result, (unint64_t *)&qword_1EF2BC9D8);
  }
  return result;
}

NewsFeed::FormatURLAnnotator __swiftcall FormatURLAnnotator.init(contentIdentifier:)(NewsFeed::FormatURLAnnotator contentIdentifier)
{
  NewsFeed::FormatURLAnnotator *v1;

  *v1 = contentIdentifier;
  return contentIdentifier;
}

unint64_t sub_1BB196B5C()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB196B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB197214(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BB196BA0()
{
  sub_1BB196CE4();
  return sub_1BB874710();
}

uint64_t sub_1BB196BC8()
{
  sub_1BB196CE4();
  return sub_1BB87471C();
}

uint64_t FormatURLAnnotator.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB196E4C(0, &qword_1EF2BC9E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB196CE4();
  sub_1BB8746C8();
  sub_1BB87411C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BB196CE4()
{
  unint64_t result;

  result = qword_1EF2BC9E8;
  if (!qword_1EF2BC9E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4518, &type metadata for FormatURLAnnotator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC9E8);
  }
  return result;
}

uint64_t FormatURLAnnotator.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BB196E4C(0, &qword_1EF2BC9F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB196CE4();
  sub_1BB87468C();
  if (!v2)
  {
    v10 = sub_1BB87402C();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB196E4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB196CE4();
    v7 = a3(a1, &type metadata for FormatURLAnnotator.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB196EA8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatURLAnnotator.init(from:)(a1, a2);
}

uint64_t sub_1BB196EBC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB196E4C(0, &qword_1EF2BC9E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB196CE4();
  sub_1BB8746C8();
  sub_1BB87411C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t static FormatURLAnnotator.transferAnnotations(fromURL:toURL:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_1BB86C4FC();
  if (v5)
  {
    sub_1BA7EDAF0(a1, v4, v5, a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  }
}

uint64_t getEnumTagSinglePayload for FormatImageBackground(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatURLAnnotator.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB1970E0 + 4 * asc_1BB8F43E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB197100 + 4 * byte_1BB8F43E5[v4]))();
}

_BYTE *sub_1BB1970E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB197100(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB197108(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB197110(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB197118(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB197120(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatURLAnnotator.CodingKeys()
{
  return &type metadata for FormatURLAnnotator.CodingKeys;
}

unint64_t sub_1BB197140()
{
  unint64_t result;

  result = qword_1EF2BC9F8;
  if (!qword_1EF2BC9F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F44F0, &type metadata for FormatURLAnnotator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BC9F8);
  }
  return result;
}

unint64_t sub_1BB197188()
{
  unint64_t result;

  result = qword_1EF2BCA00;
  if (!qword_1EF2BCA00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4460, &type metadata for FormatURLAnnotator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BCA00);
  }
  return result;
}

unint64_t sub_1BB1971D0()
{
  unint64_t result;

  result = qword_1EF2BCA08;
  if (!qword_1EF2BCA08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4488, &type metadata for FormatURLAnnotator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BCA08);
  }
  return result;
}

uint64_t sub_1BB197214(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001BB97C920)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t type metadata accessor for FormatSourceMapCollection()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for FormatSourceMapEntry()
{
  return &type metadata for FormatSourceMapEntry;
}

uint64_t sub_1BB1972C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  char v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  swift_bridgeObjectRetain();
  if (!MEMORY[0x1BCCE37E4](a2, a3))
    return swift_bridgeObjectRelease();
  v20 = v9;
  v21 = a4;
  v14 = 0;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 8);
  while (1)
  {
    v16 = sub_1BB872E80();
    sub_1BB872E38();
    if ((v16 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, a2+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v14, a3);
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_11;
      goto LABEL_5;
    }
    result = sub_1BB873D08();
    if (v20 != 8)
      break;
    v23 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v13, &v23, a3);
    swift_unknownObjectRelease();
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, a3);
    v15(v22, a3, v21);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
    if (!v4)
    {
      ++v14;
      if (v17 != MEMORY[0x1BCCE37E4](a2, a3))
        continue;
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB197494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1BB1972C8(a1, *v3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
}

uint64_t sub_1BB1974B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = a1;
  v40 = a4;
  v43 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_1BB873A2C();
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  v15 = *(_QWORD *)(a2 + 64);
  v35 = a2 + 64;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v37 = a2;
  v34 = v36 - 1;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v20;
      v23 = v21 | (v20 << 6);
      goto LABEL_6;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
    {
      v22 = v20;
      goto LABEL_12;
    }
    v29 = *(_QWORD *)(v35 + 8 * v28);
    if (v29)
      goto LABEL_10;
    v22 = v20 + 2;
    if (v20 + 2 >= v36)
    {
      v22 = v20 + 1;
      goto LABEL_12;
    }
    v29 = *(_QWORD *)(v35 + 8 * v22);
    if (v29)
    {
      v28 = v20 + 2;
      goto LABEL_10;
    }
    v32 = v20 + 3;
    if (v32 < v36)
      break;
LABEL_12:
    v27 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v11, 1, 1, TupleTypeMetadata2);
    v18 = 0;
LABEL_13:
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v14, v11, v42);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, TupleTypeMetadata2) != 1)
    {
      swift_bridgeObjectRelease();
      v30 = v43;
      v31 = v38;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v38, &v14[*(int *)(TupleTypeMetadata2 + 48)], a3);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, a3);
      result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, a3);
      v20 = v22;
      if (!v4)
        continue;
    }
    return swift_release();
  }
  v29 = *(_QWORD *)(v35 + 8 * v32);
  if (v29)
  {
    v28 = v32;
LABEL_10:
    v18 = (v29 - 1) & v29;
    v23 = __clz(__rbit64(v29)) + (v28 << 6);
    v22 = v28;
LABEL_6:
    v24 = *(_QWORD *)(v37 + 56);
    v25 = (_QWORD *)(*(_QWORD *)(v37 + 48) + 16 * v23);
    v26 = v25[1];
    *(_QWORD *)v11 = *v25;
    *((_QWORD *)v11 + 1) = v26;
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], v24 + *(_QWORD *)(v43 + 72) * v23, a3);
    v27 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, TupleTypeMetadata2);
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  while (1)
  {
    v28 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v28 >= v36)
    {
      v22 = v34;
      goto LABEL_12;
    }
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v32;
    if (v29)
      goto LABEL_10;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BB1977F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1BB1974B8(a1, *v3, *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8));
}

uint64_t sub_1BB19781C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v10 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v10;
      v11 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v11;
      v12 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v12;
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      *(_QWORD *)(a1 + 56) = a2[7];
      v13 = a2 + 8;
      v14 = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *v13;
      }
      else
      {
        *(_BYTE *)(a1 + 64) = *(_BYTE *)v13;
        *(_QWORD *)(a1 + 72) = v14;
        swift_bridgeObjectRetain();
      }
      v15 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v15;
      v16 = a2[13];
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = v16;
      v17 = a2[15];
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = v17;
      *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
      v18 = a2[18];
      *(_QWORD *)(a1 + 136) = a2[17];
      *(_QWORD *)(a1 + 144) = v18;
      type metadata accessor for DebugFormatTestCaseResult(0);
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = (char *)&loc_1BB197A24 + 4 * byte_1BB8F4630[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = (void *)a2[3];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = v7;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1BB197FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_11:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 72) >= 3uLL)
      swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = a1 + *(int *)(type metadata accessor for DebugFormatTestCaseResult(0) + 24);
    type metadata accessor for DebugFormatTestCaseResult.Result(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        __swift_destroy_boxed_opaque_existential_1(v2);
        v3 = type metadata accessor for DebugFormatTestCaseLayout();
        v4 = v2 + *(int *)(v3 + 20);
        v5 = sub_1BB86D7A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
        v6 = type metadata accessor for GroupLayoutContext();
        v7 = v4 + *(int *)(v6 + 20);
        v8 = sub_1BB86D660();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        v9 = v4 + *(int *)(v6 + 24);
        if (*(_QWORD *)(v9 + 24) >= 2uLL)
          swift_bridgeObjectRelease();
        v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
        v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
        {
          v12 = sub_1BB8705C4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
        }
        swift_release();
        swift_release();
        v13 = v2 + *(int *)(v3 + 24);
        __swift_destroy_boxed_opaque_existential_1(v13 + 8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = v13 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
        v15 = sub_1BB86D8A0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      case 2u:
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v2 + 72) >= 3uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v2 + 160);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(v2 + 208);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();

        break;
      default:
        return;
    }
  }
}

uint64_t sub_1BB19832C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v8;
    v9 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v9;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v10 = (_OWORD *)(a2 + 64);
    v11 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 <= 2)
    {
      *(_OWORD *)(a1 + 64) = *v10;
    }
    else
    {
      *(_BYTE *)(a1 + 64) = *(_BYTE *)v10;
      *(_QWORD *)(a1 + 72) = v11;
      swift_bridgeObjectRetain();
    }
    v12 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v12;
    v13 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v13;
    v14 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v14;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    v15 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v15;
    type metadata accessor for DebugFormatTestCaseResult(0);
    type metadata accessor for DebugFormatTestCaseResult.Result(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = (char *)&loc_1BB198500 + 4 * byte_1BB8F4638[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BB198A94(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  unint64_t v6;
  char *v7;

  if (a1 != a2)
  {
    sub_1BB1992CC(a1);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v6 = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v6 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      }
      else
      {
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      type metadata accessor for DebugFormatTestCaseResult(0);
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = (char *)&loc_1BB198CC0 + 4 * byte_1BB8F463C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v4 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v4;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = v4;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB1992CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatTestSuiteScopeResult()
{
  uint64_t result;

  result = qword_1EF2BCB20;
  if (!qword_1EF2BCB20)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BB199344(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v58;
  int *v59;
  char *__dst;
  char *v61;
  char *v62;
  uint64_t v63;

  if (!swift_getEnumCaseMultiPayload())
  {
    v6 = a2[7];
    a1[6] = a2[6];
    a1[7] = v6;
    a1[8] = a2[8];
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
    v10 = type metadata accessor for DebugFormatTestCaseResult(0);
    v11 = *(int *)(v10 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v63 = v10;
      v33 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v33;
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      v59 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v34 = v59[5];
      v61 = v13;
      v62 = v12;
      v18 = &v12[v34];
      v19 = &v13[v34];
      v35 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v18, v19, v35);
      v21 = (int *)type metadata accessor for GroupLayoutContext();
      v36 = v21[5];
      v37 = &v18[v36];
      v38 = &v19[v36];
      v39 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      v40 = v21[6];
      v27 = &v18[v40];
      v28 = &v19[v40];
      *(_OWORD *)v27 = *(_OWORD *)&v19[v40];
      v27[16] = v19[v40 + 16];
      *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v40 + 17];
      v27[19] = v19[v40 + 19];
      *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v40 + 20];
      *((_QWORD *)v27 + 3) = *(_QWORD *)&v19[v40 + 24];
      v58 = type metadata accessor for FeedLayoutSolverOptions(0);
      v41 = *(int *)(v58 + 36);
      __dst = &v27[v41];
      v30 = &v28[v41];
      v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
LABEL_8:
        sub_1BA914C98();
        memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_11:
        *(_QWORD *)&v27[*(int *)(v58 + 40)] = *(_QWORD *)&v28[*(int *)(v58 + 40)];
        *(_QWORD *)&v18[v21[7]] = *(_QWORD *)&v19[v21[7]];
        *(_QWORD *)&v18[v21[8]] = *(_QWORD *)&v19[v21[8]];
        v18[v21[9]] = v19[v21[9]];
        *(_QWORD *)&v18[v21[10]] = *(_QWORD *)&v19[v21[10]];
        v18[v21[11]] = v19[v21[11]];
        *(_QWORD *)&v18[v21[12]] = *(_QWORD *)&v19[v21[12]];
        v44 = v59[6];
        v45 = &v62[v44];
        v46 = &v61[v44];
        *v45 = v61[v44];
        *(_OWORD *)(v45 + 8) = *(_OWORD *)&v61[v44 + 8];
        *(_OWORD *)(v45 + 24) = *(_OWORD *)&v61[v44 + 24];
        *((_QWORD *)v45 + 5) = *(_QWORD *)&v61[v44 + 40];
        v47 = *(_OWORD *)&v61[v44 + 64];
        *((_OWORD *)v45 + 3) = *(_OWORD *)&v61[v44 + 48];
        *((_OWORD *)v45 + 4) = v47;
        *((_QWORD *)v45 + 10) = *(_QWORD *)&v61[v44 + 80];
        v45[88] = v61[v44 + 88];
        *((_QWORD *)v45 + 12) = *(_QWORD *)&v61[v44 + 96];
        v48 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v49 = v48[13];
        v50 = &v45[v49];
        v51 = &v46[v49];
        v52 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        *(_QWORD *)&v45[v48[14]] = *(_QWORD *)&v46[v48[14]];
        *(_QWORD *)&v45[v48[15]] = *(_QWORD *)&v46[v48[15]];
        v45[v48[16]] = v46[v48[16]];
        *(_QWORD *)&v45[v48[17]] = *(_QWORD *)&v46[v48[17]];
        *(_QWORD *)&v45[v48[18]] = *(_QWORD *)&v46[v48[18]];
        *(_QWORD *)&v45[v48[19]] = *(_QWORD *)&v46[v48[19]];
        v53 = v59[7];
        v54 = &v62[v53];
        v55 = &v61[v53];
        v56 = *((_OWORD *)v55 + 1);
        *(_OWORD *)v54 = *(_OWORD *)v55;
        *((_OWORD *)v54 + 1) = v56;
        *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
        *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
        *(_QWORD *)&v62[v59[8]] = *(_QWORD *)&v61[v59[8]];
        swift_storeEnumTagMultiPayload();
        v10 = v63;
        goto LABEL_12;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_12:
        *(_QWORD *)((char *)a1 + *(int *)(v10 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v10 + 28));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v63 = v10;
      v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      v59 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v17 = v59[5];
      v61 = v13;
      v62 = v12;
      v18 = &v12[v17];
      v19 = &v13[v17];
      v20 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      v21 = (int *)type metadata accessor for GroupLayoutContext();
      v22 = v21[5];
      v23 = &v18[v22];
      v24 = &v19[v22];
      v25 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      v26 = v21[6];
      v27 = &v18[v26];
      v28 = &v19[v26];
      *(_OWORD *)v27 = *(_OWORD *)&v19[v26];
      v27[16] = v19[v26 + 16];
      *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v26 + 17];
      v27[19] = v19[v26 + 19];
      *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v26 + 20];
      *((_QWORD *)v27 + 3) = *(_QWORD *)&v19[v26 + 24];
      v58 = type metadata accessor for FeedLayoutSolverOptions(0);
      v29 = *(int *)(v58 + 36);
      __dst = &v27[v29];
      v30 = &v28[v29];
      v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        goto LABEL_8;
    }
    v43 = sub_1BB8705C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(__dst, v30, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    goto LABEL_11;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1BB199A00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v59;
  uint64_t v60;
  char *__dst;
  int *v62;
  char *v63;
  char *v64;
  uint64_t v65;

  if (a1 != a2)
  {
    sub_1BB1992CC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v6 = a2[7];
    a1[6] = a2[6];
    a1[7] = v6;
    a1[8] = a2[8];
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
    v10 = type metadata accessor for DebugFormatTestCaseResult(0);
    v11 = *(int *)(v10 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v65 = v10;
      v33 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v33;
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      v62 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v34 = v62[5];
      v63 = v13;
      v64 = v12;
      v18 = &v12[v34];
      v19 = &v13[v34];
      v35 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v18, v19, v35);
      v21 = (int *)type metadata accessor for GroupLayoutContext();
      v36 = v21[5];
      v37 = &v18[v36];
      v38 = &v19[v36];
      v39 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      v40 = v21[6];
      v27 = &v18[v40];
      v28 = &v19[v40];
      *(_OWORD *)v27 = *(_OWORD *)&v19[v40];
      v27[16] = v19[v40 + 16];
      *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v40 + 17];
      v27[19] = v19[v40 + 19];
      *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v40 + 20];
      *((_QWORD *)v27 + 3) = *(_QWORD *)&v19[v40 + 24];
      v41 = type metadata accessor for FeedLayoutSolverOptions(0);
      v42 = *(int *)(v41 + 36);
      v60 = v41;
      __dst = &v27[v42];
      v31 = &v28[v42];
      v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v59 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v31, 1, v32))
      {
LABEL_9:
        sub_1BA914C98();
        memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_12:
        *(_QWORD *)&v27[*(int *)(v60 + 40)] = *(_QWORD *)&v28[*(int *)(v60 + 40)];
        *(_QWORD *)&v18[v21[7]] = *(_QWORD *)&v19[v21[7]];
        *(_QWORD *)&v18[v21[8]] = *(_QWORD *)&v19[v21[8]];
        v18[v21[9]] = v19[v21[9]];
        *(_QWORD *)&v18[v21[10]] = *(_QWORD *)&v19[v21[10]];
        v18[v21[11]] = v19[v21[11]];
        *(_QWORD *)&v18[v21[12]] = *(_QWORD *)&v19[v21[12]];
        v45 = v62[6];
        v46 = &v64[v45];
        v47 = &v63[v45];
        *v46 = v63[v45];
        *(_OWORD *)(v46 + 8) = *(_OWORD *)&v63[v45 + 8];
        *(_OWORD *)(v46 + 24) = *(_OWORD *)&v63[v45 + 24];
        *((_QWORD *)v46 + 5) = *(_QWORD *)&v63[v45 + 40];
        v48 = *(_OWORD *)&v63[v45 + 64];
        *((_OWORD *)v46 + 3) = *(_OWORD *)&v63[v45 + 48];
        *((_OWORD *)v46 + 4) = v48;
        *((_QWORD *)v46 + 10) = *(_QWORD *)&v63[v45 + 80];
        v46[88] = v63[v45 + 88];
        *((_QWORD *)v46 + 12) = *(_QWORD *)&v63[v45 + 96];
        v49 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v50 = v49[13];
        v51 = &v46[v50];
        v52 = &v47[v50];
        v53 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        *(_QWORD *)&v46[v49[14]] = *(_QWORD *)&v47[v49[14]];
        *(_QWORD *)&v46[v49[15]] = *(_QWORD *)&v47[v49[15]];
        v46[v49[16]] = v47[v49[16]];
        *(_QWORD *)&v46[v49[17]] = *(_QWORD *)&v47[v49[17]];
        *(_QWORD *)&v46[v49[18]] = *(_QWORD *)&v47[v49[18]];
        *(_QWORD *)&v46[v49[19]] = *(_QWORD *)&v47[v49[19]];
        v54 = v62[7];
        v55 = &v64[v54];
        v56 = &v63[v54];
        v57 = *((_OWORD *)v56 + 1);
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v57;
        *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
        *((_QWORD *)v55 + 6) = *((_QWORD *)v56 + 6);
        *(_QWORD *)&v64[v62[8]] = *(_QWORD *)&v63[v62[8]];
        swift_storeEnumTagMultiPayload();
        v10 = v65;
        goto LABEL_13;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_13:
        *(_QWORD *)((char *)a1 + *(int *)(v10 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v10 + 28));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v65 = v10;
      v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      v62 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      v17 = v62[5];
      v63 = v13;
      v64 = v12;
      v18 = &v12[v17];
      v19 = &v13[v17];
      v20 = sub_1BB86D7A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      v21 = (int *)type metadata accessor for GroupLayoutContext();
      v22 = v21[5];
      v23 = &v18[v22];
      v24 = &v19[v22];
      v25 = sub_1BB86D660();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      v26 = v21[6];
      v27 = &v18[v26];
      v28 = &v19[v26];
      *(_OWORD *)v27 = *(_OWORD *)&v19[v26];
      v27[16] = v19[v26 + 16];
      *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v26 + 17];
      v27[19] = v19[v26 + 19];
      *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v26 + 20];
      *((_QWORD *)v27 + 3) = *(_QWORD *)&v19[v26 + 24];
      v29 = type metadata accessor for FeedLayoutSolverOptions(0);
      v30 = *(int *)(v29 + 36);
      v60 = v29;
      __dst = &v27[v30];
      v31 = &v28[v30];
      v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      v59 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v31, 1, v32))
        goto LABEL_9;
    }
    v44 = sub_1BB8705C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(__dst, v31, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v32);
    goto LABEL_12;
  }
  return a1;
}

uint64_t sub_1BB19A0D4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugFormatTestCaseResult(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.properties.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.properties.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_1BA882848(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

unint64_t sub_1BB19A1DC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB19A200();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB19A200()
{
  unint64_t result;

  result = qword_1EF2BCB58;
  if (!qword_1EF2BCB58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet, &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet);
    atomic_store(result, (unint64_t *)&qword_1EF2BCB58);
  }
  return result;
}

unint64_t sub_1BB19A244(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8AAE4();
  a1[2] = sub_1BAEF439C();
  result = sub_1BB19A278();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB19A278()
{
  unint64_t result;

  result = qword_1EF2BCB60;
  if (!qword_1EF2BCB60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet, &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet);
    atomic_store(result, (unint64_t *)&qword_1EF2BCB60);
  }
  return result;
}

uint64_t sub_1BB19A2BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.init(from:)(a1, a2);
}

uint64_t sub_1BB19A2D0(_QWORD *a1)
{
  return FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.encode(to:)(a1);
}

uint64_t sub_1BB19A2E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_1BA882848(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1BB19A340@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB19A34C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet()
{
  return &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet;
}

uint64_t storeEnumTagSinglePayload for DebugFormatCacheDirectory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB19A3E8 + 4 * byte_1BB8F4775[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB19A41C + 4 * asc_1BB8F4770[v4]))();
}

uint64_t sub_1BB19A41C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19A424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB19A42CLL);
  return result;
}

uint64_t sub_1BB19A438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB19A440);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB19A444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19A44C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCacheDirectory()
{
  return &type metadata for DebugFormatCacheDirectory;
}

unint64_t sub_1BB19A46C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCB68;
  if (!qword_1EF2BCB68)
  {
    sub_1BB19A4B4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCB68);
  }
  return result;
}

void sub_1BB19A4B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BCB70)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BCB70);
  }
}

uint64_t sub_1BB19A508()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB19A57C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB19A5C4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB19A634@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB19A690(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x736567616B636170;
  if (*v1)
    v2 = 0x73676E69646E6962;
  *a1 = v2;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BB19A6C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F4BCC(*a1, *a2);
}

void sub_1BB19A6D4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252CB0;
}

unint64_t sub_1BB19A6E8()
{
  unint64_t result;

  result = qword_1EF2BCB78;
  if (!qword_1EF2BCB78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F47D4, &type metadata for DebugFormatCacheDirectory);
    atomic_store(result, (unint64_t *)&qword_1EF2BCB78);
  }
  return result;
}

void sub_1BB19A72C(void *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  id v18;
  id v19;
  double v20;
  double v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  double v30;
  double v31;
  _OWORD v32[8];

  sub_1BA4A968C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB873738();
  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BB4AB03C(1);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(a3 + 56) + 16 * v9;
      if (*(_BYTE *)(v11 + 8) == 2)
      {
        v12 = *(id *)v11;
        objc_msgSend(a1, sel_bounds);
        sub_1BB8736F0();
        v13 = a2[5];
        v32[4] = a2[4];
        v32[5] = v13;
        v14 = a2[7];
        v32[6] = a2[6];
        v32[7] = v14;
        v15 = a2[1];
        v32[0] = *a2;
        v32[1] = v15;
        v16 = a2[3];
        v32[2] = a2[2];
        v32[3] = v16;
        sub_1BB1E4FCC((uint64_t)v8);
        v17 = sub_1BB870A80();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 0, 1, v17);
        sub_1BB870228();
        v18 = objc_msgSend(v12, sel_layer);
        v19 = objc_msgSend(a1, sel_layer);
        objc_msgSend(v19, sel_cornerRadius);
        v21 = v20;

        objc_msgSend(v18, sel_setCornerRadius_, v21);
        v22 = objc_msgSend(v12, sel_layer);
        v23 = objc_msgSend(a1, sel_layer);
        v24 = objc_msgSend(v23, sel_maskedCorners);

        objc_msgSend(v22, sel_setMaskedCorners_, v24);
        v25 = objc_msgSend(v12, sel_layer);
        v26 = objc_msgSend(a1, sel_layer);
        v27 = objc_msgSend(v26, sel_cornerCurve);

        objc_msgSend(v25, sel_setCornerCurve_, v27);
        v28 = objc_msgSend(v12, sel_layer);
        v29 = objc_msgSend(a1, sel_layer);
        objc_msgSend(v29, sel_cornerRadius);
        v31 = v30;

        objc_msgSend(v28, sel_setMasksToBounds_, v31 > 0.0);
      }
    }
  }
}

void sub_1BB19A9E8(void *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  id v19;
  void *v20;
  _OWORD v21[8];

  sub_1BA4A968C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BB4AB03C(1);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(a3 + 56) + 16 * v10;
      if (*(_BYTE *)(v12 + 8) == 2)
      {
        v13 = *(id *)v12;
        objc_msgSend(a1, sel_frame);
        sub_1BB8736F0();
        objc_msgSend(v13, sel_bounds);
        sub_1BB8736F0();
        v14 = a2[5];
        v21[4] = a2[4];
        v21[5] = v14;
        v15 = a2[7];
        v21[6] = a2[6];
        v21[7] = v15;
        v16 = a2[1];
        v21[0] = *a2;
        v21[1] = v16;
        v17 = a2[3];
        v21[2] = a2[2];
        v21[3] = v17;
        sub_1BB1E4FCC((uint64_t)v8);
        v18 = sub_1BB870A80();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
        sub_1BB870228();
        sub_1BB87171C();
        if (swift_dynamicCastClass())
        {
          v19 = a1;
          v20 = (void *)sub_1BB8716F8();
          objc_msgSend(v13, sel_bounds);
          sub_1BB8736F0();

        }
      }
    }
  }
}

uint64_t static FormatVideoPlayerContent.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  char v19;

  v2 = *a1;
  v3 = *a2;
  if (*a1 < 0)
  {
    if (v3 < 0)
    {
      v9 = *(_BYTE *)(v2 + 40);
      v10 = *(_QWORD *)(v2 + 32);
      v11 = *(_QWORD *)(v3 + 32);
      v12 = *(_BYTE *)(v3 + 40);
      v17 = *(_OWORD *)(v2 + 16);
      v18 = v10;
      v19 = v9;
      v14 = *(_OWORD *)(v3 + 16);
      v15 = v11;
      v16 = v12;
      swift_retain();
      swift_retain();
      v8 = _s8NewsFeed28FormatVideoPlayerNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v17, (uint64_t)&v14);
      swift_release();
      swift_release();
      return v8 & 1;
    }
    goto LABEL_6;
  }
  if (v3 < 0)
  {
LABEL_6:
    v8 = 0;
    return v8 & 1;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if ((sub_1BA885DEC(v4, v6) & 1) != 0)
  {
    *(_QWORD *)&v17 = v5;
    *(_QWORD *)&v14 = v7;
    v8 = static FormatVideoPlayerContent.== infix(_:_:)(&v17, &v14);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v8 = 0;
  }
  return v8 & 1;
}

void sub_1BB19AD28(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v7 = *v3;
  if (*v3 < 0)
  {
    sub_1BB3A2020(a1, a3);
  }
  else
  {
    v9 = *(_QWORD *)(v7 + 16);
    v8 = *(_QWORD *)(v7 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BB640164(a2, a1, v9, v8, &v10);
    sub_1BB19AD28(a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_1BB19AE20(_QWORD *a1)
{
  return FormatVideoPlayerContent.encode(to:)(a1);
}

unint64_t sub_1BB19AE38(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8266B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB19AE5C()
{
  unint64_t result;

  result = qword_1ED3D0B50;
  if (!qword_1ED3D0B50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerContent, &type metadata for FormatVideoPlayerContent);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B50);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerContent()
{
  return &type metadata for FormatVideoPlayerContent;
}

ValueMetadata *type metadata accessor for DebugTextAttachment()
{
  return &type metadata for DebugTextAttachment;
}

uint64_t sub_1BB19AEC0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB872A90();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB19AF40()
{
  sub_1BB872A90();
  sub_1BB872A90();
  return sub_1BB872A90();
}

uint64_t sub_1BB19AF98()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB872A90();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB19B014@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB19B020(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1BB19B0AC(v7, v8) & 1;
}

unint64_t sub_1BB19B068()
{
  unint64_t result;

  result = qword_1EF2BCB80;
  if (!qword_1EF2BCB80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4974, &type metadata for DebugTextAttachment);
    atomic_store(result, (unint64_t *)&qword_1EF2BCB80);
  }
  return result;
}

uint64_t sub_1BB19B0AC(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BB874398(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_1BB874398(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
        return 1;
      else
        return sub_1BB874398();
    }
  }
  return result;
}

uint64_t sub_1BB19B14C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  if ((sub_1BB86DC30() & 1) == 0)
    sub_1BB872FDC();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  if ((sub_1BB86DC30() & 1) == 0)
    sub_1BB872FDC();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 40;
}

uint64_t sub_1BB19B230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v4 = v3;
  sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - v9;
  v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD **)(v3 + 16);
  if (v11)
  {
    v12 = v11[2];
    if (*(_QWORD *)(v12 + 16))
    {
      v44 = a3;
      *(_QWORD *)&v45 = a1;
      v13 = v11[3];
      v14 = v11[4];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = sub_1BB38CBFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v17 = v15[2];
      v16 = v15[3];
      if (v17 >= v16 >> 1)
        v15 = sub_1BB38CBFC((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
      v15[2] = v17 + 1;
      v18 = &v15[3 * v17];
      v18[4] = v12;
      v18[5] = v13;
      v18[6] = v14;
      swift_release();
      v51 = v15;
      a3 = v44;
      a1 = v45;
    }
  }
  v19 = *(void **)(v4 + 24);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v20, sel_alternativeFeedDescriptor);
    if (v21)
    {
      v22 = v21;
      v23 = sub_1BB19B690(v21, a2);
      sub_1BB383D38((uint64_t)v23);

    }
    v24 = sub_1BB19B690(v20, a2);
    sub_1BB383D38((uint64_t)v24);

  }
  if (*(_QWORD *)(v4 + 32))
  {
    v25 = (void *)swift_unknownObjectRetain();
    sub_1BB19B9D0(v25, a2, &v46);
    v26 = v46;
    if (v46)
    {
      v45 = v47;
      v27 = v51;
      v28 = a3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_1BB38CBFC(0, v27[2] + 1, 1, v27);
      v30 = v27[2];
      v29 = v27[3];
      if (v30 >= v29 >> 1)
        v27 = sub_1BB38CBFC((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
      v27[2] = v30 + 1;
      v31 = &v27[3 * v30];
      v31[4] = v26;
      *(_OWORD *)(v31 + 5) = v45;
      swift_unknownObjectRelease();
      v51 = v27;
      a3 = v28;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v32 = v51;
  v33 = v51[2];
  if (v33)
  {
    v34 = (int *)type metadata accessor for FormatContent(0);
    v46 = *(_QWORD *)(a1 + v34[14]);
    v35 = *(_QWORD *)(a1 + v34[17]);
    v49 = *(_QWORD *)(a1 + v34[16]);
    v50 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = v32 + 6;
    do
    {
      v37 = *(v36 - 2);
      v36 += 3;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6C2884(v37);
      v38 = swift_bridgeObjectRetain();
      sub_1BA6E3FB8(v38);
      v39 = swift_bridgeObjectRetain();
      sub_1BB383E90(v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v40 = sub_1BB871E24();
    v41 = (void (*)(uint64_t))MEMORY[0x1E0D52E40];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v10, 1, 1, v40);
    v48 = v46;
    FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, a3, 0, 0, (uint64_t)v10, v49, &v48, 0, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BA502AD0((uint64_t)v10, &qword_1ED3C20E0, v41);
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1BAA40194(a1, (uint64_t)a3);
  }
}

_QWORD *FormatServiceMergeContext.__allocating_init(theme:feedDescriptor:groupTag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

_QWORD *FormatServiceMergeContext.init(theme:feedDescriptor:groupTag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

_QWORD *sub_1BB19B690(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;

  v4 = objc_msgSend(a1, sel_backingChannel);
  if (v4)
  {
    v5 = v4;
    v6 = (void *)swift_unknownObjectRetain();
    sub_1BB19B9D0(v6, a2, &v33);
    swift_unknownObjectRelease();
    v7 = v33;
    if (v33)
    {
      v30 = v34;
      v8 = sub_1BB38CBFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v10 = v8[2];
      v9 = v8[3];
      if (v10 >= v9 >> 1)
        v8 = sub_1BB38CBFC((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
      v8[2] = v10 + 1;
      v11 = &v8[3 * v10];
      v11[4] = v7;
      *(_OWORD *)(v11 + 5) = v30;
    }
    else
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v16 = objc_msgSend(v5, sel_identifier, v30);
    v17 = sub_1BB8729A0();
    v19 = v18;

    v20 = objc_msgSend(objc_msgSend(a1, sel_backingTag), sel_identifier);
    swift_unknownObjectRelease();
    v21 = sub_1BB8729A0();
    v23 = v22;

    if (v17 == v21 && v19 == v23)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v24 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        sub_1BB19B9D0(objc_msgSend(a1, sel_backingTag), a2, &v33);
        swift_unknownObjectRelease();
        v25 = v33;
        if (v33)
        {
          v32 = v34;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1BB38CBFC(0, v8[2] + 1, 1, v8);
          v27 = v8[2];
          v26 = v8[3];
          if (v27 >= v26 >> 1)
            v8 = sub_1BB38CBFC((_QWORD *)(v26 > 1), v27 + 1, 1, v8);
          v8[2] = v27 + 1;
          v28 = &v8[3 * v27];
          v28[4] = v25;
          *(_OWORD *)(v28 + 5) = v32;
        }
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1BB19B9D0(objc_msgSend(a1, sel_backingTag), a2, &v33);
    swift_unknownObjectRelease();
    v12 = v33;
    if (v33)
    {
      v31 = v34;
      v8 = sub_1BB38CBFC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v14 = v8[2];
      v13 = v8[3];
      if (v14 >= v13 >> 1)
        v8 = sub_1BB38CBFC((_QWORD *)(v13 > 1), v14 + 1, 1, v8);
      v8[2] = v14 + 1;
      v15 = &v8[3 * v14];
      v15[4] = v12;
      *(_OWORD *)(v15 + 5) = v31;
    }
    else
    {
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  return v8;
}

id sub_1BB19B9D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v6 = sub_1BB8729E8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, sel_supergroupConfigJson, v8);
  if (!result)
    goto LABEL_4;
  v12 = result;
  sub_1BB8729A0();

  sub_1BB8729DC();
  v13 = sub_1BB8729AC();
  v15 = v14;
  swift_bridgeObjectRelease();
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v15 >> 60 == 15)
  {
LABEL_4:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  else
  {
    sub_1BA7AA598();
    v27[2] = v16;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
    v18 = objc_msgSend(a1, sel_identifier);
    v19 = sub_1BB8729A0();
    v20 = a2;
    v21 = v13;
    v23 = v22;

    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v23;
    v24 = sub_1BB87330C();
    sub_1BB86EF44("Format service will attempt to decode merge config for tag %{public}@", 69, 2, &dword_1BA493000, v20, v24, v17);
    swift_bridgeObjectRelease();
    sub_1BB86DC9C();
    swift_allocObject();
    sub_1BB86DC90();
    sub_1BB19C4E4();
    sub_1BB86DC78();
    sub_1BA69D490(v21, v15);
    swift_release();
    v25 = v28;
    v26 = v29;
    result = v30;
    if (!*(_QWORD *)(v28 + 16) && !*(_QWORD *)(v29 + 16) && !v30[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = 0;
      v26 = 0;
      result = 0;
    }
    *a3 = v25;
    a3[1] = v26;
    a3[2] = result;
  }
  return result;
}

uint64_t FormatServiceMergeContext.deinit()
{
  uint64_t v0;

  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t FormatServiceMergeContext.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatServiceMergeContext()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatServiceMergeContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatServiceMergeContext.__allocating_init(theme:feedDescriptor:groupTag:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1BB19BDC8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;

  v34 = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3A0D40, (void (*)(uint64_t))sub_1BA6927D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - v4;
  sub_1BA4A3FB4(0, &qword_1ED3A2560, (void (*)(uint64_t))sub_1BA89B794);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - v7;
  sub_1BB19C57C(0, &qword_1EF2BCBA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v31 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB19C538();
  v14 = v35;
  sub_1BB87468C();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v35 = v11;
  v33 = v5;
  sub_1BA64D5B0(0);
  v38 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B8400, (uint64_t (*)(uint64_t))sub_1BA64D5B0, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
  sub_1BB874068();
  if (v39)
    v16 = v39;
  else
    v16 = MEMORY[0x1E0DEE9D8];
  sub_1BA89B794();
  v18 = v17;
  v37 = 1;
  sub_1BA4A2870(&qword_1ED39EDD8, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18);
  v32 = v16;
  if (v20 == 1)
  {
    sub_1BA502AD0((uint64_t)v8, &qword_1ED3A2560, (void (*)(uint64_t))sub_1BA89B794);
    v21 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v21 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
  }
  sub_1BA6927D0();
  v23 = v22;
  v36 = 2;
  sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
  swift_bridgeObjectRetain();
  v24 = (uint64_t)v33;
  sub_1BB874068();
  v25 = v21;
  v26 = v34;
  v31 = v25;
  v27 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v24, 1, v23) == 1)
  {
    sub_1BA502AD0(v24, (unint64_t *)&unk_1ED3A0D40, (void (*)(uint64_t))sub_1BA6927D0);
    v28 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    v28 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v23);
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
  v29 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v31;
  *v26 = v29;
  v26[1] = v30;
  v26[2] = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB19C224(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  sub_1BB19C57C(0, (unint64_t *)&unk_1EF2BCBB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v10 = *v1;
  v9 = v1[1];
  v14 = v1[2];
  v15 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB19C538();
  sub_1BB8746C8();
  v17 = v10;
  v16 = 0;
  sub_1BA64D5B0(0);
  sub_1BA4A2870(&qword_1ED39D440, (uint64_t (*)(uint64_t))sub_1BA64D5B0, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
  sub_1BB8741AC();
  if (!v2)
  {
    v11 = v14;
    v17 = v15;
    v16 = 1;
    sub_1BA89BBC8();
    sub_1BA89BC1C();
    sub_1BB8741AC();
    v17 = v11;
    v16 = 2;
    sub_1BA6BCC84();
    sub_1BA89BC7C();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB19C3E8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x69747265706F7270;
  if (*v0 != 1)
    v1 = 0x726F7463656C6573;
  if (*v0)
    return v1;
  else
    return 0x73656D656874;
}

uint64_t sub_1BB19C448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB19C77C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB19C46C()
{
  sub_1BB19C538();
  return sub_1BB874710();
}

uint64_t sub_1BB19C494()
{
  sub_1BB19C538();
  return sub_1BB87471C();
}

uint64_t sub_1BB19C4BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB19BDC8(a1, a2);
}

uint64_t sub_1BB19C4D0(_QWORD *a1)
{
  return sub_1BB19C224(a1);
}

unint64_t sub_1BB19C4E4()
{
  unint64_t result;

  result = qword_1EF2BCB90;
  if (!qword_1EF2BCB90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4ABC, &type metadata for FormatMergeConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2BCB90);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMergeConfig()
{
  return &type metadata for FormatMergeConfig;
}

unint64_t sub_1BB19C538()
{
  unint64_t result;

  result = qword_1EF2BCBA8;
  if (!qword_1EF2BCBA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4BA8, &type metadata for FormatMergeConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BCBA8);
  }
  return result;
}

void sub_1BB19C57C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB19C538();
    v7 = a3(a1, &type metadata for FormatMergeConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for FormatMergeConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB19C624 + 4 * byte_1BB8F4A25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB19C658 + 4 * byte_1BB8F4A20[v4]))();
}

uint64_t sub_1BB19C658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19C660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB19C668);
  return result;
}

uint64_t sub_1BB19C674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB19C67CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB19C680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19C688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMergeConfig.CodingKeys()
{
  return &type metadata for FormatMergeConfig.CodingKeys;
}

unint64_t sub_1BB19C6A8()
{
  unint64_t result;

  result = qword_1EF2BCBC8;
  if (!qword_1EF2BCBC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4B80, &type metadata for FormatMergeConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BCBC8);
  }
  return result;
}

unint64_t sub_1BB19C6F0()
{
  unint64_t result;

  result = qword_1EF2BCBD0;
  if (!qword_1EF2BCBD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4AF0, &type metadata for FormatMergeConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BCBD0);
  }
  return result;
}

unint64_t sub_1BB19C738()
{
  unint64_t result;

  result = qword_1EF2BCBD8;
  if (!qword_1EF2BCBD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4B18, &type metadata for FormatMergeConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BCBD8);
  }
  return result;
}

uint64_t sub_1BB19C77C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73656D656874 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

char *sub_1BB19C8E0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);
  char *v4;
  uint64_t v5;

  v1 = *(_QWORD *)v0;
  swift_release();
  sub_1BA76D750((uint64_t)&v0[qword_1ED3B2F90]);
  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(&v0[*(_QWORD *)(*(_QWORD *)v0 + 120)], v2);
  v4 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v5 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v3(&v0[*(_QWORD *)(*(_QWORD *)v0 + 136)], v2);
  return v0;
}

uint64_t sub_1BB19C97C()
{
  sub_1BB19C8E0();
  return swift_deallocClassInstance();
}

id sub_1BB19C9A0(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for WebEmbedDataVisualization();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (unint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v9, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    v11 = (uint64_t (*)(_QWORD))sub_1BA6CAB4C;
    v12 = (uint64_t)v9;
LABEL_5:
    sub_1BA4A2E80(v12, v11);
    return objc_msgSend(v1, sel_setAlpha_, 0.0);
  }
  sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v12 = (uint64_t)v9;
    v11 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
    goto LABEL_5;
  }
  v14 = *v6;
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (v14 >> 61
    || (v15 = *(_QWORD *)(v14 + 16),
        swift_retain(),
        swift_release(),
        !*(_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_debugData)))
  {
    swift_release();
    return objc_msgSend(v1, sel_setAlpha_, 0.0);
  }
  v16 = swift_retain();
  sub_1BB19CB50(v16);
  return (id)swift_release_n();
}

void sub_1BB19CB50(unint64_t a1)
{
  char *v1;
  char *v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v2 = v1;
  v4 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_label];
  if ((v2[OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_display] & 1) != 0)
  {
    switch(a1)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        break;
      default:
        swift_retain();
        SportsScoreDataVisualization.debugDescription.getter();
        sub_1BAF6A4F4(a1);
        break;
    }
    v5 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setText_, v5);

    v6 = (void *)objc_opt_self();
    v7 = objc_msgSend(v6, sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v7);

    v8 = objc_msgSend(v2, sel_layer);
    v9 = sub_1BB19CEBC(a1);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, sel_CGColor);

    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v8, sel_setBorderColor_, v11);

    v12 = objc_msgSend(v2, sel_layer);
    objc_msgSend(v12, sel_setBorderWidth_, 2.0);

    v13 = objc_msgSend(v6, sel_systemBackgroundColor);
    v14 = objc_msgSend(v13, sel_colorWithAlphaComponent_, 0.75);

    objc_msgSend(v2, sel_setBackgroundColor_, v14);
    objc_msgSend(v2, sel_setAlpha_, 1.0);
  }
  else
  {
    switch(a1)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        break;
      default:
        swift_retain();
        SportsScoreDataVisualization.debugDescription.getter();
        sub_1BAF6A4F4(a1);
        break;
    }
    v15 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setText_, v15);

    v16 = sub_1BB19CEBC(a1);
    objc_msgSend(v2, sel_setBackgroundColor_, v16);

    sub_1BB19D258();
  }
}

id sub_1BB19CEBC(unint64_t a1)
{
  char ***v1;
  uint64_t v2;

  if (a1 < 4)
  {
    v1 = &off_1E72ED1D8[a1];
    return objc_msgSend((id)objc_opt_self(), **v1);
  }
  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_debugData);
  if (v2)
  {
    v1 = &off_1E72ED1F8[*(char *)(v2 + 16)];
    return objc_msgSend((id)objc_opt_self(), **v1);
  }
  return 0;
}

char *sub_1BB19CF38(char a1)
{
  char *v1;
  objc_class *ObjectType;
  char v4;
  uint64_t v5;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = a1 & 1;
  v5 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_label;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v7 = v1;
  *(_QWORD *)&v1[v5] = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7[OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_display] = v4;

  v21.receiver = v7;
  v21.super_class = ObjectType;
  v8 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v8, sel_setAlpha_, 0.0);
  v9 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_label;
  v10 = *(void **)&v8[OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_label];
  objc_msgSend(v10, sel_setTextAlignment_, 1);
  v11 = (void *)objc_opt_self();
  v12 = *MEMORY[0x1E0DC1448];
  v13 = v10;
  v14 = objc_msgSend(v11, sel_systemFontOfSize_weight_, 13.0, v12);
  objc_msgSend(v13, sel_setFont_, v14);

  v15 = *(void **)&v8[v9];
  v16 = (void *)objc_opt_self();
  v17 = v15;
  v18 = objc_msgSend(v16, sel_blackColor);
  objc_msgSend(v17, sel_setTextColor_, v18);

  v19 = *(void **)&v8[v9];
  objc_msgSend(v19, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_addSubview_, v19);

  return v8;
}

void sub_1BB19D258()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id (*v14)();
  uint64_t v15;

  v1 = v0;
  objc_msgSend(v0, sel_setAlpha_, 0.9);
  v2 = (void *)objc_opt_self();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v0;
  v14 = sub_1BB19D554;
  v15 = v3;
  v4 = MEMORY[0x1E0C809B0];
  v10 = MEMORY[0x1E0C809B0];
  v11 = 1107296256;
  v12 = sub_1BA4F1DD8;
  v13 = &block_descriptor_44;
  v5 = _Block_copy(&v10);
  v6 = v1;
  swift_release();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  v14 = sub_1BB19D554;
  v15 = v7;
  v10 = v4;
  v11 = 1107296256;
  v12 = sub_1BB2D2738;
  v13 = &block_descriptor_6_3;
  v8 = _Block_copy(&v10);
  v9 = v6;
  swift_release();
  objc_msgSend(v2, sel_animateWithDuration_delay_options_animations_completion_, 0x10000, v5, v8, 1.5, 0.2);
  _Block_release(v8);
  _Block_release(v5);
}

uint64_t type metadata accessor for WebEmbedDebugView()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for WebEmbedDebugViewDisplay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB19D468 + 4 * byte_1BB8F4C65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB19D49C + 4 * byte_1BB8F4C60[v4]))();
}

uint64_t sub_1BB19D49C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19D4A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB19D4ACLL);
  return result;
}

uint64_t sub_1BB19D4B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB19D4C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB19D4C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19D4CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDebugViewDisplay()
{
  return &type metadata for WebEmbedDebugViewDisplay;
}

unint64_t sub_1BB19D4EC()
{
  unint64_t result;

  result = qword_1EF2BCC18;
  if (!qword_1EF2BCC18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F4CEC, &type metadata for WebEmbedDebugViewDisplay);
    atomic_store(result, (unint64_t *)&qword_1EF2BCC18);
  }
  return result;
}

uint64_t sub_1BB19D530()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB19D554()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 0.0);
}

uint64_t StubFeedPersonalizationService.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t StubFeedPersonalizationService.init()()
{
  uint64_t v0;

  return v0;
}

double StubFeedPersonalizationService.baselineScore.getter()
{
  return 0.0;
}

uint64_t StubFeedPersonalizationService.prepareForUse()()
{
  sub_1BA84125C();
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t StubFeedPersonalizationService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t StubFeedPersonalizationService.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed04StubB22PersonalizationServiceC5score6issues7contextSayAA0B11ScoredIssueVGSaySo7FCIssueCG_AA0bJ14ScoringContextOtF_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v14 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC7A514(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v3 = v14;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCE4630](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
      v9 = v7;
      v10 = objc_msgSend(v8, sel_init);
      if (!v10)
        v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);

      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1BAC7A514(v11 > 1, v12 + 1, 1);
      ++v5;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

double _s8NewsFeed04StubB22PersonalizationServiceC10groupScore5itemsSdSayAA0B10ScoredItemVG_tF_0(uint64_t a1)
{
  int64_t v1;
  double v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double v10;
  double v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A4DC(0, v1, 0);
    v3 = v11;
    v4 = (id *)(a1 + 40);
    do
    {
      objc_msgSend(*v4, sel_agedPersonalizationScore);
      v6 = v5;
      v10 = v3;
      v8 = *(_QWORD *)(*(_QWORD *)&v3 + 16);
      v7 = *(_QWORD *)(*(_QWORD *)&v3 + 24);
      if (v8 >= v7 >> 1)
        sub_1BAC7A4DC(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(*(_QWORD *)&v3 + 16) = v8 + 1;
      *(_QWORD *)(*(_QWORD *)&v3 + 8 * v8 + 32) = v6;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  sub_1BA951768();
  sub_1BB872E20();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s8NewsFeed04StubB22PersonalizationServiceC5score5items7contextSayAA0B10ScoredItemVGSaySo019FCFeedPersonalizingJ0_pG_AA0B14ScoringContextOtF_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v12 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC7A4C0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v3 = v12;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCE4630](v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      v7 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
      swift_unknownObjectRetain();
      v8 = objc_msgSend(v7, sel_init);
      if (!v8)
        v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
      swift_unknownObjectRelease();
      v10 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      if (v10 >= v9 >> 1)
        sub_1BAC7A4C0(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v12 + 16) = v10 + 1;
      v11 = (_QWORD *)(v12 + 24 * v10);
      v11[4] = v6;
      v11[5] = v8;
      v11[6] = 0;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed04StubB22PersonalizationServiceC5score9headlines7contextSayAA0B14ScoredHeadlineVGSaySo19FCHeadlineProviding_pG_AA0bJ14ScoringContextOtF_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v12 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC7A4F8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v3 = v12;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCE4630](v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      v7 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
      swift_unknownObjectRetain();
      v8 = objc_msgSend(v7, sel_init);
      if (!v8)
        v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
      swift_unknownObjectRelease();
      v10 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      if (v10 >= v9 >> 1)
        sub_1BAC7A4F8(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v12 + 16) = v10 + 1;
      v11 = v12 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed04StubB22PersonalizationServiceC5score4tagsSayAA0B9ScoredTagVGSaySSG_tF_0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A530(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v7 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
        sub_1BAC7A530(v8 > 1, v7 + 1, 1);
      v4 += 2;
      *(_QWORD *)(v11 + 16) = v7 + 1;
      v9 = (_QWORD *)(v11 + 24 * v7);
      v9[4] = v6;
      v9[5] = v5;
      v9[6] = 0;
      --v1;
    }
    while (v1);
  }
  return v2;
}

double _s8NewsFeed04StubB22PersonalizationServiceC10groupScore9headlinesSdSayAA0B14ScoredHeadlineVG_tF_0(uint64_t a1)
{
  int64_t v1;
  double v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double v10;
  double v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A4DC(0, v1, 0);
    v3 = v11;
    v4 = (id *)(a1 + 40);
    do
    {
      objc_msgSend(*v4, sel_agedPersonalizationScore);
      v6 = v5;
      v10 = v3;
      v8 = *(_QWORD *)(*(_QWORD *)&v3 + 16);
      v7 = *(_QWORD *)(*(_QWORD *)&v3 + 24);
      if (v8 >= v7 >> 1)
        sub_1BAC7A4DC(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(*(_QWORD *)&v3 + 16) = v8 + 1;
      *(_QWORD *)(*(_QWORD *)&v3 + 8 * v8 + 32) = v6;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  sub_1BA951768();
  sub_1BB872E20();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for StubFeedPersonalizationService()
{
  return objc_opt_self();
}

uint64_t method lookup function for StubFeedPersonalizationService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StubFeedPersonalizationService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t FormatImageRequestData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t initializeWithCopy for FormatImageRequestData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatImageRequestData(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  return a1;
}

uint64_t assignWithTake for FormatImageRequestData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageRequestData()
{
  return &type metadata for FormatImageRequestData;
}

BOOL static SharingArticleActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SharingArticleActivity.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SharingArticleActivity.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB19DF78()
{
  unint64_t result;

  result = qword_1EF2BCCB8;
  if (!qword_1EF2BCCB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SharingArticleActivity, &type metadata for SharingArticleActivity);
    atomic_store(result, (unint64_t *)&qword_1EF2BCCB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SharingArticleActivity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB19E008 + 4 * byte_1BB8F4DC5[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB19E03C + 4 * asc_1BB8F4DC0[v4]))();
}

uint64_t sub_1BB19E03C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19E044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB19E04CLL);
  return result;
}

uint64_t sub_1BB19E058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB19E060);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB19E064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB19E06C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t UIUserInterfaceLayoutDirection.description.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = 0x6E776F6E6B6E75;
  if (a1 == 1)
    v1 = 0x6F74207468676952;
  if (a1)
    return v1;
  else
    return 0x206F74207466654CLL;
}

uint64_t sub_1BB19E0E8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = 0x6E776F6E6B6E75;
  if (*v0 == 1)
    v1 = 0x6F74207468676952;
  if (*v0)
    return v1;
  else
    return 0x206F74207466654CLL;
}

uint64_t destroy for DebugFormatCreatePackageSection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatCreatePackageSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatCreatePackageSection(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatCreatePackageSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatCreatePackageSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatCreatePackageSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCreatePackageSection()
{
  return &type metadata for DebugFormatCreatePackageSection;
}

ValueMetadata *type metadata accessor for DebugFormatCreatePackageItem()
{
  return &type metadata for DebugFormatCreatePackageItem;
}

uint64_t sub_1BB19E4B8()
{
  return sub_1BA50AD30(&qword_1EF2BCCC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLayoutDirection, (uint64_t)&unk_1BB87BDA8);
}

uint64_t sub_1BB19E4E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;

  v1 = sub_1BB86D7A4();
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D678();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DB5D88], v4, v6);
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v10 = v29;
  v11 = objc_msgSend(v0, sel_view);
  if (v11)
  {
    v12 = v11;
    v13 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
    sub_1BB8732C4();
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;
    objc_msgSend(v13, sel_safeAreaInsets);
    sub_1BB532618(v9, v12, v10, v15, v17, v19, v21, v22, v23, v24, v25);

    sub_1BB86D66C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    __break(1u);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v28);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void sub_1BB19E704()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  const void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE v11[336];
  _BYTE v12[336];
  _BYTE __dst[336];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton);
  v3 = (const void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages);
  memcpy(__dst, (const void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(__dst));
  memcpy(v12, (const void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(v12));
  v4 = v2;
  sub_1BAF8EA94((uint64_t)__dst);
  v5 = sub_1BB7A8230();
  if (v5 >> 62)
    v6 = sub_1BB873F30();
  else
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  sub_1BAF8FB4C((uint64_t)__dst);
  objc_msgSend(v4, sel_setEnabled_, v6 != 0);

  v7 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton);
  memcpy(v12, v3, sizeof(v12));
  memcpy(v11, v3, sizeof(v11));
  v8 = v7;
  sub_1BAF8EA94((uint64_t)v12);
  v9 = sub_1BB7A8230();
  if (v9 >> 62)
    v10 = sub_1BB873F30();
  else
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  sub_1BAF8FB4C((uint64_t)v12);
  objc_msgSend(v8, sel_setEnabled_, v10 != 0);

}

char *sub_1BB19E888()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView);
  }
  else
  {
    v4 = v0;
    v5 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView);
    v6 = objc_allocWithZone((Class)type metadata accessor for DebugFormatOverlayView());
    v7 = sub_1BB2E254C(v5);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1BB19E908()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t ObjectType;
  char *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v18[4];

  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem];
  }
  else
  {
    ObjectType = swift_getObjectType();
    v18[3] = ObjectType;
    v18[0] = v0;
    v5 = v0;
    v6 = (void *)sub_1BB872970();
    if (ObjectType)
    {
      v7 = __swift_project_boxed_opaque_existential_1(v18, ObjectType);
      v8 = *(_QWORD *)(ObjectType - 8);
      v9 = MEMORY[0x1E0C80A78](v7);
      v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v8 + 16))(v11, v9);
      v12 = sub_1BB874380();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      v12 = 0;
    }
    v13 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v6, 0, v12, sel_doResetZoom, v18[0]);

    swift_unknownObjectRelease();
    v15 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v14;
    v3 = v14;

    v2 = 0;
  }
  v16 = v2;
  return v3;
}

char *sub_1BB19EA6C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView);
  }
  else
  {
    v4 = v0;
    objc_allocWithZone((Class)type metadata accessor for DebugFormatEditorPathView());
    v5 = swift_retain();
    v6 = sub_1BAF96E60(v5);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BB19EAF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  id v16;

  v5 = *a1;
  v6 = *(void **)&v4[*a1];
  if (v6)
  {
    v7 = *(id *)&v4[*a1];
  }
  else
  {
    v9 = (void *)sub_1BB872970();
    v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

    v11 = *a4;
    v12 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v13 = v4;
    v14 = objc_msgSend(v12, sel_initWithImage_style_target_action_, v10, 2, v13, v11);

    v15 = *(void **)&v4[v5];
    *(_QWORD *)&v4[v5] = v14;
    v7 = v14;

    v6 = 0;
  }
  v16 = v6;
  return v7;
}

id sub_1BB19EBD8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem];
  }
  else
  {
    v4 = (void *)sub_1BB872970();
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v4);

    v6 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v7 = v0;
    v8 = objc_msgSend(v6, sel_initWithImage_style_target_action_, v5, 0, v7, sel_doSnapshotWithSender_);

    v9 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BB19ECD0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem);
  }
  else
  {
    v4 = v0;
    swift_retain();
    v5 = sub_1BB86D2D0();
    swift_release();
    sub_1BB0741C0(v5, 0x69682E6567756167, 0xEA00000000006867, 0x6F6C2E6567756167, 0xE900000000000077);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BB19ED94(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  objc_super v30;
  _BYTE __dst[336];

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v8 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages;
  v9 = qword_1EF2A7490;
  v10 = v3;
  if (v9 != -1)
    swift_once();
  memcpy(__dst, &byte_1EF3D09C0, sizeof(__dst));
  memmove(&v10[v8], &byte_1EF3D09C0, 0x150uLL);
  v11 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView;
  v12 = objc_allocWithZone((Class)type metadata accessor for DebugFormatRulerView());
  sub_1BAF8EA94((uint64_t)__dst);
  *(_QWORD *)&v10[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView] = 0;
  v13 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView;
  *(_QWORD *)&v10[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView;
  *(_QWORD *)&v10[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatSnapshotCanvasView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem] = 0;
  v15 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)&v10[v15] = v16;
  v17 = &v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v17[32] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView] = 0;
  v18 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editorToolbarItems] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_debuggerToolbarItems] = v18;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerNextBarButtonItem] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepInBarButtonItem] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOverBarButtonItem] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOutBarButtonItem] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem] = 0;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor] = a1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_formatManager] = a2;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView] = v19;
  v20 = objc_allocWithZone((Class)type metadata accessor for DebugFormatEditorStatusView());
  swift_retain_n();
  swift_retain();
  v21 = v19;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView] = sub_1BAFC44A8(a1);
  v22 = objc_allocWithZone((Class)type metadata accessor for DebugFormatCanvasViewController());
  swift_retain();
  v23 = v21;
  v24 = sub_1BB40EA94(a1, v23);
  swift_release();

  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController] = v24;
  v25 = objc_allocWithZone((Class)type metadata accessor for DebugFormatBackgroundView());
  v26 = swift_retain();
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView] = sub_1BB8246F4(v26);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController] = a3;
  v27 = a3;

  v30.receiver = v10;
  v30.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v30, sel_initWithNibName_bundle_, 0, 0);

  swift_release();
  swift_release();

  return v28;
}

void sub_1BB19F15C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  char *v33;
  id v34;
  void *v35;
  uint64_t inited;
  void **v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  char *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  id v73;
  char *v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  id v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  void *v96;
  id v97;
  char *v98;
  void *v99;
  void *v100;
  id v101;
  char *v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  char *v107;
  id v108;
  uint64_t v109;
  void *v110;
  id v111;
  id v112;
  char *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  id v118;
  id v119;
  char *v120;
  id v121;
  id v122;
  uint64_t v123;
  void *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  void *v153;
  id v154;
  void *v155;
  id v156;
  void *v157;
  id v158;
  void *v159;
  id v160;
  void *v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  double v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  uint64_t v182;
  void *v183;
  void *v184;
  void *v185;
  uint64_t v186;
  unint64_t v187;
  objc_super v188;

  v1 = v0;
  v188.receiver = v0;
  v188.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v188, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_19;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView];
  v7 = objc_msgSend(v4, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  objc_msgSend(v6, sel_setHidden_, 1);
  v8 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView];
  v9 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView];
  objc_msgSend(v8, sel_addSubview_, v9);
  v10 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
  objc_msgSend(v10, sel_addSubview_, v8);
  v11 = objc_msgSend(v1, sel_view);
  if (!v11)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = v11;
  v179 = v4;
  objc_msgSend(v11, sel_addSubview_, v10);

  v13 = objc_msgSend(v1, sel_view);
  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v14 = v13;
  objc_msgSend(v13, sel_addSubview_, v6);

  v15 = *(char **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController];
  v16 = objc_msgSend(v15, sel_view);
  if (!v16)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v17 = v16;
  objc_msgSend(v16, sel_setPreservesSuperviewLayoutMargins_, 1);

  objc_msgSend(v1, sel_addChildViewController_, v15);
  v18 = objc_msgSend(v15, sel_view);
  if (!v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v19 = v18;
  objc_msgSend(v8, sel_addSubview_, v18);

  objc_msgSend(v15, sel_didMoveToParentViewController_, v1);
  v20 = objc_msgSend(v15, sel_view);
  if (!v20)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v21 = v20;
  v22 = objc_msgSend(v1, sel_view);
  if (!v22)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v23 = v22;
  objc_msgSend(v22, sel_bounds);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;

  objc_msgSend(v21, sel_setFrame_, v25, v27, v29, v31);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_delegate + 8] = &off_1E72ED530;
  swift_unknownObjectWeakAssign();
  v32 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  sub_1BB23126C((uint64_t)v15);
  v182 = v32;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  objc_msgSend(v9, sel_setOverrideUserInterfaceStyle_, v186);
  objc_msgSend(v10, sel_setMinimumZoomScale_, 1.0);
  objc_msgSend(v10, sel_setMaximumZoomScale_, 30.0);
  objc_msgSend(v10, sel_setDelegate_, v1);
  v33 = sub_1BB19E888();
  objc_msgSend(v10, sel_addSubview_, v33);

  objc_msgSend(v10, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView]);
  objc_msgSend(v10, sel_setZoomScale_animated_, 0, 1.0);
  v34 = sub_1BB19E908();
  sub_1BA6E43EC((uint64_t)&unk_1E72707C8);
  swift_arrayDestroy();
  v35 = (void *)sub_1BB873024();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setPossibleTitles_, v35);

  v173 = sub_1BB19E908();
  sub_1BA847C08();
  inited = swift_initStackObject();
  v37 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v38 = *v37;
  *(_QWORD *)(inited + 32) = *v37;
  v172 = (id)objc_opt_self();
  v171 = v38;
  v39 = objc_msgSend(v172, sel_systemFontOfSize_, 10.0);
  v40 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v39;
  v41 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v40;
  *(_QWORD *)(inited + 72) = v41;
  v42 = v41;
  v43 = objc_msgSend(v179, sel_secondaryLabelColor);
  v44 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 104) = v44;
  *(_QWORD *)(inited + 80) = v43;
  sub_1BA76E82C(inited);
  type metadata accessor for Key(0);
  sub_1BA50AD30((unint64_t *)&qword_1ED3B9880, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
  v45 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  objc_msgSend(v173, sel_setTitleTextAttributes_forState_, v45, 0);

  v46 = sub_1BB19E908();
  v47 = swift_initStackObject();
  *(_OWORD *)(v47 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v47 + 32) = v171;
  v48 = v171;
  *(_QWORD *)(v47 + 40) = objc_msgSend(v172, sel_systemFontOfSize_, 10.0);
  *(_QWORD *)(v47 + 64) = v40;
  *(_QWORD *)(v47 + 72) = v42;
  v49 = v42;
  v50 = objc_msgSend(v179, sel_secondaryLabelColor);
  *(_QWORD *)(v47 + 104) = v44;
  *(_QWORD *)(v47 + 80) = v50;
  sub_1BA76E82C(v47);
  v51 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  objc_msgSend(v46, sel_setTitleTextAttributes_forState_, v51, 1);

  v52 = objc_msgSend(v1, sel_navigationItem);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1BB895110;
  v54 = (void *)sub_1BB872970();
  v55 = (void *)objc_opt_self();
  v56 = objc_msgSend(v55, sel_systemImageNamed_, v54);

  if (!v56)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v57 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v58 = v1;
  v59 = objc_msgSend(v57, sel_initWithImage_style_target_action_, v56, 0, v58, sel_doToggleSidebar);

  *(_QWORD *)(v53 + 32) = v59;
  swift_retain();
  v60 = sub_1BB86D2D0();
  swift_release();
  sub_1BB0741C0(v60, 0x69662E72656C7572, 0xEA00000000006C6CLL, 0x72656C7572, 0xE500000000000000);
  *(_QWORD *)(v53 + 40) = v61;
  *(_QWORD *)(v53 + 48) = sub_1BB19EBD8();
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v62 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_setLeftBarButtonItems_, v62);

  v63 = objc_msgSend(v58, sel_navigationItem);
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1BB895110;
  v65 = (void *)sub_1BB872970();
  v66 = objc_msgSend(v55, sel_systemImageNamed_, v65);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  v67 = objc_allocWithZone((Class)sub_1BB870A08());
  *(_QWORD *)(v64 + 32) = sub_1BB8709FC();
  *(_QWORD *)(v64 + 40) = sub_1BB19ECD0();
  swift_retain();
  v68 = sub_1BB86E4AC();
  swift_release();
  sub_1BB074490(v68, 0xD000000000000017, 0x80000001BB97D300, 0xD000000000000012, 0x80000001BB979F80);
  *(_QWORD *)(v64 + 48) = v69;
  v187 = v64;
  sub_1BB872DCC();
  v70 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v63, sel_setRightBarButtonItems_, v70);

  v71 = objc_msgSend(v58, sel_navigationItem);
  v72 = *(_QWORD *)&v58[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView];
  objc_msgSend(v71, sel_setTitleView_, v72);

  v73 = objc_msgSend(v58, sel_navigationItem);
  v74 = sub_1BB19EA6C();
  objc_msgSend(v73, sel_ts_setBottomPaletteWithContentView_, v74);

  v75 = objc_msgSend(v58, sel_navigationItem);
  v76 = objc_msgSend(v179, sel_secondarySystemBackgroundColor);
  sub_1BB80F468(v75, (uint64_t)v76);

  v77 = *(void **)(v72 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onHistoryTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v78 = v77;

  swift_release();
  v79 = *(void **)(v72 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onPackageTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v80 = v79;

  swift_release();
  v81 = *(void **)(v72 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onErrorTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v82 = v81;

  swift_release();
  v83 = *(void **)(v72 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onServerTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v84 = v83;

  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  v178 = v55;
  sub_1BB86E4B8();
  swift_release();
  v85 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  v86 = objc_msgSend(v179, sel_systemBlueColor);
  objc_msgSend(v85, sel_setTintColor_, v86);

  v87 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerNextBarButtonItem, 0x2E64726177726F66, 0xEE00656C63726963, (uint64_t *)&selRef_doBreakpointNext);
  v88 = objc_msgSend(v179, sel_systemBlueColor);
  objc_msgSend(v87, sel_setTintColor_, v88);

  v89 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOverBarButtonItem, 0xD00000000000001ALL, 0x80000001BB97D440, (uint64_t *)&selRef_doBreakpointStepOver);
  v90 = objc_msgSend(v179, sel_systemBlueColor);
  objc_msgSend(v89, sel_setTintColor_, v90);

  v91 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepInBarButtonItem, 0xD000000000000019, 0x80000001BB97D420, (uint64_t *)&selRef_doBreakpointStepIn);
  v92 = objc_msgSend(v179, sel_systemBlueColor);
  objc_msgSend(v91, sel_setTintColor_, v92);

  v93 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOutBarButtonItem, 0xD000000000000017, 0x80000001BB97D400, (uint64_t *)&selRef_doBreakpointStepOut);
  v94 = objc_msgSend(v179, sel_systemBlueColor);
  objc_msgSend(v93, sel_setTintColor_, v94);

  swift_retain();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB1A2AD4(v187);
  v96 = v95;
  v97 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v98 = v58;
  v180 = objc_msgSend(v97, sel_initWithImage_style_target_action_, v96, 0, v98, sel_doLightDarkMode);

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB1A2BFC(v187);
  v100 = v99;
  v101 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v102 = v98;
  v103 = objc_msgSend(v101, sel_initWithImage_style_target_action_, v100, 0, v102, sel_doInterfaceLayoutDirection);

  v104 = (void *)sub_1BB872970();
  v105 = objc_msgSend(v178, sel_systemImageNamed_, v104);

  v106 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v107 = v102;
  v108 = objc_msgSend(v106, (SEL)&selRef_layoutMargins + 6, v105, 0, v107, sel_doToggleConsoleDisplay);

  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  v109 = swift_allocObject();
  *(_OWORD *)(v109 + 16) = xmmword_1BB8F4F00;
  *(_QWORD *)(v109 + 32) = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  v110 = (void *)sub_1BB872970();
  v111 = objc_msgSend(v178, sel_systemImageNamed_, v110);

  if (!v111)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v112 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v113 = v107;
  v114 = objc_msgSend(v112, sel_initWithImage_style_target_action_, v111, 0, v113, sel_doDevicesWithSender_);

  *(_QWORD *)(v109 + 40) = v114;
  *(_QWORD *)(v109 + 48) = v180;
  *(_QWORD *)(v109 + 56) = v103;
  v181 = v180;
  v175 = v103;
  swift_retain();
  v115 = sub_1BB86D2D0();
  swift_release();
  sub_1BB0741C0(v115, 0x6172642E646E6168, 0xEE006C6C69662E77, 0x6172642E646E6168, 0xE900000000000077);
  *(_QWORD *)(v109 + 64) = v116;
  v117 = (void *)sub_1BB872970();
  v118 = objc_msgSend(v178, sel_ts_internalSystemImageNamed_, v117);

  if (!v118)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v119 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v120 = v113;
  v121 = objc_msgSend(v119, sel_initWithImage_style_target_action_, v118, 0, v120, sel_doAccessibilityWithSender_);

  *(_QWORD *)(v109 + 72) = v121;
  *(_QWORD *)(v109 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(_QWORD *)(v109 + 88) = sub_1BB19E908();
  *(_QWORD *)(v109 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(_QWORD *)(v109 + 104) = v108;
  sub_1BB872DCC();
  *(_QWORD *)&v120[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editorToolbarItems] = v109;
  v122 = v108;
  swift_bridgeObjectRelease();
  v123 = sub_1BB8733B4();
  if (v123)
  {
    v124 = (void *)v123;
    swift_bridgeObjectRetain();
    v125 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v124, sel_setToolbarItems_, v125);

  }
  v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_1BB8F4F10;
  *(_QWORD *)(v126 + 32) = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  *(_QWORD *)(v126 + 40) = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerNextBarButtonItem, 0x2E64726177726F66, 0xEE00656C63726963, (uint64_t *)&selRef_doBreakpointNext);
  *(_QWORD *)(v126 + 48) = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOverBarButtonItem, 0xD00000000000001ALL, 0x80000001BB97D440, (uint64_t *)&selRef_doBreakpointStepOver);
  *(_QWORD *)(v126 + 56) = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepInBarButtonItem, 0xD000000000000019, 0x80000001BB97D420, (uint64_t *)&selRef_doBreakpointStepIn);
  *(_QWORD *)(v126 + 64) = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOutBarButtonItem, 0xD000000000000017, 0x80000001BB97D400, (uint64_t *)&selRef_doBreakpointStepOut);
  *(_QWORD *)(v126 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(_QWORD *)(v126 + 80) = sub_1BB19E908();
  *(_QWORD *)(v126 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(_QWORD *)(v126 + 96) = v122;
  sub_1BB872DCC();
  *(_QWORD *)&v120[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_debuggerToolbarItems] = v126;
  v170 = v122;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BB86D2DC();
  swift_release();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BB86D2DC();
  swift_release();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  v127 = *(_QWORD *)(v182 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider);
  v128 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v129 = *(_QWORD *)(v127 + 32);
  *(_QWORD *)(v127 + 32) = sub_1BB1B06B4;
  *(_QWORD *)(v127 + 40) = v128;
  sub_1BA49EBE0(v129);
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2DC();
  swift_release();
  swift_retain();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  swift_release();
  sub_1BB86E470();
  swift_release();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  v130 = sub_1BB19EA6C();
  v131 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v132 = (uint64_t *)&v130[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_onShowSourceMap];
  swift_beginAccess();
  v133 = *v132;
  *v132 = (uint64_t)sub_1BB1B06BC;
  v132[1] = v131;
  sub_1BA49EBE0(v133);

  v134 = (void *)*MEMORY[0x1E0DC48E8];
  v183 = (void *)*MEMORY[0x1E0DC4508];
  v135 = (void *)*MEMORY[0x1E0DC45B8];
  v184 = (void *)*MEMORY[0x1E0DC44E0];
  v136 = (void *)*MEMORY[0x1E0DC4528];
  v185 = (void *)*MEMORY[0x1E0DC44D0];
  v137 = (void *)objc_opt_self();
  v138 = v134;
  v139 = v183;
  v140 = v135;
  v174 = v184;
  v176 = v136;
  v177 = v185;
  v141 = v138;
  v142 = objc_msgSend(v137, sel_defaultCenter);
  objc_msgSend(v142, sel_addObserver_selector_name_object_, v120, sel_doReload, v141, 0);

  v143 = v139;
  v144 = objc_msgSend(v137, sel_defaultCenter);
  objc_msgSend(v144, sel_addObserver_selector_name_object_, v120, sel_doReload, v143, 0);

  v145 = v140;
  v146 = objc_msgSend(v137, sel_defaultCenter);
  objc_msgSend(v146, sel_addObserver_selector_name_object_, v120, sel_doReload, v145, 0);

  v147 = v174;
  v148 = objc_msgSend(v137, sel_defaultCenter);
  objc_msgSend(v148, sel_addObserver_selector_name_object_, v120, sel_doReload, v147, 0);

  v149 = v176;
  v150 = objc_msgSend(v137, sel_defaultCenter);
  objc_msgSend(v150, sel_addObserver_selector_name_object_, v120, sel_doReload, v149, 0);

  v151 = v177;
  v152 = objc_msgSend(v137, sel_defaultCenter);
  objc_msgSend(v152, sel_addObserver_selector_name_object_, v120, sel_doReload, v151, 0);

  type metadata accessor for Name(0);
  swift_arrayDestroy();
  v153 = *(void **)&v120[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController];
  objc_msgSend(v120, sel_addChildViewController_, v153);
  v154 = objc_msgSend(v120, sel_view);
  if (!v154)
    goto LABEL_28;
  v155 = v154;
  v156 = objc_msgSend(v153, sel_view);
  if (!v156)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v157 = v156;
  objc_msgSend(v155, sel_addSubview_, v156);

  objc_msgSend(v153, sel_didMoveToParentViewController_, v120);
  v158 = objc_msgSend(v153, sel_view);
  if (!v158)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v159 = v158;
  v160 = objc_msgSend(v120, sel_view);
  if (v160)
  {
    v161 = v160;
    objc_msgSend(v160, sel_bounds);
    v163 = v162;
    v165 = v164;
    v167 = v166;
    v169 = v168;

    objc_msgSend(v159, sel_setFrame_, v163, v165, v167, v169);
    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    sub_1BB86E470();
    swift_release();
    swift_retain();
    sub_1BB86E4AC();
    swift_release();
    sub_1BB86E470();

    swift_release();
    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1BB1A16B4()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  objc_super v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  v2 = (objc_class *)type metadata accessor for DebugFormatHistoryViewController();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_sections] = MEMORY[0x1E0DEE9D8];
  v4 = OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_tableView;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  swift_retain();
  v6 = v3;
  *(_QWORD *)&v3[v4] = objc_msgSend(v5, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_editor] = v1;
  swift_retain();

  v15.receiver = v6;
  v15.super_class = v2;
  v7 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v7);
  objc_msgSend(v8, sel_setModalPresentationStyle_, 7);
  v9 = objc_msgSend(v8, sel_popoverPresentationController);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_setSourceView_, *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView)+ OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton));

  }
  v11 = objc_msgSend(v8, sel_popoverPresentationController);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_setPermittedArrowDirections_, 1);

  }
  v13 = (void *)sub_1BB8733B4();
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_presentViewController_animated_completion_, v8, 1, 0);

  }
}

uint64_t sub_1BB1A188C()
{
  char *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char *v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD __dst[43];

  v1 = (uint64_t)v0;
  memcpy(__dst, &v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages], 0x150uLL);
  v2 = __dst[22];
  v28 = __dst[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAF8EA94((uint64_t)__dst);
  sub_1BA5E34E0(v2);
  v3 = swift_bridgeObjectRetain();
  sub_1BA5E34E0(v3);
  v4 = swift_bridgeObjectRetain();
  sub_1BA5E34E0(v4);
  sub_1BAF8FB4C((uint64_t)__dst);
  v26 = v0;
  if (!(v28 >> 62))
  {
    v5 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v0;
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_15:

    return swift_bridgeObjectRelease_n();
  }
LABEL_26:
  v25 = (id)v1;
  swift_bridgeObjectRetain();
  v5 = sub_1BB873F30();
  if (!v5)
    goto LABEL_15;
LABEL_3:
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  v1 = 4;
  while (1)
  {
    v7 = v1 - 4;
    if ((v28 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x1BCCE4630](v1 - 4, v28);
      v9 = v1 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_25;
    }
    else
    {
      v8 = *(_QWORD *)(v28 + 8 * v1);
      swift_retain();
      v9 = v1 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    v11 = *(_QWORD *)(v8 + 16);
    v10 = *(_QWORD *)(v8 + 24);
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if (v11 == v28 && v10 == v29)
    {
      v15 = v26;

      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v13 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      break;
    swift_release();
    ++v1;
    if (v9 == v5)
      goto LABEL_15;
  }
  v15 = v26;

LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = objc_allocWithZone((Class)type metadata accessor for DebugFormatGroupViewController());
  swift_retain();
  swift_retain();
  v17 = sub_1BB17FA4C(v27, v8, 1);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A40]), sel_initWithRootViewController_, v17);
  objc_msgSend(v18, sel_setModalPresentationStyle_, 7);
  v19 = objc_msgSend(v18, sel_popoverPresentationController);
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, sel_setSourceView_, *(_QWORD *)(*(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView]+ OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton));

  }
  v21 = objc_msgSend(v18, sel_popoverPresentationController);
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, sel_setPermittedArrowDirections_, 1);

  }
  v23 = (void *)sub_1BB8733B4();
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, sel_presentViewController_animated_completion_, v18, 1, 0);

  }
  return swift_release();
}

void sub_1BB1A1BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  objc_super v24;
  uint64_t v25;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  v3 = (objc_class *)type metadata accessor for DebugFormatCompilerViewController();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_tableView;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  swift_retain();
  v7 = v4;
  *(_QWORD *)&v4[v5] = objc_msgSend(v6, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_throttler;
  sub_1BB86E434();
  v25 = sub_1BB86E428();
  sub_1BB0B4C7C();
  swift_allocObject();
  *(_QWORD *)&v7[v8] = sub_1BB86EC98();
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_editor] = v2;
  sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B1400, (uint64_t)&type metadata for DebugFormatCompilerSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  v10 = qword_1EF2A7438;
  swift_retain();
  if (v10 != -1)
    swift_once();
  v11 = sub_1BB86EB84();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EF3D0990);
  v12 = sub_1BB86EB24();
  v14 = v13;
  swift_retain();
  v15 = sub_1BB0B3950((uint64_t)&unk_1E7270638, v2);
  swift_release();
  *(_QWORD *)(v9 + 32) = 0x72656C69706D6F43;
  *(_QWORD *)(v9 + 40) = 0xE800000000000000;
  *(_QWORD *)(v9 + 48) = v12;
  *(_QWORD *)(v9 + 56) = v14;
  *(_QWORD *)(v9 + 64) = v15;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_sections] = v9;

  v24.receiver = v7;
  v24.super_class = v3;
  v16 = objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v16);
  objc_msgSend(v17, sel_setModalPresentationStyle_, 7);
  v18 = objc_msgSend(v17, sel_popoverPresentationController);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_setSourceView_, *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView)+ OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton));

  }
  v20 = objc_msgSend(v17, sel_popoverPresentationController);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, sel_setPermittedArrowDirections_, 1);

  }
  v22 = (void *)sub_1BB8733B4();
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, sel_presentViewController_animated_completion_, v17, 1, 0);

  }
}

void sub_1BB1A1EBC(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    a2();

  }
}

void sub_1BB1A1F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  _QWORD v29[6];

  v0 = MEMORY[0x1E0DEA968];
  v1 = MEMORY[0x1E0DB5958];
  sub_1BA50CAA8(0, (unint64_t *)&unk_1EF2BCEB0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], MEMORY[0x1E0DB5718]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v29 - v5;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C3230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB57C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BB86D360();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
  sub_1BAC87E60();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87FC80;
  sub_1BA50CAA8(0, (unint64_t *)&unk_1EF2BCEC0, v0, v1, MEMORY[0x1E0DB5770]);
  v9 = v8;
  if (qword_1EF2A6D60 != -1)
    swift_once();
  v10 = *MEMORY[0x1E0DB5710];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v11(v6, v10, v3);
  swift_retain();
  v12 = sub_1BB86D30C();
  *(_QWORD *)(v7 + 56) = v9;
  v13 = sub_1BB1AFE60();
  *(_QWORD *)(v7 + 64) = v13;
  *(_QWORD *)(v7 + 32) = v12;
  if (qword_1EF2A6D68 != -1)
    swift_once();
  v11(v6, v10, v3);
  swift_retain();
  v14 = sub_1BB86D30C();
  *(_QWORD *)(v7 + 96) = v9;
  *(_QWORD *)(v7 + 104) = v13;
  *(_QWORD *)(v7 + 72) = v14;
  if (qword_1EF2A6D70 != -1)
    swift_once();
  v11(v6, v10, v3);
  swift_retain();
  v15 = sub_1BB86D30C();
  *(_QWORD *)(v7 + 136) = v9;
  *(_QWORD *)(v7 + 144) = v13;
  *(_QWORD *)(v7 + 112) = v15;
  sub_1BB86D354();
  v16 = sub_1BB8703CC();
  swift_allocObject();
  v17 = sub_1BB8703C0();
  v29[4] = v16;
  v29[5] = MEMORY[0x1E0DB8E40];
  v29[1] = v17;
  v18 = objc_allocWithZone((Class)sub_1BB87072C());
  v19 = (void *)sub_1BB870720();

  v20 = objc_msgSend(v19, sel_navigationItem);
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v21 = (void *)sub_1BB872D9C();
  objc_msgSend(v20, sel_setRightBarButtonItems_, v21);

  v22 = objc_msgSend(v19, sel_navigationItem);
  v23 = (void *)sub_1BB872970();
  objc_msgSend(v22, sel_setTitle_, v23);

  v24 = objc_msgSend(objc_allocWithZone((Class)sub_1BB870D2C()), sel_initWithRootViewController_, v19);
  objc_msgSend(v24, sel_setModalPresentationStyle_, 7);
  v25 = objc_msgSend(v24, sel_popoverPresentationController);
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, sel_setSourceView_, *(_QWORD *)(*(_QWORD *)(v29[0] + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView)+ OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton));

  }
  v27 = (void *)sub_1BB8733B4();
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, sel_presentViewController_animated_completion_, v24, 1, 0);

  }
}

uint64_t sub_1BB1A23B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  result = MEMORY[0x1BCCE5D40](a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate);
  if (result)
  {
    if (v2)
    {
      v4 = sub_1BB58ADD4();
      v6 = v5;
    }
    else
    {
      v4 = 0;
      v6 = 0;
    }
    sub_1BB1EDC20(v4, v6);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BB1A2448(uint64_t a1, _BYTE *a2)
{
  if (*a2)
  {
    if (*a2 == 1)
      sub_1BB1A2484();
  }
  else
  {
    sub_1BB1A2724();
  }
}

uint64_t sub_1BB1A2484()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v14[6];

  v1 = v0;
  v2 = sub_1BB19EBD8();
  objc_msgSend(v2, sel_setEnabled_, 0);

  v3 = sub_1BB19ECD0();
  objc_msgSend(v3, sel_setEnabled_, 0);

  v4 = sub_1BB8733B4();
  if (v4)
  {
    v5 = (void *)v4;
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    swift_bridgeObjectRetain();
    v6 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setToolbarItems_, v6);

  }
  swift_retain();
  sub_1BB86D2C4();
  swift_release();
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  v7 = (void *)objc_opt_self();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BB1B06C4;
  *(_QWORD *)(v9 + 24) = v8;
  v14[4] = sub_1BAEFCC00;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BA4D7928;
  v14[3] = &block_descriptor_101_0;
  v10 = _Block_copy(v14);
  v11 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_performWithoutAnimation_, v10);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if (!LOBYTE(v14[0]))
    {
      LOBYTE(v14[0]) = 1;
      swift_retain();
      sub_1BB86D2C4();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1BB1A2724()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23[128];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 __dst;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  _QWORD v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;

  v1 = sub_1BB19EBD8();
  objc_msgSend(v1, sel_setEnabled_, 1);

  v2 = sub_1BB19ECD0();
  objc_msgSend(v2, sel_setEnabled_, 1);

  v3 = sub_1BB8733B4();
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    swift_bridgeObjectRetain();
    v5 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setToolbarItems_, v5);

  }
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v7 = v39;
  if (!v39)
    goto LABEL_11;
  v8 = v38;
  v10 = v40;
  v9 = v41;
  v11 = v42;
  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 40);
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BA6E35A8(v38, v39);
    if ((v15 & 1) != 0)
    {
      v16 = (__int128 *)(*(_QWORD *)(v13 + 56) + (v14 << 7));
      v18 = v16[2];
      v17 = v16[3];
      v19 = v16[1];
      v24 = *v16;
      v25 = v19;
      v26 = v18;
      v27 = v17;
      v20 = v16[4];
      v21 = v16[5];
      v22 = v16[7];
      v30 = v16[6];
      v31 = v22;
      v28 = v20;
      v29 = v21;
      memmove(&__dst, v16, 0x80uLL);
      nullsub_1();
      sub_1BB0F0E74(&v24);
    }
    else
    {
      sub_1BA8EBB18(&__dst);
    }
  }
  else
  {
    sub_1BA8EBB18(&__dst);
    swift_bridgeObjectRetain();
  }
  sub_1BAF97E40((uint64_t)&__dst, (uint64_t)v37);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BAF97E40((uint64_t)v37, (uint64_t)&__dst);
  if (sub_1BA8CF120((uint64_t)&__dst) == 1)
  {
    sub_1BA8EBAE8(v8, v7, v10, v9, v11);
LABEL_11:
    swift_retain();
    sub_1BB86E494();
    swift_release();
    sub_1BAF97E40((uint64_t)&__dst, (uint64_t)v37);
    sub_1BAF97E40((uint64_t)v37, (uint64_t)&v24);
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    return;
  }
  v24 = __dst;
  *(_QWORD *)&v25 = v33;
  BYTE8(v25) = v34;
  v26 = v35;
  *(_QWORD *)&v27 = v8;
  *((_QWORD *)&v27 + 1) = v7;
  *(_QWORD *)&v28 = v10;
  *((_QWORD *)&v28 + 1) = v9;
  *(_QWORD *)&v29 = v36;
  *((_QWORD *)&v29 + 1) = v8;
  *(_QWORD *)&v30 = v7;
  *((_QWORD *)&v30 + 1) = v10;
  *(_QWORD *)&v31 = v9;
  *((_QWORD *)&v31 + 1) = v11;
  nullsub_1();
  sub_1BAF97E40((uint64_t)&v24, (uint64_t)v23);
  swift_bridgeObjectRetain();
  sub_1BAF92890(v8, v7, v10, v9, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  v23[0] = 1;
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  sub_1BA6A0C50(v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
  sub_1BA8EBAE8(v8, v7, v10, v9, v11);
}

void sub_1BB1A2AD4(unint64_t a1)
{
  BOOL v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = a1 == 2;
  if (a1 < 2)
  {
    v2 = (void *)sub_1BB872970();
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v2);

    if (v3)
      return;
    __break(1u);
  }
  if (v1)
  {
    v4 = (void *)sub_1BB872970();
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v4);

    if (v5)
      return;
    __break(1u);
  }
  v6 = (void *)sub_1BB872970();
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v6);

  if (!v7)
    __break(1u);
}

void sub_1BB1A2BFC(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  if (a1 != 1)
  {
    if (a1)
      goto LABEL_7;
    v1 = (void *)sub_1BB872970();
    v2 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v1);

    if (v2)
      return;
    __break(1u);
  }
  v3 = (void *)sub_1BB872970();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v3);

  if (v4)
    return;
  __break(1u);
LABEL_7:
  v5 = (void *)sub_1BB872970();
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v5);

  if (!v6)
    __break(1u);
}

void sub_1BB1A2D14(void *a1, unsigned __int8 *a2)
{
  int v3;
  void *v4;
  char **v5;
  id v6;

  v3 = *a2;
  v4 = (void *)objc_opt_self();
  v5 = &selRef_secondaryLabelColor;
  if (v3)
    v5 = &selRef_systemBlueColor;
  v6 = objc_msgSend(v4, *v5);
  objc_msgSend(a1, sel_setTintColor_, v6);

}

void sub_1BB1A2D8C()
{
  sub_1BB1A2D98();
}

void sub_1BB1A2D98()
{
  void *v0;

  sub_1BB86EC14();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v0 = (void *)sub_1BB87345C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1BB86E98C();
  swift_release();
  swift_release();

}

void sub_1BB1A2E54()
{
  void *v0;

  sub_1BB86EC14();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v0 = (void *)sub_1BB87345C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1BB86E98C();
  swift_release();
  swift_release();

}

void sub_1BB1A2F10(uint64_t a1, _BYTE *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;

  byte_1EF3D0978 = *a2 == 29;
  sub_1BB23126C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController));
  v3 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  objc_msgSend(v3, sel_setOverrideUserInterfaceStyle_, v5);
  sub_1BB86EC14();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v4 = (void *)sub_1BB87345C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1BB86E98C();
  swift_release();
  swift_release();

}

void sub_1BB1A3044(uint64_t a1)
{
  sub_1BB1A3050(a1);
}

void sub_1BB1A3050(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  sub_1BB23126C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController));
  v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  objc_msgSend(v2, sel_setOverrideUserInterfaceStyle_, v4);
  sub_1BB86EC14();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v3 = (void *)sub_1BB87345C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1BB86E98C();
  swift_release();
  swift_release();

}

void sub_1BB1A3170()
{
  sub_1BB1A317C();
}

void sub_1BB1A317C()
{
  void *v0;

  sub_1BB86EC14();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v0 = (void *)sub_1BB87345C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1BB86E98C();
  swift_release();
  swift_release();

}

id sub_1BB1A3234(uint64_t a1, unsigned __int8 *a2)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView), sel_setAlwaysBounceVertical_, *a2);
}

id sub_1BB1A3250(uint64_t a1, unsigned __int8 *a2)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView), sel_setAlwaysBounceHorizontal_, *a2);
}

void sub_1BB1A326C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  char *v3;
  objc_class *v4;
  char *v5;
  char *v6;
  objc_super v7;
  objc_super v8;

  v2 = *a2;
  v3 = sub_1BB19E888();
  v4 = (objc_class *)type metadata accessor for DebugFormatOverlayView();
  v8.receiver = v3;
  v8.super_class = v4;
  objc_msgSendSuper2(&v8, sel_setUserInteractionEnabled_, v2);
  v7.receiver = v3;
  v7.super_class = v4;
  if ((objc_msgSendSuper2(&v7, sel_isUserInteractionEnabled) & 1) == 0)
  {
    v5 = &v3[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
    *(_OWORD *)v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
    sub_1BB2E2034();
    v6 = &v3[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
    *(_OWORD *)v6 = 0u;
    *((_OWORD *)v6 + 1) = 0u;
    sub_1BB2E2058();
  }

}

void sub_1BB1A331C(char *a1, _BYTE *a2)
{
  id v3;
  id v4;

  *(_BYTE *)(*(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView]
           + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden) = (*a2 & 1) == 0;
  sub_1BACC7688();
  v3 = objc_msgSend(a1, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setNeedsLayout);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BB1A33A0(void *a1, unsigned __int8 *a2)
{
  int v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *a2;
  v4 = (void *)sub_1BB8733B4();
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_navigationController);

    if (v6)
    {
      objc_msgSend(v6, sel_setToolbarHidden_animated_, v3 ^ 1u, 1);

    }
  }
  v7 = objc_msgSend(a1, sel_view);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_setNeedsLayout);

  }
  else
  {
    __break(1u);
  }
}

id sub_1BB1A344C(uint64_t a1, _QWORD *a2)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView), sel_setOverrideUserInterfaceStyle_, *a2);
}

void sub_1BB1A3468(char *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;

  v6 = *a2;
  v7 = a3 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1BCCE5D40](v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (void *)a4(v6);
    objc_msgSend(v9, sel_setImage_, v10);

  }
  v11 = &a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  v12 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController];
  sub_1BB23126C((uint64_t)v12);
  v13 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView];
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  objc_msgSend(v13, sel_setOverrideUserInterfaceStyle_, v20);
  v14 = objc_msgSend(v12, sel_view);
  if (!v14)
  {
    __break(1u);
    goto LABEL_8;
  }
  v15 = v14;
  objc_msgSend(v14, sel_layoutIfNeeded);

  v16 = objc_msgSend(a1, sel_view);
  if (!v16)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = v16;
  objc_msgSend(v16, sel_setNeedsLayout);

  v18 = objc_msgSend(a1, sel_view);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_layoutIfNeeded);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1BB1A35FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = a1 + 16;
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)3, 0, 0, 0xD00000000000002FLL, 0x80000001BB97D350);
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    MEMORY[0x1E0C80A78](v2);
    sub_1BB86EC14();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v4 = (void *)sub_1BB87345C();
    type metadata accessor for DebugFormatEditorViewController();
    sub_1BB86E98C();

    swift_release();
    swift_release();

  }
}

void sub_1BB1A3760(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;

  sub_1BA4B07F0(0, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - v4;
  sub_1BA5E01A4(a2, (uint64_t)&v12 - v4, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  v6 = type metadata accessor for FormatDebuggerContext();
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  v8 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  v9 = (void *)sub_1BB872970();
  if (v7 == 1)
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

    objc_msgSend(v8, sel_setImage_, v10);
  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

    objc_msgSend(v8, sel_setImage_, v11);
    sub_1BA5C699C((uint64_t)v5, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  }
}

void sub_1BB1A394C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a2;
  v3 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  if (*(_QWORD *)(v2 + 16) && (swift_retain(), sub_1BB86E494(), swift_release(), v5))
  {
    swift_release();
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, sel_setEnabled_, v4);

}

void sub_1BB1A3A14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a2;
  v3 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  swift_retain();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v4)
    v5 = v2 == 0;
  else
    v5 = 1;
  v6 = !v5;
  objc_msgSend(v3, sel_setEnabled_, v6);

}

void sub_1BB1A3AEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9[4];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9[0] = v2;
    v9[1] = v3;
    v9[2] = v4;
    v9[3] = v5;
    sub_1BB1A3B60(v9);

  }
}

uint64_t sub_1BB1A3B60(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25[4];
  _BYTE v26[128];
  _OWORD v27[2];
  uint64_t v28;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - v6;
  v8 = type metadata accessor for DebugFormatCacheFile();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a1[1];
  v21 = a1[2];
  v22 = v12;
  v20 = a1[3];
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if (!*(_QWORD *)&v27[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1EF2A9CE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  }
  v14 = *(_QWORD *)(*(_QWORD *)&v27[0] + 32);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_1BA6E35A8(v22, v13);
    if ((v16 & 1) != 0)
    {
      sub_1BB1AEDB4(*(_QWORD *)(v14 + 56) + *(_QWORD *)(v9 + 72) * v15, (uint64_t)v7);
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v17(v7, 0, 1, v8);
    }
    else
    {
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v17(v7, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v17(v7, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1EF2A9CE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB1AEDB4((uint64_t)v11, (uint64_t)v4);
  v17(v4, 0, 1, v8);
  v25[0] = v22;
  v25[1] = v13;
  v25[2] = v21;
  v25[3] = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v23[0] = v27[0];
  v23[1] = v27[1];
  v24 = v28;
  sub_1BA8EB6E0((uint64_t)v4, v25, (uint64_t *)v23, (uint64_t)v26);
  sub_1BAF97E40((uint64_t)v26, (uint64_t)v27);
  sub_1BAF97E40((uint64_t)v27, (uint64_t)v23);
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  v26[0] = 1;
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
}

void sub_1BB1A3E94(uint64_t a1, unsigned __int8 *a2)
{
  int v2;
  id v3;
  id v4;

  v2 = *a2;
  v3 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController), sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setHidden_, v2 ^ 1u);

  }
  else
  {
    __break(1u);
  }
}

id sub_1BB1A3EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[16];
  _QWORD v6[16];

  sub_1BAF97E40(a2, (uint64_t)v5);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController)
     + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile;
  sub_1BAF97E40(v3, (uint64_t)v6);
  sub_1BAF97E40((uint64_t)v5, v3);
  sub_1BA6A0C50(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAFC6A8C);
  sub_1BA6A0C50(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
  return sub_1BB0EDD68();
}

uint64_t sub_1BB1A3FC0(char a1)
{
  if ((a1 & 1) != 0)
    return sub_1BB1A4028();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB1A4028()
{
  uint64_t v0;
  void *v1;
  double v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  double v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView);
  objc_msgSend(v1, sel_setZoomScale_animated_, 0, 1.0);
  sub_1BB1A4A20(v1);
  objc_msgSend(v1, sel_adjustedContentInset);
  objc_msgSend(v1, sel_setContentOffset_animated_, 0, 0.0, -v2);
  v3 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController)
                + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView);
  v4 = (void *)objc_opt_self();
  v5 = v3;
  v6 = objc_msgSend(v4, sel_mainScreen);
  objc_msgSend(v6, sel_scale);
  v8 = v7;

  sub_1BB4309B8(v8);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BB1A4154(int a1, char *a2)
{
  char *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v3 = &a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v3[32] = 1;
  v4 = objc_msgSend(a2, sel_view);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setNeedsLayout);

    v6 = objc_msgSend(a2, sel_view);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_layoutIfNeeded);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BB1A4200(char a1)
{
  void *v1;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  char v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  v3 = (void *)sub_1BB8733B4();
  v4 = v3;
  if (v3)
  {
    v5 = objc_msgSend(v3, sel_navigationController);

    v4 = objc_msgSend(v5, sel_toolbar);
  }
  sub_1BB80F56C(v4);

  v6 = (void *)sub_1BB8733B4();
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_navigationController);

    if (v8)
    {
      swift_retain();
      sub_1BB86D2B8();
      swift_release();
      objc_msgSend(v8, sel_setToolbarHidden_animated_, (v9 & 1) == 0, 0);

    }
  }
}

id sub_1BB1A4360()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id result;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  void *v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  void *v49;
  uint64_t v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double Width;
  char *v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  char *v69;
  id v70;
  id v71;
  uint64_t v72;
  unsigned __int8 v73;
  void *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  void *v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  double v94;
  CGFloat v95;
  double v96;
  CGFloat v97;
  double v98;
  void *v99;
  double v100;
  CGFloat v101;
  double v102;
  CGFloat v103;
  double v104;
  CGFloat v105;
  double v106;
  CGFloat v107;
  double Height;
  void *v109;
  void *v110;
  double v111;
  char *v112;
  void *v113;
  double v114;
  CGFloat v115;
  double v116;
  CGFloat v117;
  CGFloat *v118;
  void *v119;
  void *v120;
  uint64_t v121;
  unsigned __int8 v122;
  objc_super v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BB86D7A4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123.receiver = v1;
  v123.super_class = ObjectType;
  objc_msgSendSuper2(&v123, sel_viewWillLayoutSubviews, v5);
  v8 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  v10 = result;
  objc_msgSend(result, sel_bounds);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  objc_msgSend(v8, sel_setFrame_, v12, v14, v16, v18);
  v19 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView];
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v20 = result;
  objc_msgSend(result, sel_bounds);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  objc_msgSend(v19, sel_setFrame_, v22, v24, v26, v28);
  v29 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView];
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v30 = result;
  objc_msgSend(result, sel_bounds);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  objc_msgSend(v29, sel_setFrame_, v32, v34, v36, v38);
  result = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController], sel_view);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v39 = result;
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v40 = result;
  v121 = v4;
  objc_msgSend(result, sel_bounds);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;

  objc_msgSend(v39, sel_setFrame_, v42, v44, v46, v48);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v49 = result;
  v50 = v3;
  objc_msgSend(result, sel_bounds);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v58 = v57;

  v124.origin.x = v52;
  v124.origin.y = v54;
  v124.size.width = v56;
  v124.size.height = v58;
  Width = CGRectGetWidth(v124);
  v60 = sub_1BB19EA6C();
  objc_msgSend(v60, sel_frame);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;

  v131.origin.x = 0.0;
  v131.origin.y = 0.0;
  v131.size.height = 22.0;
  v125.origin.x = v62;
  v125.origin.y = v64;
  v125.size.width = v66;
  v125.size.height = v68;
  v131.size.width = Width;
  if (!CGRectEqualToRect(v125, v131))
  {
    v69 = sub_1BB19EA6C();
    objc_msgSend(v69, sel_setFrame_, 0.0, 0.0, Width, 22.0);

    v70 = objc_msgSend(v1, sel_navigationItem);
    v126.origin.x = 0.0;
    v126.origin.y = 0.0;
    v126.size.height = 22.0;
    v126.size.width = Width;
    objc_msgSend(v70, sel_ts_setBottomPaletteMinimumHeight_, CGRectGetHeight(v126));

    v71 = objc_msgSend(v1, sel_navigationItem);
    v127.origin.x = 0.0;
    v127.origin.y = 0.0;
    v127.size.height = 22.0;
    v127.size.width = Width;
    objc_msgSend(v71, sel_ts_setBottomPalettePreferredHeight_, CGRectGetHeight(v127));

  }
  v72 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v73 = v122;
  result = objc_msgSend(v1, sel_view);
  if (!result)
    goto LABEL_23;
  v74 = result;
  sub_1BB8732C4();
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v82 = v81;
  objc_msgSend(v8, sel_safeAreaInsets);
  sub_1BB532618(v72, v74, v73, v76, v78, v80, v82, v83, v84, v85, v86);

  sub_1BB86D708();
  v88 = v87;
  (*(void (**)(char *, uint64_t))(v121 + 8))(v7, v50);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v89 = result;
  objc_msgSend(result, sel_bounds);
  v91 = v90;
  v93 = v92;
  v95 = v94;
  v97 = v96;

  v128.origin.x = v91;
  v128.origin.y = v93;
  v128.size.width = v95;
  v128.size.height = v97;
  v98 = CGRectGetWidth(v128);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v99 = result;
  objc_msgSend(result, sel_bounds);
  v101 = v100;
  v103 = v102;
  v105 = v104;
  v107 = v106;

  v129.origin.x = v101;
  v129.origin.y = v103;
  v129.size.width = v105;
  v129.size.height = v107;
  Height = CGRectGetHeight(v129);
  v109 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController];
  result = objc_msgSend(v109, sel_view);
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v110 = result;
  v111 = v98 * 0.5 - v88 * 0.5;
  objc_msgSend(result, sel_setFrame_, v111, 0.0, v88, Height);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView], sel_setFrame_, v111, 0.0, v88, Height);
  v112 = sub_1BB19E888();
  result = objc_msgSend(v109, sel_view);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v113 = result;
  objc_msgSend(result, sel_frame);
  v115 = v114;
  v117 = v116;

  v118 = (CGFloat *)&v112[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset];
  *v118 = v115;
  v118[1] = v117;
  v130 = CGRectOffset(*(CGRect *)&v112[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame], v115, v117);
  objc_msgSend(v112, sel_setFrame_, v130.origin.x, v130.origin.y, v130.size.width, v130.size.height);

  result = objc_msgSend(v109, sel_view);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v119 = result;
  objc_msgSend(result, sel_setNeedsLayout);

  result = objc_msgSend(v109, sel_view);
  if (result)
  {
    v120 = result;
    objc_msgSend(result, sel_layoutIfNeeded);

    return sub_1BB1A4A20(v8);
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_1BB1A4A20(id a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  double v5;
  char *v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double Width;
  double v13;
  double v14;
  double Height;
  double v16;
  double MinX;
  double MinY;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id result;
  id v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  CGPoint v32;
  CGPoint *v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CGAffineTransform v44;
  CGPoint v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  v2 = v1;
  v4 = *(_BYTE **)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView);
  v5 = 0.0;
  if ((v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden] & 1) == 0)
    v5 = *(double *)&v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulerSize];
  objc_msgSend(a1, sel_setContentInset_, v5, v5, 0.0, 0.0);
  v6 = *(char **)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController);
  v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView]
     + OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame;
  v8 = *(double *)(v7 + 16);
  v9 = *(double *)(v7 + 24);
  objc_msgSend(a1, sel_contentSize);
  v11 = v10;
  objc_msgSend(a1, sel_frame);
  Width = CGRectGetWidth(v46);
  if (v8 > Width)
    Width = v8;
  if (v11 <= Width)
    v11 = Width;
  objc_msgSend(a1, sel_contentSize);
  v14 = v13;
  objc_msgSend(a1, sel_frame);
  Height = CGRectGetHeight(v47);
  if (v9 > Height)
    Height = v9;
  if (v14 > Height)
    v16 = v14;
  else
    v16 = Height;
  objc_msgSend(a1, sel_setContentSize_, v11, v16);
  objc_msgSend(a1, sel_bounds);
  MinX = CGRectGetMinX(v48);
  objc_msgSend(a1, sel_bounds);
  MinY = CGRectGetMinY(v49);
  objc_msgSend(a1, sel_safeAreaInsets);
  v20 = MinY + v19;
  objc_msgSend(a1, sel_bounds);
  v21 = CGRectGetWidth(v50);
  objc_msgSend(a1, sel_bounds);
  v22 = CGRectGetHeight(v51);
  objc_msgSend(a1, sel_safeAreaInsets);
  v24 = v22 - v23;
  objc_msgSend(a1, sel_safeAreaInsets);
  objc_msgSend(v4, sel_setFrame_, MinX, v20, v21, v24 - v25);
  result = objc_msgSend(v6, sel_view);
  if (result)
  {
    v27 = result;
    objc_msgSend(result, sel_frame);
    v29 = v28;
    v31 = v30;

    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView), sel_transform);
    v45.x = v29;
    v45.y = v31;
    v32 = CGPointApplyAffineTransform(v45, &v44);
    v33 = (CGPoint *)&v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_canvasOffset];
    *v33 = v32;
    v34 = *(char **)&v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
    *(CGPoint *)&v34[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_canvasOffset] = v32;
    objc_msgSend(v34, sel_setNeedsLayout);
    v35 = *(char **)&v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
    *(CGPoint *)&v35[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_canvasOffset] = *v33;
    objc_msgSend(v35, sel_setNeedsLayout);
    objc_msgSend(a1, sel_contentSize);
    v36 = &v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize];
    *v36 = v37;
    v36[1] = v38;
    sub_1BACC7488();
    objc_msgSend(a1, sel_bounds);
    v39 = &v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentBounds];
    *v39 = v40;
    v39[1] = v41;
    v39[2] = v42;
    v39[3] = v43;
    return sub_1BACC7524();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB1A4D60()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned __int8 v17;
  id v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  char *v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  char v39;
  id v40;
  void *v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;
  objc_super v67;
  CGRect v68;
  CGRect v69;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BB86D7A4();
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1BB86D660();
  v6 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v8 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2BAC00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v62 - v14;
  v67.receiver = v1;
  v67.super_class = ObjectType;
  v62[1] = ObjectType;
  objc_msgSendSuper2(&v67, sel_viewDidLayoutSubviews, v13);
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  sub_1BB19E4E8();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v17 = v66;
  v18 = objc_msgSend(v1, sel_view);
  if (!v18)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v19 = v18;
  v20 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
  sub_1BB8732C4();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  objc_msgSend(v20, sel_safeAreaInsets);
  sub_1BB532618(v16, v19, v17, v22, v24, v26, v28, v29, v30, v31, v32);

  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v15, v8, v63);
  v33 = type metadata accessor for DebugFormatEditorLayoutContext();
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v15[*(int *)(v33 + 20)], v5, v65);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 0, 1, v33);
  sub_1BA5E01A4((uint64_t)v15, (uint64_t)v11, &qword_1EF2BAC00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  sub_1BA5C699C((uint64_t)v15, &qword_1EF2BAC00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if ((v66 & 1) != 0)
    return;
  v34 = &v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  v35 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  v36 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds + 8];
  v37 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds + 16];
  v38 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds + 24];
  v39 = v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds + 32];
  v40 = objc_msgSend(v1, sel_view);
  if (!v40)
    goto LABEL_10;
  v41 = v40;
  objc_msgSend(v40, sel_bounds);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;

  if ((v39 & 1) != 0)
    goto LABEL_6;
  v68.origin.x = v35;
  v68.origin.y = v36;
  v68.size.width = v37;
  v68.size.height = v38;
  v69.origin.x = v43;
  v69.origin.y = v45;
  v69.size.width = v47;
  v69.size.height = v49;
  if (!CGRectEqualToRect(v68, v69))
  {
LABEL_6:
    v50 = objc_msgSend(v1, sel_view);
    if (v50)
    {
      v51 = v50;
      objc_msgSend(v50, sel_bounds);
      v53 = v52;
      v55 = v54;
      v57 = v56;
      v59 = v58;

      *(_QWORD *)v34 = v53;
      *((_QWORD *)v34 + 1) = v55;
      *((_QWORD *)v34 + 2) = v57;
      *((_QWORD *)v34 + 3) = v59;
      v34[32] = 0;
      MEMORY[0x1E0C80A78](v60);
      v62[-2] = v1;
      sub_1BB86EC14();
      v61 = (void *)sub_1BB86DE94();
      sub_1BB86E9B0();
      swift_release();
      swift_release();

      return;
    }
LABEL_11:
    __break(1u);
  }
}

uint64_t sub_1BB1A51AC(const void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  _OWORD v38[9];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _QWORD v48[42];
  _BYTE v49[336];
  _BYTE v50[152];
  unint64_t v51;
  _OWORD v52[10];

  v3 = v2;
  swift_getObjectType();
  memcpy(v48, a1, sizeof(v48));
  memcpy(v49, (const void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(v49));
  memcpy((void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), a1, 0x150uLL);
  sub_1BAF8EA94((uint64_t)v48);
  sub_1BAF8FB4C((uint64_t)v49);
  sub_1BB19E704();
  v6 = v48[25];
  v51 = v48[4];
  sub_1BAF8EA94((uint64_t)v48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB386CBC(v6);
  v7 = swift_bridgeObjectRetain();
  sub_1BB386CBC(v7);
  v8 = swift_bridgeObjectRetain();
  sub_1BB386CBC(v8);
  sub_1BAF8FB4C((uint64_t)v48);
  v9 = v51;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v10 = v51;
  v11 = *(_QWORD *)&v52[0];
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB1AC20C(v9, v10, v11, v51, *(uint64_t *)&v52[0], (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5193C4((uint64_t)v38, (uint64_t)v50, (uint64_t (*)(_QWORD))sub_1BB1AEDF8);
  sub_1BA5193C4((uint64_t)v50, (uint64_t)&v51, (uint64_t (*)(_QWORD))sub_1BB1AEDF8);
  if (sub_1BA84DAF0((uint64_t *)&v51) == 1)
  {
    sub_1BB430B08();
    if (qword_1EF2A6DB0 != -1)
      swift_once();
    type metadata accessor for DebugFormatCanvasViewController();
    sub_1BA50AD30((unint64_t *)&unk_1EF2BCDE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCanvasViewController, (uint64_t)&unk_1BB915070);
    sub_1BB86D210();
    if (LOBYTE(v38[0]) == 1)
    {
      v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      if (qword_1ED3BBA90 != -1)
        swift_once();
      objc_msgSend(v12, sel_postNotificationName_object_, qword_1ED476890, 0);

    }
    sub_1BB1A4028();
    swift_release();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    v45 = v52[6];
    v46 = v52[7];
    v47 = v52[8];
    v41 = v52[2];
    v42 = v52[3];
    v43 = v52[4];
    v44 = v52[5];
    v39 = v52[0];
    v40 = v52[1];
    v14 = v51;
    v38[0] = v52[0];
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    *(_QWORD *)&v38[0] = 0;
    *((_QWORD *)&v38[0] + 1) = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v38[0] = 0xD000000000000019;
    *((_QWORD *)&v38[0] + 1) = 0x80000001BB97CFA0;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    v16 = v38[0];
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4((void *)2, 0, 0, v16, *((uint64_t *)&v16 + 1));
    swift_bridgeObjectRelease();
    *(_QWORD *)&v38[0] = v14;
    swift_retain();
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    swift_retain();
    swift_retain();
    sub_1BB86E494();
    swift_release();
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    v17 = swift_release();
    MEMORY[0x1E0C80A78](v17);
    sub_1BB86EC14();
    v18 = (void *)sub_1BB86DE94();
    v19 = swift_allocObject();
    v20 = v43;
    *(_OWORD *)(v19 + 104) = v44;
    v21 = v46;
    *(_OWORD *)(v19 + 120) = v45;
    *(_OWORD *)(v19 + 136) = v21;
    *(_OWORD *)(v19 + 152) = v47;
    v22 = v39;
    *(_OWORD *)(v19 + 40) = v40;
    v23 = v42;
    *(_OWORD *)(v19 + 56) = v41;
    *(_OWORD *)(v19 + 72) = v23;
    *(_OWORD *)(v19 + 88) = v20;
    *(_QWORD *)(v19 + 16) = v14;
    *(_OWORD *)(v19 + 24) = v22;
    *(_QWORD *)(v19 + 168) = a2;
    swift_retain();
    sub_1BA8C88FC((uint64_t)v52);
    swift_retain();
    sub_1BB86E980();
    swift_release();

    swift_release();
    v24 = (void *)sub_1BB86DE94();
    sub_1BB86E98C();
    swift_release();

    v25 = swift_allocObject();
    v26 = v43;
    *(_OWORD *)(v25 + 104) = v44;
    v27 = v46;
    *(_OWORD *)(v25 + 120) = v45;
    *(_OWORD *)(v25 + 136) = v27;
    *(_OWORD *)(v25 + 152) = v47;
    v28 = v39;
    *(_OWORD *)(v25 + 40) = v40;
    v29 = v42;
    *(_OWORD *)(v25 + 56) = v41;
    *(_OWORD *)(v25 + 72) = v29;
    *(_OWORD *)(v25 + 88) = v26;
    *(_QWORD *)(v25 + 16) = v14;
    *(_OWORD *)(v25 + 24) = v28;
    swift_retain();
    sub_1BA8C88FC((uint64_t)v52);
    v30 = (void *)sub_1BB86E854();
    sub_1BB86EA34();
    swift_release();
    swift_release();

    v31 = (_OWORD *)swift_allocObject();
    v32 = v46;
    v31[7] = v45;
    v31[8] = v32;
    v31[9] = v47;
    v33 = v42;
    v31[3] = v41;
    v31[4] = v33;
    v34 = v44;
    v31[5] = v43;
    v31[6] = v34;
    v35 = v40;
    v31[1] = v39;
    v31[2] = v35;
    v36 = (void *)sub_1BB86E854();
    v13 = sub_1BB86E9A4();
    swift_release();
    swift_release();
    swift_release();

  }
  return v13;
}

_QWORD *sub_1BB1A58FC(void *a1)
{
  return sub_1BB1A591C(a1);
}

_QWORD *sub_1BB1A591C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  id v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  int v33;
  void (*v34)(id *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  __int128 *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _QWORD *result;
  void *v54;
  __int128 v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _QWORD *v61;
  id v62;
  id v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _BYTE v95[48];
  __int128 v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39B410, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (id *)((char *)&v80 - v4);
  v108 = a1;
  v6 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v7 = v102;
    v8 = v103;
    if (v105 >> 60 == 12)
    {
      v82 = v104;
      v84 = (id)(v105 & 0xFFFFFFFFFFFFFFFLL);
      v85 = v1;
      v83 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
      v9 = *(_QWORD *)(v83 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
      swift_retain();
      sub_1BB86DD20();
      swift_beginAccess();
      v10 = *(_QWORD *)(v9 + 40);
      if (*(_QWORD *)(v10 + 16))
      {
        swift_bridgeObjectRetain();
        v11 = sub_1BA6E35A8(v7, *((uint64_t *)&v7 + 1));
        if ((v12 & 1) != 0)
        {
          v13 = (__int128 *)(*(_QWORD *)(v10 + 56) + (v11 << 7));
          v15 = v13[2];
          v14 = v13[3];
          v16 = v13[1];
          v90 = *v13;
          v91 = v16;
          v92 = v15;
          v93 = v14;
          v17 = v13[4];
          v18 = v13[5];
          v19 = v13[7];
          *(_OWORD *)&v95[16] = v13[6];
          *(_OWORD *)&v95[32] = v19;
          v94 = v17;
          *(_OWORD *)v95 = v18;
          memmove(&v96, v13, 0x80uLL);
          nullsub_1();
          sub_1BB0F0E74(&v90);
        }
        else
        {
          sub_1BA8EBB18(&v96);
        }
      }
      else
      {
        sub_1BA8EBB18(&v96);
        swift_bridgeObjectRetain();
      }
      sub_1BAF97E40((uint64_t)&v96, (uint64_t)&v102);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_release();
      sub_1BAF97E40((uint64_t)&v102, (uint64_t)&v96);
      if (sub_1BA8CF120((uint64_t)&v96) == 1)
      {

        swift_bridgeObjectRelease();
        v20 = 1;
      }
      else
      {
        v22 = v99;
        v21 = v100;
        v86 = v7;
        v87 = v8;
        v88 = v82;
        sub_1BA8EBC94(v99, v100, (uint64_t *)&v86, v84, (uint64_t *)&v90);
        swift_bridgeObjectRelease();
        v23 = *((_QWORD *)&v90 + 1);
        v81 = v91;
        v82 = v90;
        v80 = *((_QWORD *)&v91 + 1);
        v90 = v96;
        *(_QWORD *)&v91 = v97;
        BYTE8(v91) = v98;
        *(_QWORD *)&v92 = v22;
        *((_QWORD *)&v92 + 1) = v21;
        *(_QWORD *)&v93 = v82;
        *((_QWORD *)&v93 + 1) = v23;
        *(_QWORD *)&v94 = v81;
        *((_QWORD *)&v94 + 1) = v80;
        *(_QWORD *)v95 = v101;
        *(_QWORD *)&v95[8] = v82;
        *(_QWORD *)&v95[16] = v23;
        *(_QWORD *)&v95[24] = v81;
        *(_QWORD *)&v95[32] = v80;
        *(_QWORD *)&v95[40] = a1;
        nullsub_1();
        sub_1BAF97E40((uint64_t)&v90, (uint64_t)&v86);
        swift_bridgeObjectRetain();
        v24 = a1;
        swift_bridgeObjectRetain_n();
        v25 = a1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BB86E4A0();
        swift_release();
        sub_1BA4AD288(0, &qword_1EF2B14D0, (uint64_t)&type metadata for FormatSourceMap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
        v28 = v81;
        v27 = v82;
        *(_QWORD *)(v26 + 32) = v82;
        *(_QWORD *)(v26 + 40) = v23;
        v29 = v80;
        *(_QWORD *)(v26 + 48) = v28;
        *(_QWORD *)(v26 + 56) = v29;
        *(_QWORD *)&v86 = v26;
        swift_retain();
        sub_1BB86E4A0();
        swift_release();
        *(_QWORD *)&v86 = v27;
        *((_QWORD *)&v86 + 1) = v23;
        v87 = v28;
        v88 = v29;
        v89 = a1;
        swift_bridgeObjectRetain();
        v30 = a1;
        swift_retain();
        sub_1BB86E4A0();
        swift_release();
        LOBYTE(v86) = 1;
        swift_retain();
        sub_1BB86E4A0();
        swift_bridgeObjectRelease();
        swift_release();

        sub_1BA6A0C50(&v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
        v20 = 0;
      }
      v1 = v85;
    }
    else
    {
      sub_1BA8EBE4C(v102, *((uint64_t *)&v102 + 1), v103, v104, v105);
      v20 = 1;
    }
  }
  else
  {
    v20 = 1;
  }
  *(_QWORD *)&v102 = a1;
  v31 = a1;
  v32 = type metadata accessor for FormatLayoutError();
  v33 = swift_dynamicCast();
  v34 = *(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  if (!v33)
  {
    v34(v5, 1, 1, v32);
    result = (_QWORD *)sub_1BA5C699C((uint64_t)v5, (unint64_t *)&qword_1ED39B410, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError);
    if (!v20)
      return result;
LABEL_30:
    *(_QWORD *)&v102 = 0;
    *((_QWORD *)&v102 + 1) = 0xE000000000000000;
    sub_1BB873CB4();
    sub_1BB872AFC("v40@0:8@16@24d32");
    *(_QWORD *)&v96 = a1;
    sub_1BB873E34();
    v55 = v102;
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4(a1, 0, 0, v55, *((uint64_t *)&v55 + 1));
    swift_bridgeObjectRelease();
    LOBYTE(v102) = 1;
    *((_QWORD *)&v102 + 1) = 0x726F727245;
    v103 = 0xE500000000000000;
    v104 = 0xD000000000000022;
    v105 = 0x80000001BB97CF70;
    v106 = 0;
    v107 = 0;
    v56 = (_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor)
                   + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
    swift_beginAccess();
    if (*v56)
    {
      swift_retain();
      sub_1BB263178(&v102);
      swift_release();
    }
    swift_retain();
    sub_1BB86D2B8();
    result = (_QWORD *)swift_release();
    if (!(_BYTE)v90)
    {
      LOBYTE(v90) = 1;
      swift_retain();
      sub_1BB86D2C4();
      return (_QWORD *)swift_release();
    }
    return result;
  }
  v34(v5, 0, 1, v32);
  if (swift_getEnumCaseMultiPayload() != 64)
  {
    result = (_QWORD *)sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    if (!v20)
      return result;
    goto LABEL_30;
  }
  v35 = (uint64_t)*v5;
  v36 = *((_QWORD *)*v5 + 2);
  if (!v36)
  {

    result = (_QWORD *)swift_bridgeObjectRelease();
    if (!v20)
      return result;
    goto LABEL_30;
  }
  v84 = v5[1];
  v85 = v1;
  v37 = (uint64_t *)(v35 + 32 * v36);
  v38 = *v37;
  v39 = v37[1];
  v40 = v37[2];
  v80 = v37[3];
  v81 = v40;
  v83 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  v41 = *(_QWORD *)(v83 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86DD20();
  swift_beginAccess();
  v42 = *(_QWORD *)(v41 + 40);
  v43 = *(_QWORD *)(v42 + 16);
  v82 = v38;
  if (v43)
  {
    swift_bridgeObjectRetain();
    v44 = sub_1BA6E35A8(v38, v39);
    if ((v45 & 1) != 0)
    {
      v46 = (__int128 *)(*(_QWORD *)(v42 + 56) + (v44 << 7));
      v48 = v46[2];
      v47 = v46[3];
      v49 = v46[1];
      v90 = *v46;
      v91 = v49;
      v92 = v48;
      v93 = v47;
      v50 = v46[4];
      v51 = v46[5];
      v52 = v46[7];
      *(_OWORD *)&v95[16] = v46[6];
      *(_OWORD *)&v95[32] = v52;
      v94 = v50;
      *(_OWORD *)v95 = v51;
      memmove(&v96, v46, 0x80uLL);
      nullsub_1();
      sub_1BB0F0E74(&v90);
    }
    else
    {
      sub_1BA8EBB18(&v96);
    }
  }
  else
  {
    sub_1BA8EBB18(&v96);
    swift_bridgeObjectRetain();
  }
  sub_1BAF97E40((uint64_t)&v96, (uint64_t)&v102);
  v54 = v84;
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  swift_release();
  sub_1BAF97E40((uint64_t)&v102, (uint64_t)&v96);
  if (sub_1BA8CF120((uint64_t)&v96) == 1)
  {
    swift_bridgeObjectRelease();

    result = (_QWORD *)swift_bridgeObjectRelease();
    v1 = v85;
    if (!v20)
      return result;
    goto LABEL_30;
  }
  v58 = v99;
  v57 = v100;
  *(_QWORD *)&v86 = v82;
  *((_QWORD *)&v86 + 1) = v39;
  v87 = v81;
  v88 = v80;
  sub_1BA8EBC94(v99, v100, (uint64_t *)&v86, v54, (uint64_t *)&v90);
  swift_bridgeObjectRelease();
  v59 = v90;
  v60 = v91;
  v90 = v96;
  *(_QWORD *)&v91 = v97;
  BYTE8(v91) = v98;
  *(_QWORD *)&v92 = v58;
  *((_QWORD *)&v92 + 1) = v57;
  v93 = v59;
  v94 = v60;
  *(_QWORD *)v95 = v101;
  *(_OWORD *)&v95[8] = v59;
  *(_OWORD *)&v95[24] = v60;
  v85 = *((_QWORD *)&v60 + 1);
  *(_QWORD *)&v95[40] = v54;
  nullsub_1();
  v61 = *(_QWORD **)(v83 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourceFile);
  sub_1BAF97E40((uint64_t)&v90, (uint64_t)&v86);
  swift_bridgeObjectRetain_n();
  v62 = v54;
  swift_bridgeObjectRetain();
  v63 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v64 = v61;
  sub_1BB86E4A0();
  swift_release();
  sub_1BB340FFC(1, v35);
  v68 = (v67 >> 1) - v66;
  if (__OFSUB__(v67 >> 1, v66))
  {
    __break(1u);
    goto LABEL_44;
  }
  v69 = __OFADD__(v68, 1);
  v70 = v68 + 1;
  if (v69)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v71 = v65;
  v72 = v66;
  v73 = v67;
  *(_QWORD *)&v86 = sub_1BB38ED20(0, v70 & ~(v70 >> 63), 0, MEMORY[0x1E0DEE9D8]);
  v74 = swift_unknownObjectRetain();
  sub_1BB386CC8(v74, v71, v72, v73);
  v64 = (_QWORD *)v86;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_45:
    v64 = sub_1BB38ED20(0, v64[2] + 1, 1, v64);
  v76 = v64[2];
  v75 = v64[3];
  if (v76 >= v75 >> 1)
    v64 = sub_1BB38ED20((_QWORD *)(v75 > 1), v76 + 1, 1, v64);
  v64[2] = v76 + 1;
  v77 = &v64[4 * v76];
  *((_OWORD *)v77 + 2) = v59;
  v78 = v85;
  v77[6] = v60;
  v77[7] = v78;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v86 = v64;
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  v86 = v59;
  v87 = v60;
  v88 = v78;
  v89 = v54;
  swift_bridgeObjectRetain();
  v79 = v54;
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  LOBYTE(v86) = 1;
  swift_retain();
  sub_1BB86E4A0();
  swift_release();

  swift_bridgeObjectRelease();
  return sub_1BA6A0C50(&v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
}

void sub_1BB1A6410()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unsigned __int8 v11;
  id v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  _BYTE v37[15];
  unsigned __int8 v38;
  objc_super v39;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BB86D7A4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39.receiver = v0;
  v39.super_class = ObjectType;
  objc_msgSendSuper2(&v39, sel_viewLayoutMarginsDidChange, v5);
  v8 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController], sel_view);
  if (!v8)
  {
    __break(1u);
    goto LABEL_7;
  }
  v9 = v8;
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v11 = v38;
  v12 = objc_msgSend(v0, sel_view);
  if (!v12)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v13 = v12;
  v14 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
  sub_1BB8732C4();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  objc_msgSend(v14, sel_safeAreaInsets);
  sub_1BB532618(v10, v13, v11, v16, v18, v20, v22, v23, v24, v25, v26);

  sub_1BB86D714();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  objc_msgSend(v9, sel_setLayoutMargins_, v28, v30, v32, v34);

  swift_retain();
  sub_1BB86E494();
  v35 = swift_release();
  if ((v38 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](v35);
    *(_QWORD *)&v37[-16] = v1;
    sub_1BB86EC14();
    v36 = (void *)sub_1BB86DE94();
    sub_1BB86E9B0();
    swift_release();
    swift_release();

  }
}

uint64_t sub_1BB1A6690(uint64_t a1)
{
  const void *v1;
  uint64_t v2;
  _BYTE v4[336];
  _BYTE __dst[336];

  v1 = (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages);
  memcpy(__dst, (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(__dst));
  memcpy(v4, v1, sizeof(v4));
  sub_1BAF8EA94((uint64_t)__dst);
  v2 = sub_1BB1A51AC(v4, 0);
  sub_1BAF8FB4C((uint64_t)__dst);
  return v2;
}

uint64_t sub_1BB1A693C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  char v32;
  uint64_t v33;
  char v34;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1BCCE5D40](v1);
  sub_1BA49A224(0, &qword_1EF2B7EB0);
  if (!v2)
    return sub_1BB8736B4();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BB882990;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856F0;
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
  swift_allocObject();
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v3 + 32) = sub_1BB8738F4();
  swift_allocObject();
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v3 + 40) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v33 + 32) = sub_1BB8736C0();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB882990;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v7 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v6 + 32) = sub_1BB8738F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v8 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v6 + 40) = sub_1BB8738F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v9 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v6 + 48) = sub_1BB8738F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v10 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v6 + 56) = sub_1BB8738F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v11 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v6 + 64) = sub_1BB8738F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v12 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v6 + 72) = sub_1BB8738F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v13 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v6 + 80) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v33 + 40) = sub_1BB8736C0();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB8856F0;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v15 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v14 + 32) = sub_1BB8738F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  v16 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v14 + 40) = sub_1BB8738F4();
  sub_1BB872DCC();
  v32 = v14;
  *(_QWORD *)(v33 + 48) = sub_1BB8736C0();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB8856F0;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if ((v32 & 1) != 0)
    sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_beginAccess();
  v19 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v17 + 32) = sub_1BB8738F4();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v34 != 1)
    sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_beginAccess();
  v20 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v17 + 40) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v33 + 56) = sub_1BB8736C0();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB8F4F20;
  swift_allocObject();
  swift_beginAccess();
  v22 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v21 + 32) = sub_1BB8738F4();
  swift_allocObject();
  swift_beginAccess();
  v23 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v21 + 40) = sub_1BB8738F4();
  *(_QWORD *)(v21 + 48) = sub_1BB8738F4();
  swift_allocObject();
  swift_beginAccess();
  v24 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v21 + 56) = sub_1BB8738F4();
  *(_QWORD *)(v21 + 64) = sub_1BB8738F4();
  swift_allocObject();
  swift_beginAccess();
  v25 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v21 + 72) = sub_1BB8738F4();
  *(_QWORD *)(v21 + 80) = sub_1BB8738F4();
  swift_allocObject();
  swift_beginAccess();
  v26 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v21 + 88) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v33 + 64) = sub_1BB8736C0();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BB8856E0;
  swift_allocObject();
  swift_beginAccess();
  v28 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v27 + 32) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v33 + 72) = sub_1BB8736C0();
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BB8856E0;
  swift_allocObject();
  swift_beginAccess();
  v30 = (void *)MEMORY[0x1BCCE5D40](v1);
  swift_unknownObjectWeakInit();

  *(_QWORD *)(v29 + 32) = sub_1BB8738F4();
  sub_1BB872DCC();
  *(_QWORD *)(v33 + 80) = sub_1BB8736C0();
  sub_1BB872DCC();
  v18 = sub_1BB8736B4();

  return v18;
}

void sub_1BB1A7D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (void *)v3;
    MEMORY[0x1E0C80A78](v3);
    sub_1BB86EC14();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v5 = (void *)sub_1BB87345C();
    type metadata accessor for DebugFormatEditorViewController();
    sub_1BB86E98C();

    swift_release();
    swift_release();

  }
}

void sub_1BB1A7E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController);
  v4 = objc_allocWithZone((Class)type metadata accessor for DebugFormatLayoutDimensionViewController());
  swift_retain();
  v5 = v3;
  v9 = (id)sub_1BB517DFC(v2, v5);

  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v9);
  objc_msgSend(v6, sel_setModalPresentationStyle_, 1);
  v7 = (void *)sub_1BB8733B4();
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_presentViewController_animated_completion_, v6, 1, 0);

  }
}

uint64_t sub_1BB1A7F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    swift_retain();
    sub_1BB86D2C4();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1A8010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();
    swift_retain();
    sub_1BB86D2C4();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1A80AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();
    swift_retain();
    sub_1BB86D2C4();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1A8148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();
    sub_1BB86D2C4();

    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1A81C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();
    sub_1BB86D2C4();

    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1A824C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();

    swift_retain();
    swift_release();
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1A82FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();

    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1A8394()
{
  if (qword_1EF2A6C58 != -1)
    swift_once();
  swift_retain();
  sub_1BB86ED4C();
  return swift_release();
}

uint64_t sub_1BB1A83F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
    swift_retain();

    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider);
    swift_retain();
    swift_release();
    sub_1BB86DD20();
    swift_beginAccess();
    *(_QWORD *)(v6 + 24) = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    sub_1BB86DD2C();
    return swift_release();
  }
  return result;
}

void sub_1BB1A84B4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v1 = v0;
  if (qword_1ED3BBA90 != -1)
  {
    swift_once();
    v0 = v1;
  }
  objc_msgSend(v0, sel_postNotificationName_object_, qword_1ED476890, 0);

}

uint64_t sub_1BB1A8538(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();

    swift_retain();
    swift_release();
    sub_1BB75A460();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1A85C8()
{
  uint64_t v0;

  if (qword_1ED39E3A8 != -1)
    swift_once();
  v0 = qword_1ED476410;
  sub_1BB86DD20();
  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  return sub_1BB86DD2C();
}

uint64_t sub_1BB1A864C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  void *v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (void *)v3;
    swift_retain();

    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v6 = (void *)result;
    swift_retain();

    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BB1A875C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1BCCE5D40](v4);
  if (v5)
  {
    v6 = (void *)v5;
    a3();

  }
}

void sub_1BB1A87B0()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t, uint64_t);
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _DWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  void (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t, uint64_t);
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  void *v183;
  id v184;
  void *v185;
  void *v186;
  __int128 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  _DWORD *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  unint64_t v223;
  void (*v224)(char *, uint64_t, uint64_t);
  uint64_t v225;
  uint64_t v226;
  char *v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __int128 v232;
  uint64_t *v233;
  char *v234;
  unint64_t v235;
  void (*v236)(char *, uint64_t, uint64_t);
  uint64_t v237;
  char *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  __int128 v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;

  v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5718];
  sub_1BB1B04CC(0, (unint64_t *)&unk_1EF2BCDF0, MEMORY[0x1E0DB5718]);
  v221 = v1;
  v220 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v222 = (char *)&v187 - v2;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCE00, (uint64_t (*)(void))sub_1BAC6F0F8, (uint64_t)&type metadata for DebugFormatBackgroundColor, v0);
  v217 = v3;
  v216 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v218 = (char *)&v187 - v4;
  v5 = MEMORY[0x1E0DEB070];
  v6 = MEMORY[0x1E0DB5990];
  sub_1BA50CAA8(0, &qword_1EF2BCE10, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB5990], v0);
  v214 = v7;
  v213 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v215 = (char *)&v187 - v8;
  sub_1BA50CAA8(0, &qword_1EF2BCE18, v5, v6, MEMORY[0x1E0DB5748]);
  v211 = v9;
  v210 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v212 = (_DWORD *)((char *)&v187 - v10);
  sub_1BA50CAA8(0, &qword_1EF2BCE20, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], v0);
  v208 = v11;
  v207 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v209 = (char *)&v187 - v12;
  sub_1BA4CDF6C(0, &qword_1EF2BCE28, (uint64_t (*)(void))sub_1BAC6EDE4, (uint64_t)&type metadata for DebugFormatTestSubject, v0);
  v203 = v13;
  v202 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v206 = (char *)&v187 - v14;
  sub_1BA4CDF6C(0, &qword_1EF2BCE38, (uint64_t (*)(void))sub_1BAC6EECC, (uint64_t)&type metadata for DebugFormatTestRun, v0);
  v199 = v15;
  v198 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v200 = (char *)&v187 - v16;
  sub_1BA4CDF6C(0, &qword_1EF2BCE48, (uint64_t (*)(void))sub_1BAC6EF54, (uint64_t)&type metadata for DebugFormatTestScope, v0);
  v196 = v17;
  v195 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v197 = (char *)&v187 - v18;
  sub_1BA50CAA8(0, &qword_1EF2AB7C8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], v0);
  v242 = v19;
  v237 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v239 = (char *)&v187 - v20;
  v241 = sub_1BB86D2A0();
  v243 = *(_QWORD *)(v241 - 8);
  MEMORY[0x1E0C80A78](v241);
  v238 = (char *)&v187 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCE60, (uint64_t (*)(void))sub_1BA970C64, (uint64_t)&type metadata for DebugFormatBackendEnvironment, v0);
  v235 = *((_QWORD *)v22 - 1);
  v236 = v22;
  MEMORY[0x1E0C80A78](v22);
  v240 = (char *)&v187 - v23;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCE70, (uint64_t (*)(void))sub_1BA970CA8, (uint64_t)&type metadata for DebugFormatUploadTarget, v0);
  v233 = v24;
  *(_QWORD *)&v232 = *(v24 - 1);
  MEMORY[0x1E0C80A78](v24);
  v234 = (char *)&v187 - v25;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCE80, (uint64_t (*)(void))sub_1BAC6ECD4, (uint64_t)&type metadata for DebugFormatWeather, v0);
  v194 = v26;
  v193 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  *(_QWORD *)&v228 = (char *)&v187 - v27;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCE90, (uint64_t (*)(void))sub_1BAC6ED5C, (uint64_t)&type metadata for DebugFormatLocation, v0);
  v191 = v28;
  v190 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v192 = (char *)&v187 - v29;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCEA0, (uint64_t (*)(void))sub_1BAC6EC4C, (uint64_t)&type metadata for FeedKind, v0);
  v189 = v30;
  v188 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v187 - v31;
  v33 = MEMORY[0x1E0DEA968];
  v34 = MEMORY[0x1E0DB5958];
  sub_1BA50CAA8(0, (unint64_t *)&unk_1EF2BCEB0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], v0);
  v36 = v35;
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v187 - v38;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C3230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB57C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v41 = v40;
  v42 = *(_QWORD *)(sub_1BB86D360() - 8);
  v43 = *(_QWORD *)(v42 + 72);
  v44 = *(unsigned __int8 *)(v42 + 80);
  v45 = (v44 + 32) & ~v44;
  v231 = v43;
  v205 = v41;
  v201 = v44 | 7;
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1BB87FAA0;
  sub_1BAC87E60();
  v229 = v47;
  v48 = swift_allocObject();
  v187 = xmmword_1BB87FC80;
  *(_OWORD *)(v48 + 16) = xmmword_1BB87FC80;
  sub_1BA50CAA8(0, (unint64_t *)&unk_1EF2BCEC0, v33, v34, MEMORY[0x1E0DB5770]);
  v50 = v49;
  if (qword_1EF2A6D60 != -1)
    swift_once();
  v219 = v46;
  v204 = v45;
  v230 = v46 + v45;
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 104);
  v52 = *MEMORY[0x1E0DB5710];
  v51(v39, v52, v36);
  swift_retain();
  v53 = sub_1BB86D30C();
  *(_QWORD *)(v48 + 56) = v50;
  v54 = sub_1BB1AFE60();
  *(_QWORD *)(v48 + 64) = v54;
  *(_QWORD *)(v48 + 32) = v53;
  if (qword_1EF2A6D68 != -1)
    swift_once();
  v51(v39, v52, v36);
  swift_retain();
  v55 = sub_1BB86D30C();
  *(_QWORD *)(v48 + 96) = v50;
  *(_QWORD *)(v48 + 104) = v54;
  *(_QWORD *)(v48 + 72) = v55;
  if (qword_1EF2A6D70 != -1)
    swift_once();
  v226 = v36;
  v224 = v51;
  v51(v39, v52, v36);
  swift_retain();
  v227 = v39;
  v56 = sub_1BB86D30C();
  v225 = v50;
  *(_QWORD *)(v48 + 136) = v50;
  *(_QWORD *)(v48 + 144) = v54;
  v223 = v54;
  *(_QWORD *)(v48 + 112) = v56;
  v57 = v230;
  sub_1BB86D354();
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v187;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCED0, (uint64_t (*)(void))sub_1BAC6EC4C, (uint64_t)&type metadata for FeedKind, MEMORY[0x1E0DB5770]);
  v60 = v59;
  if (qword_1EF2A6F88 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v188 + 104))(v32, v52, v189);
  sub_1BA9C7888();
  swift_retain();
  v61 = sub_1BB86D324();
  *(_QWORD *)(v58 + 56) = v60;
  *(_QWORD *)(v58 + 64) = sub_1BB1AFEC8();
  *(_QWORD *)(v58 + 32) = v61;
  sub_1BA4CDF6C(0, &qword_1EF2BCEE8, (uint64_t (*)(void))sub_1BAC6ED5C, (uint64_t)&type metadata for DebugFormatLocation, MEMORY[0x1E0DB5770]);
  v63 = v62;
  if (qword_1EF2A6E30 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v190 + 104))(v192, v52, v191);
  sub_1BB1AFF30();
  swift_retain();
  v64 = sub_1BB86D324();
  *(_QWORD *)(v58 + 96) = v63;
  *(_QWORD *)(v58 + 104) = sub_1BB1AFF74();
  *(_QWORD *)(v58 + 72) = v64;
  sub_1BA4CDF6C(0, &qword_1EF2BCF00, (uint64_t (*)(void))sub_1BAC6ECD4, (uint64_t)&type metadata for DebugFormatWeather, MEMORY[0x1E0DB5770]);
  v66 = v65;
  if (qword_1EF2A6E38 != -1)
    swift_once();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v193 + 104))(v228, v52, v194);
  sub_1BB1AFFDC();
  swift_retain();
  v67 = sub_1BB86D324();
  *(_QWORD *)(v58 + 136) = v66;
  *(_QWORD *)(v58 + 144) = sub_1BB1B0020();
  *(_QWORD *)(v58 + 112) = v67;
  sub_1BB86D354();
  v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_1BB87D7A0;
  sub_1BA4CDF6C(0, &qword_1EF2AB7E0, (uint64_t (*)(void))sub_1BA970CA8, (uint64_t)&type metadata for DebugFormatUploadTarget, MEMORY[0x1E0DB5770]);
  v70 = v69;
  v71 = v231;
  v72 = v227;
  if (qword_1EF2A6E68 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t *))(v232 + 104))(v234, v52, v233);
  sub_1BA89A950();
  swift_retain();
  v73 = sub_1BB86D324();
  *(_QWORD *)(v68 + 56) = v70;
  *(_QWORD *)(v68 + 64) = sub_1BB1B0088();
  *(_QWORD *)(v68 + 32) = v73;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2BCF30, (uint64_t (*)(void))sub_1BA970C64, (uint64_t)&type metadata for DebugFormatBackendEnvironment, MEMORY[0x1E0DB5770]);
  v75 = v74;
  if (qword_1EF2A6E78 != -1)
    swift_once();
  v194 = 2 * v71;
  v234 = (char *)(v57 + 2 * v71);
  (*(void (**)(char *, uint64_t, _QWORD))(v235 + 104))(v240, v52, v236);
  sub_1BA89B15C();
  swift_retain();
  v76 = sub_1BB86D324();
  *(_QWORD *)(v68 + 96) = v75;
  *(_QWORD *)(v68 + 104) = sub_1BB1B00F0();
  *(_QWORD *)(v68 + 72) = v76;
  if (qword_1EF2A6E80 != -1)
    swift_once();
  v77 = v226;
  v78 = v224;
  v224(v72, v52, v226);
  swift_retain();
  v79 = v225;
  v80 = sub_1BB86D30C();
  v81 = v223;
  *(_QWORD *)(v68 + 136) = v79;
  *(_QWORD *)(v68 + 144) = v81;
  *(_QWORD *)(v68 + 112) = v80;
  v82 = v238;
  if (qword_1EF2A6E88 != -1)
    swift_once();
  v83 = *(char **)(v243 + 104);
  LODWORD(v243) = *MEMORY[0x1E0DB55F8];
  v240 = v83;
  ((void (*)(char *))v83)(v82);
  v78(v72, v52, v77);
  swift_retain();
  v84 = sub_1BB86D318();
  *(_QWORD *)(v68 + 176) = v79;
  *(_QWORD *)(v68 + 184) = v81;
  *(_QWORD *)(v68 + 152) = v84;
  sub_1BB86D354();
  v236 = (void (*)(char *, uint64_t, uint64_t))(v230 + 3 * v71);
  v85 = swift_allocObject();
  v228 = xmmword_1BB87CE70;
  *(_OWORD *)(v85 + 16) = xmmword_1BB87CE70;
  sub_1BA50CAA8(0, &qword_1EF2AB7F8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], MEMORY[0x1E0DB5770]);
  v87 = v86;
  if (qword_1EF2A6DB8 != -1)
    swift_once();
  v88 = v241;
  ((void (*)(char *, _QWORD, uint64_t))v240)(v82, v243, v241);
  v89 = v82;
  v90 = *(void (**)(char *, uint64_t, uint64_t))(v237 + 104);
  v91 = v239;
  v90(v239, v52, v242);
  swift_retain();
  v92 = sub_1BB86D330();
  *(_QWORD *)(v85 + 56) = v87;
  v93 = sub_1BB1B0158();
  *(_QWORD *)(v85 + 64) = v93;
  *(_QWORD *)(v85 + 32) = v92;
  sub_1BB86D354();
  v94 = v88;
  v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = v228;
  if (qword_1EF2A6E70 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v240)(v89, v243, v94);
  v236 = v90;
  v90(v91, v52, v242);
  swift_retain();
  v96 = MEMORY[0x1E0DEE9D8];
  v97 = sub_1BB86D330();
  *(_QWORD *)(v95 + 56) = v87;
  *(_QWORD *)(v95 + 64) = v93;
  v235 = v93;
  *(_QWORD *)(v95 + 32) = v97;
  sub_1BB86D354();
  if (qword_1EF2A7438 != -1)
    swift_once();
  v98 = sub_1BB86EB84();
  __swift_project_value_buffer(v98, (uint64_t)qword_1EF3D0990);
  v193 = sub_1BB86EB24();
  v192 = v99;
  v247 = v96;
  sub_1BAC7B20C(0, 3, 0);
  v100 = 0;
  v101 = v247;
  v233 = (uint64_t *)"ition Item Kind Mismatch";
  v234 = "Newsroom Identifiers";
  *(_QWORD *)&v232 = "ebug-format-logger";
  v237 = v87;
  v102 = v239;
  do
  {
    if (byte_1E7270840[v100 + 32])
    {
      if (byte_1E7270840[v100 + 32] != 1)
      {
        if (qword_1EF2A6C70 == -1)
          goto LABEL_35;
LABEL_39:
        swift_once();
        goto LABEL_35;
      }
      if (qword_1EF2A6C68 != -1)
        goto LABEL_39;
    }
    else if (qword_1EF2A6C60 != -1)
    {
      goto LABEL_39;
    }
LABEL_35:
    ((void (*)(char *, _QWORD, uint64_t))v240)(v238, v243, v241);
    v103 = v52;
    v236(v102, v52, v242);
    swift_retain();
    v104 = v237;
    v105 = sub_1BB86D330();
    v247 = v101;
    v107 = *(_QWORD *)(v101 + 16);
    v106 = *(_QWORD *)(v101 + 24);
    if (v107 >= v106 >> 1)
    {
      sub_1BAC7B20C(v106 > 1, v107 + 1, 1);
      v101 = v247;
    }
    ++v100;
    v245 = v104;
    v246 = v235;
    *(_QWORD *)&v244 = v105;
    *(_QWORD *)(v101 + 16) = v107 + 1;
    sub_1BA4CECCC(&v244, v101 + 40 * v107 + 32);
    v52 = v103;
  }
  while (v100 != 3);
  sub_1BB86D354();
  v108 = swift_allocObject();
  v109 = (_QWORD *)v108;
  *(_OWORD *)(v108 + 16) = v228;
  v110 = v238;
  v111 = v241;
  if (qword_1EF2A6F78 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v240)(v110, v243, v111);
  v236(v239, v103, v242);
  swift_retain();
  v112 = v237;
  v113 = sub_1BB86D330();
  v114 = v235;
  v109[7] = v112;
  v109[8] = v114;
  v109[4] = v113;
  sub_1BB86D354();
  v115 = swift_allocObject();
  *(_OWORD *)(v115 + 16) = xmmword_1BB898AA0;
  sub_1BA4CDF6C(0, &qword_1EF2BCF58, (uint64_t (*)(void))sub_1BAC6EF54, (uint64_t)&type metadata for DebugFormatTestScope, MEMORY[0x1E0DB5770]);
  v117 = v116;
  if (qword_1EF2A6F30 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v195 + 104))(v197, v52, v196);
  sub_1BB02A63C();
  swift_retain();
  v118 = sub_1BB86D324();
  *(_QWORD *)(v115 + 56) = v117;
  *(_QWORD *)(v115 + 64) = sub_1BB1B01C0();
  *(_QWORD *)(v115 + 32) = v118;
  sub_1BA4CDF6C(0, &qword_1EF2BCF70, (uint64_t (*)(void))sub_1BAC6EECC, (uint64_t)&type metadata for DebugFormatTestRun, MEMORY[0x1E0DB5770]);
  v120 = v119;
  if (qword_1EF2A6F18 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v198 + 104))(v200, v52, v199);
  sub_1BB1B0228();
  swift_retain();
  v121 = sub_1BB86D324();
  *(_QWORD *)(v115 + 96) = v120;
  *(_QWORD *)(v115 + 104) = sub_1BB1B026C();
  *(_QWORD *)(v115 + 72) = v121;
  sub_1BA4CDF6C(0, &qword_1EF2BCF88, (uint64_t (*)(void))sub_1BAC6EDE4, (uint64_t)&type metadata for DebugFormatTestSubject, MEMORY[0x1E0DB5770]);
  v123 = v122;
  if (qword_1EF2A6F38 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v202 + 104))(v206, v52, v203);
  sub_1BA8D4AA4();
  swift_retain();
  v124 = sub_1BB86D324();
  *(_QWORD *)(v115 + 136) = v123;
  *(_QWORD *)(v115 + 144) = sub_1BB1B02D4();
  *(_QWORD *)(v115 + 112) = v124;
  sub_1BA50CAA8(0, &qword_1EF2BCFA0, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], MEMORY[0x1E0DB5770]);
  v126 = v125;
  if (qword_1EF2A6F10 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v240)(v110, v243, v111);
  (*(void (**)(char *, uint64_t, uint64_t))(v207 + 104))(v209, v52, v208);
  swift_retain();
  v127 = sub_1BB86D330();
  *(_QWORD *)(v115 + 176) = v126;
  *(_QWORD *)(v115 + 184) = sub_1BB1B033C();
  *(_QWORD *)(v115 + 152) = v127;
  sub_1BA50CAA8(0, &qword_1EF2BCFB0, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB5990], MEMORY[0x1E0DB5770]);
  v129 = v128;
  v130 = v204;
  if (qword_1EF2A6F28 != -1)
    swift_once();
  v131 = v212;
  *v212 = 1028443341;
  (*(void (**)(_DWORD *, _QWORD, uint64_t))(v210 + 104))(v131, *MEMORY[0x1E0DB5728], v211);
  (*(void (**)(char *, uint64_t, uint64_t))(v213 + 104))(v215, v52, v214);
  swift_retain();
  v132 = sub_1BB86D300();
  *(_QWORD *)(v115 + 216) = v129;
  *(_QWORD *)(v115 + 224) = sub_1BB1B03A4();
  *(_QWORD *)(v115 + 192) = v132;
  v133 = v242;
  if (qword_1EF2A6F20 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v240)(v110, v243, v111);
  v236(v239, v52, v133);
  swift_retain();
  v134 = v237;
  v135 = sub_1BB86D330();
  v136 = v235;
  *(_QWORD *)(v115 + 256) = v134;
  *(_QWORD *)(v115 + 264) = v136;
  *(_QWORD *)(v115 + 232) = v135;
  sub_1BB86D354();
  v137 = swift_allocObject();
  *(_OWORD *)(v137 + 16) = xmmword_1BB8832C0;
  v138 = swift_allocObject();
  v232 = xmmword_1BB87A390;
  *(_OWORD *)(v138 + 16) = xmmword_1BB87A390;
  v234 = (char *)v138;
  v139 = v138 + v130;
  v140 = swift_allocObject();
  *(_OWORD *)(v140 + 16) = v228;
  sub_1BA4CDF6C(0, &qword_1EF2BCFC0, (uint64_t (*)(void))sub_1BAC6F0F8, (uint64_t)&type metadata for DebugFormatBackgroundColor, MEMORY[0x1E0DB5770]);
  v142 = v141;
  if (qword_1EF2A6EC0 != -1)
    swift_once();
  v233 = (uint64_t *)(v137 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v216 + 104))(v218, v52, v217);
  sub_1BB1B040C();
  swift_retain();
  v143 = sub_1BB86D324();
  *(_QWORD *)(v140 + 56) = v142;
  *(_QWORD *)(v140 + 64) = sub_1BB1B0450();
  *(_QWORD *)(v140 + 32) = v143;
  sub_1BB86D354();
  *(_QWORD *)&v228 = v139 + v231;
  v144 = swift_allocObject();
  *(_OWORD *)(v144 + 16) = v232;
  if (qword_1EF2A6EC8 != -1)
    swift_once();
  v145 = v227;
  v146 = v226;
  v147 = v224;
  v224(v227, v52, v226);
  swift_retain();
  v148 = v225;
  v149 = sub_1BB86D30C();
  v150 = v223;
  *(_QWORD *)(v144 + 56) = v148;
  *(_QWORD *)(v144 + 64) = v150;
  *(_QWORD *)(v144 + 32) = v149;
  v151 = v238;
  if (qword_1EF2A6ED0 != -1)
    swift_once();
  v147(v145, v52, v146);
  swift_retain();
  v152 = sub_1BB86D30C();
  *(_QWORD *)(v144 + 96) = v148;
  *(_QWORD *)(v144 + 104) = v150;
  *(_QWORD *)(v144 + 72) = v152;
  sub_1BB86D354();
  v153 = sub_1BB86D348();
  v154 = MEMORY[0x1E0DB5790];
  *(_QWORD *)(v137 + 56) = v153;
  *(_QWORD *)(v137 + 64) = v154;
  __swift_allocate_boxed_opaque_existential_0(v233);
  sub_1BB86D33C();
  if (qword_1EF2A6D98 != -1)
    swift_once();
  v155 = v240;
  ((void (*)(char *, _QWORD, uint64_t))v240)(v151, v243, v241);
  v156 = v239;
  v157 = v236;
  v236(v239, v52, v242);
  swift_retain();
  v158 = v237;
  v159 = sub_1BB86D330();
  v160 = v235;
  *(_QWORD *)(v137 + 96) = v158;
  *(_QWORD *)(v137 + 104) = v160;
  *(_QWORD *)(v137 + 72) = v159;
  if (qword_1EF2A6D88 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v155)(v151, v243, v241);
  v157(v156, v52, v242);
  swift_retain();
  v161 = sub_1BB86D330();
  *(_QWORD *)(v137 + 136) = v158;
  *(_QWORD *)(v137 + 144) = v160;
  *(_QWORD *)(v137 + 112) = v161;
  if (qword_1EF2A6E40 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v155)(v151, v243, v241);
  v157(v156, v52, v242);
  swift_retain();
  v162 = sub_1BB86D330();
  *(_QWORD *)(v137 + 176) = v158;
  *(_QWORD *)(v137 + 184) = v160;
  *(_QWORD *)(v137 + 152) = v162;
  if (qword_1EF2A6E48 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v155)(v151, v243, v241);
  v157(v156, v52, v242);
  swift_retain();
  v163 = sub_1BB86D330();
  *(_QWORD *)(v137 + 216) = v158;
  *(_QWORD *)(v137 + 224) = v160;
  *(_QWORD *)(v137 + 192) = v163;
  if (qword_1EF2A6DB0 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v155)(v151, v243, v241);
  v157(v156, v52, v242);
  swift_retain();
  v164 = sub_1BB86D330();
  *(_QWORD *)(v137 + 256) = v158;
  *(_QWORD *)(v137 + 264) = v160;
  *(_QWORD *)(v137 + 232) = v164;
  if (qword_1EF2A6DA0 != -1)
    swift_once();
  ((void (*)(char *, _QWORD, uint64_t))v155)(v151, v243, v241);
  v157(v156, v52, v242);
  swift_retain();
  v165 = sub_1BB86D330();
  *(_QWORD *)(v137 + 296) = v158;
  *(_QWORD *)(v137 + 304) = v160;
  *(_QWORD *)(v137 + 272) = v165;
  sub_1BB86D354();
  v166 = swift_allocObject();
  *(_OWORD *)(v166 + 16) = xmmword_1BB8827B0;
  sub_1BB1B04B8(0);
  v168 = v167;
  v169 = v52;
  if (qword_1EF2A6EF0 != -1)
    swift_once();
  v170 = *(void (**)(char *, uint64_t, uint64_t))(v220 + 104);
  v171 = v222;
  v172 = v221;
  v170(v222, v169, v221);
  sub_1BA50AD30(&qword_1EF2BCFE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB54F8], MEMORY[0x1E0DB5508]);
  swift_retain();
  v173 = sub_1BB86D324();
  *(_QWORD *)(v166 + 56) = v168;
  v174 = sub_1BA50AD30(&qword_1EF2BCFE8, 255, (uint64_t (*)(uint64_t))sub_1BB1B04B8, MEMORY[0x1E0DB5780]);
  *(_QWORD *)(v166 + 64) = v174;
  *(_QWORD *)(v166 + 32) = v173;
  if (qword_1EF2A6EF8 != -1)
    swift_once();
  v175 = 9 * v231;
  v170(v171, v169, v172);
  swift_retain();
  v176 = sub_1BB86D324();
  *(_QWORD *)(v166 + 96) = v168;
  *(_QWORD *)(v166 + 104) = v174;
  *(_QWORD *)(v166 + 72) = v176;
  if (qword_1EF2A6F00 != -1)
    swift_once();
  v243 = v230 + v175;
  v170(v171, v169, v172);
  swift_retain();
  v177 = sub_1BB86D324();
  *(_QWORD *)(v166 + 136) = v168;
  *(_QWORD *)(v166 + 144) = v174;
  *(_QWORD *)(v166 + 112) = v177;
  if (qword_1EF2A6F08 != -1)
    swift_once();
  v170(v171, v169, v172);
  swift_retain();
  v178 = sub_1BB86D324();
  *(_QWORD *)(v166 + 176) = v168;
  *(_QWORD *)(v166 + 184) = v174;
  *(_QWORD *)(v166 + 152) = v178;
  if (qword_1ED39ED60 != -1)
    swift_once();
  v170(v171, v169, v172);
  swift_retain();
  v179 = sub_1BB86D324();
  *(_QWORD *)(v166 + 216) = v168;
  *(_QWORD *)(v166 + 224) = v174;
  *(_QWORD *)(v166 + 192) = v179;
  sub_1BB86D354();
  v180 = sub_1BB8703CC();
  swift_allocObject();
  v181 = sub_1BB8703C0();
  v245 = v180;
  v246 = MEMORY[0x1E0DB8E40];
  *(_QWORD *)&v244 = v181;
  v182 = objc_allocWithZone((Class)sub_1BB87072C());
  v183 = (void *)sub_1BB870720();
  v184 = objc_msgSend(objc_allocWithZone((Class)sub_1BB870D2C()), sel_initWithRootViewController_, v183);

  objc_msgSend(v184, sel_setModalPresentationStyle_, 2);
  v185 = (void *)sub_1BB8733B4();
  if (v185)
  {
    v186 = v185;
    objc_msgSend(v185, sel_presentViewController_animated_completion_, v184, 1, 0);

  }
}

void sub_1BB1AACA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (void *)v3;
    swift_retain();

    swift_retain();
    swift_release();
    sub_1BB47E34C();
    swift_release();
  }
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1BCCE5D40](v2);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void sub_1BB1AAD78()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  BOOL v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v1 = objc_msgSend(v0, sel_splitViewController);
  if (!v1
    || ((v2 = v1,
         v3 = objc_msgSend(v1, sel_traitCollection),
         v2,
         v4 = objc_msgSend(v3, sel_horizontalSizeClass),
         v3,
         v4)
      ? (v5 = v4 == (id)2)
      : (v5 = 1),
        v5))
  {
    v6 = objc_msgSend(v0, sel_splitViewController);
    if (!v6)
      return;
    v12 = v6;
    objc_msgSend(v6, sel_togglePrimaryViewVisibilityAnimated_, 1);
    goto LABEL_9;
  }
  if (v4 == (id)1)
  {
    v7 = objc_msgSend(v0, sel_splitViewController);
    if (v7)
    {
      v12 = v7;
      type metadata accessor for DebugFormatMainViewController();
      v8 = swift_dynamicCastClass();
      if (v8)
      {
        v9 = *(void **)(v8 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryContainerController);
        objc_msgSend(v9, sel_setModalPresentationStyle_, 0);
        v10 = (void *)sub_1BB8733B4();
        if (v10)
        {
          v11 = v10;
          objc_msgSend(v10, sel_presentViewController_animated_completion_, v9, 1, 0);

        }
      }
LABEL_9:

    }
  }
}

uint64_t sub_1BB1AAF04()
{
  uint64_t result;
  unint64_t v1;

  swift_retain();
  sub_1BB86D2B8();
  result = swift_release();
  if (v1 <= 2)
  {
    swift_retain();
    sub_1BB86D2C4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1AAFD0()
{
  uint64_t result;
  unint64_t v1;

  swift_retain();
  sub_1BB86D2B8();
  result = swift_release();
  if (v1 <= 1)
  {
    swift_retain();
    sub_1BB86D2C4();
    return swift_release();
  }
  return result;
}

void sub_1BB1AB09C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  objc_super v15;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  v4 = (objc_class *)type metadata accessor for DebugFormatDeviceViewController();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDeviceViewController_tableView;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  swift_retain();
  v8 = v5;
  *(_QWORD *)&v5[v6] = objc_msgSend(v7, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatDeviceViewController_filteredDevices] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatDeviceViewController_editor] = v3;
  swift_retain();

  v15.receiver = v8;
  v15.super_class = v4;
  v9 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v9);
  objc_msgSend(v10, sel_setModalPresentationStyle_, 7);
  v11 = objc_msgSend(v10, sel_popoverPresentationController);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_setBarButtonItem_, a1);

  }
  v13 = (void *)sub_1BB8733B4();
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_presentViewController_animated_completion_, v10, 1, 0);

  }
}

void sub_1BB1AB284(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v2 = objc_allocWithZone((Class)type metadata accessor for DebugFormatAccessibilityViewController());
  v3 = swift_retain();
  v9 = sub_1BB4EAB70(v3);
  swift_release();
  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v9);
  objc_msgSend(v4, sel_setModalPresentationStyle_, 7);
  v5 = objc_msgSend(v4, sel_popoverPresentationController);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_setBarButtonItem_, a1);

  }
  v7 = (void *)sub_1BB8733B4();
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_presentViewController_animated_completion_, v4, 1, 0);

  }
}

void sub_1BB1AB408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_sharedApplication);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1BA4D7948;
  *(_QWORD *)(v7 + 24) = v4;
  v9[4] = sub_1BA4D7950;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BA4F1DD8;
  v9[3] = &block_descriptor_39;
  v8 = _Block_copy(v9);
  swift_release();
  objc_msgSend(v6, sel_ts_installCACommitCompletionBlock_, v8);
  _Block_release(v8);

}

void sub_1BB1AB6B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  char v12;

  v2 = v1;
  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if (v12 == 1)
  {
    v4 = (void *)sub_1BB872970();
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v4);

    objc_msgSend(a1, sel_setImage_, v5);
    sub_1BB82CD70(*(void **)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView), *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView));
    v6 = sub_1BB8733B4();
    if (!v6)
      return;
    v7 = (void *)v6;
  }
  else
  {
    v8 = (void *)sub_1BB872970();
    v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

    objc_msgSend(a1, sel_setImage_, v9);
    sub_1BB82D020(*(void **)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView));
    v10 = sub_1BB8733B4();
    if (!v10)
      return;
    v7 = (void *)v10;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setToolbarItems_, v11);

}

uint64_t sub_1BB1AB974()
{
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_retain();
  sub_1BB86D2C4();
  return swift_release();
}

uint64_t sub_1BB1ABA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[336];
  _QWORD v12[42];

  v1 = v0;
  sub_1BA4B07F0(0, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v11[-v3];
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  v6 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_debugger;
  swift_retain();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_release();
  v7 = type metadata accessor for FormatDebuggerContext();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BB86E494();
    swift_release();
    swift_release();
    v8 = *(_QWORD *)(v12[0] + 16);
    result = swift_bridgeObjectRelease();
    if (v8)
    {
      memcpy(v12, (const void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(v12));
      memcpy(v11, (const void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(v11));
      v10 = *(_QWORD *)(v5 + v6);
      sub_1BAF8EA94((uint64_t)v12);
      swift_retain();
      sub_1BB1A51AC(v11, v10);
      swift_release();
      swift_release();
      return sub_1BAF8FB4C((uint64_t)v12);
    }
  }
  else
  {
    swift_retain();
    sub_1BB47E410();
    swift_release();
    return sub_1BA5C699C((uint64_t)v4, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  }
  return result;
}

uint64_t sub_1BB1ABCE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BA4B07F0(0, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - v4;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  v7 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_debugger;
  swift_retain();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_release();
  v8 = type metadata accessor for FormatDebuggerContext();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8);
  if ((_DWORD)result != 1)
  {
    v10 = *(_QWORD *)(v6 + v7);
    swift_retain();
    sub_1BB86DD20();
    if (*(_QWORD *)(v10 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) == 1)
    {
      *(_QWORD *)(v10 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) = 0;
      v11 = v10 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState;
      *(_QWORD *)v11 = a1;
      *(_BYTE *)(v11 + 8) = 2;
      sub_1BB86DD2C();
      sub_1BB8734F8();
    }
    else
    {
      sub_1BB86DD2C();
    }
    swift_release();
    return sub_1BA5C699C((uint64_t)v5, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  }
  return result;
}

uint64_t sub_1BB1ABE8C(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  sub_1BA4B07F0(0, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  swift_retain();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_release();
  v5 = type metadata accessor for FormatDebuggerContext();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if ((_DWORD)result != 1)
  {
    v7 = swift_retain();
    a1(v7);
    swift_release();
    return sub_1BA5C699C((uint64_t)v4, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  }
  return result;
}

uint64_t sub_1BB1ABFE4()
{
  uint64_t result;
  char v1;

  swift_retain();
  sub_1BB86D2B8();
  result = swift_release();
  if (!v1)
  {
    swift_retain();
    sub_1BB86D2C4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB1AC068()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[8];
  _QWORD v9[16];
  _BYTE v10[88];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _BYTE v16[128];
  _BYTE v17[128];

  swift_retain();
  sub_1BB86E494();
  swift_release();
  sub_1BAF97E40((uint64_t)v10, (uint64_t)v16);
  sub_1BAF97E40((uint64_t)v16, (uint64_t)v17);
  result = sub_1BA8CF120((uint64_t)v17);
  if ((_DWORD)result != 1)
  {
    v1 = v11;
    v2 = v12;
    v3 = v13;
    v4 = v14;
    v5 = v15;
    sub_1BAF97E40((uint64_t)v10, (uint64_t)v9);
    sub_1BAF92890(v1, v2, v3, v4, v5);
    result = (uint64_t)sub_1BA6A0C50(v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
    if (v2)
    {
      sub_1BA8EBAE8(v1, v2, v3, v4, v5);
      LOBYTE(v8[0]) = 0;
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      sub_1BA8EBB18(v8);
      sub_1BAF97E40((uint64_t)v8, (uint64_t)v6);
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      v7 = 0;
      memset(v6, 0, sizeof(v6));
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      *(_QWORD *)&v6[0] = MEMORY[0x1E0DEE9D8];
      swift_retain();
      sub_1BB86E4A0();
      return swift_release();
    }
  }
  return result;
}

id sub_1BB1AC20C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  id result;
  void *v49;
  void *v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  char *v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v97;
  _QWORD v98[2];
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __int128 v109[9];
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _BYTE v119[152];

  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v108 = (char *)v98 - v14;
  sub_1BA4B07F0(0, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78], v12);
  MEMORY[0x1E0C80A78](v15);
  v107 = (char *)v98 - v16;
  v17 = sub_1BB86D660();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v21 = sub_1BB1AE0B4(a1, a2, a3);
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_19;
  v102 = 0;
  v100 = a6;
  v105 = a4;
  v106 = a5;
  v22 = (uint64_t *)(*(_QWORD *)(v21 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  v23 = *v22;
  v24 = v22[1];
  v25 = v21;
  v26 = v22[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB19E4E8();
  v27 = sub_1BB86D63C();
  v104 = v18;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *(_QWORD *)v119 = v23;
  *(_QWORD *)&v119[8] = v24;
  *(_QWORD *)&v119[16] = v26;
  v28 = FormatGroupCollection.subscript.getter(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v28)
  {
    swift_release_n();
    a6 = v100;
LABEL_19:
    sub_1BB1AFC68((uint64_t)v119);
    v80 = a6;
    return (id)sub_1BA5193C4((uint64_t)v119, v80, (uint64_t (*)(_QWORD))sub_1BB1AEDF8);
  }
  v29 = v25;
  v30 = v103;
  v31 = v102;
  v32 = sub_1BB1AE1E0(v28, v30);
  swift_bridgeObjectRelease();

  v33 = *(_QWORD *)(v32 + 16);
  v34 = v100;
  if (v33)
  {
    v98[1] = v31;
    v99 = v29;
    v98[0] = v32 + 32;
    v102 = v17;
    v103 = (char *)OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor;
    v101 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView;
    swift_bridgeObjectRetain();
    v35 = *(_OWORD *)(v32 + 128);
    v115 = *(_OWORD *)(v32 + 112);
    v116 = v35;
    v36 = *(_OWORD *)(v32 + 160);
    v117 = *(_OWORD *)(v32 + 144);
    v118 = v36;
    v37 = *(_OWORD *)(v32 + 48);
    v38 = *(_OWORD *)(v32 + 80);
    v39 = *(_OWORD *)(v32 + 96);
    v112 = *(_OWORD *)(v32 + 64);
    v113 = v38;
    v114 = v39;
    v40 = v33 - 1;
    v41 = 176;
    v110 = *(_OWORD *)(v32 + 32);
    v111 = v37;
    v43 = v105;
    v42 = v106;
    while (1)
    {
      v44 = (_QWORD)v110 == v43 && *((_QWORD *)&v110 + 1) == v42;
      if (v44 || (sub_1BB874398() & 1) != 0)
      {
        v45 = v32;
        *(_OWORD *)&v119[96] = v116;
        *(_OWORD *)&v119[112] = v117;
        *(_OWORD *)&v119[128] = v118;
        *(_OWORD *)&v119[32] = v112;
        *(_OWORD *)&v119[48] = v113;
        *(_OWORD *)&v119[64] = v114;
        *(_OWORD *)&v119[80] = v115;
        *(_OWORD *)v119 = v110;
        *(_OWORD *)&v119[16] = v111;
        v46 = *(_QWORD *)&v103[(_QWORD)v30];
        sub_1BA8C88FC((uint64_t)&v110);
        sub_1BA8C88FC((uint64_t)&v110);
        swift_retain();
        sub_1BB86D2B8();
        swift_release();
        v47 = v109[0];
        result = objc_msgSend(v30, sel_view);
        if (!result)
        {
          __break(1u);
          return result;
        }
        v49 = result;
        v50 = *(void **)&v30[v101];
        sub_1BB8732C4();
        v52 = v51;
        v54 = v53;
        v56 = v55;
        v58 = v57;
        objc_msgSend(v50, sel_safeAreaInsets);
        v59 = v30;
        v60 = (uint64_t)v107;
        sub_1BB532618(v46, v49, v47, v52, v54, v56, v58, v61, v62, v63, v64);

        v65 = sub_1BB86D7A4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v60, 0, 1, v65);
        v66 = (uint64_t)v108;
        v67 = v59;
        sub_1BB19E4E8();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v104 + 56))(v66, 0, 1, v102);
        v68 = sub_1BA901208((__int128 *)v119, v60, v66);
        v71 = v68;
        v72 = v69;
        if (v70 >= 2u)
        {
          if (!(v68 ^ 1 | v69))
          {
LABEL_30:
            v97 = v99;
            swift_release();
            swift_bridgeObjectRelease_n();
            *(_OWORD *)&v119[88] = v115;
            *(_OWORD *)&v119[104] = v116;
            *(_OWORD *)&v119[120] = v117;
            *(_OWORD *)&v119[136] = v118;
            *(_OWORD *)&v119[24] = v111;
            *(_OWORD *)&v119[40] = v112;
            *(_OWORD *)&v119[56] = v113;
            *(_OWORD *)&v119[72] = v114;
            *(_OWORD *)&v119[8] = v110;
            *(_QWORD *)v119 = v97;
            nullsub_1();
            v80 = v100;
            return (id)sub_1BA5193C4((uint64_t)v119, v80, (uint64_t (*)(_QWORD))sub_1BB1AEDF8);
          }
        }
        else
        {
          v73 = v70;
          swift_retain();
          sub_1BB86D2B8();
          swift_release();
          sub_1BA5F1DE8(v71, v72, v73);
          if ((v119[0] & 1) == 0)
            goto LABEL_30;
        }
        sub_1BA8C89E4((uint64_t)&v110);
        v43 = v105;
        v42 = v106;
        v32 = v45;
        v30 = v67;
      }
      if (!v40)
        break;
      v110 = *(_OWORD *)(v32 + v41);
      v74 = *(_OWORD *)(v32 + v41 + 16);
      v75 = *(_OWORD *)(v32 + v41 + 32);
      v76 = *(_OWORD *)(v32 + v41 + 64);
      v113 = *(_OWORD *)(v32 + v41 + 48);
      v114 = v76;
      v111 = v74;
      v112 = v75;
      v77 = *(_OWORD *)(v32 + v41 + 80);
      v78 = *(_OWORD *)(v32 + v41 + 96);
      v79 = *(_OWORD *)(v32 + v41 + 128);
      v117 = *(_OWORD *)(v32 + v41 + 112);
      v118 = v79;
      v115 = v77;
      v116 = v78;
      v41 += 144;
      --v40;
    }
    swift_bridgeObjectRelease();
    v81 = *(_QWORD *)(v32 + 16);
    v82 = v99;
    v34 = v100;
    if (!v81)
      goto LABEL_27;
    swift_bridgeObjectRetain();
    v83 = *(_OWORD *)(v98[0] + 96);
    v115 = *(_OWORD *)(v98[0] + 80);
    v116 = v83;
    v84 = *(_OWORD *)(v98[0] + 128);
    v117 = *(_OWORD *)(v98[0] + 112);
    v118 = v84;
    v85 = *(_OWORD *)(v98[0] + 16);
    v86 = *(_OWORD *)(v98[0] + 48);
    v87 = *(_OWORD *)(v98[0] + 64);
    v112 = *(_OWORD *)(v98[0] + 32);
    v113 = v86;
    v114 = v87;
    v110 = *(_OWORD *)v98[0];
    v111 = v85;
    v88 = 176;
    v89 = 1;
    while (1)
    {
      v109[6] = v116;
      v109[7] = v117;
      v109[8] = v118;
      v109[2] = v112;
      v109[3] = v113;
      v109[4] = v114;
      v109[5] = v115;
      v109[0] = v110;
      v109[1] = v111;
      sub_1BA8C88FC((uint64_t)&v110);
      if ((sub_1BB1AD458(v109, v30) & 1) != 0)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        *(_OWORD *)&v119[88] = v115;
        *(_OWORD *)&v119[104] = v116;
        *(_OWORD *)&v119[120] = v117;
        *(_OWORD *)&v119[136] = v118;
        *(_OWORD *)&v119[24] = v111;
        *(_OWORD *)&v119[40] = v112;
        *(_OWORD *)&v119[56] = v113;
        *(_OWORD *)&v119[72] = v114;
        *(_OWORD *)&v119[8] = v110;
        *(_QWORD *)v119 = v82;
        nullsub_1();
        goto LABEL_29;
      }
      sub_1BA8C89E4((uint64_t)&v110);
      if (v81 == v89)
        break;
      v110 = *(_OWORD *)(v32 + v88);
      v90 = *(_OWORD *)(v32 + v88 + 16);
      v91 = *(_OWORD *)(v32 + v88 + 32);
      v92 = *(_OWORD *)(v32 + v88 + 64);
      v113 = *(_OWORD *)(v32 + v88 + 48);
      v114 = v92;
      v111 = v90;
      v112 = v91;
      v93 = *(_OWORD *)(v32 + v88 + 80);
      v94 = *(_OWORD *)(v32 + v88 + 96);
      v95 = *(_OWORD *)(v32 + v88 + 128);
      v117 = *(_OWORD *)(v32 + v88 + 112);
      v118 = v95;
      v115 = v93;
      v116 = v94;
      v88 += 144;
      if (__OFADD__(v89++, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
    }
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_27:
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();
  sub_1BB1AFC68((uint64_t)v119);
LABEL_29:
  v80 = v34;
  return (id)sub_1BA5193C4((uint64_t)v119, v80, (uint64_t (*)(_QWORD))sub_1BB1AEDF8);
}

uint64_t sub_1BB1AC940(uint64_t a1)
{
  char *v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  _BYTE v39[152];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[152];
  uint64_t v50;
  _OWORD v51[10];

  swift_getObjectType();
  v2 = &v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages + 144];
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB1AC20C(v3, v50, *(uint64_t *)&v51[0], v50, *(uint64_t *)&v51[0], (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5193C4((uint64_t)v39, (uint64_t)v49, (uint64_t (*)(_QWORD))sub_1BB1AEDF8);
  sub_1BA5193C4((uint64_t)v49, (uint64_t)&v50, (uint64_t (*)(_QWORD))sub_1BB1AEDF8);
  if (sub_1BA84DAF0(&v50) == 1)
  {
    sub_1BB8244EC();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    v46 = v51[6];
    v47 = v51[7];
    v48 = v51[8];
    v42 = v51[2];
    v43 = v51[3];
    v44 = v51[4];
    v45 = v51[5];
    v40 = v51[0];
    v41 = v51[1];
    v35 = v50;
    swift_beginAccess();
    swift_retain();
    swift_retain();
    sub_1BB86E494();
    swift_release();
    v5 = v37;
    v38 = MEMORY[0x1E0DEE9D8];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = v1;
      swift_bridgeObjectRetain();
      v8 = (uint64_t *)(v5 + 40);
      do
      {
        if (*(_QWORD *)(*((_QWORD *)v2 + 9) + 16))
        {
          v10 = *(v8 - 1);
          v9 = *v8;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v10, v9);
          if ((v11 & 1) != 0)
          {
            swift_retain();
            swift_bridgeObjectRelease_n();
            v12 = swift_bridgeObjectRelease();
            MEMORY[0x1BCCE36AC](v12);
            if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
          }
        }
        v8 += 2;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      v13 = v38;
    }
    else
    {
      v14 = v1;
      v13 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();

    FormatPackageInventory.merging(with:)(v13);
    swift_release();
    v15 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v15);
    type metadata accessor for FormatPackageInventory();
    sub_1BB86EC14();
    v16 = (void *)sub_1BB86DE94();
    v17 = swift_allocObject();
    v18 = v47;
    *(_OWORD *)(v17 + 112) = v46;
    *(_OWORD *)(v17 + 128) = v18;
    *(_OWORD *)(v17 + 144) = v48;
    v19 = v43;
    *(_OWORD *)(v17 + 48) = v42;
    *(_OWORD *)(v17 + 64) = v19;
    v20 = v45;
    *(_OWORD *)(v17 + 80) = v44;
    *(_OWORD *)(v17 + 96) = v20;
    v21 = v41;
    *(_OWORD *)(v17 + 16) = v40;
    *(_OWORD *)(v17 + 32) = v21;
    *(_QWORD *)(v17 + 160) = a1;
    sub_1BA8C88FC((uint64_t)v51);
    swift_retain();
    sub_1BB86E980();
    swift_release();

    swift_release();
    v22 = swift_allocObject();
    v23 = v44;
    *(_OWORD *)(v22 + 104) = v45;
    v24 = v47;
    *(_OWORD *)(v22 + 120) = v46;
    *(_OWORD *)(v22 + 136) = v24;
    *(_OWORD *)(v22 + 152) = v48;
    v25 = v40;
    *(_OWORD *)(v22 + 40) = v41;
    v26 = v43;
    *(_OWORD *)(v22 + 56) = v42;
    *(_OWORD *)(v22 + 72) = v26;
    *(_OWORD *)(v22 + 88) = v23;
    *(_QWORD *)(v22 + 16) = v35;
    *(_OWORD *)(v22 + 24) = v25;
    sub_1BA8C88FC((uint64_t)v51);
    swift_retain();
    v27 = (void *)sub_1BB86E854();
    sub_1BB86EA34();
    swift_release();
    swift_release();

    v28 = (_OWORD *)swift_allocObject();
    v29 = v47;
    v28[7] = v46;
    v28[8] = v29;
    v28[9] = v48;
    v30 = v43;
    v28[3] = v42;
    v28[4] = v30;
    v31 = v45;
    v28[5] = v44;
    v28[6] = v31;
    v32 = v41;
    v28[1] = v40;
    v28[2] = v32;
    v33 = (void *)sub_1BB86E854();
    v4 = sub_1BB86E9A4();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

  }
  return v4;
}

uint64_t sub_1BB1ACEB8(uint64_t a1, char *a2, uint64_t a3, _OWORD *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v28;
  unint64_t v29;

  sub_1BB1AD1AC(*(void **)&a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView]);
  swift_beginAccess();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v7 = v28;
  v29 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = &a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages];
    v10 = a2;
    swift_bridgeObjectRetain();
    v11 = (uint64_t *)(v7 + 40);
    do
    {
      if (*(_QWORD *)(*((_QWORD *)v9 + 9) + 16))
      {
        v12 = *(v11 - 1);
        v13 = *v11;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BA6E35A8(v12, v13);
        if ((v14 & 1) != 0)
        {
          swift_retain();
          swift_bridgeObjectRelease_n();
          v15 = swift_bridgeObjectRelease();
          MEMORY[0x1BCCE36AC](v15);
          if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v11 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v16 = v29;
  }
  else
  {
    v17 = a2;
    v16 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();

  FormatPackageInventory.merging(with:)(v16);
  v18 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v18);
  type metadata accessor for FormatPackageInventory();
  sub_1BB86EC14();
  v19 = (void *)sub_1BB86DE94();
  v20 = swift_allocObject();
  v21 = a4[7];
  *(_OWORD *)(v20 + 112) = a4[6];
  *(_OWORD *)(v20 + 128) = v21;
  *(_OWORD *)(v20 + 144) = a4[8];
  v22 = a4[3];
  *(_OWORD *)(v20 + 48) = a4[2];
  *(_OWORD *)(v20 + 64) = v22;
  v23 = a4[5];
  *(_OWORD *)(v20 + 80) = a4[4];
  *(_OWORD *)(v20 + 96) = v23;
  v24 = a4[1];
  *(_OWORD *)(v20 + 16) = *a4;
  *(_OWORD *)(v20 + 32) = v24;
  *(_QWORD *)(v20 + 160) = a5;
  sub_1BA8C88FC((uint64_t)a4);
  type metadata accessor for DebugFormatEditorViewController();
  swift_retain();
  v25 = sub_1BB86E980();
  swift_release();
  swift_release();

  swift_release();
  return v25;
}

id sub_1BB1AD1AC(void *a1)
{
  uint64_t v1;
  void *v3;
  CGRect v5;
  CGRect v6;

  sub_1BB1A4A20(a1);
  sub_1BB87096C();
  objc_msgSend(a1, sel_bounds);
  CGRectGetHeight(v5);
  objc_msgSend(a1, sel_zoomScale);
  objc_msgSend(a1, sel_contentOffset);
  objc_msgSend(a1, sel_adjustedContentInset);
  objc_msgSend(a1, sel_zoomScale);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  objc_msgSend(v3, sel_frame);
  sub_1BB8735E8();
  objc_msgSend(v3, sel_frame);
  CGRectGetHeight(v6);
  sub_1BB873588();
  return objc_msgSend(v3, sel_setFrame_);
}

uint64_t sub_1BB1AD308(uint64_t a1, uint64_t a2)
{
  void *v3;
  double v4;
  id v5;
  double v6;
  double v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;

  v3 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView);
  objc_msgSend(v3, sel_zoomScale);
  if (v4 > 1.0)
  {
    v5 = objc_retain(*(id *)(*(_QWORD *)(a2
                                       + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController)
                           + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView));
    objc_msgSend(v3, sel_zoomScale);
    v7 = v6;
    v8 = (void *)objc_opt_self();
    v9 = objc_msgSend(v8, sel_mainScreen);
    objc_msgSend(v9, sel_scale);
    v11 = v10;

    sub_1BB4309B8(v7 * v11);
    v12 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
    objc_msgSend(v3, sel_zoomScale);
    v14 = v13;
    v15 = objc_msgSend(v8, sel_mainScreen);
    objc_msgSend(v15, sel_scale);
    v17 = v16;

    objc_msgSend(v12, sel_setContentScaleFactor_, v14 * v17);
  }
  return sub_1BB1AC068();
}

id sub_1BB1AD458(__int128 *a1, char *a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unsigned __int8 v21;
  id result;
  void *v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  char v45;
  _BYTE v46[16];
  __int128 v47[9];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v46[-v6];
  sub_1BA4B07F0(0, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78], v4);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v46[-v9];
  v11 = a1[6];
  v12 = a1[4];
  v53 = a1[5];
  v54 = v11;
  v13 = a1[6];
  v14 = a1[8];
  v55 = a1[7];
  v56 = v14;
  v15 = a1[2];
  v16 = *a1;
  v49 = a1[1];
  v50 = v15;
  v17 = a1[2];
  v18 = a1[4];
  v51 = a1[3];
  v52 = v18;
  v19 = *a1;
  v47[6] = v13;
  v47[7] = v55;
  v47[8] = a1[8];
  v48 = v19;
  v47[2] = v17;
  v47[3] = v51;
  v47[4] = v12;
  v47[5] = v53;
  v47[0] = v16;
  v47[1] = v49;
  v20 = *(_QWORD *)&a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  swift_retain();
  sub_1BA8C88FC((uint64_t)&v48);
  sub_1BB86D2B8();
  swift_release();
  v21 = v46[15];
  result = objc_msgSend(a2, sel_view);
  if (result)
  {
    v23 = result;
    v24 = *(void **)&a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
    sub_1BB8732C4();
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;
    objc_msgSend(v24, sel_safeAreaInsets);
    sub_1BB532618(v20, v23, v21, v26, v28, v30, v32, v33, v34, v35, v36);

    v37 = sub_1BB86D7A4();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v10, 0, 1, v37);
    sub_1BB19E4E8();
    v38 = sub_1BB86D660();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v7, 0, 1, v38);
    v39 = sub_1BA901208(v47, (uint64_t)v10, (uint64_t)v7);
    v42 = v39;
    v43 = v40;
    if (v41 >= 2u)
    {
      v45 = (v39 ^ 1 | v40) == 0;
    }
    else
    {
      v44 = v41;
      swift_retain();
      sub_1BB86D2B8();
      swift_release();
      sub_1BA5F1DE8(v42, v43, v44);
      v45 = LOBYTE(v47[0]) ^ 1;
    }
    return (id)(v45 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB1AD734(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  type metadata accessor for DebugFormatCanvasLayoutViewResult();
  sub_1BB86EC14();
  v3 = (void *)sub_1BB86DE94();
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  type metadata accessor for DebugFormatCanvasViewController();
  v4 = v2;
  v5 = sub_1BB86E98C();
  swift_release();

  swift_release();
  return v5;
}

uint64_t sub_1BB1AD834(void *a1)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  sub_1BB872AFC(0);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4(a1, 0, 0, 0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1AD970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v6 = sub_1BB48193C(a2, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  return v6;
}

uint64_t sub_1BB1ADA64(uint64_t a1, uint64_t a2)
{
  void *v2;
  char *v3;
  void *v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;

  v2 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView);
  v3 = sub_1BB19E888();
  type metadata accessor for DebugFormatCanvasLayoutViewResult();
  sub_1BB86EC14();
  v4 = (void *)sub_1BB86DE94();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  type metadata accessor for DebugFormatCanvasViewController();
  v6 = v2;
  v7 = v3;
  v8 = sub_1BB86E98C();

  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1BB1ADB84(uint64_t a1, __int128 *a2)
{
  return sub_1BB1AE978(a2);
}

void sub_1BB1ADB9C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  __int128 aBlock;
  __int128 v22;
  __int128 v23;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView);
  objc_msgSend(a1, sel_zoomScale);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale) = v5;
  sub_1BACC73F0();
  v6 = sub_1BB19E888();
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView), sel_transform);
  v7 = v22;
  v8 = v23;
  v9 = &v6[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(_OWORD *)v9 = aBlock;
  *((_OWORD *)v9 + 1) = v7;
  *((_OWORD *)v9 + 2) = v8;
  v10 = objc_opt_self();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v6;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BB1AFE2C;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)&v23 = sub_1BAEFCC00;
  *((_QWORD *)&v23 + 1) = v12;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v22 = sub_1BA4D7928;
  *((_QWORD *)&v22 + 1) = &block_descriptor_49;
  v13 = _Block_copy(&aBlock);
  v14 = v6;
  swift_retain();
  swift_release();
  objc_msgSend((id)v10, sel_performWithoutAnimation_, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  swift_release();
  if ((v10 & 1) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v15 = sub_1BB19E908();
  objc_msgSend(a1, sel_zoomScale);
  v17 = v16 * 100.0;
  if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v17 < 9.22337204e18)
  {
    *(_QWORD *)&aBlock = sub_1BB87420C();
    *((_QWORD *)&aBlock + 1) = v18;
    sub_1BB872AFC(v19);
    v20 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setTitle_, v20);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1BB1ADF4C()
{
  sub_1BA50AD30(&qword_1EF2BCFF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLayoutDirection, (uint64_t)&unk_1BB87AD7C);
  return sub_1BB872CDC();
}

uint64_t sub_1BB1ADFA8()
{
  sub_1BA50AD30(&qword_1EF2BCFF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLayoutDirection, (uint64_t)&unk_1BB87AD7C);
  return sub_1BB872CD0();
}

uint64_t sub_1BB1AE00C()
{
  sub_1BA50AD30(&qword_1EF2BCFF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLayoutDirection, (uint64_t)&unk_1BB87AD7C);
  return sub_1BB872CC4();
}

uint64_t type metadata accessor for DebugFormatEditorViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB1AE088(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30((unint64_t *)&unk_1EF2BCDC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorViewController, (uint64_t)&unk_1BB8F5060);
}

uint64_t sub_1BB1AE0B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = 4;
      do
      {
        v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x1BCCE4630](v7 - 4, a1);
          v10 = __OFADD__(v8, 1);
          v11 = v7 - 3;
          if (v10)
            goto LABEL_18;
        }
        else
        {
          v9 = *(_QWORD *)(a1 + 8 * v7);
          swift_retain();
          v10 = __OFADD__(v8, 1);
          v11 = v7 - 3;
          if (v10)
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v12 = *(_QWORD *)(v9 + 16);
        v13 = *(_QWORD *)(v12 + 16) == a2 && *(_QWORD *)(v12 + 24) == a3;
        if (v13 || (sub_1BB874398() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB1AE1E0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  __int128 *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  void *v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  unsigned __int8 v39;
  double v40;
  double v41;
  double v42;
  double v43;
  char *v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t result;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  char *v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  unsigned __int8 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v3 = v2;
  v71 = sub_1BB86D7A4();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1BB86D678();
  v74 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1BB86D660();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v67 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(uint64_t **)(a1 + 16);
  if (!v11)
    return MEMORY[0x1E0DEE9D8];
  v12 = 0;
  v66 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor;
  v64 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView;
  v13 = a1 + 32;
  v14 = MEMORY[0x1E0DEE9D8];
  v59 = (uint64_t *)((char *)v11 - 1);
  v65 = *MEMORY[0x1E0DB5D88];
  v63 = a2;
  v62 = v11;
  v60 = v13;
  do
  {
    v61 = v14;
    if (v12 <= (unint64_t)v11)
      v15 = v11;
    else
      v15 = (uint64_t *)v12;
    v72 = v15;
    v16 = (__int128 *)(v13 + 144 * v12);
    v17 = (uint64_t *)v12;
    while (1)
    {
      v18 = v72;
      if (v72 == v17)
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        (*(void (**)(char *, uint64_t))(*(v18 - 32) + 8))(v7, v71);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v9, v87);
        result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      v73 = v17;
      v19 = v3;
      v20 = v7;
      v21 = v16[7];
      v82 = v16[6];
      v83 = v21;
      v84 = v16[8];
      v22 = v16[3];
      v78 = v16[2];
      v79 = v22;
      v23 = v16[5];
      v80 = v16[4];
      v81 = v23;
      v24 = *v16;
      v77 = v16[1];
      v76 = v24;
      v25 = *((_QWORD *)&v79 + 1);
      (*(void (**)(char *, _QWORD, uint64_t))(v74 + 104))(v9, v65, v87);
      v26 = *(_QWORD *)&a2[v66];
      swift_retain();
      sub_1BA8C88FC((uint64_t)&v76);
      swift_bridgeObjectRetain();
      sub_1BB86D2B8();
      swift_release();
      v7 = (char *)v75;
      v27 = objc_msgSend(a2, sel_view);
      if (!v27)
        goto LABEL_22;
      v28 = a2;
      v29 = v27;
      v30 = *(void **)&v28[v64];
      sub_1BB8732C4();
      v32 = v31;
      v34 = v33;
      v36 = v35;
      v38 = v37;
      objc_msgSend(v30, sel_safeAreaInsets);
      v39 = v7;
      v7 = v20;
      sub_1BB532618(v26, v29, v39, v32, v34, v36, v38, v40, v41, v42, v43);

      v44 = v67;
      sub_1BB86D66C();
      v3 = v19;
      v18 = &v86;
      if (v19)
        goto LABEL_23;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v7, v71);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v9, v87);
      v45 = sub_1BB86D63C();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v69);
      LOBYTE(v45) = sub_1BA79296C(v45, v25);
      swift_bridgeObjectRelease();
      if ((v45 & 1) != 0)
        break;
      v17 = (uint64_t *)((char *)v73 + 1);
      sub_1BA8C89E4((uint64_t)&v76);
      v16 += 9;
      a2 = v63;
      if (v62 == v17)
        return v61;
    }
    v14 = v61;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v85 = v14;
    v11 = v62;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BA6B28C4(0, *(_QWORD *)(v14 + 16) + 1, 1);
      v14 = v85;
    }
    v13 = v60;
    v48 = *(_QWORD *)(v14 + 16);
    v47 = *(_QWORD *)(v14 + 24);
    if (v48 >= v47 >> 1)
    {
      sub_1BA6B28C4(v47 > 1, v48 + 1, 1);
      v14 = v85;
    }
    v49 = v73;
    v12 = (unint64_t)v73 + 1;
    *(_QWORD *)(v14 + 16) = v48 + 1;
    v50 = (_OWORD *)(v14 + 144 * v48);
    v50[2] = v76;
    v51 = v77;
    v52 = v78;
    v53 = v80;
    v50[5] = v79;
    v50[6] = v53;
    v50[3] = v51;
    v50[4] = v52;
    v54 = v81;
    v55 = v82;
    v56 = v84;
    v50[9] = v83;
    v50[10] = v56;
    v50[7] = v54;
    v50[8] = v55;
    a2 = v63;
  }
  while (v59 != v49);
  return v14;
}

void sub_1BB1AE728()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE __dst[344];

  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages;
  if (qword_1EF2A7490 != -1)
    swift_once();
  memcpy(__dst, &byte_1EF3D09C0, 0x150uLL);
  memmove(&v0[v1], &byte_1EF3D09C0, 0x150uLL);
  v2 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView;
  v3 = objc_allocWithZone((Class)type metadata accessor for DebugFormatRulerView());
  sub_1BAF8EA94((uint64_t)__dst);
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView] = 0;
  v4 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatSnapshotCanvasView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem] = 0;
  v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)&v0[v6] = v7;
  v8 = &v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v8[32] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView] = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editorToolbarItems] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_debuggerToolbarItems] = v9;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerNextBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepInBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOverBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOutBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem] = 0;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB1AE978(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[16];
  _BYTE v43[128];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v2 = v1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - v8;
  v10 = type metadata accessor for DebugFormatCacheFile();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[9];
  v67 = a1[8];
  v68 = v14;
  v15 = *((_QWORD *)a1 + 21);
  v69 = *((_QWORD *)a1 + 20);
  v16 = a1[5];
  v63 = a1[4];
  v64 = v16;
  v17 = a1[7];
  v65 = a1[6];
  v66 = v17;
  v18 = a1[1];
  v59 = *a1;
  v60 = v18;
  v19 = a1[3];
  v61 = a1[2];
  v62 = v19;
  v21 = *((_QWORD *)a1 + 22);
  v20 = *((_QWORD *)a1 + 23);
  v22 = *((unsigned __int8 *)a1 + 192);
  v40 = v15;
  v41 = v20;
  v39 = v22;
  v38 = v21;
  if (v21)
    v23 = swift_bridgeObjectRetain();
  else
    v23 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v44 = v23;
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v24 = *(_QWORD *)(v44 + 16);
  if (!v24)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v25 = (uint64_t *)(v44 + 32 * v24);
  v26 = v25[1];
  v36 = *v25;
  v37 = v2;
  v27 = v25[2];
  v34 = v25[3];
  v35 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if (!(_QWORD)v44)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1BA5C699C((uint64_t)v9, (unint64_t *)&qword_1EF2A9CE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_17;
  }
  v28 = *(_QWORD *)(v44 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(_QWORD *)(v28 + 16))
  {
    swift_bridgeObjectRetain();
    v29 = sub_1BA6E35A8(v36, v26);
    if ((v30 & 1) != 0)
    {
      sub_1BB1AEDB4(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v11 + 72) * v29, (uint64_t)v9);
      v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v31(v9, 0, 1, v10);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v31(v9, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v31(v9, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    goto LABEL_15;
  sub_1BA5193C4((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB1AEDB4((uint64_t)v13, (uint64_t)v6);
  v31(v6, 0, 1, v10);
  v42[0] = v36;
  v42[1] = v26;
  v42[2] = v35;
  v42[3] = v34;
  *(_QWORD *)&v46 = 0;
  v44 = 0u;
  v45 = 0u;
  sub_1BA8EB6E0((uint64_t)v6, v42, (uint64_t *)&v44, (uint64_t)v43);
  sub_1BAF97E40((uint64_t)v43, (uint64_t)&v44);
  sub_1BAF97E40((uint64_t)&v44, (uint64_t)v42);
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
LABEL_17:
  v32 = v41;
  swift_retain();
  sub_1BB86E494();
  result = swift_release();
  if (v44 == 1)
  {
    v52 = v67;
    v53 = v68;
    v48 = v63;
    v49 = v64;
    v50 = v65;
    v51 = v66;
    v44 = v59;
    v45 = v60;
    v46 = v61;
    v47 = v62;
    v54 = v69;
    v55 = v40;
    v56 = v38;
    v57 = v32;
    v58 = v39;
    return sub_1BB82D174((uint64_t)&v44);
  }
  return result;
}

uint64_t sub_1BB1AEDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatCacheFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB1AEDF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BCDD0)
  {
    sub_1BB1B0564(255, &qword_1EF2BCDD8, (void (*)(uint64_t))type metadata accessor for DebugFormatPackageInventory);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BCDD0);
  }
}

uint64_t sub_1BB1AEE64()
{
  uint64_t v0;

  return sub_1BB1AC940(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB1AEE90()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB1AEF24(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_1BB1ACEB8(a1, a2, *(_QWORD *)(v2 + 16), (_OWORD *)(v2 + 24), *(_QWORD *)(v2 + 168));
}

uint64_t sub_1BB1AEF48(void *a1, uint64_t a2)
{
  return sub_1BB1AFAAC(a1, a2);
}

uint64_t sub_1BB1AEF60(void *a1)
{
  return sub_1BB1AD834(a1);
}

uint64_t sub_1BB1AEF94(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  __int128 *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t *v47;
  __int128 v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  int64x2_t *v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  id v79;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  void (*v84)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t *v88;
  uint64_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  _OWORD v98[2];
  uint64_t v99;
  unint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _OWORD v109[2];
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[16];
  _QWORD *v113;

  *(_QWORD *)&v87 = a3;
  v89 = a1;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v86 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v81 - v10;
  v12 = type metadata accessor for DebugFormatCacheFile();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v85 = (uint64_t *)((char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v88 = (uint64_t *)((char *)&v81 - v16);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39B410, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, v6);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v81 - v18;
  v20 = *a2;
  v21 = a2[1];
  v112[0] = a4;
  v22 = a4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v23 = type metadata accessor for FormatLayoutError();
  v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  if (v24)
  {
    v25(v19, 0, 1, v23);
    if (swift_getEnumCaseMultiPayload() == 64)
    {
      v26 = (void *)*((_QWORD *)v19 + 1);
      swift_bridgeObjectRelease();

LABEL_41:
      v77 = (uint64_t)a4;
      goto LABEL_42;
    }
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
  }
  else
  {
    v25(v19, 1, 1, v23);
    sub_1BA5C699C((uint64_t)v19, (unint64_t *)&qword_1ED39B410, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError);
  }
  v113 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(v89 + 40);
  if (!*(_QWORD *)(v27 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_12:
    sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1EF2A9CE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  v28 = sub_1BB4AB7D0(v20, v21, 1);
  if ((v29 & 1) != 0)
  {
    sub_1BB1AEDB4(*(_QWORD *)(v27 + 56) + *(_QWORD *)(v13 + 72) * v28, (uint64_t)v11);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v30((uint64_t)v11, 0, 1, v12);
  }
  else
  {
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v30((uint64_t)v11, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v31(v11, 1, v12) == 1)
    goto LABEL_12;
  v83 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v31;
  v84 = v30;
  v32 = v88;
  sub_1BA5193C4((uint64_t)v11, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  v33 = *(_QWORD *)(v87 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
  v35 = *v32;
  v34 = v32[1];
  v36 = *(_QWORD *)(v33 + 16);
  swift_bridgeObjectRetain();
  *(_QWORD *)&v87 = v36;
  sub_1BB86DD20();
  v81 = v33 + 40;
  swift_beginAccess();
  v82 = v33;
  v37 = *(_QWORD *)(v33 + 40);
  if (*(_QWORD *)(v37 + 16))
  {
    swift_bridgeObjectRetain();
    v38 = sub_1BA6E35A8(v35, v34);
    if ((v39 & 1) != 0)
    {
      v40 = (__int128 *)(*(_QWORD *)(v37 + 56) + (v38 << 7));
      v42 = v40[2];
      v41 = v40[3];
      v43 = v40[1];
      v101 = *v40;
      v102 = v43;
      v103 = v42;
      v104 = v41;
      v44 = v40[4];
      v45 = v40[5];
      v46 = v40[7];
      v107 = v40[6];
      v108 = v46;
      v105 = v44;
      v106 = v45;
      memmove(v109, v40, 0x80uLL);
      nullsub_1();
      sub_1BB0F0E74(&v101);
    }
    else
    {
      sub_1BA8EBB18(v109);
    }
  }
  else
  {
    sub_1BA8EBB18(v109);
    swift_bridgeObjectRetain();
  }
  sub_1BAF97E40((uint64_t)v109, (uint64_t)v112);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1BB86DD2C();
  swift_bridgeObjectRelease();
  sub_1BAF97E40((uint64_t)v112, (uint64_t)v109);
  if (sub_1BA8CF120((uint64_t)v109) != 1)
  {
    sub_1BA8EC210(v110, v111, v88, &v101);
    v48 = v101;
    v87 = v102;
    v49 = sub_1BB38ED20(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v51 = v49[2];
    v50 = v49[3];
    if (v51 >= v50 >> 1)
      v49 = sub_1BB38ED20((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
    v49[2] = v51 + 1;
    v52 = &v49[4 * v51];
    *((_OWORD *)v52 + 2) = v48;
    *((_OWORD *)v52 + 3) = v87;
    v113 = v49;
    if (*(_QWORD *)(v27 + 16))
    {
      v53 = *(_QWORD *)(v89 + 16);
      v54 = *(_QWORD *)(v53 + 16);
      v55 = *(_QWORD *)(v53 + 24);
      swift_bridgeObjectRetain();
      v56 = sub_1BB4AB7D0(v54, v55, 3);
      if ((v57 & 1) != 0)
      {
        v58 = *(_QWORD *)(v27 + 56) + *(_QWORD *)(v13 + 72) * v56;
        v59 = v86;
        sub_1BB1AEDB4(v58, v86);
        v60 = 0;
      }
      else
      {
        v60 = 1;
        v59 = v86;
      }
      v61 = v83;
      v84(v59, v60, 1, v12);
      swift_bridgeObjectRelease();
      if (v61(v59, 1, v12) != 1)
      {
        v62 = v85;
        sub_1BA5193C4(v59, (uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
        v64 = *v62;
        v63 = v62[1];
        v65 = v82;
        swift_bridgeObjectRetain();
        sub_1BB86DD20();
        swift_beginAccess();
        v66 = *(_QWORD *)(v65 + 40);
        if (*(_QWORD *)(v66 + 16))
        {
          swift_bridgeObjectRetain();
          v67 = sub_1BA6E35A8(v64, v63);
          if ((v68 & 1) != 0)
          {
            v69 = (int64x2_t *)(*(_QWORD *)(v66 + 56) + (v67 << 7));
            v71 = v69[2];
            v70 = v69[3];
            v72 = v69[1];
            v90 = *v69;
            v91 = v72;
            v92 = v71;
            v93 = v70;
            v73 = v69[4];
            v74 = v69[5];
            v75 = v69[7];
            v96 = v69[6];
            v97 = v75;
            v94 = v73;
            v95 = v74;
            memmove(v98, v69, 0x80uLL);
            nullsub_1();
            sub_1BB0F0E74(&v90);
          }
          else
          {
            sub_1BA8EBB18(v98);
          }
        }
        else
        {
          sub_1BA8EBB18(v98);
          swift_bridgeObjectRetain();
        }
        sub_1BAF97E40((uint64_t)v98, (uint64_t)&v101);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_1BB86DD2C();
        swift_bridgeObjectRelease();
        sub_1BAF97E40((uint64_t)&v101, (uint64_t)v98);
        if (sub_1BA8CF120((uint64_t)v98) == 1)
        {
          sub_1BA6A0C50(v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
          sub_1BA4A2E80((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
          v47 = v88;
        }
        else
        {
          v76 = v88;
          sub_1BA8EC400(v99, v100, v62, v88, &v90);
          sub_1BAA68624(0, 0, v90.i64[0], v90.i64[1], v91.i64[0], v91.i64[1]);
          sub_1BA6A0C50(&v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
          sub_1BA6A0C50(v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
          sub_1BA4A2E80((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
          v47 = v76;
        }
        goto LABEL_37;
      }
    }
    else
    {
      v59 = v86;
      v84(v86, 1, 1, v12);
    }
    sub_1BA4A2E80((uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    sub_1BA6A0C50(v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAF927BC);
    sub_1BA5C699C(v59, (unint64_t *)&qword_1EF2A9CE0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_38;
  }
  v47 = v88;
LABEL_37:
  sub_1BA4A2E80((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
LABEL_38:
  if (!v113[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  v77 = swift_allocError();
  *v78 = v113;
  v78[1] = a4;
  swift_storeEnumTagMultiPayload();
LABEL_42:
  v79 = a4;
  return v77;
}

uint64_t sub_1BB1AF77C()
{
  uint64_t v0;

  return sub_1BB1AD970(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB1AF798(uint64_t a1, uint64_t a2)
{
  return sub_1BB1ADA64(a1, a2);
}

id sub_1BB1AF7B4()
{
  uint64_t v0;

  return sub_1BB40B120(*(char **)(v0 + 16), *(__int128 **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BB1AF7D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB1AF7FC(uint64_t *a1, void *a2)
{
  uint64_t v2;

  return sub_1BB40B8A8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1BB1AF814(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[6];

  v3 = v2;
  if (MEMORY[0x1BCCE5D40](v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate))
  {
    sub_1BB219B2C(a1, a2);
    swift_unknownObjectRelease();
  }
  swift_retain();
  sub_1BB86E494();
  result = swift_release();
  if (LOBYTE(v15[0]) == 1)
  {
    v7 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView);
    v8 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView);
    v9 = objc_opt_self();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = v7;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_1BB1AF9E4;
    *(_QWORD *)(v11 + 24) = v10;
    v15[4] = sub_1BA4D7948;
    v15[5] = v11;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1BA4D7928;
    v15[3] = &block_descriptor_45;
    v12 = _Block_copy(v15);
    v13 = v8;
    v14 = v7;
    swift_retain();
    swift_release();
    objc_msgSend((id)v9, sel_performWithoutAnimation_, v12);
    _Block_release(v12);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v9 & 1) != 0)
      __break(1u);
  }
  return result;
}

void sub_1BB1AF9E4()
{
  uint64_t v0;

  sub_1BB82EF84(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB1AF9EC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_5()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB1AFA8C(uint64_t a1, uint64_t a2)
{
  return sub_1BB1AD734(a1, a2);
}

uint64_t sub_1BB1AFAAC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[9];

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_OWORD *)(v2 + 104);
  v6 = *(_OWORD *)(v2 + 136);
  v10[6] = *(_OWORD *)(v2 + 120);
  v10[7] = v6;
  v10[8] = *(_OWORD *)(v2 + 152);
  v7 = *(_OWORD *)(v2 + 40);
  v8 = *(_OWORD *)(v2 + 72);
  v10[2] = *(_OWORD *)(v2 + 56);
  v10[3] = v8;
  v10[4] = *(_OWORD *)(v2 + 88);
  v10[5] = v5;
  v10[0] = *(_OWORD *)(v2 + 24);
  v10[1] = v7;
  sub_1BB1AEF94(v4, (uint64_t *)v10, *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor), a1);
  return swift_willThrow();
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB1AFBB8(void *a1)
{
  return sub_1BB1AD834(a1);
}

id sub_1BB1AFBEC()
{
  uint64_t v0;

  return sub_1BB40CBFC(*(char **)(v0 + 16), *(__int128 **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BB1AFC08()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BB1AFC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BB40CD1C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1BB1AFC44()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1BB1AFC68(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

id sub_1BB1AFC88(void *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  double v12;
  double v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double Width;
  double v25;
  double v26;
  double v27;
  double Height;
  double v29;
  CGRect v31;
  CGRect v32;

  v3 = v2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController);
  v7 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView;
  v8 = *(void **)(v6 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView);
  v9 = (void *)objc_opt_self();
  v10 = v8;
  v11 = objc_msgSend(v9, sel_mainScreen);
  objc_msgSend(v11, sel_scale);
  v13 = v12;

  sub_1BB4309B8(v13 * a2);
  v14 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  v15 = objc_msgSend(v9, sel_mainScreen);
  objc_msgSend(v15, sel_scale);
  v17 = v16;

  objc_msgSend(v14, sel_setContentScaleFactor_, v17 * a2);
  v18 = *(_QWORD *)(v6 + v7) + OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame;
  v19 = *(double *)(v18 + 16);
  v20 = *(double *)(v18 + 24);
  objc_msgSend(a1, sel_contentSize);
  v22 = v21;
  v23 = v19 * a2;
  objc_msgSend(a1, sel_frame);
  Width = CGRectGetWidth(v31);
  if (v23 > Width)
    Width = v23;
  if (v22 <= Width)
    v22 = Width;
  objc_msgSend(a1, sel_contentSize);
  v26 = v25;
  v27 = v20 * a2;
  objc_msgSend(a1, sel_frame);
  Height = CGRectGetHeight(v32);
  if (v27 > Height)
    Height = v27;
  if (v26 > Height)
    v29 = v26;
  else
    v29 = Height;
  return objc_msgSend(a1, sel_setContentSize_, v22, v29);
}

void sub_1BB1AFE2C()
{
  uint64_t v0;

  sub_1BB2E2188(*(char **)(v0 + 16));
}

uint64_t sub_1BB1AFE34()
{
  return swift_deallocObject();
}

uint64_t sub_1BB1AFE44()
{
  uint64_t v0;

  return sub_1BB1A3FC0(*(_BYTE *)(v0 + 16));
}

unint64_t sub_1BB1AFE60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AB7F0;
  if (!qword_1EF2AB7F0)
  {
    sub_1BA50CAA8(255, (unint64_t *)&unk_1EF2BCEC0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AB7F0);
  }
  return result;
}

unint64_t sub_1BB1AFEC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCEE0;
  if (!qword_1EF2BCEE0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1EF2BCED0, (uint64_t (*)(void))sub_1BAC6EC4C, (uint64_t)&type metadata for FeedKind, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCEE0);
  }
  return result;
}

unint64_t sub_1BB1AFF30()
{
  unint64_t result;

  result = qword_1EF2BCEF0;
  if (!qword_1EF2BCEF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93EBA8, &type metadata for DebugFormatLocation);
    atomic_store(result, (unint64_t *)&qword_1EF2BCEF0);
  }
  return result;
}

unint64_t sub_1BB1AFF74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCEF8;
  if (!qword_1EF2BCEF8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BCEE8, (uint64_t (*)(void))sub_1BAC6ED5C, (uint64_t)&type metadata for DebugFormatLocation, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCEF8);
  }
  return result;
}

unint64_t sub_1BB1AFFDC()
{
  unint64_t result;

  result = qword_1EF2BCF08;
  if (!qword_1EF2BCF08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB934AE8, &type metadata for DebugFormatWeather);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF08);
  }
  return result;
}

unint64_t sub_1BB1B0020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCF10;
  if (!qword_1EF2BCF10)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BCF00, (uint64_t (*)(void))sub_1BAC6ECD4, (uint64_t)&type metadata for DebugFormatWeather, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF10);
  }
  return result;
}

unint64_t sub_1BB1B0088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AB7E8;
  if (!qword_1EF2AB7E8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AB7E0, (uint64_t (*)(void))sub_1BA970CA8, (uint64_t)&type metadata for DebugFormatUploadTarget, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AB7E8);
  }
  return result;
}

unint64_t sub_1BB1B00F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCF40;
  if (!qword_1EF2BCF40)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1EF2BCF30, (uint64_t (*)(void))sub_1BA970C64, (uint64_t)&type metadata for DebugFormatBackendEnvironment, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF40);
  }
  return result;
}

unint64_t sub_1BB1B0158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCF50;
  if (!qword_1EF2BCF50)
  {
    sub_1BA50CAA8(255, &qword_1EF2AB7F8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF50);
  }
  return result;
}

unint64_t sub_1BB1B01C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCF68;
  if (!qword_1EF2BCF68)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BCF58, (uint64_t (*)(void))sub_1BAC6EF54, (uint64_t)&type metadata for DebugFormatTestScope, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF68);
  }
  return result;
}

unint64_t sub_1BB1B0228()
{
  unint64_t result;

  result = qword_1EF2BCF78;
  if (!qword_1EF2BCF78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9229E0, &type metadata for DebugFormatTestRun);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF78);
  }
  return result;
}

unint64_t sub_1BB1B026C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCF80;
  if (!qword_1EF2BCF80)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BCF70, (uint64_t (*)(void))sub_1BAC6EECC, (uint64_t)&type metadata for DebugFormatTestRun, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF80);
  }
  return result;
}

unint64_t sub_1BB1B02D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCF98;
  if (!qword_1EF2BCF98)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BCF88, (uint64_t (*)(void))sub_1BAC6EDE4, (uint64_t)&type metadata for DebugFormatTestSubject, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF98);
  }
  return result;
}

unint64_t sub_1BB1B033C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCFA8;
  if (!qword_1EF2BCFA8)
  {
    sub_1BA50CAA8(255, &qword_1EF2BCFA0, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCFA8);
  }
  return result;
}

unint64_t sub_1BB1B03A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCFB8;
  if (!qword_1EF2BCFB8)
  {
    sub_1BA50CAA8(255, &qword_1EF2BCFB0, MEMORY[0x1E0DEB070], MEMORY[0x1E0DB5990], MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCFB8);
  }
  return result;
}

unint64_t sub_1BB1B040C()
{
  unint64_t result;

  result = qword_1EF2BCFC8;
  if (!qword_1EF2BCFC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905078, &type metadata for DebugFormatBackgroundColor);
    atomic_store(result, (unint64_t *)&qword_1EF2BCFC8);
  }
  return result;
}

unint64_t sub_1BB1B0450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BCFD0;
  if (!qword_1EF2BCFD0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BCFC0, (uint64_t (*)(void))sub_1BAC6F0F8, (uint64_t)&type metadata for DebugFormatBackgroundColor, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BCFD0);
  }
  return result;
}

void sub_1BB1B04B8(uint64_t a1)
{
  sub_1BB1B04CC(a1, &qword_1EF2BCFD8, MEMORY[0x1E0DB5770]);
}

void sub_1BB1B04CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BB86D234();
    v7 = sub_1BA50AD30(&qword_1ED3D4B30, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB54F8], MEMORY[0x1E0DB54F0]);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BB1B054C()
{
  uint64_t v0;

  return sub_1BB1A6690(*(_QWORD *)(v0 + 16));
}

void sub_1BB1B0564(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BB1B05C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB1B05EC()
{
  uint64_t v0;

  return sub_1BB1A693C(v0);
}

void sub_1BB1B05F4()
{
  uint64_t v0;

  sub_1BB1A1EBC(v0, sub_1BB1A16B4);
}

void sub_1BB1B0614()
{
  uint64_t v0;

  sub_1BB1A1EBC(v0, (void (*)(void))sub_1BB1A188C);
}

void sub_1BB1B0634()
{
  uint64_t v0;

  sub_1BB1A1EBC(v0, sub_1BB1A1BCC);
}

void sub_1BB1B0654()
{
  uint64_t v0;

  sub_1BB1A1EBC(v0, sub_1BB1A1F10);
}

void sub_1BB1B0674(char *a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1BB1A3468(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1BB1A2AD4);
}

void sub_1BB1B0694(char *a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1BB1A3468(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1BB1A2BFC);
}

void sub_1BB1B06B4()
{
  uint64_t v0;

  sub_1BB1A35FC(v0);
}

void sub_1BB1B06BC(uint64_t *a1)
{
  uint64_t v1;

  sub_1BB1A3AEC(a1, v1);
}

uint64_t sub_1BB1B06C4()
{
  return sub_1BB1ABFE4();
}

uint64_t sub_1BB1B06CC()
{
  return swift_deallocObject();
}

void sub_1BB1B06DC(uint64_t a1)
{
  uint64_t v1;

  sub_1BB1A7D64(a1, v1);
}

void sub_1BB1B06E4(uint64_t a1)
{
  uint64_t v1;

  sub_1BB1A875C(a1, v1, sub_1BB1A7E70);
}

uint64_t sub_1BB1B0704(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A7F50(a1, v1);
}

uint64_t sub_1BB1B0724(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A7F50(a1, v1);
}

uint64_t sub_1BB1B0744(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A7F50(a1, v1);
}

uint64_t sub_1BB1B0764(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A7F50(a1, v1);
}

uint64_t sub_1BB1B0784(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A7F50(a1, v1);
}

uint64_t sub_1BB1B07A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A7F50(a1, v1);
}

uint64_t sub_1BB1B07C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A7F50(a1, v1);
}

uint64_t sub_1BB1B07E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A8010(a1, v1);
}

uint64_t sub_1BB1B07EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A80AC(a1, v1);
}

uint64_t sub_1BB1B07F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A8148(a1, v1);
}

uint64_t sub_1BB1B07FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A81C8(a1, v1);
}

uint64_t sub_1BB1B0804(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A824C(a1, v1);
}

uint64_t sub_1BB1B080C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A82FC(a1, v1);
}

uint64_t sub_1BB1B0814(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A83F8(a1, v1);
}

uint64_t sub_1BB1B081C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A8538(a1, v1);
}

uint64_t sub_1BB1B0824(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1A864C(a1, v1);
}

void sub_1BB1B082C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB1A875C(a1, v1, sub_1BB1A87B0);
}

void sub_1BB1B084C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB1AACA8(a1, v1);
}

uint64_t sub_1BB1B0858()
{
  return sub_1BB1B054C();
}

uint64_t sub_1BB1B0890()
{
  return sub_1BB1AF77C();
}

uint64_t sub_1BB1B08A4()
{
  return sub_1BB1AFE44();
}

id sub_1BB1B08B8()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_systemImageNamed_, v0);

  return v1;
}

_QWORD *PuzzleComponentsViewProvider.__allocating_init(puzzleComponentsStyler:sceneProvider:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  _QWORD *v6;
  uint64_t ObjCClassFromMetadata;

  v6 = (_QWORD *)swift_allocObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6[2] = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6[3] = a1;
  v6[4] = a2;
  sub_1BA4CECCC(a3, (uint64_t)(v6 + 5));
  return v6;
}

_QWORD *PuzzleComponentsViewProvider.init(puzzleComponentsStyler:sceneProvider:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  _QWORD *v3;
  uint64_t ObjCClassFromMetadata;

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3[2] = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3[3] = a1;
  v3[4] = a2;
  sub_1BA4CECCC(a3, (uint64_t)(v3 + 5));
  return v3;
}

unint64_t PuzzleComponentsViewProvider.barButtonItems(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;

  swift_retain();
  sub_1BA4BEB58(a2);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BB1B4290(v6, v3, a2, a3);
  sub_1BA49EBE0(a2);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t sub_1BB1B0AB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  _QWORD *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t ObjectType;
  uint64_t (*v57)(uint64_t, uint64_t);
  id v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  void (*v72)(uint64_t *, uint64_t, uint64_t, uint64_t);
  id v73;
  id v74;
  id v75;
  uint64_t (*v76)(uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (**v106)(uint64_t, _QWORD, uint64_t, _QWORD);
  uint64_t v107;
  id v108;
  char *v109;
  char *v110;
  uint64_t *v111;
  char *v112;
  uint64_t v113;
  unint64_t *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v121;
  uint64_t *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v145;
  uint64_t *v146;
  int v147;
  _QWORD *v148;
  id v149;
  id v150;
  _QWORD *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v146 = a4;
  sub_1BA4A3FB4(0, &qword_1EF2BD150, (void (*)(uint64_t))MEMORY[0x1E0DB9588]);
  MEMORY[0x1E0C80A78](v7);
  v128 = (uint64_t *)((char *)&v121 - v8);
  v129 = sub_1BB87060C();
  v133 = *(id *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v123 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v124 = (char *)&v121 - v11;
  v127 = sub_1BB86C8E0();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v125 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB8704D4();
  v138 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v140 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB86FBEC();
  MEMORY[0x1E0C80A78](v15);
  v131 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB870360();
  v142 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v141 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1EF2AE8B0, (void (*)(uint64_t))type metadata accessor for PuzzleToolbarItem);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t *)((char *)&v121 - v21);
  v23 = *a1;
  v24 = (char *)a1[1];
  v25 = (_QWORD *)a1[2];
  v26 = (void *)a1[3];
  v27 = a1[6];
  v28 = a1[7];
  v144 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))a1[8];
  v145 = v27;
  v29 = (void *)a1[9];
  v148 = v25;
  v149 = v29;
  v31 = a1[10];
  v30 = a1[11];
  v32 = a1[12];
  v33 = *((unsigned __int8 *)a1 + 104);
  v35 = a1[15];
  v34 = a1[16];
  LODWORD(v29) = *((unsigned __int8 *)a1 + 136);
  v153 = a2;
  v154 = a3;
  v150 = v26;
  v147 = (int)v29;
  v143 = v17;
  v139 = v13;
  v137 = v30;
  v136 = v31;
  v135 = v34;
  v134 = v35;
  v132 = v36;
  v130 = v33;
  if (v24)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = a2;
    v37[3] = a3;
    v38 = v23;
    v37[4] = v23;
    v37[5] = v24;
    swift_bridgeObjectRetain();
    sub_1BA4BEB58(a2);
    v152 = (id)sub_1BB8738F4();
  }
  else
  {
    v38 = v23;
    v152 = 0;
  }
  if (v32)
  {
    v40 = v153;
    v39 = v154;
    sub_1BA4BEB58(v153);
    swift_bridgeObjectRetain();
    v41 = (uint64_t)v151;
    swift_retain();
    sub_1BB1B3EA0(v32, v41, v40, v39);
    sub_1BA49EBE0(v40);
    swift_release();
    sub_1BA49A224(0, &qword_1EF2B7EB0);
    v42 = v38;
    v43 = (void *)sub_1BB8736C0();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v42 = v38;
    v43 = 0;
  }
  v44 = v149;
  if (!v28)
  {
    v52 = 0;
    v51 = 0;
    goto LABEL_15;
  }
  v45 = v43;
  v46 = (void *)v151[2];
  swift_bridgeObjectRetain_n();
  v47 = v46;
  v48 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v49 = (void *)objc_opt_self();
  v50 = objc_msgSend(v49, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v48, v47, 0);

  if (v50)
  {
    swift_bridgeObjectRelease();
    v51 = v50;
    v43 = v45;
  }
  else
  {
    swift_bridgeObjectRetain();
    v53 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v54 = objc_msgSend(v49, sel_systemImageNamed_, v53);

    swift_bridgeObjectRelease();
    v43 = v45;
    if (!v54)
    {
      v52 = 0;
      v51 = 0;
      goto LABEL_14;
    }
    v51 = v54;
  }
  v55 = v151[4];
  ObjectType = swift_getObjectType();
  v57 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 16);
  v58 = v50;
  v59 = (void *)v57(ObjectType, v55);
  v52 = objc_msgSend(v51, sel_imageByApplyingSymbolConfiguration_, v59);

LABEL_14:
  v44 = v149;
LABEL_15:
  sub_1BB86F67C();
  v60 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v60, sel_setImage_forState_, v52, 0);
  objc_msgSend(v60, sel_setMenu_, v43);
  v61 = v60;
  if (v44)
    v62 = (void *)sub_1BB872970();
  else
    v62 = 0;
  objc_msgSend(v60, sel_setAccessibilityLabel_, v62);

  v63 = v60;
  if (v44)
    v64 = (void *)sub_1BB872970();
  else
    v64 = 0;
  objc_msgSend(v60, sel_setLargeContentTitle_, v64);

  v151 = v52;
  if (v24)
  {
    swift_bridgeObjectRetain();
    v65 = (void *)sub_1BB86F670();
    v66 = (_QWORD *)swift_allocObject();
    v67 = v153;
    v68 = v154;
    v66[2] = v153;
    v66[3] = v68;
    v66[4] = v42;
    v66[5] = v24;
    sub_1BA4BEB58(v67);

    swift_release();
  }
  else
  {
    objc_msgSend(v60, sel_setShowsMenuAsPrimaryAction_, 1);
  }
  sub_1BB8700A8();
  v69 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCustomView_, v60);
  if (v150)
    v70 = (void *)sub_1BB872970();
  else
    v70 = 0;
  objc_msgSend(v69, sel_setTitle_, v70);

  objc_msgSend(v69, sel_setPrimaryAction_, v152);
  sub_1BB87009C();
  if (v24)
  {
    swift_bridgeObjectRetain();
    sub_1BB870090();
  }
  v71 = type metadata accessor for PuzzleToolbarItem(0);
  v72 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
  v72(v22, 1, 1, v71);
  v149 = v51;
  v144 = v72;
  v145 = v71;
  if (v43)
  {
    v73 = objc_allocWithZone(MEMORY[0x1E0CB3A28]);
    v150 = v43;
    v74 = objc_msgSend(v73, sel_init);
    v75 = objc_msgSend(v74, sel_UUIDString);

    sub_1BB8729A0();
    sub_1BB86FC04();
    v130 = (uint64_t)v43;
    v76 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB78F0];
    swift_allocObject();
    v77 = sub_1BB86FBF8();
    v155 = v77;
    swift_retain();
    v148 = v151;
    v133 = v60;
    sub_1BB86FBE0();
    (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v140, *MEMORY[0x1E0DB9368], v139);
    sub_1BA4A2870(&qword_1EF2BD160, v76, MEMORY[0x1E0DB78E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v78 = v141;
    sub_1BB870354();
    v79 = sub_1BB870084();
    v81 = v80;
    sub_1BA502AD0((uint64_t)v22, (unint64_t *)&qword_1EF2AE8B0, (void (*)(uint64_t))type metadata accessor for PuzzleToolbarItem);
    v82 = v145;
    v83 = (uint64_t *)v132;
    v85 = v142;
    v84 = v143;
    (*(void (**)(uint64_t, char *, uint64_t))(v142 + 16))(v132 + *(int *)(v145 + 20), v78, v143);
    *v83 = v79;
    v83[1] = v81;
    v86 = (uint64_t *)((char *)v83 + *(int *)(v82 + 24));
    v87 = v130;
    *v86 = v77;
    v86[1] = v87;
    v86[2] = 0;
    v88 = (uint64_t *)((char *)v83 + *(int *)(v82 + 28));
    v90 = v153;
    v89 = v154;
    *v88 = v153;
    v88[1] = v89;
    v144(v83, 0, 1, v82);
    sub_1BAA7D44C((uint64_t)v83, (uint64_t)v22);
    sub_1BA4BEB58(v90);
    v91 = v150;
    swift_retain();
    v92 = sub_1BB870084();
    v94 = v93;

    v95 = v92;
    swift_release();

    (*(void (**)(char *, uint64_t))(v85 + 8))(v78, v84);
  }
  else
  {
    v122 = v22;
    if (v24)
    {
      v132 = v42;
      v131 = v24;
    }
    else
    {
      v132 = sub_1BB870084();
      v131 = v96;
    }
    swift_bridgeObjectRetain();
    v155 = sub_1BB870084();
    v156 = v97;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v98);
    v99 = v155;
    v100 = v156;
    v101 = v125;
    sub_1BB86C8D4();
    sub_1BB86C8C8();
    (*(void (**)(char *, uint64_t))(v126 + 8))(v101, v127);
    v155 = v99;
    v156 = v100;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v103 = sub_1BB86FF04();
    swift_allocObject();
    v104 = sub_1BB86FEF8();
    if (v151)
    {
      v130 = v103;
      v105 = (uint64_t)v128;
      *v128 = v151;
      v106 = (void (**)(uint64_t, _QWORD, uint64_t, _QWORD))v133;
      v107 = v129;
      (*((void (**)(uint64_t, _QWORD, uint64_t))v133 + 13))(v105, *MEMORY[0x1E0DB9578], v129);
      v106[7](v105, 0, 1, v107);
    }
    else
    {
      v107 = v129;
      v106 = (void (**)(uint64_t, _QWORD, uint64_t, _QWORD))v133;
      v105 = (uint64_t)v128;
      v108 = v150;
      if (!v150)
      {
        (*((void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))v133 + 7))(v128, 1, 1, v129);

        swift_release();
        sub_1BA502AD0(v105, &qword_1EF2BD150, (void (*)(uint64_t))MEMORY[0x1E0DB9588]);
        v118 = v146;
        v22 = v122;
        v95 = v132;
        v94 = v131;
        goto LABEL_40;
      }
      v130 = v103;
      *v128 = v148;
      *(_QWORD *)(v105 + 8) = v108;
      ((void (*)(uint64_t, _QWORD, uint64_t))v106[13])(v105, *MEMORY[0x1E0DB9570], v107);
      v106[7](v105, 0, 1, v107);
      swift_bridgeObjectRetain();
    }
    v109 = v124;
    ((void (*)(char *, uint64_t, uint64_t))v106[4])(v124, v105, v107);
    v155 = v104;
    ((void (*)(char *, char *, uint64_t))v106[2])(v123, v109, v107);
    (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v140, *MEMORY[0x1E0DB9368], v139);
    sub_1BA4A2870(&qword_1EF2BD158, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB80F8], MEMORY[0x1E0DB80F0]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v110 = v141;
    sub_1BB870354();

    (*((void (**)(char *, uint64_t))v133 + 1))(v109, v107);
    v111 = v122;
    sub_1BA502AD0((uint64_t)v122, (unint64_t *)&qword_1EF2AE8B0, (void (*)(uint64_t))type metadata accessor for PuzzleToolbarItem);
    v95 = v132;
    v112 = v131;
    *v111 = v132;
    v111[1] = (uint64_t)v112;
    v113 = v145;
    (*(void (**)(char *, char *, uint64_t))(v142 + 32))((char *)v111 + *(int *)(v145 + 20), v110, v143);
    v114 = (unint64_t *)((char *)v111 + *(int *)(v113 + 24));
    *v114 = v104 | 0x8000000000000000;
    v114[1] = v95;
    v114[2] = (unint64_t)v112;
    v115 = (uint64_t *)((char *)v111 + *(int *)(v113 + 28));
    v117 = v153;
    v116 = v154;
    *v115 = v153;
    v115[1] = v116;
    v144(v111, 0, 1, v113);
    swift_bridgeObjectRetain();
    v22 = v111;
    v94 = v112;
    sub_1BA4BEB58(v117);
    swift_bridgeObjectRetain();
  }
  v118 = v146;
LABEL_40:
  v119 = type metadata accessor for PuzzleBarButtonItem(0);
  sub_1BAA7D44C((uint64_t)v22, (uint64_t)v118 + *(int *)(v119 + 24));
  *v118 = v95;
  v118[1] = (uint64_t)v94;
  v118[2] = (uint64_t)v69;
  *((_BYTE *)v118 + *(int *)(v119 + 28)) = v147;
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v118, 0, 1, v119);
}

uint64_t PuzzleComponentsViewProvider.menu(with:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 96);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
LABEL_3:
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BA4BEB58(a2);
      sub_1BB1B3EA0(v6, v3, a2, a3);
      sub_1BA49EBE0(a2);
      swift_release();
      sub_1BA49A224(0, &qword_1EF2B7EB0);
      return sub_1BB8736C0();
    }
  }
  else if (v6)
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB1B1AA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(_QWORD *);
  _QWORD v5[2];

  if (result)
  {
    v4 = (void (*)(_QWORD *))result;
    v5[0] = a3;
    v5[1] = a4;
    swift_bridgeObjectRetain();
    v4(v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *PuzzleComponentsViewProvider.accessoryComponentView(for:colorTheme:handler:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  _UNKNOWN **v17;
  uint64_t v18;
  char *v19;
  double (__cdecl *v20)();
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  _QWORD v31[5];
  _QWORD v32[2];
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v6 = (void (*)(_QWORD, _QWORD))*a1;
  v5 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v10 = a1[4];
  v9 = a1[5];
  v11 = a1[6];
  v12 = a1[7];
  v13 = a1[8];
  v15 = *(void **)a2;
  v14 = *(void **)(a2 + 8);
  if (v10 >> 8 == 0xFFFFFFFF && v12 < 4)
    return 0;
  if (v12 >> 62)
  {
    if (v12 >> 62 == 1)
    {
      v26 = (char *)objc_allocWithZone((Class)type metadata accessor for PuzzleStackAccessoryView());
      sub_1BAF480B4(v7, v8, v10, v9, v11, v12);
      sub_1BB1B4564(v15, v14);
      sub_1BA4BEB58(a3);
      swift_retain();
      v16 = sub_1BB1B2EA4(v7, v4, v15, v14, a3, a4, v26);
      if (!v16)
        return v16;
      v17 = &protocol witness table for PuzzleStackAccessoryView;
    }
    else
    {
      v18 = a1[1];
      v28 = *a1;
      v19 = (char *)objc_allocWithZone((Class)type metadata accessor for PuzzleButtonsAccessoryView());
      swift_bridgeObjectRetain();
      sub_1BAF480B4(v7, v8, v10, v9, v11, v12);
      sub_1BA4BEB58(a3);
      swift_retain();
      v16 = (void *)sub_1BB1B30C0(v28, v18, v7, v4, a3, a4, v19, 52.0);
      if (!v16)
        return v16;
      v17 = &protocol witness table for PuzzleButtonsAccessoryView;
    }
  }
  else
  {
    *(_QWORD *)&v33 = a1[2];
    *((_QWORD *)&v33 + 1) = v8;
    v34 = v10;
    v35 = v9;
    v36 = v11;
    v37 = v12;
    v38 = v13;
    v23 = *(_QWORD *)(v4 + 24);
    v24 = v5;
    v25 = *(_QWORD *)(v4 + 32);
    v27 = v6;
    v32[0] = v15;
    v32[1] = v14;
    sub_1BA4C010C(v4 + 40, (uint64_t)v31);
    objc_allocWithZone((Class)type metadata accessor for PuzzleHintAccessoryView());
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1BAF480B4(v7, v8, v10, v9, v11, v12);
    sub_1BB1B4564(v15, v14);
    sub_1BA4BEB58(a3);
    v16 = PuzzleHintAccessoryView.init(identifier:minHeight:hintConfig:puzzleComponentsStyler:colorTheme:sceneProvider:handler:)(v27, v24, &v33, v23, v25, (uint64_t)v32, v31, a3, 59.0, a4);
    if (!v16)
      return v16;
    v17 = &protocol witness table for PuzzleHintAccessoryView;
  }
  swift_getObjectType();
  v20 = (double (__cdecl *)())v17[4];
  v21 = v16;
  objc_msgSend(v21, sel_setFrame_, 0.0, 0.0, 1.0, v20());

  return v16;
}

char *PuzzleComponentsViewProvider.accessoryView(for:colorTheme:handler:)(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  __int128 v14;
  uint64_t v15[2];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(a1 + 64);
  v15[0] = *(_QWORD *)a1;
  v15[1] = v4;
  v6 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 16);
  v17 = v6;
  v18 = *(_OWORD *)(a1 + 48);
  v19 = v5;
  v14 = *a2;
  v7 = PuzzleComponentsViewProvider.accessoryComponentView(for:colorTheme:handler:)(v15, (uint64_t)&v14, a3, a4);
  v9 = v8;
  if (qword_1EF2A70A0 != -1)
    swift_once();
  v10 = (char *)(id)qword_1EF2BD000;
  sub_1BB1B26EC(v7, v9);
  v11 = &v10[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  v12 = *(void **)&v10[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  *(_QWORD *)v11 = v7;
  *((_QWORD *)v11 + 1) = v9;

  return v10;
}

uint64_t PuzzleComponentsViewProvider.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return v0;
}

uint64_t PuzzleComponentsViewProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

unint64_t sub_1BB1B1F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;

  swift_retain();
  sub_1BA4BEB58(a2);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BB1B4290(v6, v3, a2, a3);
  sub_1BA49EBE0(a2);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

void PuzzleComponentsViewProvider.menuElement(with:handler:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  BOOL v14;
  int v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = (id)a1[7];
  v7 = a1[14];
  v8 = a1[1];
  v9 = a1[12];
  v18 = *a1;
  if (v6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v10);

    if (v8)
      goto LABEL_3;
LABEL_18:
    if (v9)
    {
      sub_1BA4BEB58(a2);
      swift_retain();
      sub_1BB1B3AB0(v9, v3, a2, a3);
      sub_1BA49EBE0(a2);
      swift_release();
      sub_1BA49A224(0, &qword_1EF2B7EB0);
      sub_1BB8736C0();
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_18;
LABEL_3:
  if (!v7 || (v11 = *(_QWORD *)(v7 + 16)) == 0)
  {
LABEL_16:
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = a2;
    v17[3] = a3;
    v17[4] = v18;
    v17[5] = v8;
    swift_bridgeObjectRetain();
    sub_1BA4BEB58(a2);
    sub_1BB8738F4();
    return;
  }
  v12 = 0;
  v13 = (unsigned __int8 *)(v7 + 32);
  while (1)
  {
    v16 = *v13++;
    v15 = v16;
    if (!v16)
    {
      v14 = __CFADD__(v12, 2);
      v12 += 2;
      if (v14)
      {
        __break(1u);
        goto LABEL_16;
      }
      goto LABEL_7;
    }
    if (v15 != 1)
      break;
    v14 = __CFADD__(v12++, 1);
    if (v14)
      goto LABEL_22;
LABEL_7:
    if (!--v11)
      goto LABEL_16;
  }
  v14 = __CFADD__(v12, 8);
  v12 += 8;
  if (!v14)
    goto LABEL_7;
  __break(1u);
LABEL_22:
  __break(1u);
}

id sub_1BB1B22E8(void *a1)
{
  char *v1;
  char *v2;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *);
  _QWORD v18[4];

  v2 = v1;
  result = objc_msgSend(a1, sel_input);
  if (!result)
    return result;
  v4 = result;
  v5 = sub_1BB8729A0();
  v7 = v6;

  v8 = &v2[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_events];
  swift_beginAccess();
  v9 = *(_QWORD *)v8;
  if (!*(_QWORD *)(v9 + 16))
    return (id)swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(v5, v7);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  v12 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 32 * v10);
  v14 = *v12;
  v13 = v12[1];
  v16 = v12[2];
  v15 = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = *(void (**)(_QWORD *))&v2[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_handler];
  if (v17)
  {
    v18[0] = v14;
    v18[1] = v13;
    v18[2] = v16;
    v18[3] = v15;
    swift_retain();
    v17(v18);
    sub_1BA49EBE0((uint64_t)v17);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id sub_1BB1B2600()
{
  return sub_1BAABB8AC((uint64_t (*)(_QWORD))type metadata accessor for PuzzleAlertController);
}

uint64_t sub_1BB1B2658(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  _QWORD v7[2];

  if (a2)
  {
    v7[0] = a4;
    v7[1] = a5;
    swift_bridgeObjectRetain();
    a2(v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1BB1B26AC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessoryViewContainer()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  qword_1EF2BD000 = (uint64_t)result;
  return result;
}

void sub_1BB1B26EC(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t ObjectType;
  double v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;

  v3 = v2;
  if (a1)
  {
    ObjectType = swift_getObjectType();
    v7 = (*(double (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
    v8 = OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height;
    *(double *)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height] = v7;
    v9 = objc_msgSend(a1, sel_heightAnchor);
    v10 = objc_msgSend(v9, sel_constraintEqualToConstant_, *(double *)&v3[v8]);

  }
  else
  {
    v10 = 0;
    *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height] = 0;
  }
  v11 = OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_heightConstraint;
  v12 = *(void **)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_heightConstraint];
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_heightConstraint] = v10;

  v13 = *(void **)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  if (v13)
    objc_msgSend(v13, sel_removeFromSuperview);
  if (a1)
  {
    objc_msgSend(v3, sel_addSubview_, a1);
    objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v14 = (void *)objc_opt_self();
    sub_1BA65E330();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BB895C60;
    v32 = a1;
    v16 = objc_msgSend(v32, sel_leadingAnchor);
    v17 = objc_msgSend(v3, sel_leadingAnchor);
    v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    *(_QWORD *)(v15 + 32) = v18;
    v19 = objc_msgSend(v32, sel_trailingAnchor);
    v20 = objc_msgSend(v3, sel_trailingAnchor);
    v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

    *(_QWORD *)(v15 + 40) = v21;
    v22 = objc_msgSend(v32, sel_topAnchor);
    v23 = objc_msgSend(v3, sel_topAnchor);
    v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

    *(_QWORD *)(v15 + 48) = v24;
    v25 = objc_msgSend(v32, sel_bottomAnchor);
    v26 = objc_msgSend(v3, sel_layoutMarginsGuide);
    v27 = objc_msgSend(v26, sel_bottomAnchor);

    v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
    *(_QWORD *)(v15 + 56) = v28;
    sub_1BB872DCC();
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2C1570);
    v29 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_activateConstraints_, v29);

    v30 = *(void **)&v3[v11];
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v31, sel_setActive_, 1);

    }
  }
}

id sub_1BB1B2C2C(double a1)
{
  char *v1;
  char *v2;
  char *v3;
  void *v4;
  double v5;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, double);
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  double (*v14)(uint64_t, uint64_t);
  id v15;

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  v4 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  v5 = 0.0;
  if (v4)
  {
    v7 = *((_QWORD *)v3 + 1);
    ObjectType = swift_getObjectType();
    v9 = *(void (**)(uint64_t, uint64_t, double))(v7 + 40);
    v10 = v4;
    v9(ObjectType, v7, a1);

    v11 = *(void **)v3;
    if (*(_QWORD *)v3)
    {
      v12 = *((_QWORD *)v3 + 1);
      v13 = swift_getObjectType();
      v14 = *(double (**)(uint64_t, uint64_t))(v12 + 32);
      v15 = v11;
      v5 = v14(v13, v12);

    }
  }
  *(double *)&v2[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height] = v5;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_heightConstraint], sel_setConstant_, v5);
  return objc_msgSend(v2, sel_setNeedsUpdateConstraints);
}

id sub_1BB1B2D44()
{
  return sub_1BAABB8AC((uint64_t (*)(_QWORD))type metadata accessor for AccessoryViewContainer);
}

uint64_t sub_1BB1B2D9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB1B2DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_identifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BB1B2E4C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_1BB1B2E90()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height);
}

id sub_1BB1B2EA4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, char *a7)
{
  char *v14;
  char *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  double v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  id v26;
  id v27;
  objc_class *ObjectType;
  uint64_t v30;
  char v31[16];
  uint64_t v32;
  _UNKNOWN **v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType();
  v14 = &a7[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_identifier];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v32 = a2;
  v33 = &protocol witness table for PuzzleComponentsViewProvider;
  v34 = a3;
  v35 = a4;
  v30 = a5;
  v36 = a5;
  v37 = a6;
  v15 = a7;
  v16 = sub_1BB1419B4((void (*)(__int128 *__return_ptr, _QWORD *))sub_1BB1B4C70, (uint64_t)v31, a1);
  sub_1BA8FD980(a3, a4);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_stackViews] = v16;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v18 = v16[2];
  if (v18)
  {
    swift_bridgeObjectRetain();
    v19 = v16 + 5;
    v20 = 0.0;
    do
    {
      v21 = (void *)*(v19 - 1);
      v22 = *v19;
      v23 = swift_getObjectType();
      v24 = v21;
      objc_msgSend(v17, sel_addSubview_, v24);
      v25 = (*(double (**)(uint64_t, uint64_t))(v22 + 32))(v23, v22);

      v20 = v20 + v25;
      v19 += 2;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0.0;
  }
  *(double *)&v15[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_height] = v20;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_containerView] = v17;
  v26 = v17;

  v38.receiver = v15;
  v38.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v38, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v27, sel_addSubview_, v26);
  sub_1BA49EBE0(v30);

  swift_release();
  return v27;
}

uint64_t sub_1BB1B30C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, double a8)
{
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  double v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  void *v84;
  objc_class *ObjectType;
  id v86;
  char v87[16];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _UNKNOWN **v91;
  uint64_t v92;
  uint64_t v93;
  objc_super v94;
  uint64_t v95;

  ObjectType = (objc_class *)swift_getObjectType();
  v16 = &a7[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_identifier];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_spacing] = 0x4020000000000000;
  v88 = a1;
  v89 = a2;
  v90 = a4;
  v91 = &protocol witness table for PuzzleComponentsViewProvider;
  v92 = a5;
  v93 = a6;
  v17 = a7;
  v18 = sub_1BB140E74((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB1B4C90, (uint64_t)v87, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = MEMORY[0x1E0DEE9D8];
  if (v19)
  {
    v95 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC79F8C(0, v19 & ~(v19 >> 63), 0);
    if (v19 < 0)
    {
      __break(1u);
      return result;
    }
    v22 = 0;
    v20 = v95;
    v23 = *MEMORY[0x1E0DC4FF8];
    v24 = *(double *)(MEMORY[0x1E0DC4FF8] + 8);
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
        v25 = (id)MEMORY[0x1BCCE4630](v22, v18);
      else
        v25 = *(id *)(v18 + 8 * v22 + 32);
      v26 = v25;
      objc_msgSend(v25, sel_systemLayoutSizeFittingSize_, v23, v24, ObjectType);
      v28 = v27;

      v95 = v20;
      v30 = *(_QWORD *)(v20 + 16);
      v29 = *(_QWORD *)(v20 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1BAC79F8C(v29 > 1, v30 + 1, 1);
        v20 = v95;
      }
      ++v22;
      *(_QWORD *)(v20 + 16) = v30 + 1;
      *(_QWORD *)(v20 + 8 * v30 + 32) = v28;
    }
    while (v19 != v22);
  }
  *(double *)&v31 = COERCE_DOUBLE(sub_1BB82CC78(v20));
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = *(double *)&v31;
  if ((v33 & 1) != 0)
    v34 = 0.0;
  if (v34 <= a8)
    v34 = a8;
  *(double *)&v17[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_height] = v34;
  if (v18 >> 62)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
    swift_bridgeObjectRetain();
    sub_1BB873EB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BB874428();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  }
  swift_bridgeObjectRelease();
  v35 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v36 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v35, sel_initWithArrangedSubviews_, v36);

  objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v37, sel_setAxis_, 0);
  objc_msgSend(v37, sel_setDistribution_, 2);
  objc_msgSend(v37, sel_setAlignment_, 3);
  objc_msgSend(v37, sel_setSpacing_, 8.0);
  objc_msgSend(v37, sel_setLayoutMarginsRelativeArrangement_, 1);
  v38 = v37;

  objc_msgSend(v38, sel_setLayoutMargins_, 8.0, 8.0, 8.0, 8.0);
  v94.receiver = v17;
  v94.super_class = ObjectType;
  v39 = objc_msgSendSuper2(&v94, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v40 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v41 = v39;
  v42 = objc_msgSend(v40, sel_init);
  objc_msgSend(v42, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_init);
  objc_msgSend(v43, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v41, sel_addSubview_, v43);
  objc_msgSend(v43, sel_addSubview_, v42);
  objc_msgSend(v42, sel_addSubview_, v38);
  v86 = (id)objc_opt_self();
  sub_1BA65E330();
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1BB87EBC0;
  v45 = objc_msgSend(v43, sel_topAnchor);
  v46 = objc_msgSend(v41, (SEL)&selRef_setContentsGravity_ + 4);
  v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

  *(_QWORD *)(v44 + 32) = v47;
  v48 = objc_msgSend(v43, sel_leadingAnchor);
  v49 = objc_msgSend(v41, (SEL)&selRef_absoluteTimeInterval + 6);
  v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(_QWORD *)(v44 + 40) = v50;
  v51 = objc_msgSend(v43, sel_trailingAnchor);
  v52 = objc_msgSend(v41, (SEL)&selRef_ultraQualityImage);
  v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v52);

  *(_QWORD *)(v44 + 48) = v53;
  v54 = objc_msgSend(v43, sel_bottomAnchor);
  v55 = objc_msgSend(v41, sel_bottomAnchor);
  v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v55);

  *(_QWORD *)(v44 + 56) = v56;
  v57 = objc_msgSend(v42, sel_topAnchor);
  v58 = objc_msgSend(v43, sel_topAnchor);
  v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v58);

  *(_QWORD *)(v44 + 64) = v59;
  v60 = objc_msgSend(v42, sel_leadingAnchor);
  v61 = objc_msgSend(v43, sel_leadingAnchor);
  v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

  *(_QWORD *)(v44 + 72) = v62;
  v63 = objc_msgSend(v42, sel_trailingAnchor);
  v64 = objc_msgSend(v43, sel_trailingAnchor);
  v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_, v64);

  *(_QWORD *)(v44 + 80) = v65;
  v66 = objc_msgSend(v42, sel_bottomAnchor);
  v67 = objc_msgSend(v43, sel_bottomAnchor);
  v68 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v67);

  *(_QWORD *)(v44 + 88) = v68;
  v69 = objc_msgSend(v42, sel_heightAnchor);
  v70 = objc_msgSend(v43, sel_heightAnchor);
  v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v70);

  *(_QWORD *)(v44 + 96) = v71;
  v72 = objc_msgSend(v38, sel_topAnchor);
  v73 = objc_msgSend(v42, sel_topAnchor);
  v74 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v73);

  *(_QWORD *)(v44 + 104) = v74;
  v75 = objc_msgSend(v38, sel_leadingAnchor);
  v76 = objc_msgSend(v42, sel_leadingAnchor);
  v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v76);

  *(_QWORD *)(v44 + 112) = v77;
  v78 = objc_msgSend(v38, sel_trailingAnchor);
  v79 = objc_msgSend(v42, sel_trailingAnchor);
  v80 = objc_msgSend(v78, sel_constraintEqualToAnchor_, v79);

  *(_QWORD *)(v44 + 120) = v80;
  v81 = objc_msgSend(v38, sel_bottomAnchor);
  v82 = objc_msgSend(v42, sel_bottomAnchor);
  v83 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v82);

  *(_QWORD *)(v44 + 128) = v83;
  v95 = v44;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2C1570);
  v84 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v86, sel_activateConstraints_, v84);
  sub_1BA49EBE0(a5);

  swift_release();
  return (uint64_t)v41;
}

void sub_1BB1B3AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  BOOL v17;
  int v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[3];
  uint64_t v43;

  v5 = *(_QWORD *)(a1 + 16);
  v43 = MEMORY[0x1E0DEE9D8];
  v33 = v5;
  if (!v5)
    return;
  v32 = a1 + 32;
  swift_bridgeObjectRetain();
  v6 = *(_OWORD *)(a1 + 144);
  v41 = *(_OWORD *)(a1 + 128);
  v42[0] = v6;
  *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)(a1 + 153);
  v7 = *(_OWORD *)(a1 + 80);
  v37 = *(_OWORD *)(a1 + 64);
  v38 = v7;
  v8 = 1;
  v9 = *(_OWORD *)(a1 + 112);
  v39 = *(_OWORD *)(a1 + 96);
  v40 = v9;
  v10 = *(_OWORD *)(a1 + 48);
  v35 = *(_OWORD *)(a1 + 32);
  v36 = v10;
  while (1)
  {
    v11 = (id)*((_QWORD *)&v38 + 1);
    if (!*((_QWORD *)&v38 + 1))
      break;
    sub_1BA880110((uint64_t)&v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v12);

    v13 = *((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
      goto LABEL_5;
LABEL_20:
    v22 = v41;
    if (!(_QWORD)v41)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1BA8801B4((uint64_t)&v35);
      goto LABEL_25;
    }
    sub_1BA4BEB58(a3);
    swift_retain();
    sub_1BB1B3AB0(v22, a2, a3, a4);
    sub_1BA49EBE0(a3);
    swift_release();
    sub_1BA49A224(0, &qword_1EF2B7EB0);
    sub_1BB8736C0();
LABEL_22:
    v23 = sub_1BA8801B4((uint64_t)&v35);
    MEMORY[0x1BCCE36AC](v23);
    if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
LABEL_25:
    if (v8 == v33)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v24 = (__int128 *)(v32 + 144 * v8);
    v25 = v24[7];
    v41 = v24[6];
    v42[0] = v25;
    *(_OWORD *)((char *)v42 + 9) = *(__int128 *)((char *)v24 + 121);
    v26 = v24[3];
    v37 = v24[2];
    v38 = v26;
    v27 = v24[5];
    v39 = v24[4];
    v40 = v27;
    v28 = v24[1];
    v35 = *v24;
    v36 = v28;
    ++v8;
  }
  sub_1BA880110((uint64_t)&v35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = *((_QWORD *)&v35 + 1);
  if (!*((_QWORD *)&v35 + 1))
    goto LABEL_20;
LABEL_5:
  if (!*(_QWORD *)&v42[0] || (v14 = *(_QWORD *)(*(_QWORD *)&v42[0] + 16)) == 0)
  {
LABEL_18:
    v34 = v8;
    v20 = v35;
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a3;
    v21[3] = a4;
    v21[4] = v20;
    v21[5] = v13;
    swift_bridgeObjectRetain();
    sub_1BA4BEB58(a3);
    v8 = v34;
    sub_1BB8738F4();
    goto LABEL_22;
  }
  v15 = 0;
  v16 = (unsigned __int8 *)(*(_QWORD *)&v42[0] + 32);
  while (1)
  {
    v19 = *v16++;
    v18 = v19;
    if (!v19)
    {
      v17 = __CFADD__(v15, 2);
      v15 += 2;
      if (v17)
        goto LABEL_32;
      goto LABEL_9;
    }
    if (v18 != 1)
      break;
    v17 = __CFADD__(v15++, 1);
    if (v17)
      goto LABEL_31;
LABEL_9:
    if (!--v14)
      goto LABEL_18;
  }
  v17 = __CFADD__(v15, 8);
  v15 += 8;
  if (!v17)
    goto LABEL_9;
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_1BB1B3EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  BOOL v17;
  int v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[3];
  uint64_t v43;

  v5 = *(_QWORD *)(a1 + 16);
  v43 = MEMORY[0x1E0DEE9D8];
  v33 = v5;
  if (!v5)
    return;
  v32 = a1 + 32;
  swift_bridgeObjectRetain();
  v6 = *(_OWORD *)(a1 + 144);
  v41 = *(_OWORD *)(a1 + 128);
  v42[0] = v6;
  *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)(a1 + 153);
  v7 = *(_OWORD *)(a1 + 80);
  v37 = *(_OWORD *)(a1 + 64);
  v38 = v7;
  v8 = 1;
  v9 = *(_OWORD *)(a1 + 112);
  v39 = *(_OWORD *)(a1 + 96);
  v40 = v9;
  v10 = *(_OWORD *)(a1 + 48);
  v35 = *(_OWORD *)(a1 + 32);
  v36 = v10;
  while (1)
  {
    v11 = (id)*((_QWORD *)&v38 + 1);
    if (!*((_QWORD *)&v38 + 1))
      break;
    sub_1BA880110((uint64_t)&v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v12);

    v13 = *((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
      goto LABEL_5;
LABEL_20:
    v22 = v41;
    if (!(_QWORD)v41)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1BA8801B4((uint64_t)&v35);
      goto LABEL_25;
    }
    sub_1BA4BEB58(a3);
    swift_retain();
    sub_1BB1B3AB0(v22, a2, a3, a4);
    sub_1BA49EBE0(a3);
    swift_release();
    sub_1BA49A224(0, &qword_1EF2B7EB0);
    sub_1BB8736C0();
LABEL_22:
    v23 = sub_1BA8801B4((uint64_t)&v35);
    MEMORY[0x1BCCE36AC](v23);
    if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
LABEL_25:
    if (v8 == v33)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v24 = (__int128 *)(v32 + 144 * v8);
    v25 = v24[7];
    v41 = v24[6];
    v42[0] = v25;
    *(_OWORD *)((char *)v42 + 9) = *(__int128 *)((char *)v24 + 121);
    v26 = v24[3];
    v37 = v24[2];
    v38 = v26;
    v27 = v24[5];
    v39 = v24[4];
    v40 = v27;
    v28 = v24[1];
    v35 = *v24;
    v36 = v28;
    ++v8;
  }
  sub_1BA880110((uint64_t)&v35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = *((_QWORD *)&v35 + 1);
  if (!*((_QWORD *)&v35 + 1))
    goto LABEL_20;
LABEL_5:
  if (!*(_QWORD *)&v42[0] || (v14 = *(_QWORD *)(*(_QWORD *)&v42[0] + 16)) == 0)
  {
LABEL_18:
    v34 = v8;
    v20 = v35;
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a3;
    v21[3] = a4;
    v21[4] = v20;
    v21[5] = v13;
    swift_bridgeObjectRetain();
    sub_1BA4BEB58(a3);
    v8 = v34;
    sub_1BB8738F4();
    goto LABEL_22;
  }
  v15 = 0;
  v16 = (unsigned __int8 *)(*(_QWORD *)&v42[0] + 32);
  while (1)
  {
    v19 = *v16++;
    v18 = v19;
    if (!v19)
    {
      v17 = __CFADD__(v15, 2);
      v15 += 2;
      if (v17)
        goto LABEL_32;
      goto LABEL_9;
    }
    if (v18 != 1)
      break;
    v17 = __CFADD__(v15++, 1);
    if (v17)
      goto LABEL_31;
LABEL_9:
    if (!--v14)
      goto LABEL_18;
  }
  v17 = __CFADD__(v15, 8);
  v15 += 8;
  if (!v17)
    goto LABEL_9;
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

unint64_t sub_1BB1B4290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[7];
  _OWORD v39[2];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[3];
  uint64_t v48;

  v5 = v4;
  v48 = a3;
  sub_1BA4A3FB4(0, &qword_1EF2BD148, (void (*)(uint64_t))type metadata accessor for PuzzleBarButtonItem);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v32 - v9);
  v37 = type metadata accessor for PuzzleBarButtonItem(0);
  v11 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v35 = (uint64_t)&v32 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x1E0DEE9D8];
  v32 = v5;
  swift_bridgeObjectRetain();
  v16 = *(_OWORD *)(a1 + 144);
  v46 = *(_OWORD *)(a1 + 128);
  v47[0] = v16;
  *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)(a1 + 153);
  v17 = *(_OWORD *)(a1 + 80);
  v42 = *(_OWORD *)(a1 + 64);
  v43 = v17;
  v18 = *(_OWORD *)(a1 + 112);
  v44 = *(_OWORD *)(a1 + 96);
  v45 = v18;
  v19 = *(_OWORD *)(a1 + 48);
  v20 = v15 - 1;
  v21 = 176;
  v40 = *(_OWORD *)(a1 + 32);
  v41 = v19;
  v22 = MEMORY[0x1E0DEE9D8];
  v33 = a1;
  v34 = a4;
  while (1)
  {
    v38[6] = v46;
    v39[0] = v47[0];
    *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v47 + 9);
    v38[2] = v42;
    v38[3] = v43;
    v38[4] = v44;
    v38[5] = v45;
    v38[0] = v40;
    v38[1] = v41;
    sub_1BA880110((uint64_t)&v40);
    sub_1BB1B0AB4((uint64_t *)v38, v48, a4, v10);
    sub_1BA8801B4((uint64_t)&v40);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v37) != 1)
      break;
    sub_1BA502AD0((uint64_t)v10, &qword_1EF2BD148, (void (*)(uint64_t))type metadata accessor for PuzzleBarButtonItem);
    if (!v20)
      goto LABEL_12;
LABEL_11:
    v26 = *(_OWORD *)(a1 + v21 + 112);
    v46 = *(_OWORD *)(a1 + v21 + 96);
    v47[0] = v26;
    *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)(a1 + v21 + 121);
    v27 = *(_OWORD *)(a1 + v21 + 48);
    v42 = *(_OWORD *)(a1 + v21 + 32);
    v43 = v27;
    v28 = *(_OWORD *)(a1 + v21 + 80);
    v44 = *(_OWORD *)(a1 + v21 + 64);
    v45 = v28;
    v30 = *(_OWORD *)(a1 + v21);
    v29 = *(_OWORD *)(a1 + v21 + 16);
    v21 += 144;
    --v20;
    v40 = v30;
    v41 = v29;
  }
  v23 = v35;
  sub_1BB1B4CB4((uint64_t)v10, v35);
  sub_1BB1B4CB4(v23, v36);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_1BB39317C(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
  v25 = *(_QWORD *)(v22 + 16);
  v24 = *(_QWORD *)(v22 + 24);
  if (v25 >= v24 >> 1)
    v22 = sub_1BB39317C(v24 > 1, v25 + 1, 1, v22);
  *(_QWORD *)(v22 + 16) = v25 + 1;
  sub_1BB1B4CB4(v36, v22+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v25);
  a1 = v33;
  a4 = v34;
  if (v20)
    goto LABEL_11;
LABEL_12:
  swift_bridgeObjectRelease();
  return v22;
}

id sub_1BB1B4564(id result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = result;
    return a2;
  }
  return result;
}

id _s8NewsFeed28PuzzleComponentsViewProviderC5alert3for7handlerSo17UIAlertControllerCAA0C18AlertConfigurationV_yAA0c9ComponentL5EventVcSgtF_0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  char isUniquelyReferenced_nonNull_native;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[7];

  v6 = *a1;
  v5 = a1[1];
  v7 = a1[5];
  v8 = a1[6];
  if (!a1[3])
  {
    swift_bridgeObjectRetain();
    v9 = 0;
    if (v7)
      goto LABEL_3;
LABEL_5:
    v10 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_5;
LABEL_3:
  v10 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
LABEL_6:
  type metadata accessor for PuzzleAlertController();
  v11 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_alertControllerWithTitle_message_preferredStyle_, v9, v10, 1);

  v46 = v11;
  v12 = (uint64_t *)&v11[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_handler];
  v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_handler];
  *v12 = a2;
  v12[1] = a3;
  sub_1BA4BEB58(a2);
  sub_1BA49EBE0(v13);
  if (v8)
  {
    v45 = *(_QWORD *)(v8 + 16);
    if (v45)
    {
      v43 = v8 + 32;
      v42 = (id)objc_opt_self();
      v40 = &v11[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_commands];
      v37 = &v11[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_events];
      swift_bridgeObjectRetain_n();
      v14 = 0;
      v38 = a2;
      v39 = a3;
      v15 = v6;
      v16 = v5;
      v44 = v15;
      v41 = v5;
      while (1)
      {
        while (1)
        {
          v17 = v43 + 40 * v14;
          v19 = *(_QWORD *)v17;
          v18 = *(_QWORD *)(v17 + 8);
          v20 = *(_QWORD *)(v17 + 24);
          v21 = *(unsigned __int8 *)(v17 + 32);
          v22 = (_QWORD *)swift_allocObject();
          v22[2] = a2;
          v22[3] = a3;
          v22[4] = v15;
          v22[5] = v16;
          v47 = v19;
          v22[6] = v19;
          v22[7] = v18;
          v23 = v20;
          v24 = v18;
          sub_1BA4BEB58(a2);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          if (v23)
          {
            swift_bridgeObjectRetain_n();
            v25 = (void *)sub_1BB872970();
            swift_bridgeObjectRelease();
          }
          else
          {
            v25 = 0;
          }
          aBlock[4] = sub_1BB1B4C2C;
          aBlock[5] = v22;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1BA573874;
          aBlock[3] = &block_descriptor_46;
          v26 = _Block_copy(aBlock);
          swift_release();
          v27 = objc_msgSend(v42, sel_actionWithTitle_style_handler_, v25, v21, v26);
          _Block_release(v26);

          objc_msgSend(v46, sel_addAction_, v27);
          if ((_DWORD)v21 != 1)
            break;
          swift_bridgeObjectRelease();
          v48 = v14 + 1;
LABEL_17:
          v29 = sub_1BB8729A0();
          v31 = v30;
          v32 = (void *)sub_1BB872970();
          v33 = objc_msgSend((id)objc_opt_self(), sel_keyCommandWithInput_modifierFlags_action_, v32, 0, sel_didPressKey_);

          swift_beginAccess();
          v34 = v33;
          MEMORY[0x1BCCE36AC]();
          if (*(_QWORD *)((*(_QWORD *)v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v40 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
          swift_endAccess();
          swift_beginAccess();
          v16 = v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v49 = *(_QWORD *)v37;
          *(_QWORD *)v37 = 0x8000000000000000;
          v15 = v44;
          sub_1BB4C05DC(v44, v41, v47, v24, v29, v31, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)v37 = v49;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v14 = v48;
          a2 = v38;
          a3 = v39;
          if (v48 == v45)
          {
LABEL_20:
            swift_bridgeObjectRelease_n();
            return v46;
          }
        }
        ++v14;
        v28 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v28 & 1) != 0)
        {
          v48 = v14;
          goto LABEL_17;
        }
        swift_bridgeObjectRelease_n();
        v16 = v41;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v15 = v44;
        if (v14 == v45)
          goto LABEL_20;
      }
    }
  }
  return v46;
}

uint64_t sub_1BB1B4B04(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1B2658(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.identifier.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.identifier.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.height.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.updateHeight(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.barButtonItems(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.menuElement(with:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.menu(with:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.accessoryView(for:colorTheme:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.accessoryComponentView(for:colorTheme:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.alert(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t type metadata accessor for PuzzleComponentsViewProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for PuzzleComponentsViewProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PuzzleComponentsViewProvider.__allocating_init(puzzleComponentsStyler:sceneProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for PuzzleAlertController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AccessoryViewContainer()
{
  return objc_opt_self();
}

uint64_t sub_1BB1B4BF0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB1B4C2C()
{
  uint64_t v0;
  uint64_t (*v1)(__int128 *);
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(uint64_t (**)(__int128 *))(v0 + 16);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v2 = *(_QWORD *)(v0 + 56);
    v5 = *(_OWORD *)(v0 + 32);
    v6 = v3;
    v7 = v2;
    return v1(&v5);
  }
  return result;
}

uint64_t sub_1BB1B4C70@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BB4550F0(a1, v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

void *sub_1BB1B4C90@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BA87E9A4(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t sub_1BB1B4CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleBarButtonItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1B4CFC()
{
  uint64_t *v0;

  return sub_1BB1B1AA0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t FormatFileReference.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata2;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v33;
  unint64_t v34;

  v2 = v1;
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - v5;
  v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v17, v2, a1, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *(_QWORD *)(a1 + 16);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_1BA4A2E80((uint64_t)&v17[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
    return 0x6E693D657079747BLL;
  }
  else
  {
    sub_1BA6BE23C();
    v23 = (uint64_t)&v17[*(int *)(v22 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    sub_1BA6BFCE4(v23, (uint64_t)v9);
    v33 = 0;
    v34 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v33 = 0xD000000000000013;
    v34 = 0x80000001BB960D00;
    sub_1BA6BF98C((uint64_t)&v9[*(int *)(v7 + 28)], (uint64_t)v6);
    v24 = sub_1BB86EB84();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24) == 1)
    {
      sub_1BA5C699C((uint64_t)v6, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    }
    else
    {
      sub_1BB86EB24();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v24);
    }
    sub_1BB872AFC(v26);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v27);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v28);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v29);
    sub_1BB86C538();
    sub_1BB872AFC(v30);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v31);
    v21 = v33;
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v21;
}

uint64_t sub_1BB1B508C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F5320, a3);
  return sub_1BB874440();
}

uint64_t sub_1BB1B50E0(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F5320, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BB1B512C()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F5320);
  return sub_1BB872D54();
}

uint64_t sub_1BB1B517C()
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F5320);
  return sub_1BB872D48();
}

uint64_t static FormatFileReference.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, double);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  _QWORD *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v66 = a1;
  v67 = a2;
  v64 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v61 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v62);
  v59 = (uint64_t *)((char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v60 = (uint64_t *)((char *)&v54 - v9);
  MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t *)((char *)&v54 - v11);
  MEMORY[0x1E0C80A78](v12);
  v57 = (uint64_t *)((char *)&v54 - v13);
  v63 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v55 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = a4;
  v17 = type metadata accessor for FormatFileReference(0, a3, a4, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v54 - v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v25 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v26 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v28 = (char *)&v54 - v27;
  v30 = (char *)&v54 + *(int *)(v29 + 48) - v27;
  v65 = v18;
  v31 = *(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16);
  v31((char *)&v54 - v27, v66, v17, v26);
  ((void (*)(char *, uint64_t, uint64_t))v31)(v30, v67, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    ((void (*)(char *, char *, uint64_t))v31)(v20, v28, v17);
    v32 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v33 = (uint64_t)&v20[v32];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v34 = (uint64_t)&v30[v32];
      v35 = v64;
      v36 = v61;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v30, a3);
      v37 = v60;
      sub_1BA6BFCE4(v33, (uint64_t)v60);
      v38 = v59;
      sub_1BA6BFCE4(v34, (uint64_t)v59);
      v39 = sub_1BB872958();
      v40 = *(void (**)(char *, uint64_t))(v35 + 8);
      v40(v20, a3);
      if ((v39 & 1) != 0)
      {
        v41 = static FormatMetadata.== infix(_:_:)(v37, v38);
        sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v40(v36, a3);
LABEL_14:
        v25 = v65;
        goto LABEL_15;
      }
      sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v40(v36, a3);
      goto LABEL_13;
    }
    sub_1BA4A2E80((uint64_t)&v20[v32], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v20, a3);
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v31)(v23, v28, v17);
    sub_1BA6BE23C();
    v43 = *(int *)(v42 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v44 = v55;
      v45 = v63;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v55, v30, v63);
      v46 = v57;
      sub_1BA6BFCE4((uint64_t)&v23[v43], (uint64_t)v57);
      v47 = (uint64_t)&v30[v43];
      v48 = v44;
      v49 = v56;
      sub_1BA6BFCE4(v47, (uint64_t)v56);
      v50 = MEMORY[0x1BCCDCEFC](v23, v44);
      v51 = *(void (**)(char *, uint64_t))(v14 + 8);
      v51(v23, v45);
      if ((v50 & 1) != 0)
      {
        v52 = v48;
        v41 = static FormatMetadata.== infix(_:_:)(v46, v49);
        sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v51(v52, v45);
        goto LABEL_14;
      }
      sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v51(v48, v45);
LABEL_13:
      v41 = 0;
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)&v23[v43], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v63);
  }
  v41 = 0;
  v17 = TupleTypeMetadata2;
LABEL_15:
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v17);
  return v41 & 1;
}

uint64_t sub_1BB1B56A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatFileReference.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t FormatFileReference.minVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatFileReference.metadata.getter(a1, (uint64_t)v6);
  v7 = &v6[*(int *)(v4 + 20)];
  v8 = sub_1BB86EB84();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7, v8);
  return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
}

uint64_t FormatFileReference.maxVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatFileReference.metadata.getter(a1, (uint64_t)v6);
  v7 = &v6[*(int *)(v4 + 24)];
  v8 = sub_1BB86EB84();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7, v8);
  return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
}

uint64_t sub_1BB1B5830(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReference<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReference<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReference<A>, a2);
  a1[3] = result;
  return result;
}

_DWORD *sub_1BB1B5888(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(unint64_t, uint64_t);
  size_t v27;
  size_t v28;
  unsigned int v29;
  BOOL v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(unint64_t, unint64_t, uint64_t);
  unint64_t v36;
  unint64_t v37;
  void *v38;
  const void *v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  void (*v44)(unint64_t, unint64_t, uint64_t);
  unint64_t v45;
  unint64_t v46;
  void *v47;
  const void *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  size_t __n;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(size_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  size_t v73;

  if (a1 != a2)
  {
    v6 = sub_1BB86C67C();
    v71 = *(_QWORD *)(v6 - 8);
    v7 = *(_QWORD *)(v71 + 64);
    v8 = sub_1BB86EB84();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v10 | 7;
    v70 = (v10 | 7) + v7;
    v12 = v10 + 16;
    v13 = *(_QWORD *)(v9 + 64);
    v14 = v13 + v10;
    v15 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
    if (!*(_DWORD *)(v9 + 84))
      ++v13;
    __n = v13;
    v73 = v13 + 7;
    v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v17 = v16 + (v70 & ~(v10 | 7));
    v67 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
    v69 = *(_QWORD *)(v67 + 64) + v11;
    v18 = v16 + (v69 & ~v11);
    if (v18 <= v17)
      v18 = v17;
    v19 = *((unsigned __int8 *)a1 + v18);
    v66 = v18 & 0xFFFFFFF8;
    if (v19 >= 2 && (v18 & 0xFFFFFFF8) != 0)
      v19 = *a1 + 2;
    v72 = v18;
    v21 = ~v11;
    v22 = ~v10;
    v63 = *(_QWORD *)(a3 + 16);
    v64 = v6;
    if (v19 == 1)
    {
      (*(void (**)(_DWORD *))(v67 + 8))(a1);
      v23 = v69;
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v71 + 8))(a1, v6);
      v23 = v70;
    }
    v24 = ((unint64_t)a1 + v23) & v21;
    swift_bridgeObjectRelease();
    v25 = (v12 + v24) & v22;
    v26 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    v26(v25, v8);
    v27 = (v14 + v25) & v22;
    v26(v27, v8);
    v28 = (v14 + v27) & v22;
    v68 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v9 + 48);
    if (!v68(v28, 1, v8))
      v26(v28, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = *((unsigned __int8 *)a2 + v72);
    if (v66)
      v30 = v29 >= 2;
    else
      v30 = 0;
    if (v30)
      v29 = *a2 + 2;
    if (v29 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v67 + 16))(a1, a2, v63);
      v31 = (_QWORD *)(((unint64_t)a1 + v69) & v21);
      v32 = (_QWORD *)(((unint64_t)a2 + v69) & v21);
      *v31 = *v32;
      v31[1] = v32[1];
      v33 = ((unint64_t)v31 + v12) & v22;
      v34 = ((unint64_t)v32 + v12) & v22;
      v35 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v35(v33, v34, v8);
      v36 = (v14 + v33) & v22;
      v37 = (v14 + v34) & v22;
      v35(v36, v37, v8);
      v38 = (void *)((v14 + v36) & v22);
      v39 = (const void *)((v14 + v37) & v22);
      if (v68((size_t)v39, 1, v8))
      {
        memcpy(v38, v39, __n);
      }
      else
      {
        v35((unint64_t)v38, (unint64_t)v39, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v38, 0, 1, v8);
      }
      v49 = (_QWORD *)(((unint64_t)v38 + v73) & 0xFFFFFFFFFFFFF8);
      v50 = (_QWORD *)(((unint64_t)v39 + v73) & 0xFFFFFFFFFFFFFFF8);
      *v49 = *v50;
      v51 = (_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
      v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v51 = *v52;
      v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
      v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v53 = *v54;
      *(_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFF8);
      v55 = 1;
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v71 + 16))(a1, a2, v64);
      v40 = (_QWORD *)(((unint64_t)a1 + v70) & v21);
      v41 = (_QWORD *)(((unint64_t)a2 + v70) & v21);
      *v40 = *v41;
      v40[1] = v41[1];
      v42 = ((unint64_t)v40 + v12) & v22;
      v43 = ((unint64_t)v41 + v12) & v22;
      v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v44(v42, v43, v8);
      v45 = (v14 + v42) & v22;
      v46 = (v14 + v43) & v22;
      v44(v45, v46, v8);
      v47 = (void *)((v14 + v45) & v22);
      v48 = (const void *)((v14 + v46) & v22);
      if (v68((size_t)v48, 1, v8))
      {
        memcpy(v47, v48, __n);
      }
      else
      {
        v44((unint64_t)v47, (unint64_t)v48, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v47, 0, 1, v8);
      }
      v55 = 0;
      v56 = (_QWORD *)(((unint64_t)v47 + v73) & 0xFFFFFFFFFFFFF8);
      v57 = (_QWORD *)(((unint64_t)v48 + v73) & 0xFFFFFFFFFFFFFFF8);
      *v56 = *v57;
      v58 = (_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
      v59 = (_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v58 = *v59;
      v60 = (_QWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFF8);
      v61 = (_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v60 = *v61;
      *(_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFF8);
    }
    *((_BYTE *)a1 + v72) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB1B5D6C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(unint64_t, unint64_t, uint64_t);
  unint64_t v32;
  unint64_t v33;
  void *v34;
  const void *v35;
  char v36;
  void (*v37)(uint64_t, _DWORD *, uint64_t);
  _OWORD *v38;
  _OWORD *v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, unint64_t, uint64_t);
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v52;
  size_t __n;
  size_t v54;
  unint64_t v55;

  v52 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v52 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v9 | 7;
  v11 = (v9 | 7) + v6;
  v12 = v9 + 16;
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v13 + v9;
  v15 = (v13 + v9 + ((v13 + v9 + ((v9 + 16) & ~v9)) & ~v9)) & ~v9;
  if (!*(_DWORD *)(v8 + 84))
    ++v13;
  __n = v13;
  v54 = v13 + 7;
  v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v17 = v16 + (v11 & ~(v9 | 7));
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v19 = *(_QWORD *)(v18 + 64) + v10;
  v20 = v16 + (v19 & ~v10);
  if (v20 > v17)
    v17 = v20;
  v21 = *((unsigned __int8 *)a2 + v17);
  v55 = v17;
  v22 = v17 & 0xFFFFFFF8;
  if (v21 >= 2 && v22 != 0)
    v21 = *a2 + 2;
  v24 = ~v10;
  v25 = ~v9;
  if (v21 == 1)
  {
    v26 = a1;
    (*(void (**)(uint64_t, _DWORD *))(v18 + 32))(a1, a2);
    v27 = (_OWORD *)((v19 + a1) & v24);
    v28 = (_OWORD *)(((unint64_t)a2 + v19) & v24);
    *v27 = *v28;
    v29 = ((unint64_t)v27 + v12) & v25;
    v30 = ((unint64_t)v28 + v12) & v25;
    v31 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
    v31(v29, v30, v7);
    v32 = (v14 + v29) & v25;
    v33 = (v14 + v30) & v25;
    v31(v32, v33, v7);
    v34 = (void *)((v14 + v32) & v25);
    v35 = (const void *)((v14 + v33) & v25);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v35, 1, v7))
    {
      memcpy(v34, v35, __n);
      v36 = 1;
    }
    else
    {
      v31((unint64_t)v34, (unint64_t)v35, v7);
      v36 = 1;
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v34, 0, 1, v7);
    }
  }
  else
  {
    v37 = *(void (**)(uint64_t, _DWORD *, uint64_t))(v5 + 32);
    v26 = a1;
    v37(a1, a2, v52);
    v38 = (_OWORD *)((v11 + a1) & v24);
    v39 = (_OWORD *)(((unint64_t)a2 + v11) & v24);
    *v38 = *v39;
    v40 = ((unint64_t)v38 + v12) & v25;
    v41 = ((unint64_t)v39 + v12) & v25;
    v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
    v42(v40, v41, v7);
    v43 = (v14 + v40) & v25;
    v44 = (v14 + v41) & v25;
    v42(v43, v44, v7);
    v34 = (void *)((v14 + v43) & v25);
    v35 = (const void *)((v14 + v44) & v25);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v35, 1, v7))
    {
      memcpy(v34, v35, __n);
    }
    else
    {
      v42((unint64_t)v34, (unint64_t)v35, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v34, 0, 1, v7);
    }
    v36 = 0;
  }
  v45 = (_QWORD *)(((unint64_t)v34 + v54) & 0xFFFFFFFFFFFFF8);
  v46 = (_QWORD *)(((unint64_t)v35 + v54) & 0xFFFFFFFFFFFFFFF8);
  *v45 = *v46;
  v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v47 = *v48;
  v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFF8);
  v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v49 = *v50;
  *(_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
  *(_BYTE *)(v26 + v55) = v36;
  return v26;
}

_DWORD *sub_1BB1B60B0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(unint64_t, uint64_t);
  size_t v27;
  size_t v28;
  unsigned int v29;
  BOOL v30;
  _OWORD *v31;
  _OWORD *v32;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(unint64_t, unint64_t, uint64_t);
  unint64_t v36;
  unint64_t v37;
  void *v38;
  const void *v39;
  char v40;
  _OWORD *v41;
  _OWORD *v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(unint64_t, unint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  size_t __n;
  uint64_t v58;
  unsigned int (*v59)(size_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  size_t v65;

  if (a1 != a2)
  {
    v6 = sub_1BB86C67C();
    v63 = *(_QWORD *)(v6 - 8);
    v7 = *(_QWORD *)(v63 + 64);
    v8 = sub_1BB86EB84();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v10 | 7;
    v62 = (v10 | 7) + v7;
    v12 = v10 + 16;
    v13 = *(_QWORD *)(v9 + 64);
    v14 = v13 + v10;
    v15 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
    if (!*(_DWORD *)(v9 + 84))
      ++v13;
    __n = v13;
    v65 = v13 + 7;
    v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v17 = v16 + (v62 & ~(v10 | 7));
    v60 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
    v61 = *(_QWORD *)(v60 + 64) + v11;
    v18 = v16 + (v61 & ~v11);
    if (v18 <= v17)
      v18 = v17;
    v19 = *((unsigned __int8 *)a1 + v18);
    v58 = v18 & 0xFFFFFFF8;
    if (v19 >= 2 && (v18 & 0xFFFFFFF8) != 0)
      v19 = *a1 + 2;
    v64 = v18;
    v21 = ~v11;
    v22 = ~v10;
    v55 = *(_QWORD *)(a3 + 16);
    v56 = v6;
    if (v19 == 1)
    {
      (*(void (**)(_DWORD *))(v60 + 8))(a1);
      v23 = v61;
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v63 + 8))(a1, v6);
      v23 = v62;
    }
    v24 = ((unint64_t)a1 + v23) & v21;
    swift_bridgeObjectRelease();
    v25 = (v12 + v24) & v22;
    v26 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    v26(v25, v8);
    v27 = (v14 + v25) & v22;
    v26(v27, v8);
    v28 = (v14 + v27) & v22;
    v59 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v9 + 48);
    if (!v59(v28, 1, v8))
      v26(v28, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = *((unsigned __int8 *)a2 + v64);
    if (v58)
      v30 = v29 >= 2;
    else
      v30 = 0;
    if (v30)
      v29 = *a2 + 2;
    if (v29 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v60 + 32))(a1, a2, v55);
      v31 = (_OWORD *)(((unint64_t)a1 + v61) & v21);
      v32 = (_OWORD *)(((unint64_t)a2 + v61) & v21);
      *v31 = *v32;
      v33 = ((unint64_t)v31 + v12) & v22;
      v34 = ((unint64_t)v32 + v12) & v22;
      v35 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
      v35(v33, v34, v8);
      v36 = (v14 + v33) & v22;
      v37 = (v14 + v34) & v22;
      v35(v36, v37, v8);
      v38 = (void *)((v14 + v36) & v22);
      v39 = (const void *)((v14 + v37) & v22);
      if (v59((size_t)v39, 1, v8))
      {
        memcpy(v38, v39, __n);
        v40 = 1;
      }
      else
      {
        v35((unint64_t)v38, (unint64_t)v39, v8);
        v40 = 1;
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v38, 0, 1, v8);
      }
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v63 + 32))(a1, a2, v56);
      v41 = (_OWORD *)(((unint64_t)a1 + v62) & v21);
      v42 = (_OWORD *)(((unint64_t)a2 + v62) & v21);
      *v41 = *v42;
      v43 = ((unint64_t)v41 + v12) & v22;
      v44 = ((unint64_t)v42 + v12) & v22;
      v45 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
      v45(v43, v44, v8);
      v46 = (v14 + v43) & v22;
      v47 = (v14 + v44) & v22;
      v45(v46, v47, v8);
      v38 = (void *)((v14 + v46) & v22);
      v39 = (const void *)((v14 + v47) & v22);
      if (v59((size_t)v39, 1, v8))
      {
        memcpy(v38, v39, __n);
      }
      else
      {
        v45((unint64_t)v38, (unint64_t)v39, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v38, 0, 1, v8);
      }
      v40 = 0;
    }
    v48 = (_QWORD *)(((unint64_t)v38 + v65) & 0xFFFFFFFFFFFFF8);
    v49 = (_QWORD *)(((unint64_t)v39 + v65) & 0xFFFFFFFFFFFFFFF8);
    *v48 = *v49;
    v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
    v51 = (_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v50 = *v51;
    v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
    v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v52 = *v53;
    *(_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)a1 + v64) = v40;
  }
  return a1;
}

uint64_t sub_1BB1B6518(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v20;
  unsigned int v21;

  v6 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 64);
  v7 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v8 | 7;
  v10 = ((v8 | 7) + v6) & ~(v8 | 7);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = (v11 + v8 + ((v11 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8;
  v13 = *(_DWORD *)(v7 + 84) == 0;
  v14 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + v9) & ~v9;
  if (v13)
    v15 = v11 + 1;
  else
    v15 = v11;
  v16 = ((((((((v15 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v17 = v16 + v14;
  if (v17 <= v16 + v10)
    v17 = v16 + v10;
  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    v18 = v17 | 1;
    if ((v17 | 1) > 3)
      goto LABEL_26;
    v20 = (a2 + ~(-1 << (8 * (v17 | 1))) - 254) >> (8 * (v17 | 1));
    if (v20 > 0xFFFE)
    {
      if (!*(_DWORD *)(a1 + v18))
        goto LABEL_21;
      goto LABEL_17;
    }
    if (v20 > 0xFE)
    {
      if (!*(_WORD *)(a1 + v18))
        goto LABEL_21;
      goto LABEL_17;
    }
    if (v20)
    {
LABEL_26:
      if (!*(_BYTE *)(a1 + v18))
        goto LABEL_21;
LABEL_17:
      if (v18 > 3)
        LODWORD(v18) = 4;
      __asm { BR              X11 }
    }
  }
LABEL_21:
  v21 = *(unsigned __int8 *)(a1 + v17);
  if (v21 >= 2)
    return (v21 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_1BB1B66D0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;

  v8 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 64);
  v9 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v10 | 7;
  v12 = ((v10 | 7) + v8) & ~(v10 | 7);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
  v15 = *(_DWORD *)(v9 + 84) == 0;
  v16 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + v11) & ~v11;
  if (v15)
    v17 = v13 + 1;
  else
    v17 = v13;
  v18 = ((((((((v17 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v19 = v18 + v16;
  if (v19 <= v18 + v12)
    v19 = v18 + v12;
  v20 = v19 | 1;
  if (a3 < 0xFF)
  {
    v21 = 0u;
  }
  else if (v20 <= 3)
  {
    v23 = (a3 + ~(-1 << (8 * v20)) - 254) >> (8 * v20);
    if (v23 > 0xFFFE)
    {
      v21 = 4u;
    }
    else if (v23 >= 0xFF)
    {
      v21 = 2;
    }
    else
    {
      v21 = v23 != 0;
    }
  }
  else
  {
    v21 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v22 = a2 - 255;
  if (v20 < 4)
  {
    v24 = v22 & ~(-1 << (8 * v20));
    bzero(a1, v20);
    if ((_DWORD)v20 == 1)
    {
      *a1 = v24;
    }
    else
    {
      *(_WORD *)a1 = v24;
      a1[2] = BYTE2(v24);
    }
  }
  else
  {
    bzero(a1, v19 | 1);
    *(_DWORD *)a1 = v22;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BB1B68FC(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 64);
  v5 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v6 | 7;
  v8 = ((v6 | 7) + v4) & ~(v6 | 7);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = (v9 + v6 + ((v9 + v6 + ((v6 + 16) & ~v6)) & ~v6)) & ~v6;
  if (*(_DWORD *)(v5 + 84))
    v11 = *(_QWORD *)(v5 + 64);
  else
    v11 = v9 + 1;
  v12 = ((((((((v11 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v13 = v12 + v8;
  v14 = v12 + ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + v7) & ~v7);
  if (v14 <= v13)
    v14 = v13;
  result = *((unsigned __int8 *)a1 + v14);
  v16 = v14 & 0xFFFFFFF8;
  if (result >= 2 && v16 != 0)
    return (*a1 + 2);
  return result;
}

void sub_1BB1B69E4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  size_t v15;
  size_t v16;
  size_t v17;

  v6 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 64);
  v7 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v8 | 7;
  v10 = ((v8 | 7) + v6) & ~(v8 | 7);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = (v11 + v8 + ((v11 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8;
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = v11 + 1;
  v14 = ((((((((v13 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v15 = v14 + v10;
  v16 = v14 + ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + v9) & ~v9);
  if (v16 <= v15)
    v17 = v15;
  else
    v17 = v16;
  if (a2 > 1)
  {
    *((_BYTE *)a1 + v17) = 2;
    bzero(a1, v17);
    *a1 = a2 - 2;
  }
  else
  {
    *((_BYTE *)a1 + v17) = a2;
  }
}

void sub_1BB1B6ADC()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB1B6AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BB872F94();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BB872F88();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BA5C699C(a1, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BB872F28();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BB1B6C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BB872F94();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BB872F88();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BA5C699C(a1, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BB872F28();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  sub_1BA4AD288(0, &qword_1EF2BD240, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  return swift_task_create();
}

Swift::Void __swiftcall PuzzleEmbedViewController.prewarm()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_prewarm);
}

Swift::Void __swiftcall PuzzleEmbedViewController.setInputAccessoryView(_:)(UIView_optional *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  sub_1BA49A224(0, &qword_1EF2BD180);
  v4 = (void *)sub_1BB872D9C();
  v5 = (void *)sub_1BB872D9C();
  objc_msgSend(v3, sel_setShortcutsBarWithLeadingGroups_trailingGroups_, v4, v5);

  objc_msgSend(v3, sel_setInputAccessoryView_, a1);
}

Swift::Void __swiftcall PuzzleEmbedViewController.refresh()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager), sel_refresh);
}

Swift::Void __swiftcall PuzzleEmbedViewController.prepareForReuse()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v2 = *v1;
  *v1 = 0;
  v1[1] = 0;
  sub_1BA49EBE0(v2);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted) = 0;
}

void PuzzleEmbedViewController.add(handler:name:)(uint64_t a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_messageHandlerManager);
  v4 = (id)sub_1BB872970();
  objc_msgSend(v3, sel_addMessageHandler_name_, a1, v4);
  swift_unknownObjectRelease();

}

uint64_t sub_1BB1B6F74(uint64_t a1, double a2)
{
  void (*v3)(uint64_t, double);
  uint64_t v4;

  v3 = *(void (**)(uint64_t, double))(a1 + 32);
  v4 = swift_retain();
  v3(v4, a2);
  return swift_release();
}

id PuzzleEmbedViewController.onReuse.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onReuse);
}

uint64_t PuzzleEmbedViewController.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PuzzleEmbedViewController.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PuzzleEmbedViewController.reuseIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PuzzleEmbedViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v1);
}

uint64_t PuzzleEmbedViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*PuzzleEmbedViewController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC8E4;
}

double PuzzleEmbedViewController.contentFrame.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t PuzzleEmbedViewController.contentFrame.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v9;
  uint64_t result;

  v9 = (double *)(v4 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame);
  result = swift_beginAccess();
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return result;
}

uint64_t (*PuzzleEmbedViewController.contentFrame.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double PuzzleEmbedViewController.viewportSize.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t PuzzleEmbedViewController.viewportSize.setter(double a1, double a2)
{
  uint64_t v2;
  double *v5;
  uint64_t result;

  v5 = (double *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize);
  result = swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PuzzleEmbedViewController.viewportSize.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB1B73AC@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BA4D7950;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BA4BEB58(v4);
}

uint64_t sub_1BB1B7440(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BA4D7950;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BA4BEB58(v3);
  return sub_1BA49EBE0(v8);
}

uint64_t PuzzleEmbedViewController.onEmbedInteraction.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v2 = *v1;
  sub_1BA4BEB58(*v1);
  return v2;
}

uint64_t PuzzleEmbedViewController.onEmbedInteraction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1BA49EBE0(v6);
}

uint64_t (*PuzzleEmbedViewController.onEmbedInteraction.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BB1B75F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  int v5;
  char v6;

  result = swift_getObjectType();
  v4 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController____lazy_storage___contentEnvironment;
  v5 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController____lazy_storage___contentEnvironment);
  if (v5 == 8)
  {
    if (qword_1ED3D5158 != -1)
      swift_once();
    sub_1BB1BD320(&qword_1EF2BD260, (uint64_t)&protocol conformance descriptor for PuzzleEmbedViewController);
    result = sub_1BB86D210();
    LOBYTE(v5) = v6;
    *(_BYTE *)(v1 + v4) = v6;
  }
  *a1 = v5;
  return result;
}

Swift::Void __swiftcall PuzzleEmbedViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  objc_super v35;

  v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v35, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = v2;
  objc_msgSend(v2, sel_setClipsToBounds_, 1);

  objc_msgSend(v1, sel_setEdgesForExtendedLayout_, 0);
  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = v4;
  objc_msgSend(v4, sel_setAutoresizingMask_, 0);

  v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController];
  objc_msgSend(v1, sel_addChildViewController_, v6);
  v7 = objc_msgSend(v1, sel_view);
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = v7;
  v9 = objc_msgSend(v6, sel_view);
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = v9;
  objc_msgSend(v8, sel_addSubview_, v9);

  objc_msgSend(v6, sel_didMoveToParentViewController_, v1);
  v11 = objc_msgSend(v6, sel_view);
  if (!v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v12 = v11;
  objc_msgSend(v11, sel_setHidden_, 1);

  v13 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorView];
  objc_msgSend(v13, sel_setHidden_, 1);
  objc_msgSend(v13, sel_setAutoresizingMask_, 18);
  v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v14;
  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator]);

  v16 = objc_msgSend(v1, sel_view);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, sel_addSubview_, v13);

    objc_msgSend(v6, sel_setTextInputTraits_, *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_textInputTraits]);
    sub_1BB1B7B54();
    v18 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_actionProvider];
    v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v33 = sub_1BB1BAFF0;
    v34 = v19;
    v20 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v30 = 1107296256;
    v31 = sub_1BB1B7FAC;
    v32 = &block_descriptor_47;
    v21 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v18, sel_onAction_, v21);
    _Block_release(v21);
    v22 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager];
    v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v33 = sub_1BB1BAFF8;
    v34 = v23;
    aBlock = v20;
    v30 = 1107296256;
    v31 = sub_1BB1B6F74;
    v32 = &block_descriptor_4;
    v24 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v22, sel_onPresentable_, v24);
    _Block_release(v24);
    v25 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorProvider];
    v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v33 = sub_1BB1BB000;
    v34 = v26;
    aBlock = v20;
    v30 = 1107296256;
    v31 = sub_1BA573874;
    v32 = &block_descriptor_8;
    v27 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v25, sel_onError_, v27);
    _Block_release(v27);
    LOBYTE(aBlock) = 0;
    swift_retain();
    sub_1BB86DF84();
    swift_release();
    v28 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    objc_msgSend(v28, sel_addObserver_selector_name_object_, v1, sel_keyboardWillChangeFrameWithNotification_, *MEMORY[0x1E0DC4FD8], 0);

    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1BB1B7B54()
{
  void *v0;
  CFTimeInterval v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = CACurrentMediaTime();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v2 = sub_1BB86EFEC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED476918);
  v3 = v0;
  v4 = sub_1BB86EFC8();
  v5 = sub_1BB87330C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v17 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
    v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
    swift_bridgeObjectRetain();
    sub_1BA5D2E14(v8, v9, &v17);
    sub_1BB873A8C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v4, v5, "Puzzle did start preparing for load, puzzle=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v7, -1, -1);
    MEMORY[0x1BCCE5C38](v6, -1, -1);

  }
  else
  {

  }
  LOBYTE(v17) = 1;
  sub_1BB1BD430();
  swift_allocObject();
  swift_retain();
  sub_1BB86E620();
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(CFTimeInterval *)(v11 + 24) = v1;
  sub_1BB86E638();
  swift_release();
  swift_release();
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(CFTimeInterval *)(v13 + 24) = v1;
  sub_1BB86E62C();
  swift_release();
  swift_release();
  sub_1BB86DF78();
  swift_release();
  swift_release();
  LOBYTE(v17) = 2;
  swift_allocObject();
  swift_retain();
  sub_1BB86E620();
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(CFTimeInterval *)(v15 + 24) = v1;
  sub_1BB86E638();
  swift_release();
  swift_release();
  sub_1BB86DF78();
  swift_release();
  return swift_release();
}

void sub_1BB1B7EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v4 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1BCCE5D40](v6))
    {
      v7 = *(_QWORD *)(v6 + 8);

      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, ObjectType, v7);
      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

uint64_t sub_1BB1B7FAC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1BB1B7FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    swift_retain();

    sub_1BB86DF84();
    swift_release();
  }
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v1);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v4 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1BCCE5D40](v6))
    {
      v7 = *(_QWORD *)(v6 + 8);

      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

uint64_t sub_1BB1B8104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t result;
  void *v11;

  v2 = a2 + 16;
  v3 = (void *)sub_1BB86C478();
  v4 = objc_msgSend(v3, sel_code);

  if (v4 == (id)2)
  {
    swift_beginAccess();
    v5 = MEMORY[0x1BCCE5D40](v2);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
      swift_beginAccess();
      if (MEMORY[0x1BCCE5D40](v7))
      {
        v8 = *(_QWORD *)(v7 + 8);

        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);
        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
  }
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v2);
  if (result)
  {
    v11 = (void *)result;
    swift_retain();

    sub_1BB86DF84();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall PuzzleEmbedViewController.viewDidLayoutSubviews()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  objc_super v48;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4B07F0(0, qword_1ED3D53F0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v47 - v3;
  v5 = type metadata accessor for PuzzleData();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48.receiver = v0;
  v48.super_class = ObjectType;
  objc_msgSendSuper2(&v48, sel_viewDidLayoutSubviews, v7);
  v10 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController];
  v11 = objc_msgSend(v10, sel_view);
  if (!v11)
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v11;
  v13 = objc_msgSend(v0, sel_view);
  if (!v13)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = v13;
  objc_msgSend(v13, sel_bounds);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  objc_msgSend(v12, sel_setFrame_, v16, v18, v20, v22);
  v23 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  swift_beginAccess();
  sub_1BB1BB008(v23, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BA5C699C((uint64_t)v4, qword_1ED3D53F0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
    v24 = sub_1BB1B856C((uint64_t)&v9[*(int *)(v5 + 20)]);
    objc_msgSend(v10, sel_setConfiguration_, v24);

    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  }
  v25 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorView];
  v26 = objc_msgSend(v0, sel_view);
  if (!v26)
    goto LABEL_11;
  v27 = v26;
  objc_msgSend(v26, sel_bounds);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;

  objc_msgSend(v25, sel_setFrame_, v29, v31, v33, v35);
  v36 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator];
  v37 = objc_msgSend(v0, sel_view);
  if (v37)
  {
    v38 = v37;
    objc_msgSend(v37, sel_bounds);
    v40 = v39;
    v42 = v41;
    v44 = v43;
    v46 = v45;

    objc_msgSend(v36, sel_setFrame_, v40, v42, v44, v46);
    return;
  }
LABEL_12:
  __break(1u);
}

id sub_1BB1B856C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  double v24;
  double v25;
  double *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v41 = a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v37 - v3;
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C9DC();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v13 = objc_msgSend(v12, sel_contentStoreFrontID);

  if (v13)
  {
    v14 = sub_1BB8729A0();
    v39 = v15;
    v40 = v14;

  }
  else
  {
    v39 = 0;
    v40 = 0;
  }
  sub_1BB86C994();
  sub_1BB1B75F0(&v42);
  v16 = 8 * v42;
  v38 = *(_QWORD *)&aProductistagin_0[v16];
  v17 = *(_QWORD *)&aOn_2[v16];
  v18 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v19 = objc_msgSend(v18, sel_preferredContentSizeCategory);

  v20 = sub_1BB8729A0();
  v22 = v21;

  v23 = (double *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize);
  swift_beginAccess();
  v24 = *v23;
  v25 = v23[1];
  v26 = (double *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame);
  swift_beginAccess();
  v27 = *v26;
  v28 = v26[1];
  v29 = v26[2];
  v30 = v26[3];
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v41, v5);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v32 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration);
  v33 = objc_allocWithZone(MEMORY[0x1E0D977B8]);
  swift_getObjectType();
  swift_unknownObjectRetain();
  v34 = v32;
  v35 = sub_1BB1BCE14(v24, v25, v27, v28, v29, v30, v40, v39, (uint64_t)v11, v38, v17, v20, v22, 0, v31, (uint64_t)v8, (uint64_t)v4, (uint64_t)v34, 0,
          v33);
  swift_unknownObjectRelease();

  return v35;
}

id PuzzleEmbedViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  char *v3;
  objc_super v8;

  v8.receiver = v3;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  return objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager], sel_setPresentationState_, 2);
}

id PuzzleEmbedViewController.inputAccessoryView.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_inputAccessoryView);
}

Swift::Void __swiftcall PuzzleEmbedViewController.prepare(contentFrame:isResizable:)(__C::CGRect contentFrame, Swift::Bool isResizable)
{
  uint64_t v2;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGFloat *v8;

  height = contentFrame.size.height;
  width = contentFrame.size.width;
  y = contentFrame.origin.y;
  x = contentFrame.origin.x;
  v8 = (CGFloat *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame);
  swift_beginAccess();
  *v8 = x;
  v8[1] = y;
  v8[2] = width;
  v8[3] = height;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_isResizable) = isResizable;
}

uint64_t PuzzleEmbedViewController.populate(with:puzzleLaunchAction:contentFrame:viewportSize:location:feedConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  _BYTE *v10;

  swift_getObjectType();
  return sub_1BB1BB114(a1, a2, a3, a4, v10, a5, a6, a7, a8, a9, a10);
}

void sub_1BB1B8B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  void (*v5)(void);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
    swift_beginAccess();
    v5 = (void (*)(void))*v4;
    sub_1BA4BEB58(*v4);

    if (v5)
    {
      swift_beginAccess();
      v6 = MEMORY[0x1BCCE5D40](v1);
      if (v6)
      {
        v7 = (void *)v6;
        v8 = v6 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
        swift_beginAccess();
        if (MEMORY[0x1BCCE5D40](v8))
        {
          v9 = *(_QWORD *)(v8 + 8);

          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
          swift_unknownObjectRelease();
        }
        else
        {

        }
      }
      v5();
      sub_1BA49EBE0((uint64_t)v5);
    }
  }
}

Swift::Void __swiftcall PuzzleEmbedViewController.updateWindowSceneTitle()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_window);

    if (v3)
    {
      v4 = objc_msgSend(v3, sel_windowScene);

      if (v4)
      {
        sub_1BB1B8D54();
        if (v5)
        {
          v6 = (id)sub_1BB872970();
          swift_bridgeObjectRelease();
        }
        else
        {
          v6 = 0;
        }
        objc_msgSend(v4, sel_setTitle_, v6);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BB1B8D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  char *v33;
  char *v34;
  id v35;
  void *v36;
  void (*v37)(uint64_t, char *, uint64_t);
  id v38;
  void *v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  char *v65;
  uint64_t inited;
  void *v67;
  char *v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  void *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  id v91;
  _QWORD *v92;
  void *v93;

  v89 = sub_1BB86C9DC();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v90 = (char *)&v80 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v88 = (char *)&v80 - v3;
  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v80 - v9;
  v11 = sub_1BB86BE54();
  v12 = *(_QWORD **)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData;
  swift_beginAccess();
  v16 = type metadata accessor for PuzzleData();
  v17 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    return v17;
  v81 = v7;
  v82 = v10;
  v85 = v5;
  v83 = v14;
  v86 = v12;
  v91 = (id)swift_unknownObjectRetain();
  v18 = objc_msgSend(objc_msgSend(v91, sel_puzzleType), sel_nameCompact);
  swift_unknownObjectRelease();
  if (v18)
  {
    v19 = sub_1BB8729A0();
    v21 = v20;

    v92 = (_QWORD *)v19;
    v93 = v21;
    v22 = v83;
    sub_1BB86BE00();
    sub_1BA7114A0();
    v23 = sub_1BB873AEC();
    v25 = v24;
    v26 = v11;
    ((void (*)(char *, uint64_t))v86[1])(v22, v11);
    swift_bridgeObjectRelease();
    v27 = (_QWORD *)(HIBYTE(v25) & 0xF);
    if ((v25 & 0x2000000000000000) == 0)
      v27 = (_QWORD *)(v23 & 0xFFFFFFFFFFFFLL);
    v28 = v4;
    v29 = v85;
    v30 = (uint64_t)v88;
    if (v27)
    {
      v92 = (_QWORD *)v23;
      v93 = (void *)v25;
      sub_1BB872AFC(v27);
      v31 = v92;
      v84 = v93;
    }
    else
    {
      swift_bridgeObjectRelease();
      v31 = 0;
      v84 = 0;
    }
    v32 = v86;
    v33 = v82;
  }
  else
  {
    v31 = 0;
    v84 = 0;
    v26 = v11;
    v32 = v86;
    v22 = v83;
    v28 = v4;
    v29 = v85;
    v33 = v82;
    v30 = (uint64_t)v88;
  }
  v34 = v81;
  v35 = objc_msgSend(v91, sel_publishDate);
  if (!v35)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v30, 1, 1, v28);
    goto LABEL_16;
  }
  v36 = v35;
  sub_1BB86C874();

  v37 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
  v37(v30, v34, v28);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v28) == 1)
  {
LABEL_16:
    sub_1BA5C699C(v30, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v88 = 0;
    v43 = 0;
    goto LABEL_17;
  }
  v37((uint64_t)v33, (char *)v30, v28);
  if (qword_1EF2A70A8 != -1)
    swift_once();
  v38 = (id)qword_1EF2BD170;
  v39 = (void *)sub_1BB86C808();
  v40 = v33;
  v41 = objc_msgSend(v38, sel_stringFromDate_, v39);

  v88 = (char *)sub_1BB8729A0();
  v43 = v42;

  (*(void (**)(char *, uint64_t))(v85 + 8))(v40, v28);
LABEL_17:
  v44 = objc_msgSend(v91, sel_subtitle);
  v46 = v89;
  v45 = v90;
  if (v44)
  {
    v47 = sub_1BB8729A0();
    v49 = v48;

    v92 = (_QWORD *)v47;
    v93 = v49;
    sub_1BB86BE00();
    sub_1BA7114A0();
    v50 = sub_1BB873AEC();
    v51 = v22;
    v52 = v50;
    v54 = v53;
    ((void (*)(char *, uint64_t))v32[1])(v51, v26);
    swift_bridgeObjectRelease();
    v55 = HIBYTE(v54) & 0xF;
    if ((v54 & 0x2000000000000000) == 0)
      v55 = v52 & 0xFFFFFFFFFFFFLL;
    if (v55)
    {
      sub_1BB86C994();
      v56 = sub_1BB86C964();
      v86 = v31;
      v58 = v45;
      if (v57)
        v59 = v56;
      else
        v59 = 0;
      v60 = v46;
      if (v57)
        v61 = v57;
      else
        v61 = 0xE000000000000000;
      sub_1BB86C958();
      v92 = (_QWORD *)v59;
      v93 = (void *)v61;
      sub_1BB872AFC(v62);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v63);
      swift_bridgeObjectRelease();
      v64 = v92;
      v44 = v93;
      v65 = v58;
      v31 = v86;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v65, v60);
    }
    else
    {
      swift_bridgeObjectRelease();
      v64 = 0;
      v44 = 0;
    }
  }
  else
  {
    v64 = 0;
  }
  sub_1BB10CB60();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v67 = v84;
  *(_QWORD *)(inited + 32) = v31;
  *(_QWORD *)(inited + 40) = v67;
  v68 = v88;
  *(_QWORD *)(inited + 48) = v88;
  *(_QWORD *)(inited + 56) = v43;
  *(_QWORD *)(inited + 64) = v64;
  *(_QWORD *)(inited + 72) = v44;
  if (v67)
  {
    swift_bridgeObjectRetain();
    v69 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v71 = v69[2];
    v70 = v69[3];
    if (v71 >= v70 >> 1)
      v69 = sub_1BA6EA0D0((_QWORD *)(v70 > 1), v71 + 1, 1, v69);
    v69[2] = v71 + 1;
    v72 = &v69[2 * v71];
    v72[4] = v31;
    v72[5] = v67;
    if (!v43)
      goto LABEL_41;
    goto LABEL_36;
  }
  v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v43)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v69 = sub_1BA6EA0D0(0, v69[2] + 1, 1, v69);
    v74 = v69[2];
    v73 = v69[3];
    if (v74 >= v73 >> 1)
      v69 = sub_1BA6EA0D0((_QWORD *)(v73 > 1), v74 + 1, 1, v69);
    v69[2] = v74 + 1;
    v75 = &v69[2 * v74];
    v75[4] = v68;
    v75[5] = v43;
  }
LABEL_41:
  if (v44)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v69 = sub_1BA6EA0D0(0, v69[2] + 1, 1, v69);
    v77 = v69[2];
    v76 = v69[3];
    if (v77 >= v76 >> 1)
      v69 = sub_1BA6EA0D0((_QWORD *)(v76 > 1), v77 + 1, 1, v69);
    v69[2] = v77 + 1;
    v78 = &v69[2 * v77];
    v78[4] = v64;
    v78[5] = v44;
  }
  swift_release();
  v92 = v69;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v17 = sub_1BB872904();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v17;
}

id PuzzleEmbedViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void PuzzleEmbedViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PuzzleEmbedViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB1B978C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB1B97E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BB1B9844())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB1B988C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v8 + 105) = a8;
  *(_QWORD *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 128) = a4;
  *(_QWORD *)(v8 + 136) = a5;
  sub_1BA4B07F0(0, qword_1ED3D53F0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  v9 = type metadata accessor for PuzzleData();
  *(_QWORD *)(v8 + 168) = v9;
  *(_QWORD *)(v8 + 176) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 184) = swift_task_alloc();
  sub_1BB872F7C();
  *(_QWORD *)(v8 + 192) = sub_1BB872F70();
  *(_QWORD *)(v8 + 200) = sub_1BB872F28();
  *(_QWORD *)(v8 + 208) = v10;
  return swift_task_switch();
}

uint64_t sub_1BB1B9960()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_BYTE *)(v0 + 105);
  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 104) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v2;
  *v2 = v0;
  v2[1] = sub_1BB1B99D8;
  return sub_1BA9CA198(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 136), v0 + 88);
}

uint64_t sub_1BB1B99D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB1B9A3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v1 = v0[23];
  v2 = v0[21];
  v3 = v0[22];
  v4 = v0[20];
  v5 = v0[16];
  swift_release();
  sub_1BA4C2DD8(v1, v4, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  v6 = v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData;
  swift_beginAccess();
  sub_1BA9D01A4(v4, v6);
  swift_endAccess();
  v7 = *(void **)(v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  v8 = *(void **)(*(_QWORD *)(v1 + *(int *)(v2 + 24)) + 16);
  v0[6] = nullsub_1;
  v0[7] = 0;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1BA4F1DD8;
  v0[5] = &block_descriptor_33_0;
  v9 = _Block_copy(v0 + 2);
  v10 = v8;
  objc_msgSend(v7, sel_loadLocalDatastore_forceUpdate_completion_, v10, 1, v9);
  _Block_release(v9);

  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1BB1B9BA4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  void *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *log;
  _QWORD *v20;
  os_log_type_t type;
  uint64_t v22;
  uint64_t v23;

  swift_release();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 224);
  v3 = sub_1BB86EFEC();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED476918);
  v4 = v1;
  v5 = v2;
  v6 = v4;
  v7 = v2;
  v8 = sub_1BB86EFC8();
  v9 = sub_1BB8732F4();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 224);
  v12 = *(char **)(v0 + 128);
  if (v10)
  {
    type = v9;
    v13 = swift_slowAlloc();
    v20 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v23 = v22;
    *(_DWORD *)v13 = 136315394;
    log = v8;
    v15 = *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
    v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 112) = sub_1BA5D2E14(v15, v14, &v23);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2112;
    v16 = v11;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v17;
    sub_1BB873A8C();
    *v20 = v17;

    _os_log_impl(&dword_1BA493000, log, type, "Error fetching puzzle data for puzzleID=%s error= %@", (uint8_t *)v13, 0x16u);
    sub_1BA92CD5C();
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v22, -1, -1);
    MEMORY[0x1BCCE5C38](v13, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB1B9E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v8 + 106) = a8;
  *(_QWORD *)(v8 + 152) = a6;
  *(_QWORD *)(v8 + 160) = a7;
  *(_QWORD *)(v8 + 136) = a4;
  *(_QWORD *)(v8 + 144) = a5;
  sub_1BA4B07F0(0, qword_1ED3D53F0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  v9 = type metadata accessor for PuzzleData();
  *(_QWORD *)(v8 + 176) = v9;
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  sub_1BB872F7C();
  *(_QWORD *)(v8 + 208) = sub_1BB872F70();
  *(_QWORD *)(v8 + 216) = sub_1BB872F28();
  *(_QWORD *)(v8 + 224) = v10;
  return swift_task_switch();
}

uint64_t sub_1BB1B9F30()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_BYTE *)(v0 + 106);
  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 152);
  *(_BYTE *)(v0 + 104) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v2;
  *v2 = v0;
  v2[1] = sub_1BB1B9FA8;
  return sub_1BA9CA198(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 144), v0 + 88);
}

uint64_t sub_1BB1B9FA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB1BA00C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v35;
  uint64_t v36;

  v1 = v0[25];
  v3 = v0[22];
  v2 = v0[23];
  v4 = v0[21];
  v5 = v0[17];
  swift_release();
  sub_1BA4C2DD8(v1, v4, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  v6 = v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData;
  swift_beginAccess();
  sub_1BA9D01A4(v4, v6);
  swift_endAccess();
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter + 24);
  v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter), v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v10 = swift_unknownObjectRetain();
  v11 = v8;
  v12 = v3;
  v13 = v9(v10, v7, v11);
  swift_unknownObjectRelease();
  v14 = *(void **)(v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  objc_msgSend(v14, sel_setFocusShouldStartInputSession_, v13 & 1);
  v15 = sub_1BB1B856C(v1 + *(int *)(v3 + 20));
  objc_msgSend(v14, sel_setConfiguration_, v15);

  v16 = *(void **)(*(_QWORD *)(v1 + *(int *)(v3 + 24)) + 16);
  v0[2] = MEMORY[0x1E0C809B0];
  v0[6] = nullsub_1;
  v0[7] = 0;
  v0[3] = 1107296256;
  v0[4] = sub_1BA4F1DD8;
  v0[5] = &block_descriptor_61;
  v17 = _Block_copy(v0 + 2);
  v18 = v16;
  objc_msgSend(v14, sel_loadLocalDatastore_forceUpdate_completion_, v18, 1, v17);
  _Block_release(v17);

  if (qword_1ED3C0B50 != -1)
    swift_once();
  v20 = v0[24];
  v19 = v0[25];
  v21 = sub_1BB86EFEC();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED476918);
  sub_1BA4C2DD8(v19, v20, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  v22 = sub_1BB86EFC8();
  v23 = sub_1BB87330C();
  v24 = os_log_type_enabled(v22, v23);
  v25 = v0[24];
  if (v24)
  {
    v35 = v14;
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v36 = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = *(_QWORD *)(v25 + *(int *)(v12 + 24));
    v29 = *(_QWORD *)(v28 + 24);
    v30 = *(_QWORD *)(v28 + 32);
    swift_bridgeObjectRetain();
    v31 = v29;
    v14 = v35;
    v0[16] = sub_1BA5D2E14(v31, v30, &v36);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
    _os_log_impl(&dword_1BA493000, v22, v23, "Puzzle Embed loaded with initial puzzle data:\n%s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v27, -1, -1);
    MEMORY[0x1BCCE5C38](v26, -1, -1);
  }
  else
  {
    sub_1BA4A2E80(v0[24], (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  }

  v32 = v0[25];
  v33 = (void *)sub_1BB86C58C();
  objc_msgSend(v14, sel_loadURL_, v33);

  sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1BB1BA3E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  void *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;

  swift_release();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v1 = *(void **)(v0 + 240);
  v2 = *(void **)(v0 + 136);
  v3 = sub_1BB86EFEC();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED476918);
  v4 = v2;
  v5 = v1;
  v6 = v4;
  v7 = v1;
  v8 = sub_1BB86EFC8();
  v9 = sub_1BB8732F4();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 240);
  v12 = *(char **)(v0 + 136);
  if (v10)
  {
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22 = v21;
    *(_DWORD *)v13 = 136315394;
    v15 = *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
    v16 = *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 120) = sub_1BA5D2E14(v15, v16, &v22);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2112;
    v17 = v11;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 112) = v18;
    sub_1BB873A8C();
    *v14 = v18;

    _os_log_impl(&dword_1BA493000, v8, v9, "Error fetching initial puzzle data for puzzleID=%s error= %@", (uint8_t *)v13, 0x16u);
    sub_1BA92CD5C();
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v21, -1, -1);
    MEMORY[0x1BCCE5C38](v13, -1, -1);
  }
  else
  {

  }
  *(_BYTE *)(v0 + 105) = 2;
  swift_retain();
  sub_1BB86DF84();
  v19 = *(void **)(v0 + 240);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB1BA6CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;

  v1 = *v0;
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  v3 = *v2;
  *v2 = 0;
  v2[1] = 0;
  result = sub_1BA49EBE0(v3);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted) = 0;
  return result;
}

void sub_1BB1BA728()
{
  sub_1BB1BD320(&qword_1EF2BD248, (uint64_t)&protocol conformance descriptor for PuzzleEmbedViewController);
  JUMPOUT(0x1BCCE1E7CLL);
}

id sub_1BB1BA760()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager), sel_refresh);
}

void sub_1BB1BA888(uint64_t a1, uint64_t a2, const char *a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v6);
  if (v7)
  {
    v8 = (void *)v7;
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v9 = sub_1BB86EFEC();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED476918);
    v10 = v8;
    v11 = sub_1BB86EFC8();
    v12 = sub_1BB87330C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 136315394;
      v15 = *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
      v16 = *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
      swift_bridgeObjectRetain();
      sub_1BA5D2E14(v15, v16, &v17);
      sub_1BB873A8C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2048;
      CACurrentMediaTime();
      sub_1BB873A8C();
      _os_log_impl(&dword_1BA493000, v11, v12, a3, (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v14, -1, -1);
      MEMORY[0x1BCCE5C38](v13, -1, -1);

    }
    else
    {

    }
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator], *a4);

  }
}

void sub_1BB1BAAB4(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (v2)
    {
      if (v2 != 1)
      {
        if (qword_1ED3C0B50 != -1)
          swift_once();
        v15 = sub_1BB86EFEC();
        __swift_project_value_buffer(v15, (uint64_t)qword_1ED476918);
        v7 = v5;
        v16 = sub_1BB86EFC8();
        v17 = sub_1BB87330C();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = swift_slowAlloc();
          v19 = swift_slowAlloc();
          v24 = v19;
          *(_DWORD *)v18 = 136315394;
          v20 = *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
          v21 = *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
          swift_bridgeObjectRetain();
          sub_1BA5D2E14(v20, v21, &v24);
          sub_1BB873A8C();

          swift_bridgeObjectRelease();
          *(_WORD *)(v18 + 12) = 2048;
          CACurrentMediaTime();
          sub_1BB873A8C();
          _os_log_impl(&dword_1BA493000, v16, v17, "Puzzle did enter error state, puzzleID=%s, duration=%f", (uint8_t *)v18, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BCCE5C38](v19, -1, -1);
          MEMORY[0x1BCCE5C38](v18, -1, -1);

        }
        else
        {

        }
        if (*(_BYTE *)(*(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDataManager]
                      + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_configuration) == 1)
          objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorView], sel_setHidden_, 0);
        objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager], sel_setPresentationState_, 2);
        goto LABEL_21;
      }
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v6 = sub_1BB86EFEC();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED476918);
      v7 = v5;
      v8 = sub_1BB86EFC8();
      v9 = sub_1BB87330C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v11 = swift_slowAlloc();
        v24 = v11;
        *(_DWORD *)v10 = 136315394;
        v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
        v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
        swift_bridgeObjectRetain();
        sub_1BA5D2E14(v12, v13, &v24);
        sub_1BB873A8C();

        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2048;
        CACurrentMediaTime();
        sub_1BB873A8C();
        _os_log_impl(&dword_1BA493000, v8, v9, "Puzzle did enter loaded state, puzzle=%s duration=%f", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v11, -1, -1);
        MEMORY[0x1BCCE5C38](v10, -1, -1);

      }
      else
      {

      }
      v22 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController], sel_view);
      if (v22)
      {
        v23 = v22;
        objc_msgSend(v22, sel_setHidden_, 0);

        objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager], sel_setPresentationState_, 1);
        goto LABEL_21;
      }
    }
    else
    {
      v14 = (char *)objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_view);
      if (v14)
      {
        v7 = v14;
        objc_msgSend(v14, sel_setHidden_, 0);

LABEL_21:
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

id sub_1BB1BAF64()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  result = objc_msgSend(v0, sel_setTimeStyle_, 0);
  qword_1EF2BD170 = (uint64_t)v0;
  return result;
}

uint64_t PuzzleEmbedViewController.presentsWithGesture.getter()
{
  return 0;
}

uint64_t sub_1BB1BAFCC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB1BAFF0(uint64_t a1)
{
  uint64_t v1;

  sub_1BB1B7EF0(a1, v1);
}

void sub_1BB1BAFF8()
{
  uint64_t v0;

  sub_1BB1B7FF4(v0);
}

uint64_t sub_1BB1BB000(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1B8104(a1, v1);
}

uint64_t sub_1BB1BB008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, qword_1ED3D53F0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1BB064(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BB1BB0C8;
  return v6(a1);
}

uint64_t sub_1BB1BB0C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BB1BB114(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _BYTE *a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  double *v37;
  double *v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  _BYTE *v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  _QWORD aBlock[6];

  v22 = type metadata accessor for PuzzleResourceSource();
  v65 = *(_QWORD *)(v22 - 8);
  v23 = *(_QWORD *)(v65 + 64);
  MEMORY[0x1E0C80A78](v22);
  v70 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v25);
  v69 = (char *)&v63 - v26;
  sub_1BA4B07F0(0, qword_1ED3D53F0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, v24);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v63 - v28;
  v30 = type metadata accessor for PuzzleData();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = *(_QWORD *)a2;
  v67 = *(_QWORD *)(a2 + 8);
  v66 = *(unsigned __int8 *)(a2 + 16);
  v71 = a1;
  v34 = PuzzleResourceSource.identifier.getter();
  v35 = &a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
  *v35 = v34;
  v35[1] = v36;
  swift_bridgeObjectRelease();
  v37 = (double *)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  swift_beginAccess();
  *v37 = a6;
  v37[1] = a7;
  v37[2] = a8;
  v37[3] = a9;
  v38 = (double *)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  swift_beginAccess();
  *v38 = a10;
  v38[1] = a11;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation] = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v39 = *(void **)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration];
  *(_QWORD *)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration] = a4;
  v40 = a4;

  v41 = *(void **)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_interactionProvider];
  v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1BB1BD360;
  aBlock[5] = v42;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_53;
  v43 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v41, sel_setInteractionBlock_, v43);
  _Block_release(v43);
  v44 = (uint64_t)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  swift_beginAccess();
  sub_1BB1BB008(v44, (uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    v45 = v66;
    v46 = v67;
    v47 = v68;
    v48 = v71;
    v64 = v23;
    v50 = (uint64_t)v69;
    v49 = (uint64_t)v70;
    result = sub_1BA5C699C((uint64_t)v29, qword_1ED3D53F0, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData);
    if (a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] != 1)
    {
      a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] = 1;
      v52 = sub_1BB872F94();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v50, 1, 1, v52);
      sub_1BA4C2DD8(v48, v49, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
      sub_1BB872F7C();
      v53 = a5;
      v54 = v45;
      sub_1BA6EA1F0(v47, v46);
      v55 = sub_1BB872F70();
      v56 = (*(unsigned __int8 *)(v65 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      v57 = (v64 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
      v58 = (_QWORD *)swift_allocObject();
      v59 = MEMORY[0x1E0DF06E8];
      v58[2] = v55;
      v58[3] = v59;
      v58[4] = v53;
      sub_1BA5193C4(v49, (uint64_t)v58 + v56, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
      v60 = (char *)v58 + v57;
      *(_QWORD *)v60 = v47;
      *((_QWORD *)v60 + 1) = v46;
      v60[16] = v54;
      sub_1BB1B6AEC(v50, (uint64_t)&unk_1EF2BD258, (uint64_t)v58);
      return swift_release();
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v29, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
    v61 = *(void **)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController];
    v62 = sub_1BB1B856C((uint64_t)&v33[*(int *)(v30 + 20)]);
    objc_msgSend(v61, sel_setConfiguration_, v62);

    return sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  }
  return result;
}

uint64_t sub_1BB1BB600()
{
  return sub_1BB1BD320(&qword_1EF2BD1E0, (uint64_t)&protocol conformance descriptor for PuzzleEmbedViewController);
}

uint64_t sub_1BB1BB624@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1BB1BB67C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedDidFinishLoading()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedProcessTerminated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedDidReceiveAction(action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedDidReceiveInteractionMessage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedDidReceiveProgress(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1BB1BB70C()
{
  return type metadata accessor for PuzzleEmbedViewController();
}

uint64_t method lookup function for PuzzleEmbedViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB1BB720(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1BB1BB788;
  return v5(v2 + 32);
}

uint64_t sub_1BB1BB788()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

char *sub_1BB1BB7D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, char *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  Class v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  void *v67;
  uint64_t ObjCClassFromMetadata;
  void *v69;
  id v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  objc_class *ObjectType;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  objc_super v88;
  uint64_t v89[5];
  uint64_t v90[6];

  v81 = a6;
  v78 = a5;
  v87 = a4;
  v80 = a10;
  v79 = a9;
  ObjectType = (objc_class *)swift_getObjectType();
  v17 = sub_1BB86F454();
  v85 = *(_QWORD *)(v17 - 8);
  v86 = v17;
  MEMORY[0x1E0C80A78](v17);
  v82 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v78 - v20;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v78 - v22;
  v90[3] = a12;
  v90[4] = a13;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v90);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 32))(boxed_opaque_existential_0, a8, a12);
  v25 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator;
  v26 = objc_allocWithZone(MEMORY[0x1E0DC3438]);
  v27 = a11;
  *(_QWORD *)&a11[v25] = objc_msgSend(v26, sel_initWithActivityIndicatorStyle_, 100);
  v28 = sub_1BB86C67C();
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v23, 1, 1, v28);
  v30 = (void *)sub_1BB872970();
  v31 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v23, 1, v28) != 1)
  {
    v31 = (void *)sub_1BB86C58C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v28);
  }
  v32 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation;
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977D8]), sel_initWithContext_URL_, v30, v31);

  *(_QWORD *)&v27[v32] = v33;
  v34 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onReuse;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0A50, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v27[v34] = objc_msgSend(objc_allocWithZone(v35), sel_init);
  v36 = &v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_isResizable] = 0;
  v37 = &v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  v38 = type metadata accessor for PuzzleData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v39 = &v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0xE000000000000000;
  v40 = &v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  *(_OWORD *)v40 = 0u;
  *((_OWORD *)v40 + 1) = 0u;
  v41 = &v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  v42 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration;
  *(_QWORD *)&v27[v42] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977D0]), sel_init);
  v43 = (uint64_t *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction];
  *v43 = 0;
  v43[1] = 0;
  v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController____lazy_storage___contentEnvironment] = 8;
  v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] = 0;
  v44 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController] = a1;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_interactionProvider] = a2;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_actionProvider] = a3;
  v45 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v46 = objc_msgSend(v45, sel_errorProvider);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorProvider] = v46;
  v47 = objc_msgSend(v45, sel_presentationManager);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager] = v47;
  v48 = &v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDataManager];
  v49 = v78;
  *(_QWORD *)v48 = v87;
  *((_QWORD *)v48 + 1) = v49;
  sub_1BA4C010C((uint64_t)v90, (uint64_t)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter]);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_bundleSubscriptionManager] = v79;
  LOBYTE(v89[0]) = 0;
  sub_1BB1BC0DC();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleLoadingStateMachine] = sub_1BB86DF90();
  swift_beginAccess();
  v50 = *v43;
  *v43 = 0;
  v43[1] = 0;
  sub_1BA49EBE0(v50);
  v51 = v80;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_textInputTraits] = v80;
  v52 = *(void **)&v27[v44];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3A1080, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1BB87D7A0;
  v54 = (void *)*MEMORY[0x1E0DC5070];
  v55 = (void *)*MEMORY[0x1E0DC5108];
  *(_QWORD *)(v53 + 32) = *MEMORY[0x1E0DC5070];
  *(_QWORD *)(v53 + 40) = v55;
  v56 = (void *)*MEMORY[0x1E0DC5130];
  v57 = (void *)*MEMORY[0x1E0DC5100];
  *(_QWORD *)(v53 + 48) = *MEMORY[0x1E0DC5130];
  *(_QWORD *)(v53 + 56) = v57;
  type metadata accessor for Identifier(0);
  v58 = v51;
  v59 = v52;
  v60 = v54;
  v61 = v55;
  v62 = v56;
  v63 = v57;
  v64 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v59, sel_removeMenusForIdentifiers_, v64);

  v65 = objc_msgSend(*(id *)&v27[v44], sel_messageHandlerManager);
  v66 = v81;
  swift_unknownObjectRetain();
  v67 = (void *)sub_1BB872970();
  objc_msgSend(v65, sel_addMessageHandler_name_, v66, v67);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  type metadata accessor for PuzzleDataManager();
  if (swift_dynamicCastClass())
  {
    *(_QWORD *)(v66 + OBJC_IVAR____TtC8NewsFeed28PuzzleProgressMessageHandler_delegate + 8) = &off_1E7284258;
    swift_unknownObjectWeakAssign();
  }
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v69 = (void *)objc_opt_self();
  v70 = objc_msgSend(v69, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v71 = objc_msgSend(v69, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v72 = v84;
  sub_1BB86F448();
  v74 = v85;
  v73 = v86;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v72, v86);
  v89[3] = sub_1BB86F538();
  v89[4] = MEMORY[0x1E0DB6A20];
  __swift_allocate_boxed_opaque_existential_0(v89);
  sub_1BB86F520();
  v75 = objc_allocWithZone((Class)sub_1BB8716E0());
  *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorView] = sub_1BB8716D4();

  v88.receiver = v27;
  v88.super_class = ObjectType;
  v76 = (char *)objc_msgSendSuper2(&v88, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)(*(_QWORD *)&v76[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDataManager]
            + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_delegate
            + 8) = &off_1E72EDD98;
  swift_unknownObjectWeakAssign();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
  return v76;
}

char *sub_1BB1BC000(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  Class v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a6;
  v27 = a7;
  v24 = a4;
  v25 = a5;
  v23 = a3;
  v16 = *(_QWORD *)(a12 - 8);
  MEMORY[0x1E0C80A78](a11);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (char *)objc_allocWithZone(v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a8, a12);
  return sub_1BB1BB7D8(a1, a2, v23, v24, v25, v26, v27, (uint64_t)v18, a9, a10, v20, a12, a13);
}

void sub_1BB1BC0DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9060)
  {
    sub_1BA854940();
    v0 = sub_1BB86DFB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9060);
  }
}

uint64_t sub_1BB1BC13C(uint64_t a1)
{
  char *v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  void *v21;
  char v22;
  _BYTE *v23;
  uint64_t v24;
  char **v25;
  int v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char **v55;
  uint64_t v56;
  char *v57;
  void *v58;
  int v59;
  void *v60;
  char *v61;
  char *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  _QWORD v117[2];
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t *v133;
  uint64_t v134;
  char *v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v132 = (char *)v117 - v5;
  sub_1BA4B07F0(0, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], v3);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v128 = (char *)v117 - v10;
  v11 = type metadata accessor for PuzzleResourceSource();
  v130 = *(_QWORD *)(v11 - 8);
  v131 = v11;
  v12 = *(_QWORD *)(v130 + 64);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v13);
  v129 = (uint64_t)v117 - v14;
  MEMORY[0x1E0C80A78](v15);
  v133 = (_QWORD *)((char *)v117 - v16);
  v135 = v1;
  v17 = (void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  swift_beginAccess();
  v18 = type metadata accessor for PuzzleData();
  result = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18);
  if (!(_DWORD)result)
  {
    v20 = *(_QWORD *)(a1 + 16);
    if (v20)
    {
      v121 = (_QWORD *)((char *)v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      v118 = v8;
      v21 = *v17;
      v123 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation;
      v122 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleLoadingStateMachine;
      v120 = &v135[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter];
      v125 = v12 + 7;
      swift_unknownObjectRetain();
      result = swift_bridgeObjectRetain();
      v22 = 0;
      v119 = a1;
      v23 = (_BYTE *)(a1 + 48);
      v24 = 1 - v20;
      v25 = &selRef_isSports;
      v124 = xmmword_1BB87FC90;
      v117[1] = MEMORY[0x1E0DEE9C0] + 8;
      v126 = v21;
      while (1)
      {
        if ((v22 & 1) != 0)
        {
          if (!v24)
            goto LABEL_53;
          goto LABEL_9;
        }
        v26 = *v23;
        if (*v23)
        {
          v27 = (void *)*((_QWORD *)v23 - 2);
          v28 = (void *)*((_QWORD *)v23 - 1);
          v136 = v27;
          if (v26 == 1)
          {
            v29 = v27;
            swift_unknownObjectRetain_n();
            v30 = v29;
            v31 = objc_msgSend(v28, sel_identifier);
            v32 = sub_1BB8729A0();
            v34 = v33;

            v35 = objc_msgSend(v21, sel_identifier);
            v36 = sub_1BB8729A0();
            v38 = v37;

            if (v32 == v36 && v34 == v38)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_19;
            }
            v49 = sub_1BB874398();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v49 & 1) != 0)
            {
LABEL_19:
              v134 = (uint64_t)v28;
              v50 = objc_msgSend(*(id *)&v135[v123], v25[110]);
              v51 = sub_1BB8729A0();
              v53 = v52;

              v54 = sub_1BB86C67C();
              v55 = v25;
              v56 = *(_QWORD *)(v54 - 8);
              v57 = v132;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v132, 1, 1, v54);
              v58 = (void *)sub_1BB872970();
              v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48))(v57, 1, v54);
              v60 = 0;
              if (v59 != 1)
              {
                v61 = v132;
                v60 = (void *)sub_1BB86C58C();
                v62 = v61;
                v21 = v126;
                (*(void (**)(char *, uint64_t))(v56 + 8))(v62, v54);
              }
              v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977D8]), sel_initWithContext_URL_, v58, v60);

              v64 = objc_msgSend(v63, (SEL)v55 + 2120);
              v65 = sub_1BB8729A0();
              v67 = v66;

              v25 = v55;
              if (v51 == v65 && v53 == v67)
              {
                swift_bridgeObjectRelease_n();
                v68 = v134;
                goto LABEL_28;
              }
              v82 = sub_1BB874398();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v68 = v134;
              if ((v82 & 1) != 0)
              {
LABEL_28:
                swift_retain();
                sub_1BB86DF9C();
                swift_release();
                if (v145 == 2)
                {
                  v83 = *((_QWORD *)v120 + 3);
                  v84 = *((_QWORD *)v120 + 4);
                  __swift_project_boxed_opaque_existential_1(v120, v83);
                  if (((*(uint64_t (**)(void *, uint64_t, uint64_t))(v84 + 8))(v21, v83, v84) & 1) != 0)
                  {
                    v85 = objc_msgSend(v21, sel_identifier);
                    v86 = sub_1BB8729A0();
                    v88 = v87;

                    v89 = v121;
                    *v121 = v86;
                    v89[1] = v88;
                    swift_storeEnumTagMultiPayload();
                    v90 = sub_1BB872F94();
                    v127 = *(_QWORD *)(v90 - 8);
                    v91 = (uint64_t)v118;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v118, 1, 1, v90);
                    v92 = v129;
                    sub_1BA4C2DD8((uint64_t)v89, v129, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
                    sub_1BB872F7C();
                    v93 = v135;
                    v94 = sub_1BB872F70();
                    v95 = (*(unsigned __int8 *)(v130 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
                    v96 = (v125 + v95) & 0xFFFFFFFFFFFFFFF8;
                    v97 = (_QWORD *)swift_allocObject();
                    v97[2] = v94;
                    v97[3] = MEMORY[0x1E0DF06E8];
                    v97[4] = v93;
                    v98 = v127;
                    sub_1BA5193C4(v92, (uint64_t)v97 + v95, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
                    v99 = (char *)v97 + v96;
                    *(_OWORD *)v99 = v124;
                    v99[16] = 0;
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v91, 1, v90) == 1)
                    {
                      sub_1BA5C699C(v91, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
                    }
                    else
                    {
                      sub_1BB872F88();
                      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v91, v90);
                    }
                    v21 = v126;
                    v111 = v134;
                    if (v97[2])
                    {
                      swift_getObjectType();
                      swift_unknownObjectRetain();
                      v112 = sub_1BB872F28();
                      v114 = v113;
                      swift_unknownObjectRelease();
                    }
                    else
                    {
                      v112 = 0;
                      v114 = 0;
                    }
                    v115 = swift_allocObject();
                    *(_QWORD *)(v115 + 16) = &unk_1EF2BD200;
                    *(_QWORD *)(v115 + 24) = v97;
                    if (v114 | v112)
                    {
                      v141 = 0;
                      v142 = 0;
                      v143 = v112;
                      v144 = v114;
                    }
                    swift_task_create();
                    swift_release();
                    v22 = 1;
                    v116 = v136;
                    sub_1BA9D00C4(v136, v111, 1u);
                    sub_1BA9D00C4(v116, v111, 1u);
                    result = sub_1BA4A2E80((uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
                    v25 = &selRef_isSports;
                    if (!v24)
                      goto LABEL_53;
                    goto LABEL_6;
                  }
                }
              }
              v100 = v136;
              sub_1BA9D00C4(v136, v68, 1u);
              v101 = v100;
              v102 = v68;
            }
            else
            {
              v109 = v136;
              sub_1BA9D00C4(v136, (uint64_t)v28, 1u);
              v101 = v109;
              v102 = (uint64_t)v28;
            }
            result = (uint64_t)sub_1BA9D00C4(v101, v102, 1u);
            if (!v24)
              goto LABEL_53;
            goto LABEL_5;
          }
          v39 = v27;
          swift_unknownObjectRetain_n();
          v40 = v39;
          v41 = objc_msgSend(v28, sel_identifier);
          v42 = sub_1BB8729A0();
          v44 = v43;

          v45 = objc_msgSend(v21, sel_identifier);
          v46 = sub_1BB8729A0();
          v48 = v47;

          if (v42 == v46 && v44 == v48)
          {
            swift_bridgeObjectRelease();
LABEL_25:
            v134 = (uint64_t)v28;
            v70 = v133;
            *v133 = v42;
            v70[1] = v44;
            swift_storeEnumTagMultiPayload();
            v71 = sub_1BB872F94();
            v127 = *(_QWORD *)(v71 - 8);
            v72 = v128;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v128, 1, 1, v71);
            v73 = v129;
            sub_1BA4C2DD8((uint64_t)v70, v129, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
            sub_1BB872F7C();
            v74 = v135;
            v75 = sub_1BB872F70();
            v76 = (*(unsigned __int8 *)(v130 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
            v77 = (v125 + v76) & 0xFFFFFFFFFFFFFFF8;
            v78 = (_QWORD *)swift_allocObject();
            v78[2] = v75;
            v78[3] = MEMORY[0x1E0DF06E8];
            v78[4] = v74;
            sub_1BA5193C4(v73, (uint64_t)v78 + v76, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
            v79 = (char *)v78 + v77;
            v80 = (uint64_t)v72;
            v81 = v127;
            *(_OWORD *)v79 = v124;
            v79[16] = 0;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v80, 1, v71) == 1)
            {
              sub_1BA5C699C(v80, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
            }
            else
            {
              sub_1BB872F88();
              (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v71);
            }
            v21 = v126;
            v103 = v134;
            if (v78[2])
            {
              swift_getObjectType();
              swift_unknownObjectRetain();
              v104 = sub_1BB872F28();
              v106 = v105;
              swift_unknownObjectRelease();
            }
            else
            {
              v104 = 0;
              v106 = 0;
            }
            v107 = swift_allocObject();
            *(_QWORD *)(v107 + 16) = &unk_1EF2BD218;
            *(_QWORD *)(v107 + 24) = v78;
            if (v106 | v104)
            {
              v137 = 0;
              v138 = 0;
              v139 = v104;
              v140 = v106;
            }
            v108 = v136;
            swift_task_create();
            swift_release();
            sub_1BA9D00C4(v108, v103, 2u);
            sub_1BA9D00C4(v108, v103, 2u);
            result = sub_1BA4A2E80((uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
            v25 = &selRef_isSports;
            if (!v24)
            {
LABEL_53:
              swift_unknownObjectRelease();
              return swift_bridgeObjectRelease();
            }
LABEL_9:
            v22 = 1;
            goto LABEL_6;
          }
          v69 = sub_1BB874398();
          swift_bridgeObjectRelease();
          if ((v69 & 1) != 0)
            goto LABEL_25;
          swift_bridgeObjectRelease();
          v110 = v136;
          sub_1BA9D00C4(v136, (uint64_t)v28, 2u);
          result = (uint64_t)sub_1BA9D00C4(v110, (uint64_t)v28, 2u);
          if (!v24)
            goto LABEL_53;
        }
        else if (!v24)
        {
          goto LABEL_53;
        }
LABEL_5:
        v22 = 0;
LABEL_6:
        v23 += 24;
        if (++v24 == 1)
        {
          __break(1u);
          return result;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BB1BCCB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for PuzzleResourceSource() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v10;
  v12 = *((_QWORD *)v10 + 1);
  v13 = v10[16];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1BA8195A4;
  return sub_1BB1B988C(a1, v6, v7, v8, v9, v11, v12, v13);
}

uint64_t sub_1BB1BCD7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB1BCDA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA4B0D38;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF2BD230 + dword_1EF2BD230))(a1, v4);
}

id sub_1BB1BCE14(double a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *a20)
{
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;

  if (a8)
  {
    v41 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = 0;
  }
  v40 = (void *)sub_1BB86C940();
  if (a11)
  {
    v39 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  v38 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v42 = a9;
  if (a14)
  {
    sub_1BB86C67C();
    v37 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = 0;
  }
  v29 = (void *)sub_1BB86C58C();
  v30 = sub_1BB86C67C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(a17, 1, v30) != 1)
  {
    v32 = (void *)sub_1BB86C58C();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a17, v30);
  }
  LOBYTE(v36) = a19 & 1;
  v33 = objc_msgSend(a20, sel_initWithStoreFront_locale_contentEnvironment_contentSizeCategory_canvasSize_contentFrame_dataSources_location_sourceURL_activePictureInPictureURL_feedConfiguration_supportsLiveActivities_, v41, v40, v39, v38, v37, a15, a1, a2, a3, a4, a5, a6, v29, v32, a18, v36);

  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a16, v30);
  v34 = sub_1BB86C9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v42, v34);
  return v33;
}

void sub_1BB1BD068()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  Class v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _OWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v1 = v0;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  v5 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
  v8 = (void *)sub_1BB872970();
  v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    v9 = (void *)sub_1BB86C58C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v10 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977D8]), sel_initWithContext_URL_, v8, v9);

  *(_QWORD *)&v1[v10] = v11;
  v12 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onReuse;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0A50, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone(v13), sel_init);
  v14 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier];
  *v14 = 0;
  v14[1] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_isResizable] = 0;
  v15 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  v16 = type metadata accessor for PuzzleData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v17 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  v18 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  *v18 = 0u;
  v18[1] = 0u;
  v19 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  *v19 = 0;
  v19[1] = 0;
  v20 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration;
  *(_QWORD *)&v1[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977D0]), sel_init);
  v21 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction];
  *v21 = 0;
  v21[1] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController____lazy_storage___contentEnvironment] = 8;
  v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] = 0;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB1BD320(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PuzzleEmbedViewController();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB1BD360()
{
  uint64_t v0;

  sub_1BB1B8B48(v0);
}

uint64_t sub_1BB1BD36C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for PuzzleResourceSource() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v10;
  v12 = *((_QWORD *)v10 + 1);
  v13 = v10[16];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1BA4B0D38;
  return sub_1BB1B9E4C(a1, v6, v7, v8, v9, v11, v12, v13);
}

void sub_1BB1BD430()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BD268)
  {
    sub_1BAF5F888();
    sub_1BA854940();
    v0 = sub_1BB86E644();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BD268);
  }
}

uint64_t sub_1BB1BD4A8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BB1BD4CC(uint64_t a1)
{
  uint64_t v1;

  sub_1BB1BA888(a1, *(_QWORD *)(v1 + 16), "Puzzle did enter loading state, puzzle=%s, duration=%f", (SEL *)&selRef_startAnimating);
}

void sub_1BB1BD4F8(uint64_t a1)
{
  uint64_t v1;

  sub_1BB1BA888(a1, *(_QWORD *)(v1 + 16), "Puzzle did exit loading state, puzzle=%s, duration=%f", (SEL *)&selRef_stopAnimating);
}

void sub_1BB1BD524(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1BB1BAAB4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t static FormatAssetURL.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1BB874398() & 1) != 0)
    return sub_1BA5B35E8(v2, v3);
  else
    return 0;
}

uint64_t FormatAssetURL.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatAssetURL.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAssetURL.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatAssetURL.parameters.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t sub_1BB1BD638(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1BD65C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1BD65C()
{
  unint64_t result;

  result = qword_1EF2BD280;
  if (!qword_1EF2BD280)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAssetURL, &type metadata for FormatAssetURL);
    atomic_store(result, (unint64_t *)&qword_1EF2BD280);
  }
  return result;
}

uint64_t sub_1BB1BD6A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1BB874398() & 1) != 0)
    return sub_1BA5B35E8(v2, v3);
  else
    return 0;
}

unint64_t sub_1BB1BD700(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5E3C8C();
  a1[2] = sub_1BAEF9608();
  result = sub_1BB1BD734();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1BD734()
{
  unint64_t result;

  result = qword_1EF2BD288;
  if (!qword_1EF2BD288)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAssetURL, &type metadata for FormatAssetURL);
    atomic_store(result, (unint64_t *)&qword_1EF2BD288);
  }
  return result;
}

uint64_t sub_1BB1BD778(_QWORD *a1)
{
  return FormatAssetURL.encode(to:)(a1);
}

uint64_t sub_1BB1BD78C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1BD798(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatAssetURL()
{
  return &type metadata for FormatAssetURL;
}

uint64_t sub_1BB1BD7E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BB1BD848 + 4 * word_1BB8F5800[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1BB1BE198(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 216) >= 3uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 184) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for FormatSlotDefinition();
      v4 = a1 + *(int *)(v3 + 40);
      v5 = sub_1BB86E710();
      v6 = *(_QWORD *)(v5 - 8);
      v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (!v7(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      sub_1BAB0EA44();
      v9 = a1 + *(int *)(v8 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v9 + *(int *)(v3 + 40);
      result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v10, 1, v5);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
      return result;
    case 3:
      swift_release();
      return swift_release();
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1BA6C0C20(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
      return __swift_destroy_boxed_opaque_existential_1(a1 + 176);
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_21:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BB1BE61C()
{
  char *v0;

  v0 = (char *)sub_1BB1BE670 + 4 * word_1BB8F5820[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB1BE670(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__dst, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v49;
  __int128 *v50;

  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  v33 = *(_QWORD *)(v31 + 24);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(v30 + 24) = v33;
  v34 = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = v34;
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
  v35 = (_OWORD *)(v31 + 64);
  v36 = *(_QWORD *)(v31 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36 <= 2)
  {
    *(_OWORD *)(v30 + 64) = *v35;
  }
  else
  {
    *(_BYTE *)(v30 + 64) = *(_BYTE *)v35;
    *(_QWORD *)(v30 + 72) = v36;
    swift_bridgeObjectRetain();
  }
  v37 = *(_QWORD *)(v31 + 88);
  *(_QWORD *)(v30 + 80) = *(_QWORD *)(v31 + 80);
  *(_QWORD *)(v30 + 88) = v37;
  v38 = *(_QWORD *)(v31 + 104);
  *(_QWORD *)(v30 + 96) = *(_QWORD *)(v31 + 96);
  *(_QWORD *)(v30 + 104) = v38;
  v39 = *(_QWORD *)(v31 + 120);
  *(_QWORD *)(v30 + 112) = *(_QWORD *)(v31 + 112);
  *(_QWORD *)(v30 + 120) = v39;
  *(_BYTE *)(v30 + 128) = *(_BYTE *)(v31 + 128);
  v40 = *(_QWORD *)(v31 + 144);
  *(_QWORD *)(v30 + 136) = *(_QWORD *)(v31 + 136);
  *(_QWORD *)(v30 + 144) = v40;
  v41 = *(_QWORD *)(v31 + 160);
  *(_QWORD *)(v30 + 152) = *(_QWORD *)(v31 + 152);
  *(_QWORD *)(v30 + 160) = v41;
  v42 = *(_QWORD *)(v31 + 176);
  *(_QWORD *)(v30 + 168) = *(_QWORD *)(v31 + 168);
  *(_QWORD *)(v30 + 176) = v42;
  *(_QWORD *)(v30 + 184) = *(_QWORD *)(v31 + 184);
  *(_BYTE *)(v30 + 192) = *(_BYTE *)(v31 + 192);
  *(_QWORD *)(v30 + 200) = *(_QWORD *)(v31 + 200);
  v50 = (__int128 *)(v31 + 208);
  v49 = *(_QWORD *)(v31 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49 < 2)
  {
    v43 = *v50;
    v44 = (_OWORD *)(v30 + 208);
LABEL_9:
    *v44 = v43;
    goto LABEL_10;
  }
  v44 = (_OWORD *)(v30 + 208);
  if (v49 == 2)
  {
    v43 = *v50;
    goto LABEL_9;
  }
  *(_BYTE *)(v30 + 208) = *(_BYTE *)v50;
  *(_QWORD *)(v30 + 216) = v49;
  swift_bridgeObjectRetain();
LABEL_10:
  v45 = *(_QWORD *)(v31 + 232);
  *(_QWORD *)(v30 + 224) = *(_QWORD *)(v31 + 224);
  *(_QWORD *)(v30 + 232) = v45;
  v46 = *(_QWORD *)(v31 + 248);
  *(_QWORD *)(v30 + 240) = *(_QWORD *)(v31 + 240);
  *(_QWORD *)(v30 + 248) = v46;
  v47 = *(_QWORD *)(v31 + 264);
  *(_QWORD *)(v30 + 256) = *(_QWORD *)(v31 + 256);
  *(_QWORD *)(v30 + 264) = v47;
  *(_BYTE *)(v30 + 272) = *(_BYTE *)(v31 + 272);
  *(_QWORD *)(v30 + 280) = *(_QWORD *)(v31 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v30;
}

uint64_t sub_1BB1BEF90(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BB1BFADC(result);
    v2 = (char *)&loc_1BB1BEFF4 + 4 * word_1BB8F5830[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BB1BFADC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatPackageError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatPackageError()
{
  uint64_t result;

  result = qword_1EF2BD300;
  if (!qword_1EF2BD300)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BB1BFB54(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
    v8 = type metadata accessor for FormatSlotDefinition();
    v9 = *(int *)(v8 + 40);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BB86E710();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      sub_1BA74E57C();
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    sub_1BAB0EA44();
    v17 = *(int *)(v16 + 48);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    v21 = *((_OWORD *)v19 + 3);
    *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    *((_OWORD *)v18 + 3) = v21;
    *((_QWORD *)v18 + 8) = *((_QWORD *)v19 + 8);
    v22 = *(int *)(v8 + 40);
    v23 = &v18[v22];
    v24 = &v19[v22];
    if (v14(&v19[v22], 1, v12))
    {
      sub_1BA74E57C();
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v24, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1BB1BFD14(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_1BB1BFADC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v8 = type metadata accessor for FormatSlotDefinition();
      v9 = *(int *)(v8 + 40);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1BB86E710();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      if (v14(v11, 1, v12))
      {
        sub_1BA74E57C();
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      sub_1BAB0EA44();
      v17 = *(int *)(v16 + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v20;
      v21 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v21;
      *((_QWORD *)v18 + 8) = *((_QWORD *)v19 + 8);
      v22 = *(int *)(v8 + 40);
      v23 = &v18[v22];
      v24 = &v19[v22];
      if (v14(&v19[v22], 1, v12))
      {
        sub_1BA74E57C();
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v24, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB1BFEE4()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[12];

  v2[4] = &unk_1BB8F5858;
  v2[5] = &unk_1BB8F5870;
  result = type metadata accessor for FormatSlotDefinition();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[6] = v2;
    v2[7] = &unk_1BB8F5888;
    v2[8] = &unk_1BB8F58A0;
    v2[9] = &unk_1BB8F58B8;
    v2[10] = &unk_1BB8F58D0;
    v2[11] = &unk_1BB8F58E8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FeedSectionPositionProviderType.strictSectionPosition<A, B>(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 8))(a1, a2, a3, a5, a6, a8, a9, a4, a7);
  if (v9 == sub_1BB86BC14())
    return -1;
  else
    return v9;
}

uint64_t FeedSectionPositionProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FeedSectionPositionProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FeedSectionPositionProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedSectionPositionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedSectionPositionProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

ValueMetadata *type metadata accessor for DebugFormatCompilerSection()
{
  return &type metadata for DebugFormatCompilerSection;
}

uint64_t sub_1BB1C0044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *(int *)(type metadata accessor for DebugFormatCompilingPackage() + 20);
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

void sub_1BB1C0090(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X8>)
{
  sub_1BB1C07D8(a1, a2, (uint64_t (*)(uint64_t, double))sub_1BB37D11C, 0x2073726F72724520, 0xE900000000000028, a3);
}

void sub_1BB1C00B4(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;

  v24 = a3;
  v5 = type metadata accessor for DebugFormatCompilerItem();
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x1E0C80A78](v5);
  v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DebugFormatCompilerResultEntry();
  v30 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v27 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)&v24 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - v12;
  v31 = *a2;
  v14 = sub_1BB37D3C4(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = MEMORY[0x1E0DEE9D8];
  v33 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v14 + 16))
  {
    if (*(_QWORD *)(v14 + 16))
    {
      sub_1BA4C2DD8(v14 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80)), (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1BB1C0760);
  }
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v33 = v15;
    sub_1BAC7B064(0, v16, 0);
    v17 = v15 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    v18 = *(_QWORD *)(v30 + 72);
    v19 = (uint64_t)v25;
    do
    {
      v20 = v27;
      sub_1BA4C2DD8(v17, v27, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1BA4C2DD8(v20, v19, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2E80(v20, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      v21 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B064(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v19 = (uint64_t)v25;
        v21 = v33;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1BAC7B064(v22 > 1, v23 + 1, 1);
        v19 = (uint64_t)v25;
        v21 = v33;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      sub_1BA5193C4(v19, v21+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v23, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerItem);
      v17 += v18;
      --v16;
    }
    while (v16);
  }
  swift_release();
  v33 = 0;
  v34 = 0xE000000000000000;
  sub_1BB873CB4();
  __asm { BR              X9 }
}

void sub_1BB1C07B4(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X8>)
{
  sub_1BB1C07D8(a1, a2, (uint64_t (*)(uint64_t, double))sub_1BB37D630, 0x7373656363755320, 0xEA00000000002820, a3);
}

void sub_1BB1C07D8(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t (*a3)(uint64_t, double)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v29[3];
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;

  v29[0] = a4;
  v29[1] = a5;
  v29[2] = a6;
  v9 = type metadata accessor for DebugFormatCompilerItem();
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x1E0C80A78](v9);
  v30 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DebugFormatCompilerResultEntry();
  v35 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v32 = (uint64_t)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v37 = (char *)v29 - v14;
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v29 - v17;
  v36 = *a2;
  v19 = a3(a1, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v19 + 16))
  {
    if (*(_QWORD *)(v19 + 16))
    {
      sub_1BA4C2DD8(v19 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80)), (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1BB1C0E64);
  }
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v38 = v20;
    sub_1BAC7B064(0, v21, 0);
    v22 = v20 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    v23 = *(_QWORD *)(v35 + 72);
    v24 = (uint64_t)v30;
    do
    {
      v25 = v32;
      sub_1BA4C2DD8(v22, v32, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1BA4C2DD8(v25, v24, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      v26 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B064(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v24 = (uint64_t)v30;
        v26 = v38;
      }
      v28 = *(_QWORD *)(v26 + 16);
      v27 = *(_QWORD *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BAC7B064(v27 > 1, v28 + 1, 1);
        v24 = (uint64_t)v30;
        v26 = v38;
      }
      *(_QWORD *)(v26 + 16) = v28 + 1;
      sub_1BA5193C4(v24, v26+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v28, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerItem);
      v22 += v23;
      --v21;
    }
    while (v21);
  }
  swift_release();
  v38 = 0;
  v39 = 0xE000000000000000;
  __asm { BR              X9 }
}

uint64_t sub_1BB1C0EB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for DebugFormatCompilingPackage();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for DebugFormatCompilerItem();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA85E1E8(a1);
  swift_bridgeObjectRelease();
  sub_1BB86C8B0();
  sub_1BB078C54();
  v11 = sub_1BB872E14();
  swift_release();
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v21 = a2;
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B064(0, v12, 0);
    v13 = *(unsigned __int8 *)(v5 + 80);
    v20 = v11;
    v14 = v11 + ((v13 + 32) & ~v13);
    v15 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_1BA4C2DD8(v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilingPackage);
      *v10 = *v7;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilingPackage);
      v16 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B064(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v23;
      }
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BAC7B064(v17 > 1, v18 + 1, 1);
        v16 = v23;
      }
      *(_QWORD *)(v16 + 16) = v18 + 1;
      sub_1BA5193C4((uint64_t)v10, v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerItem);
      v14 += v15;
      --v12;
    }
    while (v12);
    result = swift_bridgeObjectRelease();
    a2 = v21;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
  }
  *a2 = 0x6E696C69706D6F43;
  a2[1] = 0xAC000000A680E267;
  a2[2] = 0;
  a2[3] = 0;
  a2[4] = v16;
  return result;
}

BOOL FeedOfflineProviding.isOnline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() == 0;
}

uint64_t dispatch thunk of FeedOfflineProviding.offlineReason.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FormatMediaTimingFillMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1C1180 + 4 * byte_1BB8F59F0[*v0]))(0x7364726177726F66, 0xE800000000000000);
}

uint64_t sub_1BB1C1180()
{
  return 0x647261776B636162;
}

uint64_t sub_1BB1C119C()
{
  return 1752461154;
}

uint64_t sub_1BB1C11AC()
{
  return 0x6465766F6D6572;
}

NewsFeed::FormatMediaTimingFillMode_optional __swiftcall FormatMediaTimingFillMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatMediaTimingFillMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BB1C121C(char *a1)
{
  sub_1BB806B18(*a1);
}

void sub_1BB1C1228()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB1C1274()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB1C12E0()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB1C131C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB1C1374()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB1C13BC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatMediaTimingFillMode_optional sub_1BB1C1428(Swift::String *a1)
{
  return FormatMediaTimingFillMode.init(rawValue:)(*a1);
}

uint64_t sub_1BB1C1434()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB1C1464 + 4 * byte_1BB8F5A00[*v0]))();
}

void sub_1BB1C1464(_QWORD *a1@<X8>)
{
  *a1 = 0x647261776B636162;
  a1[1] = 0xE900000000000073;
}

void sub_1BB1C1484(_QWORD *a1@<X8>)
{
  *a1 = 1752461154;
  a1[1] = 0xE400000000000000;
}

void sub_1BB1C1498(_QWORD *a1@<X8>)
{
  *a1 = 0x6465766F6D6572;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1BB1C14B4()
{
  sub_1BB1C1850();
  return sub_1BB872D60();
}

uint64_t sub_1BB1C1510(_QWORD *a1)
{
  return FormatMediaTimingFillMode.encode(to:)(a1);
}

uint64_t CAMediaTimingFillMode.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v0 = 0x647261776B636142;
  v1 = sub_1BB8729A0();
  v3 = v2;
  if (v1 == sub_1BB8729A0() && v3 == v4)
    goto LABEL_12;
  v6 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return v0;
  v0 = 1752461122;
  v7 = sub_1BB8729A0();
  v9 = v8;
  if (v7 == sub_1BB8729A0() && v9 == v10)
    goto LABEL_12;
  v12 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    return v0;
  v0 = 0x7364726177726F46;
  v14 = sub_1BB8729A0();
  v16 = v15;
  if (v14 == sub_1BB8729A0() && v16 == v17)
    goto LABEL_12;
  v18 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    return v0;
  v0 = 0x6465766F6D6552;
  v19 = sub_1BB8729A0();
  v21 = v20;
  if (v19 == sub_1BB8729A0() && v21 == v22)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    return v0;
  }
  v23 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
    return 0x6E776F6E6B6E55;
  return v0;
}

uint64_t sub_1BB1C1790()
{
  return CAMediaTimingFillMode.description.getter();
}

unint64_t sub_1BB1C179C()
{
  unint64_t result;

  result = qword_1EF2BD338;
  if (!qword_1EF2BD338)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFillMode, &type metadata for FormatMediaTimingFillMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BD338);
  }
  return result;
}

unint64_t sub_1BB1C17E0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB1C180C();
  result = sub_1BB1C1850();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB1C180C()
{
  unint64_t result;

  result = qword_1EF2BD340;
  if (!qword_1EF2BD340)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFillMode, &type metadata for FormatMediaTimingFillMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BD340);
  }
  return result;
}

unint64_t sub_1BB1C1850()
{
  unint64_t result;

  result = qword_1EF2BD348;
  if (!qword_1EF2BD348)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFillMode, &type metadata for FormatMediaTimingFillMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BD348);
  }
  return result;
}

unint64_t sub_1BB1C1894(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1C18B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1C18B8()
{
  unint64_t result;

  result = qword_1EF2BD350;
  if (!qword_1EF2BD350)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFillMode, &type metadata for FormatMediaTimingFillMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BD350);
  }
  return result;
}

unint64_t sub_1BB1C18FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4FEBE4();
  a1[2] = sub_1BAEEFC38();
  result = sub_1BB1C179C();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatMediaTimingFillMode()
{
  return &type metadata for FormatMediaTimingFillMode;
}

id sub_1BB1C1944(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    return (id)swift_retain();
  else
    return a1;
}

void destroy for FormatAccessibilityCustomAction(uint64_t a1)
{
  sub_1BB1C1964(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1BB1C1964(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    swift_release();
  else

}

uint64_t _s8NewsFeed31FormatAccessibilityCustomActionOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BB1C1944(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatAccessibilityCustomAction(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BB1C1944(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BB1C1964(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatAccessibilityCustomAction(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BB1C1964(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatAccessibilityCustomAction()
{
  return &type metadata for FormatAccessibilityCustomAction;
}

uint64_t FormatText.string.getter()
{
  return swift_retain();
}

uint64_t FormatText.link.getter()
{
  return swift_retain();
}

uint64_t FormatText.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t method lookup function for FormatText()
{
  return swift_lookUpClassMethod();
}

id IssueCoverColorPalette.lightPlaceholderColor.getter()
{
  id *v0;

  return *v0;
}

id IssueCoverColorPalette.darkPlaceholderColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id IssueCoverColorPalette.shadowColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id IssueCoverColorPalette.borderColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id static IssueCoverColorPalette.default.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10;

  if (qword_1ED3BA860 != -1)
    swift_once();
  v2 = (void *)qword_1ED3B7090;
  v3 = *(void **)algn_1ED3B7098;
  v5 = (void *)qword_1ED3B70A0;
  v4 = unk_1ED3B70A8;
  v10 = (id)unk_1ED3B70A8;
  *a1 = qword_1ED3B7090;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  v6 = v2;
  v7 = v3;
  v8 = v5;
  return v10;
}

UIColor __swiftcall IssueCoverColorPalette.placeholderColor(on:)(UIColor on)
{
  objc_class **v1;
  objc_class *v3;
  objc_class *v4;
  UIColor *v5;
  id v6;
  void *v7;
  objc_class *v8;
  objc_class *v9;
  objc_class *v10;
  objc_class *v11;
  objc_class *v12;
  id v13;
  _QWORD v15[6];

  v3 = *v1;
  v4 = v1[1];
  v5 = (UIColor *)swift_allocObject();
  v5[2].super.isa = on.super.isa;
  v5[3].super.isa = v3;
  v5[4].super.isa = v4;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v15[4] = sub_1BB1C1CFC;
  v15[5] = v5;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1BA61387C;
  v15[3] = &block_descriptor_48;
  v7 = _Block_copy(v15);
  v8 = v3;
  v9 = v4;
  v10 = v8;
  v11 = v9;
  v12 = on.super.isa;
  v13 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  swift_release();
  return (UIColor)v13;
}

id sub_1BB1C1C4C(uint64_t a1, id a2, void *a3, void *a4)
{
  id v6;
  double v7;
  double v8;
  void *v9;

  v6 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  objc_msgSend(v6, sel_ts_luminance);
  v8 = v7;

  if (v8 <= 0.7)
    v9 = a4;
  else
    v9 = a3;
  return v9;
}

uint64_t sub_1BB1C1CC8()
{
  id *v0;

  return swift_deallocObject();
}

id sub_1BB1C1CFC(uint64_t a1)
{
  id *v1;

  return sub_1BB1C1C4C(a1, v1[2], v1[3], v1[4]);
}

ValueMetadata *type metadata accessor for IssueCoverColorPalette()
{
  return &type metadata for IssueCoverColorPalette;
}

double IssueCoverViewLayoutOptions.origin.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

__n128 IssueCoverViewLayoutOptions.sizeConstraint.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[2].n128_u8[0];
  result = v1[1];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

double IssueCoverViewLayoutOptions.shadowRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double IssueCoverViewLayoutOptions.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t IssueCoverViewLayoutOptions.uiRectCorner.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

double IssueCoverViewLayoutOptions.borderWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

__n128 IssueCoverViewLayoutOptions.init(origin:sizeConstraint:shadowRadius:cornerRadius:uiRectCorner:borderWidth:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>)
{
  unsigned __int8 v8;
  __n128 result;

  v8 = a1[1].n128_u8[0];
  a3->n128_f64[0] = a4;
  a3->n128_f64[1] = a5;
  result = *a1;
  a3[1] = *a1;
  a3[2].n128_u8[0] = v8;
  a3[2].n128_f64[1] = a6;
  a3[3].n128_f64[0] = a7;
  a3[3].n128_u64[1] = a2;
  a3[4].n128_f64[0] = a8;
  return result;
}

uint64_t getEnumTagSinglePayload for IssueCoverViewLayoutOptions(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueCoverViewLayoutOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueCoverViewLayoutOptions()
{
  return &type metadata for IssueCoverViewLayoutOptions;
}

ValueMetadata *type metadata accessor for IssueCoverViewLayoutOptions.SizeConstraint()
{
  return &type metadata for IssueCoverViewLayoutOptions.SizeConstraint;
}

uint64_t sub_1BB1C1E34@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t *, _QWORD);
  void (*v79)(char *);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(uint64_t *, _QWORD);
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int EnumCaseMultiPayload;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t *v113;
  unint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v122)(char *, uint64_t, uint64_t);
  char *v123;
  char *v124;
  uint64_t v125;
  _QWORD v126[4];
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t, uint64_t);
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  void (*v172)(char *, uint64_t, uint64_t);
  uint64_t v173;
  uint64_t v174;

  v136 = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v3);
  v131 = (char *)v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v132 = (char *)v126 - v6;
  sub_1BA4A3FB4(0, &qword_1ED3B0568, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  MEMORY[0x1E0C80A78](v7);
  v129 = (char *)v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v140 = (char *)v126 - v10;
  v135 = sub_1BB86CBE0();
  v133 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v127 = (char *)v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v126[1] = (char *)v126 - v13;
  v157 = type metadata accessor for WebEmbedDataVisualization();
  v155 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v154 = (_QWORD *)((char *)v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, &qword_1ED3CB5E0, v15);
  MEMORY[0x1E0C80A78](v16);
  v160 = (uint64_t)v126 - v17;
  v18 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v18);
  v163 = (uint64_t)v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v162 = (char *)v126 - v21;
  v164 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v164);
  v126[2] = (char *)v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v128 = (char *)v126 - v24;
  MEMORY[0x1E0C80A78](v25);
  v171 = (uint64_t)v126 - v26;
  MEMORY[0x1E0C80A78](v27);
  v173 = (uint64_t)v126 - v28;
  sub_1BA8676E0();
  v168 = *(_QWORD *)(v29 - 8);
  v169 = v29;
  MEMORY[0x1E0C80A78](v29);
  v170 = (char *)v126 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v159 = (char *)v126 - v32;
  sub_1BB1C31C8();
  v152 = v33;
  MEMORY[0x1E0C80A78](v33);
  v151 = (char *)v126 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v126 - v36;
  sub_1BA8678F0(0, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
  v39 = v38;
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v149 = (char *)v126 - v41;
  sub_1BA8678F0(0, &qword_1ED3A3DB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v43 = v42;
  v153 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v158 = (char *)v126 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v45);
  v148 = (char *)v126 - v46;
  sub_1BB1C3260();
  v48 = v47;
  MEMORY[0x1E0C80A78](v47);
  v50 = (char *)v126 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)v126 - v52;
  v141 = sub_1BB86C8B0();
  v142 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v130 = (char *)v126 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)v126 - v56;
  sub_1BA4A3FB4(0, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1E0C80A78](v58);
  v126[3] = (char *)v126 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60);
  v156 = (uint64_t)v126 - v61;
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)v126 - v63;
  v65 = type metadata accessor for FeedWebEmbed();
  v165 = *(_QWORD *)(v65 - 8);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v165 + 56);
  v137 = v64;
  v166 = v65;
  v161 = v66;
  ((void (*)(char *, uint64_t, uint64_t))v66)(v64, 1, 1);
  v138 = v57;
  v67 = v39;
  sub_1BB86C880();
  v150 = v40;
  v147 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v147(v50, a1, v39);
  v68 = sub_1BAA4F858((unint64_t *)&unk_1ED3A4180, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790], MEMORY[0x1E0DBC7C8]);
  v134 = a1;
  sub_1BB8730D8();
  *(_QWORD *)&v50[*(int *)(v48 + 36)] = v174;
  v69 = (uint64_t)v50;
  v70 = v68;
  sub_1BA5193C4(v69, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_1BB1C3260);
  v71 = (uint64_t)v53;
  v72 = &v53[*(int *)(v48 + 36)];
  v73 = *(_QWORD *)v72;
  sub_1BB873114();
  if (v73 != v174)
  {
    v75 = 0x7FEFFFFFFFFFFFFFLL;
    v144 = v39;
    v143 = v53;
    v146 = v70;
    v145 = v72;
    do
    {
      v78 = (void (*)(uint64_t *, _QWORD))sub_1BB873198();
      v79 = *(void (**)(char *))(v153 + 16);
      v80 = (uint64_t)v37;
      v81 = v67;
      v82 = v71;
      v83 = v148;
      v79(v148);
      v78(&v174, 0);
      v84 = v149;
      v85 = v82;
      v147(v149, v82, v81);
      sub_1BB873120();
      v67 = v81;
      (*(void (**)(char *, uint64_t))(v150 + 8))(v84, v81);
      v86 = (uint64_t)v151;
      v172 = (void (*)(char *, uint64_t, uint64_t))v79;
      ((void (*)(char *, char *, uint64_t))v79)(v151, v83, v43);
      sub_1BAA4F858((unint64_t *)&unk_1ED3A2610, &qword_1ED3A3DB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60], MEMORY[0x1E0DB7B98]);
      sub_1BB8730D8();
      v87 = *(void (**)(char *, uint64_t))(v153 + 8);
      v87(v83, v43);
      v88 = v152;
      *(_QWORD *)(v86 + *(int *)(v152 + 36)) = v174;
      sub_1BA5193C4(v86, v80, (uint64_t (*)(_QWORD))sub_1BB1C31C8);
      v89 = (uint64_t *)(v80 + *(int *)(v88 + 36));
      v90 = *v89;
      sub_1BB873114();
      if (v90 == v174)
      {
        v76 = v75;
        v71 = v85;
      }
      else
      {
        v167 = v87;
        v91 = v168;
        v92 = v169;
        v93 = v80;
        v94 = v170;
        do
        {
          v96 = (void (*)(uint64_t *, _QWORD))sub_1BB873198();
          v97 = v159;
          (*(void (**)(char *))(v91 + 16))(v159);
          v96(&v174, 0);
          v98 = v158;
          v80 = v93;
          v172(v158, v93, v43);
          sub_1BB873120();
          v167(v98, v43);
          (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v94, v97, v92);
          v99 = (uint64_t)v162;
          sub_1BB86F76C();
          v100 = v163;
          sub_1BA4C2DD8(v99, v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
          sub_1BB1C32F8();
          v102 = v100 + *(int *)(v101 + 48);
          v103 = v173;
          sub_1BA5193C4(v100, v173, type metadata accessor for FeedItem);
          sub_1BB1C3360(v102);
          sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
          v104 = v171;
          sub_1BA4C2DD8(v103, v171, type metadata accessor for FeedItem);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload - 5 >= 0xC && EnumCaseMultiPayload >= 4)
          {
            v107 = v157;
            v108 = v156;
            v109 = v166;
            if (EnumCaseMultiPayload == 4)
            {
              sub_1BA5193C4(v171, v156, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
              v106 = 0;
            }
            else
            {
              v106 = 1;
            }
          }
          else
          {
            sub_1BA4A2E80(v104, type metadata accessor for FeedItem);
            v106 = 1;
            v107 = v157;
            v108 = v156;
            v109 = v166;
          }
          v161(v108, v106, 1, v109);
          sub_1BA4A2E80(v173, type metadata accessor for FeedItem);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(v108, 1, v109) == 1)
          {
            sub_1BA502AD0(v108, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
          }
          else
          {
            v110 = v108 + *(int *)(v109 + 52);
            v111 = v160;
            sub_1BB044324(v110, v160);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v155 + 48))(v111, 1, v107) == 1)
            {
              sub_1BA502AD0(v160, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            }
            else
            {
              v112 = v160;
              v113 = v154;
              sub_1BA4C2DD8(v160, (uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                sub_1BA4A2E80((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
                sub_1BA4A2E80(v112, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
              }
              else
              {
                v114 = *v113;
                sub_1BA4A2E80(v112, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
                if (!(v114 >> 61))
                {
                  v115 = *(_QWORD *)(v114 + 16);
                  swift_retain();
                  swift_release();
                  sub_1BA4A2E80(v108, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
                  v116 = (char *)&loc_1BB1C2AA4
                       + dword_1BB1C317C[*(_QWORD *)(v115
                                                   + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_eventStatus) >> 60];
                  v139 = v115;
                  __asm { BR              X10 }
                }
                swift_release();
              }
            }
            sub_1BA4A2E80(v108, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          }
          v91 = v168;
          v92 = v169;
          v94 = v170;
          (*(void (**)(char *, uint64_t))(v168 + 8))(v170, v169);
          v95 = *v89;
          v93 = v80;
          sub_1BB873114();
        }
        while (v95 != v174);
        v76 = v75;
        v67 = v144;
        v71 = (uint64_t)v143;
      }
      v37 = (char *)v80;
      sub_1BA4A2E80(v80, (uint64_t (*)(_QWORD))sub_1BB1C31C8);
      v77 = *(_QWORD *)v145;
      sub_1BB873114();
      v75 = v76;
    }
    while (v77 != v174);
  }
  sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))sub_1BB1C3260);
  v74 = (uint64_t)v137;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v137, 1, v166))
  {
    (*(void (**)(char *, uint64_t))(v142 + 8))(v138, v141);
  }
  else
  {
    swift_bridgeObjectRetain();
    v117 = (uint64_t)v129;
    sub_1BB871668();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v138, v141);
    v118 = v133;
    v119 = v135;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v117, 1, v135) != 1)
    {
      v122 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 32);
      v123 = v127;
      v122(v127, v117, v119);
      v124 = v136;
      v122(v136, (uint64_t)v123, v119);
      v125 = type metadata accessor for FormatAutoscrollPivotPoint();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v124, 0, 1, v125);
      return sub_1BA502AD0(v74, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
    }
    sub_1BA502AD0(v117, &qword_1ED3B0568, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  }
  v120 = type metadata accessor for FormatAutoscrollPivotPoint();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v136, 1, 1, v120);
  return sub_1BA502AD0(v74, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

uint64_t type metadata accessor for FormatAutoscrollPointFactory()
{
  return objc_opt_self();
}

void sub_1BB1C31C8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3A3030)
  {
    v0 = MEMORY[0x1E0DB7B60];
    sub_1BA8678F0(255, &qword_1ED3A3DB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    sub_1BAA4F858((unint64_t *)&unk_1ED3A2610, &qword_1ED3A3DB0, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DB7B98]);
    v1 = sub_1BB873E40();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3A3030);
  }
}

void sub_1BB1C3260()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3AB260)
  {
    v0 = MEMORY[0x1E0DBC790];
    sub_1BA8678F0(255, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
    sub_1BAA4F858((unint64_t *)&unk_1ED3A4180, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))v0, MEMORY[0x1E0DBC7C8]);
    v1 = sub_1BB873E40();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3AB260);
  }
}

void sub_1BB1C32F8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A5240)
  {
    type metadata accessor for FeedItem(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A5240);
  }
}

uint64_t sub_1BB1C3360(uint64_t a1)
{
  destroy for FormatModelContext(a1);
  return a1;
}

uint64_t sub_1BB1C3394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatAutoscrollPivotPoint()
{
  uint64_t result;

  result = qword_1ED3ADAE8;
  if (!qword_1ED3ADAE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB1C3424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86CBE0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1BB1C3460(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB86CBE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1BB1C3494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BB1C34D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BB1C351C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BB1C3560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BB1C35A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1C35B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86CBE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BB1C35EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1C35F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86CBE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BB1C3638()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86CBE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestCaseMultiResultSection()
{
  return &type metadata for DebugFormatTestCaseMultiResultSection;
}

uint64_t FormatFeedGroup.revision.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*FormatFeedGroup.revision.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatFeedGroup.kindIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for FormatFeedGroup() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FormatFeedGroup.kindIdentifier.modify())()
{
  type metadata accessor for FormatFeedGroup();
  return nullsub_1;
}

uint64_t FormatFeedGroup.paidVisibility.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FormatFeedGroup();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FormatFeedGroup.paidVisibilityInForYou.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FormatFeedGroup();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

double FormatFeedGroup.rankMultiplier.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 36));
}

double FormatFeedGroup.baseScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 40));
}

double FormatFeedGroup.scoreThreshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 44));
}

uint64_t FormatFeedGroup.softMaxPaidArticlesForFreeUsersSmall.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 48));
}

uint64_t FormatFeedGroup.softMaxPaidArticlesForFreeUsersLarge.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 52));
}

uint64_t FormatFeedGroup.softMinPaidArticlesForFreeUsersSmall.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 56));
}

uint64_t FormatFeedGroup.softMinPaidArticlesForFreeUsersLarge.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 60));
}

uint64_t FormatFeedGroup.repooling.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FormatFeedGroup();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t FormatFeedGroup.personalizingScoreProfiles.getter()
{
  type metadata accessor for FormatFeedGroup();
  return swift_bridgeObjectRetain();
}

uint64_t FormatFeedGroup.debugCandidates.getter()
{
  type metadata accessor for FormatFeedGroup();
  return swift_retain();
}

uint64_t FormatFeedGroup.init(result:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, double a6@<X5>, char a7@<W6>, double a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, char *a20,_QWORD *a21)
{
  _BYTE *v25;
  char v26;
  char v27;
  int *v28;
  _QWORD *v29;
  uint64_t v30;
  double v31;
  double v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  char v66;
  char v67;
  void *v68;
  uint64_t *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t result;
  _BYTE *v76;
  char v79;
  int *v81;
  unint64_t v82;
  unint64_t v83;
  id v84;
  unint64_t v85;

  v25 = a9;
  v26 = *a4;
  v27 = *a5;
  v79 = *a20;
  *a9 = 0;
  v28 = (int *)type metadata accessor for FormatFeedGroup();
  v29 = &v25[v28[6]];
  v30 = a1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent;
  sub_1BA4C2DD8(v30, (uint64_t)&v25[v28[5]], (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  *v29 = a2;
  v29[1] = a3;
  v25[v28[7]] = v26;
  v25[v28[8]] = v27;
  *(double *)&v25[v28[9]] = a10;
  v31 = a6;
  if ((a7 & 1) != 0)
    v31 = 0.0;
  *(double *)&v25[v28[10]] = v31;
  v32 = a8;
  if ((a11 & 1) != 0)
    v32 = 0.0;
  *(double *)&v25[v28[11]] = v32;
  v33 = &v25[v28[12]];
  *(_QWORD *)v33 = a12;
  v33[8] = a13 & 1;
  v34 = &v25[v28[13]];
  *(_QWORD *)v34 = a14;
  v34[8] = a15 & 1;
  v35 = &v25[v28[14]];
  *(_QWORD *)v35 = a16;
  v35[8] = a17 & 1;
  v36 = &v25[v28[15]];
  *(_QWORD *)v36 = a18;
  v36[8] = a19 & 1;
  v81 = v28;
  v25[v28[16]] = v79;
  v37 = *(_QWORD *)(v30 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  v38 = MEMORY[0x1E0DEE9D8];
  v85 = MEMORY[0x1E0DEE9D8];
  v39 = *(_QWORD *)(v37 + 16);
  if (v39)
  {
    swift_bridgeObjectRetain();
    v40 = v37 + 96;
    do
    {
      v40 += 80;
      v41 = FormatContentSubgroup.ResolvedContainer.headlines.getter();
      sub_1BA66293C(v41);
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
    v38 = v85;
  }
  isUniquelyReferenced_nonNull_native = (uint64_t)v81;
  v82 = v38;
  v76 = v25;
  if (v38 >> 62)
    goto LABEL_48;
  v43 = v38 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  sub_1BB874428();
  sub_1BA4EFE00(0, &qword_1ED3C0458);
  if (swift_dynamicCastMetatype() || (v44 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
  {
    *(_QWORD *)&v25[v81[17]] = v38;
  }
  else
  {
    v45 = v43 + 32;
    while (swift_dynamicCastObjCProtocolConditional())
    {
      v45 += 8;
      if (!--v44)
      {
        v46 = v38;
        goto LABEL_18;
      }
    }
    v46 = v43 | 1;
LABEL_18:
    *(_QWORD *)&v25[v81[17]] = v46;
  }
  v47 = (_QWORD *)sub_1BA662948(MEMORY[0x1E0DEE9D8]);
  isUniquelyReferenced_nonNull_native = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!isUniquelyReferenced_nonNull_native)
    goto LABEL_49;
  do
  {
    v83 = v38 & 0xC000000000000001;
    v48 = 4;
    while (1)
    {
      v50 = v48 - 4;
      if (!v83)
        break;
      v25 = (_BYTE *)MEMORY[0x1BCCE4630](v48 - 4, v38);
      v51 = (_BYTE *)(v48 - 3);
      if (__OFADD__(v50, 1))
        goto LABEL_45;
LABEL_29:
      v52 = objc_msgSend(v25, sel_identifier);
      v53 = sub_1BB8729A0();
      v55 = v54;

      v56 = objc_msgSend(v25, sel_scoreProfile);
      if (v56)
      {
        v84 = v56;
        v25 = v51;
        v57 = isUniquelyReferenced_nonNull_native;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v38 = sub_1BA6E35A8(v53, v55);
        v59 = v47[2];
        v60 = (v58 & 1) == 0;
        v61 = v59 + v60;
        if (__OFADD__(v59, v60))
          goto LABEL_46;
        v62 = v58;
        if (v47[3] >= v61)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BB4C7130();
        }
        else
        {
          sub_1BB4B5D60(v61, isUniquelyReferenced_nonNull_native);
          v63 = sub_1BA6E35A8(v53, v55);
          if ((v62 & 1) != (v64 & 1))
          {
            sub_1BB874560();
            __break(1u);
            JUMPOUT(0x1BB1C3F64);
          }
          v38 = v63;
        }
        isUniquelyReferenced_nonNull_native = v57;
        v51 = v25;
        if ((v62 & 1) != 0)
        {
          v49 = v47[7];

          *(_QWORD *)(v49 + 8 * v38) = v84;
        }
        else
        {
          v47[(v38 >> 6) + 8] |= 1 << v38;
          v69 = (uint64_t *)(v47[6] + 16 * v38);
          *v69 = v53;
          v69[1] = v55;
          *(_QWORD *)(v47[7] + 8 * v38) = v84;
          v70 = v47[2];
          v71 = __OFADD__(v70, 1);
          v72 = v70 + 1;
          if (v71)
            goto LABEL_47;
          v47[2] = v72;
          swift_bridgeObjectRetain();
        }
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = v82;
      }
      else
      {
        swift_bridgeObjectRetain();
        v65 = sub_1BA6E35A8(v53, v55);
        v67 = v66;
        swift_bridgeObjectRelease();
        if ((v67 & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1BB4C7130();
          swift_bridgeObjectRelease();
          v68 = *(void **)(v47[7] + 8 * v65);
          sub_1BA81C280(v65, v47);
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      ++v48;
      if (v51 == (_BYTE *)isUniquelyReferenced_nonNull_native)
        goto LABEL_49;
    }
    v25 = *(_BYTE **)(v38 + 8 * v48);
    swift_unknownObjectRetain();
    v51 = (_BYTE *)(v48 - 3);
    if (!__OFADD__(v50, 1))
      goto LABEL_29;
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    sub_1BA4EFE00(0, &qword_1ED3C0458);
    swift_bridgeObjectRetain();
    v73 = sub_1BB873EB8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v25[*(int *)(isUniquelyReferenced_nonNull_native + 68)] = v73;
    v47 = (_QWORD *)sub_1BA662948(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  while (isUniquelyReferenced_nonNull_native);
LABEL_49:
  v74 = a21;
  swift_bridgeObjectRelease_n();
  *(_QWORD *)&v76[v81[18]] = v47;
  if (!a21)
    v74 = sub_1BB6B6A38();
  result = swift_release();
  *(_QWORD *)&v76[v81[19]] = v74;
  return result;
}

uint64_t FormatFeedGroup.init(result:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, double a4@<X3>, char a5@<W4>, double a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, char *a18, _QWORD *a19)
{
  char v19;
  char v20;
  char v22;
  char v23;
  char v24;

  v19 = *a3;
  v20 = *a18;
  v24 = *a2;
  v23 = v19;
  v22 = v20;
  return FormatFeedGroup.init(result:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)(a1, 0, 0, &v24, &v23, a4, a5 & 1, a6, a9, a10, a7 & 1, a8, a11 & 1, a12, a13 & 1, a14, a15 & 1, a16, a17 & 1,
           &v22,
           a19);
}

uint64_t FormatFeedGroup.init(content:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, _BYTE *a3@<X2>, double a4@<X3>, char a5@<W4>, double a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, char a11, uint64_t a12, char a13, unint64_t a14, char a15, uint64_t a16, char a17, char *a18, uint64_t a19)
{
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t (*v27)(_QWORD);
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  double v35;
  uint64_t v36;
  double v37;
  char v38;
  char v39;
  char v40;

  v36 = a8;
  v37 = a6;
  v34 = a9;
  v35 = a4;
  v33 = a12;
  v32 = a5 & 1;
  v31 = a7 & 1;
  v29 = a13 & 1;
  v30 = a11 & 1;
  v23 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  LOBYTE(a3) = *a3;
  v26 = *a18;
  sub_1BA4C2DD8(a1, (uint64_t)v25, v27);
  v40 = (char)a2;
  v39 = (char)a3;
  v38 = v26;
  FormatFeedGroup.init(content:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)((uint64_t)v25, 0, 0, &v40, &v39, v35, v32, v37, v34, a10, v31, v36, v30, v33, v29, a14, a15 & 1, a16, a17 & 1,
    &v38,
    a19);
  return sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
}

uint64_t FormatFeedGroup.copy(content:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  char v40;
  char v41;
  char v42;

  v39 = a2;
  v4 = (int *)type metadata accessor for FormatFeedGroup();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED39F908, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v10 = type metadata accessor for FormatContent.Resolved();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA57B488(a1, (uint64_t)v9, &qword_1ED39F908, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  v38 = v13;
  if (v14 == 1)
  {
    sub_1BA4C2DD8((uint64_t)&v6[v4[5]], (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
    sub_1BA502AD0((uint64_t)v9, &qword_1ED39F908, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFeedGroup);
    sub_1BA5193C4((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  }
  v15 = (uint64_t *)(v2 + v4[6]);
  v16 = *v15;
  v17 = v15[1];
  v42 = *(_BYTE *)(v2 + v4[7]);
  LOBYTE(v15) = *(_BYTE *)(v2 + v4[8]);
  v18 = *(double *)(v2 + v4[9]);
  v19 = v4[11];
  v35 = *(double *)(v2 + v4[10]);
  v36 = *(double *)(v2 + v19);
  v37 = v16;
  v41 = (char)v15;
  v20 = v4[13];
  v21 = v2 + v4[12];
  v34 = *(_QWORD *)v21;
  v22 = *(_BYTE *)(v21 + 8);
  v23 = *(_QWORD *)(v2 + v20);
  v24 = *(_BYTE *)(v2 + v20 + 8);
  v25 = v4[15];
  v26 = v2 + v4[14];
  v27 = *(_QWORD *)v26;
  v28 = *(_BYTE *)(v26 + 8);
  v29 = *(_QWORD *)(v2 + v25);
  v30 = *(_BYTE *)(v2 + v25 + 8);
  v40 = *(_BYTE *)(v2 + v4[16]);
  v31 = *(_QWORD *)(v2 + v4[19]);
  swift_bridgeObjectRetain();
  swift_retain();
  return FormatFeedGroup.init(content:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)((uint64_t)v38, v37, v17, &v42, &v41, v35, 0, v36, v39, v18, 0, v34, v22, v23, v24, v27, v28, v29, v30,
           &v40,
           v31);
}

uint64_t sub_1BB1C447C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1C4488()
{
  return swift_bridgeObjectRetain();
}

double sub_1BB1C4494(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 36));
}

double sub_1BB1C44A0(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 40));
}

double sub_1BB1C44AC(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_1BB1C44BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB1C44F0()
{
  return 0x74616D726F46;
}

uint64_t FormatFeedGroup.debugName.getter()
{
  return 0x74616D726F46;
}

uint64_t FormatFeedGroup.debugTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  BOOL v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  BOOL v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t i;
  uint64_t v60;
  _QWORD *v61;
  BOOL v62;
  unint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v1 = type metadata accessor for FormatOption();
  v90 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (uint64_t *)((char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v67 - v5);
  v7 = v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 20);
  v8 = type metadata accessor for FormatContent.Resolved();
  v9 = v7;
  v10 = v8;
  v11 = *(_QWORD *)(v7 + *(int *)(v8 + 32));
  v71 = *(_QWORD *)(v11 + 16);
  if (!v71)
    goto LABEL_61;
  v68 = v10;
  v69 = v7;
  v73 = v11 + 32;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v86 = v6;
  v72 = result;
  while (1)
  {
    if (v13 >= *(_QWORD *)(result + 16))
      goto LABEL_71;
    v70 = v13;
    v14 = (uint64_t *)(v73 + 80 * v13);
    v15 = v14[1];
    v82 = *v14;
    v16 = v14[3];
    v84 = v14[2];
    v85 = v16;
    v18 = v14[4];
    v17 = v14[5];
    v20 = v14[6];
    v19 = v14[7];
    v21 = v14[8];
    v22 = v14[9];
    v89 = v18 & 0x7FFFFFFFFFFFFFFFLL;
    v83 = v15;
    sub_1BA6D78DC();
    v78 = v18;
    sub_1BA6D78DC();
    v76 = v22;
    swift_bridgeObjectRelease();
    v77 = v21;
    swift_bridgeObjectRelease();
    v81 = v19;
    swift_bridgeObjectRelease();
    v79 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(v17 + 16);
    v87 = v17;
    if (v23)
    {
      v24 = 0;
      v25 = v17 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
      while (1)
      {
        if (v24 >= *(_QWORD *)(v17 + 16))
          goto LABEL_69;
        sub_1BA4C2DD8(v25 + *(_QWORD *)(v90 + 72) * v24, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        if (qword_1EF2A70B8 != -1)
          swift_once();
        v26 = off_1EF2BD380;
        if (!*((_QWORD *)off_1EF2BD380 + 2))
          goto LABEL_7;
        v27 = *v6;
        v28 = v6[1];
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v29 = sub_1BB874608();
        v30 = -1 << v26[32];
        v31 = v29 & ~v30;
        v32 = v26 + 56;
        if (((*(_QWORD *)&v26[((v31 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v31) & 1) == 0)
          goto LABEL_6;
        v33 = *((_QWORD *)v26 + 6);
        v34 = (_QWORD *)(v33 + 16 * v31);
        v35 = *v34 == v27 && v34[1] == v28;
        if (!v35 && (sub_1BB874398() & 1) == 0)
          break;
LABEL_19:
        swift_bridgeObjectRelease();
        v6 = v86;
        v36 = v86[2];
        v37 = v36 & 0xFFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        if (v36 >> 60 == 5)
        {
          sub_1BA7F4208();
          swift_bridgeObjectRelease();
LABEL_65:
          swift_bridgeObjectRelease();
          v66 = *(_QWORD *)(v37 + 16);
          swift_bridgeObjectRetain();
          swift_release();
          return v66;
        }
        result = swift_release();
LABEL_8:
        v17 = v87;
        if (++v24 == v23)
          goto LABEL_29;
      }
      v38 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v38;
        if (((*(_QWORD *)&v32[(v31 >> 3) & 0xFFFFFFFFFFFFF8] >> v31) & 1) == 0)
          break;
        v39 = (_QWORD *)(v33 + 16 * v31);
        v40 = *v39 == v27 && v39[1] == v28;
        if (v40 || (sub_1BB874398() & 1) != 0)
          goto LABEL_19;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      v6 = v86;
LABEL_7:
      result = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      goto LABEL_8;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    v41 = v81;
    sub_1BA6D78DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(v41 + 16);
    if (v42)
      break;
LABEL_59:
    swift_bridgeObjectRelease();
    v63 = v70 + 1;
    sub_1BA7F4208();
    v13 = v63;
    result = v72;
    if (v63 == v71)
    {
      swift_bridgeObjectRelease();
      v9 = v69;
      v10 = v68;
LABEL_61:
      v64 = *(void **)(v9 + *(int *)(v10 + 44));
      if (!v64)
        return 0;
      v65 = objc_msgSend(v64, sel_name);
      v66 = sub_1BB8729A0();

      return v66;
    }
  }
  v43 = 0;
  v44 = v41 + 32;
  v75 = *(_QWORD *)(v41 + 16);
  v74 = v41 + 32;
  while (1)
  {
    if (v43 >= *(_QWORD *)(v41 + 16))
      goto LABEL_70;
    v45 = *(_QWORD *)(v44 + (v43 << 6) + 16);
    v89 = *(_QWORD *)(v45 + 16);
    if (v89)
      break;
LABEL_32:
    ++v43;
    v6 = v86;
    if (v43 == v42)
      goto LABEL_59;
  }
  v80 = v43;
  v88 = v45 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
  result = swift_bridgeObjectRetain();
  v46 = 0;
  while (2)
  {
    if (v46 < *(_QWORD *)(v45 + 16))
    {
      sub_1BA4C2DD8(v88 + *(_QWORD *)(v90 + 72) * v46, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      if (qword_1EF2A70B8 != -1)
        swift_once();
      v47 = off_1EF2BD380;
      if (*((_QWORD *)off_1EF2BD380 + 2))
      {
        v49 = *v3;
        v48 = v3[1];
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v50 = sub_1BB874608();
        v51 = -1 << v47[32];
        v52 = v50 & ~v51;
        v53 = v47 + 56;
        if (((*(_QWORD *)&v47[((v52 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v52) & 1) != 0)
        {
          v54 = *((_QWORD *)v47 + 6);
          v55 = (_QWORD *)(v54 + 16 * v52);
          v56 = *v55 == v49 && v55[1] == v48;
          if (v56 || (sub_1BB874398() & 1) != 0)
          {
LABEL_49:
            swift_bridgeObjectRelease();
            v57 = v3[2];
            v37 = v57 & 0xFFFFFFFFFFFFFFFLL;
            swift_retain();
            sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            if (v57 >> 60 == 5)
            {
              sub_1BA7F4208();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_65;
            }
            result = swift_release();
            goto LABEL_38;
          }
          v58 = ~v51;
          for (i = v52 + 1; ; i = v60 + 1)
          {
            v60 = i & v58;
            if (((*(_QWORD *)&v53[((i & v58) >> 3) & 0xFFFFFFFFFFFFF8] >> (i & v58)) & 1) == 0)
              break;
            v61 = (_QWORD *)(v54 + 16 * v60);
            v62 = *v61 == v49 && v61[1] == v48;
            if (v62 || (sub_1BB874398() & 1) != 0)
              goto LABEL_49;
          }
        }
        swift_bridgeObjectRelease();
      }
      result = sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
LABEL_38:
      if (++v46 == v89)
      {
        result = swift_bridgeObjectRelease();
        v43 = v80;
        v41 = v81;
        v42 = v75;
        v44 = v74;
        goto LABEL_32;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1BB1C4D64()
{
  return swift_retain();
}

uint64_t sub_1BB1C4D70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1C4DA4 + 4 * aJ_0[a1]))(0x746E65746E6F63, 0xE700000000000000);
}

uint64_t sub_1BB1C4DA4()
{
  return 0x6E656449646E696BLL;
}

uint64_t sub_1BB1C4DC8()
{
  return 0x6973695664696170;
}

unint64_t sub_1BB1C4DEC()
{
  return 0xD000000000000016;
}

uint64_t sub_1BB1C4E0C()
{
  return 0x746C754D6B6E6172;
}

uint64_t sub_1BB1C4E30()
{
  return 0x726F635365736162;
}

unint64_t sub_1BB1C4E4C()
{
  return 0xD000000000000024;
}

uint64_t sub_1BB1C4E8C()
{
  return 0x6E696C6F6F706572;
}

uint64_t sub_1BB1C4EAC()
{
  return 0x72685465726F6373;
}

uint64_t sub_1BB1C4ED0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB1C4D70(*a1);
  v5 = v4;
  if (v3 == sub_1BB1C4D70(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB1C4F58()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB1C4D70(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1C4FB8()
{
  unsigned __int8 *v0;

  sub_1BB1C4D70(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1C4FF8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB1C4D70(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1C5054@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB1C7484();
  *a1 = result;
  return result;
}

uint64_t sub_1BB1C5080@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB1C4D70(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB1C50A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB1C7484();
  *a1 = result;
  return result;
}

uint64_t sub_1BB1C50CC()
{
  sub_1BA66188C();
  return sub_1BB874710();
}

uint64_t sub_1BB1C50F4()
{
  sub_1BA66188C();
  return sub_1BB87471C();
}

uint64_t sub_1BB1C511C()
{
  void *v0;
  uint64_t result;

  v0 = (void *)sub_1BA6E43EC((uint64_t)&unk_1E7268658);
  result = swift_arrayDestroy();
  off_1EF2BD380 = v0;
  return result;
}

uint64_t sub_1BB1C5164(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BA4A2870(&qword_1EF2BD388, (uint64_t (*)(uint64_t))type metadata accessor for FormatFeedGroup, (uint64_t)&protocol conformance descriptor for FormatFeedGroup);
  result = sub_1BA4A2870((unint64_t *)&unk_1EF2BD390, (uint64_t (*)(uint64_t))type metadata accessor for FormatFeedGroup, (uint64_t)&protocol conformance descriptor for FormatFeedGroup);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

_QWORD *assignWithCopy for FormatFeedGroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t (*v50)(void);
  int v51;
  uint64_t v52;
  size_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(_QWORD *, uint64_t, uint64_t);
  int v92;
  uint64_t v93;
  size_t v94;
  void *v95;
  uint64_t v96;
  int EnumCaseMultiPayload;
  _QWORD *v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  int v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(char *, uint64_t, uint64_t);
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  id v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(char *, uint64_t, uint64_t);
  int v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v147;
  void (*v148)(char *, char *, uint64_t);
  _QWORD *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v152;
  unsigned int (*v153)(_QWORD *, uint64_t, uint64_t);
  char *v154;
  void (*v155)(char *, char *, uint64_t);
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int *v164;
  int *v165;
  _QWORD *v166;
  _QWORD *v167;
  _QWORD *v168;
  _QWORD *v169;
  _QWORD *__src;
  _QWORD *__srca;
  int *v172;
  int *v173;
  int *v174;
  _QWORD *v175;

  v3 = a3;
  v4 = a2;
  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for FormatContent.Resolved();
  v10 = v9[5];
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)((char *)v7 + v9[6]) = *(_QWORD *)&v8[v9[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[7]) = *(_QWORD *)&v8[v9[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[8]) = *(_QWORD *)&v8[v9[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[9]) = *(_QWORD *)&v8[v9[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[10]) = *(_QWORD *)&v8[v9[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v9[11]) = *(_QWORD *)&v8[v9[11]];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v14 = v9[12];
  v15 = *(void **)((char *)v7 + v14);
  v16 = *(void **)&v8[v14];
  *(_QWORD *)((char *)v7 + v14) = v16;
  v17 = v16;

  *(_QWORD *)((char *)v7 + v9[13]) = *(_QWORD *)&v8[v9[13]];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v174 = v9;
  v18 = v9[14];
  v19 = (char *)v7 + v18;
  v20 = &v8[v18];
  v21 = type metadata accessor for FormatWebEmbed.Resolved();
  __src = *(_QWORD **)(v21 - 8);
  v22 = (uint64_t (*)(char *, uint64_t, uint64_t))__src[6];
  v23 = v22(v19, 1, v21);
  v175 = v20;
  v24 = v22(v20, 1, v21);
  if (!v23)
  {
    if (v24)
    {
      sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1ED3D54C0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v26 = v174;
      goto LABEL_49;
    }
    v165 = v3;
    v167 = v4;
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v173 = (int *)v21;
    v39 = *(int *)(v21 + 20);
    v169 = v19;
    v40 = &v19[v39];
    v41 = &v20[v39];
    *v40 = *(_QWORD *)&v20[v39];
    v40[1] = *(_QWORD *)&v20[v39 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v42 = (int *)type metadata accessor for FormatWebEmbed();
    v43 = v42[5];
    v44 = (char *)v40 + v43;
    v45 = &v41[v43];
    v46 = sub_1BB86C67C();
    v47 = *(_QWORD *)(v46 - 8);
    v155 = *(void (**)(char *, char *, uint64_t))(v47 + 24);
    v155(v44, v45, v46);
    v48 = v42[6];
    v49 = &v41[v48];
    v159 = v47;
    v160 = (char *)v40 + v48;
    v50 = *(uint64_t (**)(void))(v47 + 48);
    LODWORD(v45) = v50();
    v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v50)(v49, 1, v46);
    v152 = v46;
    if ((_DWORD)v45)
    {
      if (v51)
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v53 = *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64);
        v54 = v160;
LABEL_19:
        memcpy(v54, v49, v53);
        goto LABEL_28;
      }
      (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v160, v49, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v160, 0, 1, v46);
    }
    else
    {
      if (v51)
      {
        (*(void (**)(char *, uint64_t))(v159 + 8))(v160, v46);
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v53 = *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64);
        v54 = v160;
        goto LABEL_19;
      }
      v155(v160, v49, v46);
    }
LABEL_28:
    *(_QWORD *)((char *)v40 + v42[7]) = *(_QWORD *)&v41[v42[7]];
    swift_retain();
    swift_release();
    v80 = v42[8];
    v81 = (_QWORD *)((char *)v40 + v80);
    v82 = &v41[v80];
    *v81 = *(_QWORD *)v82;
    v81[1] = *((_QWORD *)v82 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v83 = v42[9];
    v84 = (_QWORD *)((char *)v40 + v83);
    v85 = &v41[v83];
    *v84 = *(_QWORD *)v85;
    v84[1] = *((_QWORD *)v85 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v40 + v42[10]) = *(_QWORD *)&v41[v42[10]];
    *(_QWORD *)((char *)v40 + v42[11]) = *(_QWORD *)&v41[v42[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v40 + v42[12]) = *(_QWORD *)&v41[v42[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v169 + v173[6]) = *(_QWORD *)((char *)v175 + v173[6]);
    swift_retain();
    swift_release();
    *(_QWORD *)((char *)v169 + v173[7]) = *(_QWORD *)((char *)v175 + v173[7]);
    swift_retain();
    swift_release();
    v86 = v173[8];
    v87 = (_QWORD *)((char *)v169 + v86);
    v88 = (_QWORD *)((char *)v175 + v86);
    v89 = type metadata accessor for WebEmbedDataVisualization();
    v90 = *(_QWORD *)(v89 - 8);
    v91 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v90 + 48);
    __srca = v87;
    LODWORD(v87) = v91(v87, 1, v89);
    v92 = v91(v88, 1, v89);
    if ((_DWORD)v87)
    {
      if (v92)
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        v94 = *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64);
        v95 = __srca;
LABEL_33:
        memcpy(v95, v88, v94);
        v26 = v174;
        goto LABEL_42;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v26 = v174;
      v98 = __srca;
      *__srca = *v88;
      if (EnumCaseMultiPayload == 1)
      {
        __srca[1] = v88[1];
        v162 = type metadata accessor for GenericDataVisualization();
        v99 = *(int *)(v162 + 20);
        v156 = (char *)__srca + v99;
        __dsta = (char *)v88 + v99;
        v100 = *(void (**)(char *, char *, uint64_t))(v159 + 16);
        swift_bridgeObjectRetain();
        v100(v156, __dsta, v152);
        v98 = __srca;
        *(_QWORD *)((char *)__srca + *(int *)(v162 + 24)) = *(_QWORD *)((char *)v88 + *(int *)(v162 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v98, 0, 1, v89);
    }
    else
    {
      if (v92)
      {
        sub_1BA4A2E80((uint64_t)__srca, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        v94 = *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64);
        v95 = __srca;
        goto LABEL_33;
      }
      v26 = v174;
      if (a1 != v167)
      {
        sub_1BA4A2E80((uint64_t)__srca, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v101 = swift_getEnumCaseMultiPayload();
        *__srca = *v88;
        if (v101 == 1)
        {
          __srca[1] = v88[1];
          v163 = type metadata accessor for GenericDataVisualization();
          v102 = *(int *)(v163 + 20);
          v157 = (char *)__srca + v102;
          __dstb = (char *)v88 + v102;
          v103 = *(void (**)(char *, char *, uint64_t))(v159 + 16);
          swift_bridgeObjectRetain();
          v103(v157, __dstb, v152);
          *(_QWORD *)((char *)__srca + *(int *)(v163 + 24)) = *(_QWORD *)((char *)v88 + *(int *)(v163 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
      }
    }
LABEL_42:
    v104 = v173[9];
    v105 = (char *)v169 + v104;
    v106 = (char *)v175 + v104;
    sub_1BA6C5A68();
    v108 = v107;
    v109 = *(_QWORD *)(v107 - 8);
    v110 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 48);
    v111 = v110(v105, 1, v107);
    v112 = v110(v106, 1, v108);
    if (v111)
    {
      if (!v112)
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v105, v106, v108);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v105, 0, 1, v108);
LABEL_48:
        v3 = v165;
        v4 = v167;
        goto LABEL_49;
      }
    }
    else
    {
      if (!v112)
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 24))(v105, v106, v108);
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v109 + 8))(v105, v108);
    }
    sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    goto LABEL_48;
  }
  if (v24)
    goto LABEL_6;
  v164 = v3;
  v166 = v4;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  v172 = (int *)v21;
  v27 = *(int *)(v21 + 20);
  v168 = v19;
  v28 = &v19[v27];
  v29 = &v20[v27];
  *v28 = *(_QWORD *)&v20[v27];
  v28[1] = *(_QWORD *)&v20[v27 + 8];
  v30 = (int *)type metadata accessor for FormatWebEmbed();
  v31 = v30[5];
  v154 = &v29[v31];
  v158 = (char *)v28 + v31;
  v32 = sub_1BB86C67C();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v148 = v34;
  v34(v158, v154, v32);
  v35 = v30[6];
  v36 = (char *)v28 + v35;
  v37 = &v29[v35];
  v147 = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&v29[v35], 1, v32))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v148(v36, v37, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
  }
  *(_QWORD *)((char *)v28 + v30[7]) = *(_QWORD *)&v29[v30[7]];
  v55 = v30[8];
  v56 = (_QWORD *)((char *)v28 + v55);
  v57 = &v29[v55];
  *v56 = *(_QWORD *)v57;
  v56[1] = *((_QWORD *)v57 + 1);
  v58 = v30[9];
  v59 = (_QWORD *)((char *)v28 + v58);
  v60 = &v29[v58];
  *v59 = *(_QWORD *)v60;
  v59[1] = *((_QWORD *)v60 + 1);
  *(_QWORD *)((char *)v28 + v30[10]) = *(_QWORD *)&v29[v30[10]];
  *(_QWORD *)((char *)v28 + v30[11]) = *(_QWORD *)&v29[v30[11]];
  *(_QWORD *)((char *)v28 + v30[12]) = *(_QWORD *)&v29[v30[12]];
  *(_QWORD *)((char *)v168 + v172[6]) = *(_QWORD *)((char *)v175 + v172[6]);
  *(_QWORD *)((char *)v168 + v172[7]) = *(_QWORD *)((char *)v175 + v172[7]);
  v61 = v172[8];
  __dst = (_QWORD *)((char *)v168 + v61);
  v62 = (_QWORD *)((char *)v175 + v61);
  v63 = type metadata accessor for WebEmbedDataVisualization();
  v64 = *(_QWORD *)(v63 - 8);
  v153 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v64 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v153(v62, 1, v63))
  {
    sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    v4 = v166;
    v66 = v168;
    v26 = v174;
  }
  else
  {
    v161 = v64;
    v67 = swift_getEnumCaseMultiPayload();
    *__dst = *v62;
    if (v67 == 1)
    {
      __dst[1] = v62[1];
      v68 = type metadata accessor for GenericDataVisualization();
      v69 = *(int *)(v68 + 20);
      v70 = (char *)__dst + v69;
      v71 = (char *)v62 + v69;
      swift_bridgeObjectRetain();
      v148(v70, v71, v147);
      *(_QWORD *)((char *)__dst + *(int *)(v68 + 24)) = *(_QWORD *)((char *)v62 + *(int *)(v68 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    v4 = v166;
    v26 = v174;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v161 + 56))(__dst, 0, 1, v63);
    v66 = v168;
  }
  v73 = v172[9];
  v74 = (char *)v66 + v73;
  v75 = (char *)v175 + v73;
  sub_1BA6C5A68();
  v77 = v76;
  v78 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v75, 1, v76))
  {
    sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v74, v75, v77);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v74, 0, 1, v77);
  }
  v3 = v164;
  ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__src[7])(v66, 0, 1, v172);
LABEL_49:
  v114 = v26[15];
  v115 = *(void **)((char *)v7 + v114);
  v116 = *(void **)&v8[v114];
  *(_QWORD *)((char *)v7 + v114) = v116;
  v117 = v116;

  *((_BYTE *)v7 + v26[16]) = v8[v26[16]];
  *(_QWORD *)((char *)v7 + v26[17]) = *(_QWORD *)&v8[v26[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v118 = v26[18];
  v119 = (char *)v7 + v118;
  v120 = &v8[v118];
  v121 = sub_1BB871E24();
  v122 = *(_QWORD *)(v121 - 8);
  v123 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v122 + 48);
  v124 = v123(v119, 1, v121);
  v125 = v123(v120, 1, v121);
  if (!v124)
  {
    if (!v125)
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 24))(v119, v120, v121);
      goto LABEL_55;
    }
    (*(void (**)(char *, uint64_t))(v122 + 8))(v119, v121);
    goto LABEL_54;
  }
  if (v125)
  {
LABEL_54:
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v119, v120, v121);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
LABEL_55:
  v127 = v3[6];
  v128 = (_QWORD *)((char *)a1 + v127);
  v129 = (_QWORD *)((char *)v4 + v127);
  *v128 = *v129;
  v128[1] = v129[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v3[7]) = *((_BYTE *)v4 + v3[7]);
  *((_BYTE *)a1 + v3[8]) = *((_BYTE *)v4 + v3[8]);
  *(_QWORD *)((char *)a1 + v3[9]) = *(_QWORD *)((char *)v4 + v3[9]);
  *(_QWORD *)((char *)a1 + v3[10]) = *(_QWORD *)((char *)v4 + v3[10]);
  *(_QWORD *)((char *)a1 + v3[11]) = *(_QWORD *)((char *)v4 + v3[11]);
  v130 = v3[12];
  v131 = (char *)a1 + v130;
  v132 = (char *)v4 + v130;
  v133 = *(_QWORD *)v132;
  v131[8] = v132[8];
  *(_QWORD *)v131 = v133;
  v134 = v3[13];
  v135 = (char *)a1 + v134;
  v136 = (char *)v4 + v134;
  v137 = *(_QWORD *)v136;
  v135[8] = v136[8];
  *(_QWORD *)v135 = v137;
  v138 = v3[14];
  v139 = (char *)a1 + v138;
  v140 = (char *)v4 + v138;
  v141 = *(_QWORD *)v140;
  v139[8] = v140[8];
  *(_QWORD *)v139 = v141;
  v142 = v3[15];
  v143 = (char *)a1 + v142;
  v144 = (char *)v4 + v142;
  v145 = *(_QWORD *)v144;
  v143[8] = v144[8];
  *(_QWORD *)v143 = v145;
  *((_BYTE *)a1 + v3[16]) = *((_BYTE *)v4 + v3[16]);
  *(_QWORD *)((char *)a1 + v3[17]) = *(_QWORD *)((char *)v4 + v3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v3[18]) = *(_QWORD *)((char *)v4 + v3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v3[19]) = *(_QWORD *)((char *)v4 + v3[19]);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for FormatFeedGroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  const void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  int *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *__dstb;
  char *__dst;
  _OWORD *__dsta;
  _OWORD *v81;
  _OWORD *v82;
  int *v83;

  v3 = a3;
  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for FormatContent.Resolved();
  v10 = v9[5];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
  *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  *(_QWORD *)&v7[v9[9]] = *(_QWORD *)&v8[v9[9]];
  *(_QWORD *)&v7[v9[10]] = *(_QWORD *)&v8[v9[10]];
  *(_QWORD *)&v7[v9[11]] = *(_QWORD *)&v8[v9[11]];
  *(_QWORD *)&v7[v9[12]] = *(_QWORD *)&v8[v9[12]];
  *(_QWORD *)&v7[v9[13]] = *(_QWORD *)&v8[v9[13]];
  v14 = v9[14];
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = type metadata accessor for FormatWebEmbed.Resolved();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1BA4A3FB4(0, &qword_1ED3D54C0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v74 = v3;
    v76 = v18;
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v82 = v15;
    v83 = (int *)v17;
    v20 = *(int *)(v17 + 20);
    v21 = &v15[v20];
    v81 = v16;
    v22 = &v16[v20];
    *(_OWORD *)&v15[v20] = *(_OWORD *)&v16[v20];
    v23 = type metadata accessor for FormatWebEmbed();
    v24 = *(int *)(v23 + 20);
    v77 = &v22[v24];
    __dstb = &v21[v24];
    v25 = sub_1BB86C67C();
    v26 = *(_QWORD *)(v25 - 8);
    v73 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v73(__dstb, v77, v25);
    v75 = (int *)v23;
    v27 = *(int *)(v23 + 24);
    __dst = &v21[v27];
    v28 = &v22[v27];
    v72 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(&v22[v27], 1, v25))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v73(__dst, v28, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v3 = v74;
    *(_QWORD *)&v21[v75[7]] = *(_QWORD *)&v22[v75[7]];
    *(_OWORD *)&v21[v75[8]] = *(_OWORD *)&v22[v75[8]];
    *(_OWORD *)&v21[v75[9]] = *(_OWORD *)&v22[v75[9]];
    *(_QWORD *)&v21[v75[10]] = *(_QWORD *)&v22[v75[10]];
    *(_QWORD *)&v21[v75[11]] = *(_QWORD *)&v22[v75[11]];
    *(_QWORD *)&v21[v75[12]] = *(_QWORD *)&v22[v75[12]];
    v30 = v82;
    *(_QWORD *)((char *)v82 + v83[6]) = *(_QWORD *)((char *)v81 + v83[6]);
    *(_QWORD *)((char *)v82 + v83[7]) = *(_QWORD *)((char *)v81 + v83[7]);
    v31 = v83[8];
    __dsta = (_OWORD *)((char *)v82 + v31);
    v32 = (_OWORD *)((char *)v81 + v31);
    v33 = type metadata accessor for WebEmbedDataVisualization();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      memcpy(__dsta, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *__dsta = *v32;
        v36 = type metadata accessor for GenericDataVisualization();
        v73((char *)__dsta + *(int *)(v36 + 20), (char *)v32 + *(int *)(v36 + 20), v72);
        v37 = *(int *)(v36 + 24);
        v30 = v82;
        v38 = *(_QWORD *)((char *)v32 + v37);
        v39 = __dsta;
        *(_QWORD *)((char *)__dsta + v37) = v38;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        v40 = v32;
        v39 = __dsta;
        memcpy(__dsta, v40, *(_QWORD *)(v34 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v39, 0, 1, v33);
    }
    v41 = v83[9];
    v42 = (char *)v30 + v41;
    v43 = (char *)v81 + v41;
    sub_1BA6C5A68();
    v45 = v44;
    v46 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v43, 1, v44))
    {
      sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v42, v43, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v42, 0, 1, v45);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v76 + 56))(v82, 0, 1, v83);
  }
  *(_QWORD *)&v7[v9[15]] = *(_QWORD *)&v8[v9[15]];
  v7[v9[16]] = v8[v9[16]];
  *(_QWORD *)&v7[v9[17]] = *(_QWORD *)&v8[v9[17]];
  v48 = v9[18];
  v49 = &v7[v48];
  v50 = &v8[v48];
  v51 = sub_1BB871E24();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v54 = v3[7];
  *(_OWORD *)((char *)a1 + v3[6]) = *(_OWORD *)((char *)a2 + v3[6]);
  *((_BYTE *)a1 + v54) = *((_BYTE *)a2 + v54);
  v55 = v3[9];
  *((_BYTE *)a1 + v3[8]) = *((_BYTE *)a2 + v3[8]);
  *(_QWORD *)((char *)a1 + v55) = *(_QWORD *)((char *)a2 + v55);
  v56 = v3[11];
  *(_QWORD *)((char *)a1 + v3[10]) = *(_QWORD *)((char *)a2 + v3[10]);
  *(_QWORD *)((char *)a1 + v56) = *(_QWORD *)((char *)a2 + v56);
  v57 = v3[12];
  v58 = v3[13];
  v59 = (char *)a1 + v57;
  v60 = (char *)a2 + v57;
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v59[8] = v60[8];
  v61 = (char *)a1 + v58;
  v62 = (char *)a2 + v58;
  *(_QWORD *)v61 = *(_QWORD *)v62;
  v61[8] = v62[8];
  v63 = v3[14];
  v64 = v3[15];
  v65 = (char *)a1 + v63;
  v66 = (char *)a2 + v63;
  *(_QWORD *)v65 = *(_QWORD *)v66;
  v65[8] = v66[8];
  v67 = (char *)a1 + v64;
  v68 = (char *)a2 + v64;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  v67[8] = v68[8];
  v69 = v3[17];
  *((_BYTE *)a1 + v3[16]) = *((_BYTE *)a2 + v3[16]);
  *(_QWORD *)((char *)a1 + v69) = *(_QWORD *)((char *)a2 + v69);
  v70 = v3[19];
  *(_QWORD *)((char *)a1 + v3[18]) = *(_QWORD *)((char *)a2 + v3[18]);
  *(_QWORD *)((char *)a1 + v70) = *(_QWORD *)((char *)a2 + v70);
  return a1;
}

_QWORD *assignWithTake for FormatFeedGroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(void);
  int v50;
  uint64_t v51;
  size_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);
  _OWORD *v90;
  int v91;
  uint64_t v92;
  int *v93;
  int EnumCaseMultiPayload;
  char *v95;
  void *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  uint64_t v107;
  size_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(char *, uint64_t, uint64_t);
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  void (*v145)(char *, char *, uint64_t);
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  char *v149;
  void (**v150)(void *, _QWORD, uint64_t, uint64_t);
  char *v151;
  char *__dstb;
  char *__dst;
  char *__dstc;
  int *__dsta;
  int *__dstd;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  int *v162;
  int *v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  char *__src;
  void *__srca;

  v3 = a2;
  *a1 = *a2;
  v5 = a3[5];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for FormatContent.Resolved();
  v10 = v9[5];
  v11 = (char *)v6 + v10;
  v12 = &v7[v10];
  v13 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)((char *)v6 + v9[6]) = *(_QWORD *)&v7[v9[6]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v9[7]) = *(_QWORD *)&v7[v9[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v9[8]) = *(_QWORD *)&v7[v9[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v9[9]) = *(_QWORD *)&v7[v9[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v9[10]) = *(_QWORD *)&v7[v9[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v9[11]) = *(_QWORD *)&v7[v9[11]];
  swift_unknownObjectRelease();
  v14 = v9[12];
  v15 = *(void **)((char *)v6 + v14);
  *(_QWORD *)((char *)v6 + v14) = *(_QWORD *)&v7[v14];

  *(_QWORD *)((char *)v6 + v9[13]) = *(_QWORD *)&v7[v9[13]];
  swift_unknownObjectRelease();
  v16 = v9[14];
  v17 = (_QWORD *)((char *)v6 + v16);
  v18 = &v7[v16];
  v19 = type metadata accessor for FormatWebEmbed.Resolved();
  v157 = *(_QWORD *)(v19 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v157 + 48);
  v21 = v20((char *)v17, 1, v19);
  __src = v18;
  v22 = v20(v18, 1, v19);
  if (!v21)
  {
    if (v22)
    {
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1ED3D54C0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = a3;
      goto LABEL_49;
    }
    v38 = *((_QWORD *)v18 + 1);
    *v17 = *(_QWORD *)v18;
    v17[1] = v38;
    swift_bridgeObjectRelease();
    v163 = (int *)v19;
    v165 = v17;
    v39 = *(int *)(v19 + 20);
    v40 = (_QWORD *)((char *)v17 + v39);
    v41 = &v18[v39];
    v42 = *(_QWORD *)&v18[v39 + 8];
    *v40 = *(_QWORD *)&v18[v39];
    v40[1] = v42;
    swift_bridgeObjectRelease();
    v43 = type metadata accessor for FormatWebEmbed();
    v44 = *(int *)(v43 + 20);
    __dstc = &v41[v44];
    v158 = (char *)v40 + v44;
    v45 = sub_1BB86C67C();
    v46 = *(_QWORD *)(v45 - 8);
    v144 = *(void (**)(char *, char *, uint64_t))(v46 + 40);
    v144(v158, __dstc, v45);
    __dsta = (int *)v43;
    v159 = v41;
    v47 = *(int *)(v43 + 24);
    v48 = &v41[v47];
    v146 = v46;
    v148 = (char *)v40 + v47;
    v49 = *(uint64_t (**)(void))(v46 + 48);
    LODWORD(v46) = v49();
    v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v49)(v48, 1, v45);
    v143 = v45;
    if ((_DWORD)v46)
    {
      if (v50)
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v52 = *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64);
        v53 = v148;
LABEL_19:
        memcpy(v53, v48, v52);
        goto LABEL_28;
      }
      (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v148, v48, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v148, 0, 1, v45);
    }
    else
    {
      if (v50)
      {
        (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v45);
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v52 = *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64);
        v53 = v148;
        goto LABEL_19;
      }
      v144(v148, v48, v45);
    }
LABEL_28:
    *(_QWORD *)((char *)v40 + __dsta[7]) = *(_QWORD *)&v159[__dsta[7]];
    swift_release();
    v75 = __dsta[8];
    v76 = (_QWORD *)((char *)v40 + v75);
    v77 = &v159[v75];
    v79 = *(_QWORD *)v77;
    v78 = *((_QWORD *)v77 + 1);
    *v76 = v79;
    v76[1] = v78;
    swift_bridgeObjectRelease();
    v80 = __dsta[9];
    v81 = (_QWORD *)((char *)v40 + v80);
    v82 = &v159[v80];
    v84 = *(_QWORD *)v82;
    v83 = *((_QWORD *)v82 + 1);
    *v81 = v84;
    v81[1] = v83;
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v40 + __dsta[10]) = *(_QWORD *)&v159[__dsta[10]];
    *(_QWORD *)((char *)v40 + __dsta[11]) = *(_QWORD *)&v159[__dsta[11]];
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v40 + __dsta[12]) = *(_QWORD *)&v159[__dsta[12]];
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v165 + v163[6]) = *(_QWORD *)&__src[v163[6]];
    swift_release();
    *(_QWORD *)((char *)v165 + v163[7]) = *(_QWORD *)&__src[v163[7]];
    swift_release();
    v85 = v163[8];
    v86 = (_OWORD *)((char *)v165 + v85);
    v87 = &__src[v85];
    v88 = type metadata accessor for WebEmbedDataVisualization();
    v160 = *(_QWORD *)(v88 - 8);
    v89 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v160 + 48);
    v90 = v86;
    LODWORD(v86) = v89((char *)v86, 1, v88);
    v91 = v89(v87, 1, v88);
    if ((_DWORD)v86)
    {
      if (v91)
        goto LABEL_33;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v93 = v163;
      v95 = v87;
      v24 = a3;
      v96 = v90;
      if (EnumCaseMultiPayload == 1)
      {
        *v90 = *(_OWORD *)v95;
        v97 = v95;
        v151 = v95;
        __dstd = (int *)type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v146 + 32))((char *)v90 + __dstd[5], &v97[__dstd[5]], v143);
        v96 = v90;
        *(_QWORD *)((char *)v90 + __dstd[6]) = *(_QWORD *)&v151[__dstd[6]];
        swift_storeEnumTagMultiPayload();
        v98 = v160;
      }
      else
      {
        v98 = v160;
        memcpy(v96, v95, *(_QWORD *)(v160 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v96, 0, 1, v88);
    }
    else
    {
      if (v91)
      {
        sub_1BA4A2E80((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_33:
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v90, v87, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        v93 = v163;
        v24 = a3;
        goto LABEL_41;
      }
      v99 = v87;
      v93 = v163;
      v24 = a3;
      if (a1 != v3)
      {
        sub_1BA4A2E80((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v90 = *(_OWORD *)v99;
          v161 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v146 + 32))((char *)v90 + *(int *)(v161 + 20), &v99[*(int *)(v161 + 20)], v143);
          *(_QWORD *)((char *)v90 + *(int *)(v161 + 24)) = *(_QWORD *)&v99[*(int *)(v161 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v90, v99, *(_QWORD *)(v160 + 64));
        }
      }
    }
LABEL_41:
    v100 = v93[9];
    v101 = (char *)v165 + v100;
    v102 = &__src[v100];
    sub_1BA6C5A68();
    v104 = v103;
    v166 = *(_QWORD *)(v103 - 8);
    v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v166 + 48);
    __srca = v101;
    LODWORD(v101) = v105(v101, 1, v103);
    v106 = v105(v102, 1, v104);
    if ((_DWORD)v101)
    {
      if (!v106)
      {
        (*(void (**)(void *, char *, uint64_t))(v166 + 32))(__srca, v102, v104);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v166 + 56))(__srca, 0, 1, v104);
        goto LABEL_49;
      }
      sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
      v108 = *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64);
      v109 = __srca;
    }
    else
    {
      if (!v106)
      {
        (*(void (**)(void *, char *, uint64_t))(v166 + 40))(__srca, v102, v104);
        goto LABEL_49;
      }
      (*(void (**)(void *, uint64_t))(v166 + 8))(__srca, v104);
      sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
      v108 = *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64);
      v109 = __srca;
    }
    memcpy(v109, v102, v108);
    goto LABEL_49;
  }
  if (v22)
    goto LABEL_6;
  v147 = v3;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v162 = (int *)v19;
  v164 = v17;
  v25 = *(int *)(v19 + 20);
  v26 = (char *)v17 + v25;
  v27 = &v18[v25];
  *(_OWORD *)((char *)v17 + v25) = *(_OWORD *)&v18[v25];
  v28 = (int *)type metadata accessor for FormatWebEmbed();
  v29 = v28[5];
  v149 = &v27[v29];
  __dstb = &v26[v29];
  v30 = sub_1BB86C67C();
  v31 = *(_QWORD **)(v30 - 8);
  v32 = (void (*)(char *, char *, uint64_t))v31[4];
  v32(__dstb, v149, v30);
  v33 = v28[6];
  v150 = (void (**)(void *, _QWORD, uint64_t, uint64_t))v31;
  __dst = &v26[v33];
  v34 = &v27[v33];
  v35 = (unsigned int (*)(char *, uint64_t, uint64_t))v31[6];
  v36 = v34;
  v145 = v32;
  if (v35(v34, 1, v30))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v32(__dst, v36, v30);
    v150[7](__dst, 0, 1, v30);
  }
  v3 = v147;
  *(_QWORD *)&v26[v28[7]] = *(_QWORD *)&v27[v28[7]];
  *(_OWORD *)&v26[v28[8]] = *(_OWORD *)&v27[v28[8]];
  *(_OWORD *)&v26[v28[9]] = *(_OWORD *)&v27[v28[9]];
  *(_QWORD *)&v26[v28[10]] = *(_QWORD *)&v27[v28[10]];
  *(_QWORD *)&v26[v28[11]] = *(_QWORD *)&v27[v28[11]];
  *(_QWORD *)&v26[v28[12]] = *(_QWORD *)&v27[v28[12]];
  *(_QWORD *)((char *)v164 + v162[6]) = *(_QWORD *)&__src[v162[6]];
  *(_QWORD *)((char *)v164 + v162[7]) = *(_QWORD *)&__src[v162[7]];
  v54 = v162[8];
  v55 = (char *)v164 + v54;
  v56 = &__src[v54];
  v57 = type metadata accessor for WebEmbedDataVisualization();
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    v60 = v162;
    v61 = v164;
    v24 = a3;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)v55 = *(_OWORD *)v56;
      v62 = type metadata accessor for GenericDataVisualization();
      v63 = v30;
      v64 = v55;
      v65 = v62;
      v145(&v64[*(int *)(v62 + 20)], &v56[*(int *)(v62 + 20)], v63);
      v66 = *(int *)(v65 + 24);
      v55 = v64;
      *(_QWORD *)&v64[v66] = *(_QWORD *)&v56[v66];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v55, v56, *(_QWORD *)(v58 + 64));
    }
    v24 = a3;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    v60 = v162;
    v61 = v164;
  }
  v68 = v60[9];
  v69 = (char *)v61 + v68;
  v70 = &__src[v68];
  sub_1BA6C5A68();
  v72 = v71;
  v73 = *(_QWORD *)(v71 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v70, 1, v71))
  {
    sub_1BA4A3FB4(0, &qword_1ED3D2C50, (void (*)(uint64_t))sub_1BA6C5A68);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v69, v70, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v69, 0, 1, v72);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v157 + 56))(v164, 0, 1, v162);
LABEL_49:
  v111 = v9[15];
  v112 = *(void **)((char *)v6 + v111);
  *(_QWORD *)((char *)v6 + v111) = *(_QWORD *)&v7[v111];

  *((_BYTE *)v6 + v9[16]) = v7[v9[16]];
  *(_QWORD *)((char *)v6 + v9[17]) = *(_QWORD *)&v7[v9[17]];
  swift_bridgeObjectRelease();
  v113 = v9[18];
  v114 = (char *)v6 + v113;
  v115 = &v7[v113];
  v116 = sub_1BB871E24();
  v117 = *(_QWORD *)(v116 - 8);
  v118 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
  v119 = v118(v114, 1, v116);
  v120 = v118(v115, 1, v116);
  if (!v119)
  {
    if (!v120)
    {
      (*(void (**)(char *, char *, uint64_t))(v117 + 40))(v114, v115, v116);
      goto LABEL_55;
    }
    (*(void (**)(char *, uint64_t))(v117 + 8))(v114, v116);
    goto LABEL_54;
  }
  if (v120)
  {
LABEL_54:
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v115, v116);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
LABEL_55:
  v122 = v24[6];
  v123 = (_QWORD *)((char *)a1 + v122);
  v124 = (_QWORD *)((char *)v3 + v122);
  v126 = *v124;
  v125 = v124[1];
  *v123 = v126;
  v123[1] = v125;
  swift_bridgeObjectRelease();
  v127 = v24[8];
  *((_BYTE *)a1 + v24[7]) = *((_BYTE *)v3 + v24[7]);
  *((_BYTE *)a1 + v127) = *((_BYTE *)v3 + v127);
  v128 = v24[10];
  *(_QWORD *)((char *)a1 + v24[9]) = *(_QWORD *)((char *)v3 + v24[9]);
  *(_QWORD *)((char *)a1 + v128) = *(_QWORD *)((char *)v3 + v128);
  v129 = v24[12];
  *(_QWORD *)((char *)a1 + v24[11]) = *(_QWORD *)((char *)v3 + v24[11]);
  v130 = (char *)a1 + v129;
  v131 = (char *)v3 + v129;
  *(_QWORD *)v130 = *(_QWORD *)v131;
  v130[8] = v131[8];
  v132 = v24[13];
  v133 = v24[14];
  v134 = (char *)a1 + v132;
  v135 = (char *)v3 + v132;
  *(_QWORD *)v134 = *(_QWORD *)v135;
  v134[8] = v135[8];
  v136 = (char *)a1 + v133;
  v137 = (char *)v3 + v133;
  *(_QWORD *)v136 = *(_QWORD *)v137;
  v136[8] = v137[8];
  v138 = v24[15];
  v139 = v24[16];
  v140 = (char *)a1 + v138;
  v141 = (char *)v3 + v138;
  *(_QWORD *)v140 = *(_QWORD *)v141;
  v140[8] = v141[8];
  *((_BYTE *)a1 + v139) = *((_BYTE *)v3 + v139);
  *(_QWORD *)((char *)a1 + v24[17]) = *(_QWORD *)((char *)v3 + v24[17]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v24[18]) = *(_QWORD *)((char *)v3 + v24[18]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v24[19]) = *(_QWORD *)((char *)v3 + v24[19]);
  swift_release();
  return a1;
}

uint64_t sub_1BB1C7274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FormatContent.Resolved();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 68));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB1C72F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatContent.Resolved();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 68)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatFeedGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB1C73BC + 4 * byte_1BB8F5D75[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB1C73F0 + 4 * byte_1BB8F5D70[v4]))();
}

uint64_t sub_1BB1C73F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1C73F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1C7400);
  return result;
}

uint64_t sub_1BB1C740C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1C7414);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB1C7418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1C7420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatFeedGroup.CodingKeys()
{
  return &type metadata for FormatFeedGroup.CodingKeys;
}

unint64_t sub_1BB1C7440()
{
  unint64_t result;

  result = qword_1EF2BD3A0;
  if (!qword_1EF2BD3A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6014, &type metadata for FormatFeedGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD3A0);
  }
  return result;
}

uint64_t sub_1BB1C7484()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

uint64_t _s8NewsFeed16FormatStyleImageV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  v9 = *a2;
  v10 = v2;
  if ((static FormatAsyncImageContent.== infix(_:_:)(&v10, &v9) & 1) == 0
    || (_s8NewsFeed20FormatImageNodeStyleC2eeoiySbAC_ACtFZ_0(v3, v5) & 1) == 0)
  {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1BA6EB330(v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_1BB1C756C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1C7590();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1C7590()
{
  unint64_t result;

  result = qword_1EF2BD3A8;
  if (!qword_1EF2BD3A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStyleImage, &type metadata for FormatStyleImage);
    atomic_store(result, (unint64_t *)&qword_1EF2BD3A8);
  }
  return result;
}

unint64_t sub_1BB1C75D4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5E8A2C();
  a1[2] = sub_1BA5B60E0();
  result = sub_1BB1C7608();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1C7608()
{
  unint64_t result;

  result = qword_1EF2BD3B0;
  if (!qword_1EF2BD3B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStyleImage, &type metadata for FormatStyleImage);
    atomic_store(result, (unint64_t *)&qword_1EF2BD3B0);
  }
  return result;
}

uint64_t destroy for FormatStyleImage()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed16FormatStyleImageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatStyleImage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatStyleImage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatStyleImage()
{
  return &type metadata for FormatStyleImage;
}

uint64_t dispatch thunk of MediaViewLayoutAttributesType.mediaViewFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MediaViewLayoutAttributesType.mediaViewRoundedCorners.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MediaViewLayoutAttributesType.mediaViewRoundedCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t FormatBackgroundLayout.deinit()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t FormatBackgroundLayout.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatBackgroundLayout()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatBackgroundLayout()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB1C7844(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;

  v2 = sub_1BB8709F0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9F30];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CA9C0();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3F00, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v27 - v18;
  if (a1)
  {
    sub_1BB870690();
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v20(v19, 0, 1, v2);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v20((char *)&v27 - v18, 1, 1, v2);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v16, *MEMORY[0x1E0DB9F28], v2);
  v20(v16, 0, 1, v2);
  v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1BB1CAA38((uint64_t)v19, (uint64_t)v10);
  sub_1BB1CAA38((uint64_t)v16, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v10, 1, v2) != 1)
  {
    sub_1BB1CAA38((uint64_t)v10, (uint64_t)v13);
    if (v22(v21, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v21, v2);
      sub_1BB1CAB24();
      v24 = sub_1BB872958();
      v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v6, v2);
      sub_1BB1CAA94((uint64_t)v16);
      sub_1BB1CAA94((uint64_t)v19);
      v25(v13, v2);
      sub_1BB1CAA94((uint64_t)v10);
      v23 = v24 ^ 1;
      return v23 & 1;
    }
    sub_1BB1CAA94((uint64_t)v16);
    sub_1BB1CAA94((uint64_t)v19);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v2);
    goto LABEL_9;
  }
  sub_1BB1CAA94((uint64_t)v16);
  sub_1BB1CAA94((uint64_t)v19);
  if (v22(v21, 1, v2) != 1)
  {
LABEL_9:
    sub_1BB1CAAE8((uint64_t)v10);
    v23 = 1;
    return v23 & 1;
  }
  sub_1BB1CAA94((uint64_t)v10);
  v23 = 0;
  return v23 & 1;
}

uint64_t sub_1BB1C7B18(uint64_t a1, id a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController);
  v3 = objc_msgSend(a2, sel_identifier);
  if (!v3)
  {
    sub_1BB8729A0();
    v3 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v2, sel_addMutedSubscriptionForTagID_, v3);

  swift_getObjectType();
  if (qword_1ED3BA8E0 != -1)
    swift_once();
  sub_1BA78682C();
  swift_unknownObjectRetain();
  sub_1BB86FF4C();
  return swift_unknownObjectRelease();
}

void sub_1BB1C7CC8(uint64_t a1, uint64_t a2, uint64_t a3, id *a4, char *a5, uint64_t a6)
{
  sub_1BB1C9F80(a1, a2, *a4, *a5, a6);
}

uint64_t sub_1BB1C7CF4@<X0>(void **a1@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1BB1CA278(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BB1C7D24(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, uint64_t a5)
{
  return sub_1BB1CA2F8(*a4, a5);
}

uint64_t sub_1BB1C7ED8(void *a1, void *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  v8 = objc_msgSend(a2, sel_shortcutsTagID);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BB8729A0();
    v12 = v11;

    if (v5 == v10 && v7 == v12)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_11;
    }
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_isMySports);
LABEL_11:
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
  v18 = objc_msgSend(a1, sel_name, 0x80000001BB97E8A0);
  v19 = sub_1BB8729A0();
  v21 = v20;

  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v17 + 32) = v19;
  *(_QWORD *)(v17 + 40) = v21;
  v22 = sub_1BB8729D0();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1BB1C81F0(void *a1, void *a2)
{
  uint64_t ObjectType;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t ObjCClassFromMetadata;
  id v75;
  uint64_t v76;
  char v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  id v104;

  ObjectType = swift_getObjectType();
  v5 = objc_msgSend(a1, sel_identifier);
  v6 = sub_1BB8729A0();
  v8 = v7;

  v9 = objc_msgSend(a2, sel_featuredStoriesTagID);
  if (v9)
  {
    v10 = v9;
    v11 = sub_1BB8729A0();
    v13 = v12;

    if (v6 == v11 && v8 == v13)
      goto LABEL_12;
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      goto LABEL_47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v16 = objc_msgSend(a1, sel_identifier);
  v17 = sub_1BB8729A0();
  v19 = v18;

  v20 = objc_msgSend(a2, sel_trendingTagID);
  if (v20)
  {
    v21 = v20;
    v22 = sub_1BB8729A0();
    v24 = v23;

    if (v17 == v22 && v19 == v24)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      goto LABEL_47;
    }
    v25 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v26 = objc_msgSend(a1, sel_identifier);
  v27 = sub_1BB8729A0();
  v29 = v28;

  v30 = objc_msgSend(a2, sel_briefingsTagID);
  if (v30)
  {
    v31 = v30;
    v32 = sub_1BB8729A0();
    v34 = v33;

    if (v27 == v32 && v29 == v34)
      goto LABEL_43;
    v35 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
      goto LABEL_47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v36 = objc_msgSend(a1, sel_identifier);
  v37 = sub_1BB8729A0();
  v39 = v38;

  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_spotlightChannelID) & 1) != 0
    && (v40 = objc_msgSend(a2, sel_spotlightChannelID)) != 0)
  {
    v41 = v40;
    v42 = sub_1BB8729A0();
    v44 = v43;

    if (v37 == v42 && v39 == v44)
      goto LABEL_43;
    v72 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v72 & 1) != 0)
      goto LABEL_47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v45 = objc_msgSend(a1, sel_identifier);
  v46 = sub_1BB8729A0();
  v48 = v47;

  v49 = objc_msgSend(a2, sel_myMagazinesTagID);
  if (v49)
  {
    v50 = v49;
    v51 = sub_1BB8729A0();
    v53 = v52;

    if (v46 == v51 && v48 == v53)
      goto LABEL_43;
    v54 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v54 & 1) != 0)
      goto LABEL_47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v55 = objc_msgSend(a1, sel_identifier);
  v56 = sub_1BB8729A0();
  v58 = v57;

  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_sharedWithYouTagID) & 1) != 0)
  {
    v59 = objc_msgSend(a2, sel_sharedWithYouTagID);
    v60 = sub_1BB8729A0();
    v62 = v61;

    if (v56 == v60 && v58 == v62)
      goto LABEL_43;
    v73 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v73 & 1) != 0)
      goto LABEL_47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v63 = objc_msgSend(a1, sel_identifier);
  v64 = sub_1BB8729A0();
  v66 = v65;

  v67 = objc_msgSend(a2, sel_shortcutsTagID);
  if (v67)
  {
    v68 = v67;
    v69 = sub_1BB8729A0();
    v71 = v70;

    if (v64 == v69 && v66 == v71)
    {
LABEL_43:
      swift_bridgeObjectRelease_n();
LABEL_47:
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v75 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v76 = sub_1BB86C340();

      return v76;
    }
    v78 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v78 & 1) != 0)
      goto LABEL_47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v79 = objc_msgSend(a1, sel_identifier);
  v80 = sub_1BB8729A0();
  v82 = v81;

  v83 = objc_msgSend(a2, sel_sportsTopStoriesTagID);
  if (v83)
  {
    v84 = v83;
    v85 = sub_1BB8729A0();
    v87 = v86;

    if (v80 == v85 && v82 == v87)
    {
      swift_bridgeObjectRelease_n();
LABEL_57:
      type metadata accessor for Localized();
      v89 = swift_getObjCClassFromMetadata();
      v90 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v89);
      sub_1BB86C340();

      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1BB87CE70;
      v92 = objc_msgSend(a1, sel_name, 0x80000001BB97DED0);
LABEL_60:
      v95 = v92;
      v96 = sub_1BB8729A0();
      v98 = v97;

      *(_QWORD *)(v91 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v91 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v91 + 32) = v96;
      *(_QWORD *)(v91 + 40) = v98;
      v76 = sub_1BB8729D0();
      swift_bridgeObjectRelease();
      return v76;
    }
    v88 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v88 & 1) != 0)
      goto LABEL_57;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(a1, sel_isMySports))
  {
    type metadata accessor for Localized();
    v93 = swift_getObjCClassFromMetadata();
    v94 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v93);
    sub_1BB86C340();

    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_1BB87CE70;
    v92 = objc_msgSend(a1, sel_name, 0x80000001BB97DE30);
    goto LABEL_60;
  }
  if (objc_msgSend(a1, sel_isPuzzleHub))
    goto LABEL_47;
  v99 = objc_msgSend(a1, sel_asSports);
  if (!v99)
  {
    if (FCTagProviding.isTopic.getter(ObjectType) || objc_msgSend(a1, sel_isLocal))
    {
      type metadata accessor for Localized();
      v101 = swift_getObjCClassFromMetadata();
      v102 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v101);
      sub_1BB86C340();

      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1BB87CE70;
      v92 = objc_msgSend(a1, sel_name, 0x80000001BB97DCF0);
    }
    else
    {
      type metadata accessor for Localized();
      v103 = swift_getObjCClassFromMetadata();
      v104 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v103);
      sub_1BB86C340();

      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1BB87CE70;
      v92 = objc_msgSend(a1, sel_name, 0x80000001BB97DC50);
    }
    goto LABEL_60;
  }
  v100 = sub_1BB1C8FE8(v99);
  swift_unknownObjectRelease();
  return v100;
}

uint64_t sub_1BB1C8FE8(void *a1)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  switch((unint64_t)objc_msgSend(a1, sel_sportsType))
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1BB86C340();

      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
      v5 = objc_msgSend(a1, sel_name, 0x80000001BB97E410);
      break;
    default:
      type metadata accessor for Localized();
      v6 = swift_getObjCClassFromMetadata();
      v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v6);
      sub_1BB86C340();

      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
      v5 = objc_msgSend(a1, sel_name, 0x80000001BB97E360);
      break;
  }
  v8 = v5;
  v9 = sub_1BB8729A0();
  v11 = v10;

  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v11;
  v12 = sub_1BB8729D0();
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1BB1C9C2C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  id v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v26;
  void (*v27)(uint64_t, void *);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  sub_1BB1C7ED8(a1, a2);
  sub_1BB1C81F0(a1, a2);
  v8 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1);

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  swift_retain();
  v15 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v29 = sub_1BA4D7950;
  v30 = v14;
  v16 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v26 = 1107296256;
  v27 = sub_1BA573874;
  v28 = &block_descriptor_49;
  v17 = _Block_copy(&aBlock);
  swift_release();
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v15, 2, v17, 0x80000001BB97DB40);
  _Block_release(v17);

  v20 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v21 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v29 = nullsub_1;
  v30 = 0;
  aBlock = v16;
  v26 = 1107296256;
  v27 = sub_1BA573874;
  v28 = &block_descriptor_6_4;
  v22 = _Block_copy(&aBlock);
  swift_release();
  v23 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v21, 1, v22, 0x80000001BB97DB70);
  _Block_release(v22);

  objc_msgSend(v10, sel_addAction_, v19);
  objc_msgSend(v10, sel_addAction_, v23);

  return v10;
}

void sub_1BB1C9F80(uint64_t a1, uint64_t a2, id a3, char a4, uint64_t a5)
{
  char *v5;
  char *v6;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  _QWORD *v18;
  char *v19;
  void *v20;
  id v21;
  id v22;

  v6 = v5;
  if ((a4 & 1) != 0)
  {
    if ((sub_1BB1C7844(a5) & 1) != 0)
    {
      __swift_project_boxed_opaque_existential_1(&v5[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_sceneProvider], *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_sceneProvider + 24]);
      v13 = (void *)sub_1BB86FFC4();
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v13, sel_rootViewController);

        if (v15)
        {
          v16 = (void *)sub_1BB8733CC();

          v17 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_appConfigManager], sel_appConfiguration);
          v18 = (_QWORD *)swift_allocObject();
          v18[2] = v6;
          v18[3] = a3;
          v18[4] = a1;
          v18[5] = a2;
          v18[6] = a5;
          swift_retain();
          swift_unknownObjectRetain();
          v19 = v6;
          swift_unknownObjectRetain();
          v22 = sub_1BB1C9C2C(a3, v17, (uint64_t)sub_1BB1CABA8, (uint64_t)v18);
          swift_unknownObjectRelease();
          swift_release();
          objc_msgSend(v16, sel_presentViewController_animated_completion_, v22, 1, 0);

          return;
        }
      }
      v20 = *(void **)&v6[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController];
      v21 = objc_msgSend(a3, sel_identifier);
    }
    else
    {
      v20 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController];
      v21 = objc_msgSend(a3, sel_identifier);
    }
    v12 = v21;
    if (!v12)
    {
      sub_1BB8729A0();
      v12 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v20, sel_addMutedSubscriptionForTagID_, v12);
  }
  else
  {
    v11 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController];
    v12 = objc_msgSend(a3, sel_identifier);
    if (!v12)
    {
      sub_1BB8729A0();
      v12 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v11, sel_removeSubscriptionForTagID_type_, v12, 2);
  }

  swift_getObjectType();
  if (qword_1ED3BA8E0 != -1)
    swift_once();
  sub_1BA78682C();
  swift_unknownObjectRetain();
  sub_1BB86FF4C();
  swift_unknownObjectRelease();
}

uint64_t sub_1BB1CA278(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  unsigned int v4;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController);
  v3 = objc_msgSend(a1, sel_identifier);
  if (!v3)
  {
    sub_1BB8729A0();
    v3 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(v2, sel_hasMutedSubscriptionForTagID_, v3);

  return v4 ^ 1;
}

uint64_t sub_1BB1CA2F8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t result;
  void *v37;
  uint64_t ObjectType;
  unsigned int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v73 = a2;
  v3 = sub_1BB8709F0();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9F30];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CA9C0();
  v71 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v72 = (uint64_t)&v62 - v12;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3F00, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v69 = (char *)&v62 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v62 - v19;
  MEMORY[0x1E0C80A78](v21);
  v68 = (uint64_t)&v62 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v62 - v24;
  MEMORY[0x1E0C80A78](v26);
  v70 = (uint64_t)&v62 - v27;
  v28 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v29 = objc_msgSend(v28, sel_bundleIdentifier);

  if (!v29)
    return 0;
  v65 = v15;
  v66 = v20;
  v67 = v7;
  v30 = v3;
  v31 = a1;
  v32 = sub_1BB8729A0();
  v34 = v33;

  if (v32 != 0x6C7070612E6D6F63)
    goto LABEL_5;
  if (v34 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    v35 = sub_1BB874398();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v35 & 1) == 0)
      return result;
  }
  v37 = v31;
  ObjectType = swift_getObjectType();
  if ((objc_msgSend(v31, sel_isPuzzleType) & 1) != 0)
    return 0;
  v39 = objc_msgSend(v31, sel_isPuzzleHub);
  v40 = v30;
  v42 = (uint64_t)v66;
  v41 = v67;
  v43 = v73;
  if (v39)
  {
    v64 = ObjectType;
    if (v73)
    {
      v44 = v70;
      sub_1BB870690();
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v45(v44, 0, 1, v40);
    }
    else
    {
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v44 = v70;
      v45(v70, 1, 1, v40);
    }
    v46 = v72;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v25, *MEMORY[0x1E0DB9EF8], v40);
    v45((uint64_t)v25, 0, 1, v40);
    v47 = v46 + *(int *)(v71 + 48);
    sub_1BB1CAA38(v44, v46);
    sub_1BB1CAA38((uint64_t)v25, v47);
    v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v48(v46, 1, v40) == 1)
    {
      sub_1BB1CAA94((uint64_t)v25);
      sub_1BB1CAA94(v44);
      if (v48(v47, 1, v40) == 1)
      {
        sub_1BB1CAA94(v72);
        ObjectType = v64;
        v42 = (uint64_t)v66;
        v41 = v67;
        goto LABEL_18;
      }
    }
    else
    {
      v63 = v10;
      v49 = v68;
      sub_1BB1CAA38(v46, v68);
      if (v48(v47, 1, v40) != 1)
      {
        v51 = v67;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v67, v47, v40);
        sub_1BB1CAB24();
        v52 = sub_1BB872958();
        v53 = *(void (**)(char *, uint64_t))(v5 + 8);
        v53(v51, v40);
        sub_1BB1CAA94((uint64_t)v25);
        sub_1BB1CAA94(v70);
        v53((char *)v49, v40);
        v54 = v46;
        v41 = v51;
        sub_1BB1CAA94(v54);
        v10 = v63;
        ObjectType = v64;
        v42 = (uint64_t)v66;
        if ((v52 & 1) == 0)
          return 0;
        goto LABEL_18;
      }
      sub_1BB1CAA94((uint64_t)v25);
      sub_1BB1CAA94(v70);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v49, v40);
    }
    v50 = v72;
LABEL_28:
    sub_1BB1CAAE8(v50);
    return 0;
  }
LABEL_18:
  if (!objc_msgSend(v37, sel_isMySports))
  {
LABEL_30:
    if (!FCTagProviding.isSection.getter(ObjectType) && (objc_msgSend(v37, sel_isSportsEvent) & 1) == 0)
      return objc_msgSend(v37, sel_disableBlock) ^ 1;
    return 0;
  }
  if (v43)
  {
    sub_1BB870690();
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v55(v42, 0, 1, v40);
  }
  else
  {
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v55(v42, 1, 1, v40);
  }
  v56 = (uint64_t)v69;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v69, *MEMORY[0x1E0DB9EF8], v40);
  v55(v56, 0, 1, v40);
  v57 = (uint64_t)&v10[*(int *)(v71 + 48)];
  sub_1BB1CAA38(v42, (uint64_t)v10);
  sub_1BB1CAA38(v56, v57);
  v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v58((uint64_t)v10, 1, v40) == 1)
  {
    sub_1BB1CAA94(v56);
    sub_1BB1CAA94(v42);
    if (v58(v57, 1, v40) == 1)
    {
      sub_1BB1CAA94((uint64_t)v10);
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  v64 = ObjectType;
  v59 = (uint64_t)v65;
  sub_1BB1CAA38((uint64_t)v10, (uint64_t)v65);
  if (v58(v57, 1, v40) == 1)
  {
    sub_1BB1CAA94(v56);
    sub_1BB1CAA94(v42);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v59, v40);
LABEL_27:
    v50 = (uint64_t)v10;
    goto LABEL_28;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v41, v57, v40);
  sub_1BB1CAB24();
  v60 = sub_1BB872958();
  v61 = *(void (**)(char *, uint64_t))(v5 + 8);
  v61(v41, v40);
  sub_1BB1CAA94(v56);
  sub_1BB1CAA94(v42);
  v61((char *)v59, v40);
  sub_1BB1CAA94((uint64_t)v10);
  ObjectType = v64;
  if ((v60 & 1) != 0)
    goto LABEL_30;
  return 0;
}

void sub_1BB1CA9C0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A3F10)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3A3F00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9F30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A3F10);
  }
}

uint64_t sub_1BB1CAA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3F00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9F30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1CAA94(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3F00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB9F30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB1CAAE8(uint64_t a1)
{
  uint64_t v2;

  sub_1BB1CA9C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BB1CAB24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BD4F0;
  if (!qword_1EF2BD4F0)
  {
    v1 = sub_1BB8709F0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB9F40], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BD4F0);
  }
  return result;
}

uint64_t sub_1BB1CAB6C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB1CABA8()
{
  uint64_t v0;

  return sub_1BB1C7B18(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1BB1CABB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t FormatModel.hashValue.getter()
{
  sub_1BB8745CC();
  type metadata accessor for FormatModel();
  sub_1BB1CB974(&qword_1ED3A53E8, (uint64_t)&protocol conformance descriptor for FormatModel);
  sub_1BB872868();
  return sub_1BB874608();
}

uint64_t sub_1BB1CAC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v0, (uint64_t)v6);
  sub_1BB1C32F8();
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BA6DA07C((uint64_t)v6, (uint64_t)v3);
  FeedItem.identifier.getter();
  v10 = v9;
  sub_1BA6DB314((uint64_t)v3);
  sub_1BB1C3360(v8);
  return v10;
}

uint64_t FormatModel.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v0, (uint64_t)v6);
  sub_1BB1C32F8();
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BA6DA07C((uint64_t)v6, (uint64_t)v3);
  FeedItem.identifier.getter();
  v10 = v9;
  sub_1BA6DB314((uint64_t)v3);
  sub_1BB1C3360(v8);
  return v10;
}

uint64_t sub_1BB1CADF4()
{
  sub_1BB1CB974(&qword_1ED3A53C8, (uint64_t)&protocol conformance descriptor for FormatModel);
  return sub_1BB86EC50();
}

uint64_t type metadata accessor for FormatModel()
{
  uint64_t result;

  result = qword_1ED3A53F8;
  if (!qword_1ED3A53F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB1CAE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FormatModel.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v1, (uint64_t)v5);
  sub_1BB1C32F8();
  v7 = (uint64_t)&v5[*(int *)(v6 + 48)];
  sub_1BA6DA07C((uint64_t)v5, a1);
  return sub_1BB1C3360(v7);
}

uint64_t FormatModel.feedContextIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v0, (uint64_t)v6);
  sub_1BB1C32F8();
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BA6DA07C((uint64_t)v6, (uint64_t)v3);
  v9 = FeedItem.externalContentCacheIdentifier.getter();
  sub_1BA6DB314((uint64_t)v3);
  sub_1BB1C3360(v8);
  return v9;
}

uint64_t sub_1BB1CB02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v2, (uint64_t)v5);
  sub_1BB1C32F8();
  v7 = (uint64_t)&v5[*(int *)(v6 + 48)];
  sub_1BA6DA07C((uint64_t)v5, a2);
  return sub_1BB1C3360(v7);
}

uint64_t sub_1BB1CB0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v0, (uint64_t)v6);
  sub_1BB1C32F8();
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BA6DA07C((uint64_t)v6, (uint64_t)v3);
  v9 = FeedItem.externalContentCacheIdentifier.getter();
  sub_1BA6DB314((uint64_t)v3);
  sub_1BB1C3360(v8);
  return v9;
}

uint64_t FormatModel.dragItem.getter()
{
  return sub_1BB1CB31C((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.dragItem.getter);
}

uint64_t sub_1BB1CB194(uint64_t a1, uint64_t a2)
{
  return sub_1BB1CB3CC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.dragItem.getter);
}

uint64_t FormatModel.rankValue.getter()
{
  return sub_1BB1CB474((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.rankValue.getter);
}

uint64_t sub_1BB1CB1AC(uint64_t a1, uint64_t a2)
{
  return sub_1BB1CB678(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.rankValue.getter);
}

uint64_t FormatModel.isImpressionable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  char v7;
  _OWORD v9[2];

  v1 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v0, (uint64_t)v3);
  sub_1BB1C32F8();
  v5 = &v3[*(int *)(v4 + 48)];
  v6 = *((_OWORD *)v5 + 1);
  v9[0] = *(_OWORD *)v5;
  v9[1] = v6;
  v7 = FormatModelContext.isImpressionable.getter();
  sub_1BB1C3360((uint64_t)v9);
  sub_1BA6DB314((uint64_t)v3);
  return v7 & 1;
}

uint64_t sub_1BB1CB260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  char v7;
  _OWORD v9[2];

  MEMORY[0x1E0C80A78](a1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v1, (uint64_t)v3);
  sub_1BB1C32F8();
  v5 = &v3[*(int *)(v4 + 48)];
  v6 = *((_OWORD *)v5 + 1);
  v9[0] = *(_OWORD *)v5;
  v9[1] = v6;
  v7 = FormatModelContext.isImpressionable.getter();
  sub_1BB1C3360((uint64_t)v9);
  sub_1BA6DB314((uint64_t)v3);
  return v7 & 1;
}

uint64_t FormatModel.selectionStyle.getter()
{
  return sub_1BB1CB31C((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.selectionStyle.getter);
}

uint64_t sub_1BB1CB304(uint64_t a1, uint64_t a2)
{
  return sub_1BB1CB3CC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.selectionStyle.getter);
}

uint64_t FormatModel.highlightStyle.getter()
{
  return sub_1BB1CB31C((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.highlightStyle.getter);
}

uint64_t sub_1BB1CB31C(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[2];

  v3 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v1, (uint64_t)v5);
  sub_1BB1C32F8();
  v7 = &v5[*(int *)(v6 + 48)];
  v8 = *((_OWORD *)v7 + 1);
  v13[0] = *(_OWORD *)v7;
  v13[1] = v8;
  a1(v6, v9, v10, v11);
  sub_1BB1C3360((uint64_t)v13);
  return sub_1BA6DB314((uint64_t)v5);
}

uint64_t sub_1BB1CB3C0(uint64_t a1, uint64_t a2)
{
  return sub_1BB1CB3CC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.highlightStyle.getter);
}

uint64_t sub_1BB1CB3CC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[2];

  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v3, (uint64_t)v6);
  sub_1BB1C32F8();
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = *((_OWORD *)v8 + 1);
  v14[0] = *(_OWORD *)v8;
  v14[1] = v9;
  a3(v7, v10, v11, v12);
  sub_1BB1C3360((uint64_t)v14);
  return sub_1BA6DB314((uint64_t)v6);
}

uint64_t FormatModel.contextMenu.getter()
{
  return sub_1BB1CB474((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.contextMenu.getter);
}

uint64_t sub_1BB1CB474(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[2];

  v3 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v1, (uint64_t)v5);
  sub_1BB1C32F8();
  v7 = &v5[*(int *)(v6 + 48)];
  v8 = *((_OWORD *)v7 + 1);
  v14[0] = *(_OWORD *)v7;
  v14[1] = v8;
  v12 = a1(v6, v9, v10, v11);
  sub_1BB1C3360((uint64_t)v14);
  sub_1BA6DB314((uint64_t)v5);
  return v12;
}

uint64_t FormatModel.contextMenuWithContext<A, B, C, D>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1BB1CB570(a1, a2, a3, a4, a5, a6, a7, a8, a9, FormatModelContext.contextMenuWithContext<A, B, C, D>(_:));
}

uint64_t FormatModel.debugContextMenuWithContext<A, B, C, D>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1BB1CB570(a1, a2, a3, a4, a5, a6, a7, a8, a9, FormatModelContext.debugContextMenuWithContext<A, B, C, D>(_:));
}

uint64_t sub_1BB1CB570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];

  v25 = a7;
  v26 = a8;
  v17 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v10, (uint64_t)v19);
  sub_1BB1C32F8();
  v21 = &v19[*(int *)(v20 + 48)];
  v22 = *((_OWORD *)v21 + 1);
  v27[0] = *(_OWORD *)v21;
  v27[1] = v22;
  v23 = a10(a1, a2, a3, a4, a5, a6, v25, v26, a9);
  sub_1BB1C3360((uint64_t)v27);
  sub_1BA6DB314((uint64_t)v19);
  return v23;
}

uint64_t sub_1BB1CB66C(uint64_t a1, uint64_t a2)
{
  return sub_1BB1CB678(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.contextMenu.getter);
}

uint64_t sub_1BB1CB678(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[2];

  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1CAE78(v3, (uint64_t)v6);
  sub_1BB1C32F8();
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = *((_OWORD *)v8 + 1);
  v15[0] = *(_OWORD *)v8;
  v15[1] = v9;
  v13 = a3(v7, v10, v11, v12);
  sub_1BB1C3360((uint64_t)v15);
  sub_1BA6DB314((uint64_t)v6);
  return v13;
}

uint64_t sub_1BB1CB718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return FormatModel.contextMenuWithContext<A, B, C, D>(_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1BB1CB724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return FormatModel.debugContextMenuWithContext<A, B, C, D>(_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t _s8NewsFeed11FormatModelO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  sub_1BB1D4DA4();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v12[*(int *)(v13 + 48)];
  sub_1BB1CAE78(a1, (uint64_t)v12);
  sub_1BB1CAE78(a2, v14);
  sub_1BA6DA07C((uint64_t)v12, (uint64_t)v9);
  sub_1BA6DA07C(v14, (uint64_t)v6);
  FeedItem.identifier.getter();
  v16 = v15;
  v18 = v17;
  FeedItem.identifier.getter();
  if (v16 == v20 && v18 == v19)
    v22 = 1;
  else
    v22 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB1C32F8();
  v24 = *(int *)(v23 + 48);
  v25 = (uint64_t)&v12[v24];
  v26 = v14 + v24;
  sub_1BA6DB314((uint64_t)v6);
  sub_1BA6DB314((uint64_t)v9);
  sub_1BB1C3360(v26);
  sub_1BB1C3360(v25);
  return v22 & 1;
}

uint64_t sub_1BB1CB8C0()
{
  return sub_1BB1CB974(&qword_1ED3A53C8, (uint64_t)&protocol conformance descriptor for FormatModel);
}

uint64_t sub_1BB1CB8E4()
{
  return sub_1BB1CB974((unint64_t *)&unk_1ED3A53D0, (uint64_t)&protocol conformance descriptor for FormatModel);
}

uint64_t sub_1BB1CB908()
{
  return sub_1BB1CB974(&qword_1ED3A53E8, (uint64_t)&protocol conformance descriptor for FormatModel);
}

uint64_t sub_1BB1CB92C()
{
  return sub_1BB1CB974(&qword_1ED3A53C0, (uint64_t)&protocol conformance descriptor for FormatModel);
}

uint64_t sub_1BB1CB950()
{
  return sub_1BB1CB974(&qword_1ED3A53F0, (uint64_t)&protocol conformance descriptor for FormatModel);
}

uint64_t sub_1BB1CB974(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatModel();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for FormatModel(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int *v60;
  uint64_t v61;
  char *v62;
  int *v63;
  unsigned int (*v64)(char *, uint64_t, int *);
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  id v71;
  __int128 v72;
  int v73;
  void *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  id v78;
  id v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  unint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  _QWORD *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  __int128 v145;
  _OWORD *v146;
  _OWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  unsigned int (*v155)(char *, uint64_t, uint64_t);
  uint64_t v156;
  __int128 v157;
  _OWORD *v158;
  _OWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  int *v170;
  unsigned int (*v171)(char *, uint64_t, int *);
  uint64_t v172;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  id v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  _OWORD *v189;
  _OWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  __int128 v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _OWORD *v204;
  _OWORD *v205;
  __int128 v206;
  void *v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  id v211;
  id v212;
  __int128 v213;
  uint64_t v214;
  void *v215;
  id v216;
  __int128 v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  id v221;
  _QWORD *v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  id v229;
  _QWORD *v230;
  unint64_t v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  id v237;
  id v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  char *v244;
  char *v245;
  id v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  id v266;
  _QWORD *v267;
  unint64_t v268;
  uint64_t v269;
  void *v270;
  void (*v271)(char *, _QWORD, uint64_t, int *);
  id v272;
  int *v273;
  uint64_t v274;
  char *v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  int EnumCaseMultiPayload;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  __int128 v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char *result;
  uint64_t v291;
  char *v292;
  int *v293;
  uint64_t v294;
  int *v295;
  char *v296;
  uint64_t v297;
  int *v298;
  _QWORD *__dst;
  char *__dsta;
  _QWORD *__dstb;
  char *__dstc;
  char *__dstd;
  int *v304;
  char *v305;
  void (*v306)(char *, char *, uint64_t);
  uint64_t v307;
  uint64_t v308;
  char *v309;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v6 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v7;
      v8 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v8;
      a1[32] = a2[32];
      v9 = a2 + 40;
      v10 = *((_QWORD *)a2 + 6);
      swift_bridgeObjectRetain();
      if (v10 >= 0x11)
      {
        *((_QWORD *)a1 + 5) = *v9;
        *((_QWORD *)a1 + 6) = v10;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)v9;
      }
      goto LABEL_142;
    case 1u:
      v49 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v49;
      v50 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v50;
      a1[32] = a2[32];
      v51 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v51;
      v52 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v52;
      v53 = a2 + 72;
      v54 = *((_QWORD *)a2 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v54 >= 0x11)
      {
        *((_QWORD *)a1 + 9) = *v53;
        *((_QWORD *)a1 + 10) = v54;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v53;
      }
      goto LABEL_142;
    case 2u:
      v12 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v12;
      v13 = (int *)type metadata accessor for FeedBannerAd();
      v14 = v13[5];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_1BB8721C0();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      *(_QWORD *)&a1[v13[6]] = *(_QWORD *)&a2[v13[6]];
      v19 = v13[7];
      v20 = &a1[v19];
      v21 = &a2[v19];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v21[8];
      v22 = v13[8];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = *((_QWORD *)v24 + 1);
      if (v25 >= 0x11)
        goto LABEL_39;
      *(_OWORD *)v23 = *(_OWORD *)v24;
      goto LABEL_142;
    case 3u:
      v55 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v55;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      v56 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v56;
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      a1[56] = a2[56];
      v304 = (int *)type metadata accessor for FeedHeadline(0);
      v57 = v304[10];
      v58 = &a1[v57];
      v59 = &a2[v57];
      *v58 = a2[v57];
      v58[1] = a2[v57 + 1];
      v60 = (int *)type metadata accessor for FeedHeadline.State(0);
      v61 = v60[6];
      __dsta = &v58[v61];
      v62 = &v59[v61];
      v63 = (int *)type metadata accessor for SharedItem();
      v297 = *((_QWORD *)v63 - 1);
      v64 = *(unsigned int (**)(char *, uint64_t, int *))(v297 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v64(v62, 1, v63))
      {
        v65 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dsta, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        v174 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(__dsta, v62, v174);
        __dsta[v63[5]] = v62[v63[5]];
        v175 = v63[6];
        v176 = *(void **)&v62[v175];
        *(_QWORD *)&__dsta[v175] = v176;
        v177 = v63[7];
        v309 = &__dsta[v177];
        v296 = &v62[v177];
        v178 = sub_1BB86C67C();
        v179 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
        v180 = v176;
        v179(v309, v296, v178);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v297 + 56))(__dsta, 0, 1, v63);
      }
      v58[v60[7]] = v59[v60[7]];
      v58[v60[8]] = v59[v60[8]];
      v58[v60[9]] = v59[v60[9]];
      v58[v60[10]] = v59[v60[10]];
      v181 = v304[11];
      v182 = &a1[v181];
      v183 = &a2[v181];
      v184 = sub_1BB871B24();
      v185 = *(_QWORD *)(v184 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v185 + 48))(v183, 1, v184))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v182, v183, v184);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v185 + 56))(v182, 0, 1, v184);
      }
      v193 = v304[12];
      v194 = &a1[v193];
      v195 = &a2[v193];
      v196 = *((_QWORD *)v195 + 1);
      if (v196 >= 0x11)
      {
        *(_QWORD *)v194 = *(_QWORD *)v195;
        *((_QWORD *)v194 + 1) = v196;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v194 = *(_OWORD *)v195;
      }
      v197 = v304[13];
      v198 = *(_QWORD *)&a2[v197];
      if (v198 >= 2)
      {
        if (v198 == 2)
        {
          *(_QWORD *)&a1[v197] = 2;
        }
        else
        {
          *(_QWORD *)&a1[v197] = v198;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)&a1[v197] = v198;
      }
      v214 = v304[14];
      v215 = *(void **)&a2[v214];
      *(_QWORD *)&a1[v214] = v215;
      v216 = v215;
      goto LABEL_142;
    case 4u:
      v26 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v26;
      a1[16] = a2[16];
      v27 = a2 + 24;
      v28 = *((_QWORD *)a2 + 4);
      if (v28 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v27;
        *((_QWORD *)a1 + 4) = v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v27;
      }
      v116 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v116;
      v117 = (int *)type metadata accessor for FeedWebEmbed();
      v118 = v117[8];
      v119 = &a1[v118];
      v120 = &a2[v118];
      v121 = sub_1BB86C67C();
      v122 = *(_QWORD *)(v121 - 8);
      v123 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
      swift_bridgeObjectRetain();
      v123(v119, v120, v121);
      v124 = v117[9];
      v125 = &a1[v124];
      v126 = &a2[v124];
      v308 = v121;
      v306 = v123;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(&a2[v124], 1, v121))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      }
      else
      {
        v123(v125, v126, v121);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v125, 0, 1, v121);
      }
      *(_QWORD *)&a1[v117[10]] = *(_QWORD *)&a2[v117[10]];
      *(_QWORD *)&a1[v117[11]] = *(_QWORD *)&a2[v117[11]];
      v150 = v117[12];
      v151 = &a1[v150];
      v152 = &a2[v150];
      v153 = type metadata accessor for FeedHeadline(0);
      v154 = *(_QWORD *)(v153 - 8);
      v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48);
      swift_retain();
      swift_retain();
      if (v155(v152, 1, v153))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
      }
      else
      {
        v294 = v154;
        v295 = (int *)v153;
        v298 = v117;
        __dstc = v152;
        v162 = *((_QWORD *)v152 + 1);
        *(_QWORD *)v151 = *(_QWORD *)v152;
        *((_QWORD *)v151 + 1) = v162;
        *((_QWORD *)v151 + 2) = *((_QWORD *)v152 + 2);
        v151[24] = v152[24];
        v163 = *((_QWORD *)v152 + 5);
        *((_QWORD *)v151 + 4) = *((_QWORD *)v152 + 4);
        *((_QWORD *)v151 + 5) = v163;
        *((_QWORD *)v151 + 6) = *((_QWORD *)v152 + 6);
        v151[56] = v152[56];
        v164 = *(int *)(v153 + 40);
        v165 = &v151[v164];
        v166 = &v152[v164];
        *v165 = *v166;
        v165[1] = v166[1];
        v167 = type metadata accessor for FeedHeadline.State(0);
        v168 = *(int *)(v167 + 24);
        v292 = &v165[v168];
        v293 = (int *)v167;
        v169 = &v166[v168];
        v170 = (int *)type metadata accessor for SharedItem();
        v291 = *((_QWORD *)v170 - 1);
        v171 = *(unsigned int (**)(char *, uint64_t, int *))(v291 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v171(v169, 1, v170))
        {
          v172 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v292, v169, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
        }
        else
        {
          v240 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(v292, v169, v240);
          v292[v170[5]] = v169[v170[5]];
          v241 = v170[6];
          v242 = *(void **)&v169[v241];
          *(_QWORD *)&v292[v241] = v242;
          v243 = v170[7];
          v244 = &v292[v243];
          v245 = &v169[v243];
          v246 = v242;
          v306(v244, v245, v308);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v291 + 56))(v292, 0, 1, v170);
        }
        v165[v293[7]] = v166[v293[7]];
        v165[v293[8]] = v166[v293[8]];
        v165[v293[9]] = v166[v293[9]];
        v165[v293[10]] = v166[v293[10]];
        v247 = v295[11];
        v248 = &v151[v247];
        v249 = &__dstc[v247];
        v250 = sub_1BB871B24();
        v251 = *(_QWORD *)(v250 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v251 + 48))(v249, 1, v250))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v251 + 16))(v248, v249, v250);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v248, 0, 1, v250);
        }
        v117 = v298;
        v253 = v295[12];
        v254 = &v151[v253];
        v255 = &__dstc[v253];
        v256 = *((_QWORD *)v255 + 1);
        if (v256 >= 0x11)
        {
          *(_QWORD *)v254 = *(_QWORD *)v255;
          *((_QWORD *)v254 + 1) = v256;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v254 = *(_OWORD *)v255;
        }
        v257 = v295[13];
        v258 = *(_QWORD *)&__dstc[v257];
        if (v258 >= 2)
        {
          if (v258 == 2)
          {
            *(_QWORD *)&v151[v257] = 2;
          }
          else
          {
            *(_QWORD *)&v151[v257] = v258;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v151[v257] = v258;
        }
        v269 = v295[14];
        v270 = *(void **)&__dstc[v269];
        *(_QWORD *)&v151[v269] = v270;
        v271 = *(void (**)(char *, _QWORD, uint64_t, int *))(v294 + 56);
        v272 = v270;
        v271(v151, 0, 1, v295);
      }
      v273 = v117;
      v274 = v117[13];
      v275 = &a1[v274];
      v276 = &a2[v274];
      v277 = type metadata accessor for WebEmbedDataVisualization();
      v278 = *(_QWORD *)(v277 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v278 + 48))(v276, 1, v277))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v275, v276, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v281 = *(_QWORD *)v276;
        if (EnumCaseMultiPayload == 1)
        {
          v282 = *((_QWORD *)v276 + 1);
          *(_QWORD *)v275 = v281;
          *((_QWORD *)v275 + 1) = v282;
          v283 = type metadata accessor for GenericDataVisualization();
          v284 = *(int *)(v283 + 20);
          __dstd = &v275[v284];
          v285 = &v276[v284];
          swift_bridgeObjectRetain();
          v306(__dstd, v285, v308);
          *(_QWORD *)&v275[*(int *)(v283 + 24)] = *(_QWORD *)&v276[*(int *)(v283 + 24)];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_QWORD *)v275 = v281;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v278 + 56))(v275, 0, 1, v277);
      }
      a1[v273[14]] = a2[v273[14]];
      goto LABEL_142;
    case 5u:
      v66 = *(void **)a2;
      v67 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v67;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v68 = (void *)*((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v68;
      a1[64] = a2[64];
      v69 = *((_QWORD *)a2 + 10);
      v70 = v66;
      swift_bridgeObjectRetain();
      v71 = v68;
      if (v69 == 1)
      {
        v72 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v72;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v69;
        v129 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v129;
        v131 = (void *)*((_QWORD *)a2 + 13);
        v130 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = v131;
        *((_QWORD *)a1 + 14) = v130;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v132 = v131;
      }
      v133 = a2 + 120;
      v134 = *((_QWORD *)a2 + 16);
      if (v134 >= 0x11)
      {
        *((_QWORD *)a1 + 15) = *v133;
        *((_QWORD *)a1 + 16) = v134;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v133;
      }
      a1[136] = a2[136];
      goto LABEL_142;
    case 6u:
      v73 = a2[281];
      if (v73 == 2)
      {
        v200 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v200;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v201 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v201;
        v202 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v202;
        v203 = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v203 == 1)
        {
          v204 = a1 + 80;
          v205 = a2 + 80;
          v206 = *((_OWORD *)a2 + 8);
          *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 8) = v206;
          a1[144] = a2[144];
          goto LABEL_126;
        }
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = v203;
        v224 = *((_QWORD *)a2 + 15);
        swift_bridgeObjectRetain();
        if (v224)
        {
          v225 = *((_QWORD *)a2 + 16);
          *((_QWORD *)a1 + 15) = v224;
          *((_QWORD *)a1 + 16) = v225;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v224 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v224);
          *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        }
        else
        {
          v286 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v286;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        a1[144] = a2[144];
      }
      else
      {
        if (v73 == 1)
        {
          v74 = *(void **)a2;
          v75 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v75;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          v76 = (void *)*((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = v76;
          a1[64] = a2[64];
          v77 = *((_QWORD *)a2 + 10);
          v78 = v74;
          swift_bridgeObjectRetain();
          v79 = v76;
          if (v77 == 1)
          {
            v80 = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            *(_OWORD *)(a1 + 88) = v80;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          }
          else
          {
            *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
            *((_QWORD *)a1 + 10) = v77;
            v218 = *((_QWORD *)a2 + 12);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            *((_QWORD *)a1 + 12) = v218;
            v220 = (void *)*((_QWORD *)a2 + 13);
            v219 = *((_QWORD *)a2 + 14);
            *((_QWORD *)a1 + 13) = v220;
            *((_QWORD *)a1 + 14) = v219;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v221 = v220;
          }
          v222 = a2 + 120;
          v223 = *((_QWORD *)a2 + 16);
          if (v223 >= 0x11)
          {
            *((_QWORD *)a1 + 15) = *v222;
            *((_QWORD *)a1 + 16) = v223;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v222;
          }
          v205 = a2 + 144;
          v232 = (void *)*((_QWORD *)a2 + 18);
          a1[136] = a2[136];
          if (v232)
          {
            v233 = *((_QWORD *)a2 + 19);
            v234 = *((_QWORD *)a2 + 20);
            *((_QWORD *)a1 + 18) = v232;
            *((_QWORD *)a1 + 19) = v233;
            *((_QWORD *)a1 + 20) = v234;
            *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
            *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
            a1[184] = a2[184];
            v235 = (void *)*((_QWORD *)a2 + 25);
            *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
            *((_QWORD *)a1 + 25) = v235;
            a1[208] = a2[208];
            v236 = *((_QWORD *)a2 + 28);
            v237 = v232;
            swift_bridgeObjectRetain();
            v238 = v235;
            if (v236 == 1)
            {
              v239 = *(_OWORD *)(a2 + 232);
              *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
              *(_OWORD *)(a1 + 232) = v239;
              *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
            }
            else
            {
              *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
              *((_QWORD *)a1 + 28) = v236;
              v263 = *((_QWORD *)a2 + 30);
              *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
              *((_QWORD *)a1 + 30) = v263;
              v265 = (void *)*((_QWORD *)a2 + 31);
              v264 = *((_QWORD *)a2 + 32);
              *((_QWORD *)a1 + 31) = v265;
              *((_QWORD *)a1 + 32) = v264;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v266 = v265;
            }
            v267 = a2 + 264;
            v268 = *((_QWORD *)a2 + 34);
            if (v268 >= 0x11)
            {
              *((_QWORD *)a1 + 33) = *v267;
              *((_QWORD *)a1 + 34) = v268;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)v267;
            }
            a1[280] = a2[280];
            goto LABEL_141;
          }
          v204 = a1 + 144;
          v259 = *((_OWORD *)a2 + 16);
          *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
          *((_OWORD *)a1 + 16) = v259;
          *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
          v260 = *((_OWORD *)a2 + 12);
          *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
          *((_OWORD *)a1 + 12) = v260;
          v261 = *((_OWORD *)a2 + 14);
          *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
          *((_OWORD *)a1 + 14) = v261;
LABEL_126:
          v262 = v205[1];
          *v204 = *v205;
          v204[1] = v262;
          goto LABEL_141;
        }
        v207 = *(void **)a2;
        v208 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v208;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v209 = (void *)*((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v209;
        a1[64] = a2[64];
        v210 = *((_QWORD *)a2 + 10);
        v211 = v207;
        swift_bridgeObjectRetain();
        v212 = v209;
        if (v210 == 1)
        {
          v213 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v213;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = v210;
          v226 = *((_QWORD *)a2 + 12);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = v226;
          v228 = (void *)*((_QWORD *)a2 + 13);
          v227 = *((_QWORD *)a2 + 14);
          *((_QWORD *)a1 + 13) = v228;
          *((_QWORD *)a1 + 14) = v227;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v229 = v228;
        }
        v230 = a2 + 120;
        v231 = *((_QWORD *)a2 + 16);
        if (v231 >= 0x11)
        {
          *((_QWORD *)a1 + 15) = *v230;
          *((_QWORD *)a1 + 16) = v231;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v230;
        }
        a1[136] = a2[136];
      }
LABEL_141:
      a1[281] = v73;
LABEL_142:
      swift_storeEnumTagMultiPayload();
LABEL_143:
      sub_1BB1C32F8();
      v288 = *(int *)(v287 + 48);
      v289 = *(_QWORD *)&a2[v288 + 24];
      *(_QWORD *)&a1[v288 + 24] = v289;
      (**(void (***)(void))(v289 - 8))();
      return a1;
    case 7u:
      v81 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v81;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v82 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v82;
      v83 = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = v83;
      v84 = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v84 == 1)
      {
        v85 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v85;
        a1[144] = a2[144];
        v86 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v86;
      }
      else
      {
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = v84;
        v135 = *((_QWORD *)a2 + 15);
        swift_bridgeObjectRetain();
        if (v135)
        {
          v136 = *((_QWORD *)a2 + 16);
          *((_QWORD *)a1 + 15) = v135;
          *((_QWORD *)a1 + 16) = v136;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v135 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v135);
          *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        }
        else
        {
          v217 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v217;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        a1[144] = a2[144];
      }
      goto LABEL_142;
    case 8u:
      v87 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v87;
      v88 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v89 = &a1[v88];
      v90 = &a2[v88];
      v91 = *(_QWORD *)&a2[v88 + 8];
      *(_QWORD *)v89 = *(_QWORD *)&a2[v88];
      *((_QWORD *)v89 + 1) = v91;
      v92 = *(_QWORD *)&a2[v88 + 24];
      *((_QWORD *)v89 + 2) = *(_QWORD *)&a2[v88 + 16];
      *((_QWORD *)v89 + 3) = v92;
      v93 = type metadata accessor for FormatCustomItem.Resolved();
      v94 = *(int *)(v93 + 24);
      v305 = &v89[v94];
      v307 = v93;
      v95 = &v90[v94];
      v96 = type metadata accessor for FormatCustomItem.Action();
      __dstb = *(_QWORD **)(v96 - 8);
      v97 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v97(v95, 1, v96))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v305, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      }
      else
      {
        v187 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v305, v95, v187);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstb[7])(v305, 0, 1, v96);
      }
      *(_QWORD *)&v89[*(int *)(v307 + 28)] = *(_QWORD *)&v90[*(int *)(v307 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_142;
    case 9u:
      v29 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v29;
      v30 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v30;
      v31 = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31)
      {
        v32 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = v31;
        *((_QWORD *)a1 + 8) = v32;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 32), v31);
      }
      else
      {
        v145 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v145;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      }
      v146 = a1 + 72;
      v147 = a2 + 72;
      v148 = *((_QWORD *)a2 + 12);
      if (v148)
      {
        v149 = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 12) = v148;
        *((_QWORD *)a1 + 13) = v149;
        (**(void (***)(_OWORD *, _OWORD *))(v148 - 8))(v146, v147);
      }
      else
      {
        v157 = *(_OWORD *)(a2 + 88);
        *v146 = *v147;
        *(_OWORD *)(a1 + 88) = v157;
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      }
      v158 = a1 + 112;
      v159 = a2 + 112;
      v160 = *((_QWORD *)a2 + 17);
      if (v160)
      {
        v161 = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 17) = v160;
        *((_QWORD *)a1 + 18) = v161;
        (**(void (***)(_OWORD *, _OWORD *))(v160 - 8))(v158, v159);
      }
      else
      {
        v173 = *((_OWORD *)a2 + 8);
        *v158 = *v159;
        *((_OWORD *)a1 + 8) = v173;
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      }
      goto LABEL_142;
    case 0xAu:
      v99 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v99;
      v100 = (int *)type metadata accessor for FeedEngagementBanner();
      v101 = v100[5];
      v102 = &a1[v101];
      v103 = &a2[v101];
      v104 = sub_1BB86EDAC();
      v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16);
      swift_bridgeObjectRetain();
      v105(v102, v103, v104);
      *(_QWORD *)&a1[v100[6]] = *(_QWORD *)&a2[v100[6]];
      v106 = v100[7];
      v107 = &a1[v106];
      v108 = &a2[v106];
      *(_QWORD *)v107 = *(_QWORD *)v108;
      v107[8] = v108[8];
      v109 = v100[8];
      v23 = &a1[v109];
      v24 = &a2[v109];
      v25 = *((_QWORD *)v24 + 1);
      if (v25 >= 0x11)
      {
LABEL_39:
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *((_QWORD *)v23 + 1) = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v23 = *(_OWORD *)v24;
      }
      goto LABEL_142;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain();
      goto LABEL_142;
    case 0xCu:
      v33 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v33;
      v34 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v34;
      a1[32] = a2[32];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_142;
    case 0xDu:
      v110 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v110;
      a1[16] = a2[16];
      v111 = a2 + 24;
      v112 = *((_QWORD *)a2 + 4);
      if (v112 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v111;
        *((_QWORD *)a1 + 4) = v112;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v111;
      }
      v137 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v137;
      v138 = (void *)*((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v138;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v139 = *((_QWORD *)a2 + 14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v140 = v138;
      swift_bridgeObjectRetain();
      if (v139)
      {
        v141 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = v139;
        *((_QWORD *)a1 + 15) = v141;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v139 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88), v139);
      }
      else
      {
        v188 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v188;
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      }
      v189 = a1 + 128;
      v190 = a2 + 128;
      v191 = *((_QWORD *)a2 + 19);
      if (v191)
      {
        v192 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = v191;
        *((_QWORD *)a1 + 20) = v192;
        (**(void (***)(_OWORD *, _OWORD *))(v191 - 8))(v189, v190);
      }
      else
      {
        v199 = *((_OWORD *)a2 + 9);
        *v189 = *v190;
        *((_OWORD *)a1 + 9) = v199;
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      }
      goto LABEL_142;
    case 0xEu:
      v35 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v35;
      a1[16] = a2[16];
      v36 = a2 + 24;
      v37 = *((_QWORD *)a2 + 4);
      if (v37 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v36;
        *((_QWORD *)a1 + 4) = v37;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v36;
      }
      v128 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v128;
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_142;
    case 0xFu:
      v113 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v113;
      a1[16] = a2[16];
      v114 = a2 + 24;
      v115 = *((_QWORD *)a2 + 4);
      if (v115 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v114;
        *((_QWORD *)a1 + 4) = v115;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v114;
      }
      v142 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v142;
      v143 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&a1[v143] = *(_QWORD *)&a2[v143];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v144 = (char *)&loc_1BB1CC4CC + 4 * word_1BB8F625A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x10u:
      v38 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v38;
      v39 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v39;
      v40 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v40;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      v41 = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 10) = v41;
      v42 = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
      *((_QWORD *)a1 + 12) = v42;
      *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      a1[112] = a2[112];
      v43 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v43;
      a1[136] = a2[136];
      v44 = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      *((_QWORD *)a1 + 19) = v44;
      v45 = *((_QWORD *)a2 + 21);
      *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 21) = v45;
      a1[184] = a2[184];
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      v46 = *((_QWORD *)a2 + 25);
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      *((_QWORD *)a1 + 25) = v46;
      a1[224] = a2[224];
      v47 = *((_QWORD *)a2 + 27);
      *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
      *((_QWORD *)a1 + 27) = v47;
      __dst = a2 + 232;
      v48 = *((_QWORD *)a2 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48 >= 0x11)
      {
        *((_QWORD *)a1 + 29) = *__dst;
        *((_QWORD *)a1 + 30) = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)__dst;
      }
      goto LABEL_142;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_143;
  }
}

uint64_t destroy for FormatModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v42;
  int EnumCaseMultiPayload;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;

  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 48) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 2u:
      swift_bridgeObjectRelease();
      v2 = type metadata accessor for FeedBannerAd();
      v3 = a1 + *(int *)(v2 + 20);
      v4 = sub_1BB8721C0();
      goto LABEL_53;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v5 = (int *)type metadata accessor for FeedHeadline(0);
      v6 = a1 + v5[10];
      v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v8 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
      {
        v9 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);

        v10 = v7 + *(int *)(v8 + 28);
        v11 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      }
      v12 = a1 + v5[11];
      v13 = sub_1BB871B24();
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      if (*(_QWORD *)(a1 + v5[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v5[13]) >= 3uLL)
        swift_unknownObjectRelease();

      goto LABEL_71;
    case 4u:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (int *)type metadata accessor for FeedWebEmbed();
      v16 = a1 + v15[8];
      v17 = sub_1BB86C67C();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v19(v16, v17);
      v20 = a1 + v15[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17))
        v19(v20, v17);
      swift_release();
      swift_release();
      v21 = a1 + v15[12];
      v22 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v22 - 1) + 48))(v21, 1, v22))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v23 = v22[10];
        v24 = v21 + v23 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v25 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
        {
          v26 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);

          v19(v24 + *(int *)(v25 + 28), v17);
        }
        v27 = v21 + v22[11];
        v28 = sub_1BB871B24();
        v29 = *(_QWORD *)(v28 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
        if (*(_QWORD *)(v21 + v22[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v21 + v22[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v30 = a1 + v15[13];
      v31 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
        goto LABEL_71;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_55;
      swift_bridgeObjectRelease();
      v32 = type metadata accessor for GenericDataVisualization();
      v19(v30 + *(int *)(v32 + 20), v17);
      goto LABEL_70;
    case 5u:
      goto LABEL_36;
    case 6u:
      v33 = *(unsigned __int8 *)(a1 + 281);
      if (v33 == 2)
        goto LABEL_40;
      if (v33 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v42 = *(void **)(a1 + 144);
        if (!v42)
          goto LABEL_71;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 272) < 0x11uLL)
          goto LABEL_71;
LABEL_70:
        swift_bridgeObjectRelease();
        goto LABEL_71;
      }
      if (*(_BYTE *)(a1 + 281))
        goto LABEL_71;
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
        goto LABEL_70;
LABEL_71:
      sub_1BB1C32F8();
      return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v40 + 48));
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 120))
          __swift_destroy_boxed_opaque_existential_1(a1 + 96);
      }
      goto LABEL_71;
    case 8u:
      swift_bridgeObjectRelease();
      v34 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = v34 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v36 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
      {
        v37 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v35, v37);
      }
      goto LABEL_70;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 56))
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      if (*(_QWORD *)(a1 + 96))
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      if (*(_QWORD *)(a1 + 136))
        __swift_destroy_boxed_opaque_existential_1(a1 + 112);
      goto LABEL_71;
    case 0xAu:
      swift_bridgeObjectRelease();
      v2 = type metadata accessor for FeedEngagementBanner();
      v3 = a1 + *(int *)(v2 + 20);
      v4 = sub_1BB86EDAC();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      if (*(_QWORD *)(a1 + *(int *)(v2 + 32) + 8) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 0xBu:
LABEL_55:
      swift_release();
      goto LABEL_71;
    case 0xCu:
      goto LABEL_64;
    case 0xDu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 112))
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      if (*(_QWORD *)(a1 + 152))
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      goto LABEL_71;
    case 0xEu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_64:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_71;
    case 0xFu:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v39 = v38 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_90;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v44 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v39, 1, v44))
            {
              v45 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v39, v45);
            }
          }
          v46 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v47 = v39 + *(int *)(v46 + 20);
          v48 = swift_getEnumCaseMultiPayload();
          if (v48 == 5 || v48 == 4)
          {
            v49 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v47, 1, v49))
            {
              v50 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v47, v50);
            }
          }
          v39 += *(int *)(v46 + 24);
LABEL_90:
          v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 5 || v51 == 4)
          {
            v52 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v39, 1, v52))goto LABEL_101;
          }
          goto LABEL_71;
        case 2u:
          v53 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v39, 1, v53))
            goto LABEL_71;
          v54 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v39, v54);
          v55 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v56 = v39 + *(int *)(v55 + 24);
          swift_bridgeObjectRelease();
          v57 = *(_QWORD *)(v56 + 24);
          if (v57 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v56 + 16), v57);
          goto LABEL_70;
        case 3u:
          v58 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v59 = v39 + *(int *)(v58 + 24);
          v60 = type metadata accessor for PuzzleStreak();
          v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48);
          if (!v61(v59, 1, v60))
          {
            v62 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v59, v62);
          }
          v39 += *(int *)(v58 + 28);
          if (!v61(v39, 1, v60))
          {
LABEL_101:
            v63 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v39, v63);
          }
          goto LABEL_71;
        default:
          goto LABEL_71;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 240) >= 0x11uLL)
        goto LABEL_70;
      goto LABEL_71;
    default:
      goto LABEL_71;
  }
}

char *initializeWithCopy for FormatModel(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int *v57;
  uint64_t v58;
  char *v59;
  int *v60;
  unsigned int (*v61)(char *, uint64_t, int *);
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  id v68;
  __int128 v69;
  int v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  id v129;
  _QWORD *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  __int128 v142;
  _OWORD *v143;
  _OWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  unsigned int (*v152)(char *, uint64_t, uint64_t);
  uint64_t v153;
  __int128 v154;
  _OWORD *v155;
  _OWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  int *v167;
  unsigned int (*v168)(char *, uint64_t, int *);
  uint64_t v169;
  __int128 v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, char *, uint64_t);
  id v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  _OWORD *v186;
  _OWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v195;
  __int128 v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _OWORD *v201;
  _OWORD *v202;
  __int128 v203;
  void *v204;
  uint64_t v205;
  void *v206;
  uint64_t v207;
  id v208;
  id v209;
  __int128 v210;
  uint64_t v211;
  void *v212;
  id v213;
  __int128 v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  id v218;
  _QWORD *v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  id v226;
  _QWORD *v227;
  unint64_t v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  uint64_t v233;
  id v234;
  id v235;
  __int128 v236;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  id v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  unint64_t v253;
  uint64_t v254;
  unint64_t v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  uint64_t v260;
  uint64_t v261;
  void *v262;
  id v263;
  _QWORD *v264;
  unint64_t v265;
  uint64_t v266;
  void *v267;
  void (*v268)(char *, _QWORD, uint64_t, int *);
  id v269;
  int *v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int EnumCaseMultiPayload;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  __int128 v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *result;
  uint64_t v288;
  char *v289;
  int *v290;
  uint64_t v291;
  int *v292;
  char *v293;
  uint64_t v294;
  int *v295;
  _QWORD *__dst;
  char *__dsta;
  _QWORD *__dstb;
  char *__dstc;
  char *__dstd;
  int *v301;
  char *v302;
  void (*v303)(char *, char *, uint64_t);
  uint64_t v304;
  uint64_t v305;
  char *v306;

  v4 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v5 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v5;
      v6 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v6;
      a1[32] = a2[32];
      v7 = a2 + 40;
      v8 = *((_QWORD *)a2 + 6);
      swift_bridgeObjectRetain();
      if (v8 >= 0x11)
      {
        *((_QWORD *)a1 + 5) = *v7;
        *((_QWORD *)a1 + 6) = v8;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)v7;
      }
      goto LABEL_140;
    case 1u:
      v46 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v46;
      v47 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v47;
      a1[32] = a2[32];
      v48 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v48;
      v49 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v49;
      v50 = a2 + 72;
      v51 = *((_QWORD *)a2 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v51 >= 0x11)
      {
        *((_QWORD *)a1 + 9) = *v50;
        *((_QWORD *)a1 + 10) = v51;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v50;
      }
      goto LABEL_140;
    case 2u:
      v9 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v9;
      v10 = (int *)type metadata accessor for FeedBannerAd();
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_1BB8721C0();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      *(_QWORD *)&a1[v10[6]] = *(_QWORD *)&a2[v10[6]];
      v16 = v10[7];
      v17 = &a1[v16];
      v18 = &a2[v16];
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[8] = v18[8];
      v19 = v10[8];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = *((_QWORD *)v21 + 1);
      if (v22 >= 0x11)
        goto LABEL_37;
      *(_OWORD *)v20 = *(_OWORD *)v21;
      goto LABEL_140;
    case 3u:
      v52 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v52;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      v53 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v53;
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      a1[56] = a2[56];
      v301 = (int *)type metadata accessor for FeedHeadline(0);
      v54 = v301[10];
      v55 = &a1[v54];
      v56 = &a2[v54];
      *v55 = a2[v54];
      v55[1] = a2[v54 + 1];
      v57 = (int *)type metadata accessor for FeedHeadline.State(0);
      v58 = v57[6];
      __dsta = &v55[v58];
      v59 = &v56[v58];
      v60 = (int *)type metadata accessor for SharedItem();
      v294 = *((_QWORD *)v60 - 1);
      v61 = *(unsigned int (**)(char *, uint64_t, int *))(v294 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v61(v59, 1, v60))
      {
        v62 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dsta, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v171 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(__dsta, v59, v171);
        __dsta[v60[5]] = v59[v60[5]];
        v172 = v60[6];
        v173 = *(void **)&v59[v172];
        *(_QWORD *)&__dsta[v172] = v173;
        v174 = v60[7];
        v306 = &__dsta[v174];
        v293 = &v59[v174];
        v175 = sub_1BB86C67C();
        v176 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 16);
        v177 = v173;
        v176(v306, v293, v175);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v294 + 56))(__dsta, 0, 1, v60);
      }
      v55[v57[7]] = v56[v57[7]];
      v55[v57[8]] = v56[v57[8]];
      v55[v57[9]] = v56[v57[9]];
      v55[v57[10]] = v56[v57[10]];
      v178 = v301[11];
      v179 = &a1[v178];
      v180 = &a2[v178];
      v181 = sub_1BB871B24();
      v182 = *(_QWORD *)(v181 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v180, 1, v181))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v179, v180, v181);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
      }
      v190 = v301[12];
      v191 = &a1[v190];
      v192 = &a2[v190];
      v193 = *((_QWORD *)v192 + 1);
      if (v193 >= 0x11)
      {
        *(_QWORD *)v191 = *(_QWORD *)v192;
        *((_QWORD *)v191 + 1) = v193;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v191 = *(_OWORD *)v192;
      }
      v194 = v301[13];
      v195 = *(_QWORD *)&a2[v194];
      if (v195 >= 2)
      {
        if (v195 == 2)
        {
          *(_QWORD *)&a1[v194] = 2;
        }
        else
        {
          *(_QWORD *)&a1[v194] = v195;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)&a1[v194] = v195;
      }
      v211 = v301[14];
      v212 = *(void **)&a2[v211];
      *(_QWORD *)&a1[v211] = v212;
      v213 = v212;
      goto LABEL_140;
    case 4u:
      v23 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v23;
      a1[16] = a2[16];
      v24 = a2 + 24;
      v25 = *((_QWORD *)a2 + 4);
      if (v25 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v24;
        *((_QWORD *)a1 + 4) = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v24;
      }
      v113 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v113;
      v114 = (int *)type metadata accessor for FeedWebEmbed();
      v115 = v114[8];
      v116 = &a1[v115];
      v117 = &a2[v115];
      v118 = sub_1BB86C67C();
      v119 = *(_QWORD *)(v118 - 8);
      v120 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
      swift_bridgeObjectRetain();
      v120(v116, v117, v118);
      v121 = v114[9];
      v122 = &a1[v121];
      v123 = &a2[v121];
      v305 = v118;
      v303 = v120;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(&a2[v121], 1, v118))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        v120(v122, v123, v118);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v122, 0, 1, v118);
      }
      *(_QWORD *)&a1[v114[10]] = *(_QWORD *)&a2[v114[10]];
      *(_QWORD *)&a1[v114[11]] = *(_QWORD *)&a2[v114[11]];
      v147 = v114[12];
      v148 = &a1[v147];
      v149 = &a2[v147];
      v150 = type metadata accessor for FeedHeadline(0);
      v151 = *(_QWORD *)(v150 - 8);
      v152 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48);
      swift_retain();
      swift_retain();
      if (v152(v149, 1, v150))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
      }
      else
      {
        v291 = v151;
        v292 = (int *)v150;
        v295 = v114;
        __dstc = v149;
        v159 = *((_QWORD *)v149 + 1);
        *(_QWORD *)v148 = *(_QWORD *)v149;
        *((_QWORD *)v148 + 1) = v159;
        *((_QWORD *)v148 + 2) = *((_QWORD *)v149 + 2);
        v148[24] = v149[24];
        v160 = *((_QWORD *)v149 + 5);
        *((_QWORD *)v148 + 4) = *((_QWORD *)v149 + 4);
        *((_QWORD *)v148 + 5) = v160;
        *((_QWORD *)v148 + 6) = *((_QWORD *)v149 + 6);
        v148[56] = v149[56];
        v161 = *(int *)(v150 + 40);
        v162 = &v148[v161];
        v163 = &v149[v161];
        *v162 = *v163;
        v162[1] = v163[1];
        v164 = type metadata accessor for FeedHeadline.State(0);
        v165 = *(int *)(v164 + 24);
        v289 = &v162[v165];
        v290 = (int *)v164;
        v166 = &v163[v165];
        v167 = (int *)type metadata accessor for SharedItem();
        v288 = *((_QWORD *)v167 - 1);
        v168 = *(unsigned int (**)(char *, uint64_t, int *))(v288 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v168(v166, 1, v167))
        {
          v169 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v289, v166, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
        }
        else
        {
          v237 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v237 - 8) + 16))(v289, v166, v237);
          v289[v167[5]] = v166[v167[5]];
          v238 = v167[6];
          v239 = *(void **)&v166[v238];
          *(_QWORD *)&v289[v238] = v239;
          v240 = v167[7];
          v241 = &v289[v240];
          v242 = &v166[v240];
          v243 = v239;
          v303(v241, v242, v305);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v288 + 56))(v289, 0, 1, v167);
        }
        v162[v290[7]] = v163[v290[7]];
        v162[v290[8]] = v163[v290[8]];
        v162[v290[9]] = v163[v290[9]];
        v162[v290[10]] = v163[v290[10]];
        v244 = v292[11];
        v245 = &v148[v244];
        v246 = &__dstc[v244];
        v247 = sub_1BB871B24();
        v248 = *(_QWORD *)(v247 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48))(v246, 1, v247))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v248 + 16))(v245, v246, v247);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
        }
        v114 = v295;
        v250 = v292[12];
        v251 = &v148[v250];
        v252 = &__dstc[v250];
        v253 = *((_QWORD *)v252 + 1);
        if (v253 >= 0x11)
        {
          *(_QWORD *)v251 = *(_QWORD *)v252;
          *((_QWORD *)v251 + 1) = v253;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v251 = *(_OWORD *)v252;
        }
        v254 = v292[13];
        v255 = *(_QWORD *)&__dstc[v254];
        if (v255 >= 2)
        {
          if (v255 == 2)
          {
            *(_QWORD *)&v148[v254] = 2;
          }
          else
          {
            *(_QWORD *)&v148[v254] = v255;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v148[v254] = v255;
        }
        v266 = v292[14];
        v267 = *(void **)&__dstc[v266];
        *(_QWORD *)&v148[v266] = v267;
        v268 = *(void (**)(char *, _QWORD, uint64_t, int *))(v291 + 56);
        v269 = v267;
        v268(v148, 0, 1, v292);
      }
      v270 = v114;
      v271 = v114[13];
      v272 = &a1[v271];
      v273 = &a2[v271];
      v274 = type metadata accessor for WebEmbedDataVisualization();
      v275 = *(_QWORD *)(v274 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v275 + 48))(v273, 1, v274))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v278 = *(_QWORD *)v273;
        if (EnumCaseMultiPayload == 1)
        {
          v279 = *((_QWORD *)v273 + 1);
          *(_QWORD *)v272 = v278;
          *((_QWORD *)v272 + 1) = v279;
          v280 = type metadata accessor for GenericDataVisualization();
          v281 = *(int *)(v280 + 20);
          __dstd = &v272[v281];
          v282 = &v273[v281];
          swift_bridgeObjectRetain();
          v303(__dstd, v282, v305);
          *(_QWORD *)&v272[*(int *)(v280 + 24)] = *(_QWORD *)&v273[*(int *)(v280 + 24)];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_QWORD *)v272 = v278;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v272, 0, 1, v274);
      }
      a1[v270[14]] = a2[v270[14]];
      goto LABEL_140;
    case 5u:
      v63 = *(void **)a2;
      v64 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v64;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v65 = (void *)*((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v65;
      a1[64] = a2[64];
      v66 = *((_QWORD *)a2 + 10);
      v67 = v63;
      swift_bridgeObjectRetain();
      v68 = v65;
      if (v66 == 1)
      {
        v69 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v69;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v66;
        v126 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v126;
        v128 = (void *)*((_QWORD *)a2 + 13);
        v127 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = v128;
        *((_QWORD *)a1 + 14) = v127;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v129 = v128;
      }
      v130 = a2 + 120;
      v131 = *((_QWORD *)a2 + 16);
      if (v131 >= 0x11)
      {
        *((_QWORD *)a1 + 15) = *v130;
        *((_QWORD *)a1 + 16) = v131;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v130;
      }
      a1[136] = a2[136];
      goto LABEL_140;
    case 6u:
      v70 = a2[281];
      if (v70 == 2)
      {
        v197 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v197;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v198 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v198;
        v199 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v199;
        v200 = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v200 != 1)
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = v200;
          v221 = *((_QWORD *)a2 + 15);
          swift_bridgeObjectRetain();
          if (v221)
          {
            v222 = *((_QWORD *)a2 + 16);
            *((_QWORD *)a1 + 15) = v221;
            *((_QWORD *)a1 + 16) = v222;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v221 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v221);
            *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
          }
          else
          {
            v283 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v283;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          a1[144] = a2[144];
          goto LABEL_139;
        }
        v201 = a1 + 80;
        v202 = a2 + 80;
        v203 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v203;
        a1[144] = a2[144];
LABEL_124:
        v259 = v202[1];
        *v201 = *v202;
        v201[1] = v259;
        goto LABEL_139;
      }
      if (v70 != 1)
      {
        v204 = *(void **)a2;
        v205 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v205;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        v206 = (void *)*((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v206;
        a1[64] = a2[64];
        v207 = *((_QWORD *)a2 + 10);
        v208 = v204;
        swift_bridgeObjectRetain();
        v209 = v206;
        if (v207 == 1)
        {
          v210 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v210;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = v207;
          v223 = *((_QWORD *)a2 + 12);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = v223;
          v225 = (void *)*((_QWORD *)a2 + 13);
          v224 = *((_QWORD *)a2 + 14);
          *((_QWORD *)a1 + 13) = v225;
          *((_QWORD *)a1 + 14) = v224;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v226 = v225;
        }
        v227 = a2 + 120;
        v228 = *((_QWORD *)a2 + 16);
        if (v228 >= 0x11)
        {
          *((_QWORD *)a1 + 15) = *v227;
          *((_QWORD *)a1 + 16) = v228;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v227;
        }
        a1[136] = a2[136];
        goto LABEL_139;
      }
      v71 = *(void **)a2;
      v72 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v72;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v73 = (void *)*((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v73;
      a1[64] = a2[64];
      v74 = *((_QWORD *)a2 + 10);
      v75 = v71;
      swift_bridgeObjectRetain();
      v76 = v73;
      if (v74 == 1)
      {
        v77 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v77;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v74;
        v215 = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = v215;
        v217 = (void *)*((_QWORD *)a2 + 13);
        v216 = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 13) = v217;
        *((_QWORD *)a1 + 14) = v216;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v218 = v217;
      }
      v219 = a2 + 120;
      v220 = *((_QWORD *)a2 + 16);
      if (v220 >= 0x11)
      {
        *((_QWORD *)a1 + 15) = *v219;
        *((_QWORD *)a1 + 16) = v220;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v219;
      }
      v202 = a2 + 144;
      v229 = (void *)*((_QWORD *)a2 + 18);
      a1[136] = a2[136];
      if (!v229)
      {
        v201 = a1 + 144;
        v256 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v256;
        *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
        v257 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v257;
        v258 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v258;
        goto LABEL_124;
      }
      v230 = *((_QWORD *)a2 + 19);
      v231 = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 18) = v229;
      *((_QWORD *)a1 + 19) = v230;
      *((_QWORD *)a1 + 20) = v231;
      *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      a1[184] = a2[184];
      v232 = (void *)*((_QWORD *)a2 + 25);
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      *((_QWORD *)a1 + 25) = v232;
      a1[208] = a2[208];
      v233 = *((_QWORD *)a2 + 28);
      v234 = v229;
      swift_bridgeObjectRetain();
      v235 = v232;
      if (v233 == 1)
      {
        v236 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v236;
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      }
      else
      {
        *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
        *((_QWORD *)a1 + 28) = v233;
        v260 = *((_QWORD *)a2 + 30);
        *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
        *((_QWORD *)a1 + 30) = v260;
        v262 = (void *)*((_QWORD *)a2 + 31);
        v261 = *((_QWORD *)a2 + 32);
        *((_QWORD *)a1 + 31) = v262;
        *((_QWORD *)a1 + 32) = v261;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v263 = v262;
      }
      v264 = a2 + 264;
      v265 = *((_QWORD *)a2 + 34);
      if (v265 >= 0x11)
      {
        *((_QWORD *)a1 + 33) = *v264;
        *((_QWORD *)a1 + 34) = v265;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)v264;
      }
      a1[280] = a2[280];
LABEL_139:
      a1[281] = v70;
LABEL_140:
      swift_storeEnumTagMultiPayload();
LABEL_141:
      sub_1BB1C32F8();
      v285 = *(int *)(v284 + 48);
      v286 = *(_QWORD *)&a2[v285 + 24];
      *(_QWORD *)&a1[v285 + 24] = v286;
      (**(void (***)(void))(v286 - 8))();
      return a1;
    case 7u:
      v78 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v78;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      a1[40] = a2[40];
      v79 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v79;
      v80 = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = v80;
      v81 = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v81 == 1)
      {
        v82 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v82;
        a1[144] = a2[144];
        v83 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v83;
      }
      else
      {
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = v81;
        v132 = *((_QWORD *)a2 + 15);
        swift_bridgeObjectRetain();
        if (v132)
        {
          v133 = *((_QWORD *)a2 + 16);
          *((_QWORD *)a1 + 15) = v132;
          *((_QWORD *)a1 + 16) = v133;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v132 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v132);
          *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        }
        else
        {
          v214 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v214;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        a1[144] = a2[144];
      }
      goto LABEL_140;
    case 8u:
      v84 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v84;
      v85 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v86 = &a1[v85];
      v87 = &a2[v85];
      v88 = *(_QWORD *)&a2[v85 + 8];
      *(_QWORD *)v86 = *(_QWORD *)&a2[v85];
      *((_QWORD *)v86 + 1) = v88;
      v89 = *(_QWORD *)&a2[v85 + 24];
      *((_QWORD *)v86 + 2) = *(_QWORD *)&a2[v85 + 16];
      *((_QWORD *)v86 + 3) = v89;
      v90 = type metadata accessor for FormatCustomItem.Resolved();
      v91 = *(int *)(v90 + 24);
      v302 = &v86[v91];
      v304 = v90;
      v92 = &v87[v91];
      v93 = type metadata accessor for FormatCustomItem.Action();
      __dstb = *(_QWORD **)(v93 - 8);
      v94 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v94(v92, 1, v93))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v302, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      }
      else
      {
        v184 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v302, v92, v184);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstb[7])(v302, 0, 1, v93);
      }
      *(_QWORD *)&v86[*(int *)(v304 + 28)] = *(_QWORD *)&v87[*(int *)(v304 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 9u:
      v26 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v26;
      v27 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v27;
      v28 = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28)
      {
        v29 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = v28;
        *((_QWORD *)a1 + 8) = v29;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v28 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 32), v28);
      }
      else
      {
        v142 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v142;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      }
      v143 = a1 + 72;
      v144 = a2 + 72;
      v145 = *((_QWORD *)a2 + 12);
      if (v145)
      {
        v146 = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 12) = v145;
        *((_QWORD *)a1 + 13) = v146;
        (**(void (***)(_OWORD *, _OWORD *))(v145 - 8))(v143, v144);
      }
      else
      {
        v154 = *(_OWORD *)(a2 + 88);
        *v143 = *v144;
        *(_OWORD *)(a1 + 88) = v154;
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      }
      v155 = a1 + 112;
      v156 = a2 + 112;
      v157 = *((_QWORD *)a2 + 17);
      if (v157)
      {
        v158 = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 17) = v157;
        *((_QWORD *)a1 + 18) = v158;
        (**(void (***)(_OWORD *, _OWORD *))(v157 - 8))(v155, v156);
      }
      else
      {
        v170 = *((_OWORD *)a2 + 8);
        *v155 = *v156;
        *((_OWORD *)a1 + 8) = v170;
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      }
      goto LABEL_140;
    case 0xAu:
      v96 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v96;
      v97 = (int *)type metadata accessor for FeedEngagementBanner();
      v98 = v97[5];
      v99 = &a1[v98];
      v100 = &a2[v98];
      v101 = sub_1BB86EDAC();
      v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
      swift_bridgeObjectRetain();
      v102(v99, v100, v101);
      *(_QWORD *)&a1[v97[6]] = *(_QWORD *)&a2[v97[6]];
      v103 = v97[7];
      v104 = &a1[v103];
      v105 = &a2[v103];
      *(_QWORD *)v104 = *(_QWORD *)v105;
      v104[8] = v105[8];
      v106 = v97[8];
      v20 = &a1[v106];
      v21 = &a2[v106];
      v22 = *((_QWORD *)v21 + 1);
      if (v22 >= 0x11)
      {
LABEL_37:
        *(_QWORD *)v20 = *(_QWORD *)v21;
        *((_QWORD *)v20 + 1) = v22;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v20 = *(_OWORD *)v21;
      }
      goto LABEL_140;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain();
      goto LABEL_140;
    case 0xCu:
      v30 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v30;
      v31 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v31;
      a1[32] = a2[32];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_140;
    case 0xDu:
      v107 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v107;
      a1[16] = a2[16];
      v108 = a2 + 24;
      v109 = *((_QWORD *)a2 + 4);
      if (v109 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v108;
        *((_QWORD *)a1 + 4) = v109;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v108;
      }
      v134 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v134;
      v135 = (void *)*((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v135;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v136 = *((_QWORD *)a2 + 14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v137 = v135;
      swift_bridgeObjectRetain();
      if (v136)
      {
        v138 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = v136;
        *((_QWORD *)a1 + 15) = v138;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v136 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88), v136);
      }
      else
      {
        v185 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v185;
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      }
      v186 = a1 + 128;
      v187 = a2 + 128;
      v188 = *((_QWORD *)a2 + 19);
      if (v188)
      {
        v189 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = v188;
        *((_QWORD *)a1 + 20) = v189;
        (**(void (***)(_OWORD *, _OWORD *))(v188 - 8))(v186, v187);
      }
      else
      {
        v196 = *((_OWORD *)a2 + 9);
        *v186 = *v187;
        *((_OWORD *)a1 + 9) = v196;
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      }
      goto LABEL_140;
    case 0xEu:
      v32 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v32;
      a1[16] = a2[16];
      v33 = a2 + 24;
      v34 = *((_QWORD *)a2 + 4);
      if (v34 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v33;
        *((_QWORD *)a1 + 4) = v34;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v33;
      }
      v125 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v125;
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_140;
    case 0xFu:
      v110 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v110;
      a1[16] = a2[16];
      v111 = a2 + 24;
      v112 = *((_QWORD *)a2 + 4);
      if (v112 >= 0x11)
      {
        *((_QWORD *)a1 + 3) = *v111;
        *((_QWORD *)a1 + 4) = v112;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v111;
      }
      v139 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v139;
      v140 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&a1[v140] = *(_QWORD *)&a2[v140];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v141 = (char *)&loc_1BB1CEF30 + 4 * word_1BB8F62AA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x10u:
      v35 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v35;
      v36 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v36;
      v37 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v37;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      v38 = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 10) = v38;
      v39 = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
      *((_QWORD *)a1 + 12) = v39;
      *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      a1[112] = a2[112];
      v40 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v40;
      a1[136] = a2[136];
      v41 = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
      *((_QWORD *)a1 + 19) = v41;
      v42 = *((_QWORD *)a2 + 21);
      *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 21) = v42;
      a1[184] = a2[184];
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      v43 = *((_QWORD *)a2 + 25);
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      *((_QWORD *)a1 + 25) = v43;
      a1[224] = a2[224];
      v44 = *((_QWORD *)a2 + 27);
      *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
      *((_QWORD *)a1 + 27) = v44;
      __dst = a2 + 232;
      v45 = *((_QWORD *)a2 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45 >= 0x11)
      {
        *((_QWORD *)a1 + 29) = *__dst;
        *((_QWORD *)a1 + 30) = v45;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)__dst;
      }
      goto LABEL_140;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      goto LABEL_141;
  }
}

char *assignWithCopy for FormatModel(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  char *v34;
  int *v35;
  unsigned int (*v36)(char *, uint64_t, int *);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  __int128 v44;
  __int128 v45;
  int v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void *v93;
  id v94;
  uint64_t v95;
  char v96;
  void *v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  char *v101;
  __int128 v102;
  __int128 v103;
  _OWORD *v104;
  __int128 *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  _OWORD *v116;
  __int128 *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  int *v125;
  unsigned int (*v126)(char *, uint64_t, int *);
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t);
  id v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  _OWORD *v146;
  __int128 *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  unint64_t v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  void *v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  id v165;
  id v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  void *v170;
  id v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  void *v175;
  id v176;
  uint64_t v177;
  char v178;
  void *v179;
  id v180;
  void *v181;
  uint64_t v182;
  void *v183;
  uint64_t v184;
  id v185;
  id v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  id v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  unint64_t v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  void *v213;
  id v214;
  uint64_t v215;
  void *v216;
  void (*v217)(char *, _QWORD, uint64_t, int *);
  id v218;
  int *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  int EnumCaseMultiPayload;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  uint64_t v233;
  char *result;
  uint64_t v235;
  int *v236;
  uint64_t v237;
  int *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  int *v242;
  char *__dst;
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;
  void *v247;
  int *v248;
  char *v249;
  void (*v250)(char *, char *, uint64_t);
  uint64_t v251;
  uint64_t v252;
  char *v253;

  if (a1 != a2)
  {
    sub_1BA6DB314((uint64_t)a1);
    v4 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v5 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v5;
        v6 = *((_QWORD *)a2 + 6);
        swift_bridgeObjectRetain();
        if (v6 >= 0x11)
        {
          *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        }
        goto LABEL_138;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v26 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v26;
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v27 = *((_QWORD *)a2 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 >= 0x11)
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        }
        goto LABEL_138;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v7 = (int *)type metadata accessor for FeedBannerAd();
        v8 = v7[5];
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_1BB8721C0();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
        v13 = v7[7];
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = v15[8];
        *(_QWORD *)v14 = *(_QWORD *)v15;
        v14[8] = v16;
        v17 = v7[8];
        v18 = &a1[v17];
        v19 = &a2[v17];
        if (*((_QWORD *)v19 + 1) >= 0x11uLL)
          goto LABEL_38;
        *(_OWORD *)v18 = *(_OWORD *)v19;
        goto LABEL_138;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 2) = v28;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        a1[56] = a2[56];
        v248 = (int *)type metadata accessor for FeedHeadline(0);
        v29 = v248[10];
        v30 = &a1[v29];
        v31 = &a2[v29];
        *v30 = a2[v29];
        v30[1] = a2[v29 + 1];
        v32 = (int *)type metadata accessor for FeedHeadline.State(0);
        v33 = v32[6];
        __dst = &v30[v33];
        v34 = &v31[v33];
        v35 = (int *)type metadata accessor for SharedItem();
        v241 = *((_QWORD *)v35 - 1);
        v36 = *(unsigned int (**)(char *, uint64_t, int *))(v241 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v36(v34, 1, v35))
        {
          v37 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v130 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(__dst, v34, v130);
          __dst[v35[5]] = v34[v35[5]];
          v131 = v35[6];
          v132 = *(void **)&v34[v131];
          *(_QWORD *)&__dst[v131] = v132;
          v133 = v35[7];
          v253 = &__dst[v133];
          v240 = &v34[v133];
          v134 = sub_1BB86C67C();
          v135 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16);
          v136 = v132;
          v135(v253, v240, v134);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v241 + 56))(__dst, 0, 1, v35);
        }
        v30[v32[7]] = v31[v32[7]];
        v30[v32[8]] = v31[v32[8]];
        v30[v32[9]] = v31[v32[9]];
        v30[v32[10]] = v31[v32[10]];
        v137 = v248[11];
        v138 = &a1[v137];
        v139 = &a2[v137];
        v140 = sub_1BB871B24();
        v141 = *(_QWORD *)(v140 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48))(v139, 1, v140))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v139, v140);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
        }
        v149 = v248[12];
        v150 = &a1[v149];
        v151 = &a2[v149];
        if (*((_QWORD *)v151 + 1) >= 0x11uLL)
        {
          *(_QWORD *)v150 = *(_QWORD *)v151;
          *((_QWORD *)v150 + 1) = *((_QWORD *)v151 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v150 = *(_OWORD *)v151;
        }
        v152 = v248[13];
        v153 = *(_QWORD *)&a2[v152];
        if (v153 >= 2)
        {
          if (v153 == 2)
          {
            *(_QWORD *)&a1[v152] = 2;
          }
          else
          {
            *(_QWORD *)&a1[v152] = v153;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&a1[v152] = v153;
        }
        v169 = v248[14];
        v170 = *(void **)&a2[v169];
        *(_QWORD *)&a1[v169] = v170;
        v171 = v170;
        goto LABEL_138;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v20 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v20;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v82 = (int *)type metadata accessor for FeedWebEmbed();
        v83 = v82[8];
        v84 = &a1[v83];
        v85 = &a2[v83];
        v86 = sub_1BB86C67C();
        v87 = *(_QWORD *)(v86 - 8);
        v88 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
        swift_bridgeObjectRetain();
        v88(v84, v85, v86);
        v89 = v82[9];
        v90 = &a1[v89];
        v91 = &a2[v89];
        v252 = v86;
        v250 = v88;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(&a2[v89], 1, v86))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          v88(v90, v91, v86);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v90, 0, 1, v86);
        }
        *(_QWORD *)&a1[v82[10]] = *(_QWORD *)&a2[v82[10]];
        *(_QWORD *)&a1[v82[11]] = *(_QWORD *)&a2[v82[11]];
        v107 = v82[12];
        v108 = &a1[v107];
        v109 = &a2[v107];
        v110 = type metadata accessor for FeedHeadline(0);
        v111 = *(_QWORD *)(v110 - 8);
        v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
        swift_retain();
        swift_retain();
        if (v112(v109, 1, v110))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        }
        else
        {
          v237 = v111;
          v238 = (int *)v110;
          v242 = v82;
          __dstb = v109;
          *(_QWORD *)v108 = *(_QWORD *)v109;
          *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
          v119 = *((_QWORD *)v109 + 2);
          v108[24] = v109[24];
          *((_QWORD *)v108 + 2) = v119;
          *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
          *((_QWORD *)v108 + 5) = *((_QWORD *)v109 + 5);
          *((_QWORD *)v108 + 6) = *((_QWORD *)v109 + 6);
          v108[56] = v109[56];
          v120 = *(int *)(v110 + 40);
          v121 = &v108[v120];
          v122 = &v109[v120];
          *v121 = *v122;
          v121[1] = v122[1];
          v236 = (int *)type metadata accessor for FeedHeadline.State(0);
          v123 = v236[6];
          v239 = &v121[v123];
          v124 = &v122[v123];
          v125 = (int *)type metadata accessor for SharedItem();
          v235 = *((_QWORD *)v125 - 1);
          v126 = *(unsigned int (**)(char *, uint64_t, int *))(v235 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v126(v124, 1, v125))
          {
            v127 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v239, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
          }
          else
          {
            v189 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v239, v124, v189);
            v239[v125[5]] = v124[v125[5]];
            v190 = v125[6];
            v191 = *(void **)&v124[v190];
            *(_QWORD *)&v239[v190] = v191;
            v192 = v125[7];
            v193 = &v239[v192];
            v194 = &v124[v192];
            v195 = v191;
            v250(v193, v194, v252);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v235 + 56))(v239, 0, 1, v125);
          }
          v121[v236[7]] = v122[v236[7]];
          v121[v236[8]] = v122[v236[8]];
          v121[v236[9]] = v122[v236[9]];
          v121[v236[10]] = v122[v236[10]];
          v196 = v238[11];
          v197 = &v108[v196];
          v198 = &__dstb[v196];
          v199 = sub_1BB871B24();
          v200 = *(_QWORD *)(v199 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v198, 1, v199))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v197, v198, v199);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
          }
          v82 = v242;
          v202 = v238[12];
          v203 = &v108[v202];
          v204 = &__dstb[v202];
          if (*((_QWORD *)v204 + 1) >= 0x11uLL)
          {
            *(_QWORD *)v203 = *(_QWORD *)v204;
            *((_QWORD *)v203 + 1) = *((_QWORD *)v204 + 1);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v203 = *(_OWORD *)v204;
          }
          v205 = v238[13];
          v206 = *(_QWORD *)&__dstb[v205];
          if (v206 >= 2)
          {
            if (v206 == 2)
            {
              *(_QWORD *)&v108[v205] = 2;
            }
            else
            {
              *(_QWORD *)&v108[v205] = v206;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)&v108[v205] = v206;
          }
          v215 = v238[14];
          v216 = *(void **)&__dstb[v215];
          *(_QWORD *)&v108[v215] = v216;
          v217 = *(void (**)(char *, _QWORD, uint64_t, int *))(v237 + 56);
          v218 = v216;
          v217(v108, 0, 1, v238);
        }
        v219 = v82;
        v220 = v82[13];
        v221 = &a1[v220];
        v222 = &a2[v220];
        v223 = type metadata accessor for WebEmbedDataVisualization();
        v224 = *(_QWORD *)(v223 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v222, 1, v223))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v221 = *(_QWORD *)v222;
          if (EnumCaseMultiPayload == 1)
          {
            *((_QWORD *)v221 + 1) = *((_QWORD *)v222 + 1);
            v227 = type metadata accessor for GenericDataVisualization();
            v228 = *(int *)(v227 + 20);
            __dstc = &v221[v228];
            v229 = &v222[v228];
            swift_bridgeObjectRetain();
            v250(__dstc, v229, v252);
            *(_QWORD *)&v221[*(int *)(v227 + 24)] = *(_QWORD *)&v222[*(int *)(v227 + 24)];
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v224 + 56))(v221, 0, 1, v223);
        }
        a1[v219[14]] = a2[v219[14]];
        goto LABEL_138;
      case 5u:
        v38 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        a1[25] = a2[25];
        v39 = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        *((_QWORD *)a1 + 4) = v39;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v40 = (void *)*((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 7) = v40;
        a1[64] = a2[64];
        v41 = *((_QWORD *)a2 + 10);
        v42 = v38;
        swift_bridgeObjectRetain();
        v43 = v40;
        if (v41 == 1)
        {
          v44 = *(_OWORD *)(a2 + 72);
          v45 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v45;
          *(_OWORD *)(a1 + 72) = v44;
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
          v93 = (void *)*((_QWORD *)a2 + 13);
          *((_QWORD *)a1 + 13) = v93;
          *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v94 = v93;
        }
        if (*((_QWORD *)a2 + 16) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        a1[136] = a2[136];
        goto LABEL_138;
      case 6u:
        v46 = a2[281];
        if (v46 == 2)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          v156 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v156;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          v157 = *((_QWORD *)a2 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v157 == 1)
          {
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            v158 = *((_OWORD *)a2 + 6);
            v159 = *((_OWORD *)a2 + 7);
            v160 = *((_OWORD *)a2 + 8);
            a1[144] = a2[144];
            *((_OWORD *)a1 + 7) = v159;
            *((_OWORD *)a1 + 8) = v160;
            *((_OWORD *)a1 + 6) = v158;
          }
          else
          {
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            v177 = *((_QWORD *)a2 + 15);
            swift_bridgeObjectRetain();
            if (v177)
            {
              *((_QWORD *)a1 + 15) = v177;
              *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v177 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v177);
              v178 = a2[144];
              *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
              a1[144] = v178;
            }
            else
            {
              v230 = *((_OWORD *)a2 + 6);
              v231 = *((_OWORD *)a2 + 7);
              v232 = *((_OWORD *)a2 + 8);
              a1[144] = a2[144];
              *((_OWORD *)a1 + 7) = v231;
              *((_OWORD *)a1 + 8) = v232;
              *((_OWORD *)a1 + 6) = v230;
            }
          }
        }
        else if (v46 == 1)
        {
          v47 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          a1[25] = a2[25];
          v48 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v48;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          v49 = (void *)*((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 7) = v49;
          a1[64] = a2[64];
          v50 = *((_QWORD *)a2 + 10);
          v51 = v47;
          swift_bridgeObjectRetain();
          v52 = v49;
          if (v50 == 1)
          {
            v53 = *(_OWORD *)(a2 + 72);
            v54 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v54;
            *(_OWORD *)(a1 + 72) = v53;
          }
          else
          {
            *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
            v175 = (void *)*((_QWORD *)a2 + 13);
            *((_QWORD *)a1 + 13) = v175;
            *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v176 = v175;
          }
          if (*((_QWORD *)a2 + 16) >= 0x11uLL)
          {
            *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          a1[136] = a2[136];
          v181 = (void *)*((_QWORD *)a2 + 18);
          if (v181)
          {
            *((_QWORD *)a1 + 18) = v181;
            *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
            *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
            a1[168] = a2[168];
            a1[169] = a2[169];
            v182 = *((_QWORD *)a2 + 22);
            a1[184] = a2[184];
            *((_QWORD *)a1 + 22) = v182;
            *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
            v183 = (void *)*((_QWORD *)a2 + 25);
            *((_QWORD *)a1 + 25) = v183;
            a1[208] = a2[208];
            v184 = *((_QWORD *)a2 + 28);
            v185 = v181;
            swift_bridgeObjectRetain();
            v186 = v183;
            if (v184 == 1)
            {
              v187 = *(_OWORD *)(a2 + 216);
              v188 = *(_OWORD *)(a2 + 248);
              *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
              *(_OWORD *)(a1 + 248) = v188;
              *(_OWORD *)(a1 + 216) = v187;
            }
            else
            {
              *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
              *((_QWORD *)a1 + 28) = *((_QWORD *)a2 + 28);
              *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
              *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
              v213 = (void *)*((_QWORD *)a2 + 31);
              *((_QWORD *)a1 + 31) = v213;
              *((_QWORD *)a1 + 32) = *((_QWORD *)a2 + 32);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v214 = v213;
            }
            if (*((_QWORD *)a2 + 34) >= 0x11uLL)
            {
              *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
              *((_QWORD *)a1 + 34) = *((_QWORD *)a2 + 34);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
            }
            a1[280] = a2[280];
          }
          else
          {
            *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
            v207 = *((_OWORD *)a2 + 10);
            v208 = *((_OWORD *)a2 + 11);
            v209 = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 13) = v209;
            *((_OWORD *)a1 + 10) = v207;
            *((_OWORD *)a1 + 11) = v208;
            v210 = *((_OWORD *)a2 + 14);
            v211 = *((_OWORD *)a2 + 15);
            v212 = *((_OWORD *)a2 + 16);
            *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
            *((_OWORD *)a1 + 15) = v211;
            *((_OWORD *)a1 + 16) = v212;
            *((_OWORD *)a1 + 14) = v210;
          }
        }
        else
        {
          v161 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          a1[25] = a2[25];
          v162 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v162;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          v163 = (void *)*((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 7) = v163;
          a1[64] = a2[64];
          v164 = *((_QWORD *)a2 + 10);
          v165 = v161;
          swift_bridgeObjectRetain();
          v166 = v163;
          if (v164 == 1)
          {
            v167 = *(_OWORD *)(a2 + 72);
            v168 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v168;
            *(_OWORD *)(a1 + 72) = v167;
          }
          else
          {
            *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
            v179 = (void *)*((_QWORD *)a2 + 13);
            *((_QWORD *)a1 + 13) = v179;
            *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v180 = v179;
          }
          if (*((_QWORD *)a2 + 16) >= 0x11uLL)
          {
            *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          a1[136] = a2[136];
        }
        a1[281] = v46;
        goto LABEL_138;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        v55 = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        *((_QWORD *)a1 + 4) = v55;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v56 = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v56 == 1)
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          v57 = *((_OWORD *)a2 + 6);
          v58 = *((_OWORD *)a2 + 7);
          v59 = *((_OWORD *)a2 + 8);
          a1[144] = a2[144];
          *((_OWORD *)a1 + 7) = v58;
          *((_OWORD *)a1 + 8) = v59;
          *((_OWORD *)a1 + 6) = v57;
        }
        else
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          v95 = *((_QWORD *)a2 + 15);
          swift_bridgeObjectRetain();
          if (v95)
          {
            *((_QWORD *)a1 + 15) = v95;
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v95 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v95);
            v96 = a2[144];
            *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
            a1[144] = v96;
          }
          else
          {
            v172 = *((_OWORD *)a2 + 6);
            v173 = *((_OWORD *)a2 + 7);
            v174 = *((_OWORD *)a2 + 8);
            a1[144] = a2[144];
            *((_OWORD *)a1 + 7) = v173;
            *((_OWORD *)a1 + 8) = v174;
            *((_OWORD *)a1 + 6) = v172;
          }
        }
        goto LABEL_138;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v60 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v61 = &a1[v60];
        v62 = &a2[v60];
        *(_QWORD *)v61 = *(_QWORD *)&a2[v60];
        *((_QWORD *)v61 + 1) = *(_QWORD *)&a2[v60 + 8];
        *((_QWORD *)v61 + 2) = *(_QWORD *)&a2[v60 + 16];
        *((_QWORD *)v61 + 3) = *(_QWORD *)&a2[v60 + 24];
        v63 = type metadata accessor for FormatCustomItem.Resolved();
        v64 = *(int *)(v63 + 24);
        v249 = &v61[v64];
        v251 = v63;
        v65 = &v62[v64];
        v66 = type metadata accessor for FormatCustomItem.Action();
        __dsta = *(_QWORD **)(v66 - 8);
        v67 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v67(v65, 1, v66))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v249, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          v143 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v249, v65, v143);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v249, 0, 1, v66);
        }
        *(_QWORD *)&v61[*(int *)(v251 + 28)] = *(_QWORD *)&v62[*(int *)(v251 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v21 = *((_QWORD *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21)
        {
          *((_QWORD *)a1 + 7) = v21;
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 32), v21);
        }
        else
        {
          v102 = *((_OWORD *)a2 + 2);
          v103 = *((_OWORD *)a2 + 3);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *((_OWORD *)a1 + 2) = v102;
          *((_OWORD *)a1 + 3) = v103;
        }
        v104 = a1 + 72;
        v105 = (__int128 *)(a2 + 72);
        v106 = *((_QWORD *)a2 + 12);
        if (v106)
        {
          *((_QWORD *)a1 + 12) = v106;
          *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
          (**(void (***)(_OWORD *, __int128 *))(v106 - 8))(v104, v105);
        }
        else
        {
          v114 = *v105;
          v115 = *(_OWORD *)(a2 + 88);
          *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
          *v104 = v114;
          *(_OWORD *)(a1 + 88) = v115;
        }
        v116 = a1 + 112;
        v117 = (__int128 *)(a2 + 112);
        v118 = *((_QWORD *)a2 + 17);
        if (v118)
        {
          *((_QWORD *)a1 + 17) = v118;
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
          (**(void (***)(_OWORD *, __int128 *))(v118 - 8))(v116, v117);
        }
        else
        {
          v128 = *v117;
          v129 = *((_OWORD *)a2 + 8);
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
          *v116 = v128;
          *((_OWORD *)a1 + 8) = v129;
        }
        goto LABEL_138;
      case 0xAu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v69 = (int *)type metadata accessor for FeedEngagementBanner();
        v70 = v69[5];
        v71 = &a1[v70];
        v72 = &a2[v70];
        v73 = sub_1BB86EDAC();
        v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v71, v72, v73);
        *(_QWORD *)&a1[v69[6]] = *(_QWORD *)&a2[v69[6]];
        v75 = v69[7];
        v76 = &a1[v75];
        v77 = &a2[v75];
        v78 = v77[8];
        *(_QWORD *)v76 = *(_QWORD *)v77;
        v76[8] = v78;
        v79 = v69[8];
        v18 = &a1[v79];
        v19 = &a2[v79];
        if (*((_QWORD *)v19 + 1) >= 0x11uLL)
        {
LABEL_38:
          *(_QWORD *)v18 = *(_QWORD *)v19;
          *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v18 = *(_OWORD *)v19;
        }
        goto LABEL_138;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_retain();
        goto LABEL_138;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v22 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v22;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 0xDu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v80 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v80;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        v97 = (void *)*((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 8) = v97;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v98 = *((_QWORD *)a2 + 14);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v99 = v97;
        swift_bridgeObjectRetain();
        if (v98)
        {
          *((_QWORD *)a1 + 14) = v98;
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v98 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88), v98);
        }
        else
        {
          v144 = *(_OWORD *)(a2 + 88);
          v145 = *(_OWORD *)(a2 + 104);
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          *(_OWORD *)(a1 + 88) = v144;
          *(_OWORD *)(a1 + 104) = v145;
        }
        v146 = a1 + 128;
        v147 = (__int128 *)(a2 + 128);
        v148 = *((_QWORD *)a2 + 19);
        if (v148)
        {
          *((_QWORD *)a1 + 19) = v148;
          *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
          (**(void (***)(_OWORD *, __int128 *))(v148 - 8))(v146, v147);
        }
        else
        {
          v154 = *v147;
          v155 = *((_OWORD *)a2 + 9);
          *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
          *v146 = v154;
          *((_OWORD *)a1 + 9) = v155;
        }
        goto LABEL_138;
      case 0xEu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v23 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v23;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 0xFu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v81 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v81;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v100 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v100] = *(_QWORD *)&a2[v100];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v101 = (char *)&loc_1BB1D10F0 + 4 * word_1BB8F62D4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        a1[49] = a2[49];
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        a1[112] = a2[112];
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
        a1[136] = a2[136];
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
        v24 = *((_QWORD *)a2 + 22);
        a1[184] = a2[184];
        *((_QWORD *)a1 + 22) = v24;
        *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
        *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
        *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
        v25 = *((_QWORD *)a2 + 27);
        a1[224] = a2[224];
        *((_QWORD *)a1 + 27) = v25;
        v247 = (void *)*((_QWORD *)a2 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((unint64_t)v247 >= 0x11)
        {
          *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
          *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        }
LABEL_138:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  sub_1BB1C32F8();
  __swift_assign_boxed_opaque_existential_0((uint64_t *)&a1[*(int *)(v233 + 48)], (uint64_t *)&a2[*(int *)(v233 + 48)]);
  return a1;
}

char *initializeWithTake for FormatModel(char *a1, char *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int *v80;
  uint64_t v81;
  char *v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  char *result;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  char *__dst;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;

  v4 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v5 = (int *)type metadata accessor for FeedBannerAd();
      v6 = v5[5];
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_1BB8721C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      *(_QWORD *)&a1[v5[6]] = *(_QWORD *)&a2[v5[6]];
      v10 = v5[7];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v11[8] = v12[8];
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *(_OWORD *)&a1[v5[8]] = *(_OWORD *)&a2[v5[8]];
      goto LABEL_40;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      a1[56] = a2[56];
      v13 = (int *)type metadata accessor for FeedHeadline(0);
      v14 = v13[10];
      v15 = &a1[v14];
      v16 = &a2[v14];
      *v15 = a2[v14];
      v15[1] = a2[v14 + 1];
      v17 = (int *)type metadata accessor for FeedHeadline.State(0);
      v18 = v17[6];
      v19 = &v15[v18];
      v20 = &v16[v18];
      v21 = (int *)type metadata accessor for SharedItem();
      v22 = *((_QWORD *)v21 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
      {
        v23 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v58 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v19, v20, v58);
        v19[v21[5]] = v20[v21[5]];
        *(_QWORD *)&v19[v21[6]] = *(_QWORD *)&v20[v21[6]];
        v59 = v21[7];
        v113 = &v19[v59];
        v60 = &v20[v59];
        v61 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v113, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      }
      v15[v17[7]] = v16[v17[7]];
      v15[v17[8]] = v16[v17[8]];
      v15[v17[9]] = v16[v17[9]];
      v15[v17[10]] = v16[v17[10]];
      v62 = v13[11];
      v63 = &a1[v62];
      v64 = &a2[v62];
      v65 = sub_1BB871B24();
      v66 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      *(_OWORD *)&a1[v13[12]] = *(_OWORD *)&a2[v13[12]];
      v75 = v13[13];
      v76 = *(_QWORD *)&a2[v75];
      if (v76 == 2)
        v76 = 2;
      *(_QWORD *)&a1[v75] = v76;
      *(_QWORD *)&a1[v13[14]] = *(_QWORD *)&a2[v13[14]];
      goto LABEL_40;
    case 4u:
      v24 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v24;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v25 = (int *)type metadata accessor for FeedWebEmbed();
      v26 = v25[8];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_1BB86C67C();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      v31(v27, v28, v29);
      v32 = v25[9];
      v33 = &a1[v32];
      v34 = &a2[v32];
      v111 = v31;
      v112 = v29;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&a2[v32], 1, v29))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v31(v33, v34, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
      }
      *(_QWORD *)&a1[v25[10]] = *(_QWORD *)&a2[v25[10]];
      *(_QWORD *)&a1[v25[11]] = *(_QWORD *)&a2[v25[11]];
      v68 = v25[12];
      v69 = &a1[v68];
      v70 = &a2[v68];
      v71 = (int *)type metadata accessor for FeedHeadline(0);
      v72 = *((_QWORD *)v71 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v72 + 48))(v70, 1, v71))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        v108 = v72;
        v109 = v25;
        *(_OWORD *)v69 = *(_OWORD *)v70;
        *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
        v69[24] = v70[24];
        *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
        *(_OWORD *)(v69 + 40) = *(_OWORD *)(v70 + 40);
        v69[56] = v70[56];
        v77 = v71[10];
        v78 = &v69[v77];
        v79 = &v70[v77];
        *v78 = v70[v77];
        v78[1] = v70[v77 + 1];
        v80 = (int *)type metadata accessor for FeedHeadline.State(0);
        v81 = v80[6];
        __dst = &v78[v81];
        v82 = &v79[v81];
        v83 = (int *)type metadata accessor for SharedItem();
        v107 = *((_QWORD *)v83 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v107 + 48))(v82, 1, v83))
        {
          v84 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          v85 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(__dst, v82, v85);
          __dst[v83[5]] = v82[v83[5]];
          *(_QWORD *)&__dst[v83[6]] = *(_QWORD *)&v82[v83[6]];
          v111(&__dst[v83[7]], &v82[v83[7]], v112);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v107 + 56))(__dst, 0, 1, v83);
        }
        v78[v80[7]] = v79[v80[7]];
        v78[v80[8]] = v79[v80[8]];
        v78[v80[9]] = v79[v80[9]];
        v78[v80[10]] = v79[v80[10]];
        v86 = v71[11];
        v87 = &v69[v86];
        v88 = &v70[v86];
        v89 = sub_1BB871B24();
        v90 = *(_QWORD *)(v89 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v87, v88, v89);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
        }
        v25 = v109;
        *(_OWORD *)&v69[v71[12]] = *(_OWORD *)&v70[v71[12]];
        v92 = v71[13];
        v93 = *(_QWORD *)&v70[v92];
        if (v93 == 2)
          v93 = 2;
        *(_QWORD *)&v69[v92] = v93;
        *(_QWORD *)&v69[v71[14]] = *(_QWORD *)&v70[v71[14]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v108 + 56))(v69, 0, 1, v71);
      }
      v94 = v25[13];
      v95 = &a1[v94];
      v96 = &a2[v94];
      v97 = type metadata accessor for WebEmbedDataVisualization();
      v98 = *(_QWORD *)(v97 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)v95 = *(_OWORD *)v96;
          v100 = type metadata accessor for GenericDataVisualization();
          v111(&v95[*(int *)(v100 + 20)], &v96[*(int *)(v100 + 20)], v112);
          *(_QWORD *)&v95[*(int *)(v100 + 24)] = *(_QWORD *)&v96[*(int *)(v100 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v95, v96, *(_QWORD *)(v98 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
      }
      a1[v25[14]] = a2[v25[14]];
      goto LABEL_40;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v36 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v37 = &a1[v36];
      v38 = &a2[v36];
      v39 = *(_OWORD *)&a2[v36 + 16];
      *(_OWORD *)v37 = *(_OWORD *)&a2[v36];
      *((_OWORD *)v37 + 1) = v39;
      v40 = type metadata accessor for FormatCustomItem.Resolved();
      v41 = *(int *)(v40 + 24);
      v42 = &v37[v41];
      v43 = &v38[v41];
      v44 = type metadata accessor for FormatCustomItem.Action();
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v74 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v42, v43, v74);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      *(_QWORD *)&v37[*(int *)(v40 + 28)] = *(_QWORD *)&v38[*(int *)(v40 + 28)];
      goto LABEL_40;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v47 = (int *)type metadata accessor for FeedEngagementBanner();
      v48 = v47[5];
      v49 = &a1[v48];
      v50 = &a2[v48];
      v51 = sub_1BB86EDAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      *(_QWORD *)&a1[v47[6]] = *(_QWORD *)&a2[v47[6]];
      v52 = v47[7];
      v53 = &a1[v52];
      v54 = &a2[v52];
      v53[8] = v54[8];
      *(_QWORD *)v53 = *(_QWORD *)v54;
      *(_OWORD *)&a1[v47[8]] = *(_OWORD *)&a2[v47[8]];
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    case 0xFu:
      v55 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v55;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v56 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&a1[v56] = *(_QWORD *)&a2[v56];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      v57 = (char *)&loc_1BB1D2AEC + 4 * word_1BB8F62EA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  sub_1BB1C32F8();
  v102 = *(int *)(v101 + 48);
  v103 = &a1[v102];
  v104 = &a2[v102];
  v105 = *((_OWORD *)v104 + 1);
  *(_OWORD *)v103 = *(_OWORD *)v104;
  *((_OWORD *)v103 + 1) = v105;
  return a1;
}

char *assignWithTake for FormatModel(char *a1, char *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int *v80;
  uint64_t v81;
  char *v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  char *result;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  char *__dst;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;

  if (a1 != a2)
  {
    sub_1BA6DB314((uint64_t)a1);
    v4 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v5 = (int *)type metadata accessor for FeedBannerAd();
        v6 = v5[5];
        v7 = &a1[v6];
        v8 = &a2[v6];
        v9 = sub_1BB8721C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        *(_QWORD *)&a1[v5[6]] = *(_QWORD *)&a2[v5[6]];
        v10 = v5[7];
        v11 = &a1[v10];
        v12 = &a2[v10];
        v11[8] = v12[8];
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *(_OWORD *)&a1[v5[8]] = *(_OWORD *)&a2[v5[8]];
        goto LABEL_41;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        v13 = (int *)type metadata accessor for FeedHeadline(0);
        v14 = v13[10];
        v15 = &a1[v14];
        v16 = &a2[v14];
        *v15 = a2[v14];
        v15[1] = a2[v14 + 1];
        v17 = (int *)type metadata accessor for FeedHeadline.State(0);
        v18 = v17[6];
        v19 = &v15[v18];
        v20 = &v16[v18];
        v21 = (int *)type metadata accessor for SharedItem();
        v22 = *((_QWORD *)v21 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
        {
          v23 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v58 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v19, v20, v58);
          v19[v21[5]] = v20[v21[5]];
          *(_QWORD *)&v19[v21[6]] = *(_QWORD *)&v20[v21[6]];
          v59 = v21[7];
          v113 = &v19[v59];
          v60 = &v20[v59];
          v61 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v113, v60, v61);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
        }
        v15[v17[7]] = v16[v17[7]];
        v15[v17[8]] = v16[v17[8]];
        v15[v17[9]] = v16[v17[9]];
        v15[v17[10]] = v16[v17[10]];
        v62 = v13[11];
        v63 = &a1[v62];
        v64 = &a2[v62];
        v65 = sub_1BB871B24();
        v66 = *(_QWORD *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
        *(_OWORD *)&a1[v13[12]] = *(_OWORD *)&a2[v13[12]];
        v75 = v13[13];
        v76 = *(_QWORD *)&a2[v75];
        if (v76 == 2)
          v76 = 2;
        *(_QWORD *)&a1[v75] = v76;
        *(_QWORD *)&a1[v13[14]] = *(_QWORD *)&a2[v13[14]];
        goto LABEL_41;
      case 4u:
        v24 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v24;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v25 = (int *)type metadata accessor for FeedWebEmbed();
        v26 = v25[8];
        v27 = &a1[v26];
        v28 = &a2[v26];
        v29 = sub_1BB86C67C();
        v30 = *(_QWORD *)(v29 - 8);
        v31 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v31(v27, v28, v29);
        v32 = v25[9];
        v33 = &a1[v32];
        v34 = &a2[v32];
        v111 = v31;
        v112 = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&a2[v32], 1, v29))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v31(v33, v34, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
        }
        *(_QWORD *)&a1[v25[10]] = *(_QWORD *)&a2[v25[10]];
        *(_QWORD *)&a1[v25[11]] = *(_QWORD *)&a2[v25[11]];
        v68 = v25[12];
        v69 = &a1[v68];
        v70 = &a2[v68];
        v71 = (int *)type metadata accessor for FeedHeadline(0);
        v72 = *((_QWORD *)v71 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v72 + 48))(v70, 1, v71))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          v108 = v72;
          v109 = v25;
          *(_OWORD *)v69 = *(_OWORD *)v70;
          *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
          v69[24] = v70[24];
          *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
          *(_OWORD *)(v69 + 40) = *(_OWORD *)(v70 + 40);
          v69[56] = v70[56];
          v77 = v71[10];
          v78 = &v69[v77];
          v79 = &v70[v77];
          *v78 = v70[v77];
          v78[1] = v70[v77 + 1];
          v80 = (int *)type metadata accessor for FeedHeadline.State(0);
          v81 = v80[6];
          __dst = &v78[v81];
          v82 = &v79[v81];
          v83 = (int *)type metadata accessor for SharedItem();
          v107 = *((_QWORD *)v83 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v107 + 48))(v82, 1, v83))
          {
            v84 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            v85 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(__dst, v82, v85);
            __dst[v83[5]] = v82[v83[5]];
            *(_QWORD *)&__dst[v83[6]] = *(_QWORD *)&v82[v83[6]];
            v111(&__dst[v83[7]], &v82[v83[7]], v112);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v107 + 56))(__dst, 0, 1, v83);
          }
          v78[v80[7]] = v79[v80[7]];
          v78[v80[8]] = v79[v80[8]];
          v78[v80[9]] = v79[v80[9]];
          v78[v80[10]] = v79[v80[10]];
          v86 = v71[11];
          v87 = &v69[v86];
          v88 = &v70[v86];
          v89 = sub_1BB871B24();
          v90 = *(_QWORD *)(v89 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v87, v88, v89);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
          }
          v25 = v109;
          *(_OWORD *)&v69[v71[12]] = *(_OWORD *)&v70[v71[12]];
          v92 = v71[13];
          v93 = *(_QWORD *)&v70[v92];
          if (v93 == 2)
            v93 = 2;
          *(_QWORD *)&v69[v92] = v93;
          *(_QWORD *)&v69[v71[14]] = *(_QWORD *)&v70[v71[14]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v108 + 56))(v69, 0, 1, v71);
        }
        v94 = v25[13];
        v95 = &a1[v94];
        v96 = &a2[v94];
        v97 = type metadata accessor for WebEmbedDataVisualization();
        v98 = *(_QWORD *)(v97 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v95 = *(_OWORD *)v96;
            v100 = type metadata accessor for GenericDataVisualization();
            v111(&v95[*(int *)(v100 + 20)], &v96[*(int *)(v100 + 20)], v112);
            *(_QWORD *)&v95[*(int *)(v100 + 24)] = *(_QWORD *)&v96[*(int *)(v100 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v95, v96, *(_QWORD *)(v98 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
        }
        a1[v25[14]] = a2[v25[14]];
        goto LABEL_41;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v36 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v37 = &a1[v36];
        v38 = &a2[v36];
        v39 = *(_OWORD *)&a2[v36 + 16];
        *(_OWORD *)v37 = *(_OWORD *)&a2[v36];
        *((_OWORD *)v37 + 1) = v39;
        v40 = type metadata accessor for FormatCustomItem.Resolved();
        v41 = *(int *)(v40 + 24);
        v42 = &v37[v41];
        v43 = &v38[v41];
        v44 = type metadata accessor for FormatCustomItem.Action();
        v45 = *(_QWORD *)(v44 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v74 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v42, v43, v74);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        *(_QWORD *)&v37[*(int *)(v40 + 28)] = *(_QWORD *)&v38[*(int *)(v40 + 28)];
        goto LABEL_41;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v47 = (int *)type metadata accessor for FeedEngagementBanner();
        v48 = v47[5];
        v49 = &a1[v48];
        v50 = &a2[v48];
        v51 = sub_1BB86EDAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        *(_QWORD *)&a1[v47[6]] = *(_QWORD *)&a2[v47[6]];
        v52 = v47[7];
        v53 = &a1[v52];
        v54 = &a2[v52];
        v53[8] = v54[8];
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *(_OWORD *)&a1[v47[8]] = *(_OWORD *)&a2[v47[8]];
LABEL_41:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v55 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v55;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v56 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v56] = *(_QWORD *)&a2[v56];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v57 = (char *)&loc_1BB1D3DD4 + 4 * word_1BB8F6300[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  sub_1BB1C32F8();
  v102 = *(int *)(v101 + 48);
  v103 = &a1[v102];
  v104 = &a2[v102];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v102]);
  v105 = *((_OWORD *)v104 + 1);
  *(_OWORD *)v103 = *(_OWORD *)v104;
  *((_OWORD *)v103 + 1) = v105;
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB1C32F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BB1C32F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_1BB1D4D2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = type metadata accessor for FeedItem(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

void sub_1BB1D4DA4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A1330)
  {
    type metadata accessor for FormatModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A1330);
  }
}

unint64_t destroy for FormatDerivedDataResultItemReference(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result >= 0xF)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeWithCopy for FormatDerivedDataResultItemReference(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2 + 2;
  v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 >= 0xF)
  {
    a1[2] = *v4;
    a1[3] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  }
  return a1;
}

_QWORD *assignWithCopy for FormatDerivedDataResultItemReference(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  if (a1[3] >= 0xFuLL)
  {
    if (v4 >= 0xF)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v4 < 0xF)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithTake for FormatDerivedDataResultItemReference(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  unint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  if (a1[3] >= 0xFuLL)
  {
    v5 = a2[3];
    if (v5 >= 0xF)
    {
      a1[2] = *v4;
      a1[3] = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataResultItemReference()
{
  return &type metadata for FormatDerivedDataResultItemReference;
}

uint64_t sub_1BB1D5028(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10[2];
  uint64_t v11[2];

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  if ((sub_1BA880C28(*a1, *a2) & 1) != 0 && (sub_1BA881DE0(v2, v5) & 1) != 0)
  {
    v11[0] = v3;
    v11[1] = v4;
    v10[0] = v6;
    v10[1] = v7;
    v8 = _s8NewsFeed14FormatItemKindO2eeoiySbAC_ACtFZ_0(v11, v10);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1BB1D50A8()
{
  sub_1BB8745CC();
  sub_1BA50D72C();
  return sub_1BB874608();
}

uint64_t FeedPoolManager.__allocating_init(feed:service:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  FeedPoolManager.init(feed:service:)(a1, a2);
  return v4;
}

uint64_t FeedPoolManager.__allocating_init(service:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FeedPoolManager.init(service:)(a1);
  return v2;
}

_QWORD *FeedPoolManager.init(service:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v2 = v1;
  v4 = (_QWORD *)*v1;
  v5 = sub_1BB86E50C();
  MEMORY[0x1E0C80A78](v5);
  v6 = v4[14];
  v7 = v4[10];
  v8 = v4[11];
  v10 = type metadata accessor for FeedPoolManager.Key(255, v7, v8, v9);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  MEMORY[0x1BCCE5B24](&unk_1BB8F66F0, v10);
  sub_1BB86E7B8();
  *(_QWORD *)((char *)v2 + v6) = sub_1BB86E7A0();
  v11 = *(_QWORD *)(*v2 + 120);
  sub_1BB86E0F8();
  sub_1BA539DA4();
  *(_QWORD *)((char *)v2 + v11) = sub_1BB86E0D4();
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 128)) = 0x4072C00000000000;
  v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  v2[2] = 0x6E776F6E6B6E55;
  v2[3] = 0xE700000000000000;
  v2[4] = v12;
  v2[5] = v12;
  *((_BYTE *)v2 + 48) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))((char *)v2 + *(_QWORD *)(*v2 + 104), a1, v7);
  v13 = v12;
  return v2;
}

id sub_1BB1D537C(void *a1, unsigned __int8 a2, uint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;

  v13 = *a7;
  v14 = a2;
  sub_1BA7AA598();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87A390;
  LOBYTE(v30) = a4;
  v31 = a5;
  v32 = a6;
  type metadata accessor for FeedPoolManager.Key(0, *(_QWORD *)(v13 + 80), *(_QWORD *)(v13 + 88), v16);
  v18 = sub_1BA4E48E4();
  if (v14)
  {
    v19 = v17;
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    v21 = sub_1BA6A2D8C();
    *(_QWORD *)(v15 + 64) = v21;
    *(_QWORD *)(v15 + 32) = v18;
    *(_QWORD *)(v15 + 40) = v19;
    v33 = a1;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();
    *(_QWORD *)(v15 + 96) = v20;
    *(_QWORD *)(v15 + 104) = v21;
    *(_QWORD *)(v15 + 72) = 0;
    *(_QWORD *)(v15 + 80) = 0xE000000000000000;
    v22 = sub_1BB87330C();
    sub_1BB86EF44("Feed pool failed to fetch. Will NOT retry with cachedOnly policy, key=%{public}@, error=%{public}@", 98, 2, &dword_1BA493000, a3, v22, v15);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return a1;
  }
  else
  {
    v24 = v17;
    v25 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    v26 = sub_1BA6A2D8C();
    *(_QWORD *)(v15 + 64) = v26;
    *(_QWORD *)(v15 + 32) = v18;
    *(_QWORD *)(v15 + 40) = v24;
    v30 = 0;
    v31 = 0xE000000000000000;
    v33 = a1;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();
    *(_QWORD *)(v15 + 96) = v25;
    *(_QWORD *)(v15 + 104) = v26;
    *(_QWORD *)(v15 + 72) = 0;
    *(_QWORD *)(v15 + 80) = 0xE000000000000000;
    v27 = sub_1BB87330C();
    sub_1BB86EF44("Feed pool failed to fetch. Will retry with cachedOnly policy, key=%{public}@, error=%{public}@", 94, 2, &dword_1BA493000, a3, v27, v15);
    swift_bridgeObjectRelease();
    LOBYTE(v30) = 1;
    return (id)sub_1BA4CF938(a8, a9, &v30);
  }
}

uint64_t sub_1BB1D55CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v11 = sub_1BB8732F4();
  sub_1BA7AA598();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  type metadata accessor for FeedPoolManager.Key(0, a6, a7, v13);
  v14 = sub_1BA4E48E4();
  v16 = v15;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1BA6A2D8C();
  *(_QWORD *)(v12 + 64) = v18;
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v12 + 96) = v17;
  *(_QWORD *)(v12 + 104) = v18;
  *(_QWORD *)(v12 + 72) = 0;
  *(_QWORD *)(v12 + 80) = 0xE000000000000000;
  sub_1BB86EF44("Feed pool failed fetch for key=%{public}@, error=%{public}@", 59, 2, &dword_1BA493000, a2, v11, v12, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1D5718(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 48))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80));
}

uint64_t *FeedPoolManager.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = (void *)v0[4];

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  swift_release();
  swift_release();
  return v0;
}

uint64_t FeedPoolManager.__deallocating_deinit()
{
  FeedPoolManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB1D57E8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1BB1D5804(uint64_t a1)
{
  return sub_1BB1D5718(a1);
}

uint64_t dispatch thunk of FeedPoolManagerType.fetchPool(with:feedContext:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of FeedPoolManagerType.expandPool(cursor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t method lookup function for FeedPoolManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedPoolManager.__allocating_init(feed:service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FeedPoolManager.__allocating_init(service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FeedPoolManager.fetchPool(with:feedContext:cachePolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of FeedPoolManager.expandPool(cursor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_1BB1D5868()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB1D5914()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v0 + v4 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BB1D5A00(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BB1D537C(a1, *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(uint64_t **)(v1 + 72), v1 + v4, v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1BB1D5A90()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB1D5ABC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1D55CC(a1, *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t FormatPuzzleTypeBinding.Image.image(from:context:imageContext:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[4];
  char v21;

  v6 = a1[1];
  v20[0] = *a1;
  v20[1] = v6;
  v7 = a1[3];
  v20[2] = a1[2];
  v20[3] = v7;
  v8 = swift_allocObject();
  v10 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v18 = *(_OWORD *)(a2 + 80);
  v19 = *(_OWORD *)(a2 + 64);
  v17 = *(_OWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  LOBYTE(a2) = *(_BYTE *)(a2 + 128);
  v13 = (_OWORD *)swift_allocObject();
  v14 = a1[1];
  v13[1] = *a1;
  v13[2] = v14;
  v15 = a1[3];
  v13[3] = a1[2];
  v13[4] = v15;
  v21 = 1;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_BYTE *)(v8 + 48) = 1;
  *(_QWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 64) = v9;
  *(_OWORD *)(v8 + 72) = v19;
  *(_OWORD *)(v8 + 88) = v18;
  *(_OWORD *)(v8 + 104) = v17;
  *(_QWORD *)(v8 + 120) = v11;
  *(_QWORD *)(v8 + 128) = v12;
  *(_BYTE *)(v8 + 136) = a2;
  *(_QWORD *)(v8 + 144) = sub_1BB1D5CB8;
  *(_QWORD *)(v8 + 152) = v13;
  *a3 = v8 | 0x2000000000000000;
  swift_bridgeObjectRetain();
  return sub_1BACB5B80((uint64_t)v20);
}

uint64_t sub_1BB1D5BEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

double sub_1BB1D5C18@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  double result;

  v3 = objc_msgSend(*(id *)(a1 + 56), sel_exploreTileImageAssetHandle);
  if (v3)
  {
    v4 = v3;
    *(_QWORD *)(a2 + 24) = sub_1BA749984();
    *(_QWORD *)(a2 + 32) = sub_1BA7499C0();
    *(_QWORD *)a2 = v4;
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BB1D5C7C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

double sub_1BB1D5CB8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB1D5C18(v1 + 16, a1);
}

uint64_t static FormatPuzzleTypeBinding.Image.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatPuzzleTypeBinding.Image.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleTypeBinding.Image.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB1D5D30()
{
  unint64_t result;

  result = qword_1EF2BD520;
  if (!qword_1EF2BD520)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Image, &type metadata for FormatPuzzleTypeBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2BD520);
  }
  return result;
}

unint64_t sub_1BB1D5D74(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1D5D98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1D5D98()
{
  unint64_t result;

  result = qword_1EF2BD528;
  if (!qword_1EF2BD528)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Image, &type metadata for FormatPuzzleTypeBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2BD528);
  }
  return result;
}

unint64_t sub_1BB1D5DDC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE9A1E4();
  a1[2] = sub_1BAEF1798();
  result = sub_1BB1D5D30();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB1D5E10(_QWORD *a1)
{
  return FormatPuzzleTypeBinding.Image.init(from:)(a1);
}

uint64_t sub_1BB1D5E24(_QWORD *a1)
{
  return FormatPuzzleTypeBinding.Image.encode(to:)(a1);
}

uint64_t _s5ImageOwst_4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB1D5E78 + 4 * byte_1BB8F6730[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB1D5E98 + 4 * byte_1BB8F6735[v4]))();
}

_BYTE *sub_1BB1D5E78(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB1D5E98(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB1D5EA0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB1D5EA8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB1D5EB0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB1D5EB8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Image()
{
  return &type metadata for FormatPuzzleTypeBinding.Image;
}

uint64_t FormatPuzzle.overrides.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  swift_beginAccess();
  v3 = v1[7];
  v21 = v1[8];
  v4 = v1[8];
  v5 = v1[10];
  v22 = v1[9];
  v6 = v22;
  v23 = v5;
  v7 = v1[3];
  v8 = v1[5];
  v17 = v1[4];
  v9 = v17;
  v18 = v8;
  v10 = v1[5];
  v11 = v1[7];
  v19 = v1[6];
  v12 = v19;
  v20 = v11;
  v13 = v1[3];
  v16[0] = v1[2];
  v14 = v16[0];
  v16[1] = v13;
  a1[6] = v4;
  a1[7] = v6;
  a1[8] = v1[10];
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v12;
  a1[5] = v3;
  *a1 = v14;
  a1[1] = v7;
  return sub_1BA8CB1AC((uint64_t)v16);
}

id FCPuzzleProviding.overridden(by:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[144];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  sub_1BB1D6128(a1, (uint64_t)v25);
  sub_1BB1D6128((uint64_t)v25, (uint64_t)&v26);
  if (sub_1BACCB820((uint64_t)&v26) == 1)
    goto LABEL_10;
  v3 = v27;
  v4 = v29;
  v5 = v31;
  v6 = v33;
  v7 = v35;
  v8 = v37;
  v9 = v39;
  v10 = v41;
  v11 = v43;
  if (v27 || v29 || v31 || v33 || v35 || v37 || v39 || v41 | v43)
  {
    v21 = v28;
    v22 = v26;
    v23 = v30;
    v24 = v32;
    v19 = v36;
    v20 = v34;
    v17 = v40;
    v18 = v38;
    v16 = v42;
    objc_allocWithZone(MEMORY[0x1E0D58E30]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BB1D80F4(v22, v3, v21, v4, v23, v5, v24, v6, v20, v7, v19, v8, v18, v9, v17, v10, v16, v11);
    v13 = objc_allocWithZone(MEMORY[0x1E0D58DF8]);
    swift_unknownObjectRetain();
    v14 = objc_msgSend(v13, sel_initWithPuzzle_overrides_, v2, v12);
    swift_unknownObjectRelease();

    return v14;
  }
  else
  {
LABEL_10:
    swift_unknownObjectRetain();
  }
  return (id)v2;
}

uint64_t sub_1BB1D6128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1ED3A2980, (uint64_t)&type metadata for FormatPuzzle.Overrides, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatPuzzle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzle.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void __swiftcall FormatPuzzle.Overrides.init(title:subtitle:description:author:teaserClue:teaserAnswer:teaserInfo:teaserDirection:teaserNumber:)(NewsFeed::FormatPuzzle::Overrides *__return_ptr retstr, Swift::String_optional title, Swift::String_optional subtitle, Swift::String_optional description, Swift::String_optional author, Swift::String_optional teaserClue, Swift::String_optional teaserAnswer, Swift::String_optional teaserInfo, Swift::String_optional teaserDirection, Swift::String_optional teaserNumber)
{
  retstr->title = title;
  retstr->subtitle = subtitle;
  retstr->description = description;
  retstr->author = author;
  retstr->teaserClue = teaserClue;
  retstr->teaserAnswer = teaserAnswer;
  retstr->teaserInfo = teaserInfo;
  retstr->teaserDirection = teaserDirection;
  retstr->teaserNumber = teaserNumber;
}

uint64_t FormatPuzzle.__allocating_init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v10 + 176) = a4;
  swift_beginAccess();
  *(_QWORD *)(v10 + 184) = a5;
  swift_beginAccess();
  v11 = a3[7];
  *(_OWORD *)(v10 + 128) = a3[6];
  *(_OWORD *)(v10 + 144) = v11;
  *(_OWORD *)(v10 + 160) = a3[8];
  v12 = a3[3];
  *(_OWORD *)(v10 + 64) = a3[2];
  *(_OWORD *)(v10 + 80) = v12;
  v13 = a3[5];
  *(_OWORD *)(v10 + 96) = a3[4];
  *(_OWORD *)(v10 + 112) = v13;
  v14 = a3[1];
  *(_OWORD *)(v10 + 32) = *a3;
  *(_OWORD *)(v10 + 48) = v14;
  return v10;
}

uint64_t FormatPuzzle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB1D6314(_OWORD *a1, _QWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD __src[9];
  _OWORD v16[9];

  v2 = a1[6];
  v3 = a1[8];
  __src[7] = a1[7];
  __src[8] = v3;
  v4 = a1[3];
  __src[2] = a1[2];
  __src[3] = v4;
  v5 = a1[4];
  __src[5] = a1[5];
  __src[6] = v2;
  __src[4] = v5;
  v6 = a1[1];
  v7 = (_OWORD *)*a2;
  v8 = (void *)(*a2 + 32);
  __src[0] = *a1;
  __src[1] = v6;
  swift_beginAccess();
  v9 = v7[8];
  v16[5] = v7[7];
  v16[6] = v9;
  v10 = v7[10];
  v16[7] = v7[9];
  v16[8] = v10;
  v11 = v7[3];
  v12 = v7[5];
  v13 = v7[6];
  v16[2] = v7[4];
  v16[3] = v12;
  v16[4] = v13;
  v16[0] = v7[2];
  v16[1] = v11;
  memmove(v8, __src, 0x90uLL);
  sub_1BA8CB1AC((uint64_t)__src);
  return sub_1BB1D8930((uint64_t)v16);
}

uint64_t FormatPuzzle.overrides.setter(_OWORD *a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[9];

  swift_beginAccess();
  v3 = v1[8];
  v4 = v1[10];
  v13[7] = v1[9];
  v13[8] = v4;
  v5 = v1[5];
  v13[2] = v1[4];
  v13[3] = v5;
  v6 = v1[6];
  v13[5] = v1[7];
  v13[6] = v3;
  v13[4] = v6;
  v7 = v1[3];
  v13[0] = v1[2];
  v13[1] = v7;
  v8 = a1[5];
  v1[6] = a1[4];
  v1[7] = v8;
  v9 = a1[7];
  v1[8] = a1[6];
  v1[9] = v9;
  v1[10] = a1[8];
  v10 = a1[3];
  v1[4] = a1[2];
  v1[5] = v10;
  v11 = a1[1];
  v1[2] = *a1;
  v1[3] = v11;
  return sub_1BB1D8930((uint64_t)v13);
}

uint64_t (*FormatPuzzle.overrides.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 176) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzle.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 184) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzle.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatPuzzle.init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v5 + 176) = a4;
  swift_beginAccess();
  *(_QWORD *)(v5 + 184) = a5;
  swift_beginAccess();
  v9 = a3[7];
  *(_OWORD *)(v5 + 128) = a3[6];
  *(_OWORD *)(v5 + 144) = v9;
  *(_OWORD *)(v5 + 160) = a3[8];
  v10 = a3[3];
  *(_OWORD *)(v5 + 64) = a3[2];
  *(_OWORD *)(v5 + 80) = v10;
  v11 = a3[5];
  *(_OWORD *)(v5 + 96) = a3[4];
  *(_OWORD *)(v5 + 112) = v11;
  v12 = a3[1];
  *(_OWORD *)(v5 + 32) = *a3;
  *(_OWORD *)(v5 + 48) = v12;
  return v5;
}

uint64_t FormatPuzzle.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatPuzzle.init(from:)(a1);
  return v2;
}

_QWORD *FormatPuzzle.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD v50[18];
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[144];
  _BYTE v54[144];
  __int128 v55;
  char v56;
  char v57;

  v47 = *v1;
  sub_1BA4CDF6C(0, &qword_1ED3AB3F8, (uint64_t (*)(void))sub_1BB1D88A8, (uint64_t)&type metadata for FormatPuzzle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = a1[3];
  v48 = (uint64_t)a1;
  v8 = a1;
  v10 = (char *)&v30 - v9;
  __swift_project_boxed_opaque_existential_1(v8, v7);
  sub_1BB1D88A8();
  sub_1BB87468C();
  if (v2)
  {
    v12 = v48;
    v15 = v49;
    swift_deallocPartialClassInstance();
    v13 = v12;
  }
  else
  {
    LOBYTE(v55) = 0;
    v11 = sub_1BB874098();
    v15 = v49;
    v49[2] = v11;
    v15[3] = v16;
    v57 = 1;
    sub_1BB02B8F0();
    sub_1BB874068();
    v46 = v5;
    sub_1BB1D6128((uint64_t)&v55, (uint64_t)v53);
    sub_1BB1D6128((uint64_t)v53, (uint64_t)v54);
    if (sub_1BACCB820((uint64_t)v54) == 1)
    {
      v17 = 0;
      v18 = 0;
      v31 = 0;
      v32 = 0;
      v19 = 0;
      v33 = 0;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v37 = 0;
      v38 = 0;
      v39 = 0;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 0;
      v44 = 0;
      v45 = 0;
    }
    else
    {
      sub_1BB1D6128((uint64_t)v53, (uint64_t)v50);
      v44 = v50[17];
      v45 = v50[16];
      v42 = v50[15];
      v43 = v50[14];
      v40 = v50[13];
      v41 = v50[12];
      v38 = v50[11];
      v39 = v50[10];
      v36 = v50[9];
      v37 = v50[8];
      v34 = v50[7];
      v35 = v50[6];
      v19 = v50[3];
      v32 = v50[5];
      v33 = v50[4];
      v18 = v50[1];
      v31 = v50[2];
      v17 = v50[0];
    }
    swift_beginAccess();
    v15[4] = v17;
    v15[5] = v18;
    v15[6] = v31;
    v15[7] = v19;
    v20 = v32;
    v15[8] = v33;
    v15[9] = v20;
    v21 = v34;
    v15[10] = v35;
    v15[11] = v21;
    v22 = v36;
    v15[12] = v37;
    v15[13] = v22;
    v23 = v38;
    v15[14] = v39;
    v15[15] = v23;
    v24 = v40;
    v15[16] = v41;
    v15[17] = v24;
    v25 = v42;
    v15[18] = v43;
    v15[19] = v25;
    v26 = v44;
    v15[20] = v45;
    v15[21] = v26;
    sub_1BA6BCC84();
    LOBYTE(v51) = 2;
    sub_1BA5DBC84();
    v27 = v46;
    sub_1BB874068();
    if (v52)
      v28 = v52;
    else
      v28 = MEMORY[0x1E0DEE9E8];
    swift_beginAccess();
    v15[22] = v28;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v56 = 3;
    sub_1BA5DBC08((unint64_t *)&qword_1ED3B9478, (uint64_t (*)(void))sub_1BA8350B4, MEMORY[0x1E0DEAF40]);
    sub_1BB874068();
    if (v51)
      v29 = v51;
    else
      v29 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v27);
    swift_beginAccess();
    v15[23] = v29;
    v13 = v48;
  }
  __swift_destroy_boxed_opaque_existential_1(v13);
  return v15;
}

uint64_t FormatPuzzle.Overrides.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.author.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserClue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserAnswer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserDirection.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB1D6CBC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  _QWORD *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = objc_msgSend(a1, sel_title);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BB8729A0();
    v47 = v7;
    v48 = v6;

  }
  else
  {
    v47 = 0;
    v48 = 0;
  }
  v8 = objc_msgSend(a1, sel_subtitle);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BB8729A0();
    v45 = v11;
    v46 = v10;

  }
  else
  {
    v45 = 0;
    v46 = 0;
  }
  v12 = objc_msgSend(a1, sel_description);
  v13 = sub_1BB8729A0();
  v51 = v14;
  v52 = v13;

  v15 = objc_msgSend(a1, sel_authors);
  if (v15)
  {
    v16 = v15;
    v17 = (_QWORD *)sub_1BB872DB4();

    if (v17[2])
    {
      v49 = v17[5];
      v50 = v17[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  v49 = 0;
  v50 = 0;
LABEL_12:
  v18 = objc_msgSend(a1, sel_teaserClue);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1BB8729A0();
    v43 = v21;
    v44 = v20;

  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v22 = objc_msgSend(a1, sel_teaserAnswer);
  if (v22)
  {
    v23 = v22;
    v24 = sub_1BB8729A0();
    v42 = v25;

  }
  else
  {
    v24 = 0;
    v42 = 0;
  }
  v26 = objc_msgSend(a1, sel_teaserInfo);
  if (v26)
  {
    v27 = v26;
    v28 = sub_1BB8729A0();
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0;
  }
  v31 = objc_msgSend(a1, sel_teaserDirection);
  if (v31)
  {
    v32 = v31;
    v33 = sub_1BB8729A0();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0;
  }
  v36 = objc_msgSend(a1, sel_teaserNumber);
  if (v36)
  {
    v37 = v36;
    v38 = sub_1BB8729A0();
    v40 = v39;

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    v38 = 0;
    v40 = 0;
  }
  result = v42;
  *a2 = v48;
  a2[1] = v47;
  a2[2] = v46;
  a2[3] = v45;
  a2[4] = v52;
  a2[5] = v51;
  a2[6] = v50;
  a2[7] = v49;
  a2[8] = v44;
  a2[9] = v43;
  a2[10] = v24;
  a2[11] = v42;
  a2[12] = v28;
  a2[13] = v30;
  a2[14] = v33;
  a2[15] = v35;
  a2[16] = v38;
  a2[17] = v40;
  return result;
}

uint64_t sub_1BB1D6F60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1D6F90
                                                            + 4 * asc_1BB8F6850[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1BB1D6F90()
{
  return 0x656C746974627573;
}

uint64_t sub_1BB1D6FA8()
{
  return 0x7470697263736564;
}

uint64_t sub_1BB1D6FC8()
{
  return 0x726F68747561;
}

uint64_t sub_1BB1D6FDC()
{
  return 0x6C43726573616574;
}

uint64_t sub_1BB1D6FF8()
{
  return 0x6E41726573616574;
}

uint64_t sub_1BB1D7018()
{
  return 0x6E49726573616574;
}

uint64_t sub_1BB1D7038()
{
  return 0x6944726573616574;
}

uint64_t sub_1BB1D705C()
{
  return 0x754E726573616574;
}

uint64_t sub_1BB1D707C()
{
  unsigned __int8 *v0;

  return sub_1BB1D6F60(*v0);
}

uint64_t sub_1BB1D7084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB1D943C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB1D70A8()
{
  sub_1BB1D88EC();
  return sub_1BB874710();
}

uint64_t sub_1BB1D70D0()
{
  sub_1BB1D88EC();
  return sub_1BB87471C();
}

uint64_t FormatPuzzle.Overrides.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD v20[17];
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;

  sub_1BA4CDF6C(0, &qword_1ED3AB640, (uint64_t (*)(void))sub_1BB1D88EC, (uint64_t)&type metadata for FormatPuzzle.Overrides.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = v1[2];
  v20[14] = v1[3];
  v20[15] = v6;
  v7 = v1[4];
  v20[12] = v1[5];
  v20[13] = v7;
  v8 = v1[6];
  v20[10] = v1[7];
  v20[11] = v8;
  v9 = v1[8];
  v20[8] = v1[9];
  v20[9] = v9;
  v10 = v1[10];
  v20[6] = v1[11];
  v20[7] = v10;
  v11 = v1[12];
  v20[4] = v1[13];
  v20[5] = v11;
  v12 = v1[15];
  v20[2] = v1[14];
  v20[3] = v12;
  v13 = v1[16];
  v20[0] = v1[17];
  v20[1] = v13;
  v14 = a1[3];
  v15 = a1;
  v17 = (char *)v20 - v16;
  __swift_project_boxed_opaque_existential_1(v15, v14);
  sub_1BB1D88EC();
  sub_1BB8746C8();
  v29 = 0;
  v18 = v20[16];
  sub_1BB87411C();
  if (!v18)
  {
    v28 = 1;
    sub_1BB87411C();
    v27 = 2;
    sub_1BB87411C();
    v26 = 3;
    sub_1BB87411C();
    v25 = 4;
    sub_1BB87411C();
    v24 = 5;
    sub_1BB87411C();
    v23 = 6;
    sub_1BB87411C();
    v22 = 7;
    sub_1BB87411C();
    v21 = 8;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v17, v4);
}

uint64_t FormatPuzzle.Overrides.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  unsigned __int128 v66;
  _QWORD v67[19];
  char v68;

  sub_1BA4CDF6C(0, &qword_1ED3AB400, (uint64_t (*)(void))sub_1BB1D88EC, (uint64_t)&type metadata for FormatPuzzle.Overrides.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v56 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - v7;
  v9 = a1[3];
  v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BB1D88EC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  v10 = v6;
  LOBYTE(v67[0]) = 0;
  v11 = sub_1BB87402C();
  LOBYTE(v67[0]) = 1;
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = sub_1BB87402C();
  v55 = v13;
  v54 = v14;
  LOBYTE(v67[0]) = 2;
  v16 = v15;
  swift_bridgeObjectRetain();
  v52 = sub_1BB87402C();
  v53 = v11;
  v17 = v16;
  LOBYTE(v67[0]) = 3;
  v19 = v18;
  swift_bridgeObjectRetain();
  v49 = sub_1BB87402C();
  LOBYTE(v67[0]) = 4;
  v51 = v20;
  swift_bridgeObjectRetain();
  v21 = sub_1BB87402C();
  LOBYTE(v67[0]) = 5;
  v50 = v22;
  swift_bridgeObjectRetain();
  v23 = sub_1BB87402C();
  v48 = v24;
  v45 = v23;
  LOBYTE(v67[0]) = 6;
  swift_bridgeObjectRetain();
  v46 = 0;
  v44 = sub_1BB87402C();
  LOBYTE(v67[0]) = 7;
  v47 = v25;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v43 = sub_1BB87402C();
  *((_QWORD *)&v43 + 1) = v26;
  v68 = 8;
  swift_bridgeObjectRetain();
  v27 = sub_1BB87402C();
  v42 = v28;
  v29 = v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v56);
  *(_QWORD *)&v58 = v53;
  *((_QWORD *)&v58 + 1) = v55;
  *(_QWORD *)&v59 = v54;
  *((_QWORD *)&v59 + 1) = v17;
  v40 = v17;
  *(_QWORD *)&v60 = v52;
  *((_QWORD *)&v60 + 1) = v19;
  v30 = v50;
  *(_QWORD *)&v61 = v49;
  *((_QWORD *)&v61 + 1) = v51;
  *(_QWORD *)&v62 = v21;
  *((_QWORD *)&v62 + 1) = v50;
  v56 = v21;
  v31 = v48;
  *(_QWORD *)&v63 = v45;
  *((_QWORD *)&v63 + 1) = v48;
  *(_QWORD *)&v64 = v44;
  *((_QWORD *)&v64 + 1) = v47;
  v65 = v43;
  v41 = v29;
  v66 = __PAIR128__(v42, v29);
  sub_1BA8CB1AC((uint64_t)&v58);
  swift_bridgeObjectRelease();
  v32 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33 = v47;
  swift_bridgeObjectRelease();
  v34 = *((_QWORD *)&v43 + 1);
  swift_bridgeObjectRelease();
  v35 = v65;
  a2[6] = v64;
  a2[7] = v35;
  a2[8] = v66;
  v36 = v61;
  a2[2] = v60;
  a2[3] = v36;
  v37 = v63;
  a2[4] = v62;
  a2[5] = v37;
  v38 = v59;
  *a2 = v58;
  a2[1] = v38;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  v67[0] = v53;
  v67[1] = v55;
  v67[2] = v54;
  v67[3] = v32;
  v67[4] = v52;
  v67[5] = v19;
  v67[6] = v49;
  v67[7] = v51;
  v67[8] = v56;
  v67[9] = v30;
  v67[10] = v45;
  v67[11] = v31;
  v67[12] = v44;
  v67[13] = v33;
  v67[14] = v43;
  v67[15] = v34;
  v67[16] = v41;
  v67[17] = v42;
  return sub_1BB1D8930((uint64_t)v67);
}

uint64_t sub_1BB1D7AD8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatPuzzle.Overrides.init(from:)(a1, a2);
}

uint64_t sub_1BB1D7AEC(_QWORD *a1)
{
  return FormatPuzzle.Overrides.encode(to:)(a1);
}

uint64_t sub_1BB1D7B00()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1D7B34 + 4 * byte_1BB8F6859[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB1D7B34()
{
  return 0x656469727265766FLL;
}

uint64_t sub_1BB1D7B64()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BB1D7B7C()
{
  sub_1BB1D88A8();
  return sub_1BB874710();
}

uint64_t sub_1BB1D7BA4()
{
  sub_1BB1D88A8();
  return sub_1BB87471C();
}

_OWORD *FormatPuzzle.deinit()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[9];

  swift_bridgeObjectRelease();
  v1 = v0[9];
  v6[6] = v0[8];
  v6[7] = v1;
  v6[8] = v0[10];
  v2 = v0[5];
  v6[2] = v0[4];
  v6[3] = v2;
  v3 = v0[7];
  v6[4] = v0[6];
  v6[5] = v3;
  v4 = v0[3];
  v6[0] = v0[2];
  v6[1] = v4;
  sub_1BB1D8930((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPuzzle.__deallocating_deinit()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[9];

  swift_bridgeObjectRelease();
  v1 = v0[9];
  v6[6] = v0[8];
  v6[7] = v1;
  v6[8] = v0[10];
  v2 = v0[5];
  v6[2] = v0[4];
  v6[3] = v2;
  v3 = v0[7];
  v6[4] = v0[6];
  v6[5] = v3;
  v4 = v0[3];
  v6[0] = v0[2];
  v6[1] = v4;
  sub_1BB1D8930((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatPuzzle.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v24[18];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  char v44;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3AB638, (uint64_t (*)(void))sub_1BB1D88A8, (uint64_t)&type metadata for FormatPuzzle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1D88A8();
  sub_1BB8746C8();
  v44 = 0;
  v9 = v22;
  sub_1BB87417C();
  if (v9)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22 = v6;
  swift_beginAccess();
  v11 = *(_OWORD *)(v2 + 112);
  v12 = *(_OWORD *)(v2 + 144);
  v40 = *(_OWORD *)(v2 + 128);
  v41 = v12;
  v13 = *(_OWORD *)(v2 + 144);
  v42 = *(_OWORD *)(v2 + 160);
  v14 = *(_OWORD *)(v2 + 48);
  v15 = *(_OWORD *)(v2 + 80);
  v36 = *(_OWORD *)(v2 + 64);
  v37 = v15;
  v16 = *(_OWORD *)(v2 + 80);
  v17 = *(_OWORD *)(v2 + 112);
  v38 = *(_OWORD *)(v2 + 96);
  v39 = v17;
  v18 = *(_OWORD *)(v2 + 48);
  v34 = *(_OWORD *)(v2 + 32);
  v35 = v18;
  v31 = v40;
  v32 = v13;
  v33 = *(_OWORD *)(v2 + 160);
  v27 = v36;
  v28 = v16;
  v29 = v38;
  v30 = v11;
  v25 = v34;
  v26 = v14;
  memset(v24, 0, sizeof(v24));
  if ((_s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(&v25, v24) & 1) == 0)
  {
    LOBYTE(v24[0]) = 1;
    v31 = v40;
    v32 = v41;
    v33 = v42;
    v27 = v36;
    v28 = v37;
    v29 = v38;
    v30 = v39;
    v25 = v34;
    v26 = v35;
    sub_1BB1D89D8();
    sub_1BB02B938();
    sub_1BB874464();
  }
  swift_beginAccess();
  v19 = *(_QWORD *)(v2 + 176);
  if (*(_QWORD *)(v19 + 16))
  {
    v43 = 2;
    swift_bridgeObjectRetain_n();
    v20 = sub_1BA67F4CC(v19);
    swift_bridgeObjectRelease();
    v23 = v20;
    swift_retain();
    sub_1BA5BBDDC((uint64_t *)&v23);
    swift_release();
    v24[0] = v23;
    sub_1BB1D89D8();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5BBCE4();
    sub_1BB874464();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_beginAccess();
  v21 = *(_QWORD *)(v2 + 184);
  if (*(_QWORD *)(v21 + 16))
  {
    v43 = 3;
    v23 = (_QWORD *)v21;
    sub_1BB1D89D8();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5DBC08((unint64_t *)&qword_1ED39D9A0, (uint64_t (*)(void))sub_1BA89B7F8, MEMORY[0x1E0DEAF10]);
    sub_1BB874464();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v5);
}

_QWORD *sub_1BB1D8074@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatPuzzle.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB1D80C8(_QWORD *a1)
{
  return FormatPuzzle.encode(to:)(a1);
}

uint64_t sub_1BB1D80E8(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed12FormatPuzzleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1BB1D80F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v37;

  if (a2)
  {
    v21 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    if (a4)
      goto LABEL_3;
  }
  else
  {
    v21 = 0;
    if (a4)
    {
LABEL_3:
      v22 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      if (a6)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  v22 = 0;
  if (a6)
  {
LABEL_4:
    v23 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v24 = a10;
    if (a8)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  v23 = 0;
  v24 = a10;
  if (a8)
  {
LABEL_5:
    v25 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v26 = a12;
    if (v24)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  v25 = 0;
  v26 = a12;
  if (v24)
  {
LABEL_6:
    v27 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v28 = a14;
    if (v26)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  v27 = 0;
  v28 = a14;
  if (v26)
  {
LABEL_7:
    v29 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v30 = a16;
    if (v28)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  v29 = 0;
  v30 = a16;
  if (v28)
  {
LABEL_8:
    v31 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v32 = a18;
    if (v30)
      goto LABEL_9;
LABEL_18:
    v33 = 0;
    if (v32)
      goto LABEL_10;
LABEL_19:
    v34 = 0;
    goto LABEL_20;
  }
LABEL_17:
  v31 = 0;
  v32 = a18;
  if (!v30)
    goto LABEL_18;
LABEL_9:
  v33 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  if (!v32)
    goto LABEL_19;
LABEL_10:
  v34 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
LABEL_20:
  v35 = objc_msgSend(v37, sel_initWithTitle_subtitle_description_author_teaserClue_teaserAnswer_teaserInfo_teaserDirection_teaserNumber_, v21, v22, v23, v25, v27, v29, v31, v33, v34);

  return v35;
}

uint64_t _s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v3 = a1[1];
  v5 = a1[3];
  v4 = a1[4];
  v7 = a1[5];
  v6 = a1[6];
  v9 = a1[7];
  v8 = a1[8];
  v10 = a1[9];
  v11 = a1[10];
  v13 = a1[11];
  v12 = a1[12];
  v14 = a1[13];
  v133 = a1[14];
  v137 = a1[15];
  v15 = a1[16];
  v136 = a1[17];
  v16 = a2[1];
  v140 = a2[2];
  v17 = a2[3];
  v18 = a2[4];
  v20 = a2[5];
  v19 = a2[6];
  v22 = a2[7];
  v21 = a2[8];
  v24 = a2[9];
  v23 = a2[10];
  v26 = a2[11];
  v25 = a2[12];
  v27 = a2[13];
  v134 = a2[14];
  v138 = a2[15];
  v132 = a2[16];
  v135 = a2[17];
  if (!v3)
  {
    v139 = a1[2];
    if (v16)
      return 0;
    goto LABEL_8;
  }
  if (!v16)
    return 0;
  v139 = a1[2];
  if (*a1 == *a2 && v3 == v16)
    goto LABEL_8;
  v128 = a2[10];
  v112 = a2[7];
  v99 = a1[16];
  v100 = a2[12];
  v101 = a2[4];
  v103 = a2[5];
  v28 = a1[12];
  v107 = a1[4];
  v109 = a2[6];
  v29 = a1[13];
  v117 = a1[6];
  v120 = a2[8];
  v30 = a2[13];
  v31 = a1[10];
  v105 = a1[5];
  v32 = a1[11];
  v33 = a2[11];
  v34 = a1[8];
  v35 = a1[9];
  v124 = a2[9];
  v36 = sub_1BB874398();
  v24 = v124;
  v23 = v128;
  v10 = v35;
  v8 = v34;
  v26 = v33;
  v13 = v32;
  v20 = v103;
  v7 = v105;
  v11 = v31;
  v19 = v109;
  v22 = v112;
  v27 = v30;
  v6 = v117;
  v21 = v120;
  v14 = v29;
  v4 = v107;
  v12 = v28;
  v25 = v100;
  v18 = v101;
  v15 = v99;
  v37 = v36;
  result = 0;
  if ((v37 & 1) != 0)
  {
LABEL_8:
    if (v5)
    {
      if (!v17)
        return 0;
      if (v139 != v140 || v5 != v17)
      {
        v129 = v23;
        v118 = v6;
        v121 = v21;
        v39 = v15;
        v40 = v12;
        v104 = v20;
        v106 = v7;
        v41 = v14;
        v113 = v22;
        v115 = v9;
        v42 = v27;
        v43 = v25;
        v108 = v4;
        v110 = v19;
        v44 = v11;
        v45 = v13;
        v46 = v26;
        v102 = v18;
        v47 = v8;
        v48 = v10;
        v125 = v24;
        v49 = sub_1BB874398();
        v24 = v125;
        v23 = v129;
        v10 = v48;
        v8 = v47;
        v26 = v46;
        v13 = v45;
        v7 = v106;
        v4 = v108;
        v11 = v44;
        v19 = v110;
        v22 = v113;
        v25 = v43;
        v27 = v42;
        v9 = v115;
        v6 = v118;
        v14 = v41;
        v18 = v102;
        v20 = v104;
        v12 = v40;
        v15 = v39;
        v21 = v121;
        v50 = v49;
        result = 0;
        if ((v50 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v7)
    {
      if (!v20)
        return 0;
      if (v4 != v18 || v7 != v20)
      {
        v126 = v24;
        v130 = v23;
        v119 = v6;
        v122 = v21;
        v51 = v15;
        v52 = v12;
        v53 = v14;
        v114 = v22;
        v116 = v9;
        v54 = v27;
        v55 = v25;
        v111 = v19;
        v56 = v11;
        v57 = v13;
        v58 = v26;
        v59 = v8;
        v60 = v10;
        v61 = sub_1BB874398();
        v24 = v126;
        v23 = v130;
        v10 = v60;
        v8 = v59;
        v26 = v58;
        v13 = v57;
        v11 = v56;
        v19 = v111;
        v22 = v114;
        v25 = v55;
        v27 = v54;
        v9 = v116;
        v6 = v119;
        v14 = v53;
        v12 = v52;
        v15 = v51;
        v21 = v122;
        v62 = v61;
        result = 0;
        if ((v62 & 1) == 0)
          return result;
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v9)
    {
      if (!v22)
        return 0;
      if (v6 != v19 || v9 != v22)
      {
        v127 = v24;
        v131 = v23;
        v123 = v21;
        v63 = v15;
        v64 = v12;
        v65 = v14;
        v66 = v27;
        v67 = v25;
        v68 = v11;
        v69 = v13;
        v70 = v26;
        v71 = v8;
        v72 = v10;
        v73 = sub_1BB874398();
        v24 = v127;
        v23 = v131;
        v10 = v72;
        v8 = v71;
        v26 = v70;
        v13 = v69;
        v11 = v68;
        v25 = v67;
        v27 = v66;
        v14 = v65;
        v12 = v64;
        v15 = v63;
        v21 = v123;
        v74 = v73;
        result = 0;
        if ((v74 & 1) == 0)
          return result;
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v10)
    {
      if (!v24)
        return 0;
      if (v8 != v21 || v10 != v24)
      {
        v75 = v23;
        v76 = v15;
        v77 = v12;
        v78 = v14;
        v79 = v27;
        v80 = v25;
        v81 = v11;
        v82 = v13;
        v83 = v26;
        v84 = sub_1BB874398();
        v23 = v75;
        v26 = v83;
        v13 = v82;
        v11 = v81;
        v25 = v80;
        v27 = v79;
        v14 = v78;
        v12 = v77;
        v15 = v76;
        v85 = v84;
        result = 0;
        if ((v85 & 1) == 0)
          return result;
      }
    }
    else if (v24)
    {
      return 0;
    }
    if (v13)
    {
      if (!v26)
        return 0;
      if (v11 != v23 || v13 != v26)
      {
        v86 = v15;
        v87 = v12;
        v88 = v14;
        v89 = v27;
        v90 = v25;
        v91 = sub_1BB874398();
        v25 = v90;
        v27 = v89;
        v14 = v88;
        v12 = v87;
        v15 = v86;
        v92 = v91;
        result = 0;
        if ((v92 & 1) == 0)
          return result;
      }
    }
    else if (v26)
    {
      return 0;
    }
    if (v14)
    {
      if (!v27)
        return 0;
      if (v12 != v25 || v14 != v27)
      {
        v93 = v15;
        v94 = sub_1BB874398();
        v15 = v93;
        v95 = v94;
        result = 0;
        if ((v95 & 1) == 0)
          return result;
      }
    }
    else if (v27)
    {
      return 0;
    }
    if (v137)
    {
      if (!v138)
        return 0;
      if (v133 != v134 || v137 != v138)
      {
        v96 = v15;
        v97 = sub_1BB874398();
        v15 = v96;
        v98 = v97;
        result = 0;
        if ((v98 & 1) == 0)
          return result;
      }
    }
    else if (v138)
    {
      return 0;
    }
    if (v136)
    {
      if (v135 && (v15 == v132 && v136 == v135 || (sub_1BB874398() & 1) != 0))
        return 1;
    }
    else if (!v135)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BB1D88A8()
{
  unint64_t result;

  result = qword_1ED3A54D8;
  if (!qword_1ED3A54D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6BE0, &type metadata for FormatPuzzle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A54D8);
  }
  return result;
}

unint64_t sub_1BB1D88EC()
{
  unint64_t result;

  result = qword_1ED3A54F0;
  if (!qword_1ED3A54F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6B90, &type metadata for FormatPuzzle.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A54F0);
  }
  return result;
}

uint64_t sub_1BB1D8930(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BB1D89D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB630;
  if (!qword_1ED3AB630)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AB638, (uint64_t (*)(void))sub_1BB1D88A8, (uint64_t)&type metadata for FormatPuzzle.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB630);
  }
  return result;
}

unint64_t sub_1BB1D8A40(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB02B8F0();
  a1[2] = sub_1BB02B938();
  result = sub_1BB1D8A74();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1D8A74()
{
  unint64_t result;

  result = qword_1EF2BD530;
  if (!qword_1EF2BD530)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzle.Overrides, &type metadata for FormatPuzzle.Overrides);
    atomic_store(result, (unint64_t *)&qword_1EF2BD530);
  }
  return result;
}

uint64_t sub_1BB1D8AB8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB1D8B1C(&qword_1ED3A5530, (uint64_t)&protocol conformance descriptor for FormatPuzzle);
  a1[2] = sub_1BB1D8B1C((unint64_t *)&unk_1ED3A5520, (uint64_t)&protocol conformance descriptor for FormatPuzzle);
  result = sub_1BB1D8B1C(&qword_1EF2BD538, (uint64_t)&protocol conformance descriptor for FormatPuzzle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB1D8B1C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatPuzzle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatPuzzle()
{
  return objc_opt_self();
}

uint64_t sub_1BB1D8B78@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[9];

  v3 = (_OWORD *)*a1;
  swift_beginAccess();
  v4 = v3[7];
  v5 = v3[8];
  v6 = v3[9];
  v15[8] = v3[10];
  v7 = v3[8];
  v15[7] = v3[9];
  v8 = v3[3];
  v10 = v3[5];
  v9 = v3[6];
  v15[2] = v3[4];
  v15[3] = v10;
  v15[5] = v4;
  v15[6] = v5;
  v15[4] = v9;
  v15[0] = v3[2];
  v15[1] = v8;
  a2[6] = v7;
  a2[7] = v6;
  a2[8] = v3[10];
  v11 = v3[5];
  a2[2] = v3[4];
  a2[3] = v11;
  v12 = v3[7];
  a2[4] = v3[6];
  a2[5] = v12;
  v13 = v3[3];
  *a2 = v3[2];
  a2[1] = v13;
  return sub_1BA8CB1AC((uint64_t)v15);
}

uint64_t sub_1BB1D8C20@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 176);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1D8C6C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 184);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatPuzzle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatPuzzle.__allocating_init(identifier:overrides:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatPuzzle.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for FormatPuzzle.Overrides()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatPuzzle.Overrides(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatPuzzle.Overrides(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FormatPuzzle.Overrides(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPuzzle.Overrides(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPuzzle.Overrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzle.Overrides()
{
  return &type metadata for FormatPuzzle.Overrides;
}

uint64_t storeEnumTagSinglePayload for FormatPuzzle.Overrides.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BB1D9140 + 4 * byte_1BB8F6862[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BB1D9174 + 4 * byte_1BB8F685D[v4]))();
}

uint64_t sub_1BB1D9174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1D917C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1D9184);
  return result;
}

uint64_t sub_1BB1D9190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1D9198);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BB1D919C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1D91A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzle.Overrides.CodingKeys()
{
  return &type metadata for FormatPuzzle.Overrides.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FormatPuzzle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB1D920C + 4 * byte_1BB8F686C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB1D9240 + 4 * byte_1BB8F6867[v4]))();
}

uint64_t sub_1BB1D9240(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1D9248(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1D9250);
  return result;
}

uint64_t sub_1BB1D925C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1D9264);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB1D9268(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1D9270(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzle.CodingKeys()
{
  return &type metadata for FormatPuzzle.CodingKeys;
}

unint64_t sub_1BB1D9290()
{
  unint64_t result;

  result = qword_1EF2BD540;
  if (!qword_1EF2BD540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6AB0, &type metadata for FormatPuzzle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD540);
  }
  return result;
}

unint64_t sub_1BB1D92D8()
{
  unint64_t result;

  result = qword_1EF2BD548;
  if (!qword_1EF2BD548)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6B68, &type metadata for FormatPuzzle.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD548);
  }
  return result;
}

unint64_t sub_1BB1D9320()
{
  unint64_t result;

  result = qword_1ED3A5500;
  if (!qword_1ED3A5500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6AD8, &type metadata for FormatPuzzle.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5500);
  }
  return result;
}

unint64_t sub_1BB1D9368()
{
  unint64_t result;

  result = qword_1ED3A54F8;
  if (!qword_1ED3A54F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6B00, &type metadata for FormatPuzzle.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A54F8);
  }
  return result;
}

unint64_t sub_1BB1D93B0()
{
  unint64_t result;

  result = qword_1ED3A54E8;
  if (!qword_1ED3A54E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6A20, &type metadata for FormatPuzzle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A54E8);
  }
  return result;
}

unint64_t sub_1BB1D93F8()
{
  unint64_t result;

  result = qword_1ED3A54E0;
  if (!qword_1ED3A54E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6A48, &type metadata for FormatPuzzle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A54E0);
  }
  return result;
}

uint64_t sub_1BB1D943C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C43726573616574 && a2 == 0xEA00000000006575 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E41726573616574 && a2 == 0xEC00000072657773 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E49726573616574 && a2 == 0xEA00000000006F66 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6944726573616574 && a2 == 0xEF6E6F6974636572 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x754E726573616574 && a2 == 0xEC0000007265626DLL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t FormatSplitView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  swift_beginAccess();
  return sub_1BB1D98A4(v3, a1);
}

uint64_t sub_1BB1D98A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA49EAE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1D98E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  sub_1BA49EAE0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - v8;
  sub_1BB1D98A4(a1, (uint64_t)&v12 - v8);
  v10 = *a2 + OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  swift_beginAccess();
  sub_1BB1D9A90((uint64_t)v9, v10);
  swift_endAccess();
  sub_1BB1D98A4(v10, (uint64_t)v6);
  sub_1BB87177C();
  return sub_1BB1D9AD4((uint64_t)v9);
}

uint64_t FormatSplitView.model.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BA49EAE0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  swift_beginAccess();
  sub_1BB1D9A90(a1, v6);
  swift_endAccess();
  sub_1BB1D98A4(v6, (uint64_t)v5);
  sub_1BB87177C();
  return sub_1BB1D9AD4(a1);
}

uint64_t sub_1BB1D9A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA49EAE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1D9AD4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA49EAE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*FormatSplitView.model.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_1BA49EAE0();
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  v3[4] = v5;
  v3[5] = v6;
  swift_beginAccess();
  return sub_1BB1D9B8C;
}

void sub_1BB1D9B8C(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;

  v3 = *a1;
  swift_endAccess();
  v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    sub_1BB1D98A4(v3[3] + v3[5], v3[4]);
    sub_1BB87177C();
  }
  free(v4);
  free(v3);
}

id FormatSplitView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *FormatSplitView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8NewsFeed15FormatSplitView_splitView;
  v11 = objc_allocWithZone((Class)sub_1BB871788());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = &v12[OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model];
  v14 = sub_1BB86FA24();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);

  v19.receiver = v12;
  v19.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed15FormatSplitView_splitView];
  v17 = v15;
  objc_msgSend(v17, sel_addSubview_, v16);
  objc_msgSend(v17, sel_setClipsToBounds_, 1);

  return v17;
}

Swift::Void __swiftcall FormatSplitView.layoutSubviews()()
{
  char *v0;
  void *v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed15FormatSplitView_splitView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
}

id FormatSplitView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall FormatSplitView.prepareForReuse()()
{
  sub_1BB871770();
}

uint64_t sub_1BB1D9FF4()
{
  return sub_1BB871770();
}

void sub_1BB1DA020()
{
  sub_1BB1DA0DC(&qword_1EF2BD560, (uint64_t)&protocol conformance descriptor for FormatSplitView);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB1DA058()
{
  return sub_1BB1DA0DC(&qword_1EF2BD558, (uint64_t)&protocol conformance descriptor for FormatSplitView);
}

uint64_t sub_1BB1DA07C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  swift_beginAccess();
  return sub_1BB1D98A4(v3, a2);
}

uint64_t sub_1BB1DA0D4()
{
  return type metadata accessor for FormatSplitView();
}

uint64_t sub_1BB1DA0DC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatSplitView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1BB1DA11C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C8B0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v8((uint64_t *)v14, (uint64_t *)v15, v7);
    v16 = a3[8];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1BB86BC8C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[10];
    v25 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)a1 + v24) = (uint64_t)v25;
    v26 = v25;
  }
  return a1;
}

void sub_1BB1DA250(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1BB86C8B0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + a2[7], v4);
  v6 = a1 + a2[8];
  v7 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[9];
  v9 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

}

uint64_t sub_1BB1DA308(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;

  v6 = sub_1BB86C8B0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  swift_bridgeObjectRetain();
  v7(v13, v14, v6);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[10];
  v24 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v25 = v24;
  return a1;
}

uint64_t sub_1BB1DA410(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v6 = sub_1BB86C8B0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[10];
  v20 = *(void **)(a2 + v19);
  v21 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v22 = v20;

  return a1;
}

uint64_t sub_1BB1DA528(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1BB86C8B0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1BB1DA610(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v6 = sub_1BB86C8B0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1BB86BC8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = a3[10];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  return a1;
}

uint64_t sub_1BB1DA710()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1DA71C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_1BB86C67C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[8];
    }
    else
    {
      v8 = sub_1BB86BC8C();
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[9];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1BB1DA7EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1DA7F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_1BB86C8B0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_1BB86C67C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v10 = sub_1BB86BC8C();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t UIUserInterfaceIdiom.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 1;
  result = 0x79616C50726163;
  switch(v1)
  {
    case 0:
      result = 0x6669636570736E75;
      break;
    case 1:
      result = 0x656E6F6870;
      break;
    case 2:
      result = 6578544;
      break;
    case 3:
      result = 30324;
      break;
    case 4:
      return result;
    case 6:
      result = 6513005;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1BB1DA974()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x79616C50726163;
  switch(*v0)
  {
    case 0xFFFFFFFFFFFFFFFFLL:
      result = 0x6669636570736E75;
      break;
    case 0:
      result = 0x656E6F6870;
      break;
    case 1:
      result = 6578544;
      break;
    case 2:
      result = 30324;
      break;
    case 3:
      return result;
    case 5:
      result = 6513005;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1BB1DAA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, _QWORD, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  char *v19;
  void (*v20)(char *, _QWORD, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t result;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v33 = sub_1BB8701C8();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v30 = (char *)&v25 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BB86F4B4();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v29 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1BB86FA00();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86FA0C();
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x1E0C80A78](v5);
  v25 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86F4C0();
  v8 = (void (*)(uint64_t))MEMORY[0x1E0DB6900];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86F4CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA65F8D4(0, &qword_1ED3B0938, v8);
  v16 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v16(v11, *MEMORY[0x1E0DB68F0], v7);
  sub_1BB870378();
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v7);
  v16(v11, *MEMORY[0x1E0DB68F8], v7);
  sub_1BB870378();
  v17(v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB6908], v12);
  sub_1BA65F8D4(0, (unint64_t *)&unk_1ED3B0950, (void (*)(uint64_t))MEMORY[0x1E0DB7540]);
  v19 = v25;
  v18 = v26;
  v20 = *(void (**)(char *, _QWORD, uint64_t))(v26 + 104);
  v20(v4, *MEMORY[0x1E0DB7530], v2);
  sub_1BB87036C();
  v21 = *(void (**)(char *, uint64_t))(v18 + 8);
  v21(v4, v2);
  v20(v4, *MEMORY[0x1E0DB7538], v2);
  sub_1BB87036C();
  v21(v4, v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v19, *MEMORY[0x1E0DB7548], v28);
  sub_1BA65F938();
  sub_1BB86F4A8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
  sub_1BA65E330();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB895C60;
  *(_QWORD *)(v22 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(_QWORD *)(v22 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.67);
  *(_QWORD *)(v22 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.67);
  *(_QWORD *)(v22 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 1.0, 0.0);
  v36 = v22;
  sub_1BB872DCC();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v30, *MEMORY[0x1E0DB85B0], v33);
  v23 = v29;
  sub_1BB870198();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v23, *MEMORY[0x1E0DB68E0], v34);
  v35 = 0;
  sub_1BB86F49C();
  sub_1BB86F6DC();
  swift_allocObject();
  result = sub_1BB86F6D0();
  qword_1ED3AC188 = result;
  return result;
}

uint64_t static ShineOptions.titleShine.getter()
{
  if (qword_1ED3AC190 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1BB1DAF7C(char *a1, char *a2)
{
  return sub_1BB7FDBE8(*a1, *a2);
}

uint64_t sub_1BB1DAF88()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1DB014()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1DB07C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1DB104@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB1DB160(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746163696C627570;
  if (*v1)
    v2 = 0x6574614474726F73;
  v3 = 0xEF657461446E6F69;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB1DB1AC()
{
  sub_1BB1DB5BC();
  return sub_1BB872D60();
}

uint64_t sub_1BB1DB208()
{
  sub_1BB1DB5BC();
  return sub_1BB872D0C();
}

void sub_1BB1DB254(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251610;
}

BOOL static FormatIssueBinding.DateTime.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatIssueBinding.DateTime.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatIssueBinding.DateTime.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB1DB2EC()
{
  unint64_t result;

  result = qword_1EF2BD568;
  if (!qword_1EF2BD568)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.DateTime, &type metadata for FormatIssueBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2BD568);
  }
  return result;
}

unint64_t sub_1BB1DB330(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1DB354();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1DB354()
{
  unint64_t result;

  result = qword_1EF2BD570;
  if (!qword_1EF2BD570)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.DateTime, &type metadata for FormatIssueBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2BD570);
  }
  return result;
}

unint64_t sub_1BB1DB398(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8EC54();
  a1[2] = sub_1BAEF2CAC();
  result = sub_1BB1DB2EC();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB1DB3CC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatIssueBinding.DateTime.init(from:)(a1, a2);
}

uint64_t sub_1BB1DB3E0(_QWORD *a1)
{
  return FormatIssueBinding.DateTime.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatIssueBinding.DateTime()
{
  return &type metadata for FormatIssueBinding.DateTime;
}

uint64_t _s8DateTimeOwst_0_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB1DB454 + 4 * byte_1BB8F6DE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB1DB488 + 4 * byte_1BB8F6DE0[v4]))();
}

uint64_t sub_1BB1DB488(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1DB490(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1DB498);
  return result;
}

uint64_t sub_1BB1DB4A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1DB4ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB1DB4B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1DB4B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8DateTimeO10CodingTypeOMa()
{
  return &_s8DateTimeO10CodingTypeON;
}

unint64_t sub_1BB1DB4D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BD578;
  if (!qword_1EF2BD578)
  {
    sub_1BB1DB520();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BD578);
  }
  return result;
}

void sub_1BB1DB520()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BD580)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BD580);
  }
}

unint64_t sub_1BB1DB578()
{
  unint64_t result;

  result = qword_1EF2BD588;
  if (!qword_1EF2BD588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6FE8, &_s8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2BD588);
  }
  return result;
}

unint64_t sub_1BB1DB5BC()
{
  unint64_t result;

  result = qword_1EF2BD590;
  if (!qword_1EF2BD590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6F70, &_s8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2BD590);
  }
  return result;
}

uint64_t FeedDateRange.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FeedDateRange.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedDateRange();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))sub_1BA76D78C);
}

uint64_t FeedDateRange.init(startDate:endDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for FeedDateRange() + 20);
  return sub_1BA50236C(a2, v7);
}

uint64_t FeedDateRange.init(dateRange:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - v13;
  v15 = objc_msgSend(a1, sel_startDate, v12);
  if (!v15)
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
    goto LABEL_8;
  }
  v16 = v15;
  sub_1BB86C874();

  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v17(v14, v7, v4);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v14, 0, 1, v4);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4);
  if ((_DWORD)result == 1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v17(a2, v14, v4);
  v20 = objc_msgSend(a1, sel_endDate);
  if (v20)
  {
    v21 = v20;
    sub_1BB86C874();

    v22 = 0;
  }
  else
  {
    v22 = 1;
  }

  v18(v10, v22, 1, v4);
  v23 = type metadata accessor for FeedDateRange();
  return sub_1BA50236C((uint64_t)v10, (uint64_t)&a2[*(int *)(v23 + 20)]);
}

uint64_t sub_1BB1DB8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB1DC1D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB1DB8C4()
{
  sub_1BA502328();
  return sub_1BB874710();
}

uint64_t sub_1BB1DB8EC()
{
  sub_1BA502328();
  return sub_1BB87471C();
}

uint64_t FeedDateRange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BA502128(0, &qword_1ED39C100, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA502328();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB86C8B0();
  sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
  sub_1BB8741AC();
  if (!v1)
  {
    type metadata accessor for FeedDateRange();
    v9[14] = 1;
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB1DBA70(_QWORD *a1)
{
  return FeedDateRange.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedDateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C8B0();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      sub_1BA76D78C();
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for FeedDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for FeedDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1BA76D78C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for FeedDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA76D78C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for FeedDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1BA76D78C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for FeedDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA76D78C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedDateRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1DBFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1BA76D78C();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1BB1DC044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_1BB86C8B0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1BA76D78C();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t storeEnumTagSinglePayload for FeedDateRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB1DC10C + 4 * byte_1BB8F703D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB1DC140 + 4 * byte_1BB8F7038[v4]))();
}

uint64_t sub_1BB1DC140(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1DC148(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1DC150);
  return result;
}

uint64_t sub_1BB1DC15C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1DC164);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB1DC168(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1DC170(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedDateRange.CodingKeys()
{
  return &type metadata for FeedDateRange.CodingKeys;
}

unint64_t sub_1BB1DC190()
{
  unint64_t result;

  result = qword_1EF2BD598;
  if (!qword_1EF2BD598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F7150, &type metadata for FeedDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD598);
  }
  return result;
}

uint64_t sub_1BB1DC1D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t SportsEmbedConfigResourceRecord.rank.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1DC300()
{
  return 1802396018;
}

uint64_t sub_1BB1DC310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1802396018 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB1DC394()
{
  sub_1BB1DC4FC();
  return sub_1BB874710();
}

uint64_t sub_1BB1DC3BC()
{
  sub_1BB1DC4FC();
  return sub_1BB87471C();
}

uint64_t SportsEmbedConfigResourceRecord.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  sub_1BB1DC6C8(0, &qword_1EF2BD5A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v11[0] = *(_OWORD *)v1;
  v9 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1DC4FC();
  sub_1BB8746C8();
  v11[1] = v11[0];
  v12 = v9;
  v13 = v8;
  sub_1BB1DC540();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB1DC4FC()
{
  unint64_t result;

  result = qword_1ED3A92F8;
  if (!qword_1ED3A92F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F7314, &type metadata for SportsEmbedConfigResourceRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A92F8);
  }
  return result;
}

unint64_t sub_1BB1DC540()
{
  unint64_t result;

  result = qword_1EF2BD5A8;
  if (!qword_1EF2BD5A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResourceRank, &type metadata for SportsEmbedConfigResourceRank);
    atomic_store(result, (unint64_t *)&qword_1EF2BD5A8);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceRecord.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  _QWORD v13[2];
  __int128 v14;

  sub_1BB1DC6C8(0, &qword_1ED3AB4E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1DC4FC();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BB1DC724();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v10 = v13[1];
    v11 = v14;
    *(_QWORD *)a2 = v13[0];
    *(_QWORD *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB1DC6C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB1DC4FC();
    v7 = a3(a1, &type metadata for SportsEmbedConfigResourceRecord.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB1DC724()
{
  unint64_t result;

  result = qword_1ED3A89C8;
  if (!qword_1ED3A89C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResourceRank, &type metadata for SportsEmbedConfigResourceRank);
    atomic_store(result, (unint64_t *)&qword_1ED3A89C8);
  }
  return result;
}

uint64_t sub_1BB1DC768@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsEmbedConfigResourceRecord.init(from:)(a1, a2);
}

uint64_t sub_1BB1DC77C(_QWORD *a1)
{
  return SportsEmbedConfigResourceRecord.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceRecord()
{
  return &type metadata for SportsEmbedConfigResourceRecord;
}

uint64_t storeEnumTagSinglePayload for SportsEmbedConfigResourceRecord.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB1DC7E0 + 4 * byte_1BB8F71D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB1DC800 + 4 * byte_1BB8F71D5[v4]))();
}

_BYTE *sub_1BB1DC7E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB1DC800(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB1DC808(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB1DC810(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB1DC818(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB1DC820(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceRecord.CodingKeys()
{
  return &type metadata for SportsEmbedConfigResourceRecord.CodingKeys;
}

unint64_t sub_1BB1DC840()
{
  unint64_t result;

  result = qword_1EF2BD5B0;
  if (!qword_1EF2BD5B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F72EC, &type metadata for SportsEmbedConfigResourceRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD5B0);
  }
  return result;
}

unint64_t sub_1BB1DC888()
{
  unint64_t result;

  result = qword_1ED3A9308;
  if (!qword_1ED3A9308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F725C, &type metadata for SportsEmbedConfigResourceRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9308);
  }
  return result;
}

unint64_t sub_1BB1DC8D0()
{
  unint64_t result;

  result = qword_1ED3A9300;
  if (!qword_1ED3A9300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F7284, &type metadata for SportsEmbedConfigResourceRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9300);
  }
  return result;
}

uint64_t destroy for SportsStandingRecordCompetitor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SportsStandingRecordCompetitor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsStandingRecordCompetitor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsStandingRecordCompetitor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsStandingRecordCompetitor()
{
  return &type metadata for SportsStandingRecordCompetitor;
}

uint64_t sub_1BB1DCA70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  sub_1BB1DD390(0, &qword_1EF2BD608, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1DD27C();
  v9 = v4;
  sub_1BB8746C8();
  LOBYTE(v16) = 0;
  v10 = v15;
  sub_1BB87417C();
  if (!v10)
  {
    v12 = v13;
    if (*(_QWORD *)(v14 + 16))
    {
      v17 = 1;
      v16 = v14;
      sub_1BB1DD3EC();
      sub_1BA4C576C(0, &qword_1EF2BD618);
      sub_1BB1DD444(&qword_1EF2BD620, &qword_1EF2BD618, (uint64_t)&type metadata for SportsStandingRecordStatistic, (uint64_t (*)(void))sub_1BB1DD238);
      sub_1BB874464();
    }
    if (*(_QWORD *)(v12 + 16))
    {
      v17 = 2;
      v16 = v12;
      sub_1BB1DD3EC();
      sub_1BA4C576C(0, &qword_1EF2BD628);
      sub_1BB1DD444(&qword_1EF2BD630, &qword_1EF2BD628, (uint64_t)&type metadata for SportsStandingRecordLeague, (uint64_t (*)(void))sub_1BB1DD1B0);
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v9);
}

uint64_t sub_1BB1DCC98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v35 = a2;
  sub_1BAEFBAC0(0, &qword_1EF2BD5B8, (void (*)(void))sub_1BB1DD16C, (void (*)(void))sub_1BB1DD1B0);
  v34 = v3;
  v36 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v30 - v4;
  sub_1BAEFBAC0(0, &qword_1EF2BD5D0, (void (*)(void))sub_1BB1DD1F4, (void (*)(void))sub_1BB1DD238);
  v37 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - v7;
  sub_1BB1DD390(0, &qword_1EF2BD5E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1DD27C();
  v14 = v39;
  sub_1BB87468C();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = v6;
  v15 = v37;
  v16 = v38;
  v39 = a1;
  v44 = 0;
  v31 = sub_1BB874098();
  v32 = v18;
  v43 = 1;
  swift_bridgeObjectRetain();
  v19 = sub_1BB8740F8();
  if ((v19 & 1) != 0)
  {
    v40 = 1;
    sub_1BB1DD328();
    sub_1BB8740D4();
    v20 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v15);
  }
  else
  {
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v21 = v16;
  v42 = 2;
  v38 = (char *)v20;
  swift_bridgeObjectRetain();
  v22 = sub_1BB8740F8();
  v23 = v35;
  v24 = v36;
  if ((v22 & 1) != 0)
  {
    v41 = 2;
    sub_1BB1DD2C0();
    v25 = v21;
    v26 = v34;
    sub_1BB8740D4();
    v27 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v28 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v23 = v31;
  v23[1] = v29;
  v23[2] = (uint64_t)v38;
  v23[3] = v27;
  __swift_destroy_boxed_opaque_existential_1(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1DD05C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6974736974617473;
  if (*v0 != 1)
    v1 = 0x4C676E6979616C70;
  if (*v0)
    return v1;
  else
    return 0x6163696E6F6E6163;
}

uint64_t sub_1BB1DD0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB1DD64C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB1DD0F4()
{
  sub_1BB1DD27C();
  return sub_1BB874710();
}

uint64_t sub_1BB1DD11C()
{
  sub_1BB1DD27C();
  return sub_1BB87471C();
}

uint64_t sub_1BB1DD144@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB1DCC98(a1, a2);
}

uint64_t sub_1BB1DD158(_QWORD *a1)
{
  return sub_1BB1DCA70(a1);
}

unint64_t sub_1BB1DD16C()
{
  unint64_t result;

  result = qword_1EF2BD5C0;
  if (!qword_1EF2BD5C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9347A4, &type metadata for SportsStandingRecordLeague);
    atomic_store(result, (unint64_t *)&qword_1EF2BD5C0);
  }
  return result;
}

unint64_t sub_1BB1DD1B0()
{
  unint64_t result;

  result = qword_1EF2BD5C8;
  if (!qword_1EF2BD5C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93477C, &type metadata for SportsStandingRecordLeague);
    atomic_store(result, (unint64_t *)&qword_1EF2BD5C8);
  }
  return result;
}

unint64_t sub_1BB1DD1F4()
{
  unint64_t result;

  result = qword_1EF2BD5D8;
  if (!qword_1EF2BD5D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F8A18, &type metadata for SportsStandingRecordStatistic);
    atomic_store(result, (unint64_t *)&qword_1EF2BD5D8);
  }
  return result;
}

unint64_t sub_1BB1DD238()
{
  unint64_t result;

  result = qword_1EF2BD5E0;
  if (!qword_1EF2BD5E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F89F0, &type metadata for SportsStandingRecordStatistic);
    atomic_store(result, (unint64_t *)&qword_1EF2BD5E0);
  }
  return result;
}

unint64_t sub_1BB1DD27C()
{
  unint64_t result;

  result = qword_1EF2BD5F0;
  if (!qword_1EF2BD5F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F74B4, &type metadata for SportsStandingRecordCompetitor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD5F0);
  }
  return result;
}

unint64_t sub_1BB1DD2C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BD5F8;
  if (!qword_1EF2BD5F8)
  {
    sub_1BAEFBAC0(255, &qword_1EF2BD5B8, (void (*)(void))sub_1BB1DD16C, (void (*)(void))sub_1BB1DD1B0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BD5F8);
  }
  return result;
}

unint64_t sub_1BB1DD328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BD600;
  if (!qword_1EF2BD600)
  {
    sub_1BAEFBAC0(255, &qword_1EF2BD5D0, (void (*)(void))sub_1BB1DD1F4, (void (*)(void))sub_1BB1DD238);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BD600);
  }
  return result;
}

void sub_1BB1DD390(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB1DD27C();
    v7 = a3(a1, &type metadata for SportsStandingRecordCompetitor.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB1DD3EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BD610;
  if (!qword_1EF2BD610)
  {
    sub_1BB1DD390(255, &qword_1EF2BD608, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BD610);
  }
  return result;
}

uint64_t sub_1BB1DD444(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4C576C(255, a2);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsStandingRecordCompetitor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB1DD4F4 + 4 * byte_1BB8F7375[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB1DD528 + 4 * byte_1BB8F7370[v4]))();
}

uint64_t sub_1BB1DD528(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1DD530(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1DD538);
  return result;
}

uint64_t sub_1BB1DD544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1DD54CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB1DD550(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1DD558(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingRecordCompetitor.CodingKeys()
{
  return &type metadata for SportsStandingRecordCompetitor.CodingKeys;
}

unint64_t sub_1BB1DD578()
{
  unint64_t result;

  result = qword_1EF2BD638;
  if (!qword_1EF2BD638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F748C, &type metadata for SportsStandingRecordCompetitor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD638);
  }
  return result;
}

unint64_t sub_1BB1DD5C0()
{
  unint64_t result;

  result = qword_1EF2BD640;
  if (!qword_1EF2BD640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F73FC, &type metadata for SportsStandingRecordCompetitor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD640);
  }
  return result;
}

unint64_t sub_1BB1DD608()
{
  unint64_t result;

  result = qword_1EF2BD648;
  if (!qword_1EF2BD648)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F7424, &type metadata for SportsStandingRecordCompetitor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BD648);
  }
  return result;
}

uint64_t sub_1BB1DD64C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6163696E6F6E6163 && a2 == 0xEB0000000064496CLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974736974617473 && a2 == 0xEA00000000007363 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C676E6979616C70 && a2 == 0xEE00736575676165)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t FormatAnimationNodeStyle.animations.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB1DD898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  int v13;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  v11 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_BYTE *)(v0 + 64);
  swift_beginAccess();
  v7 = *(_QWORD *)(v0 + 72);
  v13 = *(_DWORD *)(v0 + 80);
  v12 = *(_BYTE *)(v0 + 84);
  swift_beginAccess();
  v8 = *(_QWORD *)(v0 + 88);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 72) = 0;
  swift_beginAccess();
  *(_QWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 24) = v1;
  *(_QWORD *)(v9 + 32) = v3;
  *(_QWORD *)(v9 + 40) = v2;
  *(_QWORD *)(v9 + 48) = v4;
  *(_QWORD *)(v9 + 56) = v5;
  *(_BYTE *)(v9 + 64) = v6;
  swift_beginAccess();
  *(_QWORD *)(v9 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 84) = v12;
  *(_DWORD *)(v9 + 80) = v13;
  swift_beginAccess();
  *(_QWORD *)(v9 + 88) = v8;
  return v9;
}

uint64_t FormatAnimationNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAnimationNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAnimationNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 FormatAnimationNodeStyle.anchorPoint.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[4].n128_u8[0];
  result = v1[3];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

