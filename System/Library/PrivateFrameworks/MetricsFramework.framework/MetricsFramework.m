Swift::Bool __swiftcall inStoreDemoMode()()
{
  __CFString *v0;
  __CFString *v1;
  Boolean *v2;
  int AppBooleanValue;
  BOOL v4;

  v0 = (__CFString *)sub_2419AA0DC();
  v1 = (__CFString *)sub_2419AA0DC();
  v2 = (Boolean *)swift_slowAlloc();
  AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, v2);
  LODWORD(v2) = *v2;

  if ((_DWORD)v2)
    v4 = AppBooleanValue == 0;
  else
    v4 = 1;
  return !v4;
}

void type metadata accessor for SISchemaResponseCategory(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162AD0);
}

void type metadata accessor for SISchemaProgramCode(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162AD8);
}

void type metadata accessor for ODDSiriSchemaODDExperimentDigestType(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162AE0);
}

void type metadata accessor for EXPSchemaEXPTreatmentAllocationStatus(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162AE8);
}

void type metadata accessor for ORCHSchemaORCHSiriNlMode(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162AF0);
}

void type metadata accessor for ORCHSchemaORCHSiriAsrMode(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162AF8);
}

void type metadata accessor for SISchemaAssistantViewMode(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162B00);
}

void type metadata accessor for SISchemaDataSharingOptInState(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162B08);
}

void type metadata accessor for ODDSiriSchemaODDDeviceCohortType(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162B10);
}

void type metadata accessor for ODDSiriSchemaODDDataAvailabilityState(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162B18);
}

void type metadata accessor for ODDSiriSchemaODDDeviceSegmentType(uint64_t a1)
{
  sub_24193CEE0(a1, &qword_257162B20);
}

void sub_24193CEE0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

BOOL sub_24193CF24(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_24193CF38(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_24193CF40@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_24193CF50(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_24193CF5C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t (*static SiriUserDefinedFunctions.regexLike.getter())()
{
  return sub_24193CF78;
}

uint64_t sub_24193CF8C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v13[4];
  _QWORD v14[4];

  __swift_instantiateConcreteTypeFromMangledName(&qword_257162B28);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162B30);
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8]();
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  sub_24193D1D0(a1 + 32, (uint64_t)v14);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return 2;
  if (v9 < 2)
    goto LABEL_10;
  v11 = v13[2];
  v10 = v13[3];
  sub_24193D1D0(a1 + 64, (uint64_t)v14);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_2419A9E24();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    v14[0] = v11;
    v14[1] = v10;
    sub_24193D24C();
    sub_24193D290();
    v12 = sub_2419AA094();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    return v12 & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 2;
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24269F6D4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_24193D1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24193D20C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162B28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24193D24C()
{
  unint64_t result;

  result = qword_257162B38;
  if (!qword_257162B38)
  {
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257162B38);
  }
  return result;
}

unint64_t sub_24193D290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257162B40;
  if (!qword_257162B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257162B30);
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&qword_257162B40);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24269F6E0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_24193D320()
{
  return swift_task_switch();
}

uint64_t sub_24193D334()
{
  return sub_2419AA418();
}

uint64_t RequestWithNoAssetReporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RequestWithNoAssetReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_24193D3BC()
{
  unint64_t result;

  result = qword_257162B50;
  if (!qword_257162B50)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for RequestWithNoAssetResults, &type metadata for RequestWithNoAssetResults);
    atomic_store(result, (unint64_t *)&qword_257162B50);
  }
  return result;
}

uint64_t sub_24193D400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(**(_QWORD **)v1 + 80) + *(_QWORD *)(**(_QWORD **)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t sub_24193D468()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t type metadata accessor for RequestWithNoAssetReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for RequestWithNoAssetReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RequestWithNoAssetReporter.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 80) + *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

ValueMetadata *type metadata accessor for SiriBootToAssetDataRecord()
{
  return &type metadata for SiriBootToAssetDataRecord;
}

uint64_t sub_24193D550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24193D5A0()
{
  return type metadata accessor for SiriBootToAssetDataProvider();
}

uint64_t type metadata accessor for SiriBootToAssetDataProvider()
{
  uint64_t result;

  result = qword_257162C38;
  if (!qword_257162C38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24193D5E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_24193D654()
{
  unint64_t result;

  result = qword_257162CC8;
  if (!qword_257162CC8)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriBootToAssetDataRecord, &type metadata for SiriBootToAssetDataRecord);
    atomic_store(result, (unint64_t *)&qword_257162CC8);
  }
  return result;
}

uint64_t sub_24193D698()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_24193D6B4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: ODDAssetAvailabilityFromBoodDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t RequestWithNoAssetResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RequestWithNoAssetResults.eventStreamMetadata.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RequestWithNoAssetResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t RequestWithNoAssetResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RequestWithNoAssetResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*RequestWithNoAssetResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t RequestWithNoAssetResults.combinedRequestNoAssetData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RequestWithNoAssetResults.combinedRequestNoAssetData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*RequestWithNoAssetResults.combinedRequestNoAssetData.modify())()
{
  return nullsub_1;
}

uint64_t sub_24193D828()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24193D830()
{
  return swift_bridgeObjectRetain();
}

uint64_t CombinedRequestNoAssetData.requestWithNoAssetData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CombinedRequestNoAssetData.requestWithNoAssetData.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*CombinedRequestNoAssetData.requestWithNoAssetData.modify())()
{
  return nullsub_1;
}

uint64_t CombinedRequestNoAssetData.eventMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CombinedRequestNoAssetData(0) + 20);
  return sub_24193D8BC(v3, a1);
}

uint64_t type metadata accessor for CombinedRequestNoAssetData(uint64_t a1)
{
  return sub_241941450(a1, qword_257162DA8);
}

uint64_t sub_24193D8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t CombinedRequestNoAssetData.eventMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CombinedRequestNoAssetData(0) + 20);
  return sub_24193D930(a1, v3);
}

uint64_t sub_24193D930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*CombinedRequestNoAssetData.eventMetadata.modify())()
{
  type metadata accessor for CombinedRequestNoAssetData(0);
  return nullsub_1;
}

uint64_t SiriRequestWithNoAssetsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  SiriRequestWithNoAssetsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SiriRequestWithNoAssetsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;

  sub_2419A9D58();
  v9 = v4 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_logger;
  v10 = sub_2419AA040();
  v11 = *(_QWORD *)(v10 - 8);
  v19 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  sub_2419416DC(a2, v4 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_sqlFileURL, &qword_257162CF0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_bookmarkService) = a3;
  v12 = v4 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_oddId;
  v13 = sub_2419A9D1C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  v15 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  swift_retain();
  v16 = (void *)sub_2419AA0DC();
  v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

  if (!v17)
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCF50]), sel_init);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  sub_241941720(a2, &qword_257162CF0);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v10);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_defaults) = v17;
  return v4;
}

uint64_t sub_24193DBA8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  v3 = sub_2419A9CE0();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  sub_2419AA118();
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24193DC74()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t (*v20)(void);
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  void *v51;
  id v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;

  v1 = v0[6] + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_logger;
  swift_retain_n();
  v2 = sub_2419AA028();
  v3 = sub_2419AA238();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v63 = v5;
    sub_2419A9D1C();
    sub_24194169C((unint64_t *)&qword_257162D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v6 = sub_2419AA568();
    v0[4] = sub_24193F470(v6, v7, &v63);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24193B000, v2, v3, "SQL calculator invoked: SiriRequestWithNoAssetsCalculator %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v5, -1, -1);
    MEMORY[0x24269F7A0](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v8 = v0[14];
  v9 = v0[6] + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_sqlFileURL;
  sub_2419416DC(v9, v8, &qword_257162CF0);
  v10 = sub_2419A9C14();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  sub_241941720(v8, &qword_257162CF0);
  if (v13 == 1)
  {
    v14 = sub_2419AA028();
    v15 = sub_2419AA250();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_24193B000, v14, v15, "No URL provided for the sql file", v16, 2u);
      MEMORY[0x24269F7A0](v16, -1, -1);
    }

    sub_24193F23C();
    swift_allocError();
    *v17 = 9;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  v18 = v0[13];
  sub_2419416DC(v9, v18, &qword_257162CF0);
  result = v12(v18, 1, v10);
  if ((_DWORD)result != 1)
  {
    sub_2419AA10C();
    sub_2419AA0C4();
    (*(void (**)(_QWORD, uint64_t))(v11 + 8))(v0[13], v10);
    v21 = (void *)sub_2419A9DE8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162D20);
    sub_2419A9F5C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2419AB040;
    v22 = v21;
    v23 = sub_2419A9F68();
    v25 = v24;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v23;
    *(_QWORD *)(v26 + 24) = v25;
    sub_2419A9F50();
    sub_2419A9F50();
    v27 = objc_allocWithZone((Class)sub_2419A9EE4());
    v62 = v22;
    v61 = (void *)sub_2419A9EC0();
    v28 = sub_2419A9ED8();
    swift_bridgeObjectRelease();
    v29 = (void *)sub_2419A9F08();
    if (v29)
    {
      v30 = v29;
      v31 = v29;
      v32 = v30;
      v33 = sub_2419AA028();
      v34 = sub_2419AA244();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v35 = 138412290;
        v37 = v30;
        v38 = v1;
        v39 = _swift_stdlib_bridgeErrorToNSError();
        v0[3] = v39;
        sub_2419AA2EC();
        *v36 = v39;
        v1 = v38;

        _os_log_impl(&dword_24193B000, v33, v34, "%@", v35, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
        swift_arrayDestroy();
        MEMORY[0x24269F7A0](v36, -1, -1);
        MEMORY[0x24269F7A0](v35, -1, -1);

      }
      else
      {

      }
    }
    v40 = sub_2419831F8(v28, v1);
    swift_bridgeObjectRetain();
    v41 = sub_2419AA028();
    v42 = sub_2419AA238();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v43 = 134217984;
      v0[2] = v40[2];
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24193B000, v41, v42, "SiriRequestWithNoAssetsCalculator query yielded %ld results", v43, 0xCu);
      MEMORY[0x24269F7A0](v43, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v44 = v0[11];
    v45 = v0[8];
    v46 = v0[9];

    sub_2419A9DD0();
    v60 = sub_2419A9DA0();
    v59 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v59(v44, v45);
    sub_2419A9D94();
    if (qword_257162A90 != -1)
      swift_once();
    v47 = v0[11];
    v48 = v0[10];
    v49 = v0[6];
    v57 = v0[7];
    v58 = v0[8];
    v50 = (uint64_t *)v0[5];
    v51 = (void *)qword_25716E860;
    swift_bridgeObjectRetain();
    v52 = v51;
    v53 = sub_24193FBC4(v40, v52);

    swift_bridgeObjectRelease();
    sub_2419A9C5C();
    v54 = (_QWORD *)swift_task_alloc();
    v54[2] = v49;
    v54[3] = v48;
    v54[4] = v47;
    v54[5] = v57;
    v55 = sub_24193FF48(v53, (void (*)(char *, uint64_t))sub_24193FF3C);
    v59(v48, v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();

    swift_release();
    v59(v47, v58);
    v56 = MEMORY[0x24BEE4AF8];
    *v50 = v60;
    v50[1] = v56;
    v50[2] = v55;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  __break(1u);
  return result;
}

uint64_t sub_24193E644@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = a1();
  v5 = v4;
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257162F10);
  a2[3] = result;
  *a2 = v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_24193E68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t result;

  v3 = sub_24193CF8C(a1);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257162F08);
  *(_QWORD *)(a2 + 24) = result;
  *(_BYTE *)a2 = v3;
  return result;
}

uint64_t sub_24193E6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  double v30;
  double v31;
  double v32;
  BOOL v34;
  char *v35;
  double v36;
  void (*v37)(char *, uint64_t);
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint8_t *v60;
  id v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t result;
  double v66;
  unint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t (*v78)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;

  v82 = a5;
  v84 = a4;
  v87 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v83 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v86 = (uint64_t)&v80 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v85 = (uint64_t)&v80 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v88 = (uint8_t *)&v80 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2419A9CE0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v80 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v80 - v28;
  sub_2419416DC(a1, (uint64_t)v19, &qword_257162EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_241941720((uint64_t)v19, &qword_257162EF0);
LABEL_44:
    v77 = type metadata accessor for CombinedRequestNoAssetData(0);
    v78 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56);
    v79 = a6;
    return v78(v79, 1, 1, v77);
  }
  v81 = a6;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v29, v19, v20);
  sub_2419A9C5C();
  sub_2419A9CBC();
  v31 = v30;
  v32 = trunc(v30);
  v34 = v31 > -1.0 && v31 < 1.84467441e19 && v31 == v32;
  v35 = v29;
  if (!v34)
  {
    sub_2419A9CBC();
    a6 = v81;
    if (v36 <= 0.0)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v27, v20);
      v48 = sub_2419AA028();
      v49 = sub_2419AA244();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v50 = 134217984;
        v88 = v50 + 4;
        sub_2419A9CBC();
        v89 = v51;
        sub_2419AA2EC();
        v37 = *(void (**)(char *, uint64_t))(v21 + 8);
        v37(v24, v20);
        _os_log_impl(&dword_24193B000, v48, v49, "Request with no asset event contains date before 1970 %f", v50, 0xCu);
        a6 = v81;
        MEMORY[0x24269F7A0](v50, -1, -1);

      }
      else
      {

        v37 = *(void (**)(char *, uint64_t))(v21 + 8);
        v37(v24, v20);
      }
      v37(v27, v20);
    }
    else
    {
      v37 = *(void (**)(char *, uint64_t))(v21 + 8);
      v37(v27, v20);
    }
    v37(v35, v20);
    goto LABEL_44;
  }
  sub_24194169C(&qword_257162EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  if ((sub_2419AA0B8() & 1) != 0)
  {
    v38 = *(void **)(a3 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_defaults);
    v39 = (void *)sub_2419AA0DC();
    LODWORD(v38) = objc_msgSend(v38, sel_BOOLForKey_, v39);

    if (!(_DWORD)v38)
    {
      v76 = *(void (**)(char *, uint64_t))(v21 + 8);
      v76(v27, v20);
      v76(v29, v20);
      v77 = type metadata accessor for CombinedRequestNoAssetData(0);
      v78 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56);
      v79 = v81;
      return v78(v79, 1, 1, v77);
    }
  }
  v84 = a3;
  v40 = *(_QWORD *)(v87 + 16);
  if (v40)
  {
    v80 = v29;
    v41 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
    v42 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v44 = *v41;
      if (*v41)
      {
        v45 = *(v41 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v42 = sub_2419803E4(0, v42[2] + 1, 1, v42);
        v47 = v42[2];
        v46 = v42[3];
        if (v47 >= v46 >> 1)
          v42 = sub_2419803E4((_QWORD *)(v46 > 1), v47 + 1, 1, v42);
        v42[2] = v47 + 1;
        v43 = &v42[2 * v47];
        v43[4] = v45;
        v43[5] = v44;
      }
      v41 += 34;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
    v35 = v80;
  }
  else
  {
    v42 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v52 = v81;
  v53 = v35;
  if (v42[2])
    swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = (uint64_t)v88;
  sub_2419A9CEC();
  swift_bridgeObjectRelease();
  v55 = sub_2419A9D1C();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
  {
    v57 = sub_2419AA028();
    v58 = sub_2419AA238();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v59 = 0;
      _os_log_impl(&dword_24193B000, v57, v58, "Request with no asset Calculator: Found no device aggregation Id", v59, 2u);
      v60 = v59;
      v52 = v81;
      MEMORY[0x24269F7A0](v60, -1, -1);
    }

  }
  v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95598]), sel_init);
  objc_msgSend(v61, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v31);
  if (v61)
    objc_msgSend(v61, sel_setNumberOfSeconds_, 86400);
  v62 = v85;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v85, v84 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_oddId, v55);
  v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
  v63(v62, 0, 1, v55);
  sub_2419416DC((uint64_t)v88, v86, &qword_257162D48);
  v64 = (uint64_t)v83;
  v63((uint64_t)v83, 1, 1, v55);
  result = sub_2419A9CBC();
  if ((~*(_QWORD *)&v66 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v66 <= -1.0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v66 < 1.84467441e19)
  {
    v67 = (unint64_t)v66;
    v68 = *(void (**)(char *, uint64_t))(v21 + 8);
    v68(v27, v20);
    result = ((uint64_t (*)(char *, uint64_t))v68)(v53, v20);
    if (is_mul_ok(v67, 0x3E8uLL))
    {
      v69 = 1000 * v67;
      v70 = type metadata accessor for CombinedRequestNoAssetData(0);
      v71 = (uint64_t)v52 + *(int *)(v70 + 20);
      sub_24194184C(v85, v71, &qword_257162D48);
      v72 = (int *)type metadata accessor for EventMetadata(0);
      sub_24194184C(v86, v71 + v72[5], &qword_257162D48);
      sub_24194184C(v64, v71 + v72[6], &qword_257162D48);
      v73 = v71 + v72[7];
      *(_QWORD *)v73 = v69;
      *(_BYTE *)(v73 + 8) = 0;
      *(_QWORD *)(v71 + v72[8]) = v61;
      v74 = v71 + v72[9];
      *(_QWORD *)v74 = 0;
      *(_BYTE *)(v74 + 8) = 1;
      v75 = v71 + v72[10];
      *(_QWORD *)v75 = 0;
      *(_BYTE *)(v75 + 8) = 1;
      *v52 = v87;
      swift_bridgeObjectRetain();
      sub_241941720((uint64_t)v88, &qword_257162D48);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v52, 0, 1, v70);
    }
    goto LABEL_49;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t SiriRequestWithNoAssetsCalculator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_sqlFileURL, &qword_257162CF0);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_calendar;
  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_oddId;
  v6 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  return v0;
}

uint64_t SiriRequestWithNoAssetsCalculator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_sqlFileURL, &qword_257162CF0);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_calendar;
  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework33SiriRequestWithNoAssetsCalculator_oddId;
  v6 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_24193F084(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24193D468;
  return sub_24193DBA8(a1);
}

uint64_t sub_24193F0D8(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_24193F0E8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_24193F11C(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_24193F13C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24193F15C(uint64_t a1)
{
  return sub_24193F174(a1, MEMORY[0x24BE2B870]);
}

uint64_t sub_24193F168(uint64_t a1)
{
  return sub_24193F174(a1, (void (*)(_QWORD))type metadata accessor for DeviceUsageMetrics);
}

uint64_t sub_24193F174(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_2419AA40C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      v4 = sub_2419AA1D8();
      *(_QWORD *)(v4 + 16) = a1;
    }
    else
    {
      v4 = MEMORY[0x24BEE4AF8];
    }
    a2(0);
    return v4;
  }
  return result;
}

unint64_t sub_24193F23C()
{
  unint64_t result;

  result = qword_257162D18;
  if (!qword_257162D18)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriMetricsWorkerError, &type metadata for SiriMetricsWorkerError);
    atomic_store(result, (unint64_t *)&qword_257162D18);
  }
  return result;
}

uint64_t sub_24193F280()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24193F2A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))(v1 + 16))();
  v5 = v4;
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257162F10);
  a1[3] = result;
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_24193F2EC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_24193F2FC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = 2 * a2;
  type metadata accessor for ExperimentDigest(0);
  return a1;
}

_BYTE **sub_24193F340(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_24193F350(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_2419AA2EC();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_24193F400(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_24193F470(v6, v7, a3);
  v8 = *a1 + 8;
  sub_2419AA2EC();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_24193F470(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_24193F540(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_24193D1D0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_24193D1D0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_24193F540(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2419AA2F8();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_24193F6F8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2419AA3B8();
  if (!v8)
  {
    sub_2419AA40C();
    __break(1u);
LABEL_17:
    result = sub_2419AA454();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_24193F6F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_24193F78C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24193F964(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_24193F964(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24193F78C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_24193F900(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2419AA394();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2419AA40C();
      __break(1u);
LABEL_10:
      v2 = sub_2419AA184();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2419AA454();
    __break(1u);
LABEL_14:
    result = sub_2419AA40C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_24193F900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162ED8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24193F964(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162ED8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_24193FAB0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 8;
  result = sub_2419AA2EC();
  *a1 = v5;
  return result;
}

void *sub_24193FB08(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_2419AA454();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_24193FB9C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_24193FBC4(_QWORD *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  _QWORD v38[2];
  __int128 v39;
  char *v40;
  uint64_t v41;
  char *v42;
  _BYTE v43[280];
  _QWORD *v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v41 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)MEMORY[0x24BEE4B00];
  v44 = (_QWORD *)MEMORY[0x24BEE4B00];
  v10 = a1[2];
  if (!v10)
    return (uint64_t)v9;
  v38[0] = v6;
  v38[1] = v2;
  memcpy(v43, a1 + 4, 0x110uLL);
  v11 = (char *)(a1 + 38);
  v12 = v10 - 1;
  v39 = xmmword_2419AB050;
  v40 = v8;
  while (1)
  {
    sub_24194175C((uint64_t)v43);
    swift_bridgeObjectRetain();
    v13 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(a2, sel_dateFromString_, v13, v38[0]);

    if (v14)
    {
      sub_2419A9CD4();

      v15 = sub_2419A9CE0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
    }
    else
    {
      v16 = sub_2419A9CE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    }
    v18 = sub_24195B524((uint64_t)v8);
    v19 = v9[2];
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (v9[3] < v21)
    {
      sub_241994D7C(v21, 1);
      v9 = v44;
      v23 = sub_24195B524((uint64_t)v8);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_23;
      v18 = v23;
    }
    if ((v22 & 1) != 0)
    {
      v25 = (uint64_t)v8;
      v26 = v12;
      v42 = v11;
      v27 = a2;
      sub_241941720(v25, &qword_257162EF0);
      v9 = v44;
      v28 = v44[7];
      v29 = *(_QWORD **)(v28 + 8 * v18);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v28 + 8 * v18) = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v29 = sub_2419802B0(0, v29[2] + 1, 1, v29);
        *(_QWORD *)(v28 + 8 * v18) = v29;
      }
      v32 = v29[2];
      v31 = v29[3];
      if (v32 >= v31 >> 1)
      {
        v29 = sub_2419802B0((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
        *(_QWORD *)(v28 + 8 * v18) = v29;
      }
      v12 = v26;
      v29[2] = v32 + 1;
      memcpy(&v29[34 * v32 + 4], v43, 0x110uLL);
      a2 = v27;
      v11 = v42;
      v8 = v40;
      if (!v12)
        return (uint64_t)v9;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257162F00);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v39;
      memcpy((void *)(v33 + 32), v43, 0x110uLL);
      v9[(v18 >> 6) + 8] |= 1 << v18;
      sub_24194184C((uint64_t)v8, v9[6] + *(_QWORD *)(v41 + 72) * v18, &qword_257162EF0);
      *(_QWORD *)(v9[7] + 8 * v18) = v33;
      v34 = v9[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_22;
      v9[2] = v36;
      if (!v12)
        return (uint64_t)v9;
    }
    memcpy(v43, v11, 0x110uLL);
    v11 += 272;
    --v12;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:

  result = sub_2419AA58C();
  __break(1u);
  return result;
}

uint64_t sub_24193FF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;

  return sub_24193E6C4(a1, a2, v3[2], v3[3], v3[4], a3);
}

uint64_t sub_24193FF48(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EE0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for CombinedRequestNoAssetData(0);
  v39 = *(_QWORD *)(v37 - 8);
  v6 = MEMORY[0x24BDAC7A8](v37);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v31 = (uint64_t)&v30 - v8;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EE8);
  MEMORY[0x24BDAC7A8](v36);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v35 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v33 = MEMORY[0x24BEE4AF8];
  if (!v14)
    goto LABEL_7;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v23)) + (v16 << 6))
  {
    v19 = *(_QWORD *)(a1 + 48);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
    sub_2419416DC(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * i, (uint64_t)v10, &qword_257162EF0);
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    *(_QWORD *)&v10[*(int *)(v36 + 48)] = v21;
    swift_bridgeObjectRetain();
    v38(v10, v21);
    sub_241941720((uint64_t)v10, &qword_257162EE8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v5, 1, v37) == 1)
    {
      result = sub_241941720((uint64_t)v5, &qword_257162EE0);
      if (v14)
        goto LABEL_4;
    }
    else
    {
      v25 = v31;
      sub_241941658((uint64_t)v5, v31);
      sub_241941658(v25, v32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_2419803D0(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
      v27 = *(_QWORD *)(v33 + 16);
      v26 = *(_QWORD *)(v33 + 24);
      if (v27 >= v26 >> 1)
        v33 = sub_2419803D0(v26 > 1, v27 + 1, 1, v33);
      v28 = v32;
      v29 = v33;
      *(_QWORD *)(v33 + 16) = v27 + 1;
      result = sub_241941658(v28, v29+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v27);
      if (v14)
        goto LABEL_4;
    }
LABEL_7:
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v35)
      goto LABEL_29;
    v23 = *(_QWORD *)(v34 + 8 * v22);
    ++v16;
    if (!v23)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_29;
      v23 = *(_QWORD *)(v34 + 8 * v16);
      if (!v23)
      {
        v16 = v22 + 2;
        if (v22 + 2 >= v35)
          goto LABEL_29;
        v23 = *(_QWORD *)(v34 + 8 * v16);
        if (!v23)
        {
          v16 = v22 + 3;
          if (v22 + 3 >= v35)
            goto LABEL_29;
          v23 = *(_QWORD *)(v34 + 8 * v16);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v14 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v35)
  {
LABEL_29:
    swift_release();
    return v33;
  }
  v23 = *(_QWORD *)(v34 + 8 * v24);
  if (v23)
  {
    v16 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v35)
      goto LABEL_29;
    v23 = *(_QWORD *)(v34 + 8 * v16);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_241940314()
{
  unint64_t result;

  result = qword_257162D38;
  if (!qword_257162D38)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for RequestWithNoAssetDataRecord, &type metadata for RequestWithNoAssetDataRecord);
    atomic_store(result, (unint64_t *)&qword_257162D38);
  }
  return result;
}

uint64_t destroy for RequestWithNoAssetResults()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s16MetricsFramework25RequestWithNoAssetResultsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RequestWithNoAssetResults(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RequestWithNoAssetResults(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestWithNoAssetResults(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestWithNoAssetResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestWithNoAssetResults()
{
  return &type metadata for RequestWithNoAssetResults;
}

uint64_t *initializeBufferWithCopyOfBuffer for CombinedRequestNoAssetData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  id v33;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2419A9D1C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v13 = (int *)type metadata accessor for EventMetadata(0);
    v14 = v13[5];
    v15 = &v7[v14];
    v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    v18 = v13[6];
    v19 = &v7[v18];
    v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    v22 = v13[7];
    v23 = &v7[v22];
    v24 = &v8[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = v13[8];
    v26 = *(void **)&v8[v25];
    *(_QWORD *)&v7[v25] = v26;
    v27 = v13[9];
    v28 = &v7[v27];
    v29 = &v8[v27];
    v28[8] = v29[8];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v30 = v13[10];
    v31 = &v7[v30];
    v32 = &v8[v30];
    v31[8] = v32[8];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v33 = v26;
  }
  return v5;
}

void destroy for CombinedRequestNoAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2419A9D1C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = (int *)type metadata accessor for EventMetadata(0);
  v9 = v4 + v8[5];
  if (!v7(v9, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  v10 = v4 + v8[6];
  if (!v7(v10, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);

}

_QWORD *initializeWithCopy for CombinedRequestNoAssetData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2419A9D1C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v11 = (int *)type metadata accessor for EventMetadata(0);
  v12 = v11[5];
  v13 = &v5[v12];
  v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  v16 = v11[6];
  v17 = &v5[v16];
  v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  v20 = v11[7];
  v21 = &v5[v20];
  v22 = &v6[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  v23 = v11[8];
  v24 = *(void **)&v6[v23];
  *(_QWORD *)&v5[v23] = v24;
  v25 = v11[9];
  v26 = &v5[v25];
  v27 = &v6[v25];
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = v11[10];
  v29 = &v5[v28];
  v30 = &v6[v28];
  v29[8] = v30[8];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v31 = v24;
  return a1;
}

_QWORD *assignWithCopy for CombinedRequestNoAssetData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2419A9D1C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = (int *)type metadata accessor for EventMetadata(0);
  v16 = v15[5];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = v11(&v7[v16], 1, v9);
  v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  v22 = v15[6];
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = v11(&v7[v22], 1, v9);
  v26 = v11(v24, 1, v9);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
LABEL_19:
  v28 = v15[7];
  v29 = &v7[v28];
  v30 = &v8[v28];
  v31 = *(_QWORD *)v30;
  v29[8] = v30[8];
  *(_QWORD *)v29 = v31;
  v32 = v15[8];
  v33 = *(void **)&v7[v32];
  v34 = *(void **)&v8[v32];
  *(_QWORD *)&v7[v32] = v34;
  v35 = v34;

  v36 = v15[9];
  v37 = &v7[v36];
  v38 = &v8[v36];
  v39 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *(_QWORD *)v37 = v39;
  v40 = v15[10];
  v41 = &v7[v40];
  v42 = &v8[v40];
  v43 = *(_QWORD *)v42;
  v41[8] = v42[8];
  *(_QWORD *)v41 = v43;
  return a1;
}

_QWORD *initializeWithTake for CombinedRequestNoAssetData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2419A9D1C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v11 = (int *)type metadata accessor for EventMetadata(0);
  v12 = v11[5];
  v13 = &v5[v12];
  v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  v16 = v11[6];
  v17 = &v5[v16];
  v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  v20 = v11[7];
  v21 = &v5[v20];
  v22 = &v6[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)&v5[v11[8]] = *(_QWORD *)&v6[v11[8]];
  v23 = v11[9];
  v24 = &v5[v23];
  v25 = &v6[v23];
  v24[8] = v25[8];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = v11[10];
  v27 = &v5[v26];
  v28 = &v6[v26];
  v27[8] = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  return a1;
}

_QWORD *assignWithTake for CombinedRequestNoAssetData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2419A9D1C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = (int *)type metadata accessor for EventMetadata(0);
  v16 = v15[5];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = v11(&v7[v16], 1, v9);
  v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  v22 = v15[6];
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = v11(&v7[v22], 1, v9);
  v26 = v11(v24, 1, v9);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
LABEL_19:
  v28 = v15[7];
  v29 = &v7[v28];
  v30 = &v8[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = v15[8];
  v32 = *(void **)&v7[v31];
  *(_QWORD *)&v7[v31] = *(_QWORD *)&v8[v31];

  v33 = v15[9];
  v34 = &v7[v33];
  v35 = &v8[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v34[8] = v35[8];
  v36 = v15[10];
  v37 = &v7[v36];
  v38 = &v8[v36];
  v37[8] = v38[8];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  return a1;
}

uint64_t getEnumTagSinglePayload for CombinedRequestNoAssetData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2419412C0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for EventMetadata(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CombinedRequestNoAssetData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_241941348(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for EventMetadata(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2419413BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EventMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241941434()
{
  return type metadata accessor for SiriRequestWithNoAssetsCalculator(0);
}

uint64_t type metadata accessor for SiriRequestWithNoAssetsCalculator(uint64_t a1)
{
  return sub_241941450(a1, (uint64_t *)&unk_257162E08);
}

uint64_t sub_241941450(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_241941484()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2419AA040();
  if (v0 <= 0x3F)
  {
    sub_2419415E0();
    if (v1 <= 0x3F)
    {
      sub_2419A9D64();
      if (v2 <= 0x3F)
      {
        sub_2419A9D1C();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for SiriRequestWithNoAssetsCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriRequestWithNoAssetsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SiriRequestWithNoAssetsCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 136) + *(_QWORD *)(*(_QWORD *)v2 + 136));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

void sub_2419415E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257162E20)
  {
    sub_2419A9C14();
    v0 = sub_2419AA2C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257162E20);
  }
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_241941658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CombinedRequestNoAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24194169C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24269F6EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2419416DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241941720(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24194175C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24194184C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241941894()
{
  return swift_task_switch();
}

uint64_t sub_2419418A8()
{
  return sub_2419AA418();
}

uint64_t SiriSegmentCohortReporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SiriSegmentCohortReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_241941930()
{
  unint64_t result;

  result = qword_257162F20;
  if (!qword_257162F20)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriSegmentCohortResults, &type metadata for SiriSegmentCohortResults);
    atomic_store(result, (unint64_t *)&qword_257162F20);
  }
  return result;
}

uint64_t type metadata accessor for SiriSegmentCohortReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriSegmentCohortReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriSegmentCohortReporter.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 80) + *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t SiriBootToAssetSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_241942D00(a1, (uint64_t)v9, v4, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t SiriBootToAssetSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_241942D00(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t sub_241941B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v1;
  v4 = sub_2419AA040();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  v5 = type metadata accessor for CombinedBootToAssetData(0);
  *(_QWORD *)(v2 + 56) = v5;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_OWORD *)(v2 + 88) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 104) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_241941C1C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 112) = OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_logger;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 104);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v3 + 16);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24193B000, v1, v2, "SiriBootToAssetSelfReporter reporting results for %ld days", v4, 0xCu);
    MEMORY[0x24269F7A0](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v0 + 120) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 24);
    v10 = sub_241943088(0, &qword_257162FE8);
    v11 = OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_reportingService;
    *(_QWORD *)(v0 + 128) = v10;
    *(_QWORD *)(v0 + 136) = v11;
    LODWORD(v11) = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 192) = v11;
    *(_QWORD *)(v0 + 144) = *(_QWORD *)(v7 + 72);
    *(_QWORD *)(v0 + 152) = 0;
    v13 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 48);
    v15 = *(_QWORD *)(v0 + 32);
    v16 = v5 + ((v11 + 32) & ~(unint64_t)v11);
    v17 = v9 + *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRetain();
    sub_241942DB0(v16, v12);
    sub_241942DB0(v12, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v14, v17, v15);
    v18 = sub_2419423CC(v13, v14);
    *(_QWORD *)(v0 + 160) = v18;
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    *(_QWORD *)(v0 + 168) = v19;
    if (v19)
    {
      v20 = v19;
      v21 = *(_QWORD *)(v0 + 112);
      v22 = *(_QWORD *)(v0 + 24);
      v23 = (_QWORD *)(v22 + *(_QWORD *)(v0 + 136));
      objc_msgSend(v19, sel_setAssetAvailabilityFromBootDigestReported_, v18);
      v24 = EventMetadata.transformToODDClientEventMetadata()();
      objc_msgSend(v20, sel_setEventMetadata_, v24);

      v25 = v23[3];
      v26 = v23[4];
      __swift_project_boxed_opaque_existential_1(v23, v25);
      v34 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v26 + 8) + *(_QWORD *)(v26 + 8));
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v27;
      *v27 = v0;
      v27[1] = sub_241941FDC;
      return v34(v20, v22 + v21, v25, v26);
    }
    swift_bridgeObjectRelease();
    v29 = sub_2419AA028();
    v30 = sub_2419AA244();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_24193B000, v29, v30, "Failed to generate event for reporting asset availability from boot", v31, 2u);
      MEMORY[0x24269F7A0](v31, -1, -1);
      v32 = v18;
    }
    else
    {
      v32 = v29;
      v29 = v18;
    }
    v33 = *(_QWORD *)(v0 + 80);

    sub_241942DF4(v33);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241941FDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_241942048()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 80);

  sub_241942DF4(v4);
  if (v2 + 1 == v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 152) + 1;
    *(_QWORD *)(v0 + 152) = v6;
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 48);
    v11 = *(_QWORD *)(v0 + 32);
    v12 = *(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 112);
    sub_241942DB0(*(_QWORD *)(v0 + 104)+ ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192))+ v5 * v6, v7);
    sub_241942DB0(v7, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
    v13 = sub_2419423CC(v8, v9);
    *(_QWORD *)(v0 + 160) = v13;
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    *(_QWORD *)(v0 + 168) = v14;
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)(v0 + 112);
      v17 = *(_QWORD *)(v0 + 24);
      v18 = (_QWORD *)(v17 + *(_QWORD *)(v0 + 136));
      objc_msgSend(v14, sel_setAssetAvailabilityFromBootDigestReported_, v13);
      v19 = EventMetadata.transformToODDClientEventMetadata()();
      objc_msgSend(v15, sel_setEventMetadata_, v19);

      v20 = v18[3];
      v21 = v18[4];
      __swift_project_boxed_opaque_existential_1(v18, v20);
      v29 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v21 + 8) + *(_QWORD *)(v21 + 8));
      v22 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v22;
      *v22 = v0;
      v22[1] = sub_241941FDC;
      return v29(v15, v17 + v16, v20, v21);
    }
    swift_bridgeObjectRelease();
    v24 = sub_2419AA028();
    v25 = sub_2419AA244();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_24193B000, v24, v25, "Failed to generate event for reporting asset availability from boot", v26, 2u);
      MEMORY[0x24269F7A0](v26, -1, -1);
      v27 = v13;
    }
    else
    {
      v27 = v24;
      v24 = v13;
    }
    v28 = *(_QWORD *)(v0 + 80);

    sub_241942DF4(v28);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419422D4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Failed to report A2B event", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v5 = *(void **)(v0 + 160);
  v4 = *(void **)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 80);

  swift_willThrow();
  sub_241942DF4(v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_2419423CC(uint64_t a1, uint64_t a2)
{
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t i;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  char v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v47;
  __int128 v48[12];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v4 = result;
    v45 = a1;
    v5 = *(_QWORD *)a1;
    v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    v7 = MEMORY[0x24BEE4AF8];
    v47 = result;
    if (v6)
    {
      v61 = MEMORY[0x24BEE4AF8];
      v8 = result;
      swift_bridgeObjectRetain();
      sub_2419AA3DC();
      v9 = v6 - 1;
      for (i = 32; ; i += 192)
      {
        v11 = *(_OWORD *)(v5 + i);
        v12 = *(_OWORD *)(v5 + i + 16);
        v13 = *(_OWORD *)(v5 + i + 48);
        v51 = *(_OWORD *)(v5 + i + 32);
        v52 = v13;
        v49 = v11;
        v50 = v12;
        v14 = *(_OWORD *)(v5 + i + 64);
        v15 = *(_OWORD *)(v5 + i + 80);
        v16 = *(_OWORD *)(v5 + i + 112);
        v55 = *(_OWORD *)(v5 + i + 96);
        v56 = v16;
        v53 = v14;
        v54 = v15;
        v17 = *(_OWORD *)(v5 + i + 128);
        v18 = *(_OWORD *)(v5 + i + 144);
        v19 = *(_OWORD *)(v5 + i + 176);
        v59 = *(_OWORD *)(v5 + i + 160);
        v60 = v19;
        v57 = v17;
        v58 = v18;
        v20 = objc_allocWithZone(MEMORY[0x24BE95470]);
        sub_241942F20((uint64_t)&v49);
        result = objc_msgSend(v20, sel_init);
        if (!result)
          break;
        v21 = result;
        sub_241943088(0, &qword_2571630C0);
        v48[8] = v57;
        v48[9] = v58;
        v48[10] = v59;
        v48[11] = v60;
        v48[4] = v53;
        v48[5] = v54;
        v48[6] = v55;
        v48[7] = v56;
        v48[0] = v49;
        v48[1] = v50;
        v48[2] = v51;
        v48[3] = v52;
        sub_241942F20((uint64_t)&v49);
        v22 = v21;
        v23 = sub_241942AF8(v48);
        objc_msgSend(v22, sel_setDimensions_, v23);

        result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95488]), sel_init);
        if (!result)
          goto LABEL_51;
        v24 = *(double *)&v51;
        v25 = BYTE8(v51);
        v26 = result;
        sub_241942FD4((uint64_t)&v49);
        v27 = v26;
        if ((v25 & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2571630D0);
          v28 = swift_allocObject();
          *(_OWORD *)(v28 + 16) = xmmword_2419AB250;
          *(_QWORD *)(v28 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v24);
          *(_QWORD *)&v48[0] = v28;
          sub_2419AA1C0();
          sub_241943088(0, (unint64_t *)&qword_2571630D8);
          v27 = (void *)sub_2419AA1A8();
          swift_bridgeObjectRelease();
          objc_msgSend(v26, sel_setBootToAssetDeliveryInMs_, v27);

        }
        objc_msgSend(v22, sel_setTuples_, v26);

        sub_2419AA3C4();
        sub_2419AA3E8();
        sub_2419AA3F4();
        sub_2419AA3D0();
        if (!v9)
        {
          swift_bridgeObjectRelease();
          v4 = v47;
          v7 = MEMORY[0x24BEE4AF8];
          goto LABEL_12;
        }
        --v9;
      }
      goto LABEL_50;
    }
    v29 = result;
LABEL_12:
    sub_241943088(0, &qword_2571630C8);
    v30 = (void *)sub_2419AA1A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setDigests_, v30);

    *(_QWORD *)&v49 = v7;
    v31 = *(_QWORD *)(v5 + 16);
    if (v31)
    {
      swift_bridgeObjectRetain_n();
      v32 = (_QWORD *)(v5 + 216);
      do
      {
        if (*v32)
          v33 = *(v32 - 4) == 0;
        else
          v33 = 1;
        if (!v33)
        {
          v34 = objc_allocWithZone(MEMORY[0x24BE95548]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v35 = objc_msgSend(v34, sel_init);
          if (v35)
          {
            v36 = v35;
            v37 = (void *)sub_2419AA0DC();
            swift_bridgeObjectRelease();
            objc_msgSend(v36, sel_setDeviceType_, v37);

            v38 = (void *)sub_2419AA0DC();
            swift_bridgeObjectRelease();
            v39 = v38;
            if ((objc_msgSend(v39, "isEqualToString:", CFSTR("PROGRAMCODE_UNKNOWN")) & 1) != 0)
            {
              v40 = 0;
            }
            else if ((objc_msgSend(v39, "isEqualToString:", CFSTR("PROGRAMCODE_IOS")) & 1) != 0)
            {
              v40 = 1;
            }
            else if ((objc_msgSend(v39, "isEqualToString:", CFSTR("PROGRAMCODE_MACOS")) & 1) != 0)
            {
              v40 = 2;
            }
            else if ((objc_msgSend(v39, "isEqualToString:", CFSTR("PROGRAMCODE_TVOS")) & 1) != 0)
            {
              v40 = 3;
            }
            else if ((objc_msgSend(v39, "isEqualToString:", CFSTR("PROGRAMCODE_WATCHOS")) & 1) != 0)
            {
              v40 = 4;
            }
            else if (objc_msgSend(v39, "isEqualToString:", CFSTR("PROGRAMCODE_VISIONOS")))
            {
              v40 = 5;
            }
            else
            {
              v40 = 0;
            }

            objc_msgSend(v36, sel_setProgramCode_, v40);
            MEMORY[0x24269EE34]();
            if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2419AA1CC();
            sub_2419AA1E4();
            sub_2419AA1C0();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        v32 += 24;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
      v41 = v49;
      v4 = v47;
    }
    else
    {
      swift_bridgeObjectRetain();
      v41 = MEMORY[0x24BEE4AF8];
    }
    result = (id)swift_bridgeObjectRelease();
    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      v42 = (void *)sub_2419AA424();
      result = (id)swift_bridgeObjectRelease();
      if (!v42)
        goto LABEL_45;
    }
    else
    {
      v42 = *(void **)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v42)
        goto LABEL_45;
    }
    if ((v41 & 0xC000000000000001) != 0)
    {
      v43 = (id)MEMORY[0x24269F038](0, v41);
    }
    else
    {
      if (!*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      v43 = *(id *)(v41 + 32);
    }
    v42 = v43;
LABEL_45:
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setFixedDimensions_, v42);

    v44 = sub_2419AA040();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(a2, v44);
    sub_241942DF4(v45);
    return v4;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_2419429F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_reportingService);
}

uint64_t SiriBootToAssetSELFReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_reportingService);
  return v0;
}

uint64_t SiriBootToAssetSELFReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_reportingService);
  return swift_deallocClassInstance();
}

id sub_241942AF8(__int128 *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  id result;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[3];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[16];
  _BYTE v26[16];
  uint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;

  v1 = a1[9];
  v21 = a1[8];
  v22 = v1;
  v2 = a1[11];
  v23 = a1[10];
  v24 = v2;
  v3 = a1[5];
  v18[1] = a1[4];
  v18[2] = v3;
  v4 = a1[7];
  v19 = a1[6];
  v20 = v4;
  v5 = a1[1];
  v15 = *a1;
  v16 = v5;
  v6 = a1[3];
  v17 = a1[2];
  v18[0] = v6;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init, v15, (_QWORD)v16);
  if (result)
  {
    v8 = result;
    sub_24194184C((uint64_t)&v15, (uint64_t)v25, (uint64_t *)&unk_257162F10);
    sub_24194184C((uint64_t)v25, (uint64_t)&v29, (uint64_t *)&unk_257162F10);
    v9 = v30;
    if (v30)
    {
      v10 = v8;
      sub_241943294((uint64_t)v25);
      v9 = (void *)sub_2419AA0DC();
      sub_2419432BC((uint64_t)v25);
    }
    else
    {
      v11 = v8;
    }
    objc_msgSend(v8, sel_setAssetSetId_, v9);

    if (*((_QWORD *)&v16 + 1))
    {
      swift_bridgeObjectRetain();
      v12 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = 0;
    }
    objc_msgSend(v8, sel_setAssetSetName_, v12);

    if (*((_QWORD *)&v19 + 1))
    {
      swift_bridgeObjectRetain();
      v13 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v8, sel_setPreviousSystemBuild_, v13);

    sub_24194184C((uint64_t)v18, (uint64_t)v26, &qword_2571630E0);
    sub_24194184C((uint64_t)v26, (uint64_t)&v27, &qword_2571630E0);
    if ((v28 & 1) == 0)
      objc_msgSend(v8, sel_setBuildInstallationTimestampInSecondsSince1970_, v27);
    v14 = sub_2419430C0(&v15);
    sub_241942FD4((uint64_t)&v15);
    objc_msgSend(v8, sel_setAssistantDimensions_, v14);

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241942D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;

  v9 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_reportingService);
  v9[3] = a4;
  v9[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v11 = a3 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_logger;
  v12 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  return a3;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_241942DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CombinedBootToAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241942DF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CombinedBootToAssetData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_241942E54()
{
  return type metadata accessor for SiriBootToAssetSELFReporter();
}

uint64_t type metadata accessor for SiriBootToAssetSELFReporter()
{
  uint64_t result;

  result = qword_257163020;
  if (!qword_257163020)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241942E98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SiriBootToAssetSELFReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriBootToAssetSELFReporter.__allocating_init(logger:reportingService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_241942F20(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241942FD4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241943088(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_2419430C0(_QWORD *a1)
{
  id result;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  void *v15;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954C0]), sel_init);
  if (result)
  {
    v3 = result;
    sub_24194184C((uint64_t)(a1 + 20), (uint64_t)v13, (uint64_t *)&unk_257162F10);
    sub_24194184C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_257162F10);
    v4 = v15;
    if (v15)
    {
      v5 = v3;
      sub_241943294((uint64_t)v13);
      v4 = (void *)sub_2419AA0DC();
      sub_2419432BC((uint64_t)v13);
    }
    else
    {
      v6 = v3;
    }
    objc_msgSend(v3, sel_setSystemBuild_, v4);

    if (a1[15])
    {
      swift_bridgeObjectRetain();
      v7 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v8 = v7;
      if ((objc_msgSend(v8, "isEqualToString:", CFSTR("UNKNOWN")) & 1) != 0)
      {
        v9 = 0;
      }
      else if ((objc_msgSend(v8, "isEqualToString:", CFSTR("OPTED_IN")) & 1) != 0)
      {
        v9 = 1;
      }
      else if ((objc_msgSend(v8, "isEqualToString:", CFSTR("OPTED_OUT")) & 1) != 0)
      {
        v9 = 2;
      }
      else if (objc_msgSend(v8, "isEqualToString:", CFSTR("DISMISSED")))
      {
        v9 = 3;
      }
      else
      {
        v9 = 0;
      }

      objc_msgSend(v3, sel_setDataSharingOptInStatus_, v9);
    }
    v10 = a1[17];
    v11 = v3;
    if (v10)
    {
      v12 = a1[16];
      swift_bridgeObjectRetain();
      v11 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v12, v10);
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setSiriInputLocale_, v11);

    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241943294(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2419432BC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t SiriDeviceExperimentMetricsBiomeReporter.__allocating_init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = v4 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t SiriDeviceExperimentMetricsBiomeReporter.init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = v2 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  v5 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_2419433E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2[2] = v1;
  v2[3] = *(_QWORD *)(type metadata accessor for DeviceExperimentMetrics(0) - 8);
  v4 = swift_task_alloc();
  v5 = *(_QWORD *)(a1 + 16);
  v2[4] = v4;
  v2[5] = v5;
  return swift_task_switch();
}

uint64_t sub_24194344C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Reporter invoked: SiriDeviceExperimentMetricsReporter", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 40);

  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 40)
       + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v9 = *(_QWORD *)(v0 + 32);
      sub_241943C64(v7, v9, type metadata accessor for DeviceExperimentMetrics);
      v10 = _s16MetricsFramework020SiriDeviceExperimentA13BiomeReporterC06createf2Ond6DigesteA5Event010experimentA0So06BMSiriidjeA0CAA0deA0V_tFZ_0(v9);
      sub_2419A9DB8();

      sub_241943CA8(v9, type metadata accessor for DeviceExperimentMetrics);
      v7 += v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241943598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  v2 = sub_2419AA040();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t SiriDeviceExperimentMetricsBiomeReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriDeviceExperimentMetricsBiomeReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id sub_241943680(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;

  v11 = v10;
  if (a4)
  {
    v15 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  if (!a6)
  {
    v16 = 0;
    v17 = a10;
    if (a9)
      goto LABEL_6;
LABEL_8:
    v18 = 0;
    goto LABEL_9;
  }
  v16 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v17 = a10;
  if (!a9)
    goto LABEL_8;
LABEL_6:
  v18 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
LABEL_9:
  sub_241943CE4();
  v19 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v11, sel_initWithEventMetadata_digestType_experimentId_treatmentIdUUID_deploymentId_deviceType_programCode_digests_, a1, a2, v15, v16, a7, v18, v17, v19);

  return v20;
}

id _s16MetricsFramework020SiriDeviceExperimentA13BiomeReporterC06createf2Ond6DigesteA5Event010experimentA0So06BMSiriidjeA0CAA0deA0V_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571631C0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ExperimentDigest(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BEE4AF8];
  v12 = (int *)type metadata accessor for DeviceExperimentMetrics(0);
  v13 = v12[11];
  v39 = a1;
  v14 = *(_QWORD *)(a1 + v13);
  if (v14)
  {
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v37 = v14;
      v38 = v4;
      v16 = v14 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v17 = *(_QWORD *)(v9 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_241943C64(v16, (uint64_t)v11, type metadata accessor for ExperimentDigest);
        _s16MetricsFramework16ExperimentDigestV12toBiomeEvent010experimentD0So014BMSiriOnDevicedcacD0CAC_tFZ_0((uint64_t)v11);
        MEMORY[0x24269EE34]();
        if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2419AA1CC();
        sub_2419AA1E4();
        sub_2419AA1C0();
        sub_241943CA8((uint64_t)v11, type metadata accessor for ExperimentDigest);
        v16 += v17;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      v4 = v38;
    }
  }
  v18 = v39;
  sub_241943C64(v39, (uint64_t)v7, type metadata accessor for DeviceExperimentMetrics);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v12 - 1) + 56))(v7, 0, 1, v12);
  v38 = (char *)_s16MetricsFramework13EventMetadataV07toBiomeC0016deviceExperimentA0So020BMSiriOnDeviceDigesthacD0CAA0khA0VSg_tFZ_0((uint64_t)v7);
  sub_241941720((uint64_t)v7, &qword_2571631C0);
  if ((*(_BYTE *)(v18 + v12[5] + 4) & 1) != 0)
    v19 = 0;
  else
    v19 = (void *)sub_2419AA5D4();
  v20 = (uint64_t *)(v18 + v12[6]);
  v22 = *v20;
  v21 = v20[1];
  sub_241943C1C(v18 + v12[7], (uint64_t)v4);
  v23 = sub_2419A9D1C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v4, 1, v23);
  swift_bridgeObjectRetain();
  if (v25 == 1)
  {
    sub_241941720((uint64_t)v4, &qword_257162D48);
    v26 = 0;
    v27 = 0;
  }
  else
  {
    v26 = sub_2419A9CF8();
    v27 = v28;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
  }
  if ((*(_BYTE *)(v18 + v12[8] + 8) & 1) != 0)
    v29 = 0;
  else
    v29 = (void *)sub_2419AA5E0();
  v30 = v12[10];
  v31 = (uint64_t *)(v18 + v12[9]);
  v32 = *v31;
  v33 = v31[1];
  if ((*(_BYTE *)(v18 + v30 + 4) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v34 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v34 = (void *)sub_2419AA5D4();
  }
  v35 = objc_allocWithZone(MEMORY[0x24BE0C688]);
  return sub_241943680(v38, v19, v22, v21, v26, v27, v29, v32, v33, v34);
}

uint64_t sub_241943B48()
{
  return type metadata accessor for SiriDeviceExperimentMetricsBiomeReporter();
}

uint64_t type metadata accessor for SiriDeviceExperimentMetricsBiomeReporter()
{
  uint64_t result;

  result = qword_257163120;
  if (!qword_257163120)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241943B8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SiriDeviceExperimentMetricsBiomeReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsBiomeReporter.__allocating_init(biomeDonator:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_241943C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241943C64(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241943CA8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_241943CE4()
{
  unint64_t result;

  result = qword_2571631C8;
  if (!qword_2571631C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571631C8);
  }
  return result;
}

uint64_t sub_241943D20(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241943D88()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_241943DD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_241943E20())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SiriDeviceExperimentMetricsSELFReporter.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = sub_241944B34(a1, v2);
  swift_release();
  return v3;
}

uint64_t SiriDeviceExperimentMetricsSELFReporter.init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_241944B34(a1, v1);
  swift_release();
  return v2;
}

uint64_t sub_241943EE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v2[2] = v1;
  v2[3] = *(_QWORD *)(type metadata accessor for DeviceExperimentMetrics(0) - 8);
  v4 = swift_task_alloc();
  v5 = *(_QWORD *)(a1 + 16);
  v2[4] = v4;
  v2[5] = v5;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_257164EF0 + dword_257164EF0);
  v6 = (_QWORD *)swift_task_alloc();
  v2[6] = v6;
  *v6 = v2;
  v6[1] = sub_241943F78;
  return v8(2, 1);
}

uint64_t sub_241943F78(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241943FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  NSObject *v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v3 = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
    *(_QWORD *)(v0 + 64) = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
    v4 = v2 + v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v5;
    *v5 = v0;
    v5[1] = sub_24194426C;
    v6 = v1;
    v7 = v4;
    return sub_24194F754(v6, v7);
  }
  v9 = sub_2419AA028();
  v10 = sub_2419AA244();
  if (os_log_type_enabled(v9, (os_log_type_t)v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_24193B000, v9, (os_log_type_t)v10, "Unable to create exection metadata event", v11, 2u);
    MEMORY[0x24269F7A0](v11, -1, -1);
  }

  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v0 + 88) = v13;
  if (!v13)
  {
LABEL_18:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v0 + 24);
  v15 = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_reportingService;
  *(_QWORD *)(v0 + 104) = v15;
  *(_DWORD *)(v0 + 176) = *(_DWORD *)(v14 + 80);
  *(_QWORD *)(v0 + 112) = 0;
  v16 = *(_QWORD *)(v12 + 16);
  result = swift_bridgeObjectRetain();
  if (!v16)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  v17 = 0;
  while (1)
  {
    sub_241944C64(result+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(_QWORD *)(*(_QWORD *)(v0 + 24) + 72) * v17, *(_QWORD *)(v0 + 32));
    v18 = DeviceExperimentMetrics.convertToSELFEvents()();
    *(_QWORD *)(v0 + 120) = v18;
    if (v18 >> 62)
      break;
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 128) = v19;
    if (v19)
      goto LABEL_15;
LABEL_11:
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRelease();
    sub_241944CA8(v22);
    if (v20 + 1 == v21)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v17 = *(_QWORD *)(v0 + 112) + 1;
    *(_QWORD *)(v0 + 112) = v17;
    result = *(_QWORD *)(v0 + 40);
    if (v17 >= *(_QWORD *)(result + 16))
      goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  v23 = sub_2419AA424();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 128) = v23;
  if (!v23)
    goto LABEL_11;
LABEL_15:
  v24 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v24 + *(_QWORD *)(v0 + 96));
  v25 = *(_QWORD *)(v0 + 120);
  if ((v25 & 0xC000000000000001) != 0)
  {
    v26 = (id)MEMORY[0x24269F038](0);
    v24 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v26 = *(id *)(v25 + 32);
  }
  *(_QWORD *)(v0 + 144) = v26;
  *(_QWORD *)(v0 + 152) = 1;
  v27 = *(_QWORD *)(v0 + 104);
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v28;
  *v28 = v0;
  v28[1] = sub_2419444A8;
  v7 = v24 + v27;
  v6 = (uint64_t)v26;
  return sub_24194F754(v6, v7);
}

uint64_t sub_24194426C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2419442D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 88) = v2;
  if (!v2)
  {
LABEL_13:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 24);
  v4 = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_reportingService;
  *(_QWORD *)(v0 + 104) = v4;
  *(_DWORD *)(v0 + 176) = *(_DWORD *)(v3 + 80);
  *(_QWORD *)(v0 + 112) = 0;
  v5 = *(_QWORD *)(v1 + 16);
  result = swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v7 = 0;
  while (1)
  {
    sub_241944C64(result+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(_QWORD *)(*(_QWORD *)(v0 + 24) + 72) * v7, *(_QWORD *)(v0 + 32));
    v8 = DeviceExperimentMetrics.convertToSELFEvents()();
    *(_QWORD *)(v0 + 120) = v8;
    if (v8 >> 62)
      break;
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 128) = v9;
    if (v9)
      goto LABEL_10;
LABEL_6:
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRelease();
    sub_241944CA8(v12);
    if (v10 + 1 == v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    v7 = *(_QWORD *)(v0 + 112) + 1;
    *(_QWORD *)(v0 + 112) = v7;
    result = *(_QWORD *)(v0 + 40);
    if (v7 >= *(_QWORD *)(result + 16))
      goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v13 = sub_2419AA424();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 128) = v13;
  if (!v13)
    goto LABEL_6;
LABEL_10:
  v14 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v14 + *(_QWORD *)(v0 + 96));
  v15 = *(_QWORD *)(v0 + 120);
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x24269F038](0);
    v14 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v16 = *(id *)(v15 + 32);
  }
  *(_QWORD *)(v0 + 144) = v16;
  *(_QWORD *)(v0 + 152) = 1;
  v17 = *(_QWORD *)(v0 + 104);
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v18;
  *v18 = v0;
  v18[1] = sub_2419444A8;
  return sub_24194F754((uint64_t)v16, v14 + v17);
}

uint64_t sub_2419444A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

id sub_241944520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);

  if (v1 == v2)
  {
    while (1)
    {
      v3 = *(_QWORD *)(v0 + 112);
      v4 = *(_QWORD *)(v0 + 88);
      v5 = *(_QWORD *)(v0 + 32);
      swift_bridgeObjectRelease();
      result = (id)sub_241944CA8(v5);
      if (v3 + 1 == v4)
      {
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        return (id)(*(uint64_t (**)(void))(v0 + 8))();
      }
      v7 = *(_QWORD *)(v0 + 112) + 1;
      *(_QWORD *)(v0 + 112) = v7;
      v8 = *(_QWORD *)(v0 + 40);
      if (v7 >= *(_QWORD *)(v8 + 16))
        break;
      sub_241944C64(v8+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(_QWORD *)(*(_QWORD *)(v0 + 24) + 72) * v7, *(_QWORD *)(v0 + 32));
      v9 = DeviceExperimentMetrics.convertToSELFEvents()();
      *(_QWORD *)(v0 + 120) = v9;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        v11 = sub_2419AA424();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 128) = v11;
        if (v11)
        {
LABEL_8:
          v12 = 0;
          *(_QWORD *)(v0 + 136) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(v0 + 96));
          goto LABEL_10;
        }
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        *(_QWORD *)(v0 + 128) = v10;
        if (v10)
          goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 152);
LABEL_10:
    v13 = *(_QWORD *)(v0 + 120);
    if ((v13 & 0xC000000000000001) != 0)
      result = (id)MEMORY[0x24269F038](v12);
    else
      result = *(id *)(v13 + 8 * v12 + 32);
    v14 = (uint64_t)result;
    *(_QWORD *)(v0 + 144) = result;
    *(_QWORD *)(v0 + 152) = v12 + 1;
    if (!__OFADD__(v12, 1))
    {
      v15 = *(_QWORD *)(v0 + 104);
      v16 = *(_QWORD *)(v0 + 16);
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v17;
      *v17 = v0;
      v17[1] = sub_2419444A8;
      return (id)sub_24194F754(v14, v16 + v15);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2419446D4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  BOOL v3;
  void *v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(void **)(v0 + 80);
  if (v3)
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Unable to report execution Event", v5, 2u);
    MEMORY[0x24269F7A0](v5, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v0 + 88) = v7;
  if (!v7)
  {
LABEL_15:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD *)(v0 + 24);
  v9 = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_reportingService;
  *(_QWORD *)(v0 + 104) = v9;
  *(_DWORD *)(v0 + 176) = *(_DWORD *)(v8 + 80);
  *(_QWORD *)(v0 + 112) = 0;
  v10 = *(_QWORD *)(v6 + 16);
  result = swift_bridgeObjectRetain();
  if (!v10)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v12 = 0;
  while (1)
  {
    sub_241944C64(result+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(_QWORD *)(*(_QWORD *)(v0 + 24) + 72) * v12, *(_QWORD *)(v0 + 32));
    v13 = DeviceExperimentMetrics.convertToSELFEvents()();
    *(_QWORD *)(v0 + 120) = v13;
    if (v13 >> 62)
      break;
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 128) = v14;
    if (v14)
      goto LABEL_12;
LABEL_8:
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRelease();
    sub_241944CA8(v17);
    if (v15 + 1 == v16)
    {
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    v12 = *(_QWORD *)(v0 + 112) + 1;
    *(_QWORD *)(v0 + 112) = v12;
    result = *(_QWORD *)(v0 + 40);
    if (v12 >= *(_QWORD *)(result + 16))
      goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v18 = sub_2419AA424();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 128) = v18;
  if (!v18)
    goto LABEL_8;
LABEL_12:
  v19 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v19 + *(_QWORD *)(v0 + 96));
  v20 = *(_QWORD *)(v0 + 120);
  if ((v20 & 0xC000000000000001) != 0)
  {
    v21 = (id)MEMORY[0x24269F038](0);
    v19 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v21 = *(id *)(v20 + 32);
  }
  *(_QWORD *)(v0 + 144) = v21;
  *(_QWORD *)(v0 + 152) = 1;
  v22 = *(_QWORD *)(v0 + 104);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v23;
  *v23 = v0;
  v23[1] = sub_2419444A8;
  return sub_24194F754((uint64_t)v21, v19 + v22);
}

uint64_t sub_24194492C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  uint64_t v5;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Unable to report event", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v4 = *(void **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 32);

  swift_willThrow();
  sub_241944CA8(v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241944A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t SiriDeviceExperimentMetricsSELFReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SiriDeviceExperimentMetricsSELFReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_241944B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  *(_QWORD *)(a2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_oddSiriClientEvents) = MEMORY[0x24BEE4AF8];
  v4 = a2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  v5 = sub_2419AA040();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  type metadata accessor for SELFReportingService();
  v7 = swift_allocObject();
  v8 = (void *)objc_opt_self();
  swift_retain();
  *(_QWORD *)(v7 + 24) = objc_msgSend(v8, sel_sharedLoggerWithPersistenceConfiguration_, 1);
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
  v10 = objc_msgSend(v9, sel_defaultMessageStream);

  *(_QWORD *)(v7 + 16) = v10;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_reportingService) = v7;
  return a2;
}

uint64_t sub_241944C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceExperimentMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241944CA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeviceExperimentMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241944CE4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_241944D3C()
{
  return type metadata accessor for SiriDeviceExperimentMetricsSELFReporter();
}

uint64_t type metadata accessor for SiriDeviceExperimentMetricsSELFReporter()
{
  uint64_t result;

  result = qword_257163210;
  if (!qword_257163210)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241944D80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SiriDeviceExperimentMetricsSELFReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsSELFReporter.oddSiriClientEvents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsSELFReporter.oddSiriClientEvents.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsSELFReporter.oddSiriClientEvents.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsSELFReporter.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_241944E40(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_241944E78 + 4 * byte_2419AB3A0[a1]))(0xD000000000000010, 0x80000002419B0950);
}

uint64_t sub_241944E78(uint64_t a1)
{
  return a1 + 11;
}

BOOL sub_241944EE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_241944EF4()
{
  sub_2419AA5EC();
  sub_2419AA5F8();
  return sub_2419AA61C();
}

uint64_t sub_241944F38()
{
  return sub_2419AA5F8();
}

uint64_t sub_241944F60()
{
  sub_2419AA5EC();
  sub_2419AA5F8();
  return sub_2419AA61C();
}

uint64_t sub_241944FA0()
{
  unsigned __int8 *v0;

  return sub_241944E40(*v0);
}

uint64_t sub_241944FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241945E14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241944FCC()
{
  return 0;
}

void sub_241944FD8(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_241944FE4()
{
  sub_24194539C();
  return sub_2419AA658();
}

uint64_t sub_24194500C()
{
  sub_24194539C();
  return sub_2419AA664();
}

uint64_t SiriResponseIdentifierMapping.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  unsigned __int8 v40;
  char v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571632D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24194539C();
  sub_2419AA640();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v41 = 0;
  v9 = sub_2419AA4B4();
  v11 = v10;
  v39 = 1;
  sub_2419453E0();
  swift_bridgeObjectRetain();
  sub_2419AA4CC();
  v33 = v40;
  v38 = 2;
  v12 = sub_2419AA46C();
  v15 = v14;
  v30 = v12;
  v37 = 3;
  swift_bridgeObjectRetain();
  v32 = v15;
  v16 = sub_2419AA46C();
  v31 = v17;
  v28 = v16;
  v36 = 4;
  swift_bridgeObjectRetain();
  v29 = 0;
  v27 = sub_2419AA478();
  v35 = 5;
  v26 = sub_2419AA478();
  v34 = 6;
  v18 = sub_2419AA46C();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v33;
  v23 = v31;
  v24 = v32;
  *(_QWORD *)(a2 + 24) = v30;
  *(_QWORD *)(a2 + 32) = v24;
  *(_QWORD *)(a2 + 40) = v28;
  *(_QWORD *)(a2 + 48) = v23;
  *(_BYTE *)(a2 + 56) = v27;
  *(_BYTE *)(a2 + 57) = v26;
  *(_QWORD *)(a2 + 64) = v22;
  *(_QWORD *)(a2 + 72) = v20;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24194539C()
{
  unint64_t result;

  result = qword_2571632D8;
  if (!qword_2571632D8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AB638, &type metadata for SiriResponseIdentifierMapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571632D8);
  }
  return result;
}

unint64_t sub_2419453E0()
{
  unint64_t result;

  result = qword_2571632E0;
  if (!qword_2571632E0)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriReponseCategory, &type metadata for SiriReponseCategory);
    atomic_store(result, (unint64_t *)&qword_2571632E0);
  }
  return result;
}

uint64_t sub_241945424@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SiriResponseIdentifierMapping.init(from:)(a1, a2);
}

Swift::String __swiftcall SiriReponseCategory.getCategoryCode()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v1 = 8 * *v0;
  v2 = *(_QWORD *)&aApple_1[v1];
  v3 = *(void **)((char *)&unk_2419AB730 + v1);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

MetricsFramework::SiriReponseCategory_optional __swiftcall SiriReponseCategory.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  MetricsFramework::SiriReponseCategory_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_2419AA580();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 2;
  switch(v3)
  {
    case 0:
      goto LABEL_3;
    case 1:
      v5 = 1;
LABEL_3:
      v6 = v5;
      break;
    case 2:
      break;
    case 3:
      v6 = 3;
      break;
    case 4:
      v6 = 4;
      break;
    case 5:
      v6 = 5;
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    default:
      v6 = 20;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t SiriReponseCategory.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aApple_1[8 * *v0];
}

uint64_t sub_241945594(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241950C78(*a1, *a2);
}

unint64_t sub_2419455A4()
{
  unint64_t result;

  result = qword_2571632E8;
  if (!qword_2571632E8)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriReponseCategory, &type metadata for SiriReponseCategory);
    atomic_store(result, (unint64_t *)&qword_2571632E8);
  }
  return result;
}

uint64_t sub_2419455E8()
{
  sub_2419AA5EC();
  SiriReponseCategory.rawValue.getter();
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_24194564C()
{
  SiriReponseCategory.rawValue.getter();
  sub_2419AA148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24194569C()
{
  sub_2419AA5EC();
  SiriReponseCategory.rawValue.getter();
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

MetricsFramework::SiriReponseCategory_optional sub_2419456FC(Swift::String *a1)
{
  return SiriReponseCategory.init(rawValue:)(*a1);
}

uint64_t sub_241945708@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SiriReponseCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24194572C()
{
  sub_2419460B4();
  return sub_2419AA190();
}

uint64_t initializeBufferWithCopyOfBuffer for RequestWithNoAssetData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SiriResponseIdentifierMapping()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SiriResponseIdentifierMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SiriResponseIdentifierMapping(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for SiriResponseIdentifierMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriResponseIdentifierMapping(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriResponseIdentifierMapping(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriResponseIdentifierMapping()
{
  return &type metadata for SiriResponseIdentifierMapping;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SiriReponseCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriReponseCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_241945B50 + 4 * byte_2419AB3C0[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_241945B84 + 4 * byte_2419AB3BB[v4]))();
}

uint64_t sub_241945B84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241945B8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241945B94);
  return result;
}

uint64_t sub_241945BA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241945BA8);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_241945BAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241945BB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241945BC0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_241945BC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SiriReponseCategory()
{
  return &type metadata for SiriReponseCategory;
}

uint64_t getEnumTagSinglePayload for SiriResponseIdentifierMapping.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriResponseIdentifierMapping.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_241945CBC + 4 * byte_2419AB3CA[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_241945CF0 + 4 * byte_2419AB3C5[v4]))();
}

uint64_t sub_241945CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241945CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241945D00);
  return result;
}

uint64_t sub_241945D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241945D14);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_241945D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241945D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriResponseIdentifierMapping.CodingKeys()
{
  return &type metadata for SiriResponseIdentifierMapping.CodingKeys;
}

unint64_t sub_241945D40()
{
  unint64_t result;

  result = qword_2571632F0;
  if (!qword_2571632F0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AB610, &type metadata for SiriResponseIdentifierMapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571632F0);
  }
  return result;
}

unint64_t sub_241945D88()
{
  unint64_t result;

  result = qword_2571632F8;
  if (!qword_2571632F8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AB580, &type metadata for SiriResponseIdentifierMapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571632F8);
  }
  return result;
}

unint64_t sub_241945DD0()
{
  unint64_t result;

  result = qword_257163300;
  if (!qword_257163300)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AB5A8, &type metadata for SiriResponseIdentifierMapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257163300);
  }
  return result;
}

uint64_t sub_241945E14(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002419B0950 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002419B0970 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002419B0990 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002419B09B0 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002419B09D0 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002419B09F0 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002419B0A10)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_2419460B4()
{
  unint64_t result;

  result = qword_257163308;
  if (!qword_257163308)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriReponseCategory, &type metadata for SiriReponseCategory);
    atomic_store(result, (unint64_t *)&qword_257163308);
  }
  return result;
}

uint64_t SiriDeviceExperimentMetrics.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  SiriDeviceExperimentMetrics.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t SiriDeviceExperimentMetrics.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(void);
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  char *v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v66 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  MEMORY[0x24BDAC7A8](v4);
  v58 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2419A9D64();
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2419A9CE0();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2419AA040();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v52 - v14;
  v16 = sub_2419A9D1C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v11;
  v20 = *(void (**)(void))(v11 + 16);
  v61 = (void (*)(uint64_t, uint64_t, uint64_t))(v2
                                                       + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_logger);
  v20();
  sub_2419A9D10();
  v67 = v2;
  v63 = v2 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_oddId;
  v64 = v17;
  v21 = *(void (**)(void))(v17 + 32);
  v65 = v16;
  v21();
  v22 = sub_2419A9F8C();
  swift_allocObject();
  v66 = v66;
  v23 = sub_2419A9F80();
  v69 = v22;
  v70 = MEMORY[0x24BE2BBA0];
  v24 = v10;
  v25 = a2;
  v68 = v23;
  v59 = v20;
  ((void (*)(char *, uint64_t, uint64_t))v20)(v15, a2, v10);
  sub_2419A9E0C();
  swift_allocObject();
  v26 = v62;
  v27 = sub_2419A9DF4();
  if (v26)
  {

    v28 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v28(a2, v10);
    v28((uint64_t)v61, v10);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    type metadata accessor for SiriDeviceExperimentMetrics();
    v29 = v67;
    swift_deallocPartialClassInstance();
  }
  else
  {
    v30 = v27;
    v31 = v52;
    sub_2419A9F14();
    v32 = v55;
    sub_2419A9D58();
    v33 = v30;
    sub_2419A9E00();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v57);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v54);
    v34 = v59;
    v35 = (uint64_t)v60;
    ((void (*)(char *, uint64_t, uint64_t))v59)(v60, v25, v10);
    type metadata accessor for SiriDeviceExperimentMetricsDataProvider();
    v36 = swift_allocObject();
    v62 = 0;
    v37 = v25;
    v38 = v24;
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
    v61(v36 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsDataProvider_logger, v35, v24);
    v29 = v67;
    *(_QWORD *)(v67
              + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_siriDeviceExperimentMetricsDataProvider) = v36;
    ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v35, v37, v38);
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v19, v63, v65);
    swift_retain();
    v39 = v58;
    sub_2419467F0(v58);
    type metadata accessor for SiriDeviceExperimentMetricsCalculator();
    swift_allocObject();
    v40 = sub_24195BCC4(v35, v39, v33, (uint64_t)v19);
    swift_release();
    *(_QWORD *)(v29
              + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_siriDeviceExperimentMetricsCalculator) = v40;
    v41 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
    swift_unknownObjectRelease();
    v42 = objc_msgSend(v41, sel_Metrics);
    swift_unknownObjectRelease();
    v43 = objc_msgSend(v42, sel_OnDeviceDigestExperimentMetrics);
    swift_unknownObjectRelease();
    v44 = objc_msgSend(v43, sel_source);

    __swift_instantiateConcreteTypeFromMangledName(&qword_257163330);
    swift_allocObject();
    v45 = sub_2419A9DAC();
    ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v35, v37, v38);
    type metadata accessor for SiriDeviceExperimentMetricsBiomeReporter();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v45;
    v61(v46 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger, v35, v38);
    ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v35, v37, v38);
    type metadata accessor for SiriDeviceExperimentMetricsSELFReporter();
    v47 = swift_allocObject();
    swift_retain();
    v48 = sub_241944B34(v35, v47);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571630D0);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_2419AB7D0;
    *(_QWORD *)(v49 + 32) = v46;
    *(_QWORD *)(v49 + 40) = v48;
    v68 = v49;
    sub_2419AA1C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163338);
    swift_allocObject();
    swift_retain();
    swift_retain();
    v68 = sub_2419A9DC4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163340);
    swift_allocObject();
    v50 = sub_2419A9DDC();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v37, v38);
    *(_QWORD *)(v29 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_siriDeviceExperimentMetricsReporter) = v50;
  }
  return v29;
}

uint64_t type metadata accessor for SiriDeviceExperimentMetrics()
{
  uint64_t result;

  result = qword_2571633D0;
  if (!qword_2571633D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2419467F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for SiriDeviceExperimentMetricsCalculator();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_2419AA0DC();
  v5 = (void *)sub_2419AA0DC();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2419A9C08();

    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  else
  {
    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_24194690C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_241946924()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: SiriDeviceExperimentMetricsDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419469E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_241946A08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 32) = v1;
  v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE2B748] + MEMORY[0x24BE2B748]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_241946A8C;
  return v4(v0 + 16);
}

uint64_t sub_241946A8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_241946AF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241946B04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_241946B1C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_241946B78;
  return sub_241956E0C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_241946B78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_241946BE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SiriDeviceExperimentMetrics.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SiriDeviceExperimentMetrics.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_241946D34()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_241946D50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_241946D6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_241946D98()
{
  return sub_241946E04(&qword_257163368, (uint64_t)&protocol conformance descriptor for SiriDeviceExperimentMetrics);
}

uint64_t sub_241946DBC()
{
  return sub_241946E04(&qword_257163370, (uint64_t)&protocol conformance descriptor for SiriDeviceExperimentMetrics);
}

uint64_t sub_241946DE0()
{
  return sub_241946E04(&qword_257163378, (uint64_t)&protocol conformance descriptor for SiriDeviceExperimentMetrics);
}

uint64_t sub_241946E04(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SiriDeviceExperimentMetrics();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241946E48()
{
  unint64_t result;

  result = qword_257163380;
  if (!qword_257163380)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriDeviceExperimentMetricsDataRecord, &type metadata for SiriDeviceExperimentMetricsDataRecord);
    atomic_store(result, (unint64_t *)&qword_257163380);
  }
  return result;
}

unint64_t sub_241946E90()
{
  unint64_t result;

  result = qword_257163390[0];
  if (!qword_257163390[0])
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriDeviceExperimentMetricsResults, &type metadata for SiriDeviceExperimentMetricsResults);
    atomic_store(result, qword_257163390);
  }
  return result;
}

uint64_t sub_241946ED4()
{
  return type metadata accessor for SiriDeviceExperimentMetrics();
}

uint64_t sub_241946EDC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = sub_2419A9D1C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SiriDeviceExperimentMetrics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetrics.__allocating_init(defaults:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetrics.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of SiriDeviceExperimentMetrics.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of SiriDeviceExperimentMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t DeviceBatchDataBuilderImpl.deinit()
{
  uint64_t v0;

  sub_241947110(v0 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId);
  sub_241947110(v0 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_originalClockId);
  return v0;
}

uint64_t sub_241947110(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DeviceBatchDataBuilderImpl.__deallocating_deinit()
{
  uint64_t v0;

  sub_241947110(v0 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId);
  sub_241947110(v0 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_originalClockId);
  return swift_deallocClassInstance();
}

uint64_t sub_241947190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_241947198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_2419471A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 24))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419471BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 32))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419471D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceBatchData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2419A9D1C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = (char *)a1 + v17;
    v21 = (char *)a2 + v17;
    *(_DWORD *)v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
  }
  return a1;
}

uint64_t destroy for DeviceBatchData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v4 = sub_2419A9D1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return result;
}

char *initializeWithCopy for DeviceBatchData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  v18 = &a1[v15];
  v19 = &a2[v15];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  return a1;
}

char *assignWithCopy for DeviceBatchData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;

  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_DWORD *)v20;
  v19[4] = v20[4];
  *(_DWORD *)v19 = v21;
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)v23 = v25;
  return a1;
}

char *initializeWithTake for DeviceBatchData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  v18 = &a1[v15];
  v19 = &a2[v15];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  return a1;
}

char *assignWithTake for DeviceBatchData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;

  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  v18 = a3[6];
  v19 = a3[7];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = &a1[v19];
  v23 = &a2[v19];
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceBatchData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241947AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DeviceBatchData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241947AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DeviceBatchData(uint64_t a1)
{
  return sub_241941450(a1, (uint64_t *)&unk_257163510);
}

void sub_241947B50()
{
  unint64_t v0;

  sub_241947BC4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_241947BC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257163520)
  {
    sub_2419A9D1C();
    v0 = sub_2419AA2C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257163520);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for OdBatchDataValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for OdBatchDataValue()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for OdBatchDataValue(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for OdBatchDataValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for OdBatchDataValue(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OdBatchDataValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OdBatchDataValue()
{
  return &type metadata for OdBatchDataValue;
}

uint64_t sub_241947D84()
{
  return type metadata accessor for DeviceBatchDataBuilderImpl(0);
}

uint64_t type metadata accessor for DeviceBatchDataBuilderImpl(uint64_t a1)
{
  return sub_241941450(a1, qword_257163590);
}

void sub_241947DA0()
{
  unint64_t v0;

  sub_241947BC4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DeviceBatchDataBuilderImpl()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReportingService.reportEvent(event:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_24193D468;
  return v11(a1, a2, a3, a4);
}

const char *sub_241947EAC()
{
  return "SiriMetrics";
}

uint64_t sub_241947EC0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_241947EE8 + 4 * byte_2419ABA30[*v0]))("enableOnDeviceSiriMetrics", 25);
}

const char *sub_241947EE8()
{
  return "enableFBFReporter";
}

const char *sub_241947EFC()
{
  return "disablePersistentIDLogging";
}

Swift::Bool __swiftcall isOnDeviceSiriMetricsEnabled()()
{
  return sub_241947FB8(1);
}

unint64_t sub_241947F4C()
{
  unint64_t result;

  result = qword_2571636C0;
  if (!qword_2571636C0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ABAC4, &type metadata for Features);
    atomic_store(result, (unint64_t *)&qword_2571636C0);
  }
  return result;
}

Swift::Bool __swiftcall isPersistentIDLoggingDisabled()()
{
  return sub_241947FB8(2);
}

Swift::Bool __swiftcall isFBFReporterEnabled()()
{
  return sub_241947FB8(0);
}

Swift::Bool __swiftcall isOnDeviceHistoryDeletionEnabled()()
{
  return sub_241947FB8(3);
}

Swift::Bool __swiftcall isRPIOptInInternalSettingEnabled()()
{
  return sub_241947FB8(4);
}

Swift::Bool __swiftcall isRPIInternalBuildRuleEnabled()()
{
  return sub_241947FB8(5);
}

uint64_t sub_241947FB8(char a1)
{
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for Features;
  v6 = sub_241947F4C();
  v4[0] = a1;
  v2 = sub_2419A9E18();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v2 & 1;
}

uint64_t getEnumTagSinglePayload for Features(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Features(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2419480E8 + 4 * byte_2419ABA3B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24194811C + 4 * byte_2419ABA36[v4]))();
}

uint64_t sub_24194811C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241948124(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24194812CLL);
  return result;
}

uint64_t sub_241948138(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241948140);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_241948144(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24194814C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Features()
{
  return &type metadata for Features;
}

unint64_t sub_24194816C()
{
  unint64_t result;

  result = qword_2571636C8;
  if (!qword_2571636C8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ABA9C, &type metadata for Features);
    atomic_store(result, (unint64_t *)&qword_2571636C8);
  }
  return result;
}

uint64_t SiriDigestMetrics.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  SiriDigestMetrics.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t SiriDigestMetrics.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(void);
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v66 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2419A9D64();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2419A9CE0();
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2419AA040();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v52 - v14;
  v16 = sub_2419A9D1C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v11;
  v20 = *(void (**)(void))(v11 + 16);
  v61 = (void (*)(uint64_t, uint64_t, uint64_t))(v2
                                                       + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_logger);
  v20();
  sub_2419A9D10();
  v67 = v2;
  v63 = v2 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_oddId;
  v64 = v17;
  v21 = *(void (**)(void))(v17 + 32);
  v65 = v16;
  v21();
  v22 = sub_2419A9F8C();
  swift_allocObject();
  v66 = v66;
  v23 = sub_2419A9F80();
  v69 = v22;
  v70 = MEMORY[0x24BE2BBA0];
  v24 = v10;
  v25 = a2;
  v68 = v23;
  v26 = v10;
  v27 = v20;
  ((void (*)(char *, uint64_t, uint64_t))v20)(v15, a2, v26);
  sub_2419A9E0C();
  swift_allocObject();
  v28 = v62;
  v29 = sub_2419A9DF4();
  if (v28)
  {

    v30 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v30(a2, v24);
    v30((uint64_t)v61, v24);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    type metadata accessor for SiriDigestMetrics();
    v31 = v67;
    swift_deallocPartialClassInstance();
  }
  else
  {
    v32 = v29;
    v33 = v53;
    sub_2419A9F14();
    v34 = v56;
    sub_2419A9D58();
    v35 = v32;
    sub_2419A9E00();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v58);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v55);
    v36 = (uint64_t)v60;
    ((void (*)(char *, uint64_t, uint64_t))v27)(v60, v25, v24);
    type metadata accessor for SiriDigestMetricsDataProvider();
    v37 = swift_allocObject();
    v62 = 0;
    v38 = v25;
    v39 = v24;
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
    v61(v37 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger, v36, v24);
    v31 = v67;
    *(_QWORD *)(v67 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_siriDigestMetricsDataProvider) = v37;
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v36, v38, v39);
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v19, v63, v65);
    v52 = v35;
    swift_retain();
    v40 = v59;
    sub_241948894(v59);
    type metadata accessor for SiriDigestMetricsCalculator();
    swift_allocObject();
    *(_QWORD *)(v31 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_siriDigestMetricsCalculator) = SiriDigestMetricsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(v36, v40, v35, (uint64_t)v19);
    v41 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
    swift_unknownObjectRelease();
    v42 = objc_msgSend(v41, sel_Metrics);
    swift_unknownObjectRelease();
    v43 = objc_msgSend(v42, sel_OnDeviceDigestUsageMetrics);
    swift_unknownObjectRelease();
    v44 = objc_msgSend(v43, sel_source);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2571636F0);
    swift_allocObject();
    v45 = sub_2419A9DAC();
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v36, v38, v39);
    type metadata accessor for SiriDigestMetricsBiomeReporter();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v45;
    v61(v46 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger, v36, v39);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v36, v38, v39);
    type metadata accessor for SiriDigestMetricsSELFReporter();
    v47 = swift_allocObject();
    swift_retain();
    v48 = sub_241973C18(v36, v47);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571630D0);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_2419AB7D0;
    *(_QWORD *)(v49 + 32) = v46;
    *(_QWORD *)(v49 + 40) = v48;
    v68 = v49;
    sub_2419AA1C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571636F8);
    swift_allocObject();
    swift_retain();
    swift_retain();
    v68 = sub_2419A9DC4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163700);
    swift_allocObject();
    v50 = sub_2419A9DDC();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v38, v39);
    *(_QWORD *)(v31 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_siriDigestMetricsReporter) = v50;
  }
  return v31;
}

uint64_t type metadata accessor for SiriDigestMetrics()
{
  uint64_t result;

  result = qword_257163790;
  if (!qword_257163790)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241948894@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for SiriDigestMetricsCalculator();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_2419AA0DC();
  v5 = (void *)sub_2419AA0DC();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2419A9C08();

    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  else
  {
    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_2419489B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2419489C8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: SiriDigestMetricsDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241948A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_241948AAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 32) = v1;
  v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE2B748] + MEMORY[0x24BE2B748]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_241946A8C;
  return v4(v0 + 16);
}

uint64_t sub_241948B30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_241948B48()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_241946B78;
  return sub_24198AB7C(*(_QWORD *)(v0 + 16));
}

uint64_t SiriDigestMetrics.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SiriDigestMetrics.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_241948CE8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_241948D04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_241948D20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_241948D4C()
{
  return sub_241948DB8(&qword_257163728, (uint64_t)&protocol conformance descriptor for SiriDigestMetrics);
}

uint64_t sub_241948D70()
{
  return sub_241948DB8(&qword_257163730, (uint64_t)&protocol conformance descriptor for SiriDigestMetrics);
}

uint64_t sub_241948D94()
{
  return sub_241948DB8(&qword_257163738, (uint64_t)&protocol conformance descriptor for SiriDigestMetrics);
}

uint64_t sub_241948DB8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SiriDigestMetrics();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241948DFC()
{
  unint64_t result;

  result = qword_257163740;
  if (!qword_257163740)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriDigestMetricsDataRecord, &type metadata for SiriDigestMetricsDataRecord);
    atomic_store(result, (unint64_t *)&qword_257163740);
  }
  return result;
}

unint64_t sub_241948E44()
{
  unint64_t result;

  result = qword_257163750[0];
  if (!qword_257163750[0])
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriDigestMetricsResults, &type metadata for SiriDigestMetricsResults);
    atomic_store(result, qword_257163750);
  }
  return result;
}

uint64_t sub_241948E88()
{
  return type metadata accessor for SiriDigestMetrics();
}

uint64_t method lookup function for SiriDigestMetrics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDigestMetrics.__allocating_init(defaults:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SiriDigestMetrics.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of SiriDigestMetrics.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of SiriDigestMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t RequestWithNoAssetSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_24194A8AC(a1, (uint64_t)v9, v4, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t RequestWithNoAssetSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_24194A8AC(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t sub_241949160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 24) = v1;
  v4 = type metadata accessor for CombinedRequestNoAssetData(0);
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  *(_OWORD *)(v2 + 64) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_2419491E4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 88) = OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 80);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v3 + 16);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24193B000, v1, v2, "RequestWithNoAssetSELFReporter reporting results for %ld days", v4, 0xCu);
    MEMORY[0x24269F7A0](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v0 + 96) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 40);
    v8 = sub_241943088(0, &qword_257163878);
    v9 = OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService;
    *(_QWORD *)(v0 + 104) = v8;
    *(_QWORD *)(v0 + 112) = v9;
    LODWORD(v9) = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 168) = v9;
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v7 + 72);
    *(_QWORD *)(v0 + 128) = 0;
    v11 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 56);
    v12 = v5 + ((v9 + 32) & ~(unint64_t)v9);
    swift_bridgeObjectRetain();
    sub_24194A934(v12, v10);
    sub_24194A934(v10, v11);
    v13 = sub_241949B08(v11);
    *(_QWORD *)(v0 + 136) = v13;
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    *(_QWORD *)(v0 + 144) = v14;
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)(v0 + 88);
      v17 = *(_QWORD *)(v0 + 24);
      v18 = (_QWORD *)(v17 + *(_QWORD *)(v0 + 112));
      objc_msgSend(v14, sel_setRequestsWithoutAssetsDigestReported_, v13);
      v19 = EventMetadata.transformToODDClientEventMetadata()();
      objc_msgSend(v15, sel_setEventMetadata_, v19);

      v20 = v18[3];
      v21 = v18[4];
      __swift_project_boxed_opaque_existential_1(v18, v20);
      v29 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v21 + 8) + *(_QWORD *)(v21 + 8));
      v22 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v22;
      *v22 = v0;
      v22[1] = sub_241949560;
      return v29(v15, v17 + v16, v20, v21);
    }
    swift_bridgeObjectRelease();
    v24 = sub_2419AA028();
    v25 = sub_2419AA244();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_24193B000, v24, v25, "Failed to generate event for reporting requests without assets", v26, 2u);
      MEMORY[0x24269F7A0](v26, -1, -1);
      v27 = v13;
    }
    else
    {
      v27 = v24;
      v24 = v13;
    }
    v28 = *(_QWORD *)(v0 + 56);

    sub_24194A978(v28);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241949560()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2419495C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 136);

  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 128) + 1;
  sub_24194A978(*(_QWORD *)(v0 + 56));
  if (v3 == v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128) + 1;
    *(_QWORD *)(v0 + 128) = v5;
    v7 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    sub_24194A934(*(_QWORD *)(v0 + 80)+ ((*(unsigned __int8 *)(v0 + 168) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 168))+ v4 * v5, v6);
    sub_24194A934(v6, v7);
    v8 = sub_241949B08(v7);
    *(_QWORD *)(v0 + 136) = v8;
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    *(_QWORD *)(v0 + 144) = v9;
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)(v0 + 88);
      v12 = *(_QWORD *)(v0 + 24);
      v13 = (_QWORD *)(v12 + *(_QWORD *)(v0 + 112));
      objc_msgSend(v9, sel_setRequestsWithoutAssetsDigestReported_, v8);
      v14 = EventMetadata.transformToODDClientEventMetadata()();
      objc_msgSend(v10, sel_setEventMetadata_, v14);

      v15 = v13[3];
      v16 = v13[4];
      __swift_project_boxed_opaque_existential_1(v13, v15);
      v24 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v16 + 8) + *(_QWORD *)(v16 + 8));
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v17;
      *v17 = v0;
      v17[1] = sub_241949560;
      return v24(v10, v12 + v11, v15, v16);
    }
    swift_bridgeObjectRelease();
    v19 = sub_2419AA028();
    v20 = sub_2419AA244();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_24193B000, v19, v20, "Failed to generate event for reporting requests without assets", v21, 2u);
      MEMORY[0x24269F7A0](v21, -1, -1);
      v22 = v8;
    }
    else
    {
      v22 = v19;
      v19 = v8;
    }
    v23 = *(_QWORD *)(v0 + 56);

    sub_24194A978(v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241949818()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  BOOL v3;
  void *v4;
  NSObject *v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t, uint64_t);

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(void **)(v0 + 160);
  v5 = *(NSObject **)(v0 + 136);
  v6 = *(void **)(v0 + 144);
  if (v3)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Failed to report requests without assets event", v7, 2u);
    MEMORY[0x24269F7A0](v7, -1, -1);

  }
  else
  {

    v5 = v1;
  }

  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 128) + 1;
  sub_24194A978(*(_QWORD *)(v0 + 56));
  if (v9 == v8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 128) + 1;
    *(_QWORD *)(v0 + 128) = v11;
    v13 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 56);
    sub_24194A934(*(_QWORD *)(v0 + 80)+ ((*(unsigned __int8 *)(v0 + 168) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 168))+ v10 * v11, v12);
    sub_24194A934(v12, v13);
    v14 = sub_241949B08(v13);
    *(_QWORD *)(v0 + 136) = v14;
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    *(_QWORD *)(v0 + 144) = v15;
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)(v0 + 88);
      v18 = *(_QWORD *)(v0 + 24);
      v19 = (_QWORD *)(v18 + *(_QWORD *)(v0 + 112));
      objc_msgSend(v15, sel_setRequestsWithoutAssetsDigestReported_, v14);
      v20 = EventMetadata.transformToODDClientEventMetadata()();
      objc_msgSend(v16, sel_setEventMetadata_, v20);

      v21 = v19[3];
      v22 = v19[4];
      __swift_project_boxed_opaque_existential_1(v19, v21);
      v30 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v22 + 8) + *(_QWORD *)(v22 + 8));
      v23 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v23;
      *v23 = v0;
      v23[1] = sub_241949560;
      return v30(v16, v18 + v17, v21, v22);
    }
    swift_bridgeObjectRelease();
    v25 = sub_2419AA028();
    v26 = sub_2419AA244();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_24193B000, v25, v26, "Failed to generate event for reporting requests without assets", v27, 2u);
      MEMORY[0x24269F7A0](v27, -1, -1);
      v28 = v14;
    }
    else
    {
      v28 = v25;
      v25 = v14;
    }
    v29 = *(_QWORD *)(v0 + 56);

    sub_24194A978(v29);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_241949B08(uint64_t a1)
{
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  char v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  _QWORD __src[34];
  _QWORD __dst[36];

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
    goto LABEL_59;
  v3 = result;
  v35 = a1;
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  v36 = result;
  if (v5)
  {
    __dst[34] = MEMORY[0x24BEE4AF8];
    v7 = result;
    swift_bridgeObjectRetain();
    sub_2419AA3DC();
    v8 = v5 - 1;
    for (i = 32; ; i += 272)
    {
      memcpy(__dst, (const void *)(v4 + i), 0x110uLL);
      v10 = objc_allocWithZone(MEMORY[0x24BE95560]);
      sub_24194175C((uint64_t)__dst);
      result = objc_msgSend(v10, sel_init, v35);
      if (!result)
        break;
      v11 = result;
      sub_241943088(0, &qword_257163950);
      memcpy(__src, __dst, sizeof(__src));
      sub_24194175C((uint64_t)__dst);
      v12 = v11;
      v13 = sub_24194A1C8(__src);
      objc_msgSend(v12, sel_setDimensions_, v13);

      result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95558]), sel_init);
      if (!result)
        goto LABEL_57;
      v14 = result;
      if ((__dst[24] & 0x100000000) == 0)
        objc_msgSend(result, sel_setRequestsRequiringAssetsCount_, LODWORD(__dst[24]));
      v15 = LODWORD(__dst[26]);
      v16 = BYTE4(__dst[26]);
      if ((__dst[25] & 0x100000000) == 0)
        objc_msgSend(v14, sel_setRequestsMissingAssetsCount_, LODWORD(__dst[25]));
      sub_24194AA98((uint64_t)__dst);
      if ((v16 & 1) == 0)
        objc_msgSend(v14, sel_setRequestsWithFailuresCount_, v15);
      objc_msgSend(v12, sel_setCounts_, v14);

      sub_2419AA3C4();
      sub_2419AA3E8();
      sub_2419AA3F4();
      sub_2419AA3D0();
      if (!v8)
      {
        swift_bridgeObjectRelease();
        v3 = v36;
        v6 = MEMORY[0x24BEE4AF8];
        goto LABEL_16;
      }
      --v8;
    }
    goto LABEL_56;
  }
  v17 = result;
LABEL_16:
  sub_241943088(0, &qword_257163958);
  v18 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setDigests_, v18);

  __src[0] = v6;
  v19 = *(_QWORD *)(v4 + 16);
  if (!v19)
  {
    swift_bridgeObjectRetain();
    v32 = MEMORY[0x24BEE4AF8];
    goto LABEL_45;
  }
  swift_bridgeObjectRetain_n();
  memcpy(__dst, (const void *)(v4 + 32), 0x110uLL);
  v20 = objc_allocWithZone(MEMORY[0x24BE95548]);
  sub_24194175C((uint64_t)__dst);
  result = objc_msgSend(v20, sel_init);
  if (result)
  {
    v21 = result;
    v22 = 304;
    while (1)
    {
      if (__dst[9])
      {
        v23 = v21;
        swift_bridgeObjectRetain();
        v24 = (void *)sub_2419AA0DC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = v21;
        v24 = 0;
      }
      v26 = __dst[11];
      objc_msgSend(v21, sel_setDeviceType_, v24, v35);

      if (v26)
      {
        swift_bridgeObjectRetain();
        sub_24194AA98((uint64_t)__dst);
        v27 = (void *)sub_2419AA0DC();
        swift_bridgeObjectRelease();
        v28 = v27;
        if ((objc_msgSend(v28, "isEqualToString:", CFSTR("PROGRAMCODE_UNKNOWN")) & 1) != 0)
        {
          v29 = 0;
        }
        else if ((objc_msgSend(v28, "isEqualToString:", CFSTR("PROGRAMCODE_IOS")) & 1) != 0)
        {
          v29 = 1;
        }
        else if ((objc_msgSend(v28, "isEqualToString:", CFSTR("PROGRAMCODE_MACOS")) & 1) != 0)
        {
          v29 = 2;
        }
        else if ((objc_msgSend(v28, "isEqualToString:", CFSTR("PROGRAMCODE_TVOS")) & 1) != 0)
        {
          v29 = 3;
        }
        else if ((objc_msgSend(v28, "isEqualToString:", CFSTR("PROGRAMCODE_WATCHOS")) & 1) != 0)
        {
          v29 = 4;
        }
        else
        {
          v29 = objc_msgSend(v28, "isEqualToString:", CFSTR("PROGRAMCODE_VISIONOS")) ? 5 : 0;
        }

        objc_msgSend(v21, sel_setProgramCode_, v29);
      }
      else
      {

        v30 = sub_24194AA98((uint64_t)__dst);
      }
      MEMORY[0x24269EE34](v30);
      if (*(_QWORD *)((__src[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((__src[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2419AA1CC();
      sub_2419AA1E4();
      sub_2419AA1C0();
      if (!--v19)
        break;
      memcpy(__dst, (const void *)(v4 + v22), 0x110uLL);
      v31 = objc_allocWithZone(MEMORY[0x24BE95548]);
      sub_24194175C((uint64_t)__dst);
      result = objc_msgSend(v31, sel_init);
      v21 = result;
      v22 += 272;
      if (!result)
        goto LABEL_58;
    }
    swift_bridgeObjectRelease();
    v3 = v36;
    v32 = __src[0];
LABEL_45:
    result = (id)swift_bridgeObjectRelease();
    if (v32 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = (void *)sub_2419AA424();
      result = (id)swift_bridgeObjectRelease();
      if (!v33)
        goto LABEL_51;
    }
    else
    {
      v33 = *(void **)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v33)
        goto LABEL_51;
    }
    if ((v32 & 0xC000000000000001) != 0)
    {
      v34 = (id)MEMORY[0x24269F038](0, v32);
    }
    else
    {
      if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      v34 = *(id *)(v32 + 32);
    }
    v33 = v34;
LABEL_51:
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setFixedDimensions_, v33);

    sub_24194A978(v35);
    return v3;
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_24194A0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);
}

uint64_t RequestWithNoAssetSELFReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);
  return v0;
}

uint64_t RequestWithNoAssetSELFReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);
  return swift_deallocClassInstance();
}

id sub_24194A1C8(void *__src)
{
  id result;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  _QWORD __dst[34];
  _BYTE v14[16];
  _BYTE v15[16];
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;

  memcpy(__dst, __src, sizeof(__dst));
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v2 = result;
    sub_24194184C((uint64_t)&__dst[27], (uint64_t)v14, (uint64_t *)&unk_257162F10);
    sub_24194184C((uint64_t)v14, (uint64_t)&v18, (uint64_t *)&unk_257162F10);
    v3 = v19;
    if (v19)
    {
      v4 = v2;
      sub_241943294((uint64_t)v14);
      v3 = (void *)sub_2419AA0DC();
      sub_2419432BC((uint64_t)v14);
    }
    else
    {
      v5 = v2;
    }
    objc_msgSend(v2, sel_setAssetSetName_, v3);

    if (__dst[32])
    {
      swift_bridgeObjectRetain();
      v6 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v2, sel_setPreviousSystemBuild_, v6);

    sub_24194184C((uint64_t)&__dst[29], (uint64_t)v15, &qword_2571630E0);
    sub_24194184C((uint64_t)v15, (uint64_t)&v16, &qword_2571630E0);
    if ((v17 & 1) == 0)
      objc_msgSend(v2, sel_setBuildInstallationTimestampInSecondsSince1970_, v16);
    sub_24194175C((uint64_t)__dst);
    v7 = sub_24194A558(__dst);
    objc_msgSend(v2, sel_setAssistantDimensions_, v7);

    v8 = (char *)__dst[33];
    if (__dst[33])
    {
      v9 = *(_QWORD *)(__dst[33] + 16);
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_2419AA3DC();
        v10 = v8 + 40;
        do
        {
          swift_bridgeObjectRetain();
          v12 = (id)sub_2419AA0DC();
          if ((objc_msgSend(v12, "isEqualToString:", CFSTR("ORCHASSETTYPE_UNKNOWN_ASSET_TYPE")) & 1) != 0)
          {
            v11 = 0;
          }
          else if ((objc_msgSend(v12, "isEqualToString:", CFSTR("ORCHASSETTYPE_SPEECH")) & 1) != 0)
          {
            v11 = 1;
          }
          else if ((objc_msgSend(v12, "isEqualToString:", CFSTR("ORCHASSETTYPE_NL")) & 1) != 0)
          {
            v11 = 2;
          }
          else if ((objc_msgSend(v12, "isEqualToString:", CFSTR("ORCHASSETTYPE_MORPHUN")) & 1) != 0)
          {
            v11 = 3;
          }
          else if (objc_msgSend(v12, "isEqualToString:", CFSTR("ORCHASSETTYPE_ATTENTION")))
          {
            v11 = 4;
          }
          else
          {
            v11 = 0;
          }
          v10 += 16;

          objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInt_, v11);
          swift_bridgeObjectRelease();
          sub_2419AA3C4();
          sub_2419AA3E8();
          sub_2419AA3F4();
          sub_2419AA3D0();
          --v9;
        }
        while (v9);
        sub_24194AA98((uint64_t)__dst);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_24194AA98((uint64_t)__dst);
      }
      sub_241943088(0, (unint64_t *)&qword_2571630D8);
      v8 = (char *)sub_2419AA1A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24194AA98((uint64_t)__dst);
    }
    objc_msgSend(v2, sel_setAssetFailureReasons_, v8);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_24194A558(const void *a1)
{
  _QWORD *v2;
  id result;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v20[3];
  ValueMetadata *v21;
  _UNKNOWN **v22;

  v21 = &type metadata for RequestWithNoAssetData;
  v22 = &off_2511C4AE8;
  v2 = (_QWORD *)swift_allocObject();
  v20[0] = v2;
  memcpy(v2 + 2, a1, 0x110uLL);
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954C0]), sel_init);
  if (result)
  {
    v4 = result;
    if (v2[9])
    {
      v5 = result;
      swift_bridgeObjectRetain();
      v6 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = result;
      v6 = 0;
    }
    objc_msgSend(v4, sel_setSystemBuild_, v6);

    if (__swift_project_boxed_opaque_existential_1(v20, (uint64_t)&type metadata for RequestWithNoAssetData)[21])
    {
      swift_bridgeObjectRetain();
      v8 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v9 = v8;
      if ((objc_msgSend(v9, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_UNKNOWN")) & 1) != 0)
      {
        v10 = 0;
      }
      else if ((objc_msgSend(v9, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_SERVER")) & 1) != 0)
      {
        v10 = 1;
      }
      else if (objc_msgSend(v9, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_DEVICE")))
      {
        v10 = 2;
      }
      else
      {
        v10 = 0;
      }

      objc_msgSend(v4, sel_setAsrLocation_, v10);
    }
    if (__swift_project_boxed_opaque_existential_1(v20, (uint64_t)v21)[23])
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v12 = v11;
      if ((objc_msgSend(v12, "isEqualToString:", CFSTR("ORCHSIRINLMODE_UNKNOWN")) & 1) != 0)
      {
        v13 = 0;
      }
      else if ((objc_msgSend(v12, "isEqualToString:", CFSTR("ORCHSIRINLMODE_NLV3_SERVER")) & 1) != 0)
      {
        v13 = 1;
      }
      else if (objc_msgSend(v12, "isEqualToString:", CFSTR("ORCHSIRINLMODE_NLX_DEVICE")))
      {
        v13 = 2;
      }
      else
      {
        v13 = 0;
      }

      objc_msgSend(v4, sel_setNlLocation_, v13);
    }
    if (v2[17])
    {
      swift_bridgeObjectRetain();
      v14 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v15 = v14;
      if ((objc_msgSend(v15, "isEqualToString:", CFSTR("UNKNOWN")) & 1) != 0)
      {
        v16 = 0;
      }
      else if ((objc_msgSend(v15, "isEqualToString:", CFSTR("OPTED_IN")) & 1) != 0)
      {
        v16 = 1;
      }
      else if ((objc_msgSend(v15, "isEqualToString:", CFSTR("OPTED_OUT")) & 1) != 0)
      {
        v16 = 2;
      }
      else if (objc_msgSend(v15, "isEqualToString:", CFSTR("DISMISSED")))
      {
        v16 = 3;
      }
      else
      {
        v16 = 0;
      }

      objc_msgSend(v4, sel_setDataSharingOptInStatus_, v16);
    }
    v17 = v2[15];
    v18 = v4;
    if (v17)
    {
      v19 = v2[14];
      swift_bridgeObjectRetain();
      v18 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v19, v17);
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setSiriInputLocale_, v18);

    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24194A8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;

  v9 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);
  v9[3] = a4;
  v9[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v11 = a3 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  v12 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  return a3;
}

uint64_t sub_24194A934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CombinedRequestNoAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24194A978(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CombinedRequestNoAssetData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24194A9B4()
{
  return type metadata accessor for RequestWithNoAssetSELFReporter();
}

uint64_t type metadata accessor for RequestWithNoAssetSELFReporter()
{
  uint64_t result;

  result = qword_2571638B0;
  if (!qword_2571638B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24194A9F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for RequestWithNoAssetSELFReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RequestWithNoAssetSELFReporter.__allocating_init(logger:reportingService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_24194AA80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24194AA88(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_24194AA90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_24194AA98(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24194AB8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t static DevicePropertiesWorker.devicePropertiesPluginLastRunDateKey.getter()
{
  return 0xD000000000000021;
}

MetricsFramework::DevicePropertiesWorker::Subtask_optional __swiftcall DevicePropertiesWorker.Subtask.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  MetricsFramework::DevicePropertiesWorker::Subtask_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2419AA460();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

unint64_t DevicePropertiesWorker.Subtask.rawValue.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_24194ACCC(char *a1, char *a2)
{
  return sub_241950BDC(*a1, *a2);
}

uint64_t sub_24194ACD8()
{
  return sub_241950E44();
}

uint64_t sub_24194ACE0()
{
  sub_2419AA148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24194AD38()
{
  return sub_2419510CC();
}

MetricsFramework::DevicePropertiesWorker::Subtask_optional sub_24194AD40(Swift::String *a1)
{
  return DevicePropertiesWorker.Subtask.init(rawValue:)(*a1);
}

void sub_24194AD4C(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x80000002419AFE00;
  if (*v1)
    v2 = 0x80000002419AFE20;
  *a1 = 0xD000000000000016;
  a1[1] = v2;
}

uint64_t DevicePropertiesWorker.init(logger:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  sub_2419A9D58();
  v4 = a2 + *(int *)(type metadata accessor for DevicePropertiesWorker() + 20);
  v5 = sub_2419AA040();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
}

uint64_t type metadata accessor for DevicePropertiesWorker()
{
  uint64_t result;

  result = qword_257163A00;
  if (!qword_257163A00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DevicePropertiesWorker.doWork(executor:context:durationThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_2419AA1FC();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v6 = sub_2419AA040();
  v4[17] = v6;
  v4[18] = *(_QWORD *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24194AEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *, uint64_t, uint64_t);
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  int v43;
  id v44;
  char v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  objc_class *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  id *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  int v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  id *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  void *v91;
  void (*v92)(uint64_t, _QWORD, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void (*v99)(_QWORD *, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  id v110;
  void (*v111)(uint64_t, uint64_t, uint64_t);
  id *v112;
  uint64_t (*v113)(uint64_t, id, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v5 = *(void **)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(int *)(type metadata accessor for DevicePropertiesWorker() + 20);
  *(_DWORD *)(v0 + 352) = v6;
  v7 = v4 + v6;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v8(v1, v7, v3);
  v9 = v5;
  v10 = sub_2419AA028();
  v11 = sub_2419AA22C();
  v112 = (id *)(v0 + 48);
  v114 = v7;
  v111 = v8;
  if (os_log_type_enabled(v10, v11))
  {
    v12 = *(_QWORD *)(v0 + 144);
    v107 = *(_QWORD *)(v0 + 136);
    v109 = *(_QWORD *)(v0 + 160);
    v13 = *(void **)(v0 + 96);
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v115 = v15;
    *(_DWORD *)v14 = 136315394;
    v16 = sub_2419A9E9C();
    *(_QWORD *)(v0 + 72) = sub_24193F470(v16, v17, &v115);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 12) = 2080;
    v18 = sub_2419A9EA8();
    *(_QWORD *)(v0 + 40) = sub_24193F470(v18, v19, &v115);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24193B000, v10, v11, "TaskId: %s, TaskName: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v15, -1, -1);
    MEMORY[0x24269F7A0](v14, -1, -1);

    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v109, v107);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 160);
    v22 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 144);
    v24 = *(void **)(v0 + 96);

    v20 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v20(v21, v22);
  }
  v25 = *(_QWORD **)(v0 + 80);
  *v25 = 0;
  v26 = *MEMORY[0x24BECE100];
  *(_DWORD *)(v0 + 356) = v26;
  v27 = sub_2419A9E78();
  *(_QWORD *)(v0 + 168) = v27;
  v28 = *(_QWORD *)(v27 - 8);
  *(_QWORD *)(v0 + 176) = v28;
  v29 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v28 + 104);
  *(_QWORD *)(v0 + 184) = v29;
  v29(v25, v26, v27);
  v30 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v31 = (void *)sub_2419AA0DC();
  v32 = objc_msgSend(v30, sel_initWithSuiteName_, v31);
  *(_QWORD *)(v0 + 192) = v32;

  v33 = sub_2419A9E9C();
  v35 = v34;
  v36 = sub_2419A9EA8();
  sub_24194D3BC(v33, v35, v36, v37);
  v108 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v115 = sub_2419A9EA8();
  v116 = v46;
  sub_2419AA178();
  v47 = objc_allocWithZone(MEMORY[0x24BEBA8F8]);
  v48 = (void *)sub_2419AA0DC();
  v49 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v110 = objc_msgSend(v47, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v48, 1, v49);
  *(_QWORD *)(v0 + 200) = v110;

  v50 = sub_24194D66C((uint64_t)&unk_2511C38B0);
  *(_QWORD *)(v0 + 208) = v50;
  sub_2419A9E9C();
  v115 = sub_2419A9EA8();
  v116 = v51;
  swift_bridgeObjectRetain();
  sub_2419AA178();
  swift_bridgeObjectRetain();
  sub_2419AA178();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = (objc_class *)sub_2419A9EB4();
  *(_QWORD *)(v0 + 216) = v52;
  v53 = objc_allocWithZone(v52);
  v54 = (void *)sub_2419A9E90();
  *(_QWORD *)(v0 + 224) = v54;
  v55 = sub_2419A9E3C();
  *(_QWORD *)(v0 + 232) = v55;
  v56 = *(_QWORD *)(v55 - 8);
  *(_QWORD *)(v0 + 240) = v56;
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v56 + 64);
  v57 = swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v57;
  v58 = v54;
  v59 = v110;
  sub_24194D9C4(v50);
  sub_2419A9E30();
  if (v32)
  {
    v60 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v0 + 264) = *(_QWORD *)(v28 + 64);
    v61 = swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v61;
    v113 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v60 + 88)
                                                                 + *(_QWORD *)(*(_QWORD *)v60 + 88));
    v62 = v32;
    v63 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v63;
    *v63 = v0;
    v63[1] = sub_24194BA14;
    return v113(v61, v62, v57, v114);
  }
  v71 = v58;
  v72 = *(_QWORD *)(v0 + 152);
  v73 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRelease();
  v111(v72, v114, v73);
  v74 = sub_2419AA028();
  v75 = sub_2419AA244();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v76 = 0;
    _os_log_impl(&dword_24193B000, v74, v75, "Can't get user defaults initialized", v76, 2u);
    MEMORY[0x24269F7A0](v76, -1, -1);
  }
  v77 = *(_QWORD *)(v0 + 152);
  v78 = *(_QWORD *)(v0 + 136);

  v108(v77, v78);
  sub_24193F23C();
  v44 = (id)swift_allocError();
  *v79 = 5;
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
  swift_task_dealloc();
  v38 = (id *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = v44;
  v39 = sub_2419A9E54();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = swift_task_alloc();
  v42 = v44;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if (swift_dynamicCast())
  {
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v41, v39);
    if (MEMORY[0x24BECE0C0] && v43 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v44 = *v38;
      v45 = 3;
LABEL_38:

      v99 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 184);
      v98 = *(void **)(v0 + 192);
      v100 = *(_QWORD *)(v0 + 168);
      v101 = *(_QWORD *)(v0 + 176);
      v102 = *(unsigned int *)(v0 + 356);
      v103 = *(_QWORD *)(v0 + 80);
      v104 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v105 = swift_allocError();
      *v106 = v45;

      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v103, v100);
      *v104 = v105;
      v99(v104, v102, v100);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v101 + 32))(v103, v104, v100);
      swift_task_dealloc();
      goto LABEL_39;
    }
    if (MEMORY[0x24BECE0C8] && v43 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v44 = *v38;
      v45 = 4;
      goto LABEL_38;
    }
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
  }
  v65 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 24) = v44;
  v66 = sub_2419A9F74();
  v67 = *(_QWORD *)(v66 - 8);
  v68 = swift_task_alloc();
  v69 = v44;
  if (swift_dynamicCast())
  {
    v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 88))(v68, v66);
    if (MEMORY[0x24BE2BB68] && v70 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v44 = *v65;
      v45 = 6;
      goto LABEL_38;
    }
    if (MEMORY[0x24BE2BB70] && v70 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v44 = *v65;
      v45 = 7;
      goto LABEL_38;
    }
    if (MEMORY[0x24BE2BB78] && v70 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v44 = *v65;
      v45 = 8;
      goto LABEL_38;
    }
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v66);
  }
  v80 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 32) = v44;
  v81 = v44;
  if (swift_dynamicCast())
  {

    v45 = *(_BYTE *)(v0 + 360);
    v44 = *v80;
    goto LABEL_38;
  }

  *v112 = v44;
  v82 = sub_2419A9E84();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = swift_task_alloc();
  v85 = v44;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v84, v82);
    swift_task_dealloc();
    v44 = *v112;
    v45 = 2;
    goto LABEL_38;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 56) = v44;
  v86 = sub_2419A9E48();
  v87 = *(_QWORD *)(v86 - 8);
  v88 = swift_task_alloc();
  v89 = v44;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v88, v86);
    swift_task_dealloc();
    v45 = 0;
    v44 = *(id *)(v0 + 56);
    goto LABEL_38;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 64) = v44;
  v90 = v44;
  if (!swift_dynamicCast())
  {

    v45 = 1;
    goto LABEL_38;
  }
  v92 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 184);
  v91 = *(void **)(v0 + 192);
  v93 = *(_QWORD *)(v0 + 168);
  v95 = *(_QWORD *)(v0 + 120);
  v94 = *(_QWORD *)(v0 + 128);
  v96 = *(_QWORD *)(v0 + 112);
  v97 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8))(v97, v93);

  v92(v97, *MEMORY[0x24BECE110], v93);
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);

LABEL_39:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194BA14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_24194BA80()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int v22;
  char v23;
  uint64_t v24;
  objc_class *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  id *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  int v41;
  id *v42;
  id v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  void (*v55)(uint64_t, _QWORD, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void (*v62)(_QWORD *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, _QWORD, _QWORD, uint64_t);
  uint64_t v76;
  uint64_t v77;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(void **)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v0 + 296) = v7;
  v7(v6, v4);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  *(_QWORD *)(v0 + 304) = v8;
  v8(v6, v2, v4);
  swift_task_dealloc();
  sub_24194DFBC(v6, v3);
  v9 = sub_2419A9E9C();
  v11 = v10;
  v12 = sub_2419A9EA8();
  sub_24194D3BC(v9, v11, v12, v13);
  if (!v1)
  {
    v24 = *(_QWORD *)(v0 + 240);
    v72 = *(_QWORD *)(v0 + 232);
    v73 = *(_QWORD *)(v0 + 256);
    v25 = *(objc_class **)(v0 + 216);
    v26 = *(_QWORD *)(v0 + 208);
    v70 = *(void **)(v0 + 224);
    v71 = *(void **)(v0 + 200);
    v76 = *(_QWORD *)(v0 + 104);
    v77 = *(int *)(v0 + 352);
    v74 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2419A9E9C();
    sub_2419A9EA8();
    swift_bridgeObjectRetain();
    sub_2419AA178();
    swift_bridgeObjectRetain();
    sub_2419AA178();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = objc_allocWithZone(v25);
    v28 = (void *)sub_2419A9E90();
    *(_QWORD *)(v0 + 312) = v28;

    v29 = swift_task_alloc();
    v30 = v71;
    v31 = v28;
    sub_24194D9C4(v26);
    swift_bridgeObjectRelease();
    sub_2419A9E30();
    v32 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    *(_QWORD *)(v0 + 320) = v32;
    v32(v73, v72);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v73, v29, v72);
    swift_task_dealloc();
    v33 = swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v33;
    v75 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))(**(int **)(*(_QWORD *)v74 + 96)
                                                                   + *(_QWORD *)(*(_QWORD *)v74 + 96));
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v34;
    *v34 = v0;
    v34[1] = sub_24194C2AC;
    return v75(v33, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 256), v76 + v77);
  }
  v14 = (id *)(v0 + 16);
  v15 = *(void **)(v0 + 224);
  v16 = *(void **)(v0 + 200);
  v17 = *(void **)(v0 + 192);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 16) = v1;
  v18 = sub_2419A9E54();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = swift_task_alloc();
  v21 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v20, v18);
    if (MEMORY[0x24BECE0C0] && v22 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v23 = 3;
LABEL_31:
      v62 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 184);
      v61 = *(void **)(v0 + 192);
      v63 = *(_QWORD *)(v0 + 168);
      v64 = *(_QWORD *)(v0 + 176);
      v65 = *(unsigned int *)(v0 + 356);
      v66 = *(_QWORD *)(v0 + 80);
      v67 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v68 = swift_allocError();
      *v69 = v23;

      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v66, v63);
      *v67 = v68;
      v62(v67, v65, v63);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v64 + 32))(v66, v67, v63);
      swift_task_dealloc();
      goto LABEL_32;
    }
    if (MEMORY[0x24BECE0C8] && v22 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v23 = 4;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);
  }
  v36 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 24) = v1;
  v37 = sub_2419A9F74();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = swift_task_alloc();
  v40 = v1;
  if (swift_dynamicCast())
  {
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88))(v39, v37);
    if (MEMORY[0x24BE2BB68] && v41 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v23 = 6;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB70] && v41 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v23 = 7;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB78] && v41 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v23 = 8;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v37);
  }
  v42 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 32) = v1;
  v43 = v1;
  if (swift_dynamicCast())
  {

    v23 = *(_BYTE *)(v0 + 360);
    goto LABEL_31;
  }
  v44 = (id *)(v0 + 48);

  *(_QWORD *)(v0 + 48) = v1;
  v45 = sub_2419A9E84();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = swift_task_alloc();
  v48 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v45);
    swift_task_dealloc();

    v23 = 2;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 56) = v1;
  v49 = sub_2419A9E48();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = swift_task_alloc();
  v52 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v49);
    swift_task_dealloc();

    v23 = 0;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 64) = v1;
  v53 = v1;
  if (!swift_dynamicCast())
  {

    v23 = 1;
    goto LABEL_31;
  }
  v55 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 184);
  v54 = *(void **)(v0 + 192);
  v56 = *(_QWORD *)(v0 + 168);
  v58 = *(_QWORD *)(v0 + 120);
  v57 = *(_QWORD *)(v0 + 128);
  v59 = *(_QWORD *)(v0 + 112);
  v60 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8))(v60, v56);

  v55(v60, *MEMORY[0x24BECE110], v56);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);

LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194C2AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24194C310()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  char v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  int v26;
  id *v27;
  id v28;
  id *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  void (*v40)(uint64_t, _QWORD, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void (*v47)(_QWORD *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;

  v1 = *(void **)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 304);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v0 + 296))(v5, v4);
  v3(v5, v2, v4);
  swift_task_dealloc();
  v6 = sub_2419A9E9C();
  v8 = v7;
  v9 = sub_2419A9EA8();
  sub_24194D3BC(v6, v8, v9, v10);
  v11 = *(void **)(v0 + 312);
  v12 = *(void **)(v0 + 192);
  v13 = *(void **)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v1)
  {

LABEL_32:
    swift_task_dealloc();
    goto LABEL_33;
  }
  v14 = (id *)(v0 + 16);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 16) = v1;
  v15 = sub_2419A9E54();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = swift_task_alloc();
  v18 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x24BECE0C0] && v19 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v20 = 3;
LABEL_31:
      v47 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 184);
      v46 = *(void **)(v0 + 192);
      v48 = *(_QWORD *)(v0 + 168);
      v49 = *(_QWORD *)(v0 + 176);
      v50 = *(unsigned int *)(v0 + 356);
      v51 = *(_QWORD *)(v0 + 80);
      v52 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v53 = swift_allocError();
      *v54 = v20;

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v48);
      *v52 = v53;
      v47(v52, v50, v48);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v49 + 32))(v51, v52, v48);
      goto LABEL_32;
    }
    if (MEMORY[0x24BECE0C8] && v19 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v20 = 4;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  v21 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 24) = v1;
  v22 = sub_2419A9F74();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = swift_task_alloc();
  v25 = v1;
  if (swift_dynamicCast())
  {
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v24, v22);
    if (MEMORY[0x24BE2BB68] && v26 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v20 = 6;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB70] && v26 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v20 = 7;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB78] && v26 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v20 = 8;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
  }
  v27 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 32) = v1;
  v28 = v1;
  if (swift_dynamicCast())
  {

    v20 = *(_BYTE *)(v0 + 360);
    goto LABEL_31;
  }
  v29 = (id *)(v0 + 48);

  *(_QWORD *)(v0 + 48) = v1;
  v30 = sub_2419A9E84();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = swift_task_alloc();
  v33 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v30);
    swift_task_dealloc();

    v20 = 2;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 56) = v1;
  v34 = sub_2419A9E48();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = swift_task_alloc();
  v37 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
    swift_task_dealloc();

    v20 = 0;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 64) = v1;
  v38 = v1;
  if (!swift_dynamicCast())
  {

    v20 = 1;
    goto LABEL_31;
  }
  v40 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 184);
  v39 = *(void **)(v0 + 192);
  v41 = *(_QWORD *)(v0 + 168);
  v43 = *(_QWORD *)(v0 + 120);
  v42 = *(_QWORD *)(v0 + 128);
  v44 = *(_QWORD *)(v0 + 112);
  v45 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8))(v45, v41);

  v40(v45, *MEMORY[0x24BECE110], v41);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);

LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194C900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  int v12;
  char v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  id *v20;
  id v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  void (*v33)(uint64_t, _QWORD, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void (*v40)(_QWORD *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(void **)(v0 + 192);
  v4 = *(void **)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(id *)(v0 + 288);
  *(_QWORD *)(v0 + 16) = v6;
  v7 = (id *)(v0 + 16);
  v8 = sub_2419A9E54();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = swift_task_alloc();
  v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x24BECE0C0] && v12 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v6 = *v7;
      v13 = 3;
LABEL_29:

      v40 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 184);
      v39 = *(void **)(v0 + 192);
      v41 = *(_QWORD *)(v0 + 168);
      v42 = *(_QWORD *)(v0 + 176);
      v43 = *(unsigned int *)(v0 + 356);
      v44 = *(_QWORD *)(v0 + 80);
      v45 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v46 = swift_allocError();
      *v47 = v13;

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v41);
      *v45 = v46;
      v40(v45, v43, v41);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v42 + 32))(v44, v45, v41);
      swift_task_dealloc();
      goto LABEL_30;
    }
    if (MEMORY[0x24BECE0C8] && v12 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v6 = *v7;
      v13 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 24) = v6;
  v15 = sub_2419A9F74();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = swift_task_alloc();
  v18 = v6;
  if (swift_dynamicCast())
  {
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x24BE2BB68] && v19 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v6 = *v14;
      v13 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB70] && v19 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v6 = *v14;
      v13 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB78] && v19 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v6 = *v14;
      v13 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 32) = v6;
  v21 = v6;
  if (swift_dynamicCast())
  {

    v13 = *(_BYTE *)(v0 + 360);
    v6 = *v20;
    goto LABEL_29;
  }
  v22 = (id *)(v0 + 48);

  *(_QWORD *)(v0 + 48) = v6;
  v23 = sub_2419A9E84();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = swift_task_alloc();
  v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    v6 = *v22;
    v13 = 2;
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 56) = v6;
  v27 = sub_2419A9E48();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = swift_task_alloc();
  v30 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v27);
    swift_task_dealloc();
    v13 = 0;
    v6 = *(id *)(v0 + 56);
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 64) = v6;
  v31 = v6;
  if (!swift_dynamicCast())
  {

    v13 = 1;
    goto LABEL_29;
  }
  v33 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 184);
  v32 = *(void **)(v0 + 192);
  v34 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 120);
  v35 = *(_QWORD *)(v0 + 128);
  v37 = *(_QWORD *)(v0 + 112);
  v38 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8))(v38, v34);

  v33(v38, *MEMORY[0x24BECE110], v34);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);

LABEL_30:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194CE60()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  int v12;
  char v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  id *v20;
  id v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  void (*v33)(uint64_t, _QWORD, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void (*v40)(_QWORD *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 232);
  v5 = *(void **)(v0 + 192);
  v4 = *(void **)(v0 + 200);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(id *)(v0 + 344);
  *(_QWORD *)(v0 + 16) = v6;
  v7 = (id *)(v0 + 16);
  v8 = sub_2419A9E54();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = swift_task_alloc();
  v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x24BECE0C0] && v12 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v6 = *v7;
      v13 = 3;
LABEL_29:

      v40 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 184);
      v39 = *(void **)(v0 + 192);
      v41 = *(_QWORD *)(v0 + 168);
      v42 = *(_QWORD *)(v0 + 176);
      v43 = *(unsigned int *)(v0 + 356);
      v44 = *(_QWORD *)(v0 + 80);
      v45 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v46 = swift_allocError();
      *v47 = v13;

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v41);
      *v45 = v46;
      v40(v45, v43, v41);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v42 + 32))(v44, v45, v41);
      swift_task_dealloc();
      goto LABEL_30;
    }
    if (MEMORY[0x24BECE0C8] && v12 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v6 = *v7;
      v13 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 24) = v6;
  v15 = sub_2419A9F74();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = swift_task_alloc();
  v18 = v6;
  if (swift_dynamicCast())
  {
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x24BE2BB68] && v19 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v6 = *v14;
      v13 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB70] && v19 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v6 = *v14;
      v13 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB78] && v19 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v6 = *v14;
      v13 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 32) = v6;
  v21 = v6;
  if (swift_dynamicCast())
  {

    v13 = *(_BYTE *)(v0 + 360);
    v6 = *v20;
    goto LABEL_29;
  }
  v22 = (id *)(v0 + 48);

  *(_QWORD *)(v0 + 48) = v6;
  v23 = sub_2419A9E84();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = swift_task_alloc();
  v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    v6 = *v22;
    v13 = 2;
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 56) = v6;
  v27 = sub_2419A9E48();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = swift_task_alloc();
  v30 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v27);
    swift_task_dealloc();
    v13 = 0;
    v6 = *(id *)(v0 + 56);
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 64) = v6;
  v31 = v6;
  if (!swift_dynamicCast())
  {

    v13 = 1;
    goto LABEL_29;
  }
  v33 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 184);
  v32 = *(void **)(v0 + 192);
  v34 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 120);
  v35 = *(_QWORD *)(v0 + 128);
  v37 = *(_QWORD *)(v0 + 112);
  v38 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8))(v38, v34);

  v33(v38, *MEMORY[0x24BECE110], v34);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);

LABEL_30:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194D3BC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v9 = sub_2419AA040();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_2419AA208();
  if ((result & 1) != 0)
  {
    v14 = a1;
    v15 = type metadata accessor for DevicePropertiesWorker();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v4 + *(int *)(v15 + 20), v9);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v16 = sub_2419AA028();
    v17 = sub_2419AA22C();
    v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      v19 = swift_slowAlloc();
      v22 = a3;
      v20 = v19;
      v24 = swift_slowAlloc();
      v26 = v24;
      *(_DWORD *)v20 = 136315394;
      v23 = v18;
      swift_bridgeObjectRetain();
      v25 = sub_24193F470(v14, a2, &v26);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      swift_bridgeObjectRetain();
      v25 = sub_24193F470(v22, a4, &v26);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24193B000, v16, (os_log_type_t)v23, "TaskId: %s, TaskName: %s: asked to stop!", (uint8_t *)v20, 0x16u);
      v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v21, -1, -1);
      MEMORY[0x24269F7A0](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_2419AA1FC();
    sub_24194169C(&qword_257163B20, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_2419AA04C();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_24194D660(uint64_t a1)
{
  return sub_24194D8B0(a1, &qword_257163B08);
}

unint64_t sub_24194D66C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163B18);
  v2 = (_QWORD *)sub_2419AA448();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_24195B490(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24194D77C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163AF8);
  v2 = sub_2419AA448();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24194F538(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_24195B490(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_24194F580(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24194D8A4(uint64_t a1)
{
  return sub_24194D8B0(a1, &qword_257163AF0);
}

unint64_t sub_24194D8B0(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_2419AA448();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_24195B490(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24194D9C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163AF8);
    v2 = (_QWORD *)sub_2419AA448();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BEE4AD8] + 8;
  v11 = MEMORY[0x24BEE1768];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_24194F590();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_24194F580(v6, v7);
    sub_24194F580(v7, v40);
    sub_24194F580(v40, &v38);
    result = sub_24195B490(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      result = (unint64_t)sub_24194F580(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_24194F580(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_24194DD1C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163AF0);
    v2 = (_QWORD *)sub_2419AA448();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v11 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v11 >= v27)
    goto LABEL_32;
  v12 = *(_QWORD *)(v28 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v27)
          {
            v12 = *(_QWORD *)(v28 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_36;
              if (v13 >= v27)
                break;
              v12 = *(_QWORD *)(v28 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_24194F590();
          return;
        }
      }
    }
  }
LABEL_26:
  v5 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    v19 = v18;
    v20 = sub_24195B490(v17, v16);
    v21 = v20;
    if ((v22 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *v7 = v17;
      v7[1] = v16;
      v8 = v2[7];

      *(_QWORD *)(v8 + 8 * v21) = v19;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    v23 = (uint64_t *)(v2[6] + 16 * v20);
    *v23 = v17;
    v23[1] = v16;
    *(_QWORD *)(v2[7] + 8 * v20) = v19;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_24194DFBC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, void *, uint64_t);
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  id v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v3 = v2;
  v56 = a2;
  v5 = sub_2419AA040();
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v58 = (char *)&v53 - v9;
  v10 = sub_2419A9CE0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v57 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v53 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v53 - v17;
  v19 = sub_2419A9E78();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, a1, v19);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v22, v19);
  if (MEMORY[0x24BECE108] && v23 == *MEMORY[0x24BECE108])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    sub_2419A9D94();
    v24 = v18;
    sub_2419A9D4C();
    v25 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26 = v16;
    v27 = v10;
    v25(v26, v10);
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    v29 = (void *)sub_2419AA0DC();
    v55 = v28;
    objc_msgSend(v28, sel_setDateFormat_, v29);

    v30 = (void *)sub_2419A9CA4();
    v54 = 0x80000002419B0E60;
    v31 = (void *)sub_2419AA0DC();
    objc_msgSend(v56, sel_setValue_forKey_, v30, v31);

    v32 = type metadata accessor for DevicePropertiesWorker();
    v33 = v58;
    v34 = v59;
    v35 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v3 + *(int *)(v32 + 20), v60);
    v36 = *(void (**)(char *, void *, uint64_t))(v11 + 16);
    v37 = v57;
    v36(v57, v24, v27);
    v38 = sub_2419AA028();
    v39 = sub_2419AA238();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v56 = v24;
      v41 = v40;
      v53 = swift_slowAlloc();
      v62 = v53;
      *(_DWORD *)v41 = 136315394;
      sub_24194169C(&qword_257163B10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v42 = sub_2419AA568();
      v61 = sub_24193F470(v42, v43, &v62);
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      v25(v37, v27);
      *(_WORD *)(v41 + 12) = 2080;
      v61 = sub_24193F470(0xD000000000000021, v54, &v62);
      sub_2419AA2EC();
      _os_log_impl(&dword_24193B000, v38, v39, "Wrote %s to %s in UserDefaults", (uint8_t *)v41, 0x16u);
      v44 = v53;
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v44, -1, -1);
      MEMORY[0x24269F7A0](v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v58, v60);
      return ((uint64_t (*)(id, uint64_t))v25)(v56, v27);
    }
    else
    {

      v25(v37, v27);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
      return ((uint64_t (*)(void *, uint64_t))v25)(v24, v27);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v46 = type metadata accessor for DevicePropertiesWorker();
    v48 = v59;
    v47 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v8, v3 + *(int *)(v46 + 20), v60);
    v49 = sub_2419AA028();
    v50 = sub_2419AA238();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v62 = v52;
      *(_DWORD *)v51 = 136315138;
      v61 = sub_24193F470(0xD000000000000021, 0x80000002419B0E60, &v62);
      sub_2419AA2EC();
      _os_log_impl(&dword_24193B000, v49, v50, "DevicePropertiesPlugin run was not successful. Not updating  %s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v52, -1, -1);
      MEMORY[0x24269F7A0](v51, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v8, v47);
  }
}

uint64_t DevicePropertiesExecutor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DevicePropertiesExecutor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24194E58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_2419AA040();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24194E5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(void **)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163978);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  type metadata accessor for DevicePropertiesPlugin();
  swift_allocObject();
  v7 = sub_24198A024(v5, v1);

  *(_QWORD *)(v0 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163980);
  swift_allocObject();
  v8 = sub_2419A9E6C();
  *(_QWORD *)(v0 + 88) = v8;
  if (v8)
  {
    v9 = *(_QWORD *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163988);
    v10 = swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v10;
    v11 = sub_2419A9E3C();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v9, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v13;
    *v13 = v0;
    v13[1] = sub_24194E834;
    return sub_2419A9E60();
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 24);
    v16 = sub_2419A9E78();
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v6, 1, 1, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v15, *MEMORY[0x24BECE0F8], v16);
    sub_241941720(v6, &qword_257163978);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24194E834()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  sub_241941720(*(_QWORD *)(v2 + 96), (uint64_t *)&unk_257163988);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24194E8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = sub_2419A9E78();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194E94C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194E990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_2419AA040();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24194E9F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 16))(v1, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  type metadata accessor for AssetPenetrationStatus();
  swift_allocObject();
  v3 = AssetPenetrationStatus.init(defaults:logger:)(v2, v1);
  *(_QWORD *)(v0 + 80) = v3;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163978);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 88) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163998);
  swift_allocObject();
  swift_retain();
  v6 = sub_2419A9E6C();
  *(_QWORD *)(v0 + 96) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163988);
    v8 = swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v8;
    v9 = sub_2419A9E3C();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v11;
    *v11 = v0;
    v11[1] = sub_24194EC34;
    return sub_2419A9E60();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 24);
    swift_release();
    v14 = sub_2419A9E78();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v5, 1, 1, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v13, *MEMORY[0x24BECE0F8], v14);
    sub_241941720(v5, &qword_257163978);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24194EC34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  sub_241941720(*(_QWORD *)(v2 + 104), (uint64_t *)&unk_257163988);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24194ECC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = sub_2419A9E78();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194ED54()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DevicePropertiesExecutor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DevicePropertiesExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_24194EDC0()
{
  unint64_t result;

  result = qword_2571639A0;
  if (!qword_2571639A0)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for DevicePropertiesWorker.Subtask, &type metadata for DevicePropertiesWorker.Subtask);
    atomic_store(result, (unint64_t *)&qword_2571639A0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DevicePropertiesWorker(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2419A9D64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2419AA040();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for DevicePropertiesWorker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_2419AA040();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DevicePropertiesWorker()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24194F104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_2419A9D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2419AA040();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for DevicePropertiesWorker()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24194F184(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_2419A9D64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2419AA040();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_24194F200()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2419A9D64();
  if (v1 <= 0x3F)
  {
    result = sub_2419AA040();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DevicePropertiesWorker.Subtask(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DevicePropertiesWorker.Subtask(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24194F360 + 4 * byte_2419ABD35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24194F394 + 4 * byte_2419ABD30[v4]))();
}

uint64_t sub_24194F394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24194F39C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24194F3A4);
  return result;
}

uint64_t sub_24194F3B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24194F3B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24194F3BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24194F3C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_24194F3D0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DevicePropertiesWorker.Subtask()
{
  return &type metadata for DevicePropertiesWorker.Subtask;
}

uint64_t type metadata accessor for DevicePropertiesExecutor()
{
  return objc_opt_self();
}

uint64_t method lookup function for DevicePropertiesExecutor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DevicePropertiesExecutor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DevicePropertiesExecutor.executeDevicePropertiesPlugin(defaults:pluginContext:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 88)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 88));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_2419470D8;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DevicePropertiesExecutor.executeAssetPenetrationMetrics(defaults:pluginContext:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 96)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 96));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_24193D468;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_24194F538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_24194F580(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_24194F590()
{
  return swift_release();
}

uint64_t SELFReportingService.__allocating_init(messageStream:)(id a1)
{
  uint64_t v2;
  id v3;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 24) = objc_msgSend((id)objc_opt_self(), sel_sharedLoggerWithPersistenceConfiguration_, 1);
  if (!a1)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
    a1 = objc_msgSend(v3, sel_defaultMessageStream);

  }
  *(_QWORD *)(v2 + 16) = a1;
  return v2;
}

uint64_t sub_24194F648(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_24193D468;
  v7[9] = a2;
  v7[10] = v6;
  v7[8] = a1;
  return swift_task_switch();
}

uint64_t SELFReportingService.init(messageStream:)(id a1)
{
  uint64_t v1;
  id v3;

  *(_QWORD *)(v1 + 24) = objc_msgSend((id)objc_opt_self(), sel_sharedLoggerWithPersistenceConfiguration_, 1);
  if (!a1)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
    a1 = objc_msgSend(v3, sel_defaultMessageStream);

  }
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_24194F754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_24194F770()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;
  _QWORD *v15;
  id v16;

  *(_QWORD *)(v0 + 40) = &type metadata for Features;
  v1 = sub_241947F4C();
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_2419A9E18();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) == 0)
  {
    sub_2419502E0(*(void **)(v0 + 64));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = objc_msgSend(*(id *)(v0 + 64), sel_wrapAsAnyEvent);
  *(_QWORD *)(v0 + 88) = v3;
  if (!v3)
  {
    v10 = sub_2419AA028();
    v11 = sub_2419AA244();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_24193B000, v10, v11, "Couldn't package event in AnyEvent wrapper.", v12, 2u);
      MEMORY[0x24269F7A0](v12, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = v3;
  v5 = v3;
  v6 = sub_2419AA028();
  v7 = sub_2419AA238();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    *(_QWORD *)(v0 + 56) = v5;
    v16 = v5;
    v9 = v5;
    sub_2419AA2EC();
    *v15 = v4;

    v5 = v16;
    _os_log_impl(&dword_24193B000, v6, v7, "FBF Shared reporter: store the event %@ and send to server", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v15, -1, -1);
    MEMORY[0x24269F7A0](v8, -1, -1);
  }
  else
  {

  }
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v14;
  *(_QWORD *)v14 = v0;
  *(_QWORD *)(v14 + 8) = sub_24194FA08;
  *(_OWORD *)(v14 + 128) = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v14 + 120) = v5;
  return swift_task_switch();
}

uint64_t sub_24194FA08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24194FA6C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  objc_msgSend(*(id *)(v0 + 64), sel_whichEvent_Type);
  sub_2419505F4();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194FAC4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _BYTE *v3;

  v1 = *(void **)(v0 + 104);
  v2 = *(void **)(v0 + 88);
  objc_msgSend(*(id *)(v0 + 64), sel_whichEvent_Type);
  sub_2419505F4();
  sub_24193F23C();
  swift_allocError();
  *v3 = 16;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194FB68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_24194FB84()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;
  _QWORD *v15;
  id v16;

  *(_QWORD *)(v0 + 40) = &type metadata for Features;
  v1 = sub_241947F4C();
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_2419A9E18();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) == 0)
  {
    sub_2419502E0(*(void **)(v0 + 64));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = objc_msgSend(*(id *)(v0 + 64), sel_wrapAsAnyEvent);
  *(_QWORD *)(v0 + 88) = v3;
  if (!v3)
  {
    v10 = sub_2419AA028();
    v11 = sub_2419AA244();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_24193B000, v10, v11, "Couldn't package event in AnyEvent wrapper.", v12, 2u);
      MEMORY[0x24269F7A0](v12, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = v3;
  v5 = v3;
  v6 = sub_2419AA028();
  v7 = sub_2419AA238();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    *(_QWORD *)(v0 + 56) = v5;
    v16 = v5;
    v9 = v5;
    sub_2419AA2EC();
    *v15 = v4;

    v5 = v16;
    _os_log_impl(&dword_24193B000, v6, v7, "FBF Shared reporter: store the event %@ and send to server", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v15, -1, -1);
    MEMORY[0x24269F7A0](v8, -1, -1);
  }
  else
  {

  }
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v14;
  *(_QWORD *)v14 = v0;
  *(_QWORD *)(v14 + 8) = sub_24194FE1C;
  *(_OWORD *)(v14 + 128) = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v14 + 120) = v5;
  return swift_task_switch();
}

uint64_t sub_24194FE1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24194FE80()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  objc_msgSend(*(id *)(v0 + 64), sel_whichEvent_Type);
  sub_2419505F4();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194FED8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _BYTE *v3;

  v1 = *(void **)(v0 + 104);
  v2 = *(void **)(v0 + 88);
  objc_msgSend(*(id *)(v0 + 64), sel_whichEvent_Type);
  sub_2419505F4();
  sub_24193F23C();
  swift_allocError();
  *v3 = 16;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24194FF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_24194FF98()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  NSObject *v5;
  uint8_t *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v12;

  v1 = *(id *)(v0 + 120);
  v2 = sub_2419AA028();
  v3 = sub_2419AA238();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(NSObject **)(v0 + 120);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    *(_QWORD *)(v0 + 80) = v5;
    v7 = v5;
    sub_2419AA2EC();
    *v12 = v5;

    _os_log_impl(&dword_24193B000, v2, v3, "FBF reporter: store the event %@ and send to server", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v12, -1, -1);
    MEMORY[0x24269F7A0](v6, -1, -1);
  }
  else
  {

    v2 = v5;
  }

  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(void **)(*(_QWORD *)(v0 + 136) + 24);
  v10 = sub_2419AA0DC();
  *(_QWORD *)(v0 + 144) = v10;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_241950198;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_24195026C;
  *(_QWORD *)(v0 + 104) = &block_descriptor_9;
  objc_msgSend(v9, sel_reportSiriInstrumentationEvent_forBundleID_completion_, v8, v10, v0 + 80);
  return swift_continuation_await();
}

uint64_t sub_241950198()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2419501F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24195022C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24195026C(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_2419502E0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  id v18;
  _QWORD *v19;
  os_log_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v26;
  os_log_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = sub_2419A9D1C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  sub_2419A9D10();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v10 = a1;
  v11 = sub_2419AA028();
  v12 = sub_2419AA238();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v31 = v3;
    v14 = v13;
    v28 = (_QWORD *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v34 = v29;
    *(_DWORD *)v14 = 136315394;
    v27 = v11;
    v15 = sub_2419A9CF8();
    v33 = sub_24193F470(v15, v16, &v34);
    v30 = v1;
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v7, v31);
    *(_WORD *)(v14 + 12) = 2112;
    v33 = (uint64_t)v10;
    v18 = v10;
    sub_2419AA2EC();
    v19 = v28;
    *v28 = v10;

    v20 = v27;
    _os_log_impl(&dword_24193B000, v27, v12, "SELF reporter: reported task with stats, isolatedStreamUUID = %s, message = %@", (uint8_t *)v14, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v19, -1, -1);
    v21 = v29;
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v21, -1, -1);
    v22 = v14;
    v3 = v31;
    MEMORY[0x24269F7A0](v22, -1, -1);

  }
  else
  {

    v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v7, v3);

  }
  v23 = *(void **)(v32 + 16);
  v24 = (void *)sub_2419A9D04();
  objc_msgSend(v23, sel_emitMessage_isolatedStreamUUID_, v10, v24);

  return ((uint64_t (*)(char *, uint64_t))v17)(v9, v3);
}

uint64_t SELFReportingService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SELFReportingService.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_2419505F4()
{
  uint64_t inited;
  unint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t aBlock[6];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163C30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2419ABE70;
  *(_QWORD *)(inited + 32) = 0x73736563637553;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = sub_2419AA1F0();
  *(_QWORD *)(inited + 56) = 0x707954746E657645;
  *(_QWORD *)(inited + 64) = 0xE900000000000065;
  *(_QWORD *)(inited + 72) = sub_2419AA2E0();
  *(_QWORD *)(inited + 80) = 0x546567617373654DLL;
  *(_QWORD *)(inited + 88) = 0xEB00000000657079;
  *(_QWORD *)(inited + 96) = sub_2419AA2E0();
  v1 = sub_24194D660(inited);
  swift_bridgeObjectRetain_n();
  v2 = sub_2419AA028();
  v3 = sub_2419AA238();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    aBlock[0] = v5;
    *(_DWORD *)v4 = 136315138;
    sub_241950A30();
    swift_bridgeObjectRetain();
    v6 = sub_2419AA070();
    v8 = v7;
    swift_bridgeObjectRelease();
    sub_24193F470(v6, v8, aBlock);
    sub_2419AA2EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24193B000, v2, v3, "FBFWrite: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v5, -1, -1);
    MEMORY[0x24269F7A0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = (void *)sub_2419AA0DC();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v1;
  aBlock[4] = (uint64_t)sub_241950A10;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_241956C98;
  aBlock[3] = (uint64_t)&block_descriptor;
  v11 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v11);

}

uint64_t type metadata accessor for SELFReportingService()
{
  return objc_opt_self();
}

uint64_t method lookup function for SELFReportingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SELFReportingService.__allocating_init(messageStream:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SELFReportingService.reportEvent(event:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 104) + *(_QWORD *)(*(_QWORD *)v2 + 104));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t dispatch thunk of SELFReportingService.reportODBATCHEvent(event:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 112) + *(_QWORD *)(*(_QWORD *)v2 + 112));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_2419470D8;
  return v8(a1, a2);
}

uint64_t sub_2419509EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_241950A10()
{
  uint64_t v0;

  sub_24194DD1C(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_241950A30()
{
  unint64_t result;

  result = qword_2571630D8;
  if (!qword_2571630D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571630D8);
  }
  return result;
}

uint64_t SiriBootToAssetReporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_241950A74()
{
  return swift_task_switch();
}

uint64_t sub_241950A88()
{
  return sub_2419AA418();
}

uint64_t SiriBootToAssetReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_241950B08()
{
  unint64_t result;

  result = qword_257163C40;
  if (!qword_257163C40)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for BootToAssetResults, &type metadata for BootToAssetResults);
    atomic_store(result, (unint64_t *)&qword_257163C40);
  }
  return result;
}

uint64_t type metadata accessor for SiriBootToAssetReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriBootToAssetReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriBootToAssetReporter.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 80) + *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t sub_241950BDC(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000002419AFE20;
  else
    v2 = 0x80000002419AFE00;
  if ((a2 & 1) != 0)
    v3 = 0x80000002419AFE20;
  else
    v3 = 0x80000002419AFE00;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_2419AA574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_241950C78(uint64_t a1, uint64_t a2)
{
  return sub_241950DAC(a1, a2, SiriReponseCategory.rawValue.getter);
}

void sub_241950C84(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_241950CD0(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_241950D24 + 4 * byte_2419ABF74[a2]))(a3 + 7);
}

uint64_t sub_241950D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 7 && v3 == 0x80000002419B0060)
    v4 = 1;
  else
    v4 = sub_2419AA574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_241950DAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_2419AA574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_241950E44()
{
  sub_2419AA5EC();
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

void sub_241950EC0(char a1)
{
  sub_2419AA5EC();
  __asm { BR              X10 }
}

uint64_t sub_241950F18()
{
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

void sub_241950F80(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_241950FC4()
{
  sub_2419AA148();
  return swift_bridgeObjectRelease();
}

void sub_241951010(uint64_t a1, char a2)
{
  sub_2419AA5EC();
  __asm { BR              X10 }
}

uint64_t sub_241951064()
{
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_2419510CC()
{
  sub_2419AA5EC();
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_241951144()
{
  uint64_t v0;

  v0 = sub_2419AA040();
  __swift_allocate_value_buffer(v0, qword_257163CF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_257163CF8);
  return sub_2419AA034();
}

MetricsFramework::SiriMetricsWorkerError_optional __swiftcall SiriMetricsWorkerError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MetricsFramework::SiriMetricsWorkerError_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2419AA580();
  result.value = swift_bridgeObjectRelease();
  v5 = 18;
  if (v3 < 0x12)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SiriMetricsWorkerError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24195125C + 4 * byte_2419ABF84[*v0]))(0xD000000000000017, 0x80000002419AFE80);
}

uint64_t sub_24195125C()
{
  return 0x74754F64656D6974;
}

uint64_t sub_241951280()
{
  return 0x7463657078656E75;
}

uint64_t sub_2419512A4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_2419513F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241950DAC(*a1, *a2, SiriMetricsWorkerError.rawValue.getter) & 1;
}

uint64_t sub_241951418()
{
  sub_2419AA5EC();
  SiriMetricsWorkerError.rawValue.getter();
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_24195147C()
{
  SiriMetricsWorkerError.rawValue.getter();
  sub_2419AA148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2419514CC()
{
  sub_2419AA5EC();
  SiriMetricsWorkerError.rawValue.getter();
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

MetricsFramework::SiriMetricsWorkerError_optional sub_24195152C(Swift::String *a1)
{
  return SiriMetricsWorkerError.init(rawValue:)(*a1);
}

uint64_t sub_241951538@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SiriMetricsWorkerError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

MetricsFramework::MetricsWorker::Subtask_optional __swiftcall MetricsWorker.Subtask.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  MetricsFramework::MetricsWorker::Subtask_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2419AA460();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MetricsWorker.Subtask.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2419515F8 + 4 * byte_2419ABF96[*v0]))(0xD000000000000011, 0x80000002419B0040);
}

uint64_t sub_2419515F8(uint64_t a1)
{
  return a1 + 7;
}

void sub_241951630(char *a1)
{
  sub_241950C84(*a1);
}

void sub_24195163C()
{
  char *v0;

  sub_241950EC0(*v0);
}

void sub_241951644(uint64_t a1)
{
  char *v1;

  sub_241950F80(a1, *v1);
}

void sub_24195164C(uint64_t a1)
{
  char *v1;

  sub_241951010(a1, *v1);
}

MetricsFramework::MetricsWorker::Subtask_optional sub_241951654(Swift::String *a1)
{
  return MetricsWorker.Subtask.init(rawValue:)(*a1);
}

uint64_t sub_241951660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MetricsWorker.Subtask.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t static MetricsWorker.suiteName.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static MetricsWorker.includeCurrentDateForAggregation.getter()
{
  return 0xD000000000000022;
}

uint64_t MetricsWorker.doWork(metricsExecutor:context:durationThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[51] = a2;
  v3[52] = a3;
  v3[50] = a1;
  v4 = sub_2419AA1FC();
  v3[53] = v4;
  v3[54] = *(_QWORD *)(v4 - 8);
  v3[55] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241951724()
{
  uint64_t v0;
  id *v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  int v30;
  id v31;
  char v32;
  uint64_t v33;
  objc_class *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t inited;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  id *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  int v60;
  NSObject *v61;
  uint64_t v62;
  uint8_t *v63;
  _BYTE *v64;
  id v65;
  id *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  void (*v76)(uint64_t, _QWORD, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(_QWORD *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  id *v90;
  uint64_t (*v91)(uint64_t, id, uint64_t);
  uint64_t v92;
  uint64_t v93;

  if (qword_257162A70 != -1)
    swift_once();
  v1 = (id *)(v0 + 368);
  v2 = *(void **)(v0 + 416);
  v3 = sub_2419AA040();
  __swift_project_value_buffer(v3, (uint64_t)qword_257163CF8);
  v4 = v2;
  v5 = sub_2419AA028();
  v6 = sub_2419AA22C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 416);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v92 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_2419A9E9C();
    *(_QWORD *)(v0 + 392) = sub_24193F470(v11, v12, &v92);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2080;
    v13 = sub_2419A9EA8();
    *(_QWORD *)(v0 + 360) = sub_24193F470(v13, v14, &v92);
    v1 = (id *)(v0 + 368);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24193B000, v5, v6, "TaskId: %s, TaskName: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v10, -1, -1);
    MEMORY[0x24269F7A0](v9, -1, -1);
  }
  else
  {

  }
  v15 = *(_QWORD **)(v0 + 400);
  *v15 = 0;
  v16 = *MEMORY[0x24BECE100];
  *(_DWORD *)(v0 + 696) = v16;
  v17 = sub_2419A9E78();
  *(_QWORD *)(v0 + 448) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v0 + 456) = v18;
  v19 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 104);
  *(_QWORD *)(v0 + 464) = v19;
  v19(v15, v16, v17);
  v20 = sub_2419A9E9C();
  v22 = v21;
  v23 = sub_2419A9EA8();
  sub_24195535C(v20, v22, v23, v24);
  v90 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2419A9E9C();
  v92 = sub_2419A9EA8();
  v93 = v33;
  swift_bridgeObjectRetain();
  sub_2419AA178();
  swift_bridgeObjectRetain();
  sub_2419AA178();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = (objc_class *)sub_2419A9EB4();
  *(_QWORD *)(v0 + 504) = v34;
  v35 = objc_allocWithZone(v34);
  v36 = (void *)sub_2419A9E90();
  *(_QWORD *)(v0 + 512) = v36;
  v37 = sub_2419A9E3C();
  *(_QWORD *)(v0 + 520) = v37;
  v38 = *(_QWORD *)(v37 - 8);
  *(_QWORD *)(v0 + 528) = v38;
  *(_QWORD *)(v0 + 536) = *(_QWORD *)(v38 + 64);
  v39 = swift_task_alloc();
  *(_QWORD *)(v0 + 544) = v39;
  v40 = v36;
  v92 = sub_2419A9EA8();
  v93 = v41;
  sub_2419AA178();
  v42 = objc_allocWithZone(MEMORY[0x24BEBA8F8]);
  v43 = (void *)sub_2419AA0DC();
  v44 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v45 = v42;
  v46 = v40;
  objc_msgSend(v45, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v43, 1, v44);

  *(_QWORD *)(v0 + 552) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163D18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2419AB050;
  *(_QWORD *)(inited + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 40) = 0x80000002419AFE40;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = 60000;
  sub_24194D77C(inited);
  sub_2419A9E30();
  v48 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v49 = (void *)sub_2419AA0DC();
  v50 = objc_msgSend(v48, sel_initWithSuiteName_, v49);
  *(_QWORD *)(v0 + 560) = v50;

  if (v50)
  {
    v51 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 472) = *(_QWORD *)(v18 + 64);
    v52 = swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v52;
    v91 = (uint64_t (*)(uint64_t, id, uint64_t))(**(int **)(*(_QWORD *)v51 + 88)
                                                       + *(_QWORD *)(*(_QWORD *)v51 + 88));
    v53 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v53;
    *v53 = v0;
    v53[1] = sub_241952234;
    return v91(v52, v50, v39);
  }
  v61 = sub_2419AA028();
  v62 = sub_2419AA244();
  if (os_log_type_enabled(v61, (os_log_type_t)v62))
  {
    v63 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v63 = 0;
    _os_log_impl(&dword_24193B000, v61, (os_log_type_t)v62, "Can't get user defaults initialized", v63, 2u);
    MEMORY[0x24269F7A0](v63, -1, -1);
  }

  sub_24193F23C();
  v31 = (id)swift_allocError();
  *v64 = 5;
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v37);
  swift_task_dealloc();
  v25 = (id *)(v0 + 384);
  *(_QWORD *)(v0 + 384) = v31;
  v26 = sub_2419A9E54();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = swift_task_alloc();
  v29 = v31;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if (swift_dynamicCast())
  {
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v28, v26);
    if (MEMORY[0x24BECE0C0] && v30 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v31 = *v25;
      v32 = 3;
LABEL_40:

      v83 = *(_QWORD *)(v0 + 456);
      v82 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 464);
      v84 = *(_QWORD *)(v0 + 448);
      v85 = *(unsigned int *)(v0 + 696);
      v86 = *(_QWORD *)(v0 + 400);
      v87 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v88 = swift_allocError();
      *v89 = v32;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v86, v84);
      *v87 = v88;
      v82(v87, v85, v84);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v83 + 32))(v86, v87, v84);
      swift_task_dealloc();
      goto LABEL_41;
    }
    if (MEMORY[0x24BECE0C8] && v30 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v31 = *v25;
      v32 = 4;
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  }
  v55 = (id *)(v0 + 376);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 376) = v31;
  v56 = sub_2419A9F74();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = swift_task_alloc();
  v59 = v31;
  if (swift_dynamicCast())
  {
    v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 88))(v58, v56);
    if (MEMORY[0x24BE2BB68] && v60 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v31 = *v55;
      v32 = 6;
      goto LABEL_40;
    }
    if (MEMORY[0x24BE2BB70] && v60 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v31 = *v55;
      v32 = 7;
      goto LABEL_40;
    }
    if (MEMORY[0x24BE2BB78] && v60 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v31 = *v55;
      v32 = 8;
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v56);
  }
  swift_task_dealloc();

  *v90 = v31;
  v65 = v31;
  if (swift_dynamicCast())
  {

    v32 = *(_BYTE *)(v0 + 700);
    v31 = *v90;
    goto LABEL_40;
  }
  v66 = (id *)(v0 + 336);

  *(_QWORD *)(v0 + 336) = v31;
  v67 = sub_2419A9E84();
  v68 = *(_QWORD *)(v67 - 8);
  v69 = swift_task_alloc();
  v70 = v31;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v67);
    swift_task_dealloc();
    v31 = *v66;
    v32 = 2;
    goto LABEL_40;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 344) = v31;
  v71 = sub_2419A9E48();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = swift_task_alloc();
  v74 = v31;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v71);
    swift_task_dealloc();
    v32 = 0;
    v31 = *(id *)(v0 + 344);
    goto LABEL_40;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 352) = v31;
  v75 = v31;
  if (!swift_dynamicCast())
  {

    v32 = 1;
    goto LABEL_40;
  }
  v76 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 464);
  v78 = *(_QWORD *)(v0 + 440);
  v77 = *(_QWORD *)(v0 + 448);
  v79 = *(_QWORD *)(v0 + 424);
  v80 = *(_QWORD *)(v0 + 432);
  v81 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(v81, v77);

  v76(v81, *MEMORY[0x24BECE110], v77);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);

LABEL_41:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241952234()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241952298()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  int v20;
  char v21;
  void *v22;
  objc_class *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t inited;
  void (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  id *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  int v42;
  id *v43;
  id v44;
  id *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  void (*v55)(uint64_t, _QWORD, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, _QWORD, _QWORD);

  v1 = *(void **)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v0 + 568) = v6;
  v6(v5, v3);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  *(_QWORD *)(v0 + 576) = v7;
  v7(v5, v2, v3);
  swift_task_dealloc();
  v8 = sub_2419A9E9C();
  v10 = v9;
  v11 = sub_2419A9EA8();
  sub_24195535C(v8, v10, v11, v12);
  if (!v1)
  {
    v69 = *(_QWORD *)(v0 + 528);
    v70 = *(_QWORD *)(v0 + 520);
    v71 = *(_QWORD *)(v0 + 544);
    v23 = *(objc_class **)(v0 + 504);
    v22 = *(void **)(v0 + 512);
    v72 = *(_QWORD *)(v0 + 408);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2419A9E9C();
    sub_2419A9EA8();
    swift_bridgeObjectRetain();
    sub_2419AA178();
    swift_bridgeObjectRetain();
    sub_2419AA178();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = objc_allocWithZone(v23);
    v25 = (void *)sub_2419A9E90();
    *(_QWORD *)(v0 + 584) = v25;

    v26 = swift_task_alloc();
    v27 = v25;
    sub_2419A9EA8();
    sub_2419AA178();
    v28 = objc_allocWithZone(MEMORY[0x24BEBA8F8]);
    v29 = (void *)sub_2419AA0DC();
    v30 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v29, 1, v30);

    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2419AB050;
    *(_QWORD *)(inited + 32) = 0xD00000000000001CLL;
    *(_QWORD *)(inited + 40) = 0x80000002419AFE40;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 48) = 60000;
    sub_24194D77C(inited);
    sub_2419A9E30();
    v32 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    *(_QWORD *)(v0 + 592) = v32;
    v32(v71, v70);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
    *(_QWORD *)(v0 + 600) = v33;
    v33(v71, v26, v70);
    swift_task_dealloc();
    v34 = swift_task_alloc();
    *(_QWORD *)(v0 + 608) = v34;
    v73 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(*(_QWORD *)v72 + 96)
                                                          + *(_QWORD *)(*(_QWORD *)v72 + 96));
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 616) = v35;
    *v35 = v0;
    v35[1] = sub_241952B48;
    return v73(v34, *(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 544));
  }
  v13 = (id *)(v0 + 384);
  v14 = *(void **)(v0 + 560);
  v15 = *(void **)(v0 + 512);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 528) + 8))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 520));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  *(_QWORD *)(v0 + 384) = v1;
  v16 = sub_2419A9E54();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = swift_task_alloc();
  v19 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v18, v16);
    if (MEMORY[0x24BECE0C0] && v20 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v21 = 3;
LABEL_31:
      v62 = *(_QWORD *)(v0 + 456);
      v61 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 464);
      v63 = *(_QWORD *)(v0 + 448);
      v64 = *(unsigned int *)(v0 + 696);
      v65 = *(_QWORD *)(v0 + 400);
      v66 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v67 = swift_allocError();
      *v68 = v21;
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v65, v63);
      *v66 = v67;
      v61(v66, v64, v63);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v62 + 32))(v65, v66, v63);
      swift_task_dealloc();
      goto LABEL_32;
    }
    if (MEMORY[0x24BECE0C8] && v20 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v21 = 4;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
  }
  v37 = (id *)(v0 + 376);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 376) = v1;
  v38 = sub_2419A9F74();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = swift_task_alloc();
  v41 = v1;
  if (swift_dynamicCast())
  {
    v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 88))(v40, v38);
    if (MEMORY[0x24BE2BB68] && v42 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v21 = 6;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB70] && v42 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v21 = 7;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB78] && v42 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v21 = 8;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
  }
  v43 = (id *)(v0 + 368);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 368) = v1;
  v44 = v1;
  if (swift_dynamicCast())
  {

    v21 = *(_BYTE *)(v0 + 700);
    goto LABEL_31;
  }
  v45 = (id *)(v0 + 336);

  *(_QWORD *)(v0 + 336) = v1;
  v46 = sub_2419A9E84();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = swift_task_alloc();
  v49 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v46);
    swift_task_dealloc();

    v21 = 2;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 344) = v1;
  v50 = sub_2419A9E48();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = swift_task_alloc();
  v53 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v50);
    swift_task_dealloc();

    v21 = 0;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 352) = v1;
  v54 = v1;
  if (!swift_dynamicCast())
  {

    v21 = 1;
    goto LABEL_31;
  }
  v55 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 464);
  v56 = *(_QWORD *)(v0 + 440);
  v57 = *(_QWORD *)(v0 + 448);
  v58 = *(_QWORD *)(v0 + 424);
  v59 = *(_QWORD *)(v0 + 432);
  v60 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(v60, v57);

  v55(v60, *MEMORY[0x24BECE110], v57);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v56, v58);

LABEL_32:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241952B48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241952BAC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  char v19;
  void *v20;
  objc_class *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t inited;
  uint64_t v30;
  _QWORD *v31;
  id *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  int v38;
  id *v39;
  id v40;
  id *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  void (*v51)(uint64_t, _QWORD, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t (*v70)(uint64_t, _QWORD, _QWORD);

  v1 = *(void **)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 576);
  v4 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(v0 + 568))(v5, v4);
  v3(v5, v2, v4);
  swift_task_dealloc();
  v6 = sub_2419A9E9C();
  v8 = v7;
  v9 = sub_2419A9EA8();
  sub_24195535C(v6, v8, v9, v10);
  if (!v1)
  {
    v67 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 600);
    v20 = *(void **)(v0 + 584);
    v65 = *(_QWORD *)(v0 + 520);
    v66 = *(_QWORD *)(v0 + 544);
    v21 = *(objc_class **)(v0 + 504);
    v69 = *(_QWORD *)(v0 + 408);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2419A9E9C();
    sub_2419A9EA8();
    swift_bridgeObjectRetain();
    sub_2419AA178();
    swift_bridgeObjectRetain();
    sub_2419AA178();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = objc_allocWithZone(v21);
    v23 = (void *)sub_2419A9E90();
    *(_QWORD *)(v0 + 632) = v23;

    v24 = swift_task_alloc();
    v25 = v23;
    sub_2419A9EA8();
    sub_2419AA178();
    v26 = objc_allocWithZone(MEMORY[0x24BEBA8F8]);
    v27 = (void *)sub_2419AA0DC();
    v28 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v27, 1, v28);

    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2419AB050;
    *(_QWORD *)(inited + 32) = 0xD00000000000001CLL;
    *(_QWORD *)(inited + 40) = 0x80000002419AFE40;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 48) = 60000;
    sub_24194D77C(inited);
    sub_2419A9E30();
    v67(v66, v65);
    v68(v66, v24, v65);
    swift_task_dealloc();
    v30 = swift_task_alloc();
    *(_QWORD *)(v0 + 640) = v30;
    v70 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(*(_QWORD *)v69 + 104)
                                                          + *(_QWORD *)(*(_QWORD *)v69 + 104));
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 648) = v31;
    *v31 = v0;
    v31[1] = sub_241953448;
    return v70(v30, *(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 544));
  }
  v11 = (id *)(v0 + 384);
  v12 = *(void **)(v0 + 584);
  v13 = *(void **)(v0 + 560);
  (*(void (**)(_QWORD, _QWORD))(v0 + 592))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 520));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  *(_QWORD *)(v0 + 384) = v1;
  v14 = sub_2419A9E54();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = swift_task_alloc();
  v17 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14);
    if (MEMORY[0x24BECE0C0] && v18 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v19 = 3;
LABEL_31:
      v58 = *(_QWORD *)(v0 + 456);
      v57 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 464);
      v59 = *(_QWORD *)(v0 + 448);
      v60 = *(unsigned int *)(v0 + 696);
      v61 = *(_QWORD *)(v0 + 400);
      v62 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v63 = swift_allocError();
      *v64 = v19;
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v61, v59);
      *v62 = v63;
      v57(v62, v60, v59);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v58 + 32))(v61, v62, v59);
      swift_task_dealloc();
      goto LABEL_32;
    }
    if (MEMORY[0x24BECE0C8] && v18 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v19 = 4;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  v33 = (id *)(v0 + 376);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 376) = v1;
  v34 = sub_2419A9F74();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = swift_task_alloc();
  v37 = v1;
  if (swift_dynamicCast())
  {
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 88))(v36, v34);
    if (MEMORY[0x24BE2BB68] && v38 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v19 = 6;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB70] && v38 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v19 = 7;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB78] && v38 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v19 = 8;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
  }
  v39 = (id *)(v0 + 368);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 368) = v1;
  v40 = v1;
  if (swift_dynamicCast())
  {

    v19 = *(_BYTE *)(v0 + 700);
    goto LABEL_31;
  }
  v41 = (id *)(v0 + 336);

  *(_QWORD *)(v0 + 336) = v1;
  v42 = sub_2419A9E84();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = swift_task_alloc();
  v45 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
    swift_task_dealloc();

    v19 = 2;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 344) = v1;
  v46 = sub_2419A9E48();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = swift_task_alloc();
  v49 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v46);
    swift_task_dealloc();

    v19 = 0;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 352) = v1;
  v50 = v1;
  if (!swift_dynamicCast())
  {

    v19 = 1;
    goto LABEL_31;
  }
  v51 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 464);
  v52 = *(_QWORD *)(v0 + 440);
  v53 = *(_QWORD *)(v0 + 448);
  v54 = *(_QWORD *)(v0 + 424);
  v55 = *(_QWORD *)(v0 + 432);
  v56 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(v56, v53);

  v51(v56, *MEMORY[0x24BECE110], v53);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v52, v54);

LABEL_32:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241953448()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 656) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2419534AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  char v19;
  void *v20;
  objc_class *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t inited;
  uint64_t v30;
  _QWORD *v31;
  id *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  int v38;
  id *v39;
  id v40;
  id *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  void (*v51)(uint64_t, _QWORD, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t (*v70)(uint64_t, _QWORD, _QWORD);

  v1 = *(void **)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 640);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 576);
  v4 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(v0 + 568))(v5, v4);
  v3(v5, v2, v4);
  swift_task_dealloc();
  v6 = sub_2419A9E9C();
  v8 = v7;
  v9 = sub_2419A9EA8();
  sub_24195535C(v6, v8, v9, v10);
  if (!v1)
  {
    v20 = *(void **)(v0 + 632);
    v67 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 600);
    v65 = *(_QWORD *)(v0 + 520);
    v66 = *(_QWORD *)(v0 + 544);
    v21 = *(objc_class **)(v0 + 504);
    v69 = *(_QWORD *)(v0 + 408);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2419A9E9C();
    sub_2419A9EA8();
    swift_bridgeObjectRetain();
    sub_2419AA178();
    swift_bridgeObjectRetain();
    sub_2419AA178();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = objc_allocWithZone(v21);
    v23 = (void *)sub_2419A9E90();
    *(_QWORD *)(v0 + 664) = v23;

    v24 = swift_task_alloc();
    v25 = v23;
    sub_2419A9EA8();
    sub_2419AA178();
    v26 = objc_allocWithZone(MEMORY[0x24BEBA8F8]);
    v27 = (void *)sub_2419AA0DC();
    v28 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v27, 1, v28);

    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2419AB050;
    *(_QWORD *)(inited + 32) = 0xD00000000000001CLL;
    *(_QWORD *)(inited + 40) = 0x80000002419AFE40;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 48) = 60000;
    sub_24194D77C(inited);
    sub_2419A9E30();
    v67(v66, v65);
    v68(v66, v24, v65);
    swift_task_dealloc();
    v30 = swift_task_alloc();
    *(_QWORD *)(v0 + 672) = v30;
    v70 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(*(_QWORD *)v69 + 112)
                                                          + *(_QWORD *)(*(_QWORD *)v69 + 112));
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 680) = v31;
    *v31 = v0;
    v31[1] = sub_241953D50;
    return v70(v30, *(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 544));
  }
  v11 = (id *)(v0 + 384);
  v12 = *(void **)(v0 + 632);
  v13 = *(void **)(v0 + 560);
  (*(void (**)(_QWORD, _QWORD))(v0 + 592))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 520));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  *(_QWORD *)(v0 + 384) = v1;
  v14 = sub_2419A9E54();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = swift_task_alloc();
  v17 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14);
    if (MEMORY[0x24BECE0C0] && v18 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v19 = 3;
LABEL_31:
      v58 = *(_QWORD *)(v0 + 456);
      v57 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 464);
      v59 = *(_QWORD *)(v0 + 448);
      v60 = *(unsigned int *)(v0 + 696);
      v61 = *(_QWORD *)(v0 + 400);
      v62 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v63 = swift_allocError();
      *v64 = v19;
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v61, v59);
      *v62 = v63;
      v57(v62, v60, v59);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v58 + 32))(v61, v62, v59);
      swift_task_dealloc();
      goto LABEL_32;
    }
    if (MEMORY[0x24BECE0C8] && v18 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v19 = 4;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  v33 = (id *)(v0 + 376);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 376) = v1;
  v34 = sub_2419A9F74();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = swift_task_alloc();
  v37 = v1;
  if (swift_dynamicCast())
  {
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 88))(v36, v34);
    if (MEMORY[0x24BE2BB68] && v38 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v19 = 6;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB70] && v38 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v19 = 7;
      goto LABEL_31;
    }
    if (MEMORY[0x24BE2BB78] && v38 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v19 = 8;
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
  }
  v39 = (id *)(v0 + 368);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 368) = v1;
  v40 = v1;
  if (swift_dynamicCast())
  {

    v19 = *(_BYTE *)(v0 + 700);
    goto LABEL_31;
  }
  v41 = (id *)(v0 + 336);

  *(_QWORD *)(v0 + 336) = v1;
  v42 = sub_2419A9E84();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = swift_task_alloc();
  v45 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
    swift_task_dealloc();

    v19 = 2;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 344) = v1;
  v46 = sub_2419A9E48();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = swift_task_alloc();
  v49 = v1;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v46);
    swift_task_dealloc();

    v19 = 0;
    goto LABEL_31;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 352) = v1;
  v50 = v1;
  if (!swift_dynamicCast())
  {

    v19 = 1;
    goto LABEL_31;
  }
  v51 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 464);
  v52 = *(_QWORD *)(v0 + 440);
  v53 = *(_QWORD *)(v0 + 448);
  v54 = *(_QWORD *)(v0 + 424);
  v55 = *(_QWORD *)(v0 + 432);
  v56 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(v56, v53);

  v51(v56, *MEMORY[0x24BECE110], v53);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v52, v54);

LABEL_32:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241953D50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 688) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241953DB4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t);
  void (*v4)(uint64_t, uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 672);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 576);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  v5 = *(void **)(v0 + 560);
  v6 = *(_QWORD *)(v0 + 544);
  v7 = *(_QWORD *)(v0 + 520);
  v8 = *(_QWORD *)(v0 + 448);
  v9 = *(_QWORD *)(v0 + 400);

  v2(v6, v7);
  v4(v9, v8);
  v3(v9, v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241953E70()
{
  uint64_t v0;
  id *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  int v11;
  char v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  id *v19;
  id v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void (*v31)(uint64_t, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;

  v1 = (id *)(v0 + 384);
  v2 = *(void **)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 544);
  v4 = *(_QWORD *)(v0 + 528);
  v5 = *(_QWORD *)(v0 + 520);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(id *)(v0 + 496);
  *(_QWORD *)(v0 + 384) = v6;
  v7 = sub_2419A9E54();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = swift_task_alloc();
  v10 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v9, v7);
    if (MEMORY[0x24BECE0C0] && v11 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v6 = *v1;
      v12 = 3;
LABEL_29:

      v38 = *(_QWORD *)(v0 + 456);
      v37 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 464);
      v39 = *(_QWORD *)(v0 + 448);
      v40 = *(unsigned int *)(v0 + 696);
      v41 = *(_QWORD *)(v0 + 400);
      v42 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v43 = swift_allocError();
      *v44 = v12;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v39);
      *v42 = v43;
      v37(v42, v40, v39);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v38 + 32))(v41, v42, v39);
      swift_task_dealloc();
      goto LABEL_30;
    }
    if (MEMORY[0x24BECE0C8] && v11 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v6 = *v1;
      v12 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  }
  v13 = (id *)(v0 + 376);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 376) = v6;
  v14 = sub_2419A9F74();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = swift_task_alloc();
  v17 = v6;
  if (swift_dynamicCast())
  {
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14);
    if (MEMORY[0x24BE2BB68] && v18 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB70] && v18 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB78] && v18 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  v19 = (id *)(v0 + 368);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 368) = v6;
  v20 = v6;
  if (swift_dynamicCast())
  {

    v12 = *(_BYTE *)(v0 + 700);
    v6 = *v19;
    goto LABEL_29;
  }
  v21 = (id *)(v0 + 336);

  *(_QWORD *)(v0 + 336) = v6;
  v22 = sub_2419A9E84();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = swift_task_alloc();
  v25 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
    swift_task_dealloc();
    v6 = *v21;
    v12 = 2;
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 344) = v6;
  v26 = sub_2419A9E48();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = swift_task_alloc();
  v29 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
    swift_task_dealloc();
    v12 = 0;
    v6 = *(id *)(v0 + 344);
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 352) = v6;
  v30 = v6;
  if (!swift_dynamicCast())
  {

    v12 = 1;
    goto LABEL_29;
  }
  v31 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 464);
  v33 = *(_QWORD *)(v0 + 440);
  v32 = *(_QWORD *)(v0 + 448);
  v34 = *(_QWORD *)(v0 + 424);
  v35 = *(_QWORD *)(v0 + 432);
  v36 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(v36, v32);

  v31(v36, *MEMORY[0x24BECE110], v32);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);

LABEL_30:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419543A8()
{
  uint64_t v0;
  id *v1;
  void (*v2)(uint64_t, uint64_t);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  int v11;
  char v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  id *v19;
  id v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void (*v31)(uint64_t, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;

  v1 = (id *)(v0 + 384);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
  v3 = *(void **)(v0 + 560);
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 520);

  v2(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(id *)(v0 + 624);
  *(_QWORD *)(v0 + 384) = v6;
  v7 = sub_2419A9E54();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = swift_task_alloc();
  v10 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v9, v7);
    if (MEMORY[0x24BECE0C0] && v11 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v6 = *v1;
      v12 = 3;
LABEL_29:

      v38 = *(_QWORD *)(v0 + 456);
      v37 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 464);
      v39 = *(_QWORD *)(v0 + 448);
      v40 = *(unsigned int *)(v0 + 696);
      v41 = *(_QWORD *)(v0 + 400);
      v42 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v43 = swift_allocError();
      *v44 = v12;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v39);
      *v42 = v43;
      v37(v42, v40, v39);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v38 + 32))(v41, v42, v39);
      swift_task_dealloc();
      goto LABEL_30;
    }
    if (MEMORY[0x24BECE0C8] && v11 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v6 = *v1;
      v12 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  }
  v13 = (id *)(v0 + 376);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 376) = v6;
  v14 = sub_2419A9F74();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = swift_task_alloc();
  v17 = v6;
  if (swift_dynamicCast())
  {
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14);
    if (MEMORY[0x24BE2BB68] && v18 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB70] && v18 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB78] && v18 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  v19 = (id *)(v0 + 368);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 368) = v6;
  v20 = v6;
  if (swift_dynamicCast())
  {

    v12 = *(_BYTE *)(v0 + 700);
    v6 = *v19;
    goto LABEL_29;
  }
  v21 = (id *)(v0 + 336);

  *(_QWORD *)(v0 + 336) = v6;
  v22 = sub_2419A9E84();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = swift_task_alloc();
  v25 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
    swift_task_dealloc();
    v6 = *v21;
    v12 = 2;
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 344) = v6;
  v26 = sub_2419A9E48();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = swift_task_alloc();
  v29 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
    swift_task_dealloc();
    v12 = 0;
    v6 = *(id *)(v0 + 344);
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 352) = v6;
  v30 = v6;
  if (!swift_dynamicCast())
  {

    v12 = 1;
    goto LABEL_29;
  }
  v31 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 464);
  v33 = *(_QWORD *)(v0 + 440);
  v32 = *(_QWORD *)(v0 + 448);
  v34 = *(_QWORD *)(v0 + 424);
  v35 = *(_QWORD *)(v0 + 432);
  v36 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(v36, v32);

  v31(v36, *MEMORY[0x24BECE110], v32);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);

LABEL_30:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419548DC()
{
  uint64_t v0;
  id *v1;
  void (*v2)(uint64_t, uint64_t);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  int v11;
  char v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  id *v19;
  id v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void (*v31)(uint64_t, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;

  v1 = (id *)(v0 + 384);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
  v3 = *(void **)(v0 + 560);
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 520);

  v2(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(id *)(v0 + 656);
  *(_QWORD *)(v0 + 384) = v6;
  v7 = sub_2419A9E54();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = swift_task_alloc();
  v10 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v9, v7);
    if (MEMORY[0x24BECE0C0] && v11 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v6 = *v1;
      v12 = 3;
LABEL_29:

      v38 = *(_QWORD *)(v0 + 456);
      v37 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 464);
      v39 = *(_QWORD *)(v0 + 448);
      v40 = *(unsigned int *)(v0 + 696);
      v41 = *(_QWORD *)(v0 + 400);
      v42 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v43 = swift_allocError();
      *v44 = v12;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v39);
      *v42 = v43;
      v37(v42, v40, v39);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v38 + 32))(v41, v42, v39);
      swift_task_dealloc();
      goto LABEL_30;
    }
    if (MEMORY[0x24BECE0C8] && v11 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v6 = *v1;
      v12 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  }
  v13 = (id *)(v0 + 376);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 376) = v6;
  v14 = sub_2419A9F74();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = swift_task_alloc();
  v17 = v6;
  if (swift_dynamicCast())
  {
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14);
    if (MEMORY[0x24BE2BB68] && v18 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB70] && v18 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB78] && v18 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  v19 = (id *)(v0 + 368);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 368) = v6;
  v20 = v6;
  if (swift_dynamicCast())
  {

    v12 = *(_BYTE *)(v0 + 700);
    v6 = *v19;
    goto LABEL_29;
  }
  v21 = (id *)(v0 + 336);

  *(_QWORD *)(v0 + 336) = v6;
  v22 = sub_2419A9E84();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = swift_task_alloc();
  v25 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
    swift_task_dealloc();
    v6 = *v21;
    v12 = 2;
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 344) = v6;
  v26 = sub_2419A9E48();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = swift_task_alloc();
  v29 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
    swift_task_dealloc();
    v12 = 0;
    v6 = *(id *)(v0 + 344);
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 352) = v6;
  v30 = v6;
  if (!swift_dynamicCast())
  {

    v12 = 1;
    goto LABEL_29;
  }
  v31 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 464);
  v33 = *(_QWORD *)(v0 + 440);
  v32 = *(_QWORD *)(v0 + 448);
  v34 = *(_QWORD *)(v0 + 424);
  v35 = *(_QWORD *)(v0 + 432);
  v36 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(v36, v32);

  v31(v36, *MEMORY[0x24BECE110], v32);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);

LABEL_30:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241954E10()
{
  uint64_t v0;
  id *v1;
  void (*v2)(uint64_t, uint64_t);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  int v11;
  char v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  id *v19;
  id v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void (*v31)(uint64_t, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;

  v1 = (id *)(v0 + 384);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
  v3 = *(void **)(v0 + 560);
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 520);

  v2(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(id *)(v0 + 688);
  *(_QWORD *)(v0 + 384) = v6;
  v7 = sub_2419A9E54();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = swift_task_alloc();
  v10 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v9, v7);
    if (MEMORY[0x24BECE0C0] && v11 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v6 = *v1;
      v12 = 3;
LABEL_29:

      v38 = *(_QWORD *)(v0 + 456);
      v37 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 464);
      v39 = *(_QWORD *)(v0 + 448);
      v40 = *(unsigned int *)(v0 + 696);
      v41 = *(_QWORD *)(v0 + 400);
      v42 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v43 = swift_allocError();
      *v44 = v12;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v39);
      *v42 = v43;
      v37(v42, v40, v39);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v38 + 32))(v41, v42, v39);
      swift_task_dealloc();
      goto LABEL_30;
    }
    if (MEMORY[0x24BECE0C8] && v11 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v6 = *v1;
      v12 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  }
  v13 = (id *)(v0 + 376);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 376) = v6;
  v14 = sub_2419A9F74();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = swift_task_alloc();
  v17 = v6;
  if (swift_dynamicCast())
  {
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14);
    if (MEMORY[0x24BE2BB68] && v18 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB70] && v18 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB78] && v18 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v6 = *v13;
      v12 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  v19 = (id *)(v0 + 368);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 368) = v6;
  v20 = v6;
  if (swift_dynamicCast())
  {

    v12 = *(_BYTE *)(v0 + 700);
    v6 = *v19;
    goto LABEL_29;
  }
  v21 = (id *)(v0 + 336);

  *(_QWORD *)(v0 + 336) = v6;
  v22 = sub_2419A9E84();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = swift_task_alloc();
  v25 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
    swift_task_dealloc();
    v6 = *v21;
    v12 = 2;
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 344) = v6;
  v26 = sub_2419A9E48();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = swift_task_alloc();
  v29 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
    swift_task_dealloc();
    v12 = 0;
    v6 = *(id *)(v0 + 344);
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 352) = v6;
  v30 = v6;
  if (!swift_dynamicCast())
  {

    v12 = 1;
    goto LABEL_29;
  }
  v31 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 464);
  v33 = *(_QWORD *)(v0 + 440);
  v32 = *(_QWORD *)(v0 + 448);
  v34 = *(_QWORD *)(v0 + 424);
  v35 = *(_QWORD *)(v0 + 432);
  v36 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(v36, v32);

  v31(v36, *MEMORY[0x24BECE110], v32);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);

LABEL_30:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_24195535C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_2419AA208();
  if ((result & 1) != 0)
  {
    if (qword_257162A70 != -1)
      swift_once();
    v9 = sub_2419AA040();
    __swift_project_value_buffer(v9, (uint64_t)qword_257163CF8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v10 = sub_2419AA028();
    v11 = sub_2419AA22C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v14 = v13;
      *(_DWORD *)v12 = 136315394;
      swift_bridgeObjectRetain();
      sub_24193F470(a1, a2, &v14);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_24193F470(a3, a4, &v14);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24193B000, v10, v11, "TaskId: %s, TaskName: %s: asked to stop!", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v13, -1, -1);
      MEMORY[0x24269F7A0](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_2419AA1FC();
    sub_241956B88();
    swift_allocError();
    sub_2419AA04C();
    return swift_willThrow();
  }
  return result;
}

uint64_t MetricsExecutor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MetricsExecutor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2419555C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_2419AA040();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241955628()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163978);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  v3 = qword_257162A70;
  v4 = v1;
  if (v3 == -1)
  {
    v5 = v4;
  }
  else
  {
    swift_once();
    v5 = *(void **)(v0 + 32);
  }
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_257163CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  type metadata accessor for SiriDigestMetrics();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = SiriDigestMetrics.init(defaults:logger:)(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163D28);
  swift_allocObject();
  v10 = sub_2419A9E6C();
  *(_QWORD *)(v0 + 80) = v10;
  if (v10)
  {
    v11 = *(_QWORD *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163988);
    v12 = swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v12;
    v13 = sub_2419A9E3C();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v15;
    *v15 = v0;
    v15[1] = sub_2419558A0;
    return sub_2419A9E60();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 24);
    v18 = sub_2419A9E78();
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v2, 1, 1, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v17, *MEMORY[0x24BECE0F8], v18);
    sub_241941720(v2, &qword_257163978);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2419558A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc();
  sub_241941720(*(_QWORD *)(v2 + 88), (uint64_t *)&unk_257163988);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241955930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = sub_2419A9E78();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419559B8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419559FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_2419AA040();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241955A60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163978);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  v3 = qword_257162A70;
  v4 = v1;
  if (v3 == -1)
  {
    v5 = v4;
  }
  else
  {
    swift_once();
    v5 = *(void **)(v0 + 32);
  }
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_257163CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  type metadata accessor for SiriSegmentCohortMetrics();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = SiriSegmentCohortMetrics.init(defaults:logger:)(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163D38);
  swift_allocObject();
  v10 = sub_2419A9E6C();
  *(_QWORD *)(v0 + 80) = v10;
  if (v10)
  {
    v11 = *(_QWORD *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163988);
    v12 = swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v12;
    v13 = sub_2419A9E3C();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v15;
    *v15 = v0;
    v15[1] = sub_241955CD8;
    return sub_2419A9E60();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 24);
    v18 = sub_2419A9E78();
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v2, 1, 1, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v17, *MEMORY[0x24BECE0F8], v18);
    sub_241941720(v2, &qword_257163978);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_241955CD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc();
  sub_241941720(*(_QWORD *)(v2 + 88), (uint64_t *)&unk_257163988);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241955D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_2419AA040();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241955DCC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = qword_257162A70;
  v2 = *(id *)(v0 + 32);
  if (v1 == -1)
  {
    v3 = v2;
  }
  else
  {
    swift_once();
    v3 = *(void **)(v0 + 32);
  }
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_257163CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  type metadata accessor for SiriBootToAssetMetrics();
  swift_allocObject();
  v8 = SiriBootToAssetMetrics.init(defaults:logger:)(v3, v4);
  *(_QWORD *)(v0 + 72) = v8;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163978);
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v10;
  *(_QWORD *)(v0 + 16) = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163D48);
  swift_allocObject();
  swift_retain();
  v11 = sub_2419A9E6C();
  *(_QWORD *)(v0 + 88) = v11;
  if (v11)
  {
    v12 = *(_QWORD *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163988);
    v13 = swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v13;
    v14 = sub_2419A9E3C();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v16;
    *v16 = v0;
    v16[1] = sub_24195605C;
    return sub_2419A9E60();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 24);
    swift_release();
    v19 = sub_2419A9E78();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v10, 1, 1, v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v18, *MEMORY[0x24BECE0F8], v19);
    sub_241941720(v10, &qword_257163978);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24195605C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  sub_241941720(*(_QWORD *)(v2 + 96), (uint64_t *)&unk_257163988);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2419560EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = sub_2419A9E78();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24195617C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419561CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_2419AA040();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241956230()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = qword_257162A70;
  v2 = *(id *)(v0 + 32);
  if (v1 == -1)
  {
    v3 = v2;
  }
  else
  {
    swift_once();
    v3 = *(void **)(v0 + 32);
  }
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_257163CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  type metadata accessor for RequestWithNoAssetMetrics();
  swift_allocObject();
  v8 = RequestWithNoAssetMetrics.init(defaults:logger:)(v3, v4);
  *(_QWORD *)(v0 + 72) = v8;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163978);
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v10;
  *(_QWORD *)(v0 + 16) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163D58);
  swift_allocObject();
  swift_retain();
  v11 = sub_2419A9E6C();
  *(_QWORD *)(v0 + 88) = v11;
  if (v11)
  {
    v12 = *(_QWORD *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163988);
    v13 = swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v13;
    v14 = sub_2419A9E3C();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v16;
    *v16 = v0;
    v16[1] = sub_2419564C0;
    return sub_2419A9E60();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 24);
    swift_release();
    v19 = sub_2419A9E78();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v10, 1, 1, v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v18, *MEMORY[0x24BECE0F8], v19);
    sub_241941720(v10, &qword_257163978);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2419564C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  sub_241941720(*(_QWORD *)(v2 + 96), (uint64_t *)&unk_257163988);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t MetricsExecutor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MetricsExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_24195656C()
{
  unint64_t result;

  result = qword_257163D60;
  if (!qword_257163D60)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriMetricsWorkerError, &type metadata for SiriMetricsWorkerError);
    atomic_store(result, (unint64_t *)&qword_257163D60);
  }
  return result;
}

unint64_t sub_2419565B8()
{
  unint64_t result;

  result = qword_257163D68;
  if (!qword_257163D68)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriMetricsWorkerError, &type metadata for SiriMetricsWorkerError);
    atomic_store(result, (unint64_t *)&qword_257163D68);
  }
  return result;
}

unint64_t sub_241956600()
{
  unint64_t result;

  result = qword_257163D70;
  if (!qword_257163D70)
  {
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257163D70);
  }
  return result;
}

unint64_t sub_241956648()
{
  unint64_t result;

  result = qword_257163D78;
  if (!qword_257163D78)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for MetricsWorker.Subtask, &type metadata for MetricsWorker.Subtask);
    atomic_store(result, (unint64_t *)&qword_257163D78);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SiriMetricsWorkerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriMetricsWorkerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_241956768 + 4 * byte_2419ABF9F[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_24195679C + 4 * byte_2419ABF9A[v4]))();
}

uint64_t sub_24195679C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2419567A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2419567ACLL);
  return result;
}

uint64_t sub_2419567B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2419567C0);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_2419567C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2419567CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriMetricsWorkerError()
{
  return &type metadata for SiriMetricsWorkerError;
}

ValueMetadata *type metadata accessor for MetricsWorker()
{
  return &type metadata for MetricsWorker;
}

uint64_t getEnumTagSinglePayload for MetricsWorker.Subtask(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsWorker.Subtask(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2419568D4 + 4 * byte_2419ABFA9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_241956908 + 4 * byte_2419ABFA4[v4]))();
}

uint64_t sub_241956908(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241956910(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241956918);
  return result;
}

uint64_t sub_241956924(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24195692CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_241956930(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241956938(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsWorker.Subtask()
{
  return &type metadata for MetricsWorker.Subtask;
}

uint64_t type metadata accessor for MetricsExecutor()
{
  return objc_opt_self();
}

uint64_t method lookup function for MetricsExecutor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MetricsExecutor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of MetricsExecutor.executeSiriDigestMetrics(defaults:pluginContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 88)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 88));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_2419470D8;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MetricsExecutor.executeSiriSegmentCohortMetrics(defaults:pluginContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 96)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 96));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_2419470D8;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MetricsExecutor.executeDownloadMetrics(defaults:pluginContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 104)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 104));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_24193D468;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MetricsExecutor.executeRequestWithNoAssetMetrics(defaults:pluginContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 112)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 112));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_2419470D8;
  return v10(a1, a2, a3);
}

unint64_t sub_241956B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257163B20;
  if (!qword_257163B20)
  {
    v1 = sub_2419AA1FC();
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE6848], v1);
    atomic_store(result, &qword_257163B20);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_241956C20(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t SiriDeviceExperimentMetricsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  swift_allocObject();
  v8 = sub_24195BCC4(a1, a2, a3, a4);
  swift_release();
  return v8;
}

id sub_241956C98(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_241943088(0, &qword_257163FD0);
    v4 = (void *)sub_2419AA058();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t SiriDeviceExperimentMetricsResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDeviceExperimentMetricsResults.eventStreamMetadata.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SiriDeviceExperimentMetricsResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriDeviceExperimentMetricsResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDeviceExperimentMetricsResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SiriDeviceExperimentMetricsResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriDeviceExperimentMetricsResults.deviceExperimentMetrics.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDeviceExperimentMetricsResults.deviceExperimentMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SiriDeviceExperimentMetricsResults.deviceExperimentMetrics.modify())()
{
  return nullsub_1;
}

uint64_t SiriDeviceExperimentMetricsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = sub_24195BCC4(a1, a2, a3, a4);
  swift_release();
  return v4;
}

uint64_t sub_241956E0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[346] = v1;
  v2[345] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v2[347] = swift_task_alloc();
  v2[348] = swift_task_alloc();
  type metadata accessor for DeviceExperimentMetrics(0);
  v2[349] = swift_task_alloc();
  v2[350] = swift_task_alloc();
  v3 = type metadata accessor for EventMetadata(0);
  v2[351] = v3;
  v2[352] = *(_QWORD *)(v3 - 8);
  v2[353] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v2[354] = swift_task_alloc();
  v2[355] = swift_task_alloc();
  v2[356] = swift_task_alloc();
  v2[357] = swift_task_alloc();
  v2[358] = swift_task_alloc();
  v2[359] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v2[360] = swift_task_alloc();
  v4 = sub_2419A9CE0();
  v2[361] = v4;
  v2[362] = *(_QWORD *)(v4 - 8);
  v2[363] = swift_task_alloc();
  v2[364] = swift_task_alloc();
  v2[365] = swift_task_alloc();
  v2[366] = swift_task_alloc();
  v2[367] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  v2[368] = swift_task_alloc();
  v2[369] = swift_task_alloc();
  v5 = sub_2419A9FBC();
  v2[370] = v5;
  v2[371] = *(_QWORD *)(v5 - 8);
  v2[372] = swift_task_alloc();
  v2[373] = swift_task_alloc();
  v6 = sub_2419A9FE0();
  v2[374] = v6;
  v2[375] = *(_QWORD *)(v6 - 8);
  v2[376] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24195704C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t);
  uint8_t *v7;
  os_signpost_id_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  os_log_type_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  void *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void *v58;
  _OWORD *v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  void *v71;
  unsigned __int8 v72;
  double v73;
  double v74;
  _OWORD *v75;
  _OWORD *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  void *v82;
  id v83;
  _OWORD *v84;
  uint64_t v85;
  int v86;
  void *v87;
  id v88;
  uint64_t v89;
  int v90;
  void *v91;
  id v92;
  uint64_t v93;
  int v94;
  id v95;
  id v96;
  void *v97;
  id v98;
  uint64_t v99;
  int v100;
  void *v101;
  id v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  void *v125;
  void (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  char v136;
  int v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  int *v147;
  NSObject *v148;
  os_log_type_t v149;
  uint8_t *v150;
  id v151;
  unsigned int v152;
  NSObject *v153;
  int v154;
  uint8_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  double v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  int v201;
  char v202;
  int v203;
  int v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(uint64_t, uint64_t);
  NSObject *v221;
  os_log_type_t v222;
  uint64_t v223;
  uint8_t *v224;
  uint8_t *v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  id v229;
  id v230;
  NSObject *v231;
  os_log_type_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  os_log_type_t v239;
  uint8_t *v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  void (*v253)(uint64_t, uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  void (*v261)(uint64_t, uint64_t);
  __int128 v262;
  unsigned int *v263;
  uint64_t *v264;
  _OWORD *v265;
  uint64_t v266;
  void *aBlock;
  double *v268;
  void *v269;
  id v270;
  uint64_t v271;
  _OWORD *v272;
  uint64_t v273;
  int *v274;
  int *v275;
  uint64_t *v276;
  uint64_t *v277;
  uint64_t *v278;
  _DWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  uint64_t v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  int *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _OWORD *v308;
  uint64_t v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t *v324;
  _OWORD *v325;
  _OWORD *v326;
  uint64_t v327;
  uint64_t v328;
  id v329;
  _OWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t v337;
  uint64_t v338;
  void *v339;
  uint64_t v340;
  char v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  int v347;
  uint64_t v348;
  char v349;
  uint64_t v350;
  uint64_t v351;
  unsigned __int8 v352;
  uint64_t v353;
  unsigned __int8 v354;
  uint64_t v355;
  unsigned __int8 v356;
  uint64_t v357;
  uint64_t v358;
  unsigned __int8 v359;
  os_log_type_t v360;
  uint64_t v361;
  BOOL v362;
  NSObject *v363;
  uint64_t v364;
  id v365;
  uint64_t v366;
  _OWORD *v367;
  id v368;
  id v369;
  NSObject *v370;
  uint64_t v371;
  uint64_t v372;
  __int128 v373;
  __int128 v374;
  char v375;

  sub_2419A9FD4();
  sub_2419A9FC8();
  sub_2419A9FA4();
  v1 = sub_2419A9FC8();
  v2 = sub_2419AA268();
  if ((sub_2419AA2B0() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 2976);
    v4 = *(_QWORD *)(v0 + 2968);
    v5 = *(_QWORD *)(v0 + 2960);
    v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16);
    v6(v3, *(_QWORD *)(v0 + 2984), v5);
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    v8 = sub_2419A9FB0();
    _os_signpost_emit_with_name_impl(&dword_24193B000, v1, v2, v8, "SiriDeviceExperimentMetricsCalculatorSP", "", v7, 2u);
    MEMORY[0x24269F7A0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 2968);

    v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16);
  }
  v6(*(_QWORD *)(v0 + 2976), *(_QWORD *)(v0 + 2984), *(_QWORD *)(v0 + 2960));
  sub_2419AA010();
  swift_allocObject();
  sub_2419AA004();
  v10 = sub_2419AA028();
  v11 = sub_2419AA238();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_24193B000, v10, v11, "SQL calculator invoked: SiriDeviceExperimentMetricsCalculator", v12, 2u);
    MEMORY[0x24269F7A0](v12, -1, -1);
  }
  v13 = *(_QWORD *)(v0 + 2768);

  v14 = *(void **)(v13 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_defaults);
  v15 = (void *)sub_2419AA0DC();
  v329 = v14;
  LODWORD(v14) = objc_msgSend(v14, sel_BOOLForKey_, v15);

  v16 = sub_2419AA028();
  v17 = sub_2419AA238();
  v18 = os_log_type_enabled(v16, v17);
  if ((_DWORD)v14)
  {
    if (v18)
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      v20 = v17;
      v21 = "SiriDeviceExperimentMetricsCalculator: Include current date data for aggregation.";
LABEL_11:
      _os_log_impl(&dword_24193B000, v16, v20, v21, v19, 2u);
      MEMORY[0x24269F7A0](v19, -1, -1);
    }
  }
  else if (v18)
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    v20 = v17;
    v21 = "SiriDeviceExperimentMetricsCalculator: current date data NOT included for aggregation.";
    goto LABEL_11;
  }
  v22 = *(_QWORD *)(v0 + 2952);
  v23 = *(_QWORD *)(v0 + 2768);

  v24 = v23 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlFileURL;
  sub_2419416DC(v24, v22, &qword_257162CF0);
  v25 = sub_2419A9C14();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v22, 1, v25);
  sub_241941720(v22, &qword_257162CF0);
  if (v28 == 1)
  {
    v29 = *(_QWORD *)(v0 + 3008);
    sub_24193F23C();
    swift_allocError();
    *v30 = 9;
    swift_willThrow();
    goto LABEL_19;
  }
  v31 = *(_QWORD *)(v0 + 2944);
  sub_2419416DC(v24, v31, &qword_257162CF0);
  result = v27(v31, 1, v25);
  if ((_DWORD)result == 1)
    goto LABEL_268;
  v33 = *(_QWORD *)(v0 + 2944);
  v34 = sub_2419AA0D0();
  v36 = v35;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v33, v25);
  swift_bridgeObjectRetain_n();
  v37 = sub_2419AA028();
  v38 = sub_2419AA238();
  v371 = v0;
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v372 = v40;
    *(_DWORD *)v39 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 2696) = sub_24193F470(v34, v36, &v372);
    sub_2419AA2EC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24193B000, v37, v38, "SQL: %s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v40, -1, -1);
    MEMORY[0x24269F7A0](v39, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v45 = (void *)sub_2419A9DE8();
  v324 = (uint64_t *)(v0 + 2720);
  v268 = (double *)(v0 + 2736);
  sub_2419A9EE4();
  v270 = v45;
  v269 = (void *)sub_2419A9ECC();
  sub_2419A9ED8();
  swift_bridgeObjectRelease();
  sub_2419A9D94();
  sub_2419A9C5C();
  v46 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 2720) = MEMORY[0x24BEE4AF8];
  v47 = sub_2419A9EFC();
  if ((v47 & 1) == 0)
  {
    v51 = 0;
    v327 = 0;
    v328 = 0;
LABEL_252:
    swift_bridgeObjectRetain();
    v221 = sub_2419AA028();
    v222 = sub_2419AA238();
    if (os_log_type_enabled(v221, v222))
    {
      v223 = v51;
      v224 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v224 = 134217984;
      *(_QWORD *)(v0 + 2728) = *(_QWORD *)(v46 + 16);
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24193B000, v221, v222, "SiriDeviceExperimentMetricsCalculator query yielded %ld results", v224, 0xCu);
      v225 = v224;
      v51 = v223;
      MEMORY[0x24269F7A0](v225, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    sub_24195ADB0(v328, 0xD000000000000017, 0x80000002419B1140);
    sub_24195ADB0(v327, 0xD000000000000015, 0x80000002419B1160);
    sub_24195ADB0(v51, 0xD00000000000001CLL, 0x80000002419B1180);
    v226 = sub_2419A9F08();
    if (!v226)
    {
      v244 = *(_QWORD *)(v0 + 3008);
      v343 = *(_QWORD *)(v0 + 3000);
      v346 = *(_QWORD *)(v0 + 2992);
      v340 = *(_QWORD *)(v0 + 2984);
      v336 = *(_QWORD *)(v0 + 2968);
      v338 = *(_QWORD *)(v0 + 2960);
      v333 = *(_QWORD *)(v0 + 2936);
      v331 = *(_QWORD *)(v0 + 2928);
      v245 = *(_QWORD *)(v0 + 2912);
      v246 = *(_QWORD *)(v0 + 2896);
      v247 = *(_QWORD *)(v0 + 2888);
      v248 = *(uint64_t **)(v0 + 2760);
      sub_2419A9F20();

      __swift_instantiateConcreteTypeFromMangledName(&qword_257163E90);
      v249 = swift_allocObject();
      v250 = sub_24193F2EC(v249, 1);
      *v251 = 20;
      nullsub_1(v250);
      sub_2419A9DD0();
      v252 = sub_2419A9DA0();
      swift_bridgeObjectRelease();
      v253 = *(void (**)(uint64_t, uint64_t))(v246 + 8);
      v253(v245, v247);
      v254 = sub_24193F15C(0);

      swift_release();
      v253(v331, v247);
      v253(v333, v247);
      swift_beginAccess();
      v255 = *(_QWORD *)(v0 + 2720);
      *v248 = v252;
      v248[1] = v254;
      v248[2] = v255;
      sub_24195AA2C(v244, "SiriDeviceExperimentMetricsCalculatorSP", 39, 2);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v336 + 8))(v340, v338);
      (*(void (**)(uint64_t, uint64_t))(v343 + 8))(v244, v346);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v44 = *(uint64_t (**)(void))(v0 + 8);
      return v44();
    }
    v227 = (void *)v226;
    swift_bridgeObjectRelease();

    v228 = swift_allocObject();
    *(_QWORD *)(v228 + 16) = v227;
    v229 = v227;
    v230 = v227;
    v231 = sub_2419AA028();
    v232 = sub_2419AA244();
    v233 = swift_allocObject();
    *(_BYTE *)(v233 + 16) = 32;
    v234 = swift_allocObject();
    *(_BYTE *)(v234 + 16) = 8;
    v235 = swift_allocObject();
    *(_QWORD *)(v235 + 16) = sub_24195BEF4;
    *(_QWORD *)(v235 + 24) = v228;
    v236 = swift_allocObject();
    *(_QWORD *)(v236 + 16) = sub_24195BF48;
    *(_QWORD *)(v236 + 24) = v235;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163E98);
    v237 = swift_allocObject();
    sub_241941890(v237, 3);
    *v238 = sub_24195BF0C;
    v238[1] = v233;
    v238[2] = sub_24195C3F8;
    v238[3] = v234;
    v238[4] = sub_24195BF50;
    v238[5] = v236;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v239 = v232;
    if (os_log_type_enabled(v231, v232))
    {
      v240 = (uint8_t *)swift_slowAlloc();
      v370 = v231;
      v241 = swift_slowAlloc();
      v372 = v241;
      *(_WORD *)v240 = 258;
      v240[2] = 32;
      swift_release();
      v240[3] = 8;
      swift_release();
      swift_getErrorValue();
      v242 = sub_2419AA598();
      *(_QWORD *)(v0 + 2752) = sub_24193F470(v242, v243, &v372);
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      _os_log_impl(&dword_24193B000, v370, v239, "SQL execution error: %s", v240, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v241, -1, -1);
      MEMORY[0x24269F7A0](v240, -1, -1);

    }
    else
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

    }
    v29 = *(_QWORD *)(v0 + 3008);
    v256 = *(_QWORD *)(v0 + 2936);
    v257 = *(_QWORD *)(v0 + 2928);
    v258 = *(_QWORD *)(v0 + 2896);
    v259 = *(_QWORD *)(v0 + 2888);
    swift_getErrorValue();
    sub_2419AA598();
    sub_24193F23C();
    swift_allocError();
    static BiomeSQLDatabaseUtils.identifySqlError(errorString:)(v260);
    swift_bridgeObjectRelease();
    swift_willThrow();

    swift_release();
    v261 = *(void (**)(uint64_t, uint64_t))(v258 + 8);
    v261(v257, v259);
    v261(v256, v259);
LABEL_19:
    sub_24195AA2C(v29, "SiriDeviceExperimentMetricsCalculatorSP", 39, 2);
    swift_release();
    v41 = *(_QWORD *)(v0 + 3008);
    v42 = *(_QWORD *)(v0 + 3000);
    v43 = *(_QWORD *)(v0 + 2992);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2968) + 8))(*(_QWORD *)(v0 + 2984), *(_QWORD *)(v0 + 2960));
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v44 = *(uint64_t (**)(void))(v0 + 8);
    return v44();
  }
  v366 = 0;
  v327 = 0;
  v328 = 0;
  aBlock = (void *)(v0 + 16);
  v299 = v0 + 64;
  v298 = v0 + 104;
  v297 = v0 + 144;
  v266 = v0 + 184;
  v307 = v0 + 224;
  v296 = v0 + 264;
  v273 = v0 + 304;
  v306 = v0 + 344;
  v48 = v0 + 384;
  v294 = v0 + 424;
  v305 = v0 + 464;
  v323 = v0 + 504;
  v293 = v0 + 544;
  v304 = v0 + 584;
  v322 = v0 + 624;
  v292 = v0 + 664;
  v309 = v0 + 704;
  v321 = v0 + 744;
  v291 = v0 + 784;
  v320 = v0 + 824;
  v319 = v0 + 864;
  v290 = v0 + 904;
  v318 = v0 + 944;
  v317 = v0 + 984;
  v316 = v0 + 1024;
  v315 = (_OWORD *)(v0 + 1064);
  v289 = (_OWORD *)(v0 + 1096);
  v49 = (_OWORD *)(v0 + 1160);
  v50 = (_OWORD *)(v0 + 1192);
  v283 = (_OWORD *)(v0 + 1224);
  v314 = (_OWORD *)(v0 + 1256);
  v282 = (_OWORD *)(v0 + 1320);
  v308 = (_OWORD *)(v0 + 1352);
  v330 = (_OWORD *)(v0 + 1384);
  v281 = (_OWORD *)(v0 + 1416);
  v303 = (_OWORD *)(v0 + 1448);
  v312 = (_OWORD *)(v0 + 1480);
  v288 = (_OWORD *)(v0 + 1512);
  v311 = (_OWORD *)(v0 + 1544);
  v310 = (_OWORD *)(v0 + 1576);
  v287 = (_OWORD *)(v0 + 1608);
  v302 = (_OWORD *)(v0 + 1640);
  v265 = (_OWORD *)(v0 + 1704);
  v301 = (_OWORD *)(v0 + 1736);
  v272 = (_OWORD *)(v0 + 1768);
  v280 = (_OWORD *)(v0 + 1800);
  v286 = (_OWORD *)(v0 + 1832);
  v367 = (_OWORD *)(v0 + 1672);
  v277 = (uint64_t *)(v0 + 2680);
  v278 = (uint64_t *)(v0 + 2672);
  v279 = (_DWORD *)(v0 + 3016);
  v275 = (int *)(v0 + 3020);
  v276 = (uint64_t *)(v0 + 2688);
  v263 = (unsigned int *)(v0 + 3024);
  v264 = (uint64_t *)(v0 + 2744);
  v274 = (int *)(v0 + 3028);
  v271 = *(_QWORD *)(v0 + 2896);
  v285 = *(_QWORD *)(v0 + 2816);
  v300 = *(int **)(v0 + 2808);
  v295 = v0 + 384;
  v325 = (_OWORD *)(v0 + 1160);
  v326 = (_OWORD *)(v0 + 1192);
  v284 = (_OWORD *)(v0 + 1128);
  v313 = (_OWORD *)(v0 + 1288);
  while (1)
  {
    v56 = sub_2419A9EF0();
    if (!v56)
      goto LABEL_26;
    v57 = v56;
    v368 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95598]), sel_init);
    if (qword_257162A90 != -1)
      swift_once();
    v58 = (void *)qword_25716E860;
    *(_QWORD *)(v0 + 2320) = 0x61645F746E657665;
    *(_QWORD *)(v0 + 2328) = 0xEA00000000006574;
    sub_2419AA388();
    v59 = v330;
    if (*(_QWORD *)(v57 + 16) && (v60 = sub_24195B4F4(v48), (v61 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v57 + 56) + 32 * v60, (uint64_t)v367);
    }
    else
    {
      *v367 = 0u;
      v367[1] = 0u;
    }
    sub_24195BF58(v48);
    if (!*(_QWORD *)(v0 + 1696))
    {
      result = sub_241941720((uint64_t)v367, &qword_257163EA0);
      goto LABEL_50;
    }
    result = swift_dynamicCast();
    if ((result & 1) == 0)
      goto LABEL_50;
    v62 = *(_QWORD *)(v0 + 2000);
    v63 = *(_QWORD *)(v0 + 2008);
    v64 = (void *)sub_2419AA0DC();
    v65 = objc_msgSend(v58, sel_dateFromString_, v64);

    if (!v65)
      break;
    v66 = *(_QWORD *)(v0 + 2912);
    v67 = *(_QWORD *)(v0 + 2888);
    v68 = *(_QWORD *)(v0 + 2880);
    sub_2419A9CD4();

    v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 32);
    v69(v68, v66, v67);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v271 + 56))(v68, 0, 1, v67);
    v70 = v68;
    v49 = v325;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v271 + 48))(v70, 1, v67) == 1)
      goto LABEL_49;
    v69(*(_QWORD *)(v0 + 2920), *(_QWORD *)(v0 + 2880), *(_QWORD *)(v0 + 2888));
    sub_2419A9C5C();
    if ((sub_2419A9CC8() & 1) != 0
      && (v71 = (void *)sub_2419AA0DC(),
          v72 = objc_msgSend(v329, sel_BOOLForKey_, v71),
          v71,
          (v72 & 1) == 0))
    {
      v52 = *(_QWORD *)(v0 + 2920);
      v53 = *(_QWORD *)(v0 + 2904);
      v54 = *(_QWORD *)(v0 + 2888);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v55 = *(void (**)(uint64_t, uint64_t))(v271 + 8);
      v55(v53, v54);
      v55(v52, v54);
    }
    else
    {
      sub_2419A9CBC();
      v74 = v73;
      if (v73 > -1.0 && v73 < 1.84467441e19 && v73 == trunc(v73))
      {
        swift_bridgeObjectRelease();
        objc_msgSend(v368, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v74);
        v75 = v315;
        v76 = v310;
        if (v368)
        {
          *(_QWORD *)(v0 + 2496) = 0xD000000000000018;
          *(_QWORD *)(v0 + 2504) = 0x80000002419B1300;
          v77 = v368;
          sub_2419AA388();
          sub_24195AC8C(v266, v57, v265);
          sub_24195BF58(v266);
          if (*(_QWORD *)(v0 + 1728))
          {
            if (swift_dynamicCast())
              v78 = *v263;
            else
              v78 = 86400;
          }
          else
          {
            v78 = 86400;
            sub_241941720((uint64_t)v265, &qword_257163EA0);
          }
          objc_msgSend(v77, sel_setNumberOfSeconds_, v78);

        }
        v218 = *(_QWORD *)(v0 + 2920);
        v219 = *(_QWORD *)(v0 + 2888);
        v220 = *(void (**)(uint64_t, uint64_t))(v271 + 8);
        v220(*(_QWORD *)(v0 + 2904), v219);
        v220(v218, v219);
        v50 = v326;
        v59 = v330;
        goto LABEL_52;
      }
      swift_bridgeObjectRelease();
      v104 = swift_allocObject();
      *(double *)(v104 + 16) = v74;
      v105 = v104;
      v106 = swift_allocObject();
      *(_QWORD *)(v106 + 16) = v62;
      *(_QWORD *)(v106 + 24) = v63;
      v107 = v106;
      swift_bridgeObjectRetain();
      v363 = sub_2419AA028();
      v360 = sub_2419AA244();
      v108 = swift_allocObject();
      *(_BYTE *)(v108 + 16) = 0;
      v109 = v108;
      v358 = swift_allocObject();
      *(_BYTE *)(v358 + 16) = 8;
      v110 = swift_allocObject();
      *(_QWORD *)(v110 + 16) = sub_24195C028;
      *(_QWORD *)(v110 + 24) = v105;
      v111 = swift_allocObject();
      *(_QWORD *)(v111 + 16) = sub_24195C0A0;
      *(_QWORD *)(v111 + 24) = v110;
      v112 = swift_allocObject();
      *(_BYTE *)(v112 + 16) = 32;
      v113 = swift_allocObject();
      *(_BYTE *)(v113 + 16) = 8;
      v350 = v62;
      v114 = v113;
      v115 = swift_allocObject();
      *(_QWORD *)(v115 + 16) = sub_24195C054;
      *(_QWORD *)(v115 + 24) = v107;
      v116 = swift_allocObject();
      *(_QWORD *)(v116 + 16) = sub_24195C3F0;
      *(_QWORD *)(v116 + 24) = v115;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257163E98);
      v117 = swift_allocObject();
      sub_241941890(v117, 6);
      *v118 = sub_24195C3F8;
      v118[1] = v109;
      v118[2] = sub_24195C3F8;
      v118[3] = v358;
      v118[4] = sub_24195C0C0;
      v118[5] = v111;
      v118[6] = sub_24195C3F8;
      v118[7] = v112;
      v118[8] = sub_24195C3F8;
      v118[9] = v114;
      v118[10] = sub_24195C3F4;
      v118[11] = v116;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v363, v360))
      {
        v119 = (uint8_t *)swift_slowAlloc();
        v120 = swift_slowAlloc();
        v372 = v120;
        *(_WORD *)v119 = 514;
        v119[2] = 0;
        swift_release();
        v119[3] = 8;
        swift_release();
        *v268 = v74;
        sub_2419AA2EC();
        swift_release();
        swift_release();
        swift_release();
        v119[12] = 32;
        swift_release();
        v119[13] = 8;
        swift_release();
        swift_bridgeObjectRetain();
        *v264 = sub_24193F470(v350, v63, &v372);
        sub_2419AA2EC();
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl(&dword_24193B000, v363, v360, "startTimestamp %f of eventDate %s cannot be cast to UInt64.", v119, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24269F7A0](v120, -1, -1);
        MEMORY[0x24269F7A0](v119, -1, -1);

      }
      else
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      v0 = v371;
      v121 = *(_QWORD *)(v371 + 2920);
      v122 = *(_QWORD *)(v371 + 2904);
      v123 = *(_QWORD *)(v371 + 2888);
      v124 = (void *)sub_2419AA0DC();
      *(_QWORD *)(v371 + 48) = sub_24195ACDC;
      *(_QWORD *)(v371 + 56) = 0;
      *(_QWORD *)(v371 + 16) = MEMORY[0x24BDAC760];
      *(_QWORD *)(v371 + 24) = 1107296256;
      *(_QWORD *)(v371 + 32) = sub_241956C98;
      *(_QWORD *)(v371 + 40) = &block_descriptor_0;
      v125 = _Block_copy(aBlock);
      AnalyticsSendEventLazy();
      _Block_release(v125);

      v126 = *(void (**)(uint64_t, uint64_t))(v271 + 8);
      v126(v122, v123);
      v126(v121, v123);
      v49 = v325;
    }
LABEL_25:
    v50 = v326;
LABEL_26:
    if ((sub_2419A9EFC() & 1) == 0)
    {
      v46 = *v324;
      v51 = v366;
      goto LABEL_252;
    }
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v271 + 56))(*(_QWORD *)(v0 + 2880), 1, 1, *(_QWORD *)(v0 + 2888));
LABEL_49:
  v79 = *(_QWORD *)(v0 + 2880);
  swift_bridgeObjectRelease();
  result = sub_241941720(v79, &qword_257162EF0);
  v50 = v326;
  v59 = v330;
LABEL_50:
  if (__OFADD__(v366++, 1))
    goto LABEL_265;
  v75 = v315;
  v76 = v310;
LABEL_52:
  *(_QWORD *)(v0 + 2304) = 0x6C707261635F7369;
  *(_QWORD *)(v0 + 2312) = 0xEA00000000007961;
  sub_2419AA388();
  sub_24195AC8C(v323, v57, v76);
  sub_24195BF58(v323);
  if (!*(_QWORD *)(v0 + 1600))
  {
    sub_241941720((uint64_t)v76, &qword_257163EA0);
    goto LABEL_58;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_58:
    v364 = 0;
    v362 = 1;
    goto LABEL_59;
  }
  v362 = *v279 != 1;
  v81 = 5;
  if (*v279 != 1)
    v81 = 0;
  v364 = v81;
LABEL_59:
  *(_QWORD *)(v0 + 2272) = 0xD000000000000019;
  *(_QWORD *)(v0 + 2280) = 0x80000002419B11A0;
  sub_2419AA388();
  sub_24195AC8C(v322, v57, v312);
  sub_24195BF58(v322);
  if (!*(_QWORD *)(v0 + 1504))
  {
    sub_241941720((uint64_t)v312, &qword_257163EA0);
    goto LABEL_64;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_64:
    v361 = 0;
    v359 = 1;
    v84 = v311;
    goto LABEL_73;
  }
  v82 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v83 = v82;
  v84 = v311;
  if ((objc_msgSend(v83, "isEqualToString:", CFSTR("UNKNOWN")) & 1) != 0)
  {
    v361 = 0;
    v59 = v330;
  }
  else
  {
    v59 = v330;
    if ((objc_msgSend(v83, "isEqualToString:", CFSTR("OPTED_IN")) & 1) != 0)
    {
      v85 = 1;
    }
    else if ((objc_msgSend(v83, "isEqualToString:", CFSTR("OPTED_OUT")) & 1) != 0)
    {
      v85 = 2;
    }
    else
    {
      v86 = objc_msgSend(v83, "isEqualToString:", CFSTR("DISMISSED"));
      v85 = 3;
      if (!v86)
        v85 = 0;
    }
    v361 = v85;
  }

  v359 = 0;
LABEL_73:
  strcpy((char *)(v0 + 2256), "asr_location");
  *(_BYTE *)(v0 + 2269) = 0;
  *(_WORD *)(v0 + 2270) = -5120;
  sub_2419AA388();
  sub_24195AC8C(v321, v57, v59);
  sub_24195BF58(v321);
  if (!*(_QWORD *)(v0 + 1408))
  {
    sub_241941720((uint64_t)v59, &qword_257163EA0);
    goto LABEL_78;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_78:
    v357 = 0;
    v356 = 1;
    goto LABEL_85;
  }
  v87 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v88 = v87;
  if ((objc_msgSend(v88, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_UNKNOWN")) & 1) != 0)
  {
    v357 = 0;
  }
  else
  {
    if ((objc_msgSend(v88, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_SERVER")) & 1) != 0)
    {
      v89 = 1;
    }
    else
    {
      v90 = objc_msgSend(v88, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_DEVICE"));
      v89 = 2;
      if (!v90)
        v89 = 0;
    }
    v357 = v89;
  }

  v356 = 0;
LABEL_85:
  *(_QWORD *)(v0 + 2224) = 0x7461636F6C5F6C6ELL;
  *(_QWORD *)(v0 + 2232) = 0xEB000000006E6F69;
  sub_2419AA388();
  sub_24195AC8C(v319, v57, v313);
  sub_24195BF58(v319);
  if (!*(_QWORD *)(v0 + 1312))
  {
    sub_241941720((uint64_t)v313, &qword_257163EA0);
    goto LABEL_90;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_90:
    v355 = 0;
    v354 = 1;
    goto LABEL_97;
  }
  v91 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v92 = v91;
  if ((objc_msgSend(v92, "isEqualToString:", CFSTR("ORCHSIRINLMODE_UNKNOWN")) & 1) != 0)
  {
    v355 = 0;
  }
  else
  {
    if ((objc_msgSend(v92, "isEqualToString:", CFSTR("ORCHSIRINLMODE_NLV3_SERVER")) & 1) != 0)
    {
      v93 = 1;
    }
    else
    {
      v94 = objc_msgSend(v92, "isEqualToString:", CFSTR("ORCHSIRINLMODE_NLX_DEVICE"));
      v93 = 2;
      if (!v94)
        v93 = 0;
    }
    v355 = v93;
  }

  v354 = 0;
LABEL_97:
  v95 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B18]), sel_init);
  *(_QWORD *)(v0 + 2208) = 0xD000000000000011;
  *(_QWORD *)(v0 + 2216) = 0x80000002419B02B0;
  sub_2419AA388();
  sub_24195AC8C(v317, v57, v50);
  sub_24195BF58(v317);
  if (*(_QWORD *)(v0 + 1216))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v96 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(*(_QWORD *)(v0 + 2592), *(_QWORD *)(v0 + 2600));

      swift_bridgeObjectRelease();
      v95 = v96;
    }
  }
  else
  {
    sub_241941720((uint64_t)v50, &qword_257163EA0);
  }
  *(_QWORD *)(v0 + 2176) = 0xD000000000000011;
  *(_QWORD *)(v0 + 2184) = 0x80000002419B11C0;
  sub_2419AA388();
  sub_24195AC8C(v316, v57, v75);
  sub_24195BF58(v316);
  if (!*(_QWORD *)(v0 + 1088))
  {
    sub_241941720((uint64_t)v75, &qword_257163EA0);
    goto LABEL_106;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_106:
    v353 = 0;
    v352 = 1;
    goto LABEL_115;
  }
  v97 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v98 = v97;
  if ((objc_msgSend(v98, "isEqualToString:", CFSTR("EXPTREATMENTALLOCATIONSTATUS_UNKNOWN")) & 1) != 0)
  {
    v353 = 0;
  }
  else
  {
    if ((objc_msgSend(v98, "isEqualToString:", CFSTR("EXPTREATMENTALLOCATIONSTATUS_ALLOCATED")) & 1) != 0)
    {
      v99 = 1;
    }
    else if ((objc_msgSend(v98, "isEqualToString:", CFSTR("EXPTREATMENTALLOCATIONSTATUS_ACTIVATED")) & 1) != 0)
    {
      v99 = 2;
    }
    else
    {
      v100 = objc_msgSend(v98, "isEqualToString:", CFSTR("EXPTREATMENTALLOCATIONSTATUS_DEACTIVATED"));
      v99 = 3;
      if (!v100)
        v99 = 0;
    }
    v353 = v99;
  }

  v352 = 0;
LABEL_115:
  strcpy((char *)(v0 + 2160), "program_code");
  *(_BYTE *)(v0 + 2173) = 0;
  *(_WORD *)(v0 + 2174) = -5120;
  sub_2419AA388();
  sub_24195AC8C(v318, v57, v49);
  sub_24195BF58(v318);
  if (!*(_QWORD *)(v0 + 1184))
  {
    sub_241941720((uint64_t)v49, &qword_257163EA0);
    goto LABEL_120;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_120:
    v347 = 0;
    v349 = 1;
    goto LABEL_138;
  }
  v101 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v102 = v101;
  if ((objc_msgSend(v102, "isEqualToString:", CFSTR("PROGRAMCODE_UNKNOWN")) & 1) != 0)
  {
    v347 = 0;
  }
  else
  {
    if ((objc_msgSend(v102, "isEqualToString:", CFSTR("PROGRAMCODE_IOS")) & 1) != 0)
    {
      v103 = 1;
    }
    else if ((objc_msgSend(v102, "isEqualToString:", CFSTR("PROGRAMCODE_MACOS")) & 1) != 0)
    {
      v103 = 2;
    }
    else if ((objc_msgSend(v102, "isEqualToString:", CFSTR("PROGRAMCODE_TVOS")) & 1) != 0)
    {
      v103 = 3;
    }
    else if ((objc_msgSend(v102, "isEqualToString:", CFSTR("PROGRAMCODE_WATCHOS")) & 1) != 0)
    {
      v103 = 4;
    }
    else if (objc_msgSend(v102, "isEqualToString:", CFSTR("PROGRAMCODE_VISIONOS")))
    {
      v103 = 5;
    }
    else
    {
      v103 = 0;
    }
    v347 = v103;
  }

  v349 = 0;
LABEL_138:
  v127 = *(_QWORD *)(v0 + 2872);
  v128 = sub_2419A9D1C();
  v129 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56);
  v129(v127, 1, 1, v128);
  *(_QWORD *)(v0 + 2128) = 0xD000000000000015;
  *(_QWORD *)(v0 + 2136) = 0x80000002419B0250;
  sub_2419AA388();
  sub_24195AC8C(v320, v57, v314);
  sub_24195BF58(v320);
  if (*(_QWORD *)(v0 + 1280))
  {
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v130 = *(_QWORD *)(v0 + 2872);
      v131 = *(_QWORD *)(v0 + 2864);
      sub_2419A9CEC();
      swift_bridgeObjectRelease();
      sub_241941720(v130, &qword_257162D48);
      sub_24195BFD0(v131, v130);
      goto LABEL_144;
    }
  }
  else
  {
    result = sub_241941720((uint64_t)v314, &qword_257163EA0);
  }
  if (__OFADD__(v328, 1))
    goto LABEL_266;
  ++v328;
LABEL_144:
  v129(*(_QWORD *)(v0 + 2856), 1, 1, v128);
  *(_QWORD *)(v0 + 2112) = 0xD000000000000013;
  *(_QWORD *)(v0 + 2120) = 0x80000002419B11E0;
  sub_2419AA388();
  sub_24195AC8C(v309, v57, v308);
  sub_24195BF58(v309);
  if (*(_QWORD *)(v0 + 1376))
  {
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v132 = *(_QWORD *)(v0 + 2864);
      v133 = *(_QWORD *)(v0 + 2856);
      sub_2419A9CEC();
      swift_bridgeObjectRelease();
      sub_241941720(v133, &qword_257162D48);
      sub_24195BFD0(v132, v133);
      goto LABEL_150;
    }
  }
  else
  {
    result = sub_241941720((uint64_t)v308, &qword_257163EA0);
  }
  if (__OFADD__(v327, 1))
    goto LABEL_267;
  ++v327;
LABEL_150:
  *(_QWORD *)(v0 + 2080) = 0xD000000000000029;
  *(_QWORD *)(v0 + 2088) = 0x80000002419B1200;
  sub_2419AA388();
  sub_24195AC8C(v304, v57, v303);
  sub_24195BF58(v304);
  if (*(_QWORD *)(v0 + 1472))
  {
    v134 = swift_dynamicCast();
    v135 = *v278;
    if (!v134)
      v135 = 0;
    v344 = v135;
    v136 = v134 ^ 1;
  }
  else
  {
    sub_241941720((uint64_t)v303, &qword_257163EA0);
    v344 = 0;
    v136 = 1;
  }
  v341 = v136;
  *(_QWORD *)(v0 + 2064) = 0xD00000000000002BLL;
  *(_QWORD *)(v0 + 2072) = 0x80000002419B1230;
  sub_2419AA388();
  sub_24195AC8C(v305, v57, v84);
  sub_24195BF58(v305);
  v339 = v95;
  if (*(_QWORD *)(v0 + 1568))
  {
    v137 = swift_dynamicCast();
    if (v137)
      v138 = *v277;
    else
      v138 = 0;
    v139 = v137 ^ 1;
  }
  else
  {
    sub_241941720((uint64_t)v84, &qword_257163EA0);
    v138 = 0;
    v139 = 1;
  }
  v129(*(_QWORD *)(v371 + 2848), 1, 1, v128);
  strcpy((char *)(v371 + 2032), "treatment_id");
  *(_BYTE *)(v371 + 2045) = 0;
  *(_WORD *)(v371 + 2046) = -5120;
  sub_2419AA388();
  sub_24195AC8C(v306, v57, v302);
  sub_24195BF58(v306);
  if (*(_QWORD *)(v371 + 1664))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v140 = *(_QWORD *)(v371 + 2864);
      v141 = *(_QWORD *)(v371 + 2848);
      sub_2419A9CEC();
      swift_bridgeObjectRelease();
      sub_241941720(v141, &qword_257162D48);
      sub_24195BFD0(v140, v141);
      goto LABEL_168;
    }
  }
  else
  {
    sub_241941720((uint64_t)v302, &qword_257163EA0);
  }
  v142 = sub_2419AA028();
  v143 = sub_2419AA244();
  if (os_log_type_enabled(v142, v143))
  {
    v144 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v144 = 0;
    _os_log_impl(&dword_24193B000, v142, v143, "nil treatmentId", v144, 2u);
    MEMORY[0x24269F7A0](v144, -1, -1);
  }

LABEL_168:
  v129(*(_QWORD *)(v371 + 2840), 1, 1, v128);
  *(_QWORD *)(v371 + 2016) = 0x6874617065646F63;
  *(_QWORD *)(v371 + 2024) = 0xEB0000000064695FLL;
  sub_2419AA388();
  sub_24195AC8C(v307, v57, v301);
  sub_24195BF58(v307);
  if (*(_QWORD *)(v371 + 1760))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v145 = *(_QWORD *)(v371 + 2864);
      v146 = *(_QWORD *)(v371 + 2840);
      sub_2419A9CEC();
      swift_bridgeObjectRelease();
      sub_241941720(v146, &qword_257162D48);
      sub_24195BFD0(v145, v146);
      v147 = v300;
      goto LABEL_175;
    }
  }
  else
  {
    sub_241941720((uint64_t)v301, &qword_257163EA0);
  }
  v148 = sub_2419AA028();
  v149 = sub_2419AA244();
  v147 = v300;
  if (os_log_type_enabled(v148, v149))
  {
    v150 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v150 = 0;
    _os_log_impl(&dword_24193B000, v148, v149, "nil codePathId", v150, 2u);
    MEMORY[0x24269F7A0](v150, -1, -1);
  }

LABEL_175:
  v151 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v152 = objc_msgSend(v151, sel_longLivedIdentifierUploadingEnabled);

  if (v152)
  {
    *(_QWORD *)(v371 + 2528) = 0x7364695F6E727574;
    *(_QWORD *)(v371 + 2536) = 0xE800000000000000;
    sub_2419AA388();
    sub_24195AC8C(v273, v57, v272);
    sub_24195BF58(v273);
    if (*(_QWORD *)(v371 + 1792))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v337 = _s16MetricsFramework15ExtensionsUtilsC13decodeTurnIdsySay10Foundation4UUIDVGSgSSSgFZ_0(*(_QWORD *)(v371 + 2544), *(_QWORD *)(v371 + 2552));
        swift_bridgeObjectRelease();
        goto LABEL_184;
      }
    }
    else
    {
      sub_241941720((uint64_t)v272, &qword_257163EA0);
    }
  }
  else
  {
    v153 = sub_2419AA028();
    v154 = sub_2419AA22C();
    if (os_log_type_enabled(v153, (os_log_type_t)v154))
    {
      v155 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v155 = 0;
      _os_log_impl(&dword_24193B000, v153, (os_log_type_t)v154, "No turnIds found.", v155, 2u);
      MEMORY[0x24269F7A0](v155, -1, -1);
    }

  }
  v337 = 0;
LABEL_184:
  v156 = *(_QWORD *)(v371 + 2872);
  v157 = *(_QWORD *)(v371 + 2856);
  v158 = *(_QWORD *)(v371 + 2824);
  sub_2419A9D10();
  v129(v158, 0, 1, v128);
  sub_2419416DC(v156, v158 + v147[5], &qword_257162D48);
  sub_2419416DC(v157, v158 + v147[6], &qword_257162D48);
  result = sub_2419A9CBC();
  if ((~*(_QWORD *)&v159 & 0x7FF0000000000000) != 0)
  {
    if (v159 <= -1.0)
      goto LABEL_262;
    if (v159 >= 1.84467441e19)
      goto LABEL_263;
    if (!is_mul_ok((unint64_t)v159, 0x3E8uLL))
      goto LABEL_264;
    v160 = *(_QWORD *)(v371 + 2824);
    v161 = *(_QWORD *)(v371 + 2808);
    v162 = *(_QWORD *)(v371 + 2784);
    v163 = *(_QWORD *)(v371 + 2776);
    v164 = v160 + v147[7];
    *(_QWORD *)v164 = 1000 * (unint64_t)v159;
    *(_BYTE *)(v164 + 8) = 0;
    *(_QWORD *)(v160 + v147[8]) = v368;
    v165 = v160 + v147[9];
    *(_QWORD *)v165 = v344;
    *(_BYTE *)(v165 + 8) = v341;
    v166 = v160 + v147[10];
    *(_QWORD *)v166 = v138;
    *(_BYTE *)(v166 + 8) = v139;
    type metadata accessor for DeviceExperimentMetricsBuilderImpl(0);
    swift_allocObject();
    v167 = sub_241977974();
    sub_241943C64(v160, v162, type metadata accessor for EventMetadata);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v285 + 56))(v162, 0, 1, v161);
    sub_2419416DC(v162, v163, &qword_257163E60);
    v168 = v167 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata;
    swift_beginAccess();
    v369 = v368;
    sub_24195BF8C(v163, v168, &qword_257163E60);
    swift_endAccess();
    sub_241941720(v162, &qword_257163E60);
    v169 = v167 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digestType;
    *(_DWORD *)v169 = 2;
    *(_BYTE *)(v169 + 4) = 0;
    strcpy((char *)(v371 + 1984), "experiment_id");
    *(_WORD *)(v371 + 1998) = -4864;
    sub_2419AA388();
    sub_24195AC8C(v297, v57, v286);
    sub_24195BF58(v297);
    if (*(_QWORD *)(v371 + 1856))
    {
      v170 = swift_dynamicCast();
      v171 = *(_QWORD *)(v371 + 2480);
      v172 = *(_QWORD *)(v371 + 2488);
      if (!v170)
      {
        v171 = 0;
        v172 = 0;
      }
    }
    else
    {
      sub_241941720((uint64_t)v286, &qword_257163EA0);
      v171 = 0;
      v172 = 0;
    }
    v173 = *(_QWORD *)(v371 + 2864);
    v174 = *(_QWORD *)(v371 + 2848);
    v175 = (_QWORD *)(v167 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_experimentId);
    *v175 = v171;
    v175[1] = v172;
    swift_bridgeObjectRelease();
    sub_2419416DC(v174, v173, &qword_257162D48);
    v176 = v167 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID;
    swift_beginAccess();
    sub_24195BF8C(v173, v176, &qword_257162D48);
    swift_endAccess();
    strcpy((char *)(v371 + 2512), "deployment_id");
    *(_WORD *)(v371 + 2526) = -4864;
    sub_2419AA388();
    sub_24195AC8C(v298, v57, v284);
    sub_24195BF58(v298);
    if (*(_QWORD *)(v371 + 1152))
    {
      v177 = swift_dynamicCast();
      v178 = *v276;
      if (!v177)
        v178 = 0;
      v179 = v177 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)v284, &qword_257163EA0);
      v178 = 0;
      v179 = 1;
    }
    v180 = v167 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deploymentId;
    *(_QWORD *)v180 = v178;
    *(_BYTE *)(v180 + 8) = v179;
    *(_QWORD *)(v371 + 2048) = 0x745F656369766564;
    *(_QWORD *)(v371 + 2056) = 0xEB00000000657079;
    sub_2419AA388();
    sub_24195AC8C(v296, v57, v280);
    sub_24195BF58(v296);
    if (*(_QWORD *)(v371 + 1824))
    {
      v181 = swift_dynamicCast();
      v182 = *(_QWORD *)(v371 + 2448);
      v183 = *(_QWORD *)(v371 + 2456);
      if (!v181)
      {
        v182 = 0;
        v183 = 0;
      }
    }
    else
    {
      sub_241941720((uint64_t)v280, &qword_257163EA0);
      v182 = 0;
      v183 = 0;
    }
    v184 = (_QWORD *)(v167 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deviceType);
    *v184 = v182;
    v184[1] = v183;
    swift_bridgeObjectRelease();
    v185 = v167 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_programCode;
    *(_DWORD *)v185 = v347;
    *(_BYTE *)(v185 + 4) = v349;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163EA8);
    type metadata accessor for ExperimentDigest(0);
    v186 = swift_allocObject();
    v351 = sub_24193F2FC(v186, 1);
    v348 = v187;
    strcpy((char *)(v371 + 2096), "system_build");
    *(_BYTE *)(v371 + 2109) = 0;
    *(_WORD *)(v371 + 2110) = -5120;
    sub_2419AA388();
    sub_24195AC8C(v293, v57, v287);
    sub_24195BF58(v293);
    if (*(_QWORD *)(v371 + 1632))
    {
      v188 = swift_dynamicCast();
      v189 = *(_QWORD *)(v371 + 2432);
      if (!v188)
        v189 = 0;
      v345 = v189;
      if (v188)
        v190 = *(_QWORD *)(v371 + 2440);
      else
        v190 = 0;
      v342 = v190;
    }
    else
    {
      sub_241941720((uint64_t)v287, &qword_257163EA0);
      v345 = 0;
      v342 = 0;
    }
    *(_QWORD *)(v371 + 2144) = 0xD000000000000012;
    *(_QWORD *)(v371 + 2152) = 0x80000002419B1260;
    sub_2419AA388();
    sub_24195AC8C(v291, v57, v281);
    sub_24195BF58(v291);
    if (*(_QWORD *)(v371 + 1440))
    {
      v191 = swift_dynamicCast();
      v192 = *(_QWORD *)(v371 + 2416);
      if (!v191)
        v192 = 0;
      v335 = v192;
      if (v191)
        v193 = *(_QWORD *)(v371 + 2424);
      else
        v193 = 0;
      v334 = v193;
    }
    else
    {
      sub_241941720((uint64_t)v281, &qword_257163EA0);
      v335 = 0;
      v334 = 0;
    }
    *(_QWORD *)(v371 + 2192) = 0xD000000000000013;
    *(_QWORD *)(v371 + 2200) = 0x80000002419B1280;
    sub_2419AA388();
    sub_24195AC8C(v299, v57, v283);
    sub_24195BF58(v299);
    if (*(_QWORD *)(v371 + 1248))
    {
      v194 = swift_dynamicCast();
      v195 = *(_QWORD *)(v371 + 2400);
      if (!v194)
        v195 = 0;
      v332 = v195;
      if (v194)
        v196 = *(_QWORD *)(v371 + 2408);
      else
        v196 = 0;
    }
    else
    {
      sub_241941720((uint64_t)v283, &qword_257163EA0);
      v332 = 0;
      v196 = 0;
    }
    *(_QWORD *)(v371 + 2240) = 0x616D6F645F627573;
    *(_QWORD *)(v371 + 2248) = 0xEA00000000006E69;
    sub_2419AA388();
    sub_24195AC8C(v290, v57, v289);
    sub_24195BF58(v290);
    if (*(_QWORD *)(v371 + 1120))
    {
      v197 = swift_dynamicCast();
      if (v197)
        v198 = *(_QWORD *)(v371 + 2384);
      else
        v198 = 0;
      if (v197)
        v199 = *(_QWORD *)(v371 + 2392);
      else
        v199 = 0;
    }
    else
    {
      sub_241941720((uint64_t)v289, &qword_257163EA0);
      v198 = 0;
      v199 = 0;
    }
    sub_2419416DC(*(_QWORD *)(v371 + 2840), *(_QWORD *)(v371 + 2832), &qword_257162D48);
    *(_QWORD *)(v371 + 2288) = 0x746E635F6E727574;
    *(_QWORD *)(v371 + 2296) = 0xE800000000000000;
    sub_2419AA388();
    sub_24195AC8C(v292, v57, v282);
    sub_24195BF58(v292);
    if (*(_QWORD *)(v371 + 1344))
    {
      v200 = swift_dynamicCast();
      if (v200)
        v201 = *v274;
      else
        v201 = 0;
      v202 = v200 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)v282, &qword_257163EA0);
      v201 = 0;
      v202 = 1;
    }
    strcpy((char *)(v371 + 2336), "user_turn_cnt");
    *(_WORD *)(v371 + 2350) = -4864;
    sub_2419AA388();
    sub_24195AC8C(v294, v57, v288);
    swift_bridgeObjectRelease();
    sub_24195BF58(v294);
    if (*(_QWORD *)(v371 + 1536))
    {
      v203 = swift_dynamicCast();
      if (v203)
        v204 = *v275;
      else
        v204 = 0;
      v205 = v203 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)v288, &qword_257163EA0);
      v204 = 0;
      v205 = 1;
    }
    v206 = *(_QWORD *)(v371 + 2832);
    v207 = *(_QWORD *)(v371 + 2800);
    v208 = *(_QWORD *)(v371 + 2792);
    v372 = 1;
    v373 = 0u;
    v374 = 0u;
    v375 = 1;
    *((_QWORD *)&v262 + 1) = v198;
    *(_QWORD *)&v262 = v339;
    sub_241977458(v345, v342, v361 | ((unint64_t)v359 << 32), v364 | ((unint64_t)v362 << 32), v335, v334, v332, v196, v348, v357, (v357 | ((unint64_t)v356 << 32)) >> 32, v355, (v355 | ((unint64_t)v354 << 32)) >> 32, v262, v199, 0, 1, v353, (v353 | ((unint64_t)v352 << 32)) >> 32,
      (v353 | ((unint64_t)v352 << 32)) >> 48,
      514,
      v206,
      v201,
      v202,
      v204,
      v205,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      (__int128 *)&v372,
      v337);
    *(_QWORD *)(v167 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digests) = nullsub_1(v351);
    v365 = v339;
    swift_bridgeObjectRelease();
    sub_2419776F0(v207);
    swift_release();
    sub_241943C64(v207, v208, type metadata accessor for DeviceExperimentMetrics);
    sub_24195B338((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_241980710);
    v209 = *(_QWORD *)(v371 + 2720);
    v211 = *(_QWORD *)(v209 + 16);
    v210 = *(_QWORD *)(v209 + 24);
    if (v211 >= v210 >> 1)
      *v324 = sub_241980710(v210 > 1, v211 + 1, 1, v209);
    v212 = *(_QWORD *)(v371 + 2872);
    v213 = *(_QWORD *)(v371 + 2856);
    v214 = *(_QWORD *)(v371 + 2848);
    v215 = *(_QWORD *)(v371 + 2840);
    v216 = *(_QWORD *)(v371 + 2824);
    v217 = *(_QWORD *)(v371 + 2800);
    sub_24195B3D8(v211, *(_QWORD *)(v371 + 2792), type metadata accessor for DeviceExperimentMetrics);

    v0 = v371;
    sub_241943CA8(v217, type metadata accessor for DeviceExperimentMetrics);
    sub_241943CA8(v216, type metadata accessor for EventMetadata);
    sub_241941720(v215, &qword_257162D48);
    sub_241941720(v214, &qword_257162D48);
    sub_241941720(v213, &qword_257162D48);
    sub_241941720(v212, &qword_257162D48);
    v48 = v295;
    v49 = v325;
    goto LABEL_25;
  }
  __break(1u);
LABEL_262:
  __break(1u);
LABEL_263:
  __break(1u);
LABEL_264:
  __break(1u);
LABEL_265:
  __break(1u);
LABEL_266:
  __break(1u);
LABEL_267:
  __break(1u);
LABEL_268:
  __break(1u);
  return result;
}

char *sub_24195AA2C(uint64_t a1, const char *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  char *result;
  const char *v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  int v22;
  int v23;
  char *v24;

  v23 = a4;
  v24 = (char *)a2;
  v4 = sub_2419A9FEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2419A9FBC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  v15 = sub_2419A9FC8();
  sub_2419A9FF8();
  v22 = sub_2419AA25C();
  if ((sub_2419AA2B0() & 1) == 0)
    goto LABEL_5;
  if ((v23 & 1) == 0)
  {
    if (!v24)
    {
      __break(1u);
LABEL_5:

      return (char *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  result = v24;
  if ((unint64_t)v24 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v24 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v24 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v24 = sub_24198F2D0();
LABEL_10:
  swift_retain();
  sub_2419AA01C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x24BEE7810])
  {
    v17 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = "";
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v18 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v18 = 0;
  v19 = sub_2419A9FB0();
  _os_signpost_emit_with_name_impl(&dword_24193B000, v15, (os_signpost_type_t)v22, v19, v24, v17, v18, 2u);
  MEMORY[0x24269F7A0](v18, -1, -1);

  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  return (char *)((uint64_t (*)(char *, uint64_t))v20)(v12, v8);
}

double sub_24195AC8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_24195B4F4(a1), (v6 & 1) != 0))
  {
    sub_24193D1D0(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_24195ACDC()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257163FD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2419AB050;
  *(_QWORD *)(inited + 32) = 0xD000000000000018;
  *(_QWORD *)(inited + 40) = 0x80000002419B13A0;
  sub_241943088(0, (unint64_t *)&qword_257163FE0);
  *(_QWORD *)(inited + 48) = sub_2419AA2A4();
  return sub_24194D8A4(inited);
}

uint64_t sub_24195AD78()
{
  swift_getErrorValue();
  return sub_2419AA598();
}

void sub_24195ADB0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  uint64_t aBlock[6];

  if (a1 >= 1)
  {
    swift_bridgeObjectRetain_n();
    v6 = sub_2419AA028();
    v7 = sub_2419AA244();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      aBlock[0] = v9;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_24193F470(a2, a3, aBlock);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24193B000, v6, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v9, -1, -1);
      MEMORY[0x24269F7A0](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v10 = (void *)sub_2419AA0DC();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a2;
    v11[3] = a3;
    v11[4] = a1;
    aBlock[4] = (uint64_t)sub_24195C3E4;
    aBlock[5] = (uint64_t)v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241956C98;
    aBlock[3] = (uint64_t)&block_descriptor_59;
    v12 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v12);

  }
}

unint64_t sub_24195AFD4()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257163FD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2419AB040;
  *(_QWORD *)(inited + 32) = 0x726F727245;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = sub_2419AA0DC();
  *(_QWORD *)(inited + 56) = 0x746E756F43;
  *(_QWORD *)(inited + 64) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = sub_2419AA220();
  return sub_24194D8A4(inited);
}

uint64_t SiriDeviceExperimentMetricsCalculator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlFileURL, &qword_257162CF0);
  swift_release();

  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_calendar;
  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  return v0;
}

uint64_t SiriDeviceExperimentMetricsCalculator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlFileURL, &qword_257162CF0);
  swift_release();

  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_calendar;
  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_24195B240(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24193D468;
  return sub_241956E0C(a1);
}

uint64_t sub_24195B294@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

void sub_24195B2A4(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = sub_2419A9FB0();
  _os_signpost_emit_with_name_impl(&dword_24193B000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_24195B324()
{
  return 1;
}

uint64_t sub_24195B32C()
{
  return sub_24195B338((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_241980724);
}

uint64_t sub_24195B338(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_24195B38C(uint64_t result)
{
  unint64_t *v1;
  unint64_t v2;

  v2 = *(_QWORD *)(*v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1))
  {
    result = sub_241980724(v2 > 1, result + 1, 1, *v1);
    *v1 = result;
  }
  return result;
}

uint64_t sub_24195B3CC(uint64_t a1, uint64_t a2)
{
  return sub_24195B3D8(a1, a2, type metadata accessor for DeviceUsageMetrics);
}

uint64_t sub_24195B3D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *v3;
  *(_QWORD *)(v7 + 16) = a1 + 1;
  v8 = a3(0);
  return sub_24195C340(a2, v7+ ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3);
}

uint64_t sub_24195B440(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_2419AA2EC();
  *a1 = v5;
  return result;
}

unint64_t sub_24195B490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2419AA5EC();
  sub_2419AA148();
  v4 = sub_2419AA61C();
  return sub_24195B6EC(a1, a2, v4);
}

unint64_t sub_24195B4F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2419AA370();
  return sub_24195B7CC(a1, v2);
}

unint64_t sub_24195B524(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_2419A9CE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2419AA5EC();
  sub_2419416DC(a1, (uint64_t)v8, &qword_257162EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_2419AA604();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_2419AA604();
    sub_24195C300(&qword_257163FC0, MEMORY[0x24BDCE930]);
    sub_2419AA07C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v9 = sub_2419AA61C();
  return sub_24195B890(a1, v9);
}

unint64_t sub_24195B694(uint64_t a1)
{
  uint64_t v2;

  sub_2419AA5EC();
  EventMetadata.hash(into:)();
  v2 = sub_2419AA61C();
  return sub_24195BBB4(a1, v2);
}

unint64_t sub_24195B6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2419AA574() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2419AA574() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24195B7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_24195C384(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24269F014](v9, a1);
      sub_24195BF58((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_24195B890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v33 = a1;
  v5 = sub_2419A9CE0();
  v6 = *(_QWORD *)(v5 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v28 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163FC8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v11 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = v3 + 64;
  v34 = v3;
  v17 = -1 << *(_BYTE *)(v3 + 32);
  v18 = a2 & ~v17;
  if (((*(_QWORD *)(v3 + 64 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    v30 = v13;
    v31 = ~v17;
    v32 = *(_QWORD *)(v12 + 72);
    v27 = v8;
    v29 = v3 + 64;
    while (1)
    {
      sub_2419416DC(*(_QWORD *)(v34 + 48) + v32 * v18, (uint64_t)v15, &qword_257162EF0);
      v19 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_2419416DC((uint64_t)v15, (uint64_t)v10, &qword_257162EF0);
      sub_2419416DC(v33, v19, &qword_257162EF0);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      if (v20(v10, 1, v5) == 1)
        break;
      v21 = v30;
      sub_2419416DC((uint64_t)v10, v30, &qword_257162EF0);
      if (v20((char *)v19, 1, v5) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v5);
        v16 = v29;
LABEL_4:
        sub_241941720((uint64_t)v10, &qword_257163FC8);
        sub_241941720((uint64_t)v15, &qword_257162EF0);
        goto LABEL_5;
      }
      v22 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v28, v19, v5);
      sub_24195C300(&qword_257162EF8, MEMORY[0x24BDCE958]);
      v23 = sub_2419AA0B8();
      v24 = *(void (**)(char *, uint64_t))(v6 + 8);
      v25 = v22;
      v8 = v27;
      v24(v25, v5);
      v24((char *)v21, v5);
      sub_241941720((uint64_t)v10, &qword_257162EF0);
      sub_241941720((uint64_t)v15, &qword_257162EF0);
      v16 = v29;
      if ((v23 & 1) != 0)
        return v18;
LABEL_5:
      v18 = (v18 + 1) & v31;
      if (((*(_QWORD *)(v16 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        return v18;
    }
    if (v20((char *)v19, 1, v5) == 1)
    {
      sub_241941720((uint64_t)v10, &qword_257162EF0);
      sub_241941720((uint64_t)v15, &qword_257162EF0);
      return v18;
    }
    goto LABEL_4;
  }
  return v18;
}

unint64_t sub_24195BBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v5 = type metadata accessor for EventMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_241943C64(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for EventMetadata);
      v13 = _s16MetricsFramework13EventMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v8, a1);
      sub_241943CA8((uint64_t)v8, type metadata accessor for EventMetadata);
      if ((v13 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_24195BCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v23;

  sub_2419A9D58();
  v9 = v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_logger;
  v10 = sub_2419AA040();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  v23 = a2;
  sub_2419416DC(a2, v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlFileURL, &qword_257162CF0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_bookmarkService) = a3;
  v12 = v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_oddId;
  v13 = sub_2419A9D1C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  v15 = objc_allocWithZone(MEMORY[0x24BDD1500]);
  swift_retain();
  v16 = objc_msgSend(v15, sel_init);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlDateFormatter) = v16;
  v17 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v18 = (void *)sub_2419AA0DC();
  v19 = objc_msgSend(v17, sel_initWithSuiteName_, v18);

  if (!v19)
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCF50]), sel_init, a2);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_defaults) = v19;
  v20 = *(void **)(v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlDateFormatter);
  v21 = (void *)sub_2419AA0DC();
  objc_msgSend(v20, sel_setDateFormat_, v21);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  sub_241941720(v23, &qword_257162CF0);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v4;
}

uint64_t sub_24195BED0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24195BEF4()
{
  return sub_24195AD78();
}

uint64_t sub_24195BEFC()
{
  return swift_deallocObject();
}

_BYTE **sub_24195BF0C(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_24193F340(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_24195BF14()
{
  return swift_deallocObject();
}

uint64_t sub_24195BF24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24195BF48()
{
  uint64_t v0;

  return sub_24193F13C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_24195BF50(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_24193F400(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_24195BF58(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_24195BF8C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24195BFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24195C018()
{
  return swift_deallocObject();
}

double sub_24195C028()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_24195C030()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24195C054()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24195C080()
{
  return swift_deallocObject();
}

uint64_t sub_24195C090()
{
  return swift_deallocObject();
}

uint64_t sub_24195C0A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24195C0C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  (*(void (**)(void))(v1 + 16))();
  v3 = *a1 + 8;
  result = sub_2419AA2EC();
  *a1 = v3;
  return result;
}

uint64_t sub_24195C110()
{
  return swift_deallocObject();
}

uint64_t sub_24195C120()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for SiriDeviceExperimentMetricsResults()
{
  return &type metadata for SiriDeviceExperimentMetricsResults;
}

uint64_t sub_24195C158()
{
  return type metadata accessor for SiriDeviceExperimentMetricsCalculator();
}

uint64_t type metadata accessor for SiriDeviceExperimentMetricsCalculator()
{
  uint64_t result;

  result = qword_257163EF0;
  if (!qword_257163EF0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24195C19C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2419AA040();
  if (v0 <= 0x3F)
  {
    sub_2419415E0();
    if (v1 <= 0x3F)
    {
      sub_2419A9D1C();
      if (v2 <= 0x3F)
      {
        sub_2419A9D64();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for SiriDeviceExperimentMetricsCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t sub_24195C300(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2419A9CE0();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24195C340(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24195C384(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_24195C3C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_24195C3E4()
{
  return sub_24195AFD4();
}

uint64_t SiriSegmentCohortDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SiriSegmentCohortDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_24195C4D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24195C4EC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: SiriSegmentCohortDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SiriSegmentCohortDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriSegmentCohortDataProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24195C630()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

unint64_t sub_24195C650()
{
  unint64_t result;

  result = qword_257163FF8;
  if (!qword_257163FF8)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriSegmentCohortDataRecord, &type metadata for SiriSegmentCohortDataRecord);
    atomic_store(result, (unint64_t *)&qword_257163FF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSegmentCohortDataRecord()
{
  return &type metadata for SiriSegmentCohortDataRecord;
}

uint64_t sub_24195C6A4()
{
  return type metadata accessor for SiriSegmentCohortDataProvider();
}

uint64_t type metadata accessor for SiriSegmentCohortDataProvider()
{
  uint64_t result;

  result = qword_257164030;
  if (!qword_257164030)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for SiriSegmentCohortDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriSegmentCohortDataProvider.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SiriSegmentCohortDataProvider.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t DevicePropertiesResult.devicePropertiesEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DevicePropertiesResult.devicePropertiesEvents.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DevicePropertiesResult.devicePropertiesEvents.modify())()
{
  return nullsub_1;
}

uint64_t DevicePropertiesResult.siriAccountInformationEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DevicePropertiesResult.siriAccountInformationEvents.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DevicePropertiesResult.siriAccountInformationEvents.modify())()
{
  return nullsub_1;
}

uint64_t DevicePropertiesCalculator.__allocating_init(defaults:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  sub_2419A9D58();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_defaults) = a1;
  v5 = v4 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t DevicePropertiesCalculator.init(defaults:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_2419A9D58();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_defaults) = a1;
  v5 = v2 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
  return v2;
}

uint64_t sub_24195C8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(a2 + 16);
  return swift_task_switch();
}

uint64_t sub_24195C908()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Calculator invoked: DevicePropertiesCalculator", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v4 = *(void **)(v0 + 32);

  v5 = sub_24195CB08();
  sub_24195DF60(v5, v4);
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v9 = objc_msgSend(v8, sel_longLivedIdentifierUploadingEnabled);

  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 40);
    v11 = *(void **)(v0 + 48);
    v12 = objc_msgSend(*(id *)(v0 + 32), sel_eventMetadata);
    v13 = objc_msgSend(v12, sel_deviceAggregationId);

    sub_24195E478(v5, (uint64_t)v13, v10, v11);
    v15 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = sub_2419AA028();
    v16 = sub_2419AA238();
    if (os_log_type_enabled(v13, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_24193B000, v13, v16, "RPI enabled, skipping ODDSiriAccountInformation generation", v17, 2u);
      MEMORY[0x24269F7A0](v17, -1, -1);
    }
    v15 = MEMORY[0x24BEE4AF8];
  }
  v18 = *(_QWORD **)(v0 + 16);

  *v18 = v7;
  v18[1] = v15;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24195CB08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  id v15;
  id v16;
  uint64_t result;
  double v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  uint64_t v23;

  v0 = sub_2419A9CE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (void (*)(char *, char *, uint64_t))((char *)&v20 - v8);
  v23 = MEMORY[0x24BEE4AF8];
  sub_24195DAA0((char *)&v20 - v8);
  v10 = sub_24195CDB4(v9);
  sub_241941720((uint64_t)v9, &qword_257162EF0);
  v11 = *(_QWORD *)(v10 + 16);
  v20 = v10;
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v21 = *(_QWORD *)(v1 + 72);
    v22 = v13;
    v13(v7, v12, v0);
    while (1)
    {
      v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v14(v7, 0, 1, v0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
      v15 = objc_allocWithZone(MEMORY[0x24BE95598]);
      v16 = objc_msgSend(v15, sel_init, v20);
      result = sub_2419A9CBC();
      if (v16)
      {
        if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
        {
          __break(1u);
LABEL_17:
          __break(1u);
LABEL_18:
          __break(1u);
          return result;
        }
        if (v18 <= -1.0)
          goto LABEL_17;
        if (v18 >= 1.84467441e19)
          goto LABEL_18;
        objc_msgSend(v16, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v18);
        objc_msgSend(v16, sel_setNumberOfSeconds_, 86400);
        v19 = v16;
        MEMORY[0x24269EE34]();
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2419AA1CC();
        sub_2419AA1E4();
        sub_2419AA1C0();

      }
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v12 += v21;
      if (!--v11)
        goto LABEL_14;
      v22(v7, v12, v0);
    }
  }
  else
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
LABEL_14:
    v14(v7, 1, 1, v0);
  }
  swift_bridgeObjectRelease();
  return v23;
}

unint64_t sub_24195CDB4(void (*a1)(char *, char *, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  unint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38[3];
  unint64_t v39;

  v36 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2419A9CE0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v34 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v34 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v34 - v16;
  v39 = MEMORY[0x24BEE4AF8];
  sub_2419A9D94();
  sub_2419A9D4C();
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v15, v5);
  sub_24195D1F0((uint64_t)v36, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_241941720((uint64_t)v4, &qword_257162EF0);
  }
  else
  {
    v36 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v36(v12, v4, v5);
    sub_24195C300(qword_257164218, MEMORY[0x24BDCE948]);
    if ((sub_2419AA0AC() & 1) != 0)
    {
      v18(v12, v5);
    }
    else
    {
      v34[1] = v1;
      v35 = v18;
      v19 = v39;
      v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v21 = v17;
      do
      {
        v20(v9, v12, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_241980738(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
        v23 = *(_QWORD *)(v19 + 16);
        v22 = *(_QWORD *)(v19 + 24);
        if (v23 >= v22 >> 1)
          v19 = sub_241980738(v22 > 1, v23 + 1, 1, v19);
        *(_QWORD *)(v19 + 16) = v23 + 1;
        v36((char *)(v19+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v23), v9, v5);
        sub_2419A9C8C();
        v17 = v21;
      }
      while ((sub_2419AA0AC() & 1) == 0);
      v39 = v19;
      v18 = v35;
      v35(v12, v5);
    }
  }
  v24 = sub_2419AA028();
  v25 = sub_2419AA238();
  if (os_log_type_enabled(v24, v25))
  {
    v36 = (void (*)(char *, char *, uint64_t))v17;
    v26 = swift_slowAlloc();
    v35 = v18;
    v27 = (uint8_t *)v26;
    v28 = swift_slowAlloc();
    v38[0] = v28;
    *(_DWORD *)v27 = 136315138;
    swift_beginAccess();
    v29 = swift_bridgeObjectRetain();
    v30 = MEMORY[0x24269EE4C](v29, v5);
    v32 = v31;
    swift_bridgeObjectRelease();
    v37 = sub_24193F470(v30, v32, v38);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24193B000, v24, v25, "Dates to run: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v28, -1, -1);
    MEMORY[0x24269F7A0](v27, -1, -1);

    v35((char *)v36, v5);
  }
  else
  {

    v18(v17, v5);
  }
  swift_beginAccess();
  return v39;
}

uint64_t sub_24195D1F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  char *v33;
  uint8_t *v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v77 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2419A9CE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v73 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v74 = (char *)&v71 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)&v71 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v76 = (char *)&v71 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v71 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v71 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v71 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v71 - v25;
  sub_2419A9D94();
  v78 = v26;
  sub_2419A9D4C();
  v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v24, v6);
  if (qword_257162A88 != -1)
    swift_once();
  v28 = sub_2419A9D64();
  __swift_project_value_buffer(v28, (uint64_t)qword_257165B18);
  sub_2419A9D94();
  sub_2419A9D4C();
  v27(v18, v6);
  sub_2419A9C50();
  sub_2419A9C44();
  v27(v24, v6);
  sub_24195F440(a1, (uint64_t)v5);
  v29 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_241941720((uint64_t)v5, &qword_257162EF0);
    v30 = sub_2419AA028();
    v31 = sub_2419AA238();
    v32 = os_log_type_enabled(v30, v31);
    v33 = v77;
    if (v32)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_24193B000, v30, v31, "pluginLastRunDate: no entry", v34, 2u);
      MEMORY[0x24269F7A0](v34, -1, -1);
    }

    v27(v78, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v33, v21, v6);
    goto LABEL_20;
  }
  v35 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v36 = v76;
  v35(v76, v5, v6);
  v72 = v21;
  if ((sub_2419A9CB0() & 1) != 0)
  {
    v37 = v75;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v75, v36, v6);
    v38 = sub_2419AA028();
    v39 = sub_2419AA238();
    v40 = os_log_type_enabled(v38, v39);
    v41 = v78;
    if (v40)
    {
      v42 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      v74 = (char *)v43;
      *(_DWORD *)v42 = 134218242;
      v79 = 6;
      v80 = v43;
      v71 = v29;
      sub_2419AA2EC();
      *(_WORD *)(v42 + 12) = 2080;
      sub_24195C300(&qword_257163B10, MEMORY[0x24BDCE988]);
      v44 = sub_2419AA568();
      v79 = sub_24193F470(v44, v45, &v80);
      v29 = v71;
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      v27(v37, v6);
      _os_log_impl(&dword_24193B000, v38, v39, "pluginLastRunDate more than %ld days ago: %s", (uint8_t *)v42, 0x16u);
      v46 = v74;
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v46, -1, -1);
      MEMORY[0x24269F7A0](v42, -1, -1);

      v27(v76, v6);
      v47 = v78;
    }
    else
    {

      v27(v37, v6);
      v27(v36, v6);
      v47 = v41;
    }
    v27(v47, v6);
    v33 = v77;
    v35(v77, v72, v6);
LABEL_20:
    v67 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v33, v67, 1, v6);
  }
  v48 = v78;
  v49 = sub_2419A9CB0();
  v50 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  if ((v49 & 1) != 0)
  {
    v51 = v74;
    v50(v74, v36, v6);
    v52 = sub_2419AA028();
    v53 = sub_2419AA238();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      *(_DWORD *)v54 = 134218242;
      v79 = 6;
      v80 = v55;
      v71 = v29;
      sub_2419AA2EC();
      *(_WORD *)(v54 + 12) = 2080;
      sub_24195C300(&qword_257163B10, MEMORY[0x24BDCE988]);
      v56 = sub_2419AA568();
      v79 = sub_24193F470(v56, v57, &v80);
      v29 = v71;
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      v27(v51, v6);
      _os_log_impl(&dword_24193B000, v52, v53, "pluginLastRunDate within last %ld days: %s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      v58 = v55;
      v48 = v78;
      MEMORY[0x24269F7A0](v58, -1, -1);
      MEMORY[0x24269F7A0](v54, -1, -1);

    }
    else
    {

      v27(v51, v6);
    }
    v69 = v76;
    v33 = v77;
    sub_2419A9C98();
    v27(v69, v6);
    v27(v72, v6);
    v27(v48, v6);
    goto LABEL_20;
  }
  v59 = v73;
  v50(v73, v36, v6);
  v60 = sub_2419AA028();
  v61 = sub_2419AA238();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = swift_slowAlloc();
    v71 = v29;
    v64 = v63;
    v80 = v63;
    *(_DWORD *)v62 = 136315138;
    sub_24195C300(&qword_257163B10, MEMORY[0x24BDCE988]);
    v65 = sub_2419AA568();
    v79 = sub_24193F470(v65, v66, &v80);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    v27(v59, v6);
    _os_log_impl(&dword_24193B000, v60, v61, "pluginLastRunDate this morning or later: %s", v62, 0xCu);
    v67 = 1;
    swift_arrayDestroy();
    v68 = v64;
    v29 = v71;
    MEMORY[0x24269F7A0](v68, -1, -1);
    MEMORY[0x24269F7A0](v62, -1, -1);

    v27(v76, v6);
    v27(v72, v6);
    v27(v78, v6);
  }
  else
  {

    v27(v59, v6);
    v27(v36, v6);
    v27(v72, v6);
    v27(v48, v6);
    v67 = 1;
  }
  v33 = v77;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v33, v67, 1, v6);
}

uint64_t sub_24195DAA0@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  int v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t, uint64_t);
  void (*v17)(char *, char *, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  _OWORD v38[2];
  uint64_t v39[4];

  v37 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2419A9CE0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v34 - v10;
  v12 = *(void **)(v1 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_defaults);
  v13 = (void *)sub_2419AA0DC();
  v14 = objc_msgSend(v12, sel_objectForKey_, v13);

  if (v14)
  {
    sub_2419AA340();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  sub_24195F3F8((uint64_t)v38, (uint64_t)v39);
  if (v39[3])
  {
    v15 = swift_dynamicCast();
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v16(v4, v15 ^ 1u, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v17(v11, v4, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      v18 = sub_2419AA028();
      v19 = sub_2419AA238();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v36 = v17;
        v21 = v20;
        v35 = swift_slowAlloc();
        v39[0] = v35;
        *(_DWORD *)v21 = 136315394;
        *(_QWORD *)&v38[0] = sub_24193F470(0xD000000000000021, 0x80000002419B0E60, v39);
        sub_2419AA2EC();
        *(_WORD *)(v21 + 12) = 2080;
        v34 = v21 + 14;
        sub_24195C300(&qword_257163B10, MEMORY[0x24BDCE988]);
        v22 = sub_2419AA568();
        *(_QWORD *)&v38[0] = sub_24193F470(v22, v23, v39);
        sub_2419AA2EC();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        _os_log_impl(&dword_24193B000, v18, v19, "%s: %s", (uint8_t *)v21, 0x16u);
        v24 = v35;
        swift_arrayDestroy();
        MEMORY[0x24269F7A0](v24, -1, -1);
        v25 = v21;
        v17 = v36;
        MEMORY[0x24269F7A0](v25, -1, -1);

      }
      else
      {

        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      }
      v32 = v37;
      v17(v37, v11, v5);
      v30 = v32;
      v31 = 0;
      return v16(v30, v31, 1, v5);
    }
  }
  else
  {
    sub_241941720((uint64_t)v39, &qword_257163EA0);
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v16(v4, 1, 1, v5);
  }
  sub_241941720((uint64_t)v4, &qword_257162EF0);
  v26 = sub_2419AA028();
  v27 = sub_2419AA238();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v39[0] = v29;
    *(_DWORD *)v28 = 136315138;
    *(_QWORD *)&v38[0] = sub_24193F470(0xD000000000000021, 0x80000002419B0E60, v39);
    sub_2419AA2EC();
    _os_log_impl(&dword_24193B000, v26, v27, "No entry for %s from UserDefaults", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v29, -1, -1);
    MEMORY[0x24269F7A0](v28, -1, -1);
  }

  v30 = v37;
  v31 = 1;
  return v16(v30, v31, 1, v5);
}

void sub_24195DF60(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  os_log_type_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v5 = a1;
  v33 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v6 = sub_2419AA424();
    if (v6)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    return;
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_22;
LABEL_3:
  v31 = v5 & 0xC000000000000001;
  v7 = 4;
  v25 = v6;
  v27 = v3;
  v28 = v5;
  v26 = a2;
  while (1)
  {
    if (v31)
      v8 = (id)MEMORY[0x24269F038](v7 - 4, v5);
    else
      v8 = *(id *)(v5 + 8 * v7);
    v9 = v8;
    v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    v11 = sub_24195E2C8((uint64_t)v8, a2);
    if (v11)
      break;

LABEL_5:
    ++v7;
    if (v10 == v6)
      goto LABEL_22;
  }
  v12 = v11;
  MEMORY[0x24269EE34]();
  if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2419AA1CC();
  sub_2419AA1E4();
  sub_2419AA1C0();
  v13 = objc_msgSend(v12, sel_eventMetadata);
  if (!v13)
  {

    goto LABEL_5;
  }
  v14 = v13;
  v15 = sub_2419AA028();
  v30 = sub_2419AA238();
  if (!os_log_type_enabled(v15, v30))
  {

    goto LABEL_5;
  }
  v16 = swift_slowAlloc();
  v17 = swift_slowAlloc();
  v18 = v14;
  v19 = v17;
  v32 = v17;
  *(_DWORD *)v16 = 136315138;
  v29 = v18;
  v20 = objc_msgSend(v18, sel_dictionaryRepresentation);
  if (v20)
  {
    v21 = v20;
    sub_2419AA064();

    v22 = sub_2419AA070();
    v24 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 4) = sub_24193F470(v22, v24, &v32);

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24193B000, v15, v30, "Added devicePropertiesEvent with metadata: %s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v19, -1, -1);
    MEMORY[0x24269F7A0](v16, -1, -1);

    v3 = v27;
    v5 = v28;
    v6 = v25;
    a2 = v26;
    goto LABEL_5;
  }

  __break(1u);
}

id sub_24195E2C8(uint64_t a1, id a2)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;

  if (!a2)
  {
    sub_24195EC68(0xD000000000000020, 0x80000002419B16A0);
LABEL_6:
    sub_24195EC68(0xD000000000000017, 0x80000002419B1140);
    v6 = 0;
    goto LABEL_7;
  }
  v4 = objc_msgSend(a2, sel_eventMetadata);
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_deviceAggregationId);

  if (!v6)
    goto LABEL_6;
LABEL_7:
  v7 = (void *)sub_241988AD4(a1, (uint64_t)v6);
  if (v7)
  {
    if (!a2)
      goto LABEL_13;
  }
  else
  {
    sub_24195EC68(0xD00000000000003BLL, 0x80000002419B16D0);
    if (!a2)
      goto LABEL_13;
  }
  v8 = objc_msgSend(a2, sel_data);
  if (v8)
  {
    v9 = v8;
    v10 = sub_2419A9C38();
    v12 = v11;

    v13 = (void *)sub_2419A9C2C();
    sub_24195F3B4(v10, v12);
    goto LABEL_14;
  }
LABEL_13:
  v13 = 0;
LABEL_14:
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_initWithData_, v13);

  if (v14)
    objc_msgSend(v14, sel_setEventMetadata_, v7);
  else
    sub_24195EC68(0xD000000000000037, 0x80000002419B1710);

  return v14;
}

void sub_24195E478(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint32_t *p_align;
  id v20;
  id v21;
  char *v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  double v27;
  double v28;
  id v29;
  uint32_t *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  NSObject *v44;
  int v45;
  void *v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  os_log_t v54;
  uint64_t v55;
  _QWORD v56[2];
  __int128 v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  os_log_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v5 = v4;
  v66 = a3;
  v9 = sub_2419A9CE0();
  v76 = *(_QWORD *)(v9 - 8);
  v77 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v75 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2419A9D1C();
  v73 = *(_QWORD *)(v11 - 8);
  v74 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v72 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = MEMORY[0x24BEE4AF8];
  v80 = a1;
  if (a1 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    v13 = sub_2419AA424();
    if (v13)
      goto LABEL_3;
LABEL_45:
    swift_bridgeObjectRelease();
    return;
  }
  v13 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v13)
    goto LABEL_45;
LABEL_3:
  v65 = v5 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  v79 = v80 & 0xC000000000000001;
  v15 = 4;
  v68 = 0x80000002419B16D0;
  v69 = 0x80000002419B1140;
  v67 = 0x80000002419B1710;
  *(_QWORD *)&v14 = 136315394;
  v57 = v14;
  v56[1] = MEMORY[0x24BEE4AD8] + 8;
  v70 = a4;
  v71 = a2;
  v78 = v13;
  v64 = v5;
  v58 = &v82;
  while (1)
  {
    if (v79)
      v16 = (id)MEMORY[0x24269F038](v15 - 4, v80);
    else
      v16 = *(id *)(v80 + 8 * v15);
    v17 = v16;
    v18 = v15 - 3;
    if (__OFADD__(v15 - 4, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (a2)
    {
      p_align = &stru_2511CBFE8.align;
      if (a4)
        goto LABEL_13;
    }
    else
    {
      sub_24195EC68(0xD000000000000017, v69);
      p_align = (_DWORD *)(&stru_2511CBFE8 + 24);
      if (a4)
        goto LABEL_13;
    }
    sub_24195EC68(0x69737361206C696ELL, 0xEF6449746E617473);
LABEL_13:
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954F0]), *((SEL *)p_align + 67));
    v21 = v20;
    if (v20)
    {
      objc_msgSend(v20, sel_setDeviceAggregationId_, a2);
      v22 = v72;
      sub_2419A9D10();
      v23 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v24 = (void *)sub_2419A9D04();
      v25 = objc_msgSend(v23, sel_initWithNSUUID_, v24);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v22, v74);
      objc_msgSend(v21, sel_setOddId_, v25);

      v26 = v75;
      sub_2419A9D94();
      sub_2419A9CBC();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v26, v77);
      if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
        goto LABEL_40;
      if (v28 <= -1.0)
        goto LABEL_41;
      if (v28 >= 1.84467441e19)
        goto LABEL_42;
      if (!is_mul_ok((unint64_t)v28, 0x3E8uLL))
        goto LABEL_43;
      objc_msgSend(v21, sel_setEventTimestampInMsSince1970_, 1000 * (unint64_t)v28);
      objc_msgSend(v21, sel_setAggregationInterval_, v17);
      v13 = v78;
      p_align = (_DWORD *)(&stru_2511CBFE8 + 24);
    }
    else
    {
      sub_24195EC68(0xD00000000000003BLL, v68);
    }
    v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), *((SEL *)p_align + 67));
    if (v29)
      break;
    sub_24195EC68(0xD000000000000037, v67);
LABEL_5:

LABEL_6:
    ++v15;
    if (v18 == v13)
      goto LABEL_45;
  }
  v30 = p_align;
  v31 = v29;
  objc_msgSend(v29, sel_setEventMetadata_, v21);
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95580]), (SEL)v30 + 3528);
  v33 = v32;
  if (v32)
  {
    v34 = v32;
    if (a4)
      a4 = (void *)sub_2419AA0DC();
    objc_msgSend(v34, sel_setAssistantId_, a4);

    a4 = v70;
    a2 = v71;
  }
  objc_msgSend(v31, sel_setSiriAccountInformation_, v33);

  v21 = v31;
  MEMORY[0x24269EE34]();
  if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2419AA1CC();
  sub_2419AA1E4();
  sub_2419AA1C0();
  v35 = objc_msgSend(v21, sel_eventMetadata);
  if (!v35)
    goto LABEL_5;
  v36 = v35;
  v37 = objc_msgSend(v21, sel_siriAccountInformation);
  if (!v37)
  {

    goto LABEL_6;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, sel_assistantId);

  if (!v39)
  {

    a2 = v71;
    goto LABEL_6;
  }
  v40 = sub_2419AA0E8();
  v42 = v41;

  v43 = v36;
  swift_bridgeObjectRetain();
  v44 = sub_2419AA028();
  v45 = sub_2419AA238();
  if (!os_log_type_enabled(v44, (os_log_type_t)v45))
  {
    swift_bridgeObjectRelease_n();

    v5 = v64;
    a4 = v70;
    a2 = v71;
    goto LABEL_6;
  }
  v61 = v45;
  v62 = v44;
  v46 = v43;
  v47 = swift_slowAlloc();
  v60 = swift_slowAlloc();
  v82 = v60;
  *(_DWORD *)v47 = v57;
  swift_bridgeObjectRetain();
  v81 = sub_24193F470(v40, v42, &v82);
  sub_2419AA2EC();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v47 + 12) = 2080;
  v63 = v46;
  v48 = objc_msgSend(v46, sel_dictionaryRepresentation);
  if (v48)
  {
    v49 = v48;
    v59 = v47 + 14;
    sub_2419AA064();

    v50 = sub_2419AA070();
    v52 = v51;
    swift_bridgeObjectRelease();
    v81 = sub_24193F470(v50, v52, &v82);
    sub_2419AA2EC();
    v53 = v63;

    swift_bridgeObjectRelease();
    v54 = v62;
    _os_log_impl(&dword_24193B000, v62, (os_log_type_t)v61, "Added siriAccountInformationEvent with assistantId: %s metadata: %s", (uint8_t *)v47, 0x16u);
    v55 = v60;
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v55, -1, -1);
    MEMORY[0x24269F7A0](v47, -1, -1);

    v5 = v64;
    a4 = v70;
    a2 = v71;
    v13 = v78;
    goto LABEL_6;
  }

  __break(1u);
}

void sub_24195EC68(uint64_t a1, unint64_t a2)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t aBlock[6];

  swift_bridgeObjectRetain_n();
  v4 = sub_2419AA028();
  v5 = sub_2419AA244();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    aBlock[0] = v7;
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    sub_24193F470(a1, a2, aBlock);
    sub_2419AA2EC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24193B000, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v7, -1, -1);
    MEMORY[0x24269F7A0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v8 = (void *)sub_2419AA0DC();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  aBlock[4] = (uint64_t)sub_24195F394;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_241956C98;
  aBlock[3] = (uint64_t)&block_descriptor_1;
  v10 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v10);

}

unint64_t sub_24195EE74()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257163FD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2419AB050;
  *(_QWORD *)(inited + 32) = 0x726F727245;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = sub_2419AA0DC();
  return sub_24194D8A4(inited);
}

uint64_t DevicePropertiesCalculator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_calendar;
  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return v0;
}

uint64_t DevicePropertiesCalculator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_calendar;
  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_24195EFF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v2;
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_24193D468;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v6;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)a2;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a2 + 16);
  return swift_task_switch();
}

unint64_t sub_24195F07C()
{
  unint64_t result;

  result = qword_2571640E8;
  if (!qword_2571640E8)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for DevicePropertiesDataRecord, &type metadata for DevicePropertiesDataRecord);
    atomic_store(result, (unint64_t *)&qword_2571640E8);
  }
  return result;
}

unint64_t sub_24195F0C4()
{
  unint64_t result;

  result = qword_2571640F0;
  if (!qword_2571640F0)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for DevicePropertiesResult, &type metadata for DevicePropertiesResult);
    atomic_store(result, (unint64_t *)&qword_2571640F0);
  }
  return result;
}

uint64_t destroy for DevicePropertiesResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s16MetricsFramework22DevicePropertiesResultVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DevicePropertiesResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DevicePropertiesResult(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DevicePropertiesResult()
{
  return &type metadata for DevicePropertiesResult;
}

uint64_t sub_24195F210()
{
  return type metadata accessor for DevicePropertiesCalculator();
}

uint64_t type metadata accessor for DevicePropertiesCalculator()
{
  uint64_t result;

  result = qword_257164128;
  if (!qword_257164128)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24195F254()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = sub_2419A9D64();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DevicePropertiesCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DevicePropertiesCalculator.__allocating_init(defaults:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DevicePropertiesCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 112) + *(_QWORD *)(*(_QWORD *)v2 + 112));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t sub_24195F370()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_24195F394()
{
  return sub_24195EE74();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24195F3B4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24195F3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24195F440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24195F488()
{
  return swift_task_switch();
}

uint64_t sub_24195F49C()
{
  return sub_2419AA418();
}

uint64_t SiriDigestMetricsReporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SiriDigestMetricsReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SiriDigestMetricsReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriDigestMetricsReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDigestMetricsReporter.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 80) + *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t DeviceSegmentsCohortsImpl.deinit()
{
  uint64_t v0;

  sub_24195FA30(v0 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_eventMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DeviceSegmentsCohortsImpl.__deallocating_deinit()
{
  uint64_t v0;

  sub_24195FA30(v0 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_eventMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id static DeviceSegments.toBiomeEvent(deviceSegments:)(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
  {
    v5 = *(unsigned __int8 *)(a1 + 28);
    v6 = *(unsigned int *)(a1 + 24);
    v7 = *(_QWORD *)(a1 + 8);
    v8 = *(_QWORD *)(a1 + 16);
    if ((*(_QWORD *)a1 & 0x100000000) != 0)
    {
      v4 = 0;
      if ((v7 & 0x100000000) != 0)
      {
LABEL_5:
        v3 = 0;
        v9 = v6 | (v5 << 32);
        if ((v8 & 0x100000000) != 0)
          goto LABEL_6;
        goto LABEL_10;
      }
    }
    else
    {
      v4 = (void *)sub_2419AA5D4();
      if ((v7 & 0x100000000) != 0)
        goto LABEL_5;
    }
    v3 = (void *)sub_2419AA5D4();
    v9 = v6 | (v5 << 32);
    if ((v8 & 0x100000000) != 0)
    {
LABEL_6:
      v2 = 0;
      if ((v9 & 0x100000000) != 0)
      {
LABEL_7:
        v1 = 0;
        goto LABEL_12;
      }
LABEL_11:
      v1 = (void *)sub_2419AA628();
      goto LABEL_12;
    }
LABEL_10:
    v2 = (void *)sub_2419AA628();
    if ((v9 & 0x100000000) != 0)
      goto LABEL_7;
    goto LABEL_11;
  }
  v1 = 0;
  v2 = 0;
  v3 = 0;
  v4 = 0;
LABEL_12:
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6C8]), sel_initWithSegmentType_segmentDataAvailabilityState_daysWithTwoValidAssistantTurnsPerWeek_daysWithTwoAssistantSpeechRequestsPerWeek_, v4, v3, v2, v1);

  return v10;
}

id static DeviceCohorts.toBiomeEvent(deviceCohorts:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  v2 = *a1;
  v1 = a1[1];
  v3 = (void *)a1[2];
  if ((unint64_t)v3 >= 2)
  {
    v6 = v3;
    objc_msgSend(v6, sel_startTimestampInSecondsSince1970);
    objc_msgSend(v6, sel_numberOfSeconds);
    v5 = (void *)sub_2419AA634();
    v4 = (void *)sub_2419AA628();
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6D8]), sel_initWithStartTimestampInSecondsSince1970_numberOfSeconds_, v5, v4);

  if (v3 != (void *)1)
  {
    if ((v2 & 0x100000000) != 0)
    {
      v9 = 0;
      if ((v1 & 0x100000000) != 0)
        goto LABEL_8;
    }
    else
    {
      v9 = (void *)sub_2419AA5D4();
      if ((v1 & 0x100000000) != 0)
      {
LABEL_8:
        v8 = 0;
        goto LABEL_11;
      }
    }
    v8 = (void *)sub_2419AA5D4();
    goto LABEL_11;
  }
  v8 = 0;
  v9 = 0;
LABEL_11:
  v10 = objc_allocWithZone(MEMORY[0x24BE0C6C0]);
  v11 = v7;
  v12 = objc_msgSend(v10, sel_initWithTimeInterval_cohortType_cohortDataAvailabilityState_, v11, v9, v8);

  return v12;
}

BOOL _s16MetricsFramework13DeviceCohortsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  _BOOL8 result;
  char v6;
  id v7;
  id v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 16);
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 4))
      return 0;
  }
  else
  {
    if (*(_DWORD *)a1 != *(_DWORD *)a2)
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 12) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 12))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8))
      v6 = *(_BYTE *)(a2 + 12);
    else
      v6 = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  result = (v2 | v4) == 0;
  if (v2)
  {
    if (v4)
    {
      sub_2419612E4();
      v7 = (id)v4;
      v8 = (id)v2;
      v9 = sub_2419AA28C();

      return v9 & 1;
    }
  }
  return result;
}

uint64_t _s16MetricsFramework14DeviceSegmentsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  char v3;
  int v4;
  char v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  char v11;
  char v12;
  int v13;

  v2 = *(_DWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 12);
  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 20);
  v6 = *(_DWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 28);
  v8 = *(unsigned __int8 *)(a2 + 20);
  v9 = *(unsigned __int8 *)(a2 + 28);
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 4))
      return 0;
  }
  else
  {
    if (*(_DWORD *)a1 == *(_DWORD *)a2)
      v11 = *(_BYTE *)(a2 + 4);
    else
      v11 = 1;
    if ((v11 & 1) != 0)
      return 0;
  }
  if ((v3 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 12))
      return 0;
  }
  else
  {
    if (v2 == *(_DWORD *)(a2 + 8))
      v12 = *(_BYTE *)(a2 + 12);
    else
      v12 = 1;
    if ((v12 & 1) != 0)
      return 0;
  }
  if ((v5 & 1) != 0)
  {
    if (((v8 ^ 1 | v7) & 1) != 0)
      return v8 & v9;
  }
  else
  {
    if (v4 == *(_DWORD *)(a2 + 16))
      v13 = *(unsigned __int8 *)(a2 + 20);
    else
      v13 = 1;
    if (((v13 | v7) & 1) != 0)
      return v9 & ~v13;
  }
  return (v6 == *(_DWORD *)(a2 + 24)) & ~v9;
}

uint64_t sub_24195FA30(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24195FA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_24195FA78(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

__n128 __swift_memcpy29_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DeviceSegments(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 29))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DeviceSegments(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 29) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DeviceSegments()
{
  return &type metadata for DeviceSegments;
}

uint64_t initializeBufferWithCopyOfBuffer for DeviceCohorts(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = v3;
  return a1;
}

void destroy for DeviceCohorts(uint64_t a1)
{

}

uint64_t assignWithCopy for DeviceCohorts(uint64_t a1, int *a2)
{
  int v3;
  int v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v3;
  v4 = a2[2];
  *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a1 + 16);
  v6 = (void *)*((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;

  return a1;
}

uint64_t assignWithTake for DeviceCohorts(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v3 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceCohorts(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceCohorts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceCohorts()
{
  return &type metadata for DeviceCohorts;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceSegmentsCohorts(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(uint64_t *, _QWORD, uint64_t, int *);
  id v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for EventMetadata(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_2419A9D1C();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
      if (v13(a2, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      v15 = v7[5];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      if (v13((uint64_t *)((char *)a2 + v15), 1, v11))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
      }
      v19 = v7[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v13((uint64_t *)((char *)a2 + v19), 1, v11))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v20, v21, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
      }
      v23 = v7[7];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v26 = v7[8];
      v27 = *(void **)((char *)a2 + v26);
      *(uint64_t *)((char *)a1 + v26) = (uint64_t)v27;
      v28 = v7[9];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v29[8] = v30[8];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v31 = v7[10];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v32[8] = v33[8];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v34 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      v35 = v27;
      v34(a1, 0, 1, v7);
    }
    v36 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v36) = *(uint64_t *)((char *)a2 + v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DeviceSegmentsCohorts(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v2 = (int *)type metadata accessor for EventMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v2 - 1) + 48))(a1, 1, v2))
  {
    v3 = sub_2419A9D1C();
    v4 = *(_QWORD *)(v3 - 8);
    v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (!v5(a1, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    v6 = a1 + v2[5];
    if (!v5(v6, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
    v7 = a1 + v2[6];
    if (!v5(v7, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);

  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for DeviceSegmentsCohorts(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t, int *);
  id v33;
  uint64_t v34;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_2419A9D1C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v13 = v6[5];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    v17 = v6[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v19, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    v21 = v6[7];
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = v6[8];
    v25 = *(void **)&a2[v24];
    *(_QWORD *)&a1[v24] = v25;
    v26 = v6[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v27[8] = v28[8];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v29 = v6[10];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v30[8] = v31[8];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v32 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
    v33 = v25;
    v32(a1, 0, 1, v6);
  }
  v34 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v34] = *(_QWORD *)&a2[v34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DeviceSegmentsCohorts(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, int *);
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_241960854((uint64_t)a1);
      goto LABEL_7;
    }
    v16 = sub_2419A9D1C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(a1, a2, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 24))(a1, a2, v16);
LABEL_22:
        v46 = v6[5];
        v47 = &a1[v46];
        v48 = &a2[v46];
        v49 = v18(&a1[v46], 1, v16);
        v50 = v18(v48, 1, v16);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v47, v48, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v47, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v47, v48, v16);
LABEL_28:
            v52 = v6[6];
            v53 = &a1[v52];
            v54 = &a2[v52];
            v55 = v18(&a1[v52], 1, v16);
            v56 = v18(v54, 1, v16);
            if (v55)
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v53, v54, v16);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v53, 0, 1, v16);
LABEL_34:
                v58 = v6[7];
                v59 = &a1[v58];
                v60 = &a2[v58];
                v61 = *(_QWORD *)v60;
                v59[8] = v60[8];
                *(_QWORD *)v59 = v61;
                v62 = v6[8];
                v63 = *(void **)&a1[v62];
                v64 = *(void **)&a2[v62];
                *(_QWORD *)&a1[v62] = v64;
                v65 = v64;

                v66 = v6[9];
                v67 = &a1[v66];
                v68 = &a2[v66];
                v69 = *(_QWORD *)v68;
                v67[8] = v68[8];
                *(_QWORD *)v67 = v69;
                v70 = v6[10];
                v71 = &a1[v70];
                v72 = &a2[v70];
                v73 = *(_QWORD *)v72;
                v71[8] = v72[8];
                *(_QWORD *)v71 = v73;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v53, v54, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
            }
            v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v47, v16);
        }
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_35;
  }
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(a2, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v21 = v6[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v13(&a2[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = v6[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v13(&a2[v25], 1, v11))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
  }
  v29 = v6[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)v30 = v32;
  v33 = v6[8];
  v34 = *(void **)&a2[v33];
  *(_QWORD *)&a1[v33] = v34;
  v35 = v6[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *(_QWORD *)v37;
  v36[8] = v37[8];
  *(_QWORD *)v36 = v38;
  v39 = v6[10];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *(_QWORD *)v41;
  v40[8] = v41[8];
  *(_QWORD *)v40 = v42;
  v43 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
  v44 = v34;
  v43(a1, 0, 1, v6);
LABEL_35:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241960854(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for DeviceSegmentsCohorts(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_2419A9D1C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v13 = v6[5];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    v17 = v6[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v19, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    v21 = v6[7];
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v24 = v6[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v25[8] = v26[8];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v27 = v6[10];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v28[8] = v29[8];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v30 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  return a1;
}

char *assignWithTake for DeviceSegmentsCohorts(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_241960854((uint64_t)a1);
      goto LABEL_7;
    }
    v16 = sub_2419A9D1C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(a1, a2, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 40))(a1, a2, v16);
LABEL_22:
        v39 = v6[5];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v42 = v18(&a1[v39], 1, v16);
        v43 = v18(v41, 1, v16);
        if (v42)
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v40, v41, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v40, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v40, v41, v16);
LABEL_28:
            v45 = v6[6];
            v46 = &a1[v45];
            v47 = &a2[v45];
            v48 = v18(&a1[v45], 1, v16);
            v49 = v18(v47, 1, v16);
            if (v48)
            {
              if (!v49)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v46, v47, v16);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v16);
LABEL_34:
                v51 = v6[7];
                v52 = &a1[v51];
                v53 = &a2[v51];
                *(_QWORD *)v52 = *(_QWORD *)v53;
                v52[8] = v53[8];
                v54 = v6[8];
                v55 = *(void **)&a1[v54];
                *(_QWORD *)&a1[v54] = *(_QWORD *)&a2[v54];

                v56 = v6[9];
                v57 = &a1[v56];
                v58 = &a2[v56];
                *(_QWORD *)v57 = *(_QWORD *)v58;
                v57[8] = v58[8];
                v59 = v6[10];
                v60 = &a1[v59];
                v61 = &a2[v59];
                v60[8] = v61[8];
                *(_QWORD *)v60 = *(_QWORD *)v61;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v49)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v46, v47, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v46, v16);
            }
            v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v40, v16);
        }
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_35;
  }
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(a2, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v21 = v6[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v13(&a2[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = v6[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v13(&a2[v25], 1, v11))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v26, v27, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
  }
  v29 = v6[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  v32 = v6[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v33[8] = v34[8];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v35 = v6[10];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v36[8] = v37[8];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_35:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceSegmentsCohorts()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241961054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceSegmentsCohorts()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2419610EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for DeviceSegmentsCohorts(uint64_t a1)
{
  return sub_241941450(a1, (uint64_t *)&unk_257164348);
}

void sub_24196117C()
{
  unint64_t v0;

  sub_2419611F0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2419611F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257164358[0])
  {
    type metadata accessor for EventMetadata(255);
    v0 = sub_2419AA2C8();
    if (!v1)
      atomic_store(v0, qword_257164358);
  }
}

uint64_t sub_241961244()
{
  return type metadata accessor for DeviceSegmentsCohortsImpl(0);
}

uint64_t type metadata accessor for DeviceSegmentsCohortsImpl(uint64_t a1)
{
  return sub_241941450(a1, qword_2571643B8);
}

void sub_241961260()
{
  unint64_t v0;

  sub_2419611F0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DeviceSegmentsCohortsImpl()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_2419612E4()
{
  unint64_t result;

  result = qword_2571644B8;
  if (!qword_2571644B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571644B8);
  }
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for AssetPenetrationPayload()
{
  return &type metadata for AssetPenetrationPayload;
}

uint64_t sub_241961358(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v15 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571644C0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2419617E8();
  sub_2419AA64C();
  v16 = a2;
  v17 = a3;
  v18 = a4;
  v19 = v15;
  sub_24196182C();
  sub_2419AA544();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_24196146C(char a1)
{
  return *(_QWORD *)&aStatusreassets[8 * a1];
}

uint64_t sub_24196148C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v14 = a5;
  v15 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164500);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241963CF0();
  sub_2419AA64C();
  LOBYTE(v17) = 0;
  sub_2419AA52C();
  if (!v5)
  {
    v11 = v14;
    v17 = v15;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164510);
    sub_241968830(&qword_257164518, &qword_257164510, (uint64_t (*)(void))sub_241963D34, MEMORY[0x24BEE12A0]);
    sub_2419AA544();
    v17 = v11;
    v16 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164528);
    sub_241968830(&qword_257164530, &qword_257164528, (uint64_t (*)(void))sub_241963D78, MEMORY[0x24BEE12A0]);
    sub_2419AA544();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_241961660()
{
  sub_2419AA5EC();
  sub_2419AA5F8();
  return sub_2419AA61C();
}

uint64_t sub_2419616A0()
{
  return sub_2419AA5F8();
}

uint64_t sub_2419616C4()
{
  sub_2419AA5EC();
  sub_2419AA5F8();
  return sub_2419AA61C();
}

unint64_t sub_241961700()
{
  return 0xD000000000000019;
}

uint64_t sub_24196171C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2419637CC(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_241961744(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_241961750()
{
  sub_2419617E8();
  return sub_2419AA658();
}

uint64_t sub_241961778()
{
  sub_2419617E8();
  return sub_2419AA664();
}

_QWORD *sub_2419617A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_241963850(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_2419617CC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_241961358(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_2419617E8()
{
  unint64_t result;

  result = qword_2571644C8;
  if (!qword_2571644C8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC8FC, &type metadata for AssetPenetrationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571644C8);
  }
  return result;
}

unint64_t sub_24196182C()
{
  unint64_t result;

  result = qword_2571644D0;
  if (!qword_2571644D0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC8D4, &type metadata for AssetDailyStatus);
    atomic_store(result, (unint64_t *)&qword_2571644D0);
  }
  return result;
}

uint64_t sub_241961878()
{
  char *v0;

  return sub_24196146C(*v0);
}

uint64_t sub_241961880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241963DBC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2419618A4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2419618B0()
{
  sub_241963CF0();
  return sub_2419AA658();
}

uint64_t sub_2419618D8()
{
  sub_241963CF0();
  return sub_2419AA664();
}

uint64_t sub_241961900@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_241963F40(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_24196192C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_24196148C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_241961948(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_241961980 + 4 * byte_2419AC6F0[a1]))(0xD00000000000001DLL, 0x80000002419B18A0);
}

uint64_t sub_241961980()
{
  return 0x6D614E6C61697274;
}

uint64_t sub_2419619A4()
{
  return 0x737465737361;
}

uint64_t sub_2419619B8()
{
  return 0x74756F6C6C6F72;
}

uint64_t sub_2419619D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v11;
  char v12;
  _BYTE v13[32];
  uint64_t v14;
  _BYTE v15[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571645C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241964708();
  sub_2419AA64C();
  v13[0] = 0;
  sub_2419AA52C();
  if (!v2)
  {
    v9 = *(_OWORD *)(v3 + 32);
    *(_OWORD *)v13 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)&v13[16] = v9;
    v14 = *(_QWORD *)(v3 + 48);
    v12 = 1;
    sub_24196474C();
    sub_2419AA544();
    *(_OWORD *)v13 = *(_OWORD *)(v3 + 56);
    *(_QWORD *)&v13[13] = *(_QWORD *)(v3 + 69);
    v12 = 2;
    sub_241964790();
    sub_2419AA544();
    sub_24194184C(v3 + 80, (uint64_t)v15, &qword_2571645E0);
    sub_24194184C((uint64_t)v15, (uint64_t)v13, &qword_2571645E0);
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571645E8);
    sub_241968830(&qword_2571645F0, &qword_2571645E8, (uint64_t (*)(void))sub_2419647D4, MEMORY[0x24BEE12A0]);
    sub_2419AA508();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_241961BD8(char a1)
{
  return *(_QWORD *)&aAssetlocassetv[8 * a1];
}

uint64_t sub_241961BF8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  _OWORD v11[2];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571646F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24196688C();
  sub_2419AA64C();
  LOBYTE(v11[0]) = 0;
  sub_2419AA52C();
  if (!v2)
  {
    v11[0] = *(_OWORD *)(v3 + 16);
    *(_QWORD *)((char *)v11 + 13) = *(_QWORD *)(v3 + 29);
    v10[15] = 1;
    sub_241964790();
    sub_2419AA544();
    LOBYTE(v11[0]) = 2;
    sub_2419AA52C();
    LOBYTE(v11[0]) = 3;
    sub_2419AA52C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_241961D7C()
{
  unsigned __int8 *v0;

  return sub_241961948(*v0);
}

uint64_t sub_241961D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241964818(a1, a2);
  *a3 = result;
  return result;
}

void sub_241961DA8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_241961DB4()
{
  sub_241964708();
  return sub_2419AA658();
}

uint64_t sub_241961DDC()
{
  sub_241964708();
  return sub_2419AA664();
}

double sub_241961E04@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_2419649C8(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_241961E5C(_QWORD *a1)
{
  return sub_2419619D0(a1);
}

uint64_t sub_241961EA4()
{
  char *v0;

  return sub_241961BD8(*v0);
}

uint64_t sub_241961EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241964D64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241961ED0()
{
  sub_24196688C();
  return sub_2419AA658();
}

uint64_t sub_241961EF8()
{
  sub_24196688C();
  return sub_2419AA664();
}

__n128 sub_241961F20@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_241964F44(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_241961F70(_QWORD *a1)
{
  return sub_241961BF8(a1);
}

uint64_t sub_241961F84(char a1)
{
  return *(_QWORD *)&aMajor_0[8 * a1];
}

uint64_t sub_241961F9C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v11 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571646E8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241966848();
  sub_2419AA64C();
  v14 = 0;
  sub_2419AA514();
  if (!v4)
  {
    v13 = 1;
    sub_2419AA514();
    v12 = 2;
    sub_2419AA514();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_241962104(char a1)
{
  return *(_QWORD *)&aDeploymerollou[8 * a1];
}

uint64_t sub_241962124(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571646D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241966804();
  sub_2419AA64C();
  v8[15] = 0;
  sub_2419AA550();
  if (!v1)
  {
    v8[14] = 1;
    sub_2419AA52C();
    v8[13] = 2;
    sub_2419AA52C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_241962260()
{
  char *v0;

  return sub_241961F84(*v0);
}

uint64_t sub_241962268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241965218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24196228C()
{
  sub_241966848();
  return sub_2419AA658();
}

uint64_t sub_2419622B4()
{
  sub_241966848();
  return sub_2419AA664();
}

uint64_t sub_2419622DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_241965344(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
    *(_DWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 12) = BYTE4(v5) & 1;
    *(_DWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 20) = BYTE4(v6) & 1;
  }
  return result;
}

uint64_t sub_241962324(_QWORD *a1)
{
  unsigned int *v1;

  return sub_241961F9C(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32), v1[2] | ((unint64_t)*((unsigned __int8 *)v1 + 12) << 32), v1[4] | ((unint64_t)*((unsigned __int8 *)v1 + 20) << 32));
}

uint64_t sub_24196237C()
{
  char *v0;

  return sub_241962104(*v0);
}

uint64_t sub_241962384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2419654E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2419623A8()
{
  sub_241966804();
  return sub_2419AA658();
}

uint64_t sub_2419623D0()
{
  sub_241966804();
  return sub_2419AA664();
}

double sub_2419623F8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_241965644(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_24196243C(_QWORD *a1)
{
  return sub_241962124(a1);
}

uint64_t sub_241962450(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0x7465737341666175;
}

uint64_t sub_241962494(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164580);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24196463C();
  sub_2419AA64C();
  v14 = a2;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257164590);
  sub_241968830(&qword_257164598, &qword_257164590, (uint64_t (*)(void))sub_241964680, MEMORY[0x24BEE12A0]);
  sub_2419AA544();
  if (!v3)
  {
    v14 = a3;
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571645A8);
    sub_241968830(&qword_2571645B0, &qword_2571645A8, (uint64_t (*)(void))sub_2419646C4, MEMORY[0x24BEE12A0]);
    sub_2419AA508();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_241962634()
{
  char *v0;

  return sub_241962450(*v0);
}

uint64_t sub_24196263C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241965820(a1, a2);
  *a3 = result;
  return result;
}

void sub_241962660(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24196266C()
{
  sub_24196463C();
  return sub_2419AA658();
}

uint64_t sub_241962694()
{
  sub_24196463C();
  return sub_2419AA664();
}

uint64_t sub_2419626BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_241965914(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_2419626E4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_241962494(a1, *v1, v1[1]);
}

uint64_t sub_2419626FC(char a1)
{
  return *(_QWORD *)&aAssetsetassets[8 * a1];
}

uint64_t sub_24196271C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  char v11[8];
  _BYTE v12[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164680);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2419666F4();
  sub_2419AA64C();
  v11[0] = 0;
  sub_2419AA4F0();
  if (!v2)
  {
    v11[0] = 1;
    sub_2419AA52C();
    sub_24194184C(v3 + 32, (uint64_t)v12, &qword_257164690);
    sub_24194184C((uint64_t)v12, (uint64_t)v11, &qword_257164690);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164698);
    sub_241968830(&qword_2571646A0, &qword_257164698, (uint64_t (*)(void))sub_241966738, MEMORY[0x24BEE12A0]);
    sub_2419AA508();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2419628BC()
{
  char *v0;

  return sub_2419626FC(*v0);
}

uint64_t sub_2419628C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2419668D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2419628E8()
{
  sub_2419666F4();
  return sub_2419AA658();
}

uint64_t sub_241962910()
{
  sub_2419666F4();
  return sub_2419AA664();
}

double sub_241962938@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_241966A1C(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_24196297C(_QWORD *a1)
{
  return sub_24196271C(a1);
}

uint64_t sub_2419629B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2419629EC + 4 * byte_2419AC6F4[a1]))(0xD000000000000010, 0x80000002419B18C0);
}

uint64_t sub_2419629EC()
{
  return 0x756F537465737361;
}

uint64_t sub_241962A0C()
{
  return 0x6570537465737361;
}

uint64_t sub_241962A30()
{
  return 0x6D614E7465737361;
}

uint64_t sub_241962A4C()
{
  return 0x7265567465737361;
}

uint64_t sub_241962A6C(uint64_t a1)
{
  return a1 + 8;
}

uint64_t sub_241962A94(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571647C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241968130();
  sub_2419AA64C();
  v8[15] = 0;
  sub_2419AA52C();
  if (!v1)
  {
    v8[14] = 1;
    sub_2419AA538();
    v8[13] = 2;
    sub_2419AA4F0();
    v8[12] = 3;
    sub_2419AA52C();
    v8[11] = 4;
    sub_2419AA4F0();
    v8[10] = 5;
    sub_2419AA55C();
    v8[9] = 6;
    sub_2419AA55C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_241962C70(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7069726373627573;
  else
    return 0x6269726373627573;
}

uint64_t sub_241962CC0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v11[0] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571646B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24196677C();
  sub_2419AA64C();
  v13 = 0;
  sub_2419AA52C();
  if (!v4)
  {
    v11[1] = v11[0];
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571646C0);
    sub_241968830(&qword_2571646C8, &qword_2571646C0, (uint64_t (*)(void))sub_2419667C0, MEMORY[0x24BEE12A0]);
    sub_2419AA544();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_241962E2C()
{
  unsigned __int8 *v0;

  return sub_2419629B4(*v0);
}

uint64_t sub_241962E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241966CD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241962E58()
{
  sub_241968130();
  return sub_2419AA658();
}

uint64_t sub_241962E80()
{
  sub_241968130();
  return sub_2419AA664();
}

double sub_241962EA8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_241966FBC(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_241962F00(_QWORD *a1)
{
  return sub_241962A94(a1);
}

uint64_t sub_241962F14()
{
  char *v0;

  return sub_241962C70(*v0);
}

uint64_t sub_241962F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24196735C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241962F40()
{
  sub_24196677C();
  return sub_2419AA658();
}

uint64_t sub_241962F68()
{
  sub_24196677C();
  return sub_2419AA664();
}

uint64_t sub_241962F90@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_241967474(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_241962FBC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_241962CC0(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_241962FD8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_241963010 + 4 * byte_2419AC6FB[a1]))(0xD000000000000010, 0x80000002419B1920);
}

uint64_t sub_241963010()
{
  return 0x7465537465737361;
}

uint64_t sub_241963048()
{
  return 0x696C416567617375;
}

uint64_t sub_241963068(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[8];
  _BYTE v13[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571647D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241968174();
  sub_2419AA64C();
  LOBYTE(v11) = 0;
  sub_2419AA52C();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 16);
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571647E8);
    sub_24196878C(&qword_2571647F0, MEMORY[0x24BEE44F8], MEMORY[0x24BEE12A0]);
    sub_2419AA544();
    sub_24194184C(v3 + 24, (uint64_t)v13, &qword_2571647F8);
    sub_24194184C((uint64_t)v13, (uint64_t)&v11, &qword_2571647F8);
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164800);
    sub_241968830(&qword_257164808, &qword_257164800, (uint64_t (*)(void))sub_2419681B8, MEMORY[0x24BEE12A0]);
    sub_2419AA508();
    sub_24194184C(v3 + 32, (uint64_t)v12, &qword_257164818);
    sub_24194184C((uint64_t)v12, (uint64_t)&v11, &qword_257164818);
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164820);
    sub_241968830(&qword_257164828, &qword_257164820, (uint64_t (*)(void))sub_2419681FC, MEMORY[0x24BEE12A0]);
    sub_2419AA508();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2419632D0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C61566567617375;
  else
    return 0x6D614E6567617375;
}

uint64_t sub_241963310(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2419633A8(a1, a2, a3, a4, a5, &qword_2571648A0, (void (*)(_QWORD *, uint64_t, uint64_t))sub_241968DEC);
}

uint64_t sub_24196333C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D614E7361696C61;
  else
    return 0x6C61567361696C61;
}

uint64_t sub_24196337C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2419633A8(a1, a2, a3, a4, a5, &qword_2571648B0, (void (*)(_QWORD *, uint64_t, uint64_t))sub_241968E30);
}

uint64_t sub_2419633A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];
  char v19;
  char v20;

  v18[2] = a3;
  v18[0] = a4;
  v18[1] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a7(v13, v14, v15);
  sub_2419AA64C();
  v20 = 0;
  v16 = v18[3];
  sub_2419AA52C();
  if (!v16)
  {
    v19 = 1;
    sub_2419AA52C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_2419634CC()
{
  unsigned __int8 *v0;

  return sub_241962FD8(*v0);
}

uint64_t sub_2419634D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241968240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2419634F8()
{
  sub_241968174();
  return sub_2419AA658();
}

uint64_t sub_241963520()
{
  sub_241968174();
  return sub_2419AA664();
}

double sub_241963548@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_24196841C(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_24196358C(_QWORD *a1)
{
  return sub_241963068(a1);
}

uint64_t sub_2419635C4()
{
  char *v0;

  return sub_2419632D0(*v0);
}

uint64_t sub_2419635CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241968E74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2419635F0()
{
  sub_241968DEC();
  return sub_2419AA658();
}

uint64_t sub_241963618()
{
  sub_241968DEC();
  return sub_2419AA664();
}

uint64_t sub_241963640@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241963760(a1, &qword_2571648C0, (void (*)(void))sub_241968DEC, a2);
}

uint64_t sub_24196366C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2419633A8(a1, *v1, v1[1], v1[2], v1[3], &qword_2571648A0, (void (*)(_QWORD *, uint64_t, uint64_t))sub_241968DEC);
}

BOOL sub_2419636A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2419636B8()
{
  char *v0;

  return sub_24196333C(*v0);
}

uint64_t sub_2419636C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241968F6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2419636E4()
{
  sub_241968E30();
  return sub_2419AA658();
}

uint64_t sub_24196370C()
{
  sub_241968E30();
  return sub_2419AA664();
}

uint64_t sub_241963734@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241963760(a1, &qword_2571648C8, (void (*)(void))sub_241968E30, a2);
}

uint64_t sub_241963760@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_241969064(a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

uint64_t sub_241963798(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2419633A8(a1, *v1, v1[1], v1[2], v1[3], &qword_2571648B0, (void (*)(_QWORD *, uint64_t, uint64_t))sub_241968E30);
}

uint64_t sub_2419637CC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x80000002419B1860)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_2419AA574();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

_QWORD *sub_241963850(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571644D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2419617E8();
  sub_2419AA640();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    sub_241963980();
    sub_2419AA4CC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v9;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_241963980()
{
  unint64_t result;

  result = qword_2571644E0;
  if (!qword_2571644E0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC8AC, &type metadata for AssetDailyStatus);
    atomic_store(result, (unint64_t *)&qword_2571644E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AssetPenetrationPayload.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for AssetPenetrationPayload.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_241963A58 + 4 * byte_2419AC6FF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_241963A78 + 4 * byte_2419AC704[v4]))();
}

_BYTE *sub_241963A58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_241963A78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_241963A80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_241963A88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_241963A90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_241963A98(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_241963AA4()
{
  return 0;
}

ValueMetadata *type metadata accessor for AssetPenetrationPayload.CodingKeys()
{
  return &type metadata for AssetPenetrationPayload.CodingKeys;
}

uint64_t _s16MetricsFramework16AssetDailyStatusVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s16MetricsFramework16AssetDailyStatusVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s16MetricsFramework16AssetDailyStatusVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16MetricsFramework16AssetDailyStatusVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AssetDailyStatus()
{
  return &type metadata for AssetDailyStatus;
}

unint64_t sub_241963C1C()
{
  unint64_t result;

  result = qword_2571644E8;
  if (!qword_2571644E8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC884, &type metadata for AssetPenetrationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571644E8);
  }
  return result;
}

unint64_t sub_241963C64()
{
  unint64_t result;

  result = qword_2571644F0;
  if (!qword_2571644F0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC7F4, &type metadata for AssetPenetrationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571644F0);
  }
  return result;
}

unint64_t sub_241963CAC()
{
  unint64_t result;

  result = qword_2571644F8;
  if (!qword_2571644F8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC81C, &type metadata for AssetPenetrationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571644F8);
  }
  return result;
}

unint64_t sub_241963CF0()
{
  unint64_t result;

  result = qword_257164508;
  if (!qword_257164508)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACAC4, &type metadata for AssetDailyStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164508);
  }
  return result;
}

unint64_t sub_241963D34()
{
  unint64_t result;

  result = qword_257164520;
  if (!qword_257164520)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACA9C, &type metadata for AssetSetStatus);
    atomic_store(result, (unint64_t *)&qword_257164520);
  }
  return result;
}

unint64_t sub_241963D78()
{
  unint64_t result;

  result = qword_257164538;
  if (!qword_257164538)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACA74, &type metadata for NamespaceStatus);
    atomic_store(result, (unint64_t *)&qword_257164538);
  }
  return result;
}

uint64_t sub_241963DBC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6552737574617473 && a2 == 0xEC0000006E6F7361;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465537465737361 && a2 == 0xEE00737574617453 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63617073656D616ELL && a2 == 0xEF73757461745365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_241963F40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164540);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241963CF0();
  sub_2419AA640();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v13) = 0;
    v7 = sub_2419AA4B4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164510);
    v12 = 1;
    sub_241968830(&qword_257164548, &qword_257164510, (uint64_t (*)(void))sub_2419641F0, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_2419AA4CC();
    v11 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164528);
    v12 = 2;
    sub_241968830(&qword_257164558, &qword_257164528, (uint64_t (*)(void))sub_241964234, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    v9 = v11;
    sub_2419AA4CC();
    if (v9)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v11;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      if (!v10)
        swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v7;
}

unint64_t sub_2419641F0()
{
  unint64_t result;

  result = qword_257164550;
  if (!qword_257164550)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACA4C, &type metadata for AssetSetStatus);
    atomic_store(result, (unint64_t *)&qword_257164550);
  }
  return result;
}

unint64_t sub_241964234()
{
  unint64_t result;

  result = qword_257164560;
  if (!qword_257164560)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACA24, &type metadata for NamespaceStatus);
    atomic_store(result, (unint64_t *)&qword_257164560);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetDailyStatus.CodingKeys()
{
  return &type metadata for AssetDailyStatus.CodingKeys;
}

uint64_t destroy for NamespaceStatus()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NamespaceStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 69) = *(_QWORD *)(a2 + 69);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NamespaceStatus(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v4;
  v5 = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v5;
  v6 = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for NamespaceStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NamespaceStatus()
{
  return &type metadata for NamespaceStatus;
}

_QWORD *assignWithCopy for AssetSetStatus(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AssetSetStatus()
{
  return &type metadata for AssetSetStatus;
}

unint64_t sub_241964568()
{
  unint64_t result;

  result = qword_257164568;
  if (!qword_257164568)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC9FC, &type metadata for AssetDailyStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164568);
  }
  return result;
}

unint64_t sub_2419645B0()
{
  unint64_t result;

  result = qword_257164570;
  if (!qword_257164570)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC96C, &type metadata for AssetDailyStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164570);
  }
  return result;
}

unint64_t sub_2419645F8()
{
  unint64_t result;

  result = qword_257164578;
  if (!qword_257164578)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC994, &type metadata for AssetDailyStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164578);
  }
  return result;
}

unint64_t sub_24196463C()
{
  unint64_t result;

  result = qword_257164588;
  if (!qword_257164588)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACEB4, &type metadata for AssetSetStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164588);
  }
  return result;
}

unint64_t sub_241964680()
{
  unint64_t result;

  result = qword_2571645A0;
  if (!qword_2571645A0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACE8C, &type metadata for UAFAssetSet);
    atomic_store(result, (unint64_t *)&qword_2571645A0);
  }
  return result;
}

unint64_t sub_2419646C4()
{
  unint64_t result;

  result = qword_2571645B8;
  if (!qword_2571645B8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACE64, &type metadata for UAFAssetSubscription);
    atomic_store(result, (unint64_t *)&qword_2571645B8);
  }
  return result;
}

unint64_t sub_241964708()
{
  unint64_t result;

  result = qword_2571645C8;
  if (!qword_2571645C8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACE14, &type metadata for NamespaceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571645C8);
  }
  return result;
}

unint64_t sub_24196474C()
{
  unint64_t result;

  result = qword_2571645D0;
  if (!qword_2571645D0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACDEC, &type metadata for Rollout);
    atomic_store(result, (unint64_t *)&qword_2571645D0);
  }
  return result;
}

unint64_t sub_241964790()
{
  unint64_t result;

  result = qword_2571645D8;
  if (!qword_2571645D8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACDC4, &type metadata for Version);
    atomic_store(result, (unint64_t *)&qword_2571645D8);
  }
  return result;
}

unint64_t sub_2419647D4()
{
  unint64_t result;

  result = qword_2571645F8;
  if (!qword_2571645F8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACD9C, &type metadata for NamespaceAsset);
    atomic_store(result, (unint64_t *)&qword_2571645F8);
  }
  return result;
}

uint64_t sub_241964818(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6D614E6C61697274 && a2 == 0xEE00656361707365;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F6C6C6F72 && a2 == 0xE700000000000000 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002419B18A0 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737465737361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2419649C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164628);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241964708();
  sub_2419AA640();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v30) = 0;
    v9 = sub_2419AA4B4();
    v11 = v10;
    v29 = v9;
    v36 = 1;
    sub_241965BB0();
    swift_bridgeObjectRetain();
    sub_2419AA4CC();
    v35 = v30;
    v12 = v32;
    v13 = v34;
    v25 = v33;
    v26 = v31;
    v36 = 2;
    sub_241965BF4();
    v28 = v12;
    swift_bridgeObjectRetain();
    v27 = v13;
    swift_bridgeObjectRetain();
    sub_2419AA4CC();
    v23 = BYTE4(v30);
    v24 = v30;
    v21 = BYTE4(v31);
    v22 = v31;
    v19 = BYTE4(v32);
    v20 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571645E8);
    v36 = 3;
    sub_241968830(&qword_257164640, &qword_2571645E8, (uint64_t (*)(void))sub_241965C38, MEMORY[0x24BEE12D0]);
    sub_2419AA490();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v15 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    v16 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v29;
    *(_QWORD *)(a2 + 8) = v11;
    *(_DWORD *)(a2 + 16) = v35;
    *(_QWORD *)(a2 + 24) = v26;
    *(_QWORD *)(a2 + 32) = v15;
    *(_QWORD *)(a2 + 40) = v25;
    *(_QWORD *)(a2 + 48) = v16;
    *(_DWORD *)(a2 + 56) = v24;
    *(_BYTE *)(a2 + 60) = v23;
    *(_DWORD *)(a2 + 64) = v22;
    *(_BYTE *)(a2 + 68) = v21;
    *(_DWORD *)(a2 + 72) = v20;
    *(_BYTE *)(a2 + 76) = v19;
    *(_QWORD *)(a2 + 80) = v14;
  }
  return result;
}

uint64_t sub_241964D64(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x636F4C7465737361 && a2 == 0xEB00000000656C61;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265567465737361 && a2 == 0xEC0000006E6F6973 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E7465737361 && a2 == 0xE900000000000065 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E6C61697274 && a2 == 0xEE00656361707365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_241964F44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned __int8 v28;
  int v29;
  unsigned __int8 v30;
  int v31;
  unsigned __int8 v32;
  int v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164748);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24196688C();
  sub_2419AA640();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v27) = 0;
  v9 = sub_2419AA4B4();
  v11 = v10;
  v34 = 1;
  sub_241965BF4();
  swift_bridgeObjectRetain();
  sub_2419AA4CC();
  v33 = v27;
  v25 = v29;
  v26 = v28;
  v23 = v31;
  v24 = v30;
  v22 = v32;
  LOBYTE(v27) = 2;
  v20 = sub_2419AA4B4();
  v21 = v12;
  LOBYTE(v27) = 3;
  swift_bridgeObjectRetain();
  v13 = sub_2419AA4B4();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  v18 = v21;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v33;
  *(_BYTE *)(a2 + 20) = v26;
  *(_DWORD *)(a2 + 24) = v25;
  *(_BYTE *)(a2 + 28) = v24;
  *(_DWORD *)(a2 + 32) = v23;
  *(_BYTE *)(a2 + 36) = v22;
  *(_QWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v17;
  *(_QWORD *)(a2 + 64) = v15;
  return result;
}

uint64_t sub_241965218(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x726F6A616DLL && a2 == 0xE500000000000000;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6E696DLL && a2 == 0xE500000000000000 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6863746170 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_241965344(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164740);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241966848();
  sub_2419AA640();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11[15] = 0;
  v7 = sub_2419AA49C();
  v11[14] = 1;
  v8 = sub_2419AA49C();
  v11[13] = 2;
  v9 = sub_2419AA49C();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11[12] = BYTE4(v7) & 1;
  v11[8] = BYTE4(v8) & 1;
  v11[4] = BYTE4(v9) & 1;
  return v7 | ((HIDWORD(v7) & 1) << 32);
}

uint64_t sub_2419654E8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x656D796F6C706564 && a2 == 0xEA0000000000746ELL || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4974756F6C6C6F72 && a2 == 0xE900000000000064 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6150726F74636166 && a2 == 0xEA00000000006B63)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_241965644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164738);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241966804();
  sub_2419AA640();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v23 = 0;
  v9 = sub_2419AA4D8();
  v22 = 1;
  v10 = sub_2419AA4B4();
  v12 = v11;
  v20 = v10;
  v21 = 2;
  swift_bridgeObjectRetain();
  v13 = sub_2419AA4B4();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_DWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v20;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v15;
  return result;
}

uint64_t sub_241965820(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7465737341666175 && a2 == 0xEC00000073746553;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002419B1880)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241965914(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164600);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_24196463C();
  sub_2419AA640();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164590);
    HIBYTE(v9) = 0;
    sub_241968830(&qword_257164608, &qword_257164590, (uint64_t (*)(void))sub_241965B28, MEMORY[0x24BEE12D0]);
    sub_2419AA4CC();
    v7 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571645A8);
    HIBYTE(v9) = 1;
    sub_241968830(&qword_257164618, &qword_2571645A8, (uint64_t (*)(void))sub_241965B6C, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_2419AA490();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_241965B28()
{
  unint64_t result;

  result = qword_257164610;
  if (!qword_257164610)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACD74, &type metadata for UAFAssetSet);
    atomic_store(result, (unint64_t *)&qword_257164610);
  }
  return result;
}

unint64_t sub_241965B6C()
{
  unint64_t result;

  result = qword_257164620;
  if (!qword_257164620)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACD4C, &type metadata for UAFAssetSubscription);
    atomic_store(result, (unint64_t *)&qword_257164620);
  }
  return result;
}

unint64_t sub_241965BB0()
{
  unint64_t result;

  result = qword_257164630;
  if (!qword_257164630)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACD24, &type metadata for Rollout);
    atomic_store(result, (unint64_t *)&qword_257164630);
  }
  return result;
}

unint64_t sub_241965BF4()
{
  unint64_t result;

  result = qword_257164638;
  if (!qword_257164638)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACCFC, &type metadata for Version);
    atomic_store(result, (unint64_t *)&qword_257164638);
  }
  return result;
}

unint64_t sub_241965C38()
{
  unint64_t result;

  result = qword_257164648;
  if (!qword_257164648)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACCD4, &type metadata for NamespaceAsset);
    atomic_store(result, (unint64_t *)&qword_257164648);
  }
  return result;
}

ValueMetadata *type metadata accessor for NamespaceStatus.CodingKeys()
{
  return &type metadata for NamespaceStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetSetStatus.CodingKeys()
{
  return &type metadata for AssetSetStatus.CodingKeys;
}

uint64_t destroy for NamespaceAsset()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NamespaceAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 29) = *(_QWORD *)(a2 + 29);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NamespaceAsset(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  v5 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  v6 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NamespaceAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NamespaceAsset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NamespaceAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NamespaceAsset()
{
  return &type metadata for NamespaceAsset;
}

__n128 __swift_memcpy21_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Version(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 21))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Version(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 21) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Version()
{
  return &type metadata for Version;
}

uint64_t destroy for Rollout()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Rollout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Rollout(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Rollout(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Rollout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Rollout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Rollout()
{
  return &type metadata for Rollout;
}

uint64_t destroy for UAFAssetSubscription()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s16MetricsFramework20UAFAssetSubscriptionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UAFAssetSubscription(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UAFAssetSubscription(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UAFAssetSubscription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UAFAssetSubscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFAssetSubscription()
{
  return &type metadata for UAFAssetSubscription;
}

uint64_t destroy for UAFAssetSet()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for UAFAssetSet(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UAFAssetSet(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UAFAssetSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UAFAssetSet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UAFAssetSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFAssetSet()
{
  return &type metadata for UAFAssetSet;
}

unint64_t sub_241966548()
{
  unint64_t result;

  result = qword_257164650;
  if (!qword_257164650)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACBF4, &type metadata for AssetSetStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164650);
  }
  return result;
}

unint64_t sub_241966590()
{
  unint64_t result;

  result = qword_257164658;
  if (!qword_257164658)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACCAC, &type metadata for NamespaceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164658);
  }
  return result;
}

unint64_t sub_2419665D8()
{
  unint64_t result;

  result = qword_257164660;
  if (!qword_257164660)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACC1C, &type metadata for NamespaceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164660);
  }
  return result;
}

unint64_t sub_241966620()
{
  unint64_t result;

  result = qword_257164668;
  if (!qword_257164668)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACC44, &type metadata for NamespaceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164668);
  }
  return result;
}

unint64_t sub_241966668()
{
  unint64_t result;

  result = qword_257164670;
  if (!qword_257164670)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACB64, &type metadata for AssetSetStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164670);
  }
  return result;
}

unint64_t sub_2419666B0()
{
  unint64_t result;

  result = qword_257164678;
  if (!qword_257164678)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACB8C, &type metadata for AssetSetStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164678);
  }
  return result;
}

unint64_t sub_2419666F4()
{
  unint64_t result;

  result = qword_257164688;
  if (!qword_257164688)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD498, &type metadata for UAFAssetSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164688);
  }
  return result;
}

unint64_t sub_241966738()
{
  unint64_t result;

  result = qword_2571646A8;
  if (!qword_2571646A8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD470, &type metadata for UAFAsset);
    atomic_store(result, (unint64_t *)&qword_2571646A8);
  }
  return result;
}

unint64_t sub_24196677C()
{
  unint64_t result;

  result = qword_2571646B8;
  if (!qword_2571646B8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD420, &type metadata for UAFAssetSubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571646B8);
  }
  return result;
}

unint64_t sub_2419667C0()
{
  unint64_t result;

  result = qword_2571646D0;
  if (!qword_2571646D0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD3F8, &type metadata for UAFSubscription);
    atomic_store(result, (unint64_t *)&qword_2571646D0);
  }
  return result;
}

unint64_t sub_241966804()
{
  unint64_t result;

  result = qword_2571646E0;
  if (!qword_2571646E0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD3A8, &type metadata for Rollout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571646E0);
  }
  return result;
}

unint64_t sub_241966848()
{
  unint64_t result;

  result = qword_2571646F0;
  if (!qword_2571646F0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD358, &type metadata for Version.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571646F0);
  }
  return result;
}

unint64_t sub_24196688C()
{
  unint64_t result;

  result = qword_257164700;
  if (!qword_257164700)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD308, &type metadata for NamespaceAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164700);
  }
  return result;
}

uint64_t sub_2419668D0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7465537465737361 && a2 == 0xEA00000000006449;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465537465737361 && a2 == 0xEC000000656D614ELL || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x737465737361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_241966A1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164708);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2419666F4();
  sub_2419AA640();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
    v9 = sub_2419AA46C();
    v11 = v10;
    v19 = v9;
    v22 = 1;
    swift_bridgeObjectRetain();
    v12 = sub_2419AA4B4();
    v14 = v13;
    v18 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164698);
    v21 = 2;
    sub_241968830(&qword_257164710, &qword_257164698, (uint64_t (*)(void))sub_241966C8C, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_2419AA490();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = v20;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *a2 = v19;
    a2[1] = v11;
    a2[2] = v18;
    a2[3] = v14;
    a2[4] = v15;
  }
  return result;
}

unint64_t sub_241966C8C()
{
  unint64_t result;

  result = qword_257164718;
  if (!qword_257164718)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD2E0, &type metadata for UAFAsset);
    atomic_store(result, (unint64_t *)&qword_257164718);
  }
  return result;
}

uint64_t sub_241966CD0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x756F537465737361 && a2 == 0xEB00000000656372;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002419B18C0 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570537465737361 && a2 == 0xEE00726569666963 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E7465737361 && a2 == 0xE900000000000065 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7265567465737361 && a2 == 0xEC0000006E6F6973 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002419B18E0 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002419B1900)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_241966FBC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164838);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241968130();
  sub_2419AA640();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v37 = 0;
    v9 = sub_2419AA4B4();
    v11 = v10;
    v36 = 1;
    swift_bridgeObjectRetain();
    v30 = sub_2419AA4C0();
    v35 = 2;
    v27 = sub_2419AA46C();
    v28 = v9;
    v34 = 3;
    v29 = v12;
    swift_bridgeObjectRetain();
    v13 = sub_2419AA4B4();
    v15 = v14;
    v25 = v13;
    v26 = a2;
    v33 = 4;
    swift_bridgeObjectRetain();
    v16 = sub_2419AA46C();
    v18 = v17;
    v24 = v16;
    v32 = 5;
    swift_bridgeObjectRetain();
    v23 = sub_2419AA4E4();
    v31 = 6;
    v19 = sub_2419AA4E4();
    v30 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v29;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v22 = v26;
    *v26 = v28;
    v22[1] = v11;
    *((_BYTE *)v22 + 16) = v30;
    v22[3] = v27;
    v22[4] = v20;
    v22[5] = v25;
    v22[6] = v15;
    v22[7] = v24;
    v22[8] = v18;
    v22[9] = v23;
    v22[10] = v19;
  }
  return result;
}

uint64_t sub_24196735C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6269726373627573 && a2 == 0xEE00656D614E7265;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069726373627573 && a2 == 0xED0000736E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241967474(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164720);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24196677C();
  sub_2419AA640();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    v7 = sub_2419AA4B4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571646C0);
    v9[30] = 1;
    sub_241968830(&qword_257164728, &qword_2571646C0, (uint64_t (*)(void))sub_241967664, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_2419AA4CC();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_241967664()
{
  unint64_t result;

  result = qword_257164730;
  if (!qword_257164730)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD2B8, &type metadata for UAFSubscription);
    atomic_store(result, (unint64_t *)&qword_257164730);
  }
  return result;
}

ValueMetadata *type metadata accessor for NamespaceAsset.CodingKeys()
{
  return &type metadata for NamespaceAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for Version.CodingKeys()
{
  return &type metadata for Version.CodingKeys;
}

ValueMetadata *type metadata accessor for Rollout.CodingKeys()
{
  return &type metadata for Rollout.CodingKeys;
}

ValueMetadata *type metadata accessor for UAFAssetSubscription.CodingKeys()
{
  return &type metadata for UAFAssetSubscription.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ProductId(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s16MetricsFramework16AssetDailyStatusV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2419677C4 + 4 * byte_2419AC70E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2419677F8 + 4 * byte_2419AC709[v4]))();
}

uint64_t sub_2419677F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241967800(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241967808);
  return result;
}

uint64_t sub_241967814(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24196781CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_241967820(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241967828(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UAFAssetSet.CodingKeys()
{
  return &type metadata for UAFAssetSet.CodingKeys;
}

uint64_t destroy for UAFSubscription()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for UAFSubscription(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UAFSubscription(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UAFSubscription(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UAFSubscription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UAFSubscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFSubscription()
{
  return &type metadata for UAFSubscription;
}

uint64_t destroy for UAFAsset()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UAFAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UAFAsset(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for UAFAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t _s16MetricsFramework8UAFAssetVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_241967C94(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFAsset()
{
  return &type metadata for UAFAsset;
}

unint64_t sub_241967CFC()
{
  unint64_t result;

  result = qword_257164750;
  if (!qword_257164750)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACFB0, &type metadata for UAFAssetSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164750);
  }
  return result;
}

unint64_t sub_241967D44()
{
  unint64_t result;

  result = qword_257164758;
  if (!qword_257164758)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD068, &type metadata for UAFAssetSubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164758);
  }
  return result;
}

unint64_t sub_241967D8C()
{
  unint64_t result;

  result = qword_257164760;
  if (!qword_257164760)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD120, &type metadata for Rollout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164760);
  }
  return result;
}

unint64_t sub_241967DD4()
{
  unint64_t result;

  result = qword_257164768;
  if (!qword_257164768)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD1D8, &type metadata for Version.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164768);
  }
  return result;
}

unint64_t sub_241967E1C()
{
  unint64_t result;

  result = qword_257164770;
  if (!qword_257164770)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD290, &type metadata for NamespaceAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164770);
  }
  return result;
}

unint64_t sub_241967E64()
{
  unint64_t result;

  result = qword_257164778;
  if (!qword_257164778)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD200, &type metadata for NamespaceAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164778);
  }
  return result;
}

unint64_t sub_241967EAC()
{
  unint64_t result;

  result = qword_257164780;
  if (!qword_257164780)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD228, &type metadata for NamespaceAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164780);
  }
  return result;
}

unint64_t sub_241967EF4()
{
  unint64_t result;

  result = qword_257164788;
  if (!qword_257164788)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD148, &type metadata for Version.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164788);
  }
  return result;
}

unint64_t sub_241967F3C()
{
  unint64_t result;

  result = qword_257164790;
  if (!qword_257164790)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD170, &type metadata for Version.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164790);
  }
  return result;
}

unint64_t sub_241967F84()
{
  unint64_t result;

  result = qword_257164798;
  if (!qword_257164798)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD090, &type metadata for Rollout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164798);
  }
  return result;
}

unint64_t sub_241967FCC()
{
  unint64_t result;

  result = qword_2571647A0;
  if (!qword_2571647A0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD0B8, &type metadata for Rollout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571647A0);
  }
  return result;
}

unint64_t sub_241968014()
{
  unint64_t result;

  result = qword_2571647A8;
  if (!qword_2571647A8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACFD8, &type metadata for UAFAssetSubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571647A8);
  }
  return result;
}

unint64_t sub_24196805C()
{
  unint64_t result;

  result = qword_2571647B0;
  if (!qword_2571647B0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD000, &type metadata for UAFAssetSubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571647B0);
  }
  return result;
}

unint64_t sub_2419680A4()
{
  unint64_t result;

  result = qword_2571647B8;
  if (!qword_2571647B8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACF20, &type metadata for UAFAssetSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571647B8);
  }
  return result;
}

unint64_t sub_2419680EC()
{
  unint64_t result;

  result = qword_2571647C0;
  if (!qword_2571647C0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ACF48, &type metadata for UAFAssetSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571647C0);
  }
  return result;
}

unint64_t sub_241968130()
{
  unint64_t result;

  result = qword_2571647D0;
  if (!qword_2571647D0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD764, &type metadata for UAFAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571647D0);
  }
  return result;
}

unint64_t sub_241968174()
{
  unint64_t result;

  result = qword_2571647E0;
  if (!qword_2571647E0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD714, &type metadata for UAFSubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571647E0);
  }
  return result;
}

unint64_t sub_2419681B8()
{
  unint64_t result;

  result = qword_257164810;
  if (!qword_257164810)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD6EC, &type metadata for AssetSetUsage);
    atomic_store(result, (unint64_t *)&qword_257164810);
  }
  return result;
}

unint64_t sub_2419681FC()
{
  unint64_t result;

  result = qword_257164830;
  if (!qword_257164830)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD6C4, &type metadata for UsageAlias);
    atomic_store(result, (unint64_t *)&qword_257164830);
  }
  return result;
}

uint64_t sub_241968240(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002419B1920 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465537465737361 && a2 == 0xEF73656369646E49 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7465537465737361 && a2 == 0xEE00736567617355 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696C416567617375 && a2 == 0xEC00000073657361)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24196841C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164840);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241968174();
  sub_2419AA640();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v21) = 0;
  v9 = sub_2419AA4B4();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571647E8);
  v20 = 1;
  sub_24196878C(&qword_257164848, MEMORY[0x24BEE4520], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_2419AA4CC();
  v18 = v9;
  v12 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257164800);
  v20 = 2;
  sub_241968830(&qword_257164850, &qword_257164800, (uint64_t (*)(void))sub_2419687EC, MEMORY[0x24BEE12D0]);
  v19 = v12;
  swift_bridgeObjectRetain();
  sub_2419AA490();
  v13 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257164820);
  v20 = 3;
  sub_241968830(&qword_257164860, &qword_257164820, (uint64_t (*)(void))sub_241968894, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_2419AA490();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v21;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v19;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v18;
  a2[1] = v11;
  a2[2] = v15;
  a2[3] = v13;
  a2[4] = v14;
  return result;
}

uint64_t sub_24196878C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571647E8);
    v8 = a2;
    result = MEMORY[0x24269F6EC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2419687EC()
{
  unint64_t result;

  result = qword_257164858;
  if (!qword_257164858)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD69C, &type metadata for AssetSetUsage);
    atomic_store(result, (unint64_t *)&qword_257164858);
  }
  return result;
}

uint64_t sub_241968830(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x24269F6EC](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241968894()
{
  unint64_t result;

  result = qword_257164868;
  if (!qword_257164868)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD674, &type metadata for UsageAlias);
    atomic_store(result, (unint64_t *)&qword_257164868);
  }
  return result;
}

uint64_t _s16MetricsFramework15NamespaceStatusV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_241968924 + 4 * byte_2419AC718[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_241968958 + 4 * byte_2419AC713[v4]))();
}

uint64_t sub_241968958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241968960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241968968);
  return result;
}

uint64_t sub_241968974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24196897CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_241968980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241968988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UAFSubscription.CodingKeys()
{
  return &type metadata for UAFSubscription.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for UAFAsset.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2419689F0 + 4 * byte_2419AC722[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_241968A24 + 4 * byte_2419AC71D[v4]))();
}

uint64_t sub_241968A24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241968A2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241968A34);
  return result;
}

uint64_t sub_241968A40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241968A48);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_241968A4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241968A54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UAFAsset.CodingKeys()
{
  return &type metadata for UAFAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for UsageAlias()
{
  return &type metadata for UsageAlias;
}

uint64_t _s16MetricsFramework13AssetSetUsageVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s16MetricsFramework13AssetSetUsageVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s16MetricsFramework13AssetSetUsageVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s16MetricsFramework13AssetSetUsageVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16MetricsFramework13AssetSetUsageVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_241968BEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetSetUsage()
{
  return &type metadata for AssetSetUsage;
}

unint64_t sub_241968C40()
{
  unint64_t result;

  result = qword_257164870;
  if (!qword_257164870)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD594, &type metadata for UAFAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164870);
  }
  return result;
}

unint64_t sub_241968C88()
{
  unint64_t result;

  result = qword_257164878;
  if (!qword_257164878)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD64C, &type metadata for UAFSubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164878);
  }
  return result;
}

unint64_t sub_241968CD0()
{
  unint64_t result;

  result = qword_257164880;
  if (!qword_257164880)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD5BC, &type metadata for UAFSubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164880);
  }
  return result;
}

unint64_t sub_241968D18()
{
  unint64_t result;

  result = qword_257164888;
  if (!qword_257164888)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD5E4, &type metadata for UAFSubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164888);
  }
  return result;
}

unint64_t sub_241968D60()
{
  unint64_t result;

  result = qword_257164890;
  if (!qword_257164890)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD504, &type metadata for UAFAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164890);
  }
  return result;
}

unint64_t sub_241968DA8()
{
  unint64_t result;

  result = qword_257164898;
  if (!qword_257164898)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD52C, &type metadata for UAFAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164898);
  }
  return result;
}

unint64_t sub_241968DEC()
{
  unint64_t result;

  result = qword_2571648A8;
  if (!qword_2571648A8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD974, &type metadata for AssetSetUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571648A8);
  }
  return result;
}

unint64_t sub_241968E30()
{
  unint64_t result;

  result = qword_2571648B8;
  if (!qword_2571648B8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD924, &type metadata for UsageAlias.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571648B8);
  }
  return result;
}

uint64_t sub_241968E74(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6D614E6567617375 && a2 == 0xE900000000000065;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61566567617375 && a2 == 0xEA00000000006575)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241968F6C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C61567361696C61 && a2 == 0xEA00000000006575;
  if (v3 || (sub_2419AA574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E7361696C61 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2419AA574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241969064(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v14 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  a3();
  sub_2419AA640();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v10 = v6;
    v16 = 0;
    v11 = v14;
    v9 = sub_2419AA4B4();
    v15 = 1;
    swift_bridgeObjectRetain();
    sub_2419AA4B4();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

ValueMetadata *type metadata accessor for UsageAlias.CodingKeys()
{
  return &type metadata for UsageAlias.CodingKeys;
}

uint64_t _s16MetricsFramework14AssetSetStatusV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24196927C + 4 * byte_2419AC72C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2419692B0 + 4 * byte_2419AC727[v4]))();
}

uint64_t sub_2419692B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2419692B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2419692C0);
  return result;
}

uint64_t sub_2419692CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2419692D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2419692D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2419692E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetSetUsage.CodingKeys()
{
  return &type metadata for AssetSetUsage.CodingKeys;
}

unint64_t sub_241969300()
{
  unint64_t result;

  result = qword_2571648D0;
  if (!qword_2571648D0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD844, &type metadata for AssetSetUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571648D0);
  }
  return result;
}

unint64_t sub_241969348()
{
  unint64_t result;

  result = qword_2571648D8;
  if (!qword_2571648D8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD8FC, &type metadata for UsageAlias.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571648D8);
  }
  return result;
}

unint64_t sub_241969390()
{
  unint64_t result;

  result = qword_2571648E0;
  if (!qword_2571648E0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD86C, &type metadata for UsageAlias.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571648E0);
  }
  return result;
}

unint64_t sub_2419693D8()
{
  unint64_t result;

  result = qword_2571648E8;
  if (!qword_2571648E8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD894, &type metadata for UsageAlias.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571648E8);
  }
  return result;
}

unint64_t sub_241969420()
{
  unint64_t result;

  result = qword_2571648F0;
  if (!qword_2571648F0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD7B4, &type metadata for AssetSetUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571648F0);
  }
  return result;
}

unint64_t sub_241969468()
{
  unint64_t result;

  result = qword_2571648F8;
  if (!qword_2571648F8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AD7DC, &type metadata for AssetSetUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571648F8);
  }
  return result;
}

uint64_t SiriDigestMetricsDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SiriDigestMetricsDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_24196957C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_241969594()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: SiriDigestMetricsDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SiriDigestMetricsDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriDigestMetricsDataProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2419696D8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for SiriDigestMetricsDataRecord()
{
  return &type metadata for SiriDigestMetricsDataRecord;
}

uint64_t sub_241969704()
{
  return type metadata accessor for SiriDigestMetricsDataProvider();
}

uint64_t type metadata accessor for SiriDigestMetricsDataProvider()
{
  uint64_t result;

  result = qword_257164940;
  if (!qword_257164940)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for SiriDigestMetricsDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDigestMetricsDataProvider.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SiriDigestMetricsDataProvider.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t sub_2419697C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2419697FC + 4 * byte_2419ADB80[a1]))(0xD000000000000013, 0x80000002419B00C0);
}

uint64_t sub_2419697FC(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_2419698D0()
{
  return 0x7954656369766564;
}

uint64_t sub_24196990C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_241969944 + 4 * byte_2419ADB8C[a1]))(0xD000000000000013, 0x80000002419B00C0);
}

uint64_t sub_241969944(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_241969A18()
{
  return 0x7954656369766564;
}

uint64_t sub_241969A54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2419697C4(*a1);
  v5 = v4;
  if (v3 == sub_2419697C4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_2419AA574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_241969ADC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2419AA5EC();
  sub_2419697C4(v1);
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_241969B3C()
{
  unsigned __int8 *v0;

  sub_2419697C4(*v0);
  sub_2419AA148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241969B7C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2419AA5EC();
  sub_2419697C4(v1);
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_241969BD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24196C4B8();
  *a1 = result;
  return result;
}

uint64_t sub_241969C04@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2419697C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_241969C2C()
{
  unsigned __int8 *v0;

  return sub_24196990C(*v0);
}

uint64_t sub_241969C34@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24196C4B8();
  *a1 = result;
  return result;
}

void sub_241969C58(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

void sub_241969C64(_QWORD *a1@<X8>)
{
  *a1 = &unk_2511C3C78;
}

uint64_t sub_241969C74()
{
  sub_24196AEC4();
  return sub_2419AA658();
}

uint64_t sub_241969C9C()
{
  sub_24196AEC4();
  return sub_2419AA664();
}

_QWORD *sub_241969CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void (*v7)(_BYTE *, uint64_t, uint64_t);
  _QWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE v23[192];
  _BYTE v24[192];
  _OWORD v25[12];

  v3 = sub_2419AA040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((sub_2419A9EFC() & 1) == 0)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v7 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16);
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v7(v6, a2, v3);
  while (1)
  {
    swift_retain();
    sub_241969EA0((uint64_t)v6, (uint64_t)v23);
    sub_24196C500((uint64_t)v23, (uint64_t)v24);
    sub_24196C500((uint64_t)v24, (uint64_t)v25);
    if (sub_24196C548((uint64_t)v25) != 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_24198074C(0, v8[2] + 1, 1, v8);
      v20 = v8[2];
      v19 = v8[3];
      if (v20 >= v19 >> 1)
        v8 = sub_24198074C((_QWORD *)(v19 > 1), v20 + 1, 1, v8);
      v8[2] = v20 + 1;
      v9 = &v8[24 * v20];
      v10 = v25[0];
      v11 = v25[1];
      v12 = v25[3];
      v9[4] = v25[2];
      v9[5] = v12;
      v9[2] = v10;
      v9[3] = v11;
      v13 = v25[4];
      v14 = v25[5];
      v15 = v25[7];
      v9[8] = v25[6];
      v9[9] = v15;
      v9[6] = v13;
      v9[7] = v14;
      v16 = v25[8];
      v17 = v25[9];
      v18 = v25[11];
      v9[12] = v25[10];
      v9[13] = v18;
      v9[10] = v16;
      v9[11] = v17;
    }
    if ((sub_2419A9EFC() & 1) == 0)
      break;
    v7(v6, a2, v3);
  }
  return v8;
}

uint64_t sub_241969EA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v4 = sub_2419A9EF0();
  if (v4)
  {
    v5 = v4;
    sub_24196C220(v4, v4);
    *(_QWORD *)&v103 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164A20);
    sub_24196C594((unint64_t *)&qword_257164A28, &qword_257164A20, MEMORY[0x24BEE12B0]);
    v7 = sub_2419AA0A0();
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v10 = sub_2419AA028();
    v11 = sub_2419AA238();
    v98 = a1;
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      *(_QWORD *)&v103 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v101 = sub_24193F470(v7, v9, (uint64_t *)&v103);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24193B000, v10, v11, "Boot To Asset query result yielded: \n{%s}", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v13, -1, -1);
      MEMORY[0x24269F7A0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(_QWORD *)&v101 = 0x7465537465737361;
    *((_QWORD *)&v101 + 1) = 0xEA00000000006449;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v19 = sub_24195B4F4((uint64_t)&v103), (v20 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v19, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v21 = swift_dynamicCast();
      if (v21)
        v22 = v99;
      else
        v22 = 0;
      if (v21)
        v23 = v100;
      else
        v23 = 0;
      v96 = v23;
      v97 = v22;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v96 = 0;
      v97 = 0;
    }
    strcpy((char *)&v101, "assetSetName");
    BYTE13(v101) = 0;
    HIWORD(v101) = -5120;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v24 = sub_24195B4F4((uint64_t)&v103), (v25 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v24, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v26 = swift_dynamicCast();
      if (v26)
        v27 = v99;
      else
        v27 = 0;
      if (v26)
        v28 = v100;
      else
        v28 = 0;
      v94 = v28;
      v95 = v27;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v94 = 0;
      v95 = 0;
    }
    *(_QWORD *)&v101 = 0xD000000000000017;
    *((_QWORD *)&v101 + 1) = 0x80000002419B0100;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v29 = sub_24195B4F4((uint64_t)&v103), (v30 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v29, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v31 = swift_dynamicCast();
      v32 = v99;
      if (!v31)
        v32 = 0;
      v93 = v32;
      v33 = v31 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v93 = 0;
      v33 = 1;
    }
    v92 = v33;
    *(_QWORD *)&v101 = 0xD000000000000013;
    *((_QWORD *)&v101 + 1) = 0x80000002419B0190;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v34 = sub_24195B4F4((uint64_t)&v103), (v35 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v34, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v36 = swift_dynamicCast();
      if (v36)
        v37 = v99;
      else
        v37 = 0;
      if (v36)
        v38 = v100;
      else
        v38 = 0;
      v90 = v38;
      v91 = v37;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v90 = 0;
      v91 = 0;
    }
    *(_QWORD *)&v101 = 0x746144746E657665;
    *((_QWORD *)&v101 + 1) = 0xE900000000000065;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v39 = sub_24195B4F4((uint64_t)&v103), (v40 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v39, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v41 = swift_dynamicCast();
      if (v41)
        v42 = v99;
      else
        v42 = 0;
      if (v41)
        v43 = v100;
      else
        v43 = 0;
      v88 = v43;
      v89 = v42;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v88 = 0;
      v89 = 0;
    }
    *(_QWORD *)&v101 = 0xD000000000000015;
    *((_QWORD *)&v101 + 1) = 0x80000002419B00E0;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v44 = sub_24195B4F4((uint64_t)&v103), (v45 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v44, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v46 = swift_dynamicCast();
      if (v46)
        v47 = v99;
      else
        v47 = 0;
      if (v46)
        v48 = v100;
      else
        v48 = 0;
      v86 = v48;
      v87 = v47;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v86 = 0;
      v87 = 0;
    }
    *(_QWORD *)&v101 = 0x75706E4969726973;
    *((_QWORD *)&v101 + 1) = 0xEF656C61636F4C74;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v49 = sub_24195B4F4((uint64_t)&v103), (v50 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v49, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v51 = swift_dynamicCast();
      if (v51)
        v52 = v99;
      else
        v52 = 0;
      if (v51)
        v53 = v100;
      else
        v53 = 0;
      v84 = v53;
      v85 = v52;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v84 = 0;
      v85 = 0;
    }
    *(_QWORD *)&v101 = 0x436D6172676F7270;
    *((_QWORD *)&v101 + 1) = 0xEB0000000065646FLL;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v54 = sub_24195B4F4((uint64_t)&v103), (v55 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v54, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v56 = swift_dynamicCast();
      if (v56)
        v57 = v99;
      else
        v57 = 0;
      if (v56)
        v58 = v100;
      else
        v58 = 0;
      v82 = v58;
      v83 = v57;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v82 = 0;
      v83 = 0;
    }
    *(_QWORD *)&v101 = 0x75426D6574737973;
    *((_QWORD *)&v101 + 1) = 0xEB00000000646C69;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v59 = sub_24195B4F4((uint64_t)&v103), (v60 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v59, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v61 = swift_dynamicCast();
      if (v61)
        v62 = v99;
      else
        v62 = 0;
      if (v61)
        v63 = v100;
      else
        v63 = 0;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v62 = 0;
      v63 = 0;
    }
    *(_QWORD *)&v101 = 0x7954656369766564;
    *((_QWORD *)&v101 + 1) = 0xEA00000000006570;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v64 = sub_24195B4F4((uint64_t)&v103), (v65 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v64, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v66 = swift_dynamicCast();
      if (v66)
        v67 = v99;
      else
        v67 = 0;
      if (v66)
        v68 = v100;
      else
        v68 = 0;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v67 = 0;
      v68 = 0;
    }
    *(_QWORD *)&v101 = 0xD000000000000013;
    *((_QWORD *)&v101 + 1) = 0x80000002419B00C0;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v69 = sub_24195B4F4((uint64_t)&v103), (v70 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v69, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v71 = a2;
      v72 = swift_dynamicCast();
      if (v72)
        v73 = v99;
      else
        v73 = 0;
      if (v72)
        v74 = v100;
      else
        v74 = 0;
    }
    else
    {
      v71 = a2;
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v73 = 0;
      v74 = 0;
    }
    *(_QWORD *)&v101 = 0xD00000000000002CLL;
    *((_QWORD *)&v101 + 1) = 0x80000002419B0120;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v75 = sub_24195B4F4((uint64_t)&v103), (v76 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v75, (uint64_t)&v101);
    }
    else
    {
      v101 = 0u;
      v102 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
    v77 = sub_2419AA040();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v98, v77);
    sub_24195BF58((uint64_t)&v103);
    if (*((_QWORD *)&v102 + 1))
    {
      v78 = swift_dynamicCast();
      v79 = v99;
      if (!v78)
        v79 = 0;
      v80 = v78 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)&v101, &qword_257163EA0);
      v79 = 0;
      v80 = 1;
    }
    *(_QWORD *)&v103 = v97;
    *((_QWORD *)&v103 + 1) = v96;
    v104 = v95;
    v105 = v94;
    v106 = v93;
    v107 = v92;
    v108 = v79;
    v109 = v80;
    v110 = v91;
    v111 = v90;
    v112 = v89;
    v113 = v88;
    v114 = v73;
    v115 = v74;
    v116 = v87;
    v117 = v86;
    v118 = v85;
    v119 = v84;
    v120 = v83;
    v121 = v82;
    v122 = v62;
    v123 = v63;
    v124 = v67;
    v125 = v68;
    nullsub_1(&v103);
    v18 = v71;
  }
  else
  {
    v14 = sub_2419AA028();
    v15 = sub_2419AA250();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_24193B000, v14, v15, "failed to get row", v16, 2u);
      MEMORY[0x24269F7A0](v16, -1, -1);
    }

    swift_release();
    v17 = sub_2419AA040();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
    sub_24196C56C(&v103);
    v18 = a2;
  }
  return sub_24196C500((uint64_t)&v103, v18);
}

uint64_t BootToAssetData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[17];
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571649D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[2] = *(_QWORD *)v1;
  v17[1] = *(_QWORD *)(v1 + 8);
  v7 = *(_QWORD *)(v1 + 24);
  v17[13] = *(_QWORD *)(v1 + 16);
  v17[14] = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v20 = *(unsigned __int8 *)(v1 + 40);
  v19 = *(_QWORD *)(v1 + 48);
  v18 = *(unsigned __int8 *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 72);
  v17[5] = *(_QWORD *)(v1 + 64);
  v17[6] = v9;
  v10 = *(_QWORD *)(v1 + 88);
  v17[15] = *(_QWORD *)(v1 + 80);
  v17[16] = v10;
  v11 = *(_QWORD *)(v1 + 112);
  v22 = v8;
  v23 = v11;
  v21 = *(_QWORD *)(v1 + 120);
  v12 = *(_QWORD *)(v1 + 136);
  v17[11] = *(_QWORD *)(v1 + 128);
  v17[12] = v12;
  v13 = *(_QWORD *)(v1 + 152);
  v17[9] = *(_QWORD *)(v1 + 144);
  v17[10] = v13;
  v14 = *(_QWORD *)(v1 + 168);
  v17[7] = *(_QWORD *)(v1 + 160);
  v17[8] = v14;
  v17[4] = *(_QWORD *)(v1 + 176);
  v17[3] = *(_QWORD *)(v1 + 184);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24196AEC4();
  sub_2419AA64C();
  v36 = 0;
  v15 = v24;
  sub_2419AA4F0();
  if (!v15)
  {
    v35 = 1;
    sub_2419AA4F0();
    v34 = 2;
    sub_2419AA4FC();
    v24 = v4;
    v33 = 3;
    sub_2419AA520();
    v32 = 4;
    sub_2419AA4F0();
    v31 = 5;
    sub_2419AA4F0();
    v30 = 6;
    sub_2419AA4F0();
    v29 = 7;
    sub_2419AA4F0();
    v28 = 8;
    sub_2419AA4F0();
    v27 = 9;
    sub_2419AA4F0();
    v26 = 10;
    sub_2419AA4F0();
    v25 = 11;
    sub_2419AA4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24196AEC4()
{
  unint64_t result;

  result = qword_2571649E0;
  if (!qword_2571649E0)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ADD54, &type metadata for BootToAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571649E0);
  }
  return result;
}

uint64_t BootToAssetData.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  _BYTE v105[7];
  uint64_t v106;
  char v107;
  _BYTE v108[7];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  _BYTE v124[7];
  char v125;
  _BYTE v126[7];
  char v127;
  uint64_t v128;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571649E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = 1;
  v125 = 1;
  v9 = a1[3];
  v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_24196AEC4();
  sub_2419AA640();
  if (v2)
  {
    v82 = v2;
    v78 = 0uLL;
    v80 = 0;
    v81 = 0;
    v79 = 0;
    v76 = 0;
    v77 = 0;
    v73 = 0;
    v85 = 0;
    v12 = 0;
    v128 = 0;
    v13 = 0;
    v83 = 0;
    v84 = 0;
    v14 = 0;
    v74 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
  }
  else
  {
    v10 = a2;
    LOBYTE(v99) = 0;
    v11 = sub_2419AA46C();
    v21 = v20;
    v72 = v11;
    LOBYTE(v99) = 1;
    swift_bridgeObjectRetain();
    v22 = sub_2419AA46C();
    v128 = v21;
    v71 = v22;
    LOBYTE(v99) = 2;
    v24 = v23;
    swift_bridgeObjectRetain();
    v25 = sub_2419AA484();
    v85 = v24;
    v26 = v25;
    v28 = v27;
    v127 = v27 & 1;
    LOBYTE(v99) = 3;
    v69 = sub_2419AA4A8();
    v70 = v26;
    v125 = v29 & 1;
    LOBYTE(v99) = 4;
    LODWORD(v24) = v29;
    v30 = sub_2419AA46C();
    v66 = v24;
    v67 = v28;
    v68 = v30;
    LOBYTE(v99) = 5;
    v32 = v31;
    swift_bridgeObjectRetain();
    v33 = sub_2419AA46C();
    v83 = v32;
    v65 = v33;
    LOBYTE(v99) = 6;
    v84 = v34;
    swift_bridgeObjectRetain();
    v35 = sub_2419AA46C();
    v37 = v36;
    v77 = v35;
    LOBYTE(v99) = 7;
    swift_bridgeObjectRetain();
    v38 = sub_2419AA46C();
    v73 = v37;
    v76 = v38;
    LOBYTE(v99) = 8;
    v40 = v39;
    swift_bridgeObjectRetain();
    v81 = sub_2419AA46C();
    v82 = 0;
    v79 = v40;
    LOBYTE(v99) = 9;
    v80 = v41;
    swift_bridgeObjectRetain();
    v42 = v82;
    v64 = sub_2419AA46C();
    v82 = v42;
    if (v42)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v78 = 0uLL;
      v74 = 0;
      v15 = 0;
      v12 = v71;
      v13 = v72;
      v16 = v69;
      v17 = v70;
      v14 = v68;
      v18 = v65;
    }
    else
    {
      v44 = v43;
      LOBYTE(v99) = 10;
      swift_bridgeObjectRetain();
      v45 = v82;
      *(_QWORD *)&v78 = sub_2419AA46C();
      *((_QWORD *)&v78 + 1) = v46;
      v82 = v45;
      v74 = v44;
      if (v45)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v78 = 0uLL;
      }
      else
      {
        v98 = 11;
        swift_bridgeObjectRetain();
        v47 = v82;
        v63 = sub_2419AA46C();
        v82 = v47;
        if (!v47)
        {
          v49 = v48;
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          v62 = v49;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)&v86 = v63;
          *((_QWORD *)&v86 + 1) = v49;
          *(_QWORD *)&v87 = v65;
          *((_QWORD *)&v87 + 1) = v84;
          *(_QWORD *)&v88 = v70;
          BYTE8(v88) = v67 & 1;
          *(_QWORD *)&v89 = v69;
          BYTE8(v89) = v66 & 1;
          *(_QWORD *)&v90 = v64;
          *((_QWORD *)&v90 + 1) = v44;
          *(_QWORD *)&v91 = v68;
          *((_QWORD *)&v91 + 1) = v83;
          v50 = v128;
          *(_QWORD *)&v92 = v72;
          *((_QWORD *)&v92 + 1) = v128;
          v51 = v85;
          *(_QWORD *)&v93 = v71;
          *((_QWORD *)&v93 + 1) = v85;
          *(_QWORD *)&v94 = v77;
          *((_QWORD *)&v94 + 1) = v37;
          v52 = *((_QWORD *)&v78 + 1);
          v53 = v79;
          *(_QWORD *)&v95 = v76;
          *((_QWORD *)&v95 + 1) = v79;
          *(_QWORD *)&v96 = v81;
          *((_QWORD *)&v96 + 1) = v80;
          v97 = v78;
          sub_241942F20((uint64_t)&v86);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v54 = v80;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v55 = v95;
          v10[8] = v94;
          v10[9] = v55;
          v56 = v97;
          v10[10] = v96;
          v10[11] = v56;
          v57 = v91;
          v10[4] = v90;
          v10[5] = v57;
          v58 = v93;
          v10[6] = v92;
          v10[7] = v58;
          v59 = v87;
          *v10 = v86;
          v10[1] = v59;
          v60 = v89;
          v10[2] = v88;
          v10[3] = v60;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
          v99 = v63;
          v100 = v62;
          v101 = v65;
          v102 = v84;
          v103 = v70;
          v104 = v127;
          *(_DWORD *)v105 = *(_DWORD *)v126;
          *(_DWORD *)&v105[3] = *(_DWORD *)&v126[3];
          v106 = v69;
          v107 = v125;
          *(_DWORD *)v108 = *(_DWORD *)v124;
          *(_DWORD *)&v108[3] = *(_DWORD *)&v124[3];
          v109 = v64;
          v110 = v74;
          v111 = v68;
          v112 = v83;
          v113 = v72;
          v114 = v50;
          v115 = v71;
          v116 = v51;
          v117 = v77;
          v118 = v37;
          v119 = v76;
          v120 = v53;
          v121 = v81;
          v122 = v54;
          *(_QWORD *)&v123 = v78;
          *((_QWORD *)&v123 + 1) = v52;
          return sub_241942FD4((uint64_t)&v99);
        }
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v12 = v71;
      v13 = v72;
      v16 = v69;
      v17 = v70;
      v14 = v68;
      v15 = v64;
      v18 = v65;
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
  v99 = 0;
  v100 = 0;
  v101 = v18;
  v102 = v84;
  v103 = v17;
  v104 = v127;
  *(_DWORD *)v105 = *(_DWORD *)v126;
  *(_DWORD *)&v105[3] = *(_DWORD *)&v126[3];
  v106 = v16;
  v107 = v125;
  *(_DWORD *)v108 = *(_DWORD *)v124;
  *(_DWORD *)&v108[3] = *(_DWORD *)&v124[3];
  v109 = v15;
  v110 = v74;
  v111 = v14;
  v112 = v83;
  v113 = v13;
  v114 = v128;
  v115 = v12;
  v116 = v85;
  v117 = v77;
  v118 = v73;
  v119 = v76;
  v120 = v79;
  v121 = v81;
  v122 = v80;
  v123 = v78;
  return sub_241942FD4((uint64_t)&v99);
}

uint64_t sub_24196B960@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return BootToAssetData.init(from:)(a1, a2);
}

uint64_t sub_24196B974(_QWORD *a1)
{
  return BootToAssetData.encode(to:)(a1);
}

uint64_t destroy for BootToAssetData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BootToAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BootToAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for BootToAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BootToAssetData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BootToAssetData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BootToAssetData()
{
  return &type metadata for BootToAssetData;
}

uint64_t getEnumTagSinglePayload for BootToAssetData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BootToAssetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_24196BF5C + 4 * byte_2419ADB9D[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_24196BF90 + 4 * byte_2419ADB98[v4]))();
}

uint64_t sub_24196BF90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24196BF98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24196BFA0);
  return result;
}

uint64_t sub_24196BFAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24196BFB4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_24196BFB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24196BFC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BootToAssetData.CodingKeys()
{
  return &type metadata for BootToAssetData.CodingKeys;
}

uint64_t sub_24196BFDC()
{
  return sub_24196C594(&qword_2571649F0, &qword_2571649F8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_24196C00C()
{
  unint64_t result;

  result = qword_257164A00;
  if (!qword_257164A00)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ADD2C, &type metadata for BootToAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164A00);
  }
  return result;
}

unint64_t sub_24196C054()
{
  unint64_t result;

  result = qword_257164A08;
  if (!qword_257164A08)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ADC2C, &type metadata for BootToAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164A08);
  }
  return result;
}

unint64_t sub_24196C09C()
{
  unint64_t result;

  result = qword_257164A10;
  if (!qword_257164A10)
  {
    result = MEMORY[0x24269F6EC](&unk_2419ADC54, &type metadata for BootToAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257164A10);
  }
  return result;
}

uint64_t sub_24196C0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  sub_24193D1D0(a2, (uint64_t)&v3);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    v3 = 0;
    v4 = 0xE000000000000000;
    sub_2419AA178();
    sub_2419AA400();
    sub_2419AA178();
  }
  else
  {
    v3 = 0;
    v4 = 0xE000000000000000;
    sub_2419AA400();
  }
  v3 = 34;
  v4 = 0xE100000000000000;
  sub_2419AA364();
  sub_2419AA178();
  swift_bridgeObjectRelease();
  sub_2419AA178();
  sub_2419AA178();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_24196C220(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (*(_QWORD *)(a2 + 16) >= *(_QWORD *)(a1 + 16))
    v4 = *(_QWORD *)(a1 + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  v29 = MEMORY[0x24BEE4AF8];
  sub_2419921B8(0, v4, 0);
  sub_241992520(a1, a2, (uint64_t)&v28);
  if (v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24199258C((uint64_t)&v24);
      if (!*((_QWORD *)&v25 + 1))
        break;
      v5 = sub_24196C0E0((uint64_t)&v24, (uint64_t)v26 + 8);
      v7 = v6;
      sub_241941720((uint64_t)&v24, &qword_257164A30);
      v8 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2419921B8(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v29;
      }
      v10 = *(_QWORD *)(v8 + 16);
      v9 = *(_QWORD *)(v8 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_2419921B8(v9 > 1, v10 + 1, 1);
        v8 = v29;
      }
      *(_QWORD *)(v8 + 16) = v10 + 1;
      v11 = v8 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v5;
      *(_QWORD *)(v11 + 40) = v7;
      if (!--v4)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_14:
    sub_24199258C((uint64_t)&v19);
    if (*((_QWORD *)&v20 + 1))
    {
      v12 = v29;
      do
      {
        v26[0] = v21;
        v26[1] = v22;
        v27 = v23;
        v24 = v19;
        v25 = v20;
        v13 = sub_24196C0E0((uint64_t)&v24, (uint64_t)v26 + 8);
        v15 = v14;
        sub_241941720((uint64_t)&v24, &qword_257164A30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2419921B8(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v12 = v29;
        }
        v17 = *(_QWORD *)(v12 + 16);
        v16 = *(_QWORD *)(v12 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_2419921B8(v16 > 1, v17 + 1, 1);
          v12 = v29;
        }
        *(_QWORD *)(v12 + 16) = v17 + 1;
        v18 = v12 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v13;
        *(_QWORD *)(v18 + 40) = v15;
        sub_24199258C((uint64_t)&v19);
      }
      while (*((_QWORD *)&v20 + 1));
    }
    sub_24194F590();
    sub_24194F590();
    sub_241941720((uint64_t)&v19, qword_257164A38);
  }
}

uint64_t sub_24196C4B8()
{
  unint64_t v0;

  v0 = sub_2419AA460();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

uint64_t sub_24196C500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257164A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24196C548(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

double sub_24196C56C(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_2419ADDB0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  return result;
}

uint64_t sub_24196C594(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24269F6EC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24196C5D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24196C628()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24196C644()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CollectionWeightScale(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CollectionWeightScale);
}

uint64_t sub_24196C674()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PercentageSampler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PercentageSampler);
}

uint64_t sub_24196C6B4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24196C6F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24196C700()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24196C724()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void type metadata accessor for SampleableDateCollectionWeightScale()
{
  JUMPOUT(0x24269F698);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24269F698](a1, v6, a5);
}

uint64_t AssetPenetrationStatus.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  AssetPenetrationStatus.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t AssetPenetrationStatus.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  void (*v55)(uint64_t, char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(uint64_t, char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v70 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  MEMORY[0x24BDAC7A8](v3);
  v63 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2419A9D64();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2419A9CE0();
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2419A9D1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2419AA040();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v66 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v54 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19((char *)&v54 - v17, a2, v13);
  type metadata accessor for AssetPenetrationStatusDataProvider();
  v20 = swift_allocObject();
  v71 = v14;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v64 = v18;
  v65 = v21;
  v21(v20 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger, v18, v13);
  v22 = v75;
  *(_QWORD *)(v75 + 16) = v20;
  v23 = v22 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_logger;
  v24 = v22;
  v19((char *)(v22 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_logger), a2, v13);
  sub_2419A9D10();
  v25 = v24 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_oddId;
  v68 = v10;
  v69 = v9;
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v62 = v12;
  v55 = v26;
  v26(v25, v12, v9);
  v27 = sub_2419A9F8C();
  swift_allocObject();
  v70 = v70;
  v28 = sub_2419A9F80();
  v73 = v27;
  v74 = MEMORY[0x24BE2BBA0];
  v72 = v28;
  v29 = a2;
  v19(v66, a2, v13);
  sub_2419A9E0C();
  swift_allocObject();
  v30 = v67;
  v31 = sub_2419A9DF4();
  if (v30)
  {

    v32 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v32(a2, v13);
    v33 = v75;
    swift_release();
    v32(v23, v13);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v25, v69);
    type metadata accessor for AssetPenetrationStatus();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v34 = (char *)v31;
    v35 = v56;
    sub_2419A9F14();
    v36 = v59;
    sub_2419A9D58();
    v67 = 0;
    sub_2419A9E00();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v61);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v58);
    v37 = v64;
    v54 = v29;
    v19(v64, v29, v13);
    v38 = v69;
    v39 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v62, v25, v69);
    swift_retain();
    v40 = v63;
    sub_24196CE28(v63);
    type metadata accessor for AssetPenetrationCalculator();
    v41 = swift_allocObject();
    v42 = v34;
    v66 = v34;
    v43 = v41;
    sub_2419A9D58();
    v65(v43 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_logger, v37, v13);
    sub_24196D304(v40, v43 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_sqlFileURL);
    *(_QWORD *)(v43 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_bookmarkService) = v42;
    v55(v43 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_oddId, v39, v38);
    v33 = v75;
    *(_QWORD *)(v75 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_calculator) = v43;
    v44 = v54;
    v19(v37, v54, v13);
    v45 = type metadata accessor for SELFReportingService();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 24) = objc_msgSend((id)objc_opt_self(), sel_sharedLoggerWithPersistenceConfiguration_, 1);
    v47 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
    v48 = objc_msgSend(v47, sel_defaultMessageStream);

    *(_QWORD *)(v46 + 16) = v48;
    type metadata accessor for AssetPenetrationSELFReporter();
    v49 = swift_allocObject();
    v50 = (uint64_t *)(v49 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);
    v50[3] = v45;
    v50[4] = (uint64_t)&protocol witness table for SELFReportingService;
    *v50 = v46;
    v65(v49 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger, v37, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571630D0);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_2419AB250;
    *(_QWORD *)(v51 + 32) = v49;
    v72 = v51;
    sub_2419AA1C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164BD8);
    swift_allocObject();
    swift_retain();
    v72 = sub_2419A9DC4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164BE0);
    swift_allocObject();
    v52 = sub_2419A9DDC();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v44, v13);
    *(_QWORD *)(v33 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_reporter) = v52;
  }
  return v33;
}

uint64_t sub_24196CE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for AssetPenetrationCalculator();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_2419AA0DC();
  v5 = (void *)sub_2419AA0DC();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2419A9C08();

    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  else
  {
    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_24196CF44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24196CF5C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: AssetPenetrationMetricsDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24196D010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_24196D038()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 32) = v1;
  v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE2B748] + MEMORY[0x24BE2B748]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_241946A8C;
  return v4(v0 + 16);
}

uint64_t sub_24196D0BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_24196D0D4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_241946B78;
  return sub_24199C778(*(_QWORD *)(v0 + 16));
}

uint64_t AssetPenetrationStatus.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  return v0;
}

uint64_t AssetPenetrationStatus.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24196D264()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_24196D280(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_24196D29C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t type metadata accessor for AssetPenetrationStatus()
{
  uint64_t result;

  result = qword_257164C70;
  if (!qword_257164C70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24196D304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24196D34C()
{
  return sub_24196D3B8(&qword_257164C08, (uint64_t)&protocol conformance descriptor for AssetPenetrationStatus);
}

uint64_t sub_24196D370()
{
  return sub_24196D3B8(&qword_257164C10, (uint64_t)&protocol conformance descriptor for AssetPenetrationStatus);
}

uint64_t sub_24196D394()
{
  return sub_24196D3B8(&qword_257164C18, (uint64_t)&protocol conformance descriptor for AssetPenetrationStatus);
}

uint64_t sub_24196D3B8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AssetPenetrationStatus();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24196D3FC()
{
  unint64_t result;

  result = qword_257164C20;
  if (!qword_257164C20)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for AssetPenetrationStatusDataRecord, &type metadata for AssetPenetrationStatusDataRecord);
    atomic_store(result, (unint64_t *)&qword_257164C20);
  }
  return result;
}

unint64_t sub_24196D444()
{
  unint64_t result;

  result = qword_257164C30[0];
  if (!qword_257164C30[0])
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for SiriAssetPenetrationResults, &type metadata for SiriAssetPenetrationResults);
    atomic_store(result, qword_257164C30);
  }
  return result;
}

uint64_t sub_24196D488()
{
  return type metadata accessor for AssetPenetrationStatus();
}

uint64_t sub_24196D490()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = sub_2419A9D1C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AssetPenetrationStatus()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetPenetrationStatus.__allocating_init(defaults:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AssetPenetrationStatus.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of AssetPenetrationStatus.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of AssetPenetrationStatus.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t SiriSegmentCohortMetrics.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  SiriSegmentCohortMetrics.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t static SiriSegmentCohortMetrics.maxStreamLookbackNumDays.getter()
{
  return 7;
}

uint64_t SiriSegmentCohortMetrics.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(void);
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void (*v45)(void);
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v72 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  MEMORY[0x24BDAC7A8](v4);
  v65 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2419A9D64();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2419A9CE0();
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2419AA040();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v56 - v14;
  v16 = sub_2419A9D1C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v11;
  v20 = *(void (**)(void))(v11 + 16);
  v67 = (void (*)(uint64_t, uint64_t, uint64_t))(v2
                                                       + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_logger);
  v20();
  sub_2419A9D10();
  v73 = v2;
  v69 = v2 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_oddId;
  v70 = v17;
  v21 = *(void (**)(void))(v17 + 32);
  v71 = v16;
  v21();
  v22 = sub_2419A9F8C();
  swift_allocObject();
  v72 = v72;
  v23 = sub_2419A9F80();
  v75 = v22;
  v76 = MEMORY[0x24BE2BBA0];
  v24 = v10;
  v25 = a2;
  v74 = v23;
  v26 = v10;
  v27 = v20;
  ((void (*)(char *, uint64_t, uint64_t))v20)(v15, a2, v26);
  sub_2419A9E0C();
  swift_allocObject();
  v28 = v68;
  v29 = sub_2419A9DF4();
  if (v28)
  {

    v30 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v30(a2, v24);
    v30((uint64_t)v67, v24);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
    type metadata accessor for SiriSegmentCohortMetrics();
    v31 = v73;
    swift_deallocPartialClassInstance();
  }
  else
  {
    v32 = v29;
    v33 = v59;
    sub_2419A9F14();
    v34 = v62;
    sub_2419A9D58();
    v68 = 0;
    v35 = v32;
    sub_2419A9E00();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v34, v64);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v61);
    v36 = (uint64_t)v66;
    ((void (*)(char *, uint64_t, uint64_t))v27)(v66, v25, v24);
    v56 = v27;
    type metadata accessor for SiriSegmentCohortDataProvider();
    v37 = swift_allocObject();
    v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32);
    v67(v37 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger, v36, v24);
    v31 = v73;
    *(_QWORD *)(v73 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_siriSegmentCohortDataProvider) = v37;
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v36, v25, v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v19, v69, v71);
    swift_retain();
    v38 = v65;
    sub_24196DE58(v65);
    type metadata accessor for SiriSegmentCohortCalculator();
    swift_allocObject();
    v58 = v35;
    v39 = sub_241981CAC(v36, v38, v35, (uint64_t)v19);
    swift_release();
    *(_QWORD *)(v31 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_siriSegmentCohortCalculator) = v39;
    v40 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
    swift_unknownObjectRelease();
    v41 = objc_msgSend(v40, sel_Metrics);
    swift_unknownObjectRelease();
    v42 = objc_msgSend(v41, sel_OnDeviceDigestSegmentsCohorts);
    swift_unknownObjectRelease();
    v43 = objc_msgSend(v42, sel_source);

    __swift_instantiateConcreteTypeFromMangledName(&qword_257164D68);
    swift_allocObject();
    v44 = sub_2419A9DAC();
    v57 = v25;
    v45 = v56;
    ((void (*)(uint64_t, uint64_t, uint64_t))v56)(v36, v25, v24);
    type metadata accessor for SiriSegmentCohortBiomeReporter();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v44;
    v47 = v67;
    v67(v46 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger, v36, v24);
    ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v36, v25, v24);
    type metadata accessor for SELFReportingService();
    v48 = swift_allocObject();
    v49 = (void *)objc_opt_self();
    swift_retain();
    *(_QWORD *)(v48 + 24) = objc_msgSend(v49, sel_sharedLoggerWithPersistenceConfiguration_, 1);
    v50 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
    v51 = objc_msgSend(v50, sel_defaultMessageStream);

    *(_QWORD *)(v48 + 16) = v51;
    type metadata accessor for SiriSegmentCohortSELFReporter();
    v52 = swift_allocObject();
    *(_QWORD *)(v52 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents) = MEMORY[0x24BEE4AF8];
    v47(v52 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger, v36, v24);
    *(_QWORD *)(v52 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_reportingService) = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571630D0);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_2419AB7D0;
    *(_QWORD *)(v53 + 32) = v46;
    *(_QWORD *)(v53 + 40) = v52;
    v74 = v53;
    sub_2419AA1C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164D70);
    swift_allocObject();
    swift_retain();
    swift_retain();
    v74 = sub_2419A9DC4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164D78);
    swift_allocObject();
    v54 = sub_2419A9DDC();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v57, v24);
    *(_QWORD *)(v31 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_siriSegmentCohortReporter) = v54;
  }
  return v31;
}

uint64_t type metadata accessor for SiriSegmentCohortMetrics()
{
  uint64_t result;

  result = qword_257164DF8;
  if (!qword_257164DF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24196DE58@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for SiriSegmentCohortMetrics();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_2419AA0DC();
  v5 = (void *)sub_2419AA0DC();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2419A9C08();

    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  else
  {
    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_24196DF74()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24196DF8C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: SiriSegmentCohortDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24196E048(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 48) = v1;
  v3 = a1[1];
  *(_OWORD *)(v2 + 56) = *a1;
  *(_OWORD *)(v2 + 72) = v3;
  return swift_task_switch();
}

uint64_t sub_24196E06C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 72);
  v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE2B748] + MEMORY[0x24BE2B748]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_24196E0F0;
  return v3(v0 + 16);
}

uint64_t sub_24196E0F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_24196E15C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24196E168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_24196E180()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_241946B78;
  return sub_24197C3FC(*(_QWORD *)(v0 + 16));
}

uint64_t SiriSegmentCohortMetrics.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SiriSegmentCohortMetrics.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24196E320()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_24196E33C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_24196E358(_OWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 48) = *v1;
  v3 = a1[1];
  *(_OWORD *)(v2 + 56) = *a1;
  *(_OWORD *)(v2 + 72) = v3;
  return swift_task_switch();
}

uint64_t sub_24196E380()
{
  return sub_24196E3EC(&qword_257164DA0, (uint64_t)&protocol conformance descriptor for SiriSegmentCohortMetrics);
}

uint64_t sub_24196E3A4()
{
  return sub_24196E3EC(&qword_257164DA8, (uint64_t)&protocol conformance descriptor for SiriSegmentCohortMetrics);
}

uint64_t sub_24196E3C8()
{
  return sub_24196E3EC(qword_257164DB0, (uint64_t)&protocol conformance descriptor for SiriSegmentCohortMetrics);
}

uint64_t sub_24196E3EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SiriSegmentCohortMetrics();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24196E430()
{
  return type metadata accessor for SiriSegmentCohortMetrics();
}

uint64_t sub_24196E438()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = sub_2419A9D1C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SiriSegmentCohortMetrics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriSegmentCohortMetrics.__allocating_init(defaults:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SiriSegmentCohortMetrics.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of SiriSegmentCohortMetrics.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of SiriSegmentCohortMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t static ExtensionsUtils.createExecutionMetadataClientEvent(extensionName:executionStatus:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_257164EF0 + dword_257164EF0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24196FD94;
  return v7(a1, a2);
}

uint64_t sub_24196E6A4()
{
  uint64_t v0;

  v0 = sub_2419AA040();
  __swift_allocate_value_buffer(v0, qword_257164ED0);
  __swift_project_value_buffer(v0, (uint64_t)qword_257164ED0);
  return sub_2419AA034();
}

uint64_t static ExtensionsUtils.isAssistantOrDictationEnabled()()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_sharedPreferences);
  v2 = objc_msgSend(v1, sel_assistantIsEnabled);

  if ((v2 & 1) != 0)
    return 1;
  v4 = objc_msgSend(v0, sel_sharedPreferences);
  v3 = objc_msgSend(v4, sel_dictationIsEnabled);

  return (uint64_t)v3;
}

uint64_t static ExtensionsUtils.createClientEventMetadataEvent()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_257164F00 + dword_257164F00);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24196E814;
  return v3();
}

uint64_t sub_24196E814(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t static ExtensionsUtils.fetchDeviceAggregationId()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_257164F10 + dword_257164F10);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24196FD94;
  return v3();
}

uint64_t ExtensionsUtils.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExtensionsUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24196E8D4()
{
  return swift_task_switch();
}

uint64_t sub_24196E8E8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE092B8]), sel_init);
  v0[16] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_24196E9A0;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_241997A24;
  v3[3] = &block_descriptor_2;
  v3[4] = v2;
  objc_msgSend(v1, sel_getODDDeviceProperties_, v3);
  return swift_continuation_await();
}

uint64_t sub_24196E9A0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_24196EA00()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v1 = *(void **)(v0 + 120);

  if (v1)
  {
    if (qword_257162A78 != -1)
      swift_once();
    v2 = sub_2419AA040();
    __swift_project_value_buffer(v2, (uint64_t)qword_257164ED0);
    v3 = sub_2419AA028();
    v4 = sub_2419AA238();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_24193B000, v3, v4, "#ExtensionsUtils: Successfully fetched DevicePropertiesEvent", v5, 2u);
      MEMORY[0x24269F7A0](v5, -1, -1);
    }

    v6 = objc_msgSend(v1, sel_eventMetadata);
    v7 = objc_msgSend(v6, sel_deviceAggregationId);

  }
  else
  {
    if (qword_257162A78 != -1)
      swift_once();
    v8 = sub_2419AA040();
    __swift_project_value_buffer(v8, (uint64_t)qword_257164ED0);
    v9 = sub_2419AA028();
    v10 = sub_2419AA244();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_24193B000, v9, v10, "#ExtensionsUtils: Unable to fetch DevicePropertiesEvent", v11, 2u);
      MEMORY[0x24269F7A0](v11, -1, -1);
    }

    v7 = 0;
  }
  return (*(uint64_t (**)(id))(v0 + 8))(v7);
}

uint64_t sub_24196EBD8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 136);
  swift_willThrow();

  if (qword_257162A78 != -1)
    swift_once();
  v3 = sub_2419AA040();
  __swift_project_value_buffer(v3, (uint64_t)qword_257164ED0);
  v4 = sub_2419AA028();
  v5 = sub_2419AA244();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_24193B000, v4, v5, "#ExtensionsUtils: Unable to fetch DevicePropertiesEvent", v6, 2u);
    MEMORY[0x24269F7A0](v6, -1, -1);
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_24196ECD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_2419A9CE0();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v2 = sub_2419A9D1C();
  v0[5] = v2;
  v0[6] = *(_QWORD *)(v2 - 8);
  v0[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24196ED54()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t (__cdecl *v8)();

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954F0]), sel_init);
  *(_QWORD *)(v0 + 64) = v1;
  if (v1)
  {
    v8 = (uint64_t (__cdecl *)())((char *)&dword_257164F10 + dword_257164F10);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_24196EEB0;
    return v8();
  }
  else
  {
    if (qword_257162A78 != -1)
      swift_once();
    v4 = sub_2419AA040();
    __swift_project_value_buffer(v4, (uint64_t)qword_257164ED0);
    v5 = sub_2419AA028();
    v6 = sub_2419AA244();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_24193B000, v5, v6, "#ExtensionsUtils: Failed to generate ODDSiriSchemaODDClientEventMetadata", v7, 2u);
      MEMORY[0x24269F7A0](v7, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_24196EEB0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24196EF0C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  objc_msgSend(v2, sel_setDeviceAggregationId_, v1);

  sub_2419A9D10();
  v6 = objc_allocWithZone(MEMORY[0x24BE95C78]);
  v7 = (void *)sub_2419A9D04();
  v8 = objc_msgSend(v6, sel_initWithNSUUID_, v7);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  objc_msgSend(v2, sel_setOddId_, v8);

  sub_2419A9D94();
  sub_2419A9CBC();
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v9 <= -1.0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v9 >= 1.84467441e19)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (is_mul_ok((unint64_t)v9, 0x3E8uLL))
  {
    v10 = *(void **)(v0 + 64);
    objc_msgSend(v10, sel_setEventTimestampInMsSince1970_, 1000 * (unint64_t)v9);
    v11 = (void *)sub_241988A2C();
    objc_msgSend(v10, sel_setAggregationInterval_, v11);

    if (qword_257162A78 == -1)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  swift_once();
LABEL_6:
  v12 = sub_2419AA040();
  __swift_project_value_buffer(v12, (uint64_t)qword_257164ED0);
  v13 = sub_2419AA028();
  v14 = sub_2419AA238();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_24193B000, v13, v14, "#ExtensionsUtils: Successfully created ODDSiriSchemaODDClientEventMetadata", v15, 2u);
    MEMORY[0x24269F7A0](v15, -1, -1);
  }
  v17 = *(_QWORD *)(v0 + 24);
  v16 = *(_QWORD *)(v0 + 32);
  v18 = *(_QWORD *)(v0 + 16);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v19 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
}

uint64_t sub_24196F158(int a1, int a2)
{
  uint64_t v2;

  *(_DWORD *)(v2 + 56) = a1;
  *(_DWORD *)(v2 + 60) = a2;
  return swift_task_switch();
}

uint64_t sub_24196F170()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t (__cdecl *v8)();

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v8 = (uint64_t (__cdecl *)())((char *)&dword_257164F00 + dword_257164F00);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v2;
    *v2 = v0;
    v2[1] = sub_24196F2B8;
    return v8();
  }
  else
  {
    if (qword_257162A78 != -1)
      swift_once();
    v4 = sub_2419AA040();
    __swift_project_value_buffer(v4, (uint64_t)qword_257164ED0);
    v5 = sub_2419AA028();
    v6 = sub_2419AA244();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_24193B000, v5, v6, "#ExtensionsUtils: Failed to generate event for reporting Extension Execution Metadata", v7, 2u);
      MEMORY[0x24269F7A0](v7, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_24196F2B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24196F314()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;

  v1 = *(void **)(v0 + 48);
  objc_msgSend(*(id *)(v0 + 32), sel_setEventMetadata_, v1);

  if (qword_257162A78 != -1)
    swift_once();
  v2 = sub_2419AA040();
  __swift_project_value_buffer(v2, (uint64_t)qword_257164ED0);
  v3 = sub_2419AA028();
  v4 = sub_2419AA238();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_24193B000, v3, v4, "#ExtensionsUtils: Added ODDSiriSchemaODDClientEventMetadata to ODDSiriSchemaODDExecutionMetadataReported", v5, 2u);
    MEMORY[0x24269F7A0](v5, -1, -1);
  }

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95538]), sel_init);
  if (v6)
  {
    v7 = v6;
    v8 = *(unsigned int *)(v0 + 60);
    -[NSObject setExtensionName:](v6, sel_setExtensionName_, *(unsigned int *)(v0 + 56));
    -[NSObject setExecutionStatus:](v7, sel_setExecutionStatus_, v8);
    v9 = sub_2419AA028();
    v10 = sub_2419AA238();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v20 = v12;
      *(_DWORD *)v11 = 136315394;
      v13 = sub_2419AA274();
      *(_QWORD *)(v0 + 16) = sub_24193F470(v13, v14, &v20);
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      v15 = sub_2419AA280();
      *(_QWORD *)(v0 + 24) = sub_24193F470(v15, v16, &v20);
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24193B000, v9, v10, "#ExtensionsUtils: created executionMetadataEvent for %s with status %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v12, -1, -1);
      MEMORY[0x24269F7A0](v11, -1, -1);
    }

    objc_msgSend(*(id *)(v0 + 32), sel_setExecutionMetadataReported_, v7);
  }
  else
  {
    v7 = sub_2419AA028();
    v17 = sub_2419AA244();
    if (os_log_type_enabled(v7, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_24193B000, v7, v17, "#ExtensionsUtils: Failed to generate ODDSiriSchemaODDExecutionMetadataReported event", v18, 2u);
      MEMORY[0x24269F7A0](v18, -1, -1);
    }
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

unint64_t _s16MetricsFramework15ExtensionsUtilsC13decodeTurnIdsySay10Foundation4UUIDVGSgSSSgFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  __int128 v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v48 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)v40 - v10;
  v11 = sub_2419AA118();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2
    && (sub_2419AA10C(),
        v15 = sub_2419AA0F4(),
        v17 = v16,
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11),
        v17 >> 60 != 15))
  {
    sub_2419A9BF0();
    swift_allocObject();
    v24 = sub_2419A9BE4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164A20);
    sub_24196FD24();
    sub_2419A9BD8();
    v40[2] = v24;
    v41 = v15;
    v42 = v17;
    v26 = *(_QWORD *)(v49 + 16);
    v40[1] = v49;
    v22 = 0;
    if (v26)
    {
      v27 = (unint64_t *)(v49 + 40);
      *(_QWORD *)&v25 = 136315138;
      v44 = v25;
      v43 = MEMORY[0x24BEE4AD8] + 8;
      v45 = v5;
      v46 = v6;
      do
      {
        v28 = *(v27 - 1);
        v29 = *v27;
        swift_bridgeObjectRetain();
        sub_2419A9CEC();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {
          sub_241947110((uint64_t)v5);
          if (qword_257162A78 != -1)
            swift_once();
          v30 = sub_2419AA040();
          __swift_project_value_buffer(v30, (uint64_t)qword_257164ED0);
          swift_bridgeObjectRetain();
          v31 = sub_2419AA028();
          v32 = sub_2419AA244();
          if (os_log_type_enabled(v31, v32))
          {
            v33 = swift_slowAlloc();
            v34 = swift_slowAlloc();
            v49 = v34;
            *(_DWORD *)v33 = v44;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v33 + 4) = sub_24193F470(v28, v29, &v49);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_24193B000, v31, v32, "#ExtensionsUtils: Invalid UUID format for TurnId: %s", (uint8_t *)v33, 0xCu);
            swift_arrayDestroy();
            v35 = v34;
            v5 = v45;
            MEMORY[0x24269F7A0](v35, -1, -1);
            MEMORY[0x24269F7A0](v33, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v6 = v46;
        }
        else
        {
          swift_bridgeObjectRelease();
          v36 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
          v37 = v47;
          v36(v47, v5, v6);
          if (!v22)
            v22 = MEMORY[0x24BEE4AF8];
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v48, v37, v6);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v22 = sub_2419804F0(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
          v39 = *(_QWORD *)(v22 + 16);
          v38 = *(_QWORD *)(v22 + 24);
          if (v39 >= v38 >> 1)
            v22 = sub_2419804F0(v38 > 1, v39 + 1, 1, v22);
          *(_QWORD *)(v22 + 16) = v39 + 1;
          v36((char *)(v22+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v39), v48, v6);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v47, v6);
        }
        v27 += 2;
        --v26;
      }
      while (v26);
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_24196FD80(v41, v42);
  }
  else
  {
    if (qword_257162A78 != -1)
      swift_once();
    v18 = sub_2419AA040();
    __swift_project_value_buffer(v18, (uint64_t)qword_257164ED0);
    v19 = sub_2419AA028();
    v20 = sub_2419AA238();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_24193B000, v19, v20, "#ExtensionsUtils: turnIdsString is nil or its not utf8 encodable.", v21, 2u);
      MEMORY[0x24269F7A0](v21, -1, -1);
    }

    swift_bridgeObjectRelease();
    return 0;
  }
  return v22;
}

uint64_t type metadata accessor for ExtensionsUtils()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExtensionsUtils()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_24196FD24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257164FB0;
  if (!qword_257164FB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257164A20);
    v2 = MEMORY[0x24BEE0D38];
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257164FB0);
  }
  return result;
}

uint64_t sub_24196FD80(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24195F3B4(a1, a2);
  return a1;
}

ValueMetadata *type metadata accessor for SiriDigestMetricsCalculatorHelper()
{
  return &type metadata for SiriDigestMetricsCalculatorHelper;
}

uint64_t sub_24196FDA8(char *a1)
{
  return dword_2419AE1F4[*a1];
}

uint64_t AssetPenetrationSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_241973068(a1, (uint64_t)v9, v4, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t AssetPenetrationSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_241973068(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t sub_24196FF28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 24) = v1;
  v4 = sub_2419AA040();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(type metadata accessor for AssetPenetrationData() - 8);
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  *(_OWORD *)(v2 + 80) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_24196FFD0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 104) = OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 96);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v3 + 16);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24193B000, v1, v2, "AssetPenetrationSELFReporter reporting results for %ld events", v4, 0xCu);
    MEMORY[0x24269F7A0](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v0 + 112) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService;
    v8 = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 176) = v8;
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v7 + 72);
    *(_QWORD *)(v0 + 136) = 0;
    v9 = *(_QWORD *)(v0 + 72);
    v10 = v5 + ((v8 + 32) & ~(unint64_t)v8);
    swift_bridgeObjectRetain();
    sub_2419730F0(v10, v9);
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    *(_QWORD *)(v0 + 144) = v11;
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)(v0 + 64);
      v14 = *(_QWORD *)(v0 + 72);
      v16 = *(_QWORD *)(v0 + 40);
      v15 = *(_QWORD *)(v0 + 48);
      v17 = *(_QWORD *)(v0 + 24);
      v18 = *(_QWORD *)(v0 + 32);
      v19 = (_QWORD *)(v17 + *(_QWORD *)(v0 + 120));
      v20 = v17 + *(_QWORD *)(v0 + 104);
      sub_241943088(0, &qword_257164FD0);
      sub_2419730F0(v14, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v20, v18);
      v21 = sub_2419709F0(v13, v15);
      *(_QWORD *)(v0 + 152) = v21;
      objc_msgSend(v12, sel_setAssetSetStatusDigestReported_, v21);
      sub_241943088(0, &qword_257164FD8);
      sub_2419730F0(v14, v13);
      v22 = (void *)sub_241970C48(v13);
      objc_msgSend(v12, sel_setEventMetadata_, v22);

      v23 = v19[3];
      v24 = v19[4];
      __swift_project_boxed_opaque_existential_1(v19, v23);
      v31 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v24 + 8) + *(_QWORD *)(v24 + 8));
      v25 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v25;
      *v25 = v0;
      v25[1] = sub_241970388;
      return v31(v12, v20, v23, v24);
    }
    swift_bridgeObjectRelease();
    v27 = sub_2419AA028();
    v28 = sub_2419AA244();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_24193B000, v27, v28, "Failed to generate event for asset penetration", v29, 2u);
      MEMORY[0x24269F7A0](v29, -1, -1);
    }
    v30 = *(_QWORD *)(v0 + 72);

    sub_241973134(v30);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241970388()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2419703EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 152);

  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 136) + 1;
  sub_241973134(*(_QWORD *)(v0 + 72));
  if (v3 == v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136) + 1;
    *(_QWORD *)(v0 + 136) = v5;
    sub_2419730F0(*(_QWORD *)(v0 + 96)+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ v4 * v5, *(_QWORD *)(v0 + 72));
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    *(_QWORD *)(v0 + 144) = v6;
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)(v0 + 64);
      v9 = *(_QWORD *)(v0 + 72);
      v11 = *(_QWORD *)(v0 + 40);
      v10 = *(_QWORD *)(v0 + 48);
      v12 = *(_QWORD *)(v0 + 24);
      v13 = *(_QWORD *)(v0 + 32);
      v14 = (_QWORD *)(v12 + *(_QWORD *)(v0 + 120));
      v15 = v12 + *(_QWORD *)(v0 + 104);
      sub_241943088(0, &qword_257164FD0);
      sub_2419730F0(v9, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v15, v13);
      v16 = sub_2419709F0(v8, v10);
      *(_QWORD *)(v0 + 152) = v16;
      objc_msgSend(v7, sel_setAssetSetStatusDigestReported_, v16);
      sub_241943088(0, &qword_257164FD8);
      sub_2419730F0(v9, v8);
      v17 = (void *)sub_241970C48(v8);
      objc_msgSend(v7, sel_setEventMetadata_, v17);

      v18 = v14[3];
      v19 = v14[4];
      __swift_project_boxed_opaque_existential_1(v14, v18);
      v26 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v19 + 8) + *(_QWORD *)(v19 + 8));
      v20 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v20;
      *v20 = v0;
      v20[1] = sub_241970388;
      return v26(v7, v15, v18, v19);
    }
    swift_bridgeObjectRelease();
    v22 = sub_2419AA028();
    v23 = sub_2419AA244();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_24193B000, v22, v23, "Failed to generate event for asset penetration", v24, 2u);
      MEMORY[0x24269F7A0](v24, -1, -1);
    }
    v25 = *(_QWORD *)(v0 + 72);

    sub_241973134(v25);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419706A0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  BOOL v3;
  void *v4;
  NSObject *v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t, uint64_t);

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(void **)(v0 + 168);
  v6 = *(void **)(v0 + 144);
  v5 = *(NSObject **)(v0 + 152);
  if (v3)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Failed to report asset penetration event", v7, 2u);
    MEMORY[0x24269F7A0](v7, -1, -1);

  }
  else
  {

    v5 = v1;
  }

  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 136) + 1;
  sub_241973134(*(_QWORD *)(v0 + 72));
  if (v9 == v8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 136) + 1;
    *(_QWORD *)(v0 + 136) = v11;
    sub_2419730F0(*(_QWORD *)(v0 + 96)+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ v10 * v11, *(_QWORD *)(v0 + 72));
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    *(_QWORD *)(v0 + 144) = v12;
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)(v0 + 64);
      v15 = *(_QWORD *)(v0 + 72);
      v17 = *(_QWORD *)(v0 + 40);
      v16 = *(_QWORD *)(v0 + 48);
      v18 = *(_QWORD *)(v0 + 24);
      v19 = *(_QWORD *)(v0 + 32);
      v20 = (_QWORD *)(v18 + *(_QWORD *)(v0 + 120));
      v21 = v18 + *(_QWORD *)(v0 + 104);
      sub_241943088(0, &qword_257164FD0);
      sub_2419730F0(v15, v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v21, v19);
      v22 = sub_2419709F0(v14, v16);
      *(_QWORD *)(v0 + 152) = v22;
      objc_msgSend(v13, sel_setAssetSetStatusDigestReported_, v22);
      sub_241943088(0, &qword_257164FD8);
      sub_2419730F0(v15, v14);
      v23 = (void *)sub_241970C48(v14);
      objc_msgSend(v13, sel_setEventMetadata_, v23);

      v24 = v20[3];
      v25 = v20[4];
      __swift_project_boxed_opaque_existential_1(v20, v24);
      v32 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v25 + 8) + *(_QWORD *)(v25 + 8));
      v26 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v26;
      *v26 = v0;
      v26[1] = sub_241970388;
      return v32(v13, v21, v24, v25);
    }
    swift_bridgeObjectRelease();
    v28 = sub_2419AA028();
    v29 = sub_2419AA244();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_24193B000, v28, v29, "Failed to generate event for asset penetration", v30, 2u);
      MEMORY[0x24269F7A0](v30, -1, -1);
    }
    v31 = *(_QWORD *)(v0 + 72);

    sub_241973134(v31);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_2419709F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD v21[2];

  v4 = type metadata accessor for AssetPenetrationData();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v21 - v8;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v11 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571630D0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_2419AB250;
    sub_2419730F0(a1, (uint64_t)v9);
    v13 = objc_allocWithZone(MEMORY[0x24BE95490]);
    v14 = v11;
    result = objc_msgSend(v13, sel_init);
    if (result)
    {
      v15 = result;
      sub_241943088(0, &qword_2571650B0);
      sub_2419730F0((uint64_t)v9, (uint64_t)v7);
      v16 = v15;
      v17 = sub_241971520((uint64_t)v7);
      objc_msgSend(v16, sel_setDimensions_, v17);

      sub_241973134((uint64_t)v9);
      *(_QWORD *)(v12 + 32) = v16;
      v21[1] = v12;
      sub_2419AA1C0();
      sub_241943088(0, &qword_2571650B8);
      v18 = (void *)sub_2419AA1A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setDigests_, v18);

      sub_241943088(0, &qword_2571650C0);
      sub_2419730F0(a1, (uint64_t)v7);
      v19 = sub_241971364((uint64_t)v7);
      objc_msgSend(v14, sel_setFixedDimensions_, v19);

      v20 = sub_2419AA040();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a2, v20);
      sub_241973134(a1);
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241970C48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v41;
  void (*v42)(uint64_t, char *, uint64_t);
  char *v43;
  double v44;
  uint64_t result;
  double v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2419A9CE0();
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v51 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571650A8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2419A9D40();
  v55 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2419A9D1C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v24 = v23;
  if (!v23)
    goto LABEL_19;
  v60 = v23;
  v52 = v9;
  v53 = v7;
  v54 = a1;
  v25 = v23;
  swift_bridgeObjectRetain();
  sub_2419A9CEC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_241941720((uint64_t)v18, &qword_257162D48);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    v26 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v27 = (void *)sub_2419A9D04();
    v28 = objc_msgSend(v26, sel_initWithNSUUID_, v27);

    objc_msgSend(v25, sel_setDeviceAggregationId_, v28);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  v29 = (uint64_t)v57;
  v30 = v25;
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  sub_2419A9D28();
  v32 = (void *)sub_2419A9D34();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v56);
  objc_msgSend(v31, sel_setLocale_, v32);

  v33 = (void *)sub_2419AA0DC();
  objc_msgSend(v31, sel_setDateFormat_, v33);

  sub_2419A9D70();
  v34 = sub_2419A9D88();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v34) != 1)
  {
    v36 = (void *)sub_2419A9D7C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v34);
  }
  objc_msgSend(v31, sel_setTimeZone_, v36);

  a1 = v54;
  v38 = v58;
  v37 = v59;
  swift_bridgeObjectRetain();
  v39 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v31, sel_dateFromString_, v39);

  if (!v40)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v29, 1, 1, v37);
    goto LABEL_17;
  }
  v41 = v53;
  sub_2419A9CD4();

  v42 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
  v42(v29, v41, v37);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v29, 0, 1, v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v29, 1, v37) == 1)
  {
LABEL_17:
    sub_241941720(v29, &qword_257162EF0);
    goto LABEL_18;
  }
  v43 = v52;
  v42((uint64_t)v52, (char *)v29, v37);
  sub_2419A9CBC();
  if (v44 < 0.0)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v37);
LABEL_18:
    type metadata accessor for AssetPenetrationData();
    v48 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v49 = (void *)sub_2419A9D04();
    v50 = objc_msgSend(v48, sel_initWithNSUUID_, v49);

    objc_msgSend(v30, sel_setOddId_, v50);
    v24 = v60;
LABEL_19:
    sub_241973134(a1);
    return (uint64_t)v24;
  }
  result = sub_2419A9CBC();
  if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v46 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v46 >= 1.84467441e19)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (is_mul_ok((unint64_t)v46, 0x3E8uLL))
  {
    objc_msgSend(v30, sel_setEventTimestampInMsSince1970_, 1000 * (unint64_t)v46);
    v47 = (void *)sub_241988A2C();
    objc_msgSend(v30, sel_setAggregationInterval_, v47);

    goto LABEL_15;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_241971264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);
}

uint64_t AssetPenetrationSELFReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);
  return v0;
}

uint64_t AssetPenetrationSELFReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);
  return swift_deallocClassInstance();
}

id sub_241971364(uint64_t a1)
{
  id result;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v3 = result;
    if (*(_QWORD *)(a1 + 104))
    {
      v4 = result;
      swift_bridgeObjectRetain();
      v5 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v6 = v5;
      if ((objc_msgSend(v6, "isEqualToString:", CFSTR("PROGRAMCODE_UNKNOWN")) & 1) != 0)
      {
        v7 = 0;
      }
      else if ((objc_msgSend(v6, "isEqualToString:", CFSTR("PROGRAMCODE_IOS")) & 1) != 0)
      {
        v7 = 1;
      }
      else if ((objc_msgSend(v6, "isEqualToString:", CFSTR("PROGRAMCODE_MACOS")) & 1) != 0)
      {
        v7 = 2;
      }
      else if ((objc_msgSend(v6, "isEqualToString:", CFSTR("PROGRAMCODE_TVOS")) & 1) != 0)
      {
        v7 = 3;
      }
      else if ((objc_msgSend(v6, "isEqualToString:", CFSTR("PROGRAMCODE_WATCHOS")) & 1) != 0)
      {
        v7 = 4;
      }
      else if (objc_msgSend(v6, "isEqualToString:", CFSTR("PROGRAMCODE_VISIONOS")))
      {
        v7 = 5;
      }
      else
      {
        v7 = 0;
      }

      objc_msgSend(v4, sel_setProgramCode_, v7);
      if (*(_QWORD *)(a1 + 72))
        goto LABEL_19;
    }
    else
    {
      v8 = result;
      if (*(_QWORD *)(a1 + 72))
      {
LABEL_19:
        swift_bridgeObjectRetain();
        v9 = (void *)sub_2419AA0DC();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setDeviceType_, v9);

        sub_241973134(a1);
        return v3;
      }
    }
    sub_241973134(a1);

    return v3;
  }
  __break(1u);
  return result;
}

id sub_241971520(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id result;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;

  v2 = type metadata accessor for AssetPenetrationData();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v6 = result;
  if (!*(_QWORD *)(a1 + 24))
  {
    v12 = result;
    if (!*(_QWORD *)(a1 + 136))
      goto LABEL_5;
    goto LABEL_4;
  }
  sub_241943088(0, &qword_2571650D0);
  v7 = v6;
  v8 = swift_bridgeObjectRetain();
  v9 = sub_2419716D0(v8);
  objc_msgSend(v7, sel_setAssetSetStatus_, v9);

  if (*(_QWORD *)(a1 + 136))
  {
LABEL_4:
    swift_bridgeObjectRetain();
    v10 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setPreviousSystemBuild_, v10);

  }
LABEL_5:
  if ((*(_BYTE *)(a1 + 152) & 1) == 0)
    objc_msgSend(v6, sel_setBuildInstallationTimestampInSecondsSince1970_, *(_QWORD *)(a1 + 144));
  sub_241943088(0, &qword_2571650C8);
  sub_2419730F0(a1, (uint64_t)v4);
  v11 = sub_241972290(v4);
  objc_msgSend(v6, sel_setAssistantDimensions_, v11);

  sub_241973134(a1);
  return v6;
}

id sub_2419716D0(uint64_t a1)
{
  id result;
  int64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint32_t *p_align;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[6];

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = MEMORY[0x24BEE4AF8];
    v77 = result;
    v78 = a1;
    v82 = v3;
    if (v3)
    {
      v94[0] = MEMORY[0x24BEE4AF8];
      v5 = result;
      sub_241992200(0, v3, 0);
      v6 = 0;
      v7 = a1 + 32;
      v8 = v94[0];
      v9 = 0x24BE95000uLL;
      p_align = &stru_2511CBFE8.align;
      v11 = v3;
      v79 = a1 + 32;
      while (1)
      {
        v12 = *(_QWORD *)(v7 + 16 * v6);
        v13 = *(_QWORD *)(v12 + 16);
        if (v13)
          break;
        v40 = v4;
LABEL_39:
        v94[0] = v8;
        v42 = *(_QWORD *)(v8 + 16);
        v41 = *(_QWORD *)(v8 + 24);
        v43 = v42 + 1;
        if (v42 >= v41 >> 1)
        {
          v44 = v6;
          v45 = v7;
          sub_241992200(v41 > 1, v42 + 1, 1);
          v7 = v45;
          v6 = v44;
          v11 = v82;
          v8 = v94[0];
        }
        ++v6;
        *(_QWORD *)(v8 + 16) = v43;
        *(_QWORD *)(v8 + 8 * v42 + 32) = v40;
        if (v6 == v11)
          goto LABEL_44;
      }
      v80 = v6;
      v81 = v8;
      v93 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      v83 = v13;
      sub_2419AA3DC();
      v14 = 0;
      v84 = v12 + 32;
      while (1)
      {
        v85 = v14;
        v16 = v84 + 40 * v14;
        v17 = *(_QWORD *)(v16 + 8);
        v18 = *(_QWORD *)(v16 + 32);
        v19 = objc_allocWithZone(*(Class *)(v9 + 3736));
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = objc_msgSend(v19, sel_init);
        if (!result)
          break;
        v20 = result;
        v21 = (void *)sub_2419AA0DC();
        v86 = v20;
        objc_msgSend(v20, *((SEL *)p_align + 83), v21);

        if (v17)
        {
          swift_bridgeObjectRetain();
          v22 = (void *)sub_2419AA0DC();
          swift_bridgeObjectRelease();
        }
        else
        {
          v22 = 0;
        }
        v23 = v85;
        objc_msgSend(v86, sel_setAssetSetId_, v22, v77);

        if (v18)
        {
          v24 = *(_QWORD *)(v18 + 16);
          if (v24)
          {
            swift_bridgeObjectRetain();
            sub_2419AA3DC();
            v25 = (_QWORD *)(v18 + 56);
            while (1)
            {
              v90 = v24;
              v27 = *((unsigned __int8 *)v25 - 8);
              v28 = v25[1];
              v29 = v25[5];
              v31 = v25[6];
              v30 = v25[7];
              v32 = objc_allocWithZone(MEMORY[0x24BE95E88]);
              v88 = v29;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              result = objc_msgSend(v32, sel_init);
              if (!result)
                break;
              v33 = result;
              v34 = (void *)sub_2419AA0DC();
              objc_msgSend(v33, sel_setAssetName_, v34);

              objc_msgSend(v33, sel_setIsAssetPathValid_, v27);
              objc_msgSend(v33, sel_setAssetDownloadSizeInBytes_, v31);
              objc_msgSend(v33, sel_setAssetUnarchivedSizeInBytes_, v30);
              v35 = (id)sub_2419AA0DC();
              if ((objc_msgSend(v35, "isEqualToString:", CFSTR("UAFASSETSOURCE_UNKNOWN")) & 1) != 0)
              {
                v36 = 0;
                v37 = v90;
                v38 = v88;
              }
              else
              {
                v37 = v90;
                v38 = v88;
                if ((objc_msgSend(v35, "isEqualToString:", CFSTR("UAFASSETSOURCE_FACTORY_INSTALL")) & 1) != 0)
                {
                  v36 = 1;
                }
                else if ((objc_msgSend(v35, "isEqualToString:", CFSTR("UAFASSETSOURCE_ROOT")) & 1) != 0)
                {
                  v36 = 2;
                }
                else if ((objc_msgSend(v35, "isEqualToString:", CFSTR("UAFASSETSOURCE_TRIAL")) & 1) != 0)
                {
                  v36 = 3;
                }
                else if (objc_msgSend(v35, "isEqualToString:", CFSTR("UAFASSETSOURCE_MOBILE_ASSET")))
                {
                  v36 = 4;
                }
                else
                {
                  v36 = 0;
                }
              }

              objc_msgSend(v33, sel_setAssetSource_, v36);
              if (v28)
              {
                swift_bridgeObjectRetain();
                v39 = (void *)sub_2419AA0DC();
                swift_bridgeObjectRelease();
              }
              else
              {
                v39 = 0;
              }
              objc_msgSend(v33, sel_setAssetSpecifier_, v39);

              if (v38)
              {
                swift_bridgeObjectRetain();
                v26 = (void *)sub_2419AA0DC();
                swift_bridgeObjectRelease_n();
              }
              else
              {
                swift_bridgeObjectRelease();
                v26 = 0;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              objc_msgSend(v33, sel_setAssetVersion_, v26);

              sub_2419AA3C4();
              sub_2419AA3E8();
              sub_2419AA3F4();
              sub_2419AA3D0();
              v25 += 11;
              v24 = v37 - 1;
              if (!v24)
              {
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v4 = MEMORY[0x24BEE4AF8];
                v9 = 0x24BE95000;
                p_align = (_DWORD *)(&stru_2511CBFE8 + 24);
                v23 = v85;
                goto LABEL_36;
              }
            }
            __break(1u);
            break;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_36:
          sub_241943088(0, &qword_2571650F0);
          v15 = (void *)sub_2419AA1A8();
        }
        else
        {
          swift_bridgeObjectRelease();
          v15 = 0;
        }
        v14 = v23 + 1;
        swift_bridgeObjectRelease();
        objc_msgSend(v86, sel_setAssets_, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_2419AA3C4();
        sub_2419AA3E8();
        sub_2419AA3F4();
        sub_2419AA3D0();
        if (v14 == v83)
        {
          v40 = v93;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v8 = v81;
          v11 = v82;
          v6 = v80;
          v7 = v79;
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    v43 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    v46 = result;
    v8 = v4;
    if (v43)
    {
LABEL_44:
      v47 = v8;
      swift_bridgeObjectRetain();
      v48 = 0;
      v49 = MEMORY[0x24BEE4AF8];
      do
      {
        v50 = *(_QWORD *)(v47 + 8 * v48++ + 32);
        v94[0] = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2419728C4(v50, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_241972E54);
        swift_bridgeObjectRelease();
      }
      while (v43 != v48);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_241943088(0, &qword_2571650D8);
    v51 = (void *)sub_2419AA1A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v77, sel_setUafAssetSets_, v51);

    if (v82)
    {
      sub_2419921D4(0, v82, 0);
      v52 = v82;
      v53 = 0;
      v54 = v78 + 32;
      v55 = v4;
      do
      {
        v56 = *(_QWORD *)(v54 + 16 * v53 + 8);
        if (v56)
        {
          v92 = v4;
          v91 = *(_QWORD *)(v56 + 16);
          if (v91)
          {
            v87 = v53;
            v89 = v56 + 32;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            v57 = 0;
            while (1)
            {
              v58 = *(_QWORD *)(v89 + 24 * v57 + 16);
              v59 = objc_allocWithZone(MEMORY[0x24BE95EB8]);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              result = objc_msgSend(v59, sel_init);
              if (!result)
                goto LABEL_76;
              v60 = result;
              v61 = (void *)sub_2419AA0DC();
              objc_msgSend(v60, sel_setSubscriberName_, v61);

              v62 = *(_QWORD *)(v58 + 16);
              if (v62)
              {
                swift_bridgeObjectRetain();
                sub_2419AA3DC();
                sub_241943088(0, &qword_2571650E8);
                v63 = (uint64_t *)(v58 + 64);
                do
                {
                  v64 = *(v63 - 4);
                  v65 = *(v63 - 3);
                  v66 = *(v63 - 2);
                  v67 = *(v63 - 1);
                  v68 = *v63;
                  v63 += 5;
                  v94[0] = v64;
                  v94[1] = v65;
                  v94[2] = v66;
                  v94[3] = v67;
                  v94[4] = v68;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_24197239C(v94);
                  sub_2419AA3C4();
                  sub_2419AA3E8();
                  sub_2419AA3F4();
                  sub_2419AA3D0();
                  --v62;
                }
                while (v62);
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_241943088(0, &qword_2571650E8);
              v69 = (void *)sub_2419AA1A8();
              swift_bridgeObjectRelease();
              objc_msgSend(v60, sel_setSubscriptions_, v69);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              MEMORY[0x24269EE34]();
              if (*(_QWORD *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_2419AA1CC();
              ++v57;
              sub_2419AA1E4();
              sub_2419AA1C0();
              if (v57 == v91)
              {
                swift_bridgeObjectRelease();
                v70 = v92;
                v4 = MEMORY[0x24BEE4AF8];
                v53 = v87;
                v54 = v78 + 32;
                goto LABEL_64;
              }
            }
          }
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v70 = v4;
LABEL_64:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v52 = v82;
        }
        else
        {
          v70 = v4;
        }
        v72 = *(_QWORD *)(v55 + 16);
        v71 = *(_QWORD *)(v55 + 24);
        if (v72 >= v71 >> 1)
        {
          sub_2419921D4(v71 > 1, v72 + 1, 1);
          v52 = v82;
        }
        ++v53;
        *(_QWORD *)(v55 + 16) = v72 + 1;
        *(_QWORD *)(v55 + 8 * v72 + 32) = v70;
      }
      while (v53 != v52);
      swift_bridgeObjectRelease();
      v73 = *(_QWORD *)(v55 + 16);
      if (!v73)
        goto LABEL_73;
    }
    else
    {
      swift_bridgeObjectRelease();
      v55 = MEMORY[0x24BEE4AF8];
      v73 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (!v73)
      {
LABEL_73:
        swift_bridgeObjectRelease();
        sub_241943088(0, &qword_2571650E0);
        v76 = (void *)sub_2419AA1A8();
        swift_bridgeObjectRelease();
        objc_msgSend(v77, sel_setUafAssetSubscriptions_, v76);

        return v77;
      }
    }
    swift_bridgeObjectRetain();
    v74 = 0;
    do
    {
      v75 = *(_QWORD *)(v55 + 8 * v74++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2419728C4(v75, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_241972C40);
      swift_bridgeObjectRelease();
    }
    while (v73 != v74);
    swift_bridgeObjectRelease();
    goto LABEL_73;
  }
LABEL_77:
  __break(1u);
  return result;
}

id sub_241972290(_QWORD *a1)
{
  id result;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v3 = result;
    if (a1[11])
    {
      v4 = result;
      swift_bridgeObjectRetain();
      v5 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setSystemBuild_, v5);

      v6 = a1[15];
      if (v6)
      {
LABEL_4:
        v7 = a1[14];
        swift_bridgeObjectRetain();
        v8 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v7, v6);
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setSiriInputLocale_, v8);

        sub_241973134((uint64_t)a1);
        return v3;
      }
    }
    else
    {
      v9 = result;
      v6 = a1[15];
      if (v6)
        goto LABEL_4;
    }
    sub_241973134((uint64_t)a1);

    return v3;
  }
  __break(1u);
  return result;
}

id sub_24197239C(_QWORD *a1)
{
  id result;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
    goto LABEL_26;
  v3 = result;
  v4 = (void *)sub_2419AA0DC();
  objc_msgSend(v3, sel_setSubscriptionName_, v4);

  v5 = a1[2];
  v26 = v5;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_2419AA3DC();
    v7 = v5 + 32;
    do
    {
      v7 += 4;
      sub_2419AA628();
      sub_2419AA3C4();
      sub_2419AA3E8();
      sub_2419AA3F4();
      sub_2419AA3D0();
      --v6;
    }
    while (v6);
    sub_24197323C((uint64_t)&v26);
  }
  sub_241943088(0, (unint64_t *)&qword_2571630D8);
  v8 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAssetSetIndices_, v8);

  v9 = a1[3];
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v25 = a1;
      swift_bridgeObjectRetain();
      sub_2419AA3DC();
      v11 = v9 + 56;
      while (1)
      {
        v12 = objc_allocWithZone(MEMORY[0x24BE95EB0]);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        result = objc_msgSend(v12, sel_init);
        if (!result)
          break;
        v11 += 32;
        v13 = result;
        v14 = (void *)sub_2419AA0DC();
        objc_msgSend(v13, sel_setUsageName_, v14);

        v15 = (void *)sub_2419AA0DC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_setUsageValue_, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_2419AA3C4();
        sub_2419AA3E8();
        sub_2419AA3F4();
        sub_2419AA3D0();
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          a1 = v25;
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_25;
    }
LABEL_12:
    sub_241943088(0, &qword_257165100);
    v16 = (void *)sub_2419AA1A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v3, sel_setAssetSetUsages_, v16, v25);

  v17 = a1[4];
  if (!v17)
  {
    swift_bridgeObjectRelease();
    sub_24197323C((uint64_t)&v26);
    v24 = 0;
LABEL_23:
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setUsageAliases_, v24);

    return v3;
  }
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_24197323C((uint64_t)&v26);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_22:
    sub_241943088(0, &qword_2571650F8);
    v24 = (void *)sub_2419AA1A8();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  sub_2419AA3DC();
  v19 = v17 + 56;
  while (1)
  {
    v20 = objc_allocWithZone(MEMORY[0x24BE95EC0]);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    result = objc_msgSend(v20, sel_init);
    if (!result)
      break;
    v19 += 32;
    v21 = result;
    v22 = (void *)sub_2419AA0DC();
    objc_msgSend(v21, sel_setAliasName_, v22);

    v23 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setAliasValue_, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_2419AA3C4();
    sub_2419AA3E8();
    sub_2419AA3F4();
    sub_2419AA3D0();
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      sub_24197323C((uint64_t)&v26);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2419728C4(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2419AA424();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_2419AA424();
    swift_bridgeObjectRelease();
    v7 = v6 + v5;
    if (!__OFADD__(v6, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v6 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = v6 + v5;
  if (__OFADD__(v6, v5))
    goto LABEL_23;
LABEL_5:
  v8 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v8;
  v6 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    v10 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v7 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v6 = 1;
  }
  if (v8 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v7)
      v11 = v7;
    swift_bridgeObjectRetain();
    *v2 = MEMORY[0x24269F044](v6, v11, 1, v8);
    swift_bridgeObjectRelease();
    v10 = *v2 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_2419AA424();
    swift_bridgeObjectRelease();
    v8 = *v2;
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_2419AA1C0();
  }
  __break(1u);
  return result;
}

uint64_t (*sub_241972A88(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_241972B60(v6, a2, a3);
  return sub_241972ADC;
}

uint64_t (*sub_241972AE0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_241972BCC(v6, a2, a3);
  return sub_241972ADC;
}

void sub_241972B34(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_241972B60(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24269F038](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2419732A4;
  }
  __break(1u);
  return result;
}

void (*sub_241972BCC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24269F038](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_241972C38;
  }
  __break(1u);
  return result;
}

void sub_241972C38(id *a1)
{

}

uint64_t sub_241972C40(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2419AA424();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2419AA424();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241973264(&qword_257165110, &qword_257165108);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257165108);
          v12 = sub_241972A88(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241943088(0, &qword_2571650E0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_241972E54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2419AA424();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2419AA424();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241973264((unint64_t *)&unk_257165120, &qword_257165118);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257165118);
          v12 = sub_241972AE0(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241943088(0, &qword_2571650D8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_241973068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;

  v9 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);
  v9[3] = a4;
  v9[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v11 = a3 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  v12 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  return a3;
}

uint64_t sub_2419730F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssetPenetrationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241973134(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AssetPenetrationData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241973170()
{
  return type metadata accessor for AssetPenetrationSELFReporter();
}

uint64_t type metadata accessor for AssetPenetrationSELFReporter()
{
  uint64_t result;

  result = qword_257165008;
  if (!qword_257165008)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2419731B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AssetPenetrationSELFReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetPenetrationSELFReporter.__allocating_init(logger:reportingService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_24197323C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241973264(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SiriDigestMetricsSELFReporter.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = sub_241973C18(a1, v2);
  swift_release();
  return v3;
}

uint64_t sub_2419732F4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24197335C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2419733A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2419733F4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SiriDigestMetricsSELFReporter.init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_241973C18(a1, v1);
  swift_release();
  return v2;
}

uint64_t sub_241973468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_OWORD *)(v2 + 72) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_241973490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t (*v12)(int, int);
  __int128 v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v13 = *(_OWORD *)(v0 + 72);
  v14 = v1;
  v3 = OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  v4 = sub_2419752F4((uint64_t)&v13, v2 + v3);
  v5 = OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents;
  *(_QWORD *)(v0 + 104) = OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents;
  v6 = (uint64_t *)(v2 + v5);
  swift_beginAccess();
  *v6 = v4;
  swift_bridgeObjectRelease();
  v7 = sub_2419AA028();
  v8 = sub_2419AA238();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_24193B000, v7, v8, "#SiriDigestMetricsSELFReporter: Start Emitting extension execution metadata event", v9, 2u);
    MEMORY[0x24269F7A0](v9, -1, -1);
  }

  v12 = (uint64_t (*)(int, int))((char *)&dword_257164EF0 + dword_257164EF0);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v10;
  *v10 = v0;
  v10[1] = sub_2419735D8;
  return v12(1, 1);
}

uint64_t sub_2419735D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241973634()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint8_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = *(void **)(v0 + 120);
  if (v1)
  {
    v2 = (_QWORD *)(*(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 104));
    swift_beginAccess();
    v3 = v1;
    MEMORY[0x24269EE34]();
    if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2419AA1CC();
    sub_2419AA1E4();
    sub_2419AA1C0();
    swift_endAccess();
    v4 = sub_2419AA028();
    v5 = sub_2419AA238();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_24193B000, v4, v5, "#SiriDigestMetricsSELFReporter: Emitting extension execution metadata event", v6, 2u);
      MEMORY[0x24269F7A0](v6, -1, -1);
    }

  }
  else
  {
    v4 = sub_2419AA028();
    v7 = sub_2419AA244();
    if (os_log_type_enabled(v4, (os_log_type_t)v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_24193B000, v4, (os_log_type_t)v7, "Unable to create execution metadata event", v8, 2u);
      MEMORY[0x24269F7A0](v8, -1, -1);
    }
  }

  v9 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 104));
  *(_QWORD *)(v0 + 128) = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_2419AA424();
    *(_QWORD *)(v0 + 136) = v17;
    if (v17)
      goto LABEL_11;
LABEL_16:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 136) = v10;
  if (!v10)
    goto LABEL_16;
LABEL_11:
  v11 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v11
                                    + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_reportingService);
  v12 = *(_QWORD *)(v0 + 128);
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x24269F038](0);
    v11 = *(_QWORD *)(v0 + 64);
  }
  else
  {
    v13 = *(id *)(v12 + 32);
  }
  *(_QWORD *)(v0 + 152) = v13;
  *(_QWORD *)(v0 + 160) = 1;
  v14 = *(_QWORD *)(v0 + 96);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v15;
  *v15 = v0;
  v15[1] = sub_2419738D4;
  return sub_24194F754((uint64_t)v13, v11 + v14);
}

uint64_t sub_2419738D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

id sub_241973940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 136);

  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 128);
    if ((v5 & 0xC000000000000001) != 0)
      result = (id)MEMORY[0x24269F038](*(_QWORD *)(v0 + 160));
    else
      result = *(id *)(v5 + 8 * v4 + 32);
    v6 = (uint64_t)result;
    *(_QWORD *)(v0 + 152) = result;
    *(_QWORD *)(v0 + 160) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      v7 = *(_QWORD *)(v0 + 96);
      v8 = *(_QWORD *)(v0 + 64);
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v9;
      *v9 = v0;
      v9[1] = sub_2419738D4;
      return (id)sub_24194F754(v6, v8 + v7);
    }
  }
  return result;
}

uint64_t sub_241973A14()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Unable to report event", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v4 = *(void **)(v0 + 152);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241973AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t SiriDigestMetricsSELFReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SiriDigestMetricsSELFReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t SiriDigestMetricsSELFAdapter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SiriDigestMetricsSELFAdapter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_241973C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  *(_QWORD *)(a2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents) = MEMORY[0x24BEE4AF8];
  v4 = a2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  v5 = sub_2419AA040();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  type metadata accessor for SELFReportingService();
  v7 = swift_allocObject();
  v8 = (void *)objc_opt_self();
  swift_retain();
  *(_QWORD *)(v7 + 24) = objc_msgSend(v8, sel_sharedLoggerWithPersistenceConfiguration_, 1);
  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
  v10 = objc_msgSend(v9, sel_defaultMessageStream);

  *(_QWORD *)(v7 + 16) = v10;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_reportingService) = v7;
  return a2;
}

void *sub_241973D48(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  unsigned int *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95548]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for DeviceUsageMetrics(0);
    if (*(_QWORD *)(a1 + *(int *)(v4 + 24) + 8))
    {
      v5 = (void *)sub_2419AA0DC();
      objc_msgSend(v3, sel_setDeviceType_, v5);

    }
    v6 = (unsigned int *)(a1 + *(int *)(v4 + 28));
    if ((v6[1] & 1) == 0)
      objc_msgSend(v3, sel_setProgramCode_, *v6);
  }
  else
  {
    v7 = sub_2419AA028();
    v8 = sub_2419AA244();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_24193B000, v7, v8, "Unable to compose ODDSiriSchemaODDFixedDimensions SELF Event", v9, 2u);
      MEMORY[0x24269F7A0](v9, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_241973E70(uint64_t a1)
{
  id v2;
  void *v3;
  int *v4;
  void *v5;
  unsigned int *v6;
  unsigned int *v7;
  void *v8;
  void *v9;
  unsigned int *v10;
  unsigned int *v11;
  void *v12;
  unsigned int *v13;
  int v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954C0]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = (int *)type metadata accessor for DeviceUsageMetrics(0);
    if (*(_QWORD *)(a1 + v4[9] + 8))
    {
      v5 = (void *)sub_2419AA0DC();
      objc_msgSend(v3, sel_setSystemBuild_, v5);

    }
    v6 = (unsigned int *)(a1 + v4[10]);
    if ((v6[1] & 1) == 0)
      objc_msgSend(v3, sel_setDataSharingOptInStatus_, *v6);
    v7 = (unsigned int *)(a1 + v4[11]);
    if ((v7[1] & 1) == 0)
      objc_msgSend(v3, sel_setViewInterface_, *v7);
    if (*(_QWORD *)(a1 + v4[12] + 8))
    {
      v8 = (void *)sub_2419AA0DC();
      objc_msgSend(v3, sel_setAudioInterfaceVendorId_, v8);

    }
    if (*(_QWORD *)(a1 + v4[13] + 8))
    {
      v9 = (void *)sub_2419AA0DC();
      objc_msgSend(v3, sel_setAudioInterfaceProductId_, v9);

    }
    v10 = (unsigned int *)(a1 + v4[14]);
    if ((v10[1] & 1) == 0)
      objc_msgSend(v3, sel_setAsrLocation_, *v10);
    v11 = (unsigned int *)(a1 + v4[15]);
    if ((v11[1] & 1) == 0)
      objc_msgSend(v3, sel_setNlLocation_, *v11);
    if (*(_QWORD *)(a1 + v4[16]))
      objc_msgSend(v3, sel_setSiriInputLocale_);
    if (*(_QWORD *)(a1 + v4[18] + 8))
    {
      v12 = (void *)sub_2419AA0DC();
      objc_msgSend(v3, sel_setSubDomain_, v12);

    }
    v13 = (unsigned int *)(a1 + v4[34]);
    if ((v13[1] & 1) == 0)
      objc_msgSend(v3, sel_setResponseCategory_, *v13);
    v14 = *(unsigned __int8 *)(a1 + v4[36]);
    if (v14 != 2)
      objc_msgSend(v3, sel_setIsIntelligenceEngineRequest_, v14 & 1);
  }
  else
  {
    v15 = sub_2419AA028();
    v16 = sub_2419AA244();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_24193B000, v15, v16, "Unable to compose ODDSiriSchemaODDAssistantDimensions SELF Event", v17, 2u);
      MEMORY[0x24269F7A0](v17, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_241974104(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE955A0]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for DeviceUsageMetrics(0);
    v5 = (unsigned int *)(a1 + *(int *)(v4 + 76));
    if ((v5[1] & 1) == 0)
      objc_msgSend(v3, sel_setTotalTurnCount_, *v5);
    v6 = (unsigned int *)(a1 + *(int *)(v4 + 80));
    if ((v6[1] & 1) == 0)
      objc_msgSend(v3, sel_setValidTurnCount_, *v6);
  }
  else
  {
    v7 = sub_2419AA028();
    v8 = sub_2419AA244();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_24193B000, v7, v8, "Unable to compose ODDSiriSchemaODDTurnCounts SELF Event", v9, 2u);
      MEMORY[0x24269F7A0](v9, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_24197421C(uint64_t a1)
{
  id v2;
  void *v3;
  int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95590]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = (int *)type metadata accessor for DeviceUsageMetrics(0);
    v5 = (unsigned int *)(a1 + v4[21]);
    if ((v5[1] & 1) == 0)
      objc_msgSend(v3, sel_setSiriTasksStarted_, *v5);
    v6 = (unsigned int *)(a1 + v4[22]);
    if ((v6[1] & 1) == 0)
      objc_msgSend(v3, sel_setSiriTasksCompleted_, *v6);
    v7 = (unsigned int *)(a1 + v4[23]);
    if ((v7[1] & 1) == 0)
      objc_msgSend(v3, sel_setFlowTasksStarted_, *v7);
    v8 = (unsigned int *)(a1 + v4[24]);
    if ((v8[1] & 1) == 0)
      objc_msgSend(v3, sel_setFlowTasksCompleted_, *v8);
  }
  else
  {
    v9 = sub_2419AA028();
    v10 = sub_2419AA244();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_24193B000, v9, v10, "Unable to compose ODDSiriSchemaODDTaskCounts SELF Event", v11, 2u);
      MEMORY[0x24269F7A0](v11, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_24197437C(uint64_t a1)
{
  id v2;
  void *v3;
  int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95550]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = (int *)type metadata accessor for DeviceUsageMetrics(0);
    v5 = (unsigned int *)(a1 + v4[25]);
    if ((v5[1] & 1) == 0)
      objc_msgSend(v3, sel_setReliabilityRequestCount_, *v5);
    v6 = (unsigned int *)(a1 + v4[26]);
    if ((v6[1] & 1) == 0)
      objc_msgSend(v3, sel_setReliabilityTurnCount_, *v6);
    v7 = (unsigned int *)(a1 + v4[27]);
    if ((v7[1] & 1) == 0)
      objc_msgSend(v3, sel_setClientErrorCount_, *v7);
    v8 = (unsigned int *)(a1 + v4[28]);
    if ((v8[1] & 1) == 0)
      objc_msgSend(v3, sel_setUndesiredResponseCount_, *v8);
    v9 = (unsigned int *)(a1 + v4[29]);
    if ((v9[1] & 1) == 0)
      objc_msgSend(v3, sel_setFatalResponseCount_, *v9);
    v10 = (unsigned int *)(a1 + v4[30]);
    if ((v10[1] & 1) == 0)
      objc_msgSend(v3, sel_setFailureResponseCount_, *v10);
    v11 = (unsigned int *)(a1 + v4[31]);
    if ((v11[1] & 1) == 0)
      objc_msgSend(v3, sel_setSiriUnavailableResponseCount_, *v11);
  }
  else
  {
    v12 = sub_2419AA028();
    v13 = sub_2419AA244();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_24193B000, v12, v13, "Unable to compose ODDSiriSchemaODDReliabilityCounts SELF Event", v14, 2u);
      MEMORY[0x24269F7A0](v14, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_241974548(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954A8]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = sub_241974104(a1);
    objc_msgSend(v3, sel_setTurnCounts_, v4);

    v5 = sub_24197421C(a1);
    objc_msgSend(v3, sel_setTaskCounts_, v5);

    v6 = sub_24197437C(a1);
    objc_msgSend(v3, sel_setReliabilityCounts_, v6);
  }
  else
  {
    v6 = sub_2419AA028();
    v7 = sub_2419AA244();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_24193B000, v6, v7, "Unable to compose ODDSiriSchemaODDAssistantCounts SELF Event", v8, 2u);
      MEMORY[0x24269F7A0](v8, -1, -1);
    }
    v3 = 0;
  }

  return v3;
}

void *sub_241974680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  id v22;
  void *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD v33[3];
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  id v36;

  v4 = sub_2419A9D1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954B8]), sel_init);
  if (v11)
  {
    v12 = v11;
    v13 = sub_241973E70(a1);
    objc_msgSend(v12, sel_setDimensions_, v13);

    v14 = sub_241974548(a1);
    objc_msgSend(v12, sel_setCounts_, v14);

    v15 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
    v16 = objc_msgSend(v15, sel_longLivedIdentifierUploadingEnabled);

    if (v16)
    {
      v17 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for DeviceUsageMetrics(0) + 140));
      if (v17)
      {
        v18 = *(_QWORD *)(v17 + 16);
        v33[1] = v17;
        v33[2] = a2;
        if (v18)
        {
          v19 = v17 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
          v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
          v34 = *(_QWORD *)(v5 + 72);
          v35 = v20;
          swift_bridgeObjectRetain();
          while (1)
          {
            v35(v10, v19, v4);
            v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
            v21(v10, 0, 1, v4);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
              break;
            (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
            v22 = objc_allocWithZone(MEMORY[0x24BE95C78]);
            v23 = (void *)sub_2419A9D04();
            v24 = objc_msgSend(v22, sel_initWithNSUUID_, v23);

            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
            objc_msgSend(v12, sel_addTurnIds_, v24);

            v19 += v34;
            if (!--v18)
              goto LABEL_14;
          }
        }
        else
        {
          v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
          swift_bridgeObjectRetain();
LABEL_14:
          v21(v10, 1, 1, v4);
        }
        swift_bridgeObjectRelease();
        v29 = v12;
        v30 = sub_2419AA028();
        v31 = sub_2419AA22C();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v32 = 134217984;
          v36 = objc_msgSend(v29, sel_turnIdsCount);
          sub_2419AA2EC();

          _os_log_impl(&dword_24193B000, v30, v31, "#MetricsSELFReporter: Added %ld turnIds to ODDAssistantDigest.", v32, 0xCu);
          MEMORY[0x24269F7A0](v32, -1, -1);
        }
        else
        {

        }
      }
    }
  }
  else
  {
    v25 = sub_2419AA028();
    v26 = sub_2419AA244();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_24193B000, v25, v26, "#MetricsSELFReporter: Unable to compose ODDSiriSchemaODDAssistantDigest SELF Event", v27, 2u);
      MEMORY[0x24269F7A0](v27, -1, -1);
    }

    return 0;
  }
  return v12;
}

void *sub_241974A58(uint64_t a1)
{
  id v2;
  void *v3;
  int *v4;
  void *v5;
  unsigned int *v6;
  unsigned int *v7;
  void *v8;
  void *v9;
  unsigned int *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95530]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = (int *)type metadata accessor for DeviceUsageMetrics(0);
    if (*(_QWORD *)(a1 + v4[9] + 8))
    {
      v5 = (void *)sub_2419AA0DC();
      objc_msgSend(v3, sel_setSystemBuild_, v5);

    }
    v6 = (unsigned int *)(a1 + v4[10]);
    if ((v6[1] & 1) == 0)
      objc_msgSend(v3, sel_setDataSharingOptInStatus_, *v6);
    v7 = (unsigned int *)(a1 + v4[11]);
    if ((v7[1] & 1) == 0)
      objc_msgSend(v3, sel_setViewInterface_, *v7);
    if (*(_QWORD *)(a1 + v4[12] + 8))
    {
      v8 = (void *)sub_2419AA0DC();
      objc_msgSend(v3, sel_setAudioInterfaceVendorId_, v8);

    }
    if (*(_QWORD *)(a1 + v4[13] + 8))
    {
      v9 = (void *)sub_2419AA0DC();
      objc_msgSend(v3, sel_setAudioInterfaceProductId_, v9);

    }
    v10 = (unsigned int *)(a1 + v4[14]);
    if ((v10[1] & 1) == 0)
      objc_msgSend(v3, sel_setAsrLocation_, *v10);
    if (*(_QWORD *)(a1 + v4[17]))
      objc_msgSend(v3, sel_setDictationLocale_);
  }
  else
  {
    v11 = sub_2419AA028();
    v12 = sub_2419AA244();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_24193B000, v11, v12, "Unable to compose ODDSiriSchemaODDDictationDimensions SELF Event", v13, 2u);
      MEMORY[0x24269F7A0](v13, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_241974C4C(uint64_t a1)
{
  id v2;
  void *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95518]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = sub_241974104(a1);
    objc_msgSend(v3, sel_setTurnCounts_, v4);
  }
  else
  {
    v4 = sub_2419AA028();
    v5 = sub_2419AA244();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_24193B000, v4, v5, "Unable to compose ODDSiriSchemaODDDictationCounts SELF Event", v6, 2u);
      MEMORY[0x24269F7A0](v6, -1, -1);
    }
    v3 = 0;
  }

  return v3;
}

void *sub_241974D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  id v22;
  void *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD v33[3];
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  id v36;

  v4 = sub_2419A9D1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95528]), sel_init);
  if (v11)
  {
    v12 = v11;
    v13 = sub_241974A58(a1);
    objc_msgSend(v12, sel_setDimensions_, v13);

    v14 = sub_241974C4C(a1);
    objc_msgSend(v12, sel_setCounts_, v14);

    v15 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
    v16 = objc_msgSend(v15, sel_longLivedIdentifierUploadingEnabled);

    if (v16)
    {
      v17 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for DeviceUsageMetrics(0) + 140));
      if (v17)
      {
        v18 = *(_QWORD *)(v17 + 16);
        v33[1] = v17;
        v33[2] = a2;
        if (v18)
        {
          v19 = v17 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
          v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
          v34 = *(_QWORD *)(v5 + 72);
          v35 = v20;
          swift_bridgeObjectRetain();
          while (1)
          {
            v35(v10, v19, v4);
            v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
            v21(v10, 0, 1, v4);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
              break;
            (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
            v22 = objc_allocWithZone(MEMORY[0x24BE95C78]);
            v23 = (void *)sub_2419A9D04();
            v24 = objc_msgSend(v22, sel_initWithNSUUID_, v23);

            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
            objc_msgSend(v12, sel_addTurnIds_, v24);

            v19 += v34;
            if (!--v18)
              goto LABEL_14;
          }
        }
        else
        {
          v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
          swift_bridgeObjectRetain();
LABEL_14:
          v21(v10, 1, 1, v4);
        }
        swift_bridgeObjectRelease();
        v29 = v12;
        v30 = sub_2419AA028();
        v31 = sub_2419AA22C();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v32 = 134217984;
          v36 = objc_msgSend(v29, sel_turnIdsCount);
          sub_2419AA2EC();

          _os_log_impl(&dword_24193B000, v30, v31, "#MetricsSELFReporter: Added %ld turnIds to ODDDictationDigest.", v32, 0xCu);
          MEMORY[0x24269F7A0](v32, -1, -1);
        }
        else
        {

        }
      }
    }
  }
  else
  {
    v25 = sub_2419AA028();
    v26 = sub_2419AA244();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_24193B000, v25, v26, "Unable to compose ODDSiriSchemaODDDictationDigest SELF Event", v27, 2u);
      MEMORY[0x24269F7A0](v27, -1, -1);
    }

    return 0;
  }
  return v12;
}

NSObject *sub_24197510C(uint64_t a1, uint64_t a2, Class *a3, uint64_t (*a4)(uint64_t, uint64_t), const char *a5, const char *a6)
{
  NSObject *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;

  v11 = objc_msgSend(objc_allocWithZone(*a3), sel_init);
  if (!v11)
  {
    v12 = sub_2419AA028();
    v20 = sub_2419AA244();
    if (os_log_type_enabled(v12, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_24193B000, v12, v20, a6, v21, 2u);
      MEMORY[0x24269F7A0](v21, -1, -1);
    }
    goto LABEL_13;
  }
  v12 = v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
    v22 = sub_2419AA028();
    v23 = sub_2419AA244();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_24193B000, v22, v23, a5, v24, 2u);
      MEMORY[0x24269F7A0](v24, -1, -1);
    }

LABEL_13:
    return 0;
  }
  v14 = *(_QWORD *)(type metadata accessor for DeviceUsageMetrics(0) - 8);
  v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = sub_241973D48(v15);
  -[NSObject setFixedDimensions:](v12, sel_setFixedDimensions_, v16);

  v17 = *(_QWORD *)(v14 + 72);
  swift_bridgeObjectRetain();
  do
  {
    v18 = a4(v15, a2);
    if (v18)
    {
      v19 = (void *)v18;
      -[NSObject addDigests:](v12, sel_addDigests_, v18);

    }
    v15 += v17;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_2419752F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  int v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  int isUniquelyReferenced_nonNull_native;
  char v77;
  unint64_t v78;
  uint64_t v79;
  _BOOL8 v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  unint64_t *v92;
  void (*v93)(_QWORD *);
  unint64_t *v94;
  unint64_t v95;
  char v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t *v101;
  void (*v102)(_QWORD *);
  unint64_t *v103;
  unint64_t v104;
  char v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  id v131;
  void *v132;
  id v133;
  NSObject *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  void *v151;
  uint64_t v152;
  id v153;
  NSObject *v154;
  id v155;
  uint64_t v156;
  NSObject *v157;
  os_log_type_t v158;
  uint8_t *v159;
  uint64_t result;
  _QWORD v161[2];
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD v186[4];
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571652C0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v161 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v184 = (uint64_t)v161 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v183 = (uint64_t)v161 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v166 = (uint64_t)v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v169 = (char *)v161 - v17;
  v179 = type metadata accessor for EventMetadata(0);
  v185 = *(_QWORD *)(v179 - 8);
  v18 = MEMORY[0x24BDAC7A8](v179);
  v20 = (char *)v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v180 = (uint64_t)v161 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v161 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v168 = (uint64_t)v161 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v174 = (uint64_t)v161 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v173 = (uint64_t)v161 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v167 = (uint64_t)v161 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)v161 - v34;
  v165 = type metadata accessor for DeviceUsageMetrics(0);
  v36 = MEMORY[0x24BDAC7A8](v165);
  v164 = (uint64_t)v161 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v163 = (uint64_t)v161 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)v161 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v47 = (char *)v161 - v46;
  v48 = *(_QWORD *)(a1 + 16);
  v49 = *(_QWORD *)(v48 + 16);
  if (!v49)
  {
    v157 = sub_2419AA028();
    v158 = sub_2419AA22C();
    if (os_log_type_enabled(v157, v158))
    {
      v159 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v159 = 0;
      _os_log_impl(&dword_24193B000, v157, v158, "No On-Device Digest metrics available", v159, 2u);
      MEMORY[0x24269F7A0](v159, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
  v177 = v45;
  v178 = a2;
  v182 = v20;
  v189 = MEMORY[0x24BEE4AF8];
  v187 = MEMORY[0x24BEE4B00];
  v188 = MEMORY[0x24BEE4B00];
  v162 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v50 = v48 + v162;
  v170 = v35;
  v51 = *(_QWORD *)(v44 + 72);
  v161[1] = v48;
  swift_bridgeObjectRetain();
  v172 = v7;
  v181 = v10;
  v52 = (uint64_t)v169;
  v171 = v25;
  v53 = v173;
  v54 = v174;
  v55 = v165;
  v175 = v51;
  v176 = v43;
  do
  {
    sub_241943C64(v50, (uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
    v56 = v47[*(int *)(v55 + 32)];
    if (v56 == 2)
    {
      v57 = v177;
      sub_241943C64((uint64_t)v47, v177, type metadata accessor for DeviceUsageMetrics);
      v58 = v166;
      sub_2419766FC(v57, v166);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v58, 1, v179) == 1)
      {
        sub_241943CA8(v57, type metadata accessor for DeviceUsageMetrics);
        sub_241943CA8((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
        sub_24195FA30(v58);
        v51 = v175;
        v43 = v176;
      }
      else
      {
        sub_24195C340(v58, v54, type metadata accessor for EventMetadata);
        v72 = v187;
        v51 = v175;
        v73 = (uint64_t)v171;
        if (!*(_QWORD *)(v187 + 16) || (sub_24195B694(v54), (v74 & 1) == 0))
        {
          v75 = v168;
          sub_241943C64(v54, v168, type metadata accessor for EventMetadata);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v186[0] = v72;
          v187 = 0x8000000000000000;
          v78 = sub_24195B694(v75);
          v79 = *(_QWORD *)(v72 + 16);
          v80 = (v77 & 1) == 0;
          v81 = v79 + v80;
          if (__OFADD__(v79, v80))
            goto LABEL_123;
          v82 = v77;
          if (*(_QWORD *)(v72 + 24) >= v81)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_241980F44();
          }
          else
          {
            sub_241994D88(v81, isUniquelyReferenced_nonNull_native);
            v83 = sub_24195B694(v168);
            if ((v82 & 1) != (v84 & 1))
              goto LABEL_128;
            v78 = v83;
          }
          v73 = (uint64_t)v171;
          v87 = (_QWORD *)v186[0];
          if ((v82 & 1) != 0)
          {
            v88 = *(_QWORD *)(v186[0] + 56);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v88 + 8 * v78) = MEMORY[0x24BEE4AF8];
          }
          else
          {
            *(_QWORD *)(v186[0] + 8 * (v78 >> 6) + 64) |= 1 << v78;
            sub_241943C64(v168, v87[6] + *(_QWORD *)(v185 + 72) * v78, type metadata accessor for EventMetadata);
            *(_QWORD *)(v87[7] + 8 * v78) = MEMORY[0x24BEE4AF8];
            v99 = v87[2];
            v90 = __OFADD__(v99, 1);
            v100 = v99 + 1;
            if (v90)
              goto LABEL_125;
            v87[2] = v100;
          }
          v187 = (unint64_t)v87;
          swift_bridgeObjectRelease();
          sub_241943CA8(v168, type metadata accessor for EventMetadata);
          v54 = v174;
        }
        sub_241943C64(v54, v73, type metadata accessor for EventMetadata);
        v102 = sub_24197C154(v186, v73);
        if (*v101)
        {
          v103 = v101;
          sub_241943C64(v177, v164, type metadata accessor for DeviceUsageMetrics);
          v104 = *v103;
          v105 = swift_isUniquelyReferenced_nonNull_native();
          *v103 = v104;
          if ((v105 & 1) == 0)
          {
            v104 = sub_241980724(0, *(_QWORD *)(v104 + 16) + 1, 1, v104);
            *v103 = v104;
          }
          v107 = *(_QWORD *)(v104 + 16);
          v106 = *(_QWORD *)(v104 + 24);
          if (v107 >= v106 >> 1)
          {
            v104 = sub_241980724(v106 > 1, v107 + 1, 1, v104);
            *v103 = v104;
          }
          v53 = v173;
          *(_QWORD *)(v104 + 16) = v107 + 1;
          sub_24195C340(v164, v104 + v162 + v107 * v51, type metadata accessor for DeviceUsageMetrics);
          ((void (*)(_QWORD *, _QWORD))v102)(v186, 0);
          sub_241943CA8((uint64_t)v171, type metadata accessor for EventMetadata);
          v54 = v174;
          sub_241943CA8(v174, type metadata accessor for EventMetadata);
          sub_241943CA8(v177, type metadata accessor for DeviceUsageMetrics);
          sub_241943CA8((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
          v52 = (uint64_t)v169;
          v55 = v165;
          v43 = v176;
        }
        else
        {
          ((void (*)(_QWORD *, _QWORD))v102)(v186, 0);
          sub_241943CA8(v73, type metadata accessor for EventMetadata);
          sub_241943CA8(v54, type metadata accessor for EventMetadata);
          sub_241943CA8(v177, type metadata accessor for DeviceUsageMetrics);
          sub_241943CA8((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
          v52 = (uint64_t)v169;
          v53 = v173;
          v43 = v176;
        }
      }
    }
    else if (v56 == 1)
    {
      sub_241943C64((uint64_t)v47, (uint64_t)v43, type metadata accessor for DeviceUsageMetrics);
      sub_2419766FC((uint64_t)v43, v52);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v52, 1, v179) == 1)
      {
        sub_241943CA8((uint64_t)v43, type metadata accessor for DeviceUsageMetrics);
        sub_241943CA8((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
        sub_24195FA30(v52);
      }
      else
      {
        v59 = (uint64_t)v170;
        sub_24195C340(v52, (uint64_t)v170, type metadata accessor for EventMetadata);
        v60 = v188;
        if (!*(_QWORD *)(v188 + 16) || (sub_24195B694(v59), (v61 & 1) == 0))
        {
          v62 = v167;
          sub_241943C64(v59, v167, type metadata accessor for EventMetadata);
          v63 = swift_isUniquelyReferenced_nonNull_native();
          v186[0] = v60;
          v188 = 0x8000000000000000;
          v65 = sub_24195B694(v62);
          v66 = *(_QWORD *)(v60 + 16);
          v67 = (v64 & 1) == 0;
          v68 = v66 + v67;
          if (__OFADD__(v66, v67))
            goto LABEL_122;
          v69 = v64;
          if (*(_QWORD *)(v60 + 24) >= v68)
          {
            if ((v63 & 1) == 0)
              sub_241980F44();
          }
          else
          {
            sub_241994D88(v68, v63);
            v70 = sub_24195B694(v167);
            if ((v69 & 1) != (v71 & 1))
              goto LABEL_128;
            v65 = v70;
          }
          v59 = (uint64_t)v170;
          v85 = (_QWORD *)v186[0];
          if ((v69 & 1) != 0)
          {
            v86 = *(_QWORD *)(v186[0] + 56);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v86 + 8 * v65) = MEMORY[0x24BEE4AF8];
          }
          else
          {
            *(_QWORD *)(v186[0] + 8 * (v65 >> 6) + 64) |= 1 << v65;
            sub_241943C64(v167, v85[6] + *(_QWORD *)(v185 + 72) * v65, type metadata accessor for EventMetadata);
            *(_QWORD *)(v85[7] + 8 * v65) = MEMORY[0x24BEE4AF8];
            v89 = v85[2];
            v90 = __OFADD__(v89, 1);
            v91 = v89 + 1;
            if (v90)
              goto LABEL_124;
            v85[2] = v91;
          }
          v188 = (unint64_t)v85;
          swift_bridgeObjectRelease();
          sub_241943CA8(v167, type metadata accessor for EventMetadata);
          v53 = v173;
          v54 = v174;
        }
        sub_241943C64(v59, v53, type metadata accessor for EventMetadata);
        v93 = sub_24197C154(v186, v53);
        if (*v92)
        {
          v94 = v92;
          sub_241943C64((uint64_t)v176, v163, type metadata accessor for DeviceUsageMetrics);
          v95 = *v94;
          v96 = swift_isUniquelyReferenced_nonNull_native();
          *v94 = v95;
          if ((v96 & 1) == 0)
          {
            v95 = sub_241980724(0, *(_QWORD *)(v95 + 16) + 1, 1, v95);
            *v94 = v95;
          }
          v51 = v175;
          v98 = *(_QWORD *)(v95 + 16);
          v97 = *(_QWORD *)(v95 + 24);
          if (v98 >= v97 >> 1)
          {
            v95 = sub_241980724(v97 > 1, v98 + 1, 1, v95);
            *v94 = v95;
          }
          *(_QWORD *)(v95 + 16) = v98 + 1;
          sub_24195C340(v163, v95 + v162 + v98 * v51, type metadata accessor for DeviceUsageMetrics);
          ((void (*)(_QWORD *, _QWORD))v93)(v186, 0);
          v53 = v173;
          sub_241943CA8(v173, type metadata accessor for EventMetadata);
          sub_241943CA8((uint64_t)v170, type metadata accessor for EventMetadata);
          v43 = v176;
          sub_241943CA8((uint64_t)v176, type metadata accessor for DeviceUsageMetrics);
          sub_241943CA8((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
          v52 = (uint64_t)v169;
          v54 = v174;
          v55 = v165;
        }
        else
        {
          ((void (*)(_QWORD *, _QWORD))v93)(v186, 0);
          sub_241943CA8(v53, type metadata accessor for EventMetadata);
          sub_241943CA8(v59, type metadata accessor for EventMetadata);
          v43 = v176;
          sub_241943CA8((uint64_t)v176, type metadata accessor for DeviceUsageMetrics);
          sub_241943CA8((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
          v52 = (uint64_t)v169;
          v55 = v165;
          v51 = v175;
        }
      }
    }
    else
    {
      sub_241943CA8((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
    }
    v50 += v51;
    --v49;
  }
  while (v49);
  swift_bridgeObjectRelease();
  v108 = *(_QWORD *)(v188 + 64);
  v176 = (char *)(v188 + 64);
  v109 = 1 << *(_BYTE *)(v188 + 32);
  v110 = -1;
  if (v109 < 64)
    v110 = ~(-1 << v109);
  v111 = v110 & v108;
  v177 = (unint64_t)(v109 + 63) >> 6;
  v175 = v177 - 1;
  v179 = v188;
  swift_bridgeObjectRetain();
  v112 = 0;
  v113 = (uint64_t *)&unk_2571652C8;
  while (1)
  {
    if (v111)
    {
      v114 = __clz(__rbit64(v111));
      v111 &= v111 - 1;
      v115 = v114 | (v112 << 6);
LABEL_57:
      v116 = v179;
      v117 = v184;
      sub_241943C64(*(_QWORD *)(v179 + 48) + *(_QWORD *)(v185 + 72) * v115, v184, type metadata accessor for EventMetadata);
      v118 = *(_QWORD *)(v116 + 56);
      v119 = __swift_instantiateConcreteTypeFromMangledName(v113);
      *(_QWORD *)(v117 + *(int *)(v119 + 48)) = *(_QWORD *)(v118 + 8 * v115);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v117, 0, 1, v119);
      swift_bridgeObjectRetain();
      goto LABEL_76;
    }
    v120 = v112 + 1;
    if (__OFADD__(v112, 1))
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    if (v120 < v177)
    {
      v121 = *(_QWORD *)&v176[8 * v120];
      if (v121)
        goto LABEL_61;
      v122 = v112 + 2;
      ++v112;
      if (v120 + 1 < v177)
      {
        v121 = *(_QWORD *)&v176[8 * v122];
        if (v121)
          goto LABEL_64;
        v112 = v120 + 1;
        if (v120 + 2 < v177)
        {
          v121 = *(_QWORD *)&v176[8 * v120 + 16];
          if (v121)
          {
            v120 += 2;
            goto LABEL_61;
          }
          v122 = v120 + 3;
          v112 = v120 + 2;
          if (v120 + 3 < v177)
          {
            v121 = *(_QWORD *)&v176[8 * v122];
            if (v121)
            {
LABEL_64:
              v120 = v122;
LABEL_61:
              v111 = (v121 - 1) & v121;
              v115 = __clz(__rbit64(v121)) + (v120 << 6);
              v112 = v120;
              goto LABEL_57;
            }
            while (1)
            {
              v120 = v122 + 1;
              if (__OFADD__(v122, 1))
                goto LABEL_126;
              if (v120 >= v177)
                break;
              v121 = *(_QWORD *)&v176[8 * v120];
              ++v122;
              if (v121)
                goto LABEL_61;
            }
            v112 = v175;
          }
        }
      }
    }
    v123 = __swift_instantiateConcreteTypeFromMangledName(v113);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v184, 1, 1, v123);
    v111 = 0;
LABEL_76:
    v124 = v183;
    sub_2419766B4(v184, v183);
    v125 = v113;
    v126 = __swift_instantiateConcreteTypeFromMangledName(v113);
    v127 = *(_QWORD *)(v126 - 8);
    v128 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
    if (v128(v124, 1, v126) == 1)
      break;
    v129 = *(_QWORD *)(v183 + *(int *)(v126 + 48));
    v130 = v180;
    sub_24195C340(v183, v180, type metadata accessor for EventMetadata);
    v131 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    if (v131)
    {
      v132 = v131;
      if (*(_QWORD *)(v129 + 16))
      {
        v133 = EventMetadata.transformToODDClientEventMetadata()();
        objc_msgSend(v132, sel_setEventMetadata_, v133);
        v134 = sub_24197510C(v129, v178, (Class *)0x24BE954B0, (uint64_t (*)(uint64_t, uint64_t))sub_241974680, "Assistant Device Digest Metrics is empty. Unable to compose ODDSiriSchemaODDAssistantDeviceDigestsReported SELF Event", "Unable to compose ODDSiriSchemaODDAssistantDeviceDigestsReported SELF Event");
        swift_bridgeObjectRelease();
        objc_msgSend(v132, sel_setAssistantDeviceDigestReported_, v134);

        v135 = v132;
        MEMORY[0x24269EE34]();
        if (*(_QWORD *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2419AA1CC();
        sub_2419AA1E4();
        sub_2419AA1C0();

        sub_241943CA8(v130, type metadata accessor for EventMetadata);
        v113 = v125;
      }
      else
      {
        sub_241943CA8(v130, type metadata accessor for EventMetadata);
        swift_bridgeObjectRelease();

        v113 = v125;
      }
    }
    else
    {
      sub_241943CA8(v130, type metadata accessor for EventMetadata);
      swift_bridgeObjectRelease();
      v113 = v125;
    }
  }
  swift_release();
  v136 = v187;
  v137 = *(_QWORD *)(v187 + 64);
  v177 = v187 + 64;
  v138 = 1 << *(_BYTE *)(v187 + 32);
  v139 = -1;
  if (v138 < 64)
    v139 = ~(-1 << v138);
  v140 = v139 & v137;
  v183 = (unint64_t)(v138 + 63) >> 6;
  v176 = (char *)(v183 - 1);
  swift_bridgeObjectRetain();
  v184 = 0;
  v141 = (uint64_t)v172;
  v180 = v136;
  while (1)
  {
    v142 = (uint64_t)v181;
    if (v140)
    {
      v143 = __clz(__rbit64(v140));
      v140 &= v140 - 1;
      v144 = v143 | (v184 << 6);
LABEL_89:
      sub_241943C64(*(_QWORD *)(v136 + 48) + *(_QWORD *)(v185 + 72) * v144, v141, type metadata accessor for EventMetadata);
      *(_QWORD *)(v141 + *(int *)(v126 + 48)) = *(_QWORD *)(*(_QWORD *)(v136 + 56) + 8 * v144);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v127 + 56))(v141, 0, 1, v126);
      swift_bridgeObjectRetain();
      goto LABEL_108;
    }
    v145 = v184 + 1;
    if (__OFADD__(v184, 1))
      goto LABEL_121;
    if (v145 < v183)
    {
      v146 = *(_QWORD *)(v177 + 8 * v145);
      if (v146)
        goto LABEL_93;
      v147 = v184 + 2;
      ++v184;
      if (v145 + 1 < v183)
      {
        v146 = *(_QWORD *)(v177 + 8 * v147);
        if (v146)
          goto LABEL_96;
        v184 = v145 + 1;
        if (v145 + 2 < v183)
        {
          v146 = *(_QWORD *)(v177 + 8 * (v145 + 2));
          if (v146)
          {
            v145 += 2;
            goto LABEL_93;
          }
          v147 = v145 + 3;
          v184 = v145 + 2;
          if (v145 + 3 < v183)
            break;
        }
      }
    }
LABEL_107:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v141, 1, 1, v126);
    v140 = 0;
LABEL_108:
    sub_2419766B4(v141, v142);
    if (v128(v142, 1, v126) == 1)
    {
      swift_release();
      v156 = v189;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v156;
    }
    v148 = *(_QWORD *)(v142 + *(int *)(v126 + 48));
    v149 = (uint64_t)v182;
    sub_24195C340(v142, (uint64_t)v182, type metadata accessor for EventMetadata);
    v150 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
    if (v150)
    {
      v151 = v150;
      if (*(_QWORD *)(v148 + 16))
      {
        v152 = (uint64_t)v182;
        v153 = EventMetadata.transformToODDClientEventMetadata()();
        objc_msgSend(v151, sel_setEventMetadata_, v153);
        v154 = sub_24197510C(v148, v178, (Class *)0x24BE95520, (uint64_t (*)(uint64_t, uint64_t))sub_241974D34, "Received empty DeviceUsageMetrics. Not going to compose ODDSiriSchemaODDDictationDeviceDigestsReported SELF Event", "Unable to compose ODDSiriSchemaODDDictationDeviceDigestsReported SELF Event");
        swift_bridgeObjectRelease();
        objc_msgSend(v151, sel_setDictationDeviceDigestReported_, v154);

        v155 = v151;
        MEMORY[0x24269EE34]();
        if (*(_QWORD *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2419AA1CC();
        sub_2419AA1E4();
        sub_2419AA1C0();

        sub_241943CA8(v152, type metadata accessor for EventMetadata);
        v141 = (uint64_t)v172;
        v136 = v180;
      }
      else
      {
        sub_241943CA8((uint64_t)v182, type metadata accessor for EventMetadata);
        swift_bridgeObjectRelease();

      }
    }
    else
    {
      sub_241943CA8(v149, type metadata accessor for EventMetadata);
      swift_bridgeObjectRelease();
    }
  }
  v146 = *(_QWORD *)(v177 + 8 * v147);
  if (v146)
  {
LABEL_96:
    v145 = v147;
LABEL_93:
    v140 = (v146 - 1) & v146;
    v144 = __clz(__rbit64(v146)) + (v145 << 6);
    v184 = v145;
    goto LABEL_89;
  }
  while (1)
  {
    v145 = v147 + 1;
    if (__OFADD__(v147, 1))
      break;
    if (v145 >= v183)
    {
      v184 = (uint64_t)v176;
      goto LABEL_107;
    }
    v146 = *(_QWORD *)(v177 + 8 * v145);
    ++v147;
    if (v146)
      goto LABEL_93;
  }
LABEL_127:
  __break(1u);
LABEL_128:
  result = sub_2419AA58C();
  __break(1u);
  return result;
}

uint64_t sub_2419765B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24197660C()
{
  return type metadata accessor for SiriDigestMetricsSELFReporter();
}

uint64_t type metadata accessor for SiriDigestMetricsSELFReporter()
{
  uint64_t result;

  result = qword_257165168;
  if (!qword_257165168)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for SiriDigestMetricsSELFReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDigestMetricsSELFReporter.oddSiriClientEvents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SiriDigestMetricsSELFReporter.oddSiriClientEvents.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of SiriDigestMetricsSELFReporter.oddSiriClientEvents.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of SiriDigestMetricsSELFReporter.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t type metadata accessor for SiriDigestMetricsSELFAdapter()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriDigestMetricsSELFAdapter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2419766B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571652C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2419766FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DeviceExperimentMetrics.convertToSELFEvents()()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  unsigned int *v29;
  uint64_t v30;
  id v31;
  int *v32;
  _BYTE *v33;
  void *v34;
  uint64_t v35;
  int v36;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint32_t *p_align;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  unsigned int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  int v58;
  int v59;
  char *v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  unsigned int *v67;
  unsigned int *v68;
  id v69;
  void *v70;
  unsigned int *v71;
  unsigned int *v72;
  unsigned int *v73;
  unsigned int *v74;
  id v75;
  void *v76;
  unsigned int *v77;
  unsigned int *v78;
  unsigned int *v79;
  unsigned int *v80;
  unsigned int *v81;
  unsigned int *v82;
  unsigned int *v83;
  id v84;
  void *v85;
  unsigned int *v86;
  char *v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  char *v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  id v100;
  void *v101;
  id v102;
  char *v103;
  char *v104;
  id v105;
  unint64_t v106;
  id v107;
  id v108;
  uint64_t v109;
  int *v110;
  id v111;
  id v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  id v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t (*v123)(char *, uint64_t, uint64_t);
  char *v124;
  uint64_t v125;
  uint64_t v126;

  v1 = v0;
  v2 = (int *)type metadata accessor for ExperimentDigest(0);
  v3 = *((_QWORD *)v2 - 1);
  MEMORY[0x24BDAC7A8](v2);
  v115 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v122 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v118 = (char *)&v106 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v106 - v10;
  v12 = sub_2419A9D1C();
  v125 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v121 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v114 = (char *)&v106 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v124 = (char *)&v106 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for EventMetadata(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (unint64_t)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = MEMORY[0x24BEE4AF8];
  sub_2419416DC(v1, (uint64_t)v20, &qword_257163E60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_241941720((uint64_t)v20, &qword_257163E60);
    return MEMORY[0x24BEE4AF8];
  }
  sub_241978738((uint64_t)v20, v24);
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
  if (!v25)
  {
    sub_241943CA8(v24, type metadata accessor for EventMetadata);
    return MEMORY[0x24BEE4AF8];
  }
  v26 = v25;
  v27 = EventMetadata.transformToODDClientEventMetadata()();
  v108 = v26;
  objc_msgSend(v26, sel_setEventMetadata_, v27);

  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954D8]), sel_init);
  if (v28)
  {
    v29 = (unsigned int *)(v1 + *(int *)(type metadata accessor for DeviceExperimentMetrics(0) + 20));
    if (*((_BYTE *)v29 + 4))
      v30 = 0;
    else
      v30 = *v29;
    objc_msgSend(v28, sel_setDigestType_, v30);
  }
  v117 = v28;
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95540]), sel_init);
  v32 = (int *)type metadata accessor for DeviceExperimentMetrics(0);
  v33 = v115;
  if (*(_QWORD *)(v1 + v32[6] + 8) && v31)
  {
    v34 = (void *)sub_2419AA0DC();
    objc_msgSend(v31, sel_setExperimentId_, v34);

  }
  sub_2419416DC(v1 + v32[7], (uint64_t)v11, &qword_257162D48);
  v35 = v125;
  v123 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48);
  v36 = v123(v11, 1, v12);
  v112 = v31;
  if (v36 == 1)
  {
    sub_241941720((uint64_t)v11, &qword_257162D48);
  }
  else
  {
    v38 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v39 = v124;
    v38(v124, v11, v12);
    if (v31)
    {
      v40 = v31;
      v41 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v42 = (void *)sub_2419A9D04();
      v43 = objc_msgSend(v41, sel_initWithNSUUID_, v42);

      v39 = v124;
      objc_msgSend(v40, sel_setTreatmentId_, v43);

    }
    (*(void (**)(char *, uint64_t))(v125 + 8))(v39, v12);
  }
  v44 = v117;
  p_align = &stru_2511CBFE8.align;
  v46 = v1 + v32[8];
  if ((*(_BYTE *)(v46 + 8) & 1) == 0)
    objc_msgSend(v112, sel_setDeploymentId_, *(_QWORD *)v46);
  objc_msgSend(v44, sel_setExperimentFixedDimensions_, v112);
  v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95548]), sel_init);
  v48 = v47;
  v49 = *(_QWORD *)(v1 + v32[9] + 8);
  v111 = v47;
  if (v49 && v47)
  {
    v50 = (void *)sub_2419AA0DC();
    objc_msgSend(v111, sel_setDeviceType_, v50);

    v48 = v111;
  }
  v51 = (unsigned int *)(v1 + v32[10]);
  if ((v51[1] & 1) == 0)
    objc_msgSend(v48, sel_setProgramCode_, *v51);
  objc_msgSend(v44, sel_setFixedDimensions_, v48);
  v107 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954D0]), sel_init);
  v52 = *(_QWORD *)(v1 + v32[11]);
  if (v52)
  {
    v120 = *(_QWORD *)(v52 + 16);
    if (v120)
    {
      v106 = v24;
      v119 = v52 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      swift_bridgeObjectRetain();
      v24 = 0;
      v109 = v3;
      v110 = v2;
      v53 = (uint64_t)v118;
      v54 = v125;
      v116 = v52;
      while (v24 < *(_QWORD *)(v52 + 16))
      {
        sub_241978790(v119 + *(_QWORD *)(v3 + 72) * v24, (uint64_t)v33);
        v124 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954D0]), *((SEL *)p_align + 67));
        if (v124)
        {
          v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954E0]), *((SEL *)p_align + 67));
          if (v55)
          {
            v56 = sub_2419787D4((uint64_t)v33);
            objc_msgSend(v55, sel_setAssistantDimensions_, v56);
            if (v33[116])
              v57 = 0;
            else
              v57 = *((unsigned int *)v33 + 28);
            objc_msgSend(v55, sel_setExperimentAllocationStatus_, v57);
            v58 = v33[117];
            if (v58 != 2)
              objc_msgSend(v55, sel_setIsTriggered_, v58 & 1);
            v59 = v33[118];
            if (v59 != 2)
              objc_msgSend(v55, sel_setIsFirstTriggerOrAfterFirstTrigger_, v59 & 1);
            sub_2419416DC((uint64_t)&v33[v2[17]], v53, &qword_257162D48);
            if (v123((char *)v53, 1, v12) == 1)
            {

              sub_241941720(v53, &qword_257162D48);
            }
            else
            {
              v60 = v114;
              (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v114, v53, v12);
              v61 = objc_allocWithZone(MEMORY[0x24BE95C78]);
              v62 = (void *)sub_2419A9D04();
              v63 = objc_msgSend(v61, sel_initWithNSUUID_, v62);

              objc_msgSend(v55, sel_setCodePathId_, v63);
              (*(void (**)(char *, uint64_t))(v125 + 8))(v60, v12);
            }
            v44 = v117;
            p_align = &stru_2511CBFE8.align;
          }
          objc_msgSend(v124, sel_setDimensions_, v55);

          v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954C8]), *((SEL *)p_align + 67));
          if (v64)
          {
            v65 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE955A0]), *((SEL *)p_align + 67));
            v66 = v65;
            if (v65)
            {
              v67 = (unsigned int *)&v33[v2[18]];
              if ((v67[1] & 1) == 0)
                objc_msgSend(v65, sel_setTotalTurnCount_, *v67);
              v68 = (unsigned int *)&v33[v2[19]];
              if ((v68[1] & 1) == 0)
                objc_msgSend(v66, sel_setValidTurnCount_, *v68);
            }
            objc_msgSend(v64, sel_setTurnCounts_, v66);

            v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95590]), *((SEL *)p_align + 67));
            v70 = v69;
            if (v69)
            {
              v71 = (unsigned int *)&v33[v2[20]];
              if ((v71[1] & 1) == 0)
                objc_msgSend(v69, sel_setSiriTasksStarted_, *v71);
              v72 = (unsigned int *)&v33[v2[21]];
              if ((v72[1] & 1) == 0)
                objc_msgSend(v70, sel_setSiriTasksCompleted_, *v72);
              v73 = (unsigned int *)&v33[v2[22]];
              if ((v73[1] & 1) == 0)
                objc_msgSend(v70, sel_setFlowTasksStarted_, *v73);
              v74 = (unsigned int *)&v33[v2[23]];
              if ((v74[1] & 1) == 0)
                objc_msgSend(v70, sel_setFlowTasksCompleted_, *v74);
            }
            objc_msgSend(v64, sel_setTaskCounts_, v70);

            v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95550]), *((SEL *)p_align + 67));
            v76 = v75;
            if (v75)
            {
              v77 = (unsigned int *)&v33[v2[24]];
              if ((v77[1] & 1) == 0)
                objc_msgSend(v75, sel_setReliabilityRequestCount_, *v77);
              v78 = (unsigned int *)&v33[v2[25]];
              if ((v78[1] & 1) == 0)
                objc_msgSend(v76, sel_setReliabilityTurnCount_, *v78);
              v79 = (unsigned int *)&v33[v2[26]];
              if ((v79[1] & 1) == 0)
                objc_msgSend(v76, sel_setClientErrorCount_, *v79);
              v80 = (unsigned int *)&v33[v2[27]];
              if ((v80[1] & 1) == 0)
                objc_msgSend(v76, sel_setUndesiredResponseCount_, *v80);
              v81 = (unsigned int *)&v33[v2[28]];
              if ((v81[1] & 1) == 0)
                objc_msgSend(v76, sel_setFatalResponseCount_, *v81);
              v82 = (unsigned int *)&v33[v2[29]];
              if ((v82[1] & 1) == 0)
                objc_msgSend(v76, sel_setFailureResponseCount_, *v82);
              v83 = (unsigned int *)&v33[v2[30]];
              if ((v83[1] & 1) == 0)
                objc_msgSend(v76, sel_setSiriUnavailableResponseCount_, *v83);
            }
            objc_msgSend(v64, sel_setReliabilityCounts_, v76);

            v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95578]), *((SEL *)p_align + 67));
            v85 = v84;
            if (v84)
            {
              v86 = (unsigned int *)&v33[v2[31]];
              if ((v86[1] & 1) == 0)
                objc_msgSend(v84, sel_setUsdxSessionCount_, *v86);
            }
            objc_msgSend(v64, sel_setSessionCounts_, v85);

          }
          v87 = v124;
          objc_msgSend(v124, sel_setCounts_, v64);

          v88 = sub_24197897C((uint64_t)v33);
          objc_msgSend(v87, sel_setTuples_, v88);

          v89 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
          LODWORD(v87) = objc_msgSend(v89, sel_longLivedIdentifierUploadingEnabled);

          if ((_DWORD)v87)
          {
            v90 = *(_QWORD *)&v33[v2[33]];
            if (v90)
            {
              v91 = *(_QWORD *)(v90 + 16);
              v113 = v90;
              if (v91)
              {
                v92 = v125;
                v93 = v90
                    + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
                swift_bridgeObjectRetain();
                v94 = *(_QWORD *)(v92 + 72);
                v95 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
                v96 = v122;
                while (1)
                {
                  v95(v96, v93, v12);
                  v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56);
                  v97(v96, 0, 1, v12);
                  if (v123(v96, 1, v12) == 1)
                    break;
                  v98 = v12;
                  v99 = v121;
                  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v121, v96, v98);
                  v100 = objc_allocWithZone(MEMORY[0x24BE95C78]);
                  v101 = (void *)sub_2419A9D04();
                  v102 = objc_msgSend(v100, sel_initWithNSUUID_, v101);

                  v103 = v99;
                  v12 = v98;
                  (*(void (**)(char *, uint64_t))(v125 + 8))(v103, v98);
                  objc_msgSend(v124, sel_addTurnIds_, v102);

                  v92 = v125;
                  v96 = v122;
                  v93 += v94;
                  if (!--v91)
                    goto LABEL_87;
                }
              }
              else
              {
                swift_bridgeObjectRetain();
                v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v125 + 56);
                v96 = v122;
LABEL_87:
                v97(v96, 1, 1, v12);
              }
              swift_bridgeObjectRelease();
              v3 = v109;
              v2 = v110;
              v33 = v115;
              v44 = v117;
              p_align = (_DWORD *)(&stru_2511CBFE8 + 24);
            }
          }
          if (v44)
          {
            v104 = v124;
            objc_msgSend(v44, sel_addDigests_, v124);

            sub_241943CA8((uint64_t)v33, type metadata accessor for ExperimentDigest);
          }
          else
          {
            sub_241943CA8((uint64_t)v33, type metadata accessor for ExperimentDigest);

          }
          v53 = (uint64_t)v118;
          v54 = v125;
          v52 = v116;
        }
        else
        {
          sub_241943CA8((uint64_t)v33, type metadata accessor for ExperimentDigest);
        }
        if (++v24 == v120)
        {
          swift_bridgeObjectRelease();
          v24 = v106;
          goto LABEL_94;
        }
      }
      __break(1u);
      goto LABEL_97;
    }
  }
LABEL_94:
  v105 = v108;
  objc_msgSend(v108, sel_setAssistantExperimentDigestReported_, v44);
  v33 = v105;
  MEMORY[0x24269EE34]();
  if (*(_QWORD *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_97:
    sub_2419AA1CC();
  sub_2419AA1E4();
  sub_2419AA1C0();

  sub_241943CA8(v24, type metadata accessor for EventMetadata);
  return v126;
}

__n128 sub_241977458@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, char a11, int a12, char a13, __int128 a14, uint64_t a15, int a16, char a17, int a18, char a19, __int16 a20,__int16 a21,uint64_t a22,int a23,char a24,int a25,char a26,int a27,char a28,int a29,char a30,int a31,char a32,int a33,char a34,int a35,char a36,int a37,char a38,int a39,char a40,int a41,char a42,int a43,char a44,int a45,char a46,int a47,char a48,int a49,char a50,__int128 *a51,uint64_t a52)
{
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 result;
  __int128 v70;
  __n128 v71;
  uint64_t v72;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_DWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 20) = BYTE4(a3) & 1;
  *(_DWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 28) = BYTE4(a4) & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_DWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 68) = a11 & 1;
  *(_DWORD *)(a9 + 72) = a12;
  *(_BYTE *)(a9 + 76) = a13 & 1;
  *(_QWORD *)(a9 + 96) = a15;
  *(_DWORD *)(a9 + 104) = a16;
  *(_BYTE *)(a9 + 108) = a17 & 1;
  *(_DWORD *)(a9 + 112) = a18;
  *(_BYTE *)(a9 + 116) = a19 & 1;
  *(_WORD *)(a9 + 117) = a21;
  v70 = *a51;
  v71 = (__n128)a51[1];
  v72 = *((_QWORD *)a51 + 4);
  *(_OWORD *)(a9 + 80) = a14;
  v53 = (int *)type metadata accessor for ExperimentDigest(0);
  sub_24195BFD0(a22, a9 + v53[17]);
  v54 = a9 + v53[18];
  *(_DWORD *)v54 = a23;
  *(_BYTE *)(v54 + 4) = a24 & 1;
  v55 = a9 + v53[19];
  *(_DWORD *)v55 = a25;
  *(_BYTE *)(v55 + 4) = a26 & 1;
  v56 = a9 + v53[20];
  *(_DWORD *)v56 = a27;
  *(_BYTE *)(v56 + 4) = a28 & 1;
  v57 = a9 + v53[21];
  *(_DWORD *)v57 = a29;
  *(_BYTE *)(v57 + 4) = a30 & 1;
  v58 = a9 + v53[22];
  *(_DWORD *)v58 = a31;
  *(_BYTE *)(v58 + 4) = a32 & 1;
  v59 = a9 + v53[23];
  *(_DWORD *)v59 = a33;
  *(_BYTE *)(v59 + 4) = a34 & 1;
  v60 = a9 + v53[24];
  *(_DWORD *)v60 = a35;
  *(_BYTE *)(v60 + 4) = a36 & 1;
  v61 = a9 + v53[25];
  *(_DWORD *)v61 = a37;
  *(_BYTE *)(v61 + 4) = a38 & 1;
  v62 = a9 + v53[26];
  *(_DWORD *)v62 = a39;
  *(_BYTE *)(v62 + 4) = a40 & 1;
  v63 = a9 + v53[27];
  *(_DWORD *)v63 = a41;
  *(_BYTE *)(v63 + 4) = a42 & 1;
  v64 = a9 + v53[28];
  *(_DWORD *)v64 = a43;
  *(_BYTE *)(v64 + 4) = a44 & 1;
  v65 = a9 + v53[29];
  *(_DWORD *)v65 = a45;
  *(_BYTE *)(v65 + 4) = a46 & 1;
  v66 = a9 + v53[30];
  *(_DWORD *)v66 = a47;
  *(_BYTE *)(v66 + 4) = a48 & 1;
  v67 = a9 + v53[31];
  *(_DWORD *)v67 = a49;
  *(_BYTE *)(v67 + 4) = a50 & 1;
  v68 = a9 + v53[32];
  result = v71;
  *(_OWORD *)v68 = v70;
  *(__n128 *)(v68 + 16) = v71;
  *(_QWORD *)(v68 + 32) = v72;
  *(_QWORD *)(a9 + v53[33]) = a52;
  return result;
}

uint64_t sub_2419776F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v3 = v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata;
  swift_beginAccess();
  sub_2419416DC(v3, a1, &qword_257163E60);
  v4 = *(_DWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digestType);
  v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digestType + 4);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_experimentId);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_experimentId + 8);
  v8 = v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID;
  swift_beginAccess();
  v9 = (int *)type metadata accessor for DeviceExperimentMetrics(0);
  sub_2419416DC(v8, a1 + v9[7], &qword_257162D48);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deploymentId);
  v11 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deploymentId + 8);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deviceType);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deviceType + 8);
  v14 = *(_DWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_programCode);
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digests);
  v16 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_programCode + 4);
  v17 = a1 + v9[5];
  *(_DWORD *)v17 = v4;
  *(_BYTE *)(v17 + 4) = v5;
  v18 = (_QWORD *)(a1 + v9[6]);
  *v18 = v7;
  v18[1] = v6;
  v19 = a1 + v9[8];
  *(_QWORD *)v19 = v10;
  *(_BYTE *)(v19 + 8) = v11;
  v20 = (_QWORD *)(a1 + v9[9]);
  *v20 = v12;
  v20[1] = v13;
  v21 = a1 + v9[10];
  *(_DWORD *)v21 = v14;
  *(_BYTE *)(v21 + 4) = v16;
  *(_QWORD *)(a1 + v9[11]) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DeviceExperimentMetricsBuilderImpl.deinit()
{
  uint64_t v0;

  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata, &qword_257163E60);
  swift_bridgeObjectRelease();
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID, &qword_257162D48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DeviceExperimentMetricsBuilderImpl.__deallocating_deinit()
{
  uint64_t v0;

  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata, &qword_257163E60);
  swift_bridgeObjectRelease();
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID, &qword_257162D48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_241977974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata;
  v2 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digestType;
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_experimentId);
  *v4 = 0;
  v4[1] = 0;
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID;
  v6 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deploymentId;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deviceType);
  *v8 = 0;
  v8[1] = 0;
  v9 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_programCode;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digests) = 0;
  return v0;
}

uint64_t sub_241977A68(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_2419AA3DC();
    v4 = a1 + 32;
    do
    {
      v4 += 4;
      sub_2419AA214();
      sub_2419AA3C4();
      sub_2419AA3E8();
      sub_2419AA3F4();
      sub_2419AA3D0();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

id sub_241977B0C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34)
{
  uint64_t v36;
  void *v37;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;

  if (a2)
  {
    v43 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    if (a6)
      goto LABEL_3;
LABEL_6:
    v42 = 0;
    v36 = a13;
    if (a8)
      goto LABEL_4;
    goto LABEL_7;
  }
  v43 = 0;
  if (!a6)
    goto LABEL_6;
LABEL_3:
  v42 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v36 = a13;
  if (a8)
  {
LABEL_4:
    v41 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  v41 = 0;
LABEL_8:
  if (v36)
  {
    v39 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  if (a19)
  {
    v37 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = 0;
  }
  v40 = objc_msgSend(v44, sel_initWithSystemBuild_dataSharingOptInStatus_viewInterface_audioInterfaceVendorId_audioInterfaceProductId_asrLocation_nlLocation_siriInputLocale_subDomain_responseCategory_experimentAllocationStatus_isTriggered_isFirstTriggerOrAfterFirstTrigger_codePathIdUUID_totalTurnCount_validTurnCount_siriTasksStarted_siriTasksCompleted_flowTasksStarted_flowTasksCompleted_reliabilityRequestCount_reliabilityTurnCount_clientErrorCount_undesiredResponseCount_fatalResponseCount_failureResponseCount_siriUnavailableResponseCount_usdxSessionCount_tuples_, v43, a3, a4, v42, v41, a9, a10, a11, v39, a14, a15, a16, a17, v37, a20, a21, a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31,
          a32,
          a33,
          a34);

  return v40;
}

id _s16MetricsFramework16ExperimentTuplesV12toBiomeEvent15experimentTupleSo020BMSiriOnDeviceDigestcacmcD0CACSg_tFZ_0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v2 = *a1;
  v4 = a1[1];
  v3 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  if (v2)
  {
    if (v2 == 1)
      goto LABEL_8;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571656A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571656B0);
    swift_dynamicCast();
    if (v4)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2571656A8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2571656B0);
      swift_dynamicCast();
      if (v3)
        goto LABEL_5;
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_4;
  }
  if (v3)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571656A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571656B0);
    swift_dynamicCast();
    if (v6)
      goto LABEL_6;
LABEL_12:
    if (!v5)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_11:
  if (!v6)
    goto LABEL_12;
LABEL_6:
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571656A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571656B0);
  swift_dynamicCast();
  if (v5)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571656A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571656B0);
    swift_dynamicCast();
  }
LABEL_8:
  v7 = objc_allocWithZone(MEMORY[0x24BE0C6A8]);
  sub_241950A30();
  v8 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v7, sel_initWithLaunchTimeInMs_endpointDelayInMs_siriResponseTimeInMs_timeToUufrInMs_timeToFirstWordInMs_, v8, v9, v10, v11, v12);

  return v13;
}

id _s16MetricsFramework16ExperimentDigestV12toBiomeEvent010experimentD0So014BMSiriOnDevicedcacD0CAC_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  id v30;
  id v31;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD v59[2];
  uint64_t v60;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571656B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 8);
  v57 = *(_QWORD *)a1;
  v58 = v8;
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v56 = 0;
    if ((*(_BYTE *)(a1 + 28) & 1) == 0)
    {
LABEL_3:
      v55 = (void *)sub_2419AA5D4();
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v56 = (void *)sub_2419AA5D4();
    if ((*(_BYTE *)(a1 + 28) & 1) == 0)
      goto LABEL_3;
  }
  v55 = 0;
LABEL_6:
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 56);
  v51 = *(_QWORD *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 68);
  v52 = v11;
  v53 = v9;
  if ((v12 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = 0;
    if ((*(_BYTE *)(a1 + 76) & 1) == 0)
    {
LABEL_8:
      v49 = (void *)sub_2419AA5D4();
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = (void *)sub_2419AA5D4();
    if ((*(_BYTE *)(a1 + 76) & 1) == 0)
      goto LABEL_8;
  }
  v49 = 0;
LABEL_11:
  sub_241978790(a1, (uint64_t)v7);
  v13 = (int *)type metadata accessor for ExperimentDigest(0);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v13 - 1) + 56))(v7, 0, 1, v13);
  v48 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE22toExperimentBiomeEvent16experimentDigestSo014BMSiriOnDevicejfcB0CAC0fJ0VSg_tFZ_0((uint64_t)v7);
  sub_241941720((uint64_t)v7, &qword_2571656B8);
  v14 = *(_QWORD *)(a1 + 88);
  v46 = *(_QWORD *)(a1 + 96);
  v47 = v14;
  if ((*(_BYTE *)(a1 + 108) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v45 = 0;
    if ((*(_BYTE *)(a1 + 116) & 1) == 0)
    {
LABEL_13:
      v44 = (void *)sub_2419AA5D4();
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v45 = (void *)sub_2419AA628();
    if ((*(_BYTE *)(a1 + 116) & 1) == 0)
      goto LABEL_13;
  }
  v44 = 0;
LABEL_16:
  if (*(_BYTE *)(a1 + 117) == 2)
    v43 = 0;
  else
    v43 = (void *)sub_2419AA1F0();
  v15 = *(unsigned __int8 *)(a1 + 118);
  v54 = v10;
  if (v15 == 2)
    v42 = 0;
  else
    v42 = (void *)sub_2419AA1F0();
  sub_2419416DC(a1 + v13[17], (uint64_t)v4, &qword_257162D48);
  v16 = sub_2419A9D1C();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v4, 1, v16) == 1)
  {
    sub_241941720((uint64_t)v4, &qword_257162D48);
    v41 = 0;
    v40 = 0;
  }
  else
  {
    v41 = sub_2419A9CF8();
    v40 = v18;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v16);
  }
  if ((*(_BYTE *)(a1 + v13[18] + 4) & 1) != 0)
    v39 = 0;
  else
    v39 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[19] + 4) & 1) != 0)
    v38 = 0;
  else
    v38 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[20] + 4) & 1) != 0)
    v37 = 0;
  else
    v37 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[21] + 4) & 1) != 0)
    v36 = 0;
  else
    v36 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[22] + 4) & 1) != 0)
    v35 = 0;
  else
    v35 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[23] + 4) & 1) != 0)
    v34 = 0;
  else
    v34 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[24] + 4) & 1) != 0)
    v19 = 0;
  else
    v19 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[25] + 4) & 1) != 0)
    v20 = 0;
  else
    v20 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[26] + 4) & 1) != 0)
    v21 = 0;
  else
    v21 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[27] + 4) & 1) != 0)
    v22 = 0;
  else
    v22 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[28] + 4) & 1) != 0)
    v23 = 0;
  else
    v23 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[29] + 4) & 1) != 0)
    v24 = 0;
  else
    v24 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[30] + 4) & 1) != 0)
    v25 = 0;
  else
    v25 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v13[31] + 4) & 1) != 0)
    v26 = 0;
  else
    v26 = (void *)sub_2419AA628();
  v27 = a1 + v13[32];
  v28 = *(_QWORD *)(v27 + 32);
  v29 = *(_OWORD *)(v27 + 16);
  v59[0] = *(_OWORD *)v27;
  v59[1] = v29;
  v60 = v28;
  v30 = _s16MetricsFramework16ExperimentTuplesV12toBiomeEvent15experimentTupleSo020BMSiriOnDeviceDigestcacmcD0CACSg_tFZ_0((uint64_t *)v59);
  v31 = objc_allocWithZone(MEMORY[0x24BE0C6A0]);
  return sub_241977B0C(v57, v58, v56, v55, v53, v54, v51, v52, v50, v49, v48, v47, v46, v45, v44, v43, v42, v41, v40,
           v39,
           v38,
           v37,
           v36,
           v35,
           v34,
           v19,
           v20,
           v21,
           v22,
           v23,
           v24,
           v25,
           v26,
           v30);
}

uint64_t type metadata accessor for ExperimentDigest(uint64_t a1)
{
  return sub_241941450(a1, qword_257165350);
}

uint64_t sub_241978738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DeviceExperimentMetrics(uint64_t a1)
{
  return sub_241941450(a1, qword_257165450);
}

uint64_t sub_241978790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExperimentDigest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_2419787D4(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954C0]), sel_init);
  if (!v2)
    return v2;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = (void *)sub_2419AA0DC();
    objc_msgSend(v2, sel_setSystemBuild_, v3);

  }
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
      goto LABEL_6;
  }
  else
  {
    objc_msgSend(v2, sel_setDataSharingOptInStatus_, *(unsigned int *)(a1 + 16));
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
    {
LABEL_6:
      if (!*(_QWORD *)(a1 + 40))
        goto LABEL_8;
      goto LABEL_7;
    }
  }
  objc_msgSend(v2, sel_setViewInterface_, *(unsigned int *)(a1 + 24));
  if (*(_QWORD *)(a1 + 40))
  {
LABEL_7:
    v4 = (void *)sub_2419AA0DC();
    objc_msgSend(v2, sel_setAudioInterfaceVendorId_, v4);

  }
LABEL_8:
  if (*(_QWORD *)(a1 + 56))
  {
    v5 = (void *)sub_2419AA0DC();
    objc_msgSend(v2, sel_setAudioInterfaceProductId_, v5);

  }
  if ((*(_BYTE *)(a1 + 68) & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 76) & 1) != 0)
      goto LABEL_12;
  }
  else
  {
    objc_msgSend(v2, sel_setAsrLocation_, *(unsigned int *)(a1 + 64));
    if ((*(_BYTE *)(a1 + 76) & 1) != 0)
    {
LABEL_12:
      if (!*(_QWORD *)(a1 + 80))
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  objc_msgSend(v2, sel_setNlLocation_, *(unsigned int *)(a1 + 72));
  if (*(_QWORD *)(a1 + 80))
LABEL_13:
    objc_msgSend(v2, sel_setSiriInputLocale_);
LABEL_14:
  if (*(_QWORD *)(a1 + 96))
  {
    v6 = (void *)sub_2419AA0DC();
    objc_msgSend(v2, sel_setSubDomain_, v6);

  }
  return v2;
}

id sub_24197897C(uint64_t a1)
{
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954E8]), sel_init);
  if (v2)
  {
    v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for ExperimentDigest(0) + 128));
    v4 = v3[1];
    v6 = v3[2];
    v5 = v3[3];
    v7 = v3[4];
    if (*v3)
    {
      if (*v3 == 1)
        return v2;
      v8 = swift_bridgeObjectRetain();
      sub_241977A68(v8);
      swift_bridgeObjectRelease();
      sub_241950A30();
      v9 = (void *)sub_2419AA1A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setLaunchTimeInMs_, v9);

    }
    if (v4)
    {
      v10 = swift_bridgeObjectRetain();
      sub_241977A68(v10);
      swift_bridgeObjectRelease();
      sub_241950A30();
      v11 = (void *)sub_2419AA1A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setEndpointDelayInMs_, v11);

    }
    if (v6)
    {
      v12 = swift_bridgeObjectRetain();
      sub_241977A68(v12);
      swift_bridgeObjectRelease();
      sub_241950A30();
      v13 = (void *)sub_2419AA1A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSiriResponseTimeInMs_, v13);

    }
    if (v5)
    {
      v14 = swift_bridgeObjectRetain();
      sub_241977A68(v14);
      swift_bridgeObjectRelease();
      sub_241950A30();
      v15 = (void *)sub_2419AA1A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTimeToUufrInMs_, v15);

    }
    if (v7)
    {
      v16 = swift_bridgeObjectRetain();
      sub_241977A68(v16);
      swift_bridgeObjectRelease();
      sub_241950A30();
      v17 = (void *)sub_2419AA1A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTimeToFirstWordInMs_, v17);

    }
  }
  return v2;
}

uint64_t sub_241978B9C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 16))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_241978BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_241978BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_241978BC8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 40))(a1, a2 & 1);
}

uint64_t sub_241978BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_241978BDC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 56))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_241978BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_241978C00(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t destroy for ExperimentTuples()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ExperimentTuples(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ExperimentTuples(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExperimentTuples(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExperimentTuples(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExperimentTuples(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExperimentTuples()
{
  return &type metadata for ExperimentTuples;
}

_QWORD *initializeBufferWithCopyOfBuffer for ExperimentDigest(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int *v35;
  int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v72)(const void *, uint64_t, uint64_t);
  void *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_BYTE *)(a1 + 68) = *((_BYTE *)a2 + 68);
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    *(_BYTE *)(a1 + 76) = *((_BYTE *)a2 + 76);
    v11 = (void *)a2[10];
    v10 = a2[11];
    *(_QWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v10;
    v12 = a2[12];
    *(_BYTE *)(a1 + 108) = *((_BYTE *)a2 + 108);
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    *(_BYTE *)(a1 + 116) = *((_BYTE *)a2 + 116);
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    *(_WORD *)(a1 + 117) = *(_WORD *)((char *)a2 + 117);
    v13 = a3[17];
    __dst = (void *)(a1 + v13);
    v14 = (char *)a2 + v13;
    *(_QWORD *)(a1 + 96) = v12;
    v15 = sub_2419A9D1C();
    v16 = *(_QWORD *)(v15 - 8);
    v72 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v11;
    swift_bridgeObjectRetain();
    if (v72(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v20 = a3[18];
    v21 = a3[19];
    v22 = (char *)v4 + v20;
    v23 = (uint64_t)a2 + v20;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = *(_BYTE *)(v23 + 4);
    v24 = (char *)v4 + v21;
    v25 = (uint64_t)a2 + v21;
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = *(_BYTE *)(v25 + 4);
    v26 = a3[20];
    v27 = a3[21];
    v28 = (char *)v4 + v26;
    v29 = (uint64_t)a2 + v26;
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = *(_BYTE *)(v29 + 4);
    v30 = (char *)v4 + v27;
    v31 = (uint64_t)a2 + v27;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = *(_BYTE *)(v31 + 4);
    v32 = a3[22];
    v33 = a3[23];
    v34 = (char *)v4 + v32;
    v35 = (int *)((char *)a2 + v32);
    v36 = *v35;
    v34[4] = *((_BYTE *)v35 + 4);
    *(_DWORD *)v34 = v36;
    v37 = (char *)v4 + v33;
    v38 = (uint64_t)a2 + v33;
    v37[4] = *(_BYTE *)(v38 + 4);
    *(_DWORD *)v37 = *(_DWORD *)v38;
    v39 = a3[24];
    v40 = a3[25];
    v41 = (char *)v4 + v39;
    v42 = (uint64_t)a2 + v39;
    v41[4] = *(_BYTE *)(v42 + 4);
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v43 = (char *)v4 + v40;
    v44 = (uint64_t)a2 + v40;
    v43[4] = *(_BYTE *)(v44 + 4);
    *(_DWORD *)v43 = *(_DWORD *)v44;
    v45 = a3[26];
    v46 = a3[27];
    v47 = (char *)v4 + v45;
    v48 = (uint64_t)a2 + v45;
    v47[4] = *(_BYTE *)(v48 + 4);
    *(_DWORD *)v47 = *(_DWORD *)v48;
    v49 = (char *)v4 + v46;
    v50 = (uint64_t)a2 + v46;
    v49[4] = *(_BYTE *)(v50 + 4);
    *(_DWORD *)v49 = *(_DWORD *)v50;
    v51 = a3[28];
    v52 = a3[29];
    v53 = (char *)v4 + v51;
    v54 = (uint64_t)a2 + v51;
    v53[4] = *(_BYTE *)(v54 + 4);
    *(_DWORD *)v53 = *(_DWORD *)v54;
    v55 = (char *)v4 + v52;
    v56 = (uint64_t)a2 + v52;
    v55[4] = *(_BYTE *)(v56 + 4);
    *(_DWORD *)v55 = *(_DWORD *)v56;
    v57 = a3[30];
    v58 = a3[31];
    v59 = (char *)v4 + v57;
    v60 = (uint64_t)a2 + v57;
    v59[4] = *(_BYTE *)(v60 + 4);
    *(_DWORD *)v59 = *(_DWORD *)v60;
    v61 = (char *)v4 + v58;
    v62 = (uint64_t)a2 + v58;
    v61[4] = *(_BYTE *)(v62 + 4);
    *(_DWORD *)v61 = *(_DWORD *)v62;
    v63 = a3[32];
    v64 = (char *)v4 + v63;
    v65 = (uint64_t)a2 + v63;
    if (*(_QWORD *)v65 == 1)
    {
      v66 = *(_OWORD *)(v65 + 16);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v66;
      *((_QWORD *)v64 + 4) = *(_QWORD *)(v65 + 32);
    }
    else
    {
      v67 = *(_QWORD *)(v65 + 8);
      v68 = *(_QWORD *)(v65 + 16);
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *((_QWORD *)v64 + 1) = v67;
      v69 = *(_QWORD *)(v65 + 24);
      v70 = *(_QWORD *)(v65 + 32);
      *((_QWORD *)v64 + 2) = v68;
      *((_QWORD *)v64 + 3) = v69;
      *((_QWORD *)v64 + 4) = v70;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)((char *)v4 + a3[33]) = *(uint64_t *)((char *)a2 + a3[33]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ExperimentDigest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 68);
  v5 = sub_2419A9D1C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 128)) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExperimentDigest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v70)(const void *, uint64_t, uint64_t);
  void *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  v10 = *(void **)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v9;
  v11 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 117) = *(_WORD *)(a2 + 117);
  v12 = a3[17];
  __dst = (void *)(a1 + v12);
  v13 = (const void *)(a2 + v12);
  *(_QWORD *)(a1 + 96) = v11;
  v14 = sub_2419A9D1C();
  v15 = *(_QWORD *)(v14 - 8);
  v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v10;
  swift_bridgeObjectRetain();
  if (v70(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  v18 = a3[18];
  v19 = a3[19];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = a1 + v19;
  v23 = a2 + v19;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a3[20];
  v25 = a3[21];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a1 + v25;
  v29 = a2 + v25;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a3[22];
  v31 = a3[23];
  v32 = a1 + v30;
  v33 = (int *)(a2 + v30);
  v34 = *v33;
  *(_BYTE *)(v32 + 4) = *((_BYTE *)v33 + 4);
  *(_DWORD *)v32 = v34;
  v35 = a1 + v31;
  v36 = a2 + v31;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  *(_DWORD *)v35 = *(_DWORD *)v36;
  v37 = a3[24];
  v38 = a3[25];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)v39 = *(_DWORD *)v40;
  v41 = a1 + v38;
  v42 = a2 + v38;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_DWORD *)v41 = *(_DWORD *)v42;
  v43 = a3[26];
  v44 = a3[27];
  v45 = a1 + v43;
  v46 = a2 + v43;
  *(_BYTE *)(v45 + 4) = *(_BYTE *)(v46 + 4);
  *(_DWORD *)v45 = *(_DWORD *)v46;
  v47 = a1 + v44;
  v48 = a2 + v44;
  *(_BYTE *)(v47 + 4) = *(_BYTE *)(v48 + 4);
  *(_DWORD *)v47 = *(_DWORD *)v48;
  v49 = a3[28];
  v50 = a3[29];
  v51 = a1 + v49;
  v52 = a2 + v49;
  *(_BYTE *)(v51 + 4) = *(_BYTE *)(v52 + 4);
  *(_DWORD *)v51 = *(_DWORD *)v52;
  v53 = a1 + v50;
  v54 = a2 + v50;
  *(_BYTE *)(v53 + 4) = *(_BYTE *)(v54 + 4);
  *(_DWORD *)v53 = *(_DWORD *)v54;
  v55 = a3[30];
  v56 = a3[31];
  v57 = a1 + v55;
  v58 = a2 + v55;
  *(_BYTE *)(v57 + 4) = *(_BYTE *)(v58 + 4);
  *(_DWORD *)v57 = *(_DWORD *)v58;
  v59 = a1 + v56;
  v60 = a2 + v56;
  *(_BYTE *)(v59 + 4) = *(_BYTE *)(v60 + 4);
  *(_DWORD *)v59 = *(_DWORD *)v60;
  v61 = a3[32];
  v62 = a1 + v61;
  v63 = a2 + v61;
  if (*(_QWORD *)v63 == 1)
  {
    v64 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v64;
    *(_QWORD *)(v62 + 32) = *(_QWORD *)(v63 + 32);
  }
  else
  {
    v65 = *(_QWORD *)(v63 + 8);
    v66 = *(_QWORD *)(v63 + 16);
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *(_QWORD *)(v62 + 8) = v65;
    v67 = *(_QWORD *)(v63 + 24);
    v68 = *(_QWORD *)(v63 + 32);
    *(_QWORD *)(v62 + 16) = v66;
    *(_QWORD *)(v62 + 24) = v67;
    *(_QWORD *)(v62 + 32) = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExperimentDigest(uint64_t a1, uint64_t a2, int *a3)
{
  int v6;
  int v7;
  int v8;
  void *v9;
  void *v10;
  id v11;
  int v12;
  int v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  __int128 *v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v6;
  v7 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v8;
  LOBYTE(v8) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = v8;
  v9 = *(void **)(a1 + 80);
  v10 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v10;
  v11 = v10;

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v12;
  v13 = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v13;
  *(_BYTE *)(a1 + 117) = *(_BYTE *)(a2 + 117);
  *(_BYTE *)(a1 + 118) = *(_BYTE *)(a2 + 118);
  v14 = a3[17];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = sub_2419A9D1C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  v23 = a3[18];
  v24 = a1 + v23;
  v25 = (int *)(a2 + v23);
  v26 = *v25;
  *(_BYTE *)(v24 + 4) = *((_BYTE *)v25 + 4);
  *(_DWORD *)v24 = v26;
  v27 = a3[19];
  v28 = a1 + v27;
  v29 = (int *)(a2 + v27);
  v30 = *v29;
  *(_BYTE *)(v28 + 4) = *((_BYTE *)v29 + 4);
  *(_DWORD *)v28 = v30;
  v31 = a3[20];
  v32 = a1 + v31;
  v33 = (int *)(a2 + v31);
  v34 = *v33;
  *(_BYTE *)(v32 + 4) = *((_BYTE *)v33 + 4);
  *(_DWORD *)v32 = v34;
  v35 = a3[21];
  v36 = a1 + v35;
  v37 = (int *)(a2 + v35);
  v38 = *v37;
  *(_BYTE *)(v36 + 4) = *((_BYTE *)v37 + 4);
  *(_DWORD *)v36 = v38;
  v39 = a3[22];
  v40 = a1 + v39;
  v41 = (int *)(a2 + v39);
  v42 = *v41;
  *(_BYTE *)(v40 + 4) = *((_BYTE *)v41 + 4);
  *(_DWORD *)v40 = v42;
  v43 = a3[23];
  v44 = a1 + v43;
  v45 = (int *)(a2 + v43);
  v46 = *v45;
  *(_BYTE *)(v44 + 4) = *((_BYTE *)v45 + 4);
  *(_DWORD *)v44 = v46;
  v47 = a3[24];
  v48 = a1 + v47;
  v49 = (int *)(a2 + v47);
  v50 = *v49;
  *(_BYTE *)(v48 + 4) = *((_BYTE *)v49 + 4);
  *(_DWORD *)v48 = v50;
  v51 = a3[25];
  v52 = a1 + v51;
  v53 = (int *)(a2 + v51);
  v54 = *v53;
  *(_BYTE *)(v52 + 4) = *((_BYTE *)v53 + 4);
  *(_DWORD *)v52 = v54;
  v55 = a3[26];
  v56 = a1 + v55;
  v57 = (int *)(a2 + v55);
  v58 = *v57;
  *(_BYTE *)(v56 + 4) = *((_BYTE *)v57 + 4);
  *(_DWORD *)v56 = v58;
  v59 = a3[27];
  v60 = a1 + v59;
  v61 = (int *)(a2 + v59);
  v62 = *v61;
  *(_BYTE *)(v60 + 4) = *((_BYTE *)v61 + 4);
  *(_DWORD *)v60 = v62;
  v63 = a3[28];
  v64 = a1 + v63;
  v65 = (int *)(a2 + v63);
  v66 = *v65;
  *(_BYTE *)(v64 + 4) = *((_BYTE *)v65 + 4);
  *(_DWORD *)v64 = v66;
  v67 = a3[29];
  v68 = a1 + v67;
  v69 = (int *)(a2 + v67);
  v70 = *v69;
  *(_BYTE *)(v68 + 4) = *((_BYTE *)v69 + 4);
  *(_DWORD *)v68 = v70;
  v71 = a3[30];
  v72 = a1 + v71;
  v73 = (int *)(a2 + v71);
  v74 = *v73;
  *(_BYTE *)(v72 + 4) = *((_BYTE *)v73 + 4);
  *(_DWORD *)v72 = v74;
  v75 = a3[31];
  v76 = a1 + v75;
  v77 = (int *)(a2 + v75);
  v78 = *v77;
  *(_BYTE *)(v76 + 4) = *((_BYTE *)v77 + 4);
  *(_DWORD *)v76 = v78;
  v79 = a3[32];
  v80 = a1 + v79;
  v81 = (__int128 *)(a2 + v79);
  v82 = *(_QWORD *)(a2 + v79);
  if (*(_QWORD *)(a1 + v79) == 1)
  {
    if (v82 == 1)
    {
      v83 = *v81;
      v84 = v81[1];
      *(_QWORD *)(v80 + 32) = *((_QWORD *)v81 + 4);
      *(_OWORD *)v80 = v83;
      *(_OWORD *)(v80 + 16) = v84;
    }
    else
    {
      *(_QWORD *)v80 = v82;
      *(_QWORD *)(v80 + 8) = *((_QWORD *)v81 + 1);
      *(_QWORD *)(v80 + 16) = *((_QWORD *)v81 + 2);
      *(_QWORD *)(v80 + 24) = *((_QWORD *)v81 + 3);
      *(_QWORD *)(v80 + 32) = *((_QWORD *)v81 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v82 == 1)
  {
    sub_241979B50(a1 + v79);
    v85 = *((_QWORD *)v81 + 4);
    v86 = v81[1];
    *(_OWORD *)v80 = *v81;
    *(_OWORD *)(v80 + 16) = v86;
    *(_QWORD *)(v80 + 32) = v85;
  }
  else
  {
    *(_QWORD *)v80 = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v80 + 8) = *((_QWORD *)v81 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v80 + 16) = *((_QWORD *)v81 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v80 + 24) = *((_QWORD *)v81 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v80 + 32) = *((_QWORD *)v81 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241979B50(uint64_t a1)
{
  destroy for ExperimentTuples();
  return a1;
}

uint64_t initializeWithTake for ExperimentDigest(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  *(_BYTE *)(a1 + 118) = *(_BYTE *)(a2 + 118);
  v8 = a3[17];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 88) = v7;
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[18];
  v15 = a3[19];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a3[20];
  v21 = a3[21];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a3[22];
  v27 = a3[23];
  v28 = a1 + v26;
  v29 = (int *)(a2 + v26);
  v30 = *v29;
  *(_BYTE *)(v28 + 4) = *((_BYTE *)v29 + 4);
  *(_DWORD *)v28 = v30;
  v31 = a1 + v27;
  v32 = a2 + v27;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  *(_DWORD *)v31 = *(_DWORD *)v32;
  v33 = a3[24];
  v34 = a3[25];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  *(_DWORD *)v35 = *(_DWORD *)v36;
  v37 = a1 + v34;
  v38 = a2 + v34;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  *(_DWORD *)v37 = *(_DWORD *)v38;
  v39 = a3[26];
  v40 = a3[27];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_DWORD *)v41 = *(_DWORD *)v42;
  v43 = a1 + v40;
  v44 = a2 + v40;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  *(_DWORD *)v43 = *(_DWORD *)v44;
  v45 = a3[28];
  v46 = a3[29];
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_BYTE *)(v47 + 4) = *(_BYTE *)(v48 + 4);
  *(_DWORD *)v47 = *(_DWORD *)v48;
  v49 = a1 + v46;
  v50 = a2 + v46;
  *(_BYTE *)(v49 + 4) = *(_BYTE *)(v50 + 4);
  *(_DWORD *)v49 = *(_DWORD *)v50;
  v51 = a3[30];
  v52 = a3[31];
  v53 = a1 + v51;
  v54 = a2 + v51;
  *(_BYTE *)(v53 + 4) = *(_BYTE *)(v54 + 4);
  *(_DWORD *)v53 = *(_DWORD *)v54;
  v55 = a1 + v52;
  v56 = a2 + v52;
  *(_BYTE *)(v55 + 4) = *(_BYTE *)(v56 + 4);
  *(_DWORD *)v55 = *(_DWORD *)v56;
  v57 = a3[32];
  v58 = a3[33];
  v59 = a1 + v57;
  v60 = a2 + v57;
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  v61 = *(_OWORD *)(v60 + 16);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *(_OWORD *)(v59 + 16) = v61;
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);
  return a1;
}

uint64_t assignWithTake for ExperimentDigest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  __int128 v66;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  v9 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v11 = a3[17];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  *(_WORD *)(a1 + 117) = *(_WORD *)(a2 + 117);
  v14 = sub_2419A9D1C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[18];
  v21 = a3[19];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  v26 = a3[20];
  v27 = a3[21];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a1 + v27;
  v31 = a2 + v27;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a3[22];
  v33 = a3[23];
  v34 = a1 + v32;
  v35 = (int *)(a2 + v32);
  v36 = *v35;
  *(_BYTE *)(v34 + 4) = *((_BYTE *)v35 + 4);
  *(_DWORD *)v34 = v36;
  v37 = a1 + v33;
  v38 = a2 + v33;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  *(_DWORD *)v37 = *(_DWORD *)v38;
  v39 = a3[24];
  v40 = a3[25];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_DWORD *)v41 = *(_DWORD *)v42;
  v43 = a1 + v40;
  v44 = a2 + v40;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  *(_DWORD *)v43 = *(_DWORD *)v44;
  v45 = a3[26];
  v46 = a3[27];
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_BYTE *)(v47 + 4) = *(_BYTE *)(v48 + 4);
  *(_DWORD *)v47 = *(_DWORD *)v48;
  v49 = a1 + v46;
  v50 = a2 + v46;
  *(_BYTE *)(v49 + 4) = *(_BYTE *)(v50 + 4);
  *(_DWORD *)v49 = *(_DWORD *)v50;
  v51 = a3[28];
  v52 = a3[29];
  v53 = a1 + v51;
  v54 = a2 + v51;
  *(_BYTE *)(v53 + 4) = *(_BYTE *)(v54 + 4);
  *(_DWORD *)v53 = *(_DWORD *)v54;
  v55 = a1 + v52;
  v56 = a2 + v52;
  *(_BYTE *)(v55 + 4) = *(_BYTE *)(v56 + 4);
  *(_DWORD *)v55 = *(_DWORD *)v56;
  v57 = a3[30];
  v58 = a3[31];
  v59 = a1 + v57;
  v60 = a2 + v57;
  *(_BYTE *)(v59 + 4) = *(_BYTE *)(v60 + 4);
  *(_DWORD *)v59 = *(_DWORD *)v60;
  v61 = a1 + v58;
  v62 = a2 + v58;
  *(_BYTE *)(v61 + 4) = *(_BYTE *)(v62 + 4);
  *(_DWORD *)v61 = *(_DWORD *)v62;
  v63 = a3[32];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  if (*(_QWORD *)(a1 + v63) != 1)
  {
    if (*v65 != 1)
    {
      *v64 = *v65;
      swift_bridgeObjectRelease();
      v64[1] = v65[1];
      swift_bridgeObjectRelease();
      v64[2] = v65[2];
      swift_bridgeObjectRelease();
      v64[3] = v65[3];
      swift_bridgeObjectRelease();
      v64[4] = v65[4];
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_241979B50((uint64_t)v64);
  }
  v66 = *((_OWORD *)v65 + 1);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *((_OWORD *)v64 + 1) = v66;
  v64[4] = v65[4];
LABEL_12:
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExperimentDigest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24197A234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 68), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ExperimentDigest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24197A2CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 68), a2, a2, v7);
  }
  return result;
}

void sub_24197A344()
{
  unint64_t v0;

  sub_24197BF98(319, (unint64_t *)&qword_257163520, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceExperimentMetrics(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(uint64_t *, _QWORD, uint64_t, int *);
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for EventMetadata(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_2419A9D1C();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
      if (v13(a2, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      v15 = v7[5];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      if (v13((uint64_t *)((char *)a2 + v15), 1, v11))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
      }
      v19 = v7[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v13((uint64_t *)((char *)a2 + v19), 1, v11))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v20, v21, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
      }
      v23 = v7[7];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v26 = v7[8];
      v27 = *(void **)((char *)a2 + v26);
      *(uint64_t *)((char *)a1 + v26) = (uint64_t)v27;
      v28 = v7[9];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v29[8] = v30[8];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v31 = v7[10];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v32[8] = v33[8];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v34 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      v35 = v27;
      v34(a1, 0, 1, v7);
    }
    v36 = a3[5];
    v37 = a3[6];
    v38 = (char *)a1 + v36;
    v39 = (char *)a2 + v36;
    *(_DWORD *)v38 = *(_DWORD *)v39;
    v38[4] = v39[4];
    v40 = (uint64_t *)((char *)a1 + v37);
    v41 = (uint64_t *)((char *)a2 + v37);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = a3[7];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = sub_2419A9D1C();
    v47 = *(_QWORD *)(v46 - 8);
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    swift_bridgeObjectRetain();
    if (v48(v45, 1, v46))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v50 = a3[8];
    v51 = a3[9];
    v52 = (char *)a1 + v50;
    v53 = (char *)a2 + v50;
    *(_QWORD *)v52 = *(_QWORD *)v53;
    v52[8] = v53[8];
    v54 = (uint64_t *)((char *)a1 + v51);
    v55 = (uint64_t *)((char *)a2 + v51);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = a3[10];
    v58 = a3[11];
    v59 = (char *)a1 + v57;
    v60 = (char *)a2 + v57;
    *(_DWORD *)v59 = *(_DWORD *)v60;
    v59[4] = v60[4];
    *(uint64_t *)((char *)a1 + v58) = *(uint64_t *)((char *)a2 + v58);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DeviceExperimentMetrics(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (int *)type metadata accessor for EventMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    v5 = sub_2419A9D1C();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = a1 + v4[5];
    if (!v7(v8, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    v9 = a1 + v4[6];
    if (!v7(v9, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);

  }
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 28);
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for DeviceExperimentMetrics(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t, int *);
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_2419A9D1C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v13 = v6[5];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    v17 = v6[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v19, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    v21 = v6[7];
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = v6[8];
    v25 = *(void **)&a2[v24];
    *(_QWORD *)&a1[v24] = v25;
    v26 = v6[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v27[8] = v28[8];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v29 = v6[10];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v30[8] = v31[8];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v32 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
    v33 = v25;
    v32(a1, 0, 1, v6);
  }
  v34 = a3[5];
  v35 = a3[6];
  v36 = &a1[v34];
  v37 = &a2[v34];
  *(_DWORD *)v36 = *(_DWORD *)v37;
  v36[4] = v37[4];
  v38 = &a1[v35];
  v39 = &a2[v35];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = a3[7];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = sub_2419A9D1C();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  swift_bridgeObjectRetain();
  if (v46(v43, 1, v44))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v48 = a3[8];
  v49 = a3[9];
  v50 = &a1[v48];
  v51 = &a2[v48];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  v50[8] = v51[8];
  v52 = &a1[v49];
  v53 = &a2[v49];
  v54 = *((_QWORD *)v53 + 1);
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *((_QWORD *)v52 + 1) = v54;
  v55 = a3[10];
  v56 = a3[11];
  v57 = &a1[v55];
  v58 = &a2[v55];
  *(_DWORD *)v57 = *(_DWORD *)v58;
  v57[4] = v58[4];
  *(_QWORD *)&a1[v56] = *(_QWORD *)&a2[v56];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DeviceExperimentMetrics(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, int *);
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int v100;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_241943CA8((uint64_t)a1, type metadata accessor for EventMetadata);
      goto LABEL_7;
    }
    v16 = sub_2419A9D1C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(a1, a2, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 24))(a1, a2, v16);
LABEL_22:
        v46 = v6[5];
        v47 = &a1[v46];
        v48 = &a2[v46];
        v49 = v18(&a1[v46], 1, v16);
        v50 = v18(v48, 1, v16);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v47, v48, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v47, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v47, v48, v16);
LABEL_28:
            v52 = v6[6];
            v53 = &a1[v52];
            v54 = &a2[v52];
            v55 = v18(&a1[v52], 1, v16);
            v56 = v18(v54, 1, v16);
            if (v55)
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v53, v54, v16);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v53, 0, 1, v16);
LABEL_34:
                v58 = v6[7];
                v59 = &a1[v58];
                v60 = &a2[v58];
                v61 = *(_QWORD *)v60;
                v59[8] = v60[8];
                *(_QWORD *)v59 = v61;
                v62 = v6[8];
                v63 = *(void **)&a1[v62];
                v64 = *(void **)&a2[v62];
                *(_QWORD *)&a1[v62] = v64;
                v65 = v64;

                v66 = v6[9];
                v67 = &a1[v66];
                v68 = &a2[v66];
                v69 = *(_QWORD *)v68;
                v67[8] = v68[8];
                *(_QWORD *)v67 = v69;
                v70 = v6[10];
                v71 = &a1[v70];
                v72 = &a2[v70];
                v73 = *(_QWORD *)v72;
                v71[8] = v72[8];
                *(_QWORD *)v71 = v73;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v53, v54, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
            }
            v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v47, v16);
        }
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_35;
  }
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(a2, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v21 = v6[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v13(&a2[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = v6[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v13(&a2[v25], 1, v11))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
  }
  v29 = v6[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)v30 = v32;
  v33 = v6[8];
  v34 = *(void **)&a2[v33];
  *(_QWORD *)&a1[v33] = v34;
  v35 = v6[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *(_QWORD *)v37;
  v36[8] = v37[8];
  *(_QWORD *)v36 = v38;
  v39 = v6[10];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *(_QWORD *)v41;
  v40[8] = v41[8];
  *(_QWORD *)v40 = v42;
  v43 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
  v44 = v34;
  v43(a1, 0, 1, v6);
LABEL_35:
  v74 = a3[5];
  v75 = &a1[v74];
  v76 = &a2[v74];
  v77 = *(_DWORD *)v76;
  v75[4] = v76[4];
  *(_DWORD *)v75 = v77;
  v78 = a3[6];
  v79 = &a1[v78];
  v80 = &a2[v78];
  *(_QWORD *)v79 = *(_QWORD *)v80;
  *((_QWORD *)v79 + 1) = *((_QWORD *)v80 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v81 = a3[7];
  v82 = &a1[v81];
  v83 = &a2[v81];
  v84 = sub_2419A9D1C();
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
  v87 = v86(v82, 1, v84);
  v88 = v86(v83, 1, v84);
  if (!v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 24))(v82, v83, v84);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v84);
    goto LABEL_40;
  }
  if (v88)
  {
LABEL_40:
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
LABEL_41:
  v90 = a3[8];
  v91 = &a1[v90];
  v92 = &a2[v90];
  v93 = *(_QWORD *)v92;
  v91[8] = v92[8];
  *(_QWORD *)v91 = v93;
  v94 = a3[9];
  v95 = &a1[v94];
  v96 = &a2[v94];
  *(_QWORD *)v95 = *(_QWORD *)v96;
  *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97 = a3[10];
  v98 = &a1[v97];
  v99 = &a2[v97];
  v100 = *(_DWORD *)v99;
  v98[4] = v99[4];
  *(_DWORD *)v98 = v100;
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for DeviceExperimentMetrics(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_2419A9D1C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v13 = v6[5];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    v17 = v6[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v19, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    v21 = v6[7];
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v24 = v6[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v25[8] = v26[8];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v27 = v6[10];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v28[8] = v29[8];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v30 = a3[5];
  v31 = a3[6];
  v32 = &a1[v30];
  v33 = &a2[v30];
  *(_DWORD *)v32 = *(_DWORD *)v33;
  v34 = *(_OWORD *)&a2[v31];
  v32[4] = v33[4];
  *(_OWORD *)&a1[v31] = v34;
  v35 = a3[7];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = sub_2419A9D1C();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  v41 = a3[8];
  v42 = a3[9];
  v43 = &a1[v41];
  v44 = &a2[v41];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v44[8];
  *(_OWORD *)&a1[v42] = *(_OWORD *)&a2[v42];
  v45 = a3[10];
  v46 = a3[11];
  v47 = &a1[v45];
  v48 = &a2[v45];
  *(_DWORD *)v47 = *(_DWORD *)v48;
  v47[4] = v48[4];
  *(_QWORD *)&a1[v46] = *(_QWORD *)&a2[v46];
  return a1;
}

char *assignWithTake for DeviceExperimentMetrics(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_241943CA8((uint64_t)a1, type metadata accessor for EventMetadata);
      goto LABEL_7;
    }
    v16 = sub_2419A9D1C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(a1, a2, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 40))(a1, a2, v16);
LABEL_22:
        v39 = v6[5];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v42 = v18(&a1[v39], 1, v16);
        v43 = v18(v41, 1, v16);
        if (v42)
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v40, v41, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v40, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v40, v41, v16);
LABEL_28:
            v45 = v6[6];
            v46 = &a1[v45];
            v47 = &a2[v45];
            v48 = v18(&a1[v45], 1, v16);
            v49 = v18(v47, 1, v16);
            if (v48)
            {
              if (!v49)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v46, v47, v16);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v16);
LABEL_34:
                v51 = v6[7];
                v52 = &a1[v51];
                v53 = &a2[v51];
                *(_QWORD *)v52 = *(_QWORD *)v53;
                v52[8] = v53[8];
                v54 = v6[8];
                v55 = *(void **)&a1[v54];
                *(_QWORD *)&a1[v54] = *(_QWORD *)&a2[v54];

                v56 = v6[9];
                v57 = &a1[v56];
                v58 = &a2[v56];
                *(_QWORD *)v57 = *(_QWORD *)v58;
                v57[8] = v58[8];
                v59 = v6[10];
                v60 = &a1[v59];
                v61 = &a2[v59];
                v60[8] = v61[8];
                *(_QWORD *)v60 = *(_QWORD *)v61;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v49)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v46, v47, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v46, v16);
            }
            v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v40, v16);
        }
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_35;
  }
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(a2, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v21 = v6[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v13(&a2[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = v6[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v13(&a2[v25], 1, v11))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v26, v27, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
  }
  v29 = v6[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  v32 = v6[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v33[8] = v34[8];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v35 = v6[10];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v36[8] = v37[8];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_35:
  v62 = a3[5];
  v63 = a3[6];
  v64 = &a1[v62];
  v65 = &a2[v62];
  *(_DWORD *)v64 = *(_DWORD *)v65;
  v64[4] = v65[4];
  v66 = &a1[v63];
  v67 = &a2[v63];
  v69 = *(_QWORD *)v67;
  v68 = *((_QWORD *)v67 + 1);
  *(_QWORD *)v66 = v69;
  *((_QWORD *)v66 + 1) = v68;
  swift_bridgeObjectRelease();
  v70 = a3[7];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = sub_2419A9D1C();
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
  v76 = v75(v71, 1, v73);
  v77 = v75(v72, 1, v73);
  if (!v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 40))(v71, v72, v73);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v71, v73);
    goto LABEL_40;
  }
  if (v77)
  {
LABEL_40:
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v71, v72, v73);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
LABEL_41:
  v79 = a3[8];
  v80 = a3[9];
  v81 = &a1[v79];
  v82 = &a2[v79];
  *(_QWORD *)v81 = *(_QWORD *)v82;
  v81[8] = v82[8];
  v83 = &a1[v80];
  v84 = &a2[v80];
  v86 = *(_QWORD *)v84;
  v85 = *((_QWORD *)v84 + 1);
  *(_QWORD *)v83 = v86;
  *((_QWORD *)v83 + 1) = v85;
  swift_bridgeObjectRelease();
  v87 = a3[10];
  v88 = a3[11];
  v89 = &a1[v87];
  v90 = &a2[v87];
  *(_DWORD *)v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_QWORD *)&a1[v88] = *(_QWORD *)&a2[v88];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceExperimentMetrics()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24197BD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for DeviceExperimentMetrics()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24197BE10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24197BEC0()
{
  unint64_t v0;
  unint64_t v1;

  sub_24197BF98(319, qword_257164358, (void (*)(uint64_t))type metadata accessor for EventMetadata);
  if (v0 <= 0x3F)
  {
    sub_24197BF98(319, (unint64_t *)&qword_257163520, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_24197BF98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2419AA2C8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_24197BFE4()
{
  return type metadata accessor for DeviceExperimentMetricsBuilderImpl(0);
}

uint64_t type metadata accessor for DeviceExperimentMetricsBuilderImpl(uint64_t a1)
{
  return sub_241941450(a1, qword_2571654E0);
}

void sub_24197C000()
{
  unint64_t v0;
  unint64_t v1;

  sub_24197BF98(319, qword_257164358, (void (*)(uint64_t))type metadata accessor for EventMetadata);
  if (v0 <= 0x3F)
  {
    sub_24197BF98(319, (unint64_t *)&qword_257163520, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DeviceExperimentMetricsBuilderImpl()
{
  return swift_lookUpClassMethod();
}

uint64_t SiriSegmentCohortCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  swift_allocObject();
  v8 = sub_241981CAC(a1, a2, a3, a4);
  swift_release();
  return v8;
}

void (*sub_24197C154(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v5 = type metadata accessor for EventMetadata(0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_241943C64(a2, (uint64_t)v6, type metadata accessor for EventMetadata);
  v4[5] = sub_241980898(v4, (uint64_t)v6);
  return sub_24197C1E0;
}

void sub_24197C1E0(_QWORD *a1)
{
  void *v1;
  void *v2;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  sub_241943CA8((uint64_t)v2, type metadata accessor for EventMetadata);
  free(v2);
  free(v1);
}

void (*sub_24197C228(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_2419809B0(v6, a2, a3);
  return sub_24197C294;
}

void sub_24197C294(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t SiriSegmentCohortResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriSegmentCohortResults.eventStreamMetadata.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SiriSegmentCohortResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriSegmentCohortResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriSegmentCohortResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SiriSegmentCohortResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriSegmentCohortResults.deviceSegmentsCohorts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriSegmentCohortResults.deviceSegmentsCohorts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SiriSegmentCohortResults.deviceSegmentsCohorts.modify())()
{
  return nullsub_1;
}

uint64_t SiriSegmentCohortResults.deviceBatchData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriSegmentCohortResults.deviceBatchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*SiriSegmentCohortResults.deviceBatchData.modify())()
{
  return nullsub_1;
}

uint64_t SiriSegmentCohortCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = sub_241981CAC(a1, a2, a3, a4);
  swift_release();
  return v4;
}

uint64_t sub_24197C3FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[182] = v1;
  v2[181] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v2[183] = swift_task_alloc();
  v2[184] = swift_task_alloc();
  v3 = type metadata accessor for DeviceSegmentsCohorts(0);
  v2[185] = v3;
  v2[186] = *(_QWORD *)(v3 - 8);
  v2[187] = swift_task_alloc();
  v2[188] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v2[189] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v2[190] = swift_task_alloc();
  v2[191] = swift_task_alloc();
  v2[192] = swift_task_alloc();
  v2[193] = swift_task_alloc();
  v4 = sub_2419A9D64();
  v2[194] = v4;
  v2[195] = *(_QWORD *)(v4 - 8);
  v2[196] = swift_task_alloc();
  v5 = sub_2419A9CE0();
  v2[197] = v5;
  v2[198] = *(_QWORD *)(v5 - 8);
  v2[199] = swift_task_alloc();
  v2[200] = swift_task_alloc();
  v2[201] = swift_task_alloc();
  v2[202] = swift_task_alloc();
  v2[203] = swift_task_alloc();
  v2[204] = swift_task_alloc();
  v2[205] = swift_task_alloc();
  v2[206] = swift_task_alloc();
  v2[207] = swift_task_alloc();
  v2[208] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  v2[209] = swift_task_alloc();
  v2[210] = swift_task_alloc();
  v2[211] = swift_task_alloc();
  v2[212] = swift_task_alloc();
  v2[213] = swift_task_alloc();
  v6 = sub_2419A9FBC();
  v2[214] = v6;
  v2[215] = *(_QWORD *)(v6 - 8);
  v2[216] = swift_task_alloc();
  v2[217] = swift_task_alloc();
  v7 = sub_2419A9FE0();
  v2[218] = v7;
  v2[219] = *(_QWORD *)(v7 - 8);
  v2[220] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24197C68C()
{
  _QWORD *v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  unsigned int v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  id v31;
  void *v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  unint64_t v74;
  char v75;
  unsigned int *v76;
  int v77;
  unint64_t v78;
  char v79;
  int v80;
  int v81;
  int v82;
  unint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t, uint64_t);
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  char v98;
  int v99;
  uint64_t v100;
  char v101;
  void *v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  id v111;
  double v112;
  double v113;
  uint64_t (*v114)(uint64_t, uint64_t);
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  void (*v126)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  char v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  uint8_t *v155;
  NSObject *v156;
  os_log_type_t v157;
  uint8_t *v158;
  uint64_t ObjCClassFromMetadata;
  id v160;
  void *v161;
  void *v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  void (*v174)(uint64_t, uint64_t);
  uint64_t v175;
  char v176;
  uint64_t v177;
  _OWORD *v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  char v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  _OWORD *v190;
  void (*v191)(_QWORD *);
  void (*v192)(_QWORD *, _QWORD);
  unint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  void *v208;
  id v209;
  id v210;
  NSObject *v211;
  os_log_type_t v212;
  uint8_t *v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  void (*v222)(uint64_t, uint64_t);
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  void (*v230)(uint64_t, uint64_t);
  uint64_t v231;
  _OWORD *v232;
  uint64_t v233;
  uint64_t *v234;
  id v235;
  uint64_t v236;
  void *v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(uint64_t, uint64_t);
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  _OWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _OWORD *v252;
  _OWORD *v253;
  uint64_t v254;
  _OWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  void (*v275)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v276;
  void (*v277)(_QWORD *, _QWORD);
  id v278;
  unint64_t *v279;
  int v280;
  int v281;
  uint64_t v282;
  _QWORD *v283;
  uint64_t v284;
  _QWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  unsigned int (*v290)(uint64_t, uint64_t, uint64_t);
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306[3];

  v1 = v0;
  sub_2419A9FD4();
  sub_2419A9FC8();
  sub_2419A9FA4();
  v2 = sub_2419A9FC8();
  v3 = sub_2419AA268();
  if ((sub_2419AA2B0() & 1) != 0)
  {
    v4 = v1[216];
    v5 = v1[215];
    v6 = v1[214];
    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16);
    v7(v4, v1[217], v6);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_2419A9FB0();
    _os_signpost_emit_with_name_impl(&dword_24193B000, v2, v3, v9, "SiriSegmentCohortCalculatorSP", "", v8, 2u);
    MEMORY[0x24269F7A0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    v10 = v1[215];

    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16);
  }
  v7(v1[216], v1[217], v1[214]);
  sub_2419AA010();
  swift_allocObject();
  sub_2419AA004();
  v11 = sub_2419AA028();
  v12 = sub_2419AA238();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_24193B000, v11, v12, "SQL calculator invoked: SiriSegmentCohortCalculator", v13, 2u);
    MEMORY[0x24269F7A0](v13, -1, -1);
  }
  v14 = v1[213];
  v15 = v1[182];

  v16 = v15 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL;
  sub_2419416DC(v15 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL, v14, &qword_257162CF0);
  v17 = sub_2419A9C14();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v14, 1, v17);
  sub_241941720(v14, &qword_257162CF0);
  if (v20 == 1)
  {
    v21 = v1[220];
    sub_24193F23C();
    swift_allocError();
    *v22 = 9;
    swift_willThrow();
LABEL_10:
    sub_24195AA2C(v21, "SiriSegmentCohortCalculatorSP", 29, 2);
    swift_release();
    v27 = v1[220];
    v28 = v1[219];
    v29 = v1[218];
    (*(void (**)(_QWORD, _QWORD))(v1[215] + 8))(v1[217], v1[214]);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v30 = (uint64_t (*)(void))v1[1];
    return v30();
  }
  v298 = v18;
  v23 = v1[212];
  sub_2419416DC(v16, v23, &qword_257162CF0);
  v290 = v19;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v19)(v23, 1, v17);
  if ((_DWORD)result == 1)
    goto LABEL_203;
  v25 = v1[212];
  sub_2419AA0D0();
  v26 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v26(v25, v17);
  v241 = v26;
  v31 = (id)sub_2419A9DE8();
  v32 = (void *)sub_2419A9DE8();
  v238 = v31;
  sub_2419A9F2C();
  v34 = v33;

  v236 = v17;
  if ((v34 & 1) != 0)
  {
    v35 = v1[207];
    v36 = v1[206];
    v37 = v1[205];
    v38 = v1[198];
    v39 = v1[197];
    sub_2419A9F14();
    sub_2419A9C80();
    v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v40(v37, v39);
    sub_2419A9C68();
    v40(v36, v39);
    sub_2419A9C74();
    v40(v35, v39);
  }
  else
  {
    sub_2419A9C44();
  }
  v234 = v1 + 176;
  v41 = v1 + 177;
  v294 = v1[203];
  v301 = v1[202];
  v42 = v1[196];
  v43 = v1;
  v44 = v1[195];
  v45 = v43[194];
  v283 = v43;
  sub_2419A9D58();
  sub_2419A9C80();
  v46 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v47 = v41;
  v46(v42, v45);
  sub_2419A9F44();
  sub_2419A9C50();
  v48 = (void *)sub_2419A9F38();
  sub_2419A9C80();
  sub_2419A9DD0();
  v49 = sub_24197FC00(v294, v301);
  v51 = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571656E8);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_2419AB050;
  *(_QWORD *)(v52 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v52 + 64) = sub_241981E30();
  *(_QWORD *)(v52 + 32) = v49;
  *(_QWORD *)(v52 + 40) = v51;
  v53 = sub_2419AA100();
  v55 = v54;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  v56 = sub_2419AA028();
  v57 = sub_2419AA238();
  v243 = v47;
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    v306[0] = v59;
    *(_DWORD *)v58 = 136315138;
    swift_bridgeObjectRetain();
    *v234 = sub_24193F470(v53, v55, v306);
    sub_2419AA2EC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24193B000, v56, v57, "SQL: %s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v59, -1, -1);
    MEMORY[0x24269F7A0](v58, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v60 = v283;
  v304 = MEMORY[0x24BEE4B00];
  sub_2419A9EE4();
  v235 = v48;
  v237 = (void *)sub_2419A9ECC();
  sub_2419A9ED8();
  swift_bridgeObjectRelease();
  sub_2419A9F14();
  v61 = MEMORY[0x24BEE4AF8];
  v283[173] = MEMORY[0x24BEE4AF8];
  if ((sub_2419A9EFC() & 1) == 0)
  {
    v66 = 0;
    v264 = 0;
    v266 = 0;
LABEL_139:
    swift_bridgeObjectRetain();
    v153 = sub_2419AA028();
    v154 = sub_2419AA238();
    if (os_log_type_enabled(v153, v154))
    {
      v155 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v155 = 134217984;
      v60[174] = *(_QWORD *)(v61 + 16);
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24193B000, v153, v154, "SiriSegmentCohortCalculator query yielded %ld results", v155, 0xCu);
      MEMORY[0x24269F7A0](v155, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    sub_24197FE94(v266, 0xD000000000000017, 0x80000002419B1140);
    sub_24197FE94(v264, 0xD000000000000015, 0x80000002419B1160);
    sub_24197FE94(v66, 0xD00000000000001CLL, 0x80000002419B1180);
    v156 = sub_2419AA028();
    v157 = sub_2419AA238();
    if (os_log_type_enabled(v156, v157))
    {
      v158 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v158 = 0;
      _os_log_impl(&dword_24193B000, v156, v157, "SQL calculator invoked for SiriLogicClockIds", v158, 2u);
      MEMORY[0x24269F7A0](v158, -1, -1);
    }

    type metadata accessor for SiriSegmentCohortMetrics();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v160 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v161 = (void *)sub_2419AA0DC();
    v162 = (void *)sub_2419AA0DC();
    v163 = objc_msgSend(v160, sel_URLForResource_withExtension_, v161, v162);

    if (v163)
    {
      sub_2419A9C08();

      v164 = 0;
    }
    else
    {
      v164 = 1;
    }
    v165 = v60[211];
    v166 = v60[210];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v298 + 56))(v166, v164, 1, v236);
    sub_24194184C(v166, v165, &qword_257162CF0);
    if (v290(v165, 1, v236) == 1)
    {
      v21 = v60[220];
      v296 = v60[208];
      v299 = v60[211];
      v167 = v60[204];
      v168 = v60[203];
      v169 = v60[202];
      v170 = v60[201];
      v171 = v283[198];
      v172 = v283[197];
      swift_bridgeObjectRelease();

      sub_24193F23C();
      swift_allocError();
      *v173 = 9;
      swift_willThrow();

      swift_release();
      v174 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
      v1 = v283;
      v174(v170, v172);
      v174(v169, v172);
      v174(v168, v172);
      v174(v167, v172);
      v174(v296, v172);
      sub_241941720(v299, &qword_257162CF0);
LABEL_151:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    v175 = v60[209];
    sub_2419416DC(v60[211], v175, &qword_257162CF0);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v290)(v175, 1, v236);
    if ((_DWORD)result == 1)
      goto LABEL_204;
    sub_2419AA0D0();
    v241(v60[209], v236);
    sub_2419A9ED8();
    swift_bridgeObjectRelease();
    v176 = sub_2419A9EFC();
    if ((v176 & 1) == 0)
    {
LABEL_185:
      v204 = MEMORY[0x24BEE4AF8];
      v305 = MEMORY[0x24BEE4AF8];
      if (*(_QWORD *)(v304 + 16))
      {
        v205 = swift_bridgeObjectRetain();
        sub_24197FA4C(v205, &v304, &v305);
        swift_bridgeObjectRelease();
      }
      v206 = sub_2419A9F08();
      v207 = v283;
      if (!v206)
      {
        v261 = v283[220];
        v267 = v283[219];
        v269 = v283[218];
        v265 = v283[217];
        v262 = v283[215];
        v263 = v283[214];
        v260 = v283[211];
        v259 = v283[208];
        v257 = v283[203];
        v258 = v283[204];
        v217 = v283[202];
        v303 = v283[201];
        v218 = v283[198];
        v219 = v283[197];
        v220 = (uint64_t *)v283[181];
        sub_2419A9F20();

        v221 = sub_2419A9DA0();
        swift_release();
        swift_release();

        v222 = *(void (**)(uint64_t, uint64_t))(v218 + 8);
        v222(v303, v219);
        v222(v217, v219);
        v222(v257, v219);
        v222(v258, v219);
        v222(v259, v219);
        swift_beginAccess();
        v223 = v283[173];
        v224 = v305;
        *v220 = v221;
        v220[1] = v204;
        v220[2] = v223;
        v220[3] = v224;
        swift_bridgeObjectRetain();
        sub_241941720(v260, &qword_257162CF0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24195AA2C(v261, "SiriSegmentCohortCalculatorSP", 29, 2);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v265, v263);
        (*(void (**)(uint64_t, uint64_t))(v267 + 8))(v261, v269);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v30 = (uint64_t (*)(void))v283[1];
        return v30();
      }
      v208 = (void *)v206;
      swift_bridgeObjectRelease();

      v209 = v208;
      v210 = v208;
      v211 = sub_2419AA028();
      v212 = sub_2419AA244();
      if (os_log_type_enabled(v211, v212))
      {
        v213 = (uint8_t *)swift_slowAlloc();
        v214 = swift_slowAlloc();
        v306[0] = v214;
        *(_DWORD *)v213 = 136315138;
        swift_getErrorValue();
        v215 = sub_2419AA598();
        v283[175] = sub_24193F470(v215, v216, v306);
        v207 = v283;
        sub_2419AA2EC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24193B000, v211, v212, "SQL execution error: %s", v213, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24269F7A0](v214, -1, -1);
        MEMORY[0x24269F7A0](v213, -1, -1);

      }
      else
      {

      }
      v21 = v207[220];
      v297 = v207[208];
      v300 = v207[211];
      v291 = v207[203];
      v293 = v207[204];
      v225 = v207[202];
      v226 = v207[201];
      v227 = v207[198];
      v228 = v283[197];
      swift_getErrorValue();
      sub_2419AA598();
      sub_24193F23C();
      swift_allocError();
      static BiomeSQLDatabaseUtils.identifySqlError(errorString:)(v229);
      swift_bridgeObjectRelease();
      swift_willThrow();

      swift_release();
      swift_release();

      v230 = *(void (**)(uint64_t, uint64_t))(v227 + 8);
      v230(v226, v228);
      v230(v225, v228);
      v230(v291, v228);
      v230(v293, v228);
      v231 = v228;
      v1 = v283;
      v230(v297, v231);
      sub_241941720(v300, &qword_257162CF0);
      swift_bridgeObjectRelease();
      goto LABEL_151;
    }
    v177 = (uint64_t)(v283 + 42);
    v292 = (uint64_t)(v283 + 71);
    v178 = v283 + 79;
    v285 = v283 + 103;
    while (1)
    {
      v179 = sub_2419A9EF0();
      if (!v179)
        goto LABEL_155;
      v180 = v179;
      v283[155] = 0x61645F746E657665;
      v283[156] = 0xEA00000000006574;
      sub_2419AA388();
      if (*(_QWORD *)(v180 + 16) && (v181 = sub_24195B4F4(v177), (v182 & 1) != 0))
      {
        sub_24193D1D0(*(_QWORD *)(v180 + 56) + 32 * v181, (uint64_t)v178);
      }
      else
      {
        *v178 = 0u;
        *(_OWORD *)(v283 + 81) = 0u;
      }
      sub_24195BF58(v177);
      if (!v283[82])
      {
        swift_bridgeObjectRelease();
        sub_241941720((uint64_t)v178, &qword_257163EA0);
        goto LABEL_155;
      }
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_184;
      v183 = v283[152];
      if (!*(_QWORD *)(v304 + 16)
        || (v184 = v283[151],
            swift_bridgeObjectRetain(),
            sub_24195B490(v184, v183),
            v186 = v185,
            swift_bridgeObjectRelease(),
            (v186 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_184:
        swift_bridgeObjectRelease();
        goto LABEL_155;
      }
      v283[149] = 0xD000000000000011;
      v283[150] = 0x80000002419B1D80;
      v187 = (uint64_t)(v283 + 62);
      sub_2419AA388();
      if (!*(_QWORD *)(v180 + 16))
        break;
      v188 = sub_24195B4F4((uint64_t)(v283 + 62));
      if ((v189 & 1) == 0)
      {
        v187 = (uint64_t)(v283 + 62);
        v190 = v283 + 71;
        goto LABEL_172;
      }
      sub_24193D1D0(*(_QWORD *)(v180 + 56) + 32 * v188, v292);
      v187 = (uint64_t)(v283 + 62);
LABEL_173:
      swift_bridgeObjectRelease();
      sub_24195BF58(v187);
      if (v283[74])
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v191 = sub_24197C228(v285, v184, v183);
          v192 = (void (*)(_QWORD *, _QWORD))v191;
          v279 = v193;
          if (*v193)
          {
            v277 = (void (*)(_QWORD *, _QWORD))v191;
            v194 = v283[190];
            sub_2419A9CEC();
            swift_bridgeObjectRelease();
            v195 = sub_2419A9D1C();
            v196 = *(_QWORD *)(v195 - 8);
            result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v196 + 48))(v194, 1, v195);
            if ((_DWORD)result == 1)
              goto LABEL_205;
            v197 = *v279;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v279 = v197;
            v282 = v195;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v197 = sub_241980504(0, *(_QWORD *)(v197 + 16) + 1, 1, v197, &qword_257165850, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
              *v279 = v197;
            }
            v200 = *(_QWORD *)(v197 + 16);
            v199 = *(_QWORD *)(v197 + 24);
            v201 = v200 + 1;
            if (v200 >= v199 >> 1)
            {
              v203 = sub_241980504(v199 > 1, v200 + 1, 1, v197, &qword_257165850, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
              v201 = v200 + 1;
              v197 = v203;
              *v279 = v203;
            }
            v202 = v283[190];
            *(_QWORD *)(v197 + 16) = v201;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v196 + 32))(v197+ ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80))+ *(_QWORD *)(v196 + 72) * v200, v202, v282);
            v277(v285, 0);
          }
          else
          {
            swift_bridgeObjectRelease();
            v192(v285, 0);
          }
        }
        goto LABEL_184;
      }
      swift_bridgeObjectRelease();
      sub_241941720(v292, &qword_257163EA0);
LABEL_155:
      if ((sub_2419A9EFC() & 1) == 0)
        goto LABEL_185;
    }
    v190 = v283 + 71;
LABEL_172:
    *v190 = 0u;
    v190[1] = 0u;
    goto LABEL_173;
  }
  v270 = 0;
  v264 = 0;
  v266 = 0;
  v247 = (uint64_t)(v283 + 2);
  v62 = (uint64_t)(v283 + 7);
  v63 = (uint64_t)(v283 + 12);
  v254 = (uint64_t)(v283 + 17);
  v64 = (uint64_t)(v283 + 22);
  v65 = (uint64_t)(v283 + 27);
  v250 = (uint64_t)(v283 + 52);
  v251 = (uint64_t)(v283 + 32);
  v249 = (uint64_t)(v283 + 57);
  v252 = v283 + 67;
  v255 = v283 + 87;
  v256 = (uint64_t)(v283 + 47);
  v232 = v283 + 99;
  v233 = (uint64_t)(v283 + 37);
  v239 = OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlDateFormatter;
  v240 = v283[182];
  v248 = v240 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_oddId;
  v253 = v283 + 115;
  v246 = v283 + 111;
  v288 = v283 + 95;
  v289 = v283 + 83;
  v286 = v283 + 119;
  v287 = v283 + 107;
  v242 = v283[198];
  v244 = v283[185];
  v245 = v283[186];
  while (1)
  {
    v73 = sub_2419A9EF0();
    if (!v73)
      goto LABEL_24;
    v60[143] = 0xD000000000000010;
    v60[144] = 0x80000002419B1DA0;
    v302 = v73;
    sub_2419AA388();
    if (*(_QWORD *)(v302 + 16) && (v74 = sub_24195B4F4(v65), (v75 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v302 + 56) + 32 * v74, (uint64_t)v289);
    }
    else
    {
      *v289 = 0u;
      *(_OWORD *)(v283 + 85) = 0u;
    }
    v76 = (unsigned int *)v283 + 443;
    sub_24195BF58(v65);
    if (v60[86])
    {
      if (swift_dynamicCast())
        v77 = *((unsigned __int8 *)v283 + 1781);
      else
        v77 = 2;
    }
    else
    {
      sub_241941720((uint64_t)v289, &qword_257163EA0);
      v77 = 2;
    }
    v60[139] = 0xD000000000000015;
    v60[140] = 0x80000002419B1DC0;
    sub_2419AA388();
    if (*(_QWORD *)(v302 + 16))
    {
      v78 = sub_24195B4F4(v64);
      if ((v79 & 1) != 0)
      {
        sub_24193D1D0(*(_QWORD *)(v302 + 56) + 32 * v78, (uint64_t)v288);
      }
      else
      {
        *v288 = 0u;
        *(_OWORD *)(v283 + 97) = 0u;
      }
      v76 = (unsigned int *)v283 + 443;
    }
    else
    {
      *v288 = 0u;
      *(_OWORD *)(v283 + 97) = 0u;
    }
    sub_24195BF58(v64);
    if (!v60[98])
    {
      sub_241941720((uint64_t)v288, &qword_257163EA0);
LABEL_46:
      v80 = 2;
      goto LABEL_47;
    }
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_46;
    if ((*((_BYTE *)v283 + 1780) & 1) != 0)
    {
      v80 = 1;
      v81 = 2;
      goto LABEL_48;
    }
    v80 = 0;
LABEL_47:
    v81 = 1;
LABEL_48:
    v281 = v81;
    v82 = (v80 & 1) == 0;
    if ((v77 & 1) != 0)
      v82 = 2;
    v280 = v82;
    v60[137] = 0xD000000000000025;
    v60[138] = 0x80000002419B0B90;
    sub_2419AA388();
    if (*(_QWORD *)(v302 + 16))
    {
      v83 = sub_24195B4F4(v63);
      if ((v84 & 1) != 0)
      {
        sub_24193D1D0(*(_QWORD *)(v302 + 56) + 32 * v83, (uint64_t)v287);
      }
      else
      {
        *v287 = 0u;
        *(_OWORD *)(v283 + 109) = 0u;
      }
      v76 = (unsigned int *)v283 + 443;
    }
    else
    {
      *v287 = 0u;
      *(_OWORD *)(v283 + 109) = 0u;
    }
    sub_24195BF58(v63);
    if (!v60[110])
    {
      sub_241941720((uint64_t)v287, &qword_257163EA0);
LABEL_60:
      v295 = 0;
      goto LABEL_61;
    }
    if (!swift_dynamicCast())
      goto LABEL_60;
    v295 = *v76;
LABEL_61:
    v60[135] = 0xD000000000000029;
    v60[136] = 0x80000002419B0BC0;
    sub_2419AA388();
    if (*(_QWORD *)(v302 + 16) && (v85 = sub_24195B4F4(v62), (v86 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v302 + 56) + 32 * v85, (uint64_t)v286);
    }
    else
    {
      *v286 = 0u;
      *(_OWORD *)(v283 + 121) = 0u;
    }
    sub_24195BF58(v62);
    if (v60[122])
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v284 = *((unsigned int *)v283 + 442);
        if (v295 | v284)
          goto LABEL_72;
        goto LABEL_75;
      }
    }
    else
    {
      sub_241941720((uint64_t)v286, &qword_257163EA0);
    }
    if (v295)
    {
      v284 = 0;
      goto LABEL_72;
    }
LABEL_75:
    v284 = 0;
    if ((v80 & 1) != 0 && v77 != 2 && (v77 & 1) == 0 && v80 != 2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_72:
    v87 = v60[193];
    v88 = sub_2419A9D1C();
    v276 = *(_QWORD *)(v88 - 8);
    v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v276 + 56);
    v89(v87, 1, 1, v88);
    v60[165] = 0xD000000000000015;
    v60[166] = 0x80000002419B0250;
    sub_2419AA388();
    sub_24195AC8C(v256, v302, v255);
    sub_24195BF58(v256);
    if (v60[90])
    {
      result = swift_dynamicCast();
      v90 = v283 + 91;
      if ((result & 1) != 0)
      {
        v91 = v60[193];
        v92 = v60[192];
        sub_2419A9CEC();
        swift_bridgeObjectRelease();
        sub_241941720(v91, &qword_257162D48);
        sub_24194184C(v92, v91, &qword_257162D48);
        goto LABEL_82;
      }
    }
    else
    {
      result = sub_241941720((uint64_t)v255, &qword_257163EA0);
      v90 = v283 + 91;
    }
    v93 = __OFADD__(v266++, 1);
    if (v93)
      goto LABEL_198;
LABEL_82:
    v89(v60[191], 1, 1, v88);
    v60[141] = 0xD000000000000013;
    v60[142] = 0x80000002419B11E0;
    sub_2419AA388();
    sub_24195AC8C(v254, v302, v253);
    sub_24195BF58(v254);
    v275 = v89;
    if (v60[118])
    {
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v94 = v60[192];
        v95 = v60[191];
        sub_2419A9CEC();
        swift_bridgeObjectRelease();
        sub_241941720(v95, &qword_257162D48);
        sub_24194184C(v94, v95, &qword_257162D48);
        goto LABEL_87;
      }
    }
    else
    {
      result = sub_241941720((uint64_t)v253, &qword_257163EA0);
    }
    v93 = __OFADD__(v264++, 1);
    if (v93)
      goto LABEL_199;
LABEL_87:
    v60[147] = 0xD000000000000029;
    v60[148] = 0x80000002419B1200;
    sub_2419AA388();
    sub_24195AC8C(v249, v302, v90);
    sub_24195BF58(v249);
    if (v60[94])
    {
      v96 = swift_dynamicCast();
      if (v96)
        v97 = v283[178];
      else
        v97 = 0;
      v98 = v96 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)v90, &qword_257163EA0);
      v97 = 0;
      v98 = 1;
    }
    v273 = v98;
    v60[153] = 0xD00000000000002BLL;
    v60[154] = 0x80000002419B1230;
    sub_2419AA388();
    sub_24195AC8C(v250, v302, v252);
    sub_24195BF58(v250);
    if (v60[70])
    {
      v99 = swift_dynamicCast();
      v100 = *v243;
      if (!v99)
        v100 = 0;
      v272 = v100;
      v101 = v99 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)v252, &qword_257163EA0);
      v272 = 0;
      v101 = 1;
    }
    v271 = v101;
    v278 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95598]), sel_init);
    v60[159] = 0x61645F746E657665;
    v60[160] = 0xEA00000000006574;
    sub_2419AA388();
    sub_24195AC8C(v251, v302, v283 + 75);
    sub_24195BF58(v251);
    v274 = v97;
    if (!v60[78])
    {
      v118 = (uint64_t)(v283 + 75);
      v119 = &qword_257163EA0;
      goto LABEL_114;
    }
    result = swift_dynamicCast();
    if ((result & 1) == 0)
      goto LABEL_115;
    v102 = *(void **)(v240 + v239);
    v103 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    v104 = objc_msgSend(v102, sel_dateFromString_, v103);

    if (!v104)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v242 + 56))(v60[189], 1, 1, v60[197]);
LABEL_113:
      v118 = v60[189];
      v119 = &qword_257162EF0;
LABEL_114:
      result = sub_241941720(v118, v119);
LABEL_115:
      if (__OFADD__(v270, 1))
        goto LABEL_197;
      v116 = v88;
      ++v270;
      goto LABEL_117;
    }
    v105 = v60[207];
    v106 = v60[197];
    v107 = v60[189];
    sub_2419A9CD4();

    v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v242 + 32);
    v108(v107, v105, v106);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v242 + 56))(v107, 0, 1, v106);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v242 + 48))(v107, 1, v106) == 1)
      goto LABEL_113;
    v108(v60[200], v60[189], v60[197]);
    sub_2419A9C74();
    if ((sub_2419A9CB0() & 1) == 0)
      break;
    v67 = v60[200];
    v68 = v60[199];
    v69 = v60[197];
    v70 = v60[193];
    v71 = v60[191];
    swift_bridgeObjectRelease();

    v72 = *(void (**)(uint64_t, uint64_t))(v242 + 8);
    v72(v68, v69);
    v72(v67, v69);
    sub_241941720(v71, &qword_257162D48);
    sub_241941720(v70, &qword_257162D48);
LABEL_22:
    v63 = (uint64_t)(v283 + 12);
    v62 = (uint64_t)(v283 + 7);
LABEL_23:
    v65 = (uint64_t)(v283 + 27);
    v64 = (uint64_t)(v283 + 22);
LABEL_24:
    if ((sub_2419A9EFC() & 1) == 0)
    {
      v61 = v283[173];
      v66 = v270;
      goto LABEL_139;
    }
  }
  if (v278)
  {
    v109 = v60[207];
    v110 = v60[197];
    v111 = v278;
    sub_2419A9C5C();
    sub_2419A9CBC();
    v113 = v112;
    v114 = *(uint64_t (**)(uint64_t, uint64_t))(v242 + 8);
    result = v114(v109, v110);
    if ((~*(_QWORD *)&v113 & 0x7FF0000000000000) == 0)
      goto LABEL_200;
    if (v113 <= -1.0)
      goto LABEL_201;
    if (v113 >= 1.84467441e19)
      goto LABEL_202;
    objc_msgSend(v111, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v113);

    v60[157] = 0xD000000000000018;
    v60[158] = 0x80000002419B1300;
    v115 = v111;
    sub_2419AA388();
    sub_24195AC8C(v233, v302, v232);
    sub_24195BF58(v233);
    if (v60[102])
    {
      v116 = v88;
      if (swift_dynamicCast())
        v117 = *((unsigned int *)v283 + 444);
      else
        v117 = 86400;
    }
    else
    {
      v116 = v88;
      v117 = 86400;
      sub_241941720((uint64_t)v232, &qword_257163EA0);
    }
    objc_msgSend(v115, sel_setNumberOfSeconds_, v117);

  }
  else
  {
    v116 = v88;
    v114 = *(uint64_t (**)(uint64_t, uint64_t))(v242 + 8);
  }
  v151 = v60[200];
  v152 = v60[197];
  v114(v60[199], v152);
  v114(v151, v152);
LABEL_117:
  v120 = v60[193];
  v121 = v60[191];
  v122 = v60[184];
  type metadata accessor for DeviceSegmentsCohortsImpl(0);
  v123 = swift_allocObject();
  v124 = v123 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_eventMetadata;
  v125 = (int *)type metadata accessor for EventMetadata(0);
  v126 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(*((_QWORD *)v125 - 1) + 56);
  v126(v124, 1, 1, v125);
  v127 = OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_deviceSegmentsReported;
  *(_QWORD *)(v123 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_deviceSegmentsReported) = 0;
  v268 = OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_deviceCohortsReported;
  *(_QWORD *)(v123 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_deviceCohortsReported) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v276 + 16))(v122, v248, v116);
  v275(v122, 0, 1, v116);
  sub_2419416DC(v120, v122 + v125[5], &qword_257162D48);
  sub_2419416DC(v121, v122 + v125[6], &qword_257162D48);
  result = sub_2419A9CBC();
  if ((~*(_QWORD *)&v128 & 0x7FF0000000000000) != 0)
  {
    if (v128 <= -1.0)
      goto LABEL_194;
    if (v128 >= 1.84467441e19)
      goto LABEL_195;
    if (!is_mul_ok((unint64_t)v128, 0x3E8uLL))
      goto LABEL_196;
    v60 = v283;
    v129 = v283[188];
    v130 = v283[184];
    v131 = v283[183];
    v132 = v130 + v125[7];
    *(_QWORD *)v132 = 1000 * (unint64_t)v128;
    *(_BYTE *)(v132 + 8) = 0;
    *(_QWORD *)(v130 + v125[8]) = v278;
    v133 = v130 + v125[9];
    *(_QWORD *)v133 = v274;
    *(_BYTE *)(v133 + 8) = v273;
    v134 = v130 + v125[10];
    *(_QWORD *)v134 = v272;
    *(_BYTE *)(v134 + 8) = v271;
    v126(v130, 0, 1, v125);
    sub_2419416DC(v130, v131, &qword_257163E60);
    swift_beginAccess();
    v135 = v278;
    sub_24195BF8C(v131, v124, &qword_257163E60);
    swift_endAccess();
    sub_241941720(v130, &qword_257163E60);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257165708);
    v136 = swift_allocObject();
    *(_OWORD *)(v136 + 16) = xmmword_2419AB050;
    *(_DWORD *)(v136 + 32) = v280;
    *(_BYTE *)(v136 + 36) = 0;
    *(_DWORD *)(v136 + 40) = v281;
    *(_BYTE *)(v136 + 44) = 0;
    *(_DWORD *)(v136 + 48) = v295;
    *(_BYTE *)(v136 + 52) = 0;
    *(_DWORD *)(v136 + 56) = v284;
    *(_BYTE *)(v136 + 60) = 0;
    *(_QWORD *)(v123 + v127) = v136;
    swift_bridgeObjectRelease();
    sub_2419416DC(v124, v129, &qword_257163E60);
    v137 = *(_QWORD *)(v123 + v268);
    *(_QWORD *)(v129 + *(int *)(v244 + 20)) = v136;
    *(_QWORD *)(v129 + *(int *)(v244 + 24)) = v137;
    swift_setDeallocating();
    v138 = v123 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_eventMetadata;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_241941720(v138, &qword_257163E60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocClassInstance();
    v283[167] = 0x61645F746E657665;
    v283[168] = 0xEA00000000006574;
    sub_2419AA388();
    sub_24195AC8C(v247, v302, v246);
    swift_bridgeObjectRelease();
    sub_24195BF58(v247);
    if (v283[114])
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v139 = v283[169];
        v140 = v283[170];
        if (!*(_QWORD *)(v304 + 16)
          || (swift_bridgeObjectRetain(),
              sub_24195B490(v139, v140),
              v142 = v141,
              swift_bridgeObjectRelease(),
              (v142 & 1) == 0))
        {
          v143 = swift_isUniquelyReferenced_nonNull_native();
          v306[0] = v304;
          sub_24198188C(MEMORY[0x24BEE4AF8], v295 | (v284 << 32), v139, v140, v143);
          v304 = v306[0];
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_241941720((uint64_t)v246, &qword_257163EA0);
    }
    sub_241943C64(v283[188], v283[187], type metadata accessor for DeviceSegmentsCohorts);
    v144 = v283[173];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v144 = sub_241980504(0, *(_QWORD *)(v144 + 16) + 1, 1, v144, &qword_257165848, type metadata accessor for DeviceSegmentsCohorts);
    v146 = *(_QWORD *)(v144 + 16);
    v145 = *(_QWORD *)(v144 + 24);
    if (v146 >= v145 >> 1)
      v144 = sub_241980504(v145 > 1, v146 + 1, 1, v144, &qword_257165848, type metadata accessor for DeviceSegmentsCohorts);
    v147 = v283[193];
    v148 = v283[191];
    v149 = v283[188];
    v150 = v283[187];
    *(_QWORD *)(v144 + 16) = v146 + 1;
    sub_24195C340(v150, v144+ ((*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80))+ *(_QWORD *)(v245 + 72) * v146, type metadata accessor for DeviceSegmentsCohorts);

    v283[173] = v144;
    sub_241943CA8(v149, type metadata accessor for DeviceSegmentsCohorts);
    sub_241941720(v148, &qword_257162D48);
    sub_241941720(v147, &qword_257162D48);
    goto LABEL_22;
  }
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
  return result;
}

uint64_t sub_24197F324(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  void (*v42)(void);
  char *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(void);
  int v74;
  int v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t *v80;
  int v81;
  int v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  _DWORD *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(uint64_t, char *, uint64_t);
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;

  v80 = a3;
  v6 = type metadata accessor for DeviceBatchData(0);
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v92 = (uint64_t)&v69 - v10;
  v93 = sub_2419A9D1C();
  v83 = *(_QWORD **)(v93 - 8);
  v11 = MEMORY[0x24BDAC7A8](v93);
  v91 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v90 = (char *)&v69 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v77 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v76 = (char *)&v69 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v84 = (char *)&v69 - v20;
  v22 = *a1;
  v21 = a1[1];
  v23 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    v24 = sub_24195B490(v22, v21);
    if ((v25 & 1) != 0)
    {
      v70 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 16 * v24);
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    result = swift_bridgeObjectRelease();
  }
  v70 = 0;
LABEL_6:
  v26 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    v27 = sub_24195B490(v22, v21);
    if ((v28 & 1) != 0)
    {
      v29 = *(_QWORD *)(v26 + 56) + 16 * v27;
      v30 = *(_QWORD *)v29;
      v82 = *(_DWORD *)(v29 + 8);
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      if (v30)
      {
        result = swift_bridgeObjectRelease();
        v75 = 0;
        goto LABEL_12;
      }
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
  }
  v82 = 0;
  v75 = 1;
LABEL_12:
  v31 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    v32 = sub_24195B490(v22, v21);
    if ((v33 & 1) != 0)
    {
      v34 = *(_QWORD *)(v31 + 56) + 16 * v32;
      v35 = *(_QWORD *)v34;
      v81 = *(_DWORD *)(v34 + 12);
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      if (v35)
      {
        result = swift_bridgeObjectRelease();
        v74 = 0;
        goto LABEL_18;
      }
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
  }
  v81 = 0;
  v74 = 1;
LABEL_18:
  v36 = v84;
  if (v70)
  {
    v37 = *(_QWORD *)(v70 + 16);
    v69 = v3;
    if (v37)
    {
      v38 = v83;
      v39 = (char *)(v70 + ((*((unsigned __int8 *)v38 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v38 + 80)));
      v71 = v83[9];
      v40 = (void (*)(uint64_t, char *, uint64_t))v83[2];
      v72 = v9;
      v89 = v40;
      while (1)
      {
        v41 = v93;
        v40((uint64_t)v36, v39, v93);
        v42 = (void (*)(void))v38[7];
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v42)(v36, 0, 1, v41);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v38[6])(v36, 1, v41) == 1)
          break;
        v87 = v39;
        v88 = v37;
        v43 = v90;
        v44 = v36;
        v45 = (void (*)(char *, char *, uint64_t))v40;
        v46 = v93;
        ((void (*)(char *, char *, uint64_t))v38[4])(v90, v44, v93);
        v47 = v91;
        sub_2419A9D10();
        type metadata accessor for DeviceBatchDataBuilderImpl(0);
        v48 = swift_allocObject();
        v49 = v48 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42)(v48 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId, 1, 1, v46);
        v85 = v48 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_originalClockId;
        v42();
        v50 = v48 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_daysWithTwoValidAssistantTurnsPerWeek;
        v86 = (_DWORD *)(v48
                       + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_daysWithTwoValidAssistantTurnsPerWeek);
        *(_DWORD *)v50 = 0;
        *(_BYTE *)(v50 + 4) = 1;
        v51 = v48
            + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_daysWithTwoAssistantSpeechRequestsPerWeek;
        *(_DWORD *)v51 = 0;
        *(_BYTE *)(v51 + 4) = 1;
        v52 = (uint64_t)v76;
        v45(v76, v47, v46);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v42)(v52, 0, 1, v46);
        v53 = v77;
        sub_2419416DC(v52, v77, &qword_257162D48);
        swift_beginAccess();
        sub_24195BF8C(v53, v49, &qword_257162D48);
        swift_endAccess();
        sub_241941720(v52, &qword_257162D48);
        v89(v52, v43, v46);
        v73 = v42;
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v42)(v52, 0, 1, v46);
        sub_2419416DC(v52, v53, &qword_257162D48);
        v54 = v85;
        swift_beginAccess();
        sub_24195BF8C(v53, v54, &qword_257162D48);
        swift_endAccess();
        sub_241941720(v52, &qword_257162D48);
        LODWORD(v47) = v81;
        LODWORD(v53) = v82;
        v55 = v86;
        *v86 = v82;
        LOBYTE(v46) = v74;
        LOBYTE(v52) = v75;
        *((_BYTE *)v55 + 4) = v75;
        *(_DWORD *)v51 = (_DWORD)v47;
        *(_BYTE *)(v51 + 4) = v46;
        v56 = v49;
        v57 = v92;
        sub_2419416DC(v56, v92, &qword_257162D48);
        v58 = v79;
        sub_2419416DC(v54, v57 + *(int *)(v79 + 20), &qword_257162D48);
        swift_setDeallocating();
        sub_241941720(v48 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId, &qword_257162D48);
        sub_241941720(v48 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_originalClockId, &qword_257162D48);
        swift_deallocClassInstance();
        v59 = v57 + *(int *)(v58 + 24);
        *(_DWORD *)v59 = v53;
        *(_BYTE *)(v59 + 4) = v52;
        v60 = v57 + *(int *)(v58 + 28);
        *(_DWORD *)v60 = (_DWORD)v47;
        *(_BYTE *)(v60 + 4) = v46;
        v61 = (uint64_t)v72;
        sub_241943C64(v57, (uint64_t)v72, type metadata accessor for DeviceBatchData);
        v62 = v80;
        v63 = *v80;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v62 = v63;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v63 = sub_241980504(0, *(_QWORD *)(v63 + 16) + 1, 1, v63, &qword_257165858, type metadata accessor for DeviceBatchData);
          *v80 = v63;
        }
        v66 = *(_QWORD *)(v63 + 16);
        v65 = *(_QWORD *)(v63 + 24);
        v38 = v83;
        v36 = v84;
        v40 = v89;
        if (v66 >= v65 >> 1)
        {
          v63 = sub_241980504(v65 > 1, v66 + 1, 1, v63, &qword_257165858, type metadata accessor for DeviceBatchData);
          *v80 = v63;
        }
        *(_QWORD *)(v63 + 16) = v66 + 1;
        sub_24195C340(v61, v63+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v66, type metadata accessor for DeviceBatchData);
        sub_241943CA8(v92, type metadata accessor for DeviceBatchData);
        v67 = (void (*)(char *, uint64_t))v38[1];
        v68 = v93;
        v67(v91, v93);
        v67(v90, v68);
        v39 = &v87[v71];
        v37 = v88 - 1;
        if (v88 == 1)
          goto LABEL_29;
      }
    }
    else
    {
      v73 = (void (*)(void))v83[7];
LABEL_29:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v73)(v36, 1, 1, v93);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24197FA4C(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22[2];

  v7 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain();
    sub_24197F324(v22, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11)
      return swift_release();
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
    {
      v18 = v13 + 1;
      if (v13 + 1 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 2;
      if (v13 + 2 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 3;
      if (v13 + 3 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
      {
LABEL_14:
        v13 = v18;
        goto LABEL_15;
      }
      v21 = v13 + 4;
      if (v13 + 4 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v21);
      v13 += 4;
      if (!v17)
        break;
    }
LABEL_15:
    v10 = (v17 - 1) & v17;
  }
  while (1)
  {
    v13 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v13 >= v11)
      return swift_release();
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v21;
    if (v17)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24197FC00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v3 = v2;
  v6 = sub_2419A9CE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - v11, a1, v6);
  v25 = sub_24198236C();
  v26 = a2;
  if ((sub_2419AA0AC() & 1) != 0)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v24 = *(id *)(v3 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlDateFormatter);
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v27 = 39;
      v28 = 0xE100000000000000;
      v16 = (void *)sub_2419A9CA4();
      v17 = objc_msgSend(v24, sel_stringFromDate_, v16);

      sub_2419AA0E8();
      sub_2419AA178();
      swift_bridgeObjectRelease();
      sub_2419AA178();
      v18 = v27;
      v19 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_2419803E4(0, v13[2] + 1, 1, v13);
      v21 = v13[2];
      v20 = v13[3];
      if (v21 >= v20 >> 1)
        v13 = sub_2419803E4((_QWORD *)(v20 > 1), v21 + 1, 1, v13);
      v13[2] = v21 + 1;
      v22 = &v13[2 * v21];
      v22[4] = v18;
      v22[5] = v19;
      sub_2419A9C80();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v10, v6);
    }
    while ((sub_2419AA0AC() & 1) == 0);
  }
  v27 = (uint64_t)v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257164A20);
  sub_2419823B4();
  v14 = sub_2419AA0A0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v14;
}

void sub_24197FE94(uint64_t a1, uint64_t a2, unint64_t a3)
{
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  uint64_t aBlock[6];

  if (a1 >= 1)
  {
    swift_bridgeObjectRetain_n();
    v6 = sub_2419AA028();
    v7 = sub_2419AA244();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      aBlock[0] = v9;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_24193F470(a2, a3, aBlock);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24193B000, v6, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v9, -1, -1);
      MEMORY[0x24269F7A0](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v10 = (void *)sub_2419AA0DC();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a2;
    v11[3] = a3;
    v11[4] = a1;
    aBlock[4] = (uint64_t)sub_24195C3E4;
    aBlock[5] = (uint64_t)v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241956C98;
    aBlock[3] = (uint64_t)&block_descriptor_3;
    v12 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v12);

  }
}

uint64_t SiriSegmentCohortCalculator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL, &qword_257162CF0);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_calendar;
  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  return v0;
}

uint64_t SiriSegmentCohortCalculator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL, &qword_257162CF0);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_calendar;
  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_24198025C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24193D468;
  return sub_24197C3FC(a1);
}

_QWORD *sub_2419802B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257162F00);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 272);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[34 * v8 + 4])
          memmove(v12, a4 + 4, 272 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2419819D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2419803D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241980504(a1, a2, a3, a4, &qword_257165870, type metadata accessor for CombinedRequestNoAssetData);
}

_QWORD *sub_2419803E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257165828);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241981BBC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2419804F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241980504(a1, a2, a3, a4, &qword_257165850, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_241980504(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_2419AA40C();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_241982218(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_241980710(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241980504(a1, a2, a3, a4, &qword_257165868, type metadata accessor for DeviceExperimentMetrics);
}

uint64_t sub_241980724(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241980504(a1, a2, a3, a4, &qword_257165838, type metadata accessor for DeviceUsageMetrics);
}

uint64_t sub_241980738(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241980504(a1, a2, a3, a4, &qword_257165810, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

_QWORD *sub_24198074C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257165830);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 192);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[24 * v8 + 4])
          memmove(v12, a4 + 4, 192 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_241981AC8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241980870(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241980504(a1, a2, a3, a4, &qword_257165818, (uint64_t (*)(_QWORD))type metadata accessor for AssetPenetrationData);
}

uint64_t sub_241980884(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241980504(a1, a2, a3, a4, &qword_257165820, type metadata accessor for CombinedBootToAssetData);
}

void (*sub_241980898(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v5 = type metadata accessor for EventMetadata(0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[8] = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_241943C64(a2, (uint64_t)v6, type metadata accessor for EventMetadata);
  v4[9] = sub_241980D58(v4);
  v4[10] = sub_241980A90(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_241980950;
}

void sub_241980950(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  sub_241943CA8((uint64_t)v3, type metadata accessor for EventMetadata);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_2419809B0(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_241980D84(v6);
  v6[10] = sub_241980BE8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_241980A40;
}

void sub_241980A40(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_241980A90(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_24195B694(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_241980BAC;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_241980F44();
      goto LABEL_7;
    }
    sub_241994D88(v14, a3 & 1);
    v18 = sub_24195B694(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  type metadata accessor for EventMetadata(0);
  result = (void (*)(uint64_t **))sub_2419AA58C();
  __break(1u);
  return result;
}

void sub_241980BAC(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_241980DA4(*a1, *((_BYTE *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_241980BE8(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x38uLL);
  *a1 = v10;
  v10[3] = a3;
  v10[4] = v5;
  v10[2] = a2;
  v11 = *v5;
  v13 = sub_24195B490(a2, a3);
  *((_BYTE *)v10 + 48) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[5] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(*(_QWORD *)(*v5 + 56) + 16 * v13);
        v20 = *v19;
        v21 = v19[1];
LABEL_12:
        *v10 = v20;
        v10[1] = v21;
        return sub_241980D1C;
      }
LABEL_11:
      v20 = 0;
      v21 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_24198117C();
      goto LABEL_7;
    }
    sub_241995088(v16, a4 & 1);
    v22 = sub_24195B490(a2, a3);
    if ((v17 & 1) == (v23 & 1))
    {
      v13 = v22;
      v10[5] = v22;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_2419AA58C();
  __break(1u);
  return result;
}

void sub_241980D1C(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_241980E94(*a1, *((_BYTE *)*a1 + 48), (uint64_t *)(*a1)[4], (*a1)[5], (*a1)[2], (*a1)[3]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_241980D58(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_241980D78;
}

uint64_t sub_241980D78(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_241980D84(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_241982400;
}

uint64_t sub_241980DA4(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v10 = type metadata accessor for EventMetadata(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = (char *)&v17 - v12;
  v14 = *a1;
  if (v14)
  {
    v15 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v15[7] + 8 * a4) = v14;
    }
    else
    {
      sub_241943C64(a5, (uint64_t)&v17 - v12, type metadata accessor for EventMetadata);
      sub_24198179C(a4, (uint64_t)v13, v14, v15);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_24198133C(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_241980E94(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v8 = *a1;
  if (*a1)
  {
    v9 = a1[1];
    if ((a2 & 1) != 0)
    {
      v10 = (uint64_t *)(*(_QWORD *)(*a3 + 56) + 16 * a4);
      *v10 = v8;
      v10[1] = v9;
    }
    else
    {
      sub_241981834(a4, a5, a6, v8, v9, (_QWORD *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_2419815C8(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

void *sub_241980F44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for EventMetadata(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257165860);
  v5 = *v0;
  v6 = sub_2419AA430();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_241943C64(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for EventMetadata);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_24195C340((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for EventMetadata);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24198117C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257165840);
  v2 = *v0;
  v3 = sub_2419AA430();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v23 = v20[1];
    *v22 = v19;
    v22[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_24198133C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v30 = type metadata accessor for EventMetadata(0);
  v4 = *(_QWORD *)(v30 - 8);
  result = MEMORY[0x24BDAC7A8](v30);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_2419AA34C();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v31 = (result + 1) & v11;
      v12 = *(_QWORD *)(v4 + 72);
      v13 = v11;
      do
      {
        v14 = v12;
        v15 = v12 * v10;
        v16 = v13;
        sub_241943C64(*(_QWORD *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for EventMetadata);
        sub_2419AA5EC();
        EventMetadata.hash(into:)();
        v17 = sub_2419AA61C();
        result = sub_241943CA8((uint64_t)v7, type metadata accessor for EventMetadata);
        v13 = v16;
        v18 = v17 & v16;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 < v31)
          {
            v12 = v14;
          }
          else
          {
            v12 = v14;
            if (a1 >= (uint64_t)v18)
              goto LABEL_12;
          }
        }
        else
        {
          v12 = v14;
          if (v18 >= v31 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v12 * a1;
            if (v12 * a1 < v15 || result >= v19 + v15 + v12)
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              v13 = v16;
            }
            else if (v12 * a1 != v15)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_QWORD *)(v20 + 8 * a1);
            v22 = (_QWORD *)(v20 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v10;
            }
          }
        }
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2419815C8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2419AA34C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2419AA5EC();
        swift_bridgeObjectRetain();
        sub_2419AA148();
        v9 = sub_2419AA61C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24198179C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for EventMetadata(0);
  result = sub_24195C340(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for EventMetadata);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_241981834(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_24198188C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_24195B490(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        result = swift_bridgeObjectRelease();
        *v21 = a1;
        v21[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_24198117C();
      goto LABEL_7;
    }
    sub_241995088(v17, a5 & 1);
    v23 = sub_24195B490(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_241981834(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_2419AA58C();
  __break(1u);
  return result;
}

uint64_t sub_2419819D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 272 * a1 + 32;
    v6 = a3 + 272 * v4;
    if (v5 >= v6 || v5 + 272 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_241981AC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 192 * a1 + 32;
    v6 = a3 + 192 * v4;
    if (v5 >= v6 || v5 + 192 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_241981BBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_241981CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;

  sub_2419A9D58();
  v9 = v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_logger;
  v10 = sub_2419AA040();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  sub_2419416DC(a2, v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL, &qword_257162CF0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_bookmarkService) = a3;
  v12 = v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_oddId;
  v13 = sub_2419A9D1C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  v15 = objc_allocWithZone(MEMORY[0x24BDD1500]);
  swift_retain();
  v16 = objc_msgSend(v15, sel_init);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlDateFormatter) = v16;
  v17 = (void *)sub_2419AA0DC();
  objc_msgSend(v16, sel_setDateFormat_, v17);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  sub_241941720(a2, &qword_257162CF0);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v4;
}

unint64_t sub_241981E30()
{
  unint64_t result;

  result = qword_2571656F0;
  if (!qword_2571656F0)
  {
    result = MEMORY[0x24269F6EC](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2571656F0);
  }
  return result;
}

uint64_t destroy for SiriSegmentCohortResults()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SiriSegmentCohortResults(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SiriSegmentCohortResults(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SiriSegmentCohortResults(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriSegmentCohortResults(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriSegmentCohortResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSegmentCohortResults()
{
  return &type metadata for SiriSegmentCohortResults;
}

uint64_t sub_241982078()
{
  return type metadata accessor for SiriSegmentCohortCalculator();
}

uint64_t type metadata accessor for SiriSegmentCohortCalculator()
{
  uint64_t result;

  result = qword_257165740;
  if (!qword_257165740)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2419820BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2419AA040();
  if (v0 <= 0x3F)
  {
    sub_2419415E0();
    if (v1 <= 0x3F)
    {
      sub_2419A9D1C();
      if (v2 <= 0x3F)
      {
        sub_2419A9D64();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for SiriSegmentCohortCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriSegmentCohortCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SiriSegmentCohortCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 136) + *(_QWORD *)(*(_QWORD *)v2 + 136));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t sub_241982218(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_241982330()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_24198236C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257164218[0];
  if (!qword_257164218[0])
  {
    v1 = sub_2419A9CE0();
    result = MEMORY[0x24269F6EC](MEMORY[0x24BDCE948], v1);
    atomic_store(result, qword_257164218);
  }
  return result;
}

unint64_t sub_2419823B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257164A28;
  if (!qword_257164A28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257164A20);
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_257164A28);
  }
  return result;
}

uint64_t sub_241982404@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for SiriRequestWithNoAssetsCalculator(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_2419AA0DC();
  v5 = (void *)sub_2419AA0DC();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2419A9C08();

    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  else
  {
    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t RequestWithNoAssetMetrics.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  RequestWithNoAssetMetrics.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t RequestWithNoAssetMetrics.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(uint64_t, char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v66 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  MEMORY[0x24BDAC7A8](v3);
  v59 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2419A9D64();
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2419A9CE0();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2419A9D1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2419AA040();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v62 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v52 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19((char *)&v52 - v17, a2, v13);
  type metadata accessor for RequestWithNoAssetDataProvider();
  v20 = swift_allocObject();
  v67 = v14;
  v60 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v61 = v18;
  v60(v20 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetDataProvider_logger, v18, v13);
  v21 = v71;
  *(_QWORD *)(v71 + 16) = v20;
  v22 = v21 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_logger;
  v23 = v21;
  v19((char *)(v21 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_logger), a2, v13);
  sub_2419A9D10();
  v24 = v23 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_oddId;
  v64 = v10;
  v65 = v9;
  v25 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v58 = v12;
  v25(v24, v12, v9);
  v26 = sub_2419A9F8C();
  swift_allocObject();
  v66 = v66;
  v27 = sub_2419A9F80();
  v69 = v26;
  v70 = MEMORY[0x24BE2BBA0];
  v28 = a2;
  v68 = v27;
  v29 = (void (*)(uint64_t, uint64_t, uint64_t))v19;
  v19(v62, a2, v13);
  sub_2419A9E0C();
  swift_allocObject();
  v30 = v63;
  v31 = sub_2419A9DF4();
  if (v30)
  {

    v32 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v32(a2, v13);
    v33 = v71;
    swift_release();
    v32(v22, v13);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v24, v65);
    type metadata accessor for RequestWithNoAssetMetrics();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v34 = (char *)v31;
    v35 = v52;
    sub_2419A9F14();
    v36 = v55;
    sub_2419A9D58();
    v63 = 0;
    sub_2419A9E00();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v57);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v54);
    v37 = (uint64_t)v61;
    v38 = v29;
    v29((uint64_t)v61, v28, v13);
    v39 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v58, v24, v65);
    v40 = (uint64_t)v34;
    v62 = v34;
    swift_retain();
    v41 = v59;
    sub_241982404(v59);
    type metadata accessor for SiriRequestWithNoAssetsCalculator(0);
    swift_allocObject();
    v42 = SiriRequestWithNoAssetsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(v37, v41, v40, v39);
    v33 = v71;
    *(_QWORD *)(v71 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_calculator) = v42;
    v38(v37, v28, v13);
    v43 = type metadata accessor for SELFReportingService();
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 24) = objc_msgSend((id)objc_opt_self(), sel_sharedLoggerWithPersistenceConfiguration_, 1);
    v45 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
    v46 = objc_msgSend(v45, sel_defaultMessageStream);

    *(_QWORD *)(v44 + 16) = v46;
    type metadata accessor for RequestWithNoAssetSELFReporter();
    v47 = swift_allocObject();
    v48 = (uint64_t *)(v47 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);
    v48[3] = v43;
    v48[4] = (uint64_t)&protocol witness table for SELFReportingService;
    *v48 = v44;
    v60(v47 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger, (char *)v37, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571630D0);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_2419AB250;
    *(_QWORD *)(v49 + 32) = v47;
    v68 = v49;
    sub_2419AA1C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257165890);
    swift_allocObject();
    swift_retain();
    v68 = sub_2419A9DC4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257165898);
    swift_allocObject();
    v50 = sub_2419A9DDC();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v28, v13);
    *(_QWORD *)(v33 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_reporter) = v50;
  }
  return v33;
}

uint64_t type metadata accessor for RequestWithNoAssetMetrics()
{
  uint64_t result;

  result = qword_257165918;
  if (!qword_257165918)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241982B90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_241982BA8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: RequestWithNoAssetDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241982C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_241982C84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 32) = v1;
  v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE2B748] + MEMORY[0x24BE2B748]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_241946A8C;
  return v4(v0 + 16);
}

uint64_t sub_241982D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_241982D20()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;

  v1 = sub_2419AA028();
  v2 = sub_2419AA250();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Doing work", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_241946B78;
  return sub_24193DBA8(*(_QWORD *)(v0 + 16));
}

uint64_t RequestWithNoAssetMetrics.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  return v0;
}

uint64_t RequestWithNoAssetMetrics.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_241982F34()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_241982F50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24193D468;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_241982FB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_241982FE0()
{
  return sub_24198304C(&qword_2571658C0, (uint64_t)&protocol conformance descriptor for RequestWithNoAssetMetrics);
}

uint64_t sub_241983004()
{
  return sub_24198304C(&qword_2571658C8, (uint64_t)&protocol conformance descriptor for RequestWithNoAssetMetrics);
}

uint64_t sub_241983028()
{
  return sub_24198304C(qword_2571658D0, (uint64_t)&protocol conformance descriptor for RequestWithNoAssetMetrics);
}

uint64_t sub_24198304C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RequestWithNoAssetMetrics();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24198308C()
{
  return type metadata accessor for RequestWithNoAssetMetrics();
}

uint64_t method lookup function for RequestWithNoAssetMetrics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RequestWithNoAssetMetrics.__allocating_init(defaults:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RequestWithNoAssetMetrics.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of RequestWithNoAssetMetrics.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of RequestWithNoAssetMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

_QWORD *sub_2419831F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void (*v7)(_BYTE *, uint64_t, uint64_t);
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE v13[272];
  _BYTE v14[272];
  _BYTE v15[280];

  v3 = sub_2419AA040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((sub_2419A9EFC() & 1) == 0)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v7 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16);
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v7(v6, a2, v3);
  while (1)
  {
    swift_retain();
    sub_241983A44((uint64_t)v6, (uint64_t)v13);
    sub_241986B18((uint64_t)v13, (uint64_t)v14);
    sub_241986B18((uint64_t)v14, (uint64_t)v15);
    if (sub_24196C548((uint64_t)v15) != 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_2419802B0(0, v8[2] + 1, 1, v8);
      v10 = v8[2];
      v9 = v8[3];
      if (v10 >= v9 >> 1)
        v8 = sub_2419802B0((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
      v8[2] = v10 + 1;
      memcpy(&v8[34 * v10 + 4], v15, 0x110uLL);
    }
    if ((sub_2419A9EFC() & 1) == 0)
      break;
    v7(v6, a2, v3);
  }
  return v8;
}

uint64_t sub_24198336C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2419833A8 + 4 * byte_2419AE720[a1]))(0xD000000000000015, 0x80000002419B01C0);
}

uint64_t sub_2419833A8()
{
  return 0x746144746E657665;
}

unint64_t sub_2419833C4()
{
  return 0xD000000000000013;
}

uint64_t sub_24198357C()
{
  return 0x526572756C696166;
}

uint64_t sub_2419835A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2419835DC + 4 * byte_2419AE733[a1]))(0xD000000000000015, 0x80000002419B01C0);
}

uint64_t sub_2419835DC()
{
  return 0x746144746E657665;
}

unint64_t sub_2419835F8()
{
  return 0xD000000000000013;
}

uint64_t sub_2419837B0()
{
  return 0x526572756C696166;
}

uint64_t sub_2419837D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_24198336C(*a1);
  v5 = v4;
  if (v3 == sub_24198336C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_2419AA574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24198385C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2419AA5EC();
  sub_24198336C(v1);
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_2419838BC()
{
  unsigned __int8 *v0;

  sub_24198336C(*v0);
  sub_2419AA148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2419838FC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2419AA5EC();
  sub_24198336C(v1);
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_241983958@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241986AC8();
  *a1 = result;
  return result;
}

uint64_t sub_241983984@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_24198336C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2419839AC()
{
  unsigned __int8 *v0;

  return sub_2419835A0(*v0);
}

uint64_t sub_2419839B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241986AC8();
  *a1 = result;
  return result;
}

void sub_2419839D8(_BYTE *a1@<X8>)
{
  *a1 = 19;
}

void sub_2419839E4(_QWORD *a1@<X8>)
{
  *a1 = &unk_2511C3F30;
}

uint64_t sub_2419839F4()
{
  sub_2419852C0();
  return sub_2419AA658();
}

uint64_t sub_241983A1C()
{
  sub_2419852C0();
  return sub_2419AA664();
}

uint64_t sub_241983A44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  int v81;
  int v82;
  char v83;
  unint64_t v84;
  char v85;
  int v86;
  int v87;
  char v88;
  unint64_t v89;
  char v90;
  int v91;
  int v92;
  char v93;
  unint64_t v94;
  char v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char v112;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  int v138;
  char v139;
  int v140;
  char v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  char v174;
  int v175;
  char v176;
  int v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;

  v4 = sub_2419A9EF0();
  if (v4)
  {
    v5 = v4;
    v144 = a2;
    sub_24196C220(v4, v4);
    *(_QWORD *)&v150 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164A20);
    sub_24196C594((unint64_t *)&qword_257164A28, &qword_257164A20, MEMORY[0x24BEE12B0]);
    v7 = sub_2419AA0A0();
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v10 = sub_2419AA028();
    v11 = sub_2419AA238();
    v145 = a1;
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      *(_QWORD *)&v150 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v148 = sub_24193F470(v7, v9, (uint64_t *)&v150);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24193B000, v10, v11, "Request no asset query result yielded: \n{%s}", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v13, -1, -1);
      MEMORY[0x24269F7A0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(_QWORD *)&v148 = 0x746144746E657665;
    *((_QWORD *)&v148 + 1) = 0xE900000000000065;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v19 = sub_24195B4F4((uint64_t)&v150), (v20 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v19, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v21 = swift_dynamicCast();
      if (v21)
        v22 = v146;
      else
        v22 = 0;
      if (v21)
        v23 = v147;
      else
        v23 = 0;
      v133 = v23;
      v134 = v22;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v133 = 0;
      v134 = 0;
    }
    *(_QWORD *)&v148 = 0xD000000000000015;
    *((_QWORD *)&v148 + 1) = 0x80000002419B01C0;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v24 = sub_24195B4F4((uint64_t)&v150), (v25 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v24, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v26 = swift_dynamicCast();
      v27 = v146;
      if (!v26)
        v27 = 0;
      v132 = v27;
      v28 = v26 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v132 = 0;
      v28 = 1;
    }
    v131 = v28;
    *(_QWORD *)&v148 = 0xD000000000000013;
    *((_QWORD *)&v148 + 1) = 0x80000002419B0190;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v29 = sub_24195B4F4((uint64_t)&v150), (v30 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v29, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v31 = swift_dynamicCast();
      if (v31)
        v32 = v146;
      else
        v32 = 0;
      if (v31)
        v33 = v147;
      else
        v33 = 0;
      v129 = v33;
      v130 = v32;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v129 = 0;
      v130 = 0;
    }
    *(_QWORD *)&v148 = 0x75426D6574737973;
    *((_QWORD *)&v148 + 1) = 0xEB00000000646C69;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v34 = sub_24195B4F4((uint64_t)&v150), (v35 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v34, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v36 = swift_dynamicCast();
      if (v36)
        v37 = v146;
      else
        v37 = 0;
      if (v36)
        v38 = v147;
      else
        v38 = 0;
      v127 = v38;
      v128 = v37;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v127 = 0;
      v128 = 0;
    }
    *(_QWORD *)&v148 = 0x7954656369766564;
    *((_QWORD *)&v148 + 1) = 0xEA00000000006570;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v39 = sub_24195B4F4((uint64_t)&v150), (v40 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v39, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v41 = swift_dynamicCast();
      if (v41)
        v42 = v146;
      else
        v42 = 0;
      if (v41)
        v43 = v147;
      else
        v43 = 0;
      v125 = v43;
      v126 = v42;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v125 = 0;
      v126 = 0;
    }
    *(_QWORD *)&v148 = 0x436D6172676F7270;
    *((_QWORD *)&v148 + 1) = 0xEB0000000065646FLL;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v44 = sub_24195B4F4((uint64_t)&v150), (v45 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v44, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v46 = swift_dynamicCast();
      if (v46)
        v47 = v146;
      else
        v47 = 0;
      if (v46)
        v48 = v147;
      else
        v48 = 0;
      v123 = v48;
      v124 = v47;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v123 = 0;
      v124 = 0;
    }
    *(_QWORD *)&v148 = 0x75706E4969726973;
    *((_QWORD *)&v148 + 1) = 0xEF656C61636F4C74;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v49 = sub_24195B4F4((uint64_t)&v150), (v50 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v49, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v51 = swift_dynamicCast();
      if (v51)
        v52 = v146;
      else
        v52 = 0;
      if (v51)
        v53 = v147;
      else
        v53 = 0;
      v121 = v53;
      v122 = v52;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v121 = 0;
      v122 = 0;
    }
    *(_QWORD *)&v148 = 0xD000000000000015;
    *((_QWORD *)&v148 + 1) = 0x80000002419B00E0;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v54 = sub_24195B4F4((uint64_t)&v150), (v55 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v54, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v56 = swift_dynamicCast();
      if (v56)
        v57 = v146;
      else
        v57 = 0;
      if (v56)
        v58 = v147;
      else
        v58 = 0;
      v119 = v58;
      v120 = v57;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v119 = 0;
      v120 = 0;
    }
    *(_QWORD *)&v148 = 0x5474736575716572;
    *((_QWORD *)&v148 + 1) = 0xEB00000000657079;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v59 = sub_24195B4F4((uint64_t)&v150), (v60 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v59, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v61 = swift_dynamicCast();
      if (v61)
        v62 = v146;
      else
        v62 = 0;
      if (v61)
        v63 = v147;
      else
        v63 = 0;
      v118 = v63;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v62 = 0;
      v118 = 0;
    }
    strcpy((char *)&v148, "componentName");
    HIWORD(v148) = -4864;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v64 = sub_24195B4F4((uint64_t)&v150), (v65 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v64, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v66 = swift_dynamicCast();
      if (v66)
        v67 = v146;
      else
        v67 = 0;
      if (v66)
        v68 = v147;
      else
        v68 = 0;
      v116 = v68;
      v117 = v67;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v116 = 0;
      v117 = 0;
    }
    *(_QWORD *)&v148 = 0x65646F4D6C6ELL;
    *((_QWORD *)&v148 + 1) = 0xE600000000000000;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v69 = sub_24195B4F4((uint64_t)&v150), (v70 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v69, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v71 = swift_dynamicCast();
      if (v71)
        v72 = v146;
      else
        v72 = 0;
      if (v71)
        v73 = v147;
      else
        v73 = 0;
      v115 = v73;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v72 = 0;
      v115 = 0;
    }
    *(_QWORD *)&v148 = 0x65646F4D727361;
    *((_QWORD *)&v148 + 1) = 0xE700000000000000;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v74 = sub_24195B4F4((uint64_t)&v150), (v75 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v74, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v76 = swift_dynamicCast();
      v77 = v146;
      if (!v76)
        v77 = 0;
      v114 = v77;
      if (v76)
        v78 = v147;
      else
        v78 = 0;
      v143 = v78;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v114 = 0;
      v143 = 0;
    }
    *(_QWORD *)&v148 = 0x65757165526D756ELL;
    *((_QWORD *)&v148 + 1) = 0xEB00000000737473;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v79 = sub_24195B4F4((uint64_t)&v150), (v80 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v79, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v81 = swift_dynamicCast();
      v82 = v146;
      if (!v81)
        v82 = 0;
      v142 = v82;
      v83 = v81 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v142 = 0;
      v83 = 1;
    }
    v141 = v83;
    strcpy((char *)&v148, "numRNARequests");
    HIBYTE(v148) = -18;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v84 = sub_24195B4F4((uint64_t)&v150), (v85 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v84, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v86 = swift_dynamicCast();
      v87 = v146;
      if (!v86)
        v87 = 0;
      v140 = v87;
      v88 = v86 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v140 = 0;
      v88 = 1;
    }
    v139 = v88;
    *(_QWORD *)&v148 = 0xD000000000000016;
    *((_QWORD *)&v148 + 1) = 0x80000002419B0220;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v89 = sub_24195B4F4((uint64_t)&v150), (v90 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v89, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v91 = swift_dynamicCast();
      v92 = v146;
      if (!v91)
        v92 = 0;
      v138 = v92;
      v93 = v91 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v138 = 0;
      v93 = 1;
    }
    v137 = v93;
    strcpy((char *)&v148, "assetSetName");
    BYTE13(v148) = 0;
    HIWORD(v148) = -5120;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v94 = sub_24195B4F4((uint64_t)&v150), (v95 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v94, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v96 = swift_dynamicCast();
      if (v96)
        v97 = v146;
      else
        v97 = 0;
      if (v96)
        v98 = v147;
      else
        v98 = 0;
      v135 = v98;
      v136 = v97;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v135 = 0;
      v136 = 0;
    }
    *(_QWORD *)&v148 = 0xD000000000000013;
    *((_QWORD *)&v148 + 1) = 0x80000002419B00C0;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v99 = sub_24195B4F4((uint64_t)&v150), (v100 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v99, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v101 = swift_dynamicCast();
      if (v101)
        v102 = v146;
      else
        v102 = 0;
      if (v101)
        v103 = v147;
      else
        v103 = 0;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v102 = 0;
      v103 = 0;
    }
    strcpy((char *)&v148, "failureReasons");
    HIBYTE(v148) = -18;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v104 = sub_24195B4F4((uint64_t)&v150), (v105 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v104, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      if (swift_dynamicCast())
        v106 = v146;
      else
        v106 = 0;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v106 = 0;
    }
    *(_QWORD *)&v148 = 0xD00000000000002CLL;
    *((_QWORD *)&v148 + 1) = 0x80000002419B0120;
    sub_2419AA388();
    if (*(_QWORD *)(v5 + 16) && (v107 = sub_24195B4F4((uint64_t)&v150), (v108 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v5 + 56) + 32 * v107, (uint64_t)&v148);
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
    v109 = sub_2419AA040();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(v145, v109);
    sub_24195BF58((uint64_t)&v150);
    if (*((_QWORD *)&v149 + 1))
    {
      v110 = swift_dynamicCast();
      v111 = v146;
      if (!v110)
        v111 = 0;
      v112 = v110 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)&v148, &qword_257163EA0);
      v111 = 0;
      v112 = 1;
    }
    *(_QWORD *)&v150 = v134;
    *((_QWORD *)&v150 + 1) = v133;
    v151 = v132;
    v152 = v131;
    v153 = v130;
    v154 = v129;
    v155 = v128;
    v156 = v127;
    v157 = v126;
    v158 = v125;
    v159 = v124;
    v160 = v123;
    v161 = v122;
    v162 = v121;
    v163 = v120;
    v164 = v119;
    v165 = v62;
    v166 = v118;
    v167 = v117;
    v168 = v116;
    v169 = v114;
    v170 = v143;
    v171 = v72;
    v172 = v115;
    v173 = v142;
    v174 = v141;
    v175 = v140;
    v176 = v139;
    v177 = v138;
    v178 = v137;
    v179 = v136;
    v180 = v135;
    v181 = v111;
    v182 = v112;
    v183 = v102;
    v184 = v103;
    v185 = v106;
    nullsub_1(&v150);
    v18 = v144;
  }
  else
  {
    v14 = sub_2419AA028();
    v15 = sub_2419AA250();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_24193B000, v14, v15, "failed to get row", v16, 2u);
      MEMORY[0x24269F7A0](v16, -1, -1);
    }

    swift_release();
    v17 = sub_2419AA040();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
    sub_241986B60(&v150);
    v18 = a2;
  }
  return sub_241986B18((uint64_t)&v150, v18);
}

uint64_t RequestWithNoAssetData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char v54;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571659F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v53 = *(unsigned __int8 *)(v1 + 24);
  v49 = *(_QWORD *)(v1 + 32);
  v50 = v7;
  v8 = *(_QWORD *)(v1 + 40);
  v47 = *(_QWORD *)(v1 + 48);
  v48 = v8;
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v45 = *(_QWORD *)(v1 + 72);
  v46 = v9;
  v11 = *(_QWORD *)(v1 + 80);
  v43 = *(_QWORD *)(v1 + 88);
  v44 = v10;
  v12 = *(_QWORD *)(v1 + 96);
  v41 = *(_QWORD *)(v1 + 104);
  v42 = v11;
  v13 = *(_QWORD *)(v1 + 112);
  v39 = *(_QWORD *)(v1 + 120);
  v40 = v12;
  v14 = *(_QWORD *)(v1 + 128);
  v37 = *(_QWORD *)(v1 + 136);
  v38 = v13;
  v34 = *(_QWORD *)(v1 + 144);
  v35 = *(_QWORD *)(v1 + 152);
  v36 = v14;
  v30 = *(_QWORD *)(v1 + 160);
  v31 = *(_QWORD *)(v1 + 168);
  v15 = *(_QWORD *)(v1 + 184);
  v32 = *(_QWORD *)(v1 + 176);
  v33 = v15;
  v29 = *(unsigned int *)(v1 + 192);
  v28 = *(unsigned __int8 *)(v1 + 196);
  v27 = *(unsigned int *)(v1 + 200);
  v26 = *(unsigned __int8 *)(v1 + 204);
  v25 = *(unsigned int *)(v1 + 208);
  v24 = *(unsigned __int8 *)(v1 + 212);
  v22 = *(_QWORD *)(v1 + 216);
  v23 = *(_QWORD *)(v1 + 224);
  v20 = *(_QWORD *)(v1 + 232);
  v21 = *(unsigned __int8 *)(v1 + 240);
  v18[1] = *(_QWORD *)(v1 + 248);
  v18[2] = *(_QWORD *)(v1 + 256);
  v19 = *(_QWORD *)(v1 + 264);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2419852C0();
  sub_2419AA64C();
  LOBYTE(v52) = 0;
  v16 = v51;
  sub_2419AA4F0();
  if (!v16)
  {
    LOBYTE(v52) = 1;
    sub_2419AA4FC();
    LOBYTE(v52) = 2;
    sub_2419AA4F0();
    v51 = v4;
    LOBYTE(v52) = 3;
    sub_2419AA4F0();
    LOBYTE(v52) = 4;
    sub_2419AA4F0();
    LOBYTE(v52) = 5;
    sub_2419AA4F0();
    LOBYTE(v52) = 6;
    sub_2419AA4F0();
    LOBYTE(v52) = 7;
    sub_2419AA4F0();
    LOBYTE(v52) = 8;
    sub_2419AA4F0();
    LOBYTE(v52) = 9;
    sub_2419AA4F0();
    LOBYTE(v52) = 10;
    sub_2419AA4F0();
    LOBYTE(v52) = 11;
    sub_2419AA4F0();
    LOBYTE(v52) = 12;
    v54 = v28;
    sub_2419AA514();
    LOBYTE(v52) = 13;
    v54 = v26;
    sub_2419AA514();
    LOBYTE(v52) = 14;
    v54 = v24;
    sub_2419AA514();
    LOBYTE(v52) = 15;
    sub_2419AA4F0();
    LOBYTE(v52) = 16;
    sub_2419AA520();
    LOBYTE(v52) = 17;
    sub_2419AA4F0();
    v52 = v19;
    v54 = 18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164A20);
    sub_241986140(&qword_257165A00, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2419AA508();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2419852C0()
{
  unint64_t result;

  result = qword_2571659F8;
  if (!qword_2571659F8)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AE90C, &type metadata for RequestWithNoAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571659F8);
  }
  return result;
}

uint64_t RequestWithNoAssetData.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[34];
  _QWORD v92[3];
  char v93;
  _BYTE v94[7];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  char v116;
  __int16 v117;
  char v118;
  int v119;
  char v120;
  __int16 v121;
  char v122;
  int v123;
  char v124;
  __int16 v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  _BYTE v131[7];
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  _BYTE v137[7];
  char v138;
  __int16 v139;
  char v140;
  char v141;
  __int16 v142;
  char v143;
  char v144;
  __int16 v145;
  char v146;
  char v147;
  _BYTE v148[7];
  char v149;
  _QWORD *v150;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257165A08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v150 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2419852C0();
  sub_2419AA640();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v150);
  v82 = a2;
  LOBYTE(v92[0]) = 0;
  v11 = sub_2419AA46C();
  LOBYTE(v92[0]) = 1;
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = sub_2419AA484();
  v90 = v13;
  v15 = v14;
  v149 = v16 & 1;
  LOBYTE(v92[0]) = 2;
  LODWORD(v13) = v16;
  v80 = sub_2419AA46C();
  v81 = v15;
  LODWORD(v79) = v13;
  LOBYTE(v92[0]) = 3;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = sub_2419AA46C();
  v89 = v18;
  v78 = v19;
  LOBYTE(v92[0]) = 4;
  v21 = v20;
  swift_bridgeObjectRetain();
  v22 = sub_2419AA46C();
  v88 = v21;
  v77 = v22;
  LOBYTE(v92[0]) = 5;
  v24 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_2419AA46C();
  v87 = v24;
  v76 = v25;
  LOBYTE(v92[0]) = 6;
  v27 = v26;
  swift_bridgeObjectRetain();
  v28 = sub_2419AA46C();
  v86 = v27;
  v75 = v28;
  LOBYTE(v92[0]) = 7;
  v30 = v29;
  swift_bridgeObjectRetain();
  v31 = sub_2419AA46C();
  v85 = v30;
  v32 = v31;
  LOBYTE(v92[0]) = 8;
  v34 = v33;
  swift_bridgeObjectRetain();
  v74 = sub_2419AA46C();
  v84 = v34;
  v71 = v11;
  v72 = v32;
  LOBYTE(v92[0]) = 9;
  v83 = v35;
  swift_bridgeObjectRetain();
  v36 = sub_2419AA46C();
  v73 = v37;
  v38 = v36;
  LOBYTE(v92[0]) = 10;
  swift_bridgeObjectRetain();
  v70 = sub_2419AA46C();
  v40 = v39;
  LOBYTE(v92[0]) = 11;
  swift_bridgeObjectRetain();
  v68 = sub_2419AA46C();
  v69 = v41;
  LOBYTE(v92[0]) = 12;
  swift_bridgeObjectRetain();
  v67 = sub_2419AA49C();
  v65 = HIDWORD(v67) & 1;
  v147 = BYTE4(v67) & 1;
  LOBYTE(v92[0]) = 13;
  v66 = sub_2419AA49C();
  v62 = HIDWORD(v66) & 1;
  v144 = BYTE4(v66) & 1;
  LOBYTE(v92[0]) = 14;
  v64 = sub_2419AA49C();
  v59 = HIDWORD(v64) & 1;
  v141 = BYTE4(v64) & 1;
  LOBYTE(v92[0]) = 15;
  v60 = sub_2419AA46C();
  v61 = v42;
  v63 = 0;
  LOBYTE(v92[0]) = 16;
  swift_bridgeObjectRetain();
  v43 = v63;
  v57 = sub_2419AA4A8();
  v58 = v44;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v150);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v63)
      return swift_bridgeObjectRelease();
  }
  else
  {
    v138 = v58 & 1;
    LOBYTE(v92[0]) = 17;
    v56 = sub_2419AA46C();
    v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257164A20);
    v135 = 18;
    sub_241986140((unint64_t *)&qword_257164FB0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_2419AA490();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v91[3]) = v79 & 1;
    BYTE4(v91[24]) = v65;
    BYTE4(v91[25]) = v62;
    BYTE4(v91[26]) = v59;
    LOBYTE(v91[30]) = v58 & 1;
    v79 = v136;
    v47 = v90;
    v91[0] = v71;
    v91[1] = v90;
    v91[2] = v81;
    v91[4] = v80;
    v91[5] = v89;
    v91[6] = v78;
    v91[7] = v88;
    v91[8] = v77;
    v91[9] = v87;
    v91[10] = v76;
    v91[11] = v86;
    v91[12] = v75;
    v91[13] = v85;
    v48 = v73;
    v91[14] = v72;
    v91[15] = v84;
    v91[16] = v74;
    v91[17] = v83;
    v54 = v40;
    v55 = v38;
    v91[18] = v38;
    v91[19] = v73;
    v49 = v69;
    v91[20] = v68;
    v91[21] = v69;
    v91[22] = v70;
    v91[23] = v40;
    LODWORD(v91[24]) = v67;
    LODWORD(v91[25]) = v66;
    LODWORD(v91[26]) = v64;
    v50 = v61;
    v91[27] = v60;
    v91[28] = v61;
    v91[29] = v57;
    v91[31] = v56;
    v91[32] = v46;
    v91[33] = v136;
    sub_24194175C((uint64_t)v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51 = v85;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v82, v91, 0x110uLL);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v150);
    v92[0] = v71;
    v92[1] = v47;
    v92[2] = v81;
    v93 = v149;
    *(_DWORD *)v94 = *(_DWORD *)v148;
    *(_DWORD *)&v94[3] = *(_DWORD *)&v148[3];
    v95 = v80;
    v96 = v89;
    v97 = v78;
    v98 = v88;
    v99 = v77;
    v100 = v87;
    v101 = v76;
    v102 = v86;
    v103 = v75;
    v104 = v51;
    v105 = v72;
    v106 = v84;
    v107 = v74;
    v108 = v83;
    v109 = v55;
    v110 = v48;
    v111 = v68;
    v112 = v49;
    v113 = v70;
    v114 = v52;
    v115 = v67;
    v116 = v147;
    v117 = v145;
    v118 = v146;
    v119 = v66;
    v120 = v144;
    v121 = v142;
    v122 = v143;
    v123 = v64;
    v124 = v141;
    v126 = v140;
    v125 = v139;
    v127 = v60;
    v128 = v50;
    v129 = v57;
    v130 = v138;
    *(_DWORD *)&v131[3] = *(_DWORD *)&v137[3];
    *(_DWORD *)v131 = *(_DWORD *)v137;
    v132 = v56;
    v133 = v46;
    v134 = v79;
    return sub_24194AA98((uint64_t)v92);
  }
  return result;
}

uint64_t sub_241986140(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257164A20);
    v8 = a2;
    result = MEMORY[0x24269F6EC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2419861A0@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return RequestWithNoAssetData.init(from:)(a1, a2);
}

uint64_t sub_2419861B4(_QWORD *a1)
{
  return RequestWithNoAssetData.encode(to:)(a1);
}

uint64_t destroy for RequestWithNoAssetData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RequestWithNoAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  v13 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v13;
  v14 = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v14;
  v15 = *(_DWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 204) = *(_BYTE *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v15;
  v16 = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v16;
  v17 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v17;
  v18 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v18;
  v19 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v19;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RequestWithNoAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v5;
  v6 = *(_DWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 204) = *(_BYTE *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v6;
  v7 = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v7;
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v8;
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t assignWithTake for RequestWithNoAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v14;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 204) = *(_BYTE *)(a2 + 204);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  v15 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestWithNoAssetData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 272))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestWithNoAssetData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 272) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 272) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestWithNoAssetData()
{
  return &type metadata for RequestWithNoAssetData;
}

uint64_t getEnumTagSinglePayload for RequestWithNoAssetData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestWithNoAssetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_241986944 + 4 * byte_2419AE74B[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_241986978 + 4 * byte_2419AE746[v4]))();
}

uint64_t sub_241986978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241986980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241986988);
  return result;
}

uint64_t sub_241986994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24198699CLL);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_2419869A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2419869A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestWithNoAssetData.CodingKeys()
{
  return &type metadata for RequestWithNoAssetData.CodingKeys;
}

uint64_t sub_2419869C4()
{
  return sub_24196C594(&qword_257165A10, &qword_257165A18, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2419869F4()
{
  unint64_t result;

  result = qword_257165A20;
  if (!qword_257165A20)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AE8E4, &type metadata for RequestWithNoAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257165A20);
  }
  return result;
}

unint64_t sub_241986A3C()
{
  unint64_t result;

  result = qword_257165A28;
  if (!qword_257165A28)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AE7E4, &type metadata for RequestWithNoAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257165A28);
  }
  return result;
}

unint64_t sub_241986A84()
{
  unint64_t result;

  result = qword_257165A30;
  if (!qword_257165A30)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AE80C, &type metadata for RequestWithNoAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257165A30);
  }
  return result;
}

uint64_t sub_241986AC8()
{
  unint64_t v0;

  v0 = sub_2419AA580();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13)
    return 19;
  else
    return v0;
}

uint64_t sub_241986B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257165A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_241986B60(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_2419ADDB0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  return result;
}

uint64_t static BiomeSQLDatabaseUtils.identifySqlError(errorString:)@<X0>(char *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_241956600();
  result = sub_2419AA328();
  if ((result & 1) != 0)
  {
    v3 = 13;
  }
  else
  {
    result = sub_2419AA328();
    if ((result & 1) != 0)
    {
      v3 = 12;
    }
    else
    {
      result = sub_2419AA328();
      if ((result & 1) != 0)
        v3 = 14;
      else
        v3 = 11;
    }
  }
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for BiomeSQLDatabaseUtils()
{
  return &type metadata for BiomeSQLDatabaseUtils;
}

uint64_t sub_241986CD8()
{
  uint64_t v0;

  v0 = sub_2419AA040();
  __swift_allocate_value_buffer(v0, qword_257165A40);
  __swift_project_value_buffer(v0, (uint64_t)qword_257165A40);
  return sub_2419AA034();
}

unint64_t static ExperimentMetricsWorker.suiteName.getter()
{
  return 0xD000000000000025;
}

unint64_t static ExperimentMetricsWorker.includeCurrentDateForAggregation.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t ExperimentMetricsWorker.doWork(metricsExecutor:context:durationThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  v4 = sub_2419AA1FC();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241986DF8()
{
  uint64_t v0;
  id *v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  int v30;
  id v31;
  char v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  uint64_t inited;
  id v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  id *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  int v55;
  NSObject *v56;
  uint64_t v57;
  uint8_t *v58;
  _BYTE *v59;
  id *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  void (*v71)(uint64_t, _QWORD, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_QWORD *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  id *v85;
  uint64_t (*v86)(uint64_t, id, uint64_t);
  uint64_t v87[3];

  if (qword_257162A80 != -1)
    swift_once();
  v1 = (id *)(v0 + 120);
  v2 = *(void **)(v0 + 176);
  v3 = sub_2419AA040();
  __swift_project_value_buffer(v3, (uint64_t)qword_257165A40);
  v4 = v2;
  v5 = sub_2419AA028();
  v6 = sub_2419AA22C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 176);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v87[0] = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_2419A9E9C();
    *(_QWORD *)(v0 + 152) = sub_24193F470(v11, v12, v87);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2080;
    v13 = sub_2419A9EA8();
    *(_QWORD *)(v0 + 112) = sub_24193F470(v13, v14, v87);
    v1 = (id *)(v0 + 120);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24193B000, v5, v6, "TaskId: %s, TaskName: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v10, -1, -1);
    MEMORY[0x24269F7A0](v9, -1, -1);
  }
  else
  {

  }
  v15 = *(_QWORD **)(v0 + 160);
  *v15 = 0;
  v16 = *MEMORY[0x24BECE100];
  *(_DWORD *)(v0 + 288) = v16;
  v17 = sub_2419A9E78();
  *(_QWORD *)(v0 + 208) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v0 + 216) = v18;
  v19 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 104);
  *(_QWORD *)(v0 + 224) = v19;
  v19(v15, v16, v17);
  v20 = sub_2419A9E9C();
  v22 = v21;
  v23 = sub_2419A9EA8();
  sub_241988380(v20, v22, v23, v24);
  v85 = v1;
  v33 = *(void **)(v0 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = sub_2419A9E3C();
  *(_QWORD *)(v0 + 256) = v34;
  v35 = *(_QWORD *)(v34 - 8);
  *(_QWORD *)(v0 + 264) = v35;
  v36 = swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v36;
  v87[0] = sub_2419A9EA8();
  v87[1] = v37;
  sub_2419AA178();
  v38 = objc_allocWithZone(MEMORY[0x24BEBA8F8]);
  v39 = (void *)sub_2419AA0DC();
  v40 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  objc_msgSend(v38, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v39, 1, v40);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163D18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2419AB050;
  *(_QWORD *)(inited + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 40) = 0x80000002419AFE40;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = 60000;
  sub_24194D77C(inited);
  v42 = v33;
  sub_2419A9E30();
  v43 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v44 = (void *)sub_2419AA0DC();
  v45 = objc_msgSend(v43, sel_initWithSuiteName_, v44);
  *(_QWORD *)(v0 + 280) = v45;

  if (v45)
  {
    v46 = *(_QWORD *)(v0 + 168);
    v47 = swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v47;
    v86 = (uint64_t (*)(uint64_t, id, uint64_t))(**(int **)(*(_QWORD *)v46 + 88)
                                                       + *(_QWORD *)(*(_QWORD *)v46 + 88));
    v48 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v48;
    *v48 = v0;
    v48[1] = sub_24198783C;
    return v86(v47, v45, v36);
  }
  v56 = sub_2419AA028();
  v57 = sub_2419AA244();
  if (os_log_type_enabled(v56, (os_log_type_t)v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v58 = 0;
    _os_log_impl(&dword_24193B000, v56, (os_log_type_t)v57, "Can't get user defaults initialized", v58, 2u);
    MEMORY[0x24269F7A0](v58, -1, -1);
  }

  sub_24193F23C();
  v31 = (id)swift_allocError();
  *v59 = 5;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
  swift_task_dealloc();
  v25 = (id *)(v0 + 144);
  *(_QWORD *)(v0 + 144) = v31;
  v26 = sub_2419A9E54();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = swift_task_alloc();
  v29 = v31;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if (swift_dynamicCast())
  {
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v28, v26);
    if (MEMORY[0x24BECE0C0] && v30 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v31 = *v25;
      v32 = 3;
LABEL_40:

      v78 = *(_QWORD *)(v0 + 216);
      v77 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 224);
      v79 = *(_QWORD *)(v0 + 208);
      v80 = *(unsigned int *)(v0 + 288);
      v81 = *(_QWORD *)(v0 + 160);
      v82 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v83 = swift_allocError();
      *v84 = v32;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v81, v79);
      *v82 = v83;
      v77(v82, v80, v79);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v78 + 32))(v81, v82, v79);
      swift_task_dealloc();
      goto LABEL_41;
    }
    if (MEMORY[0x24BECE0C8] && v30 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v31 = *v25;
      v32 = 4;
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  }
  v50 = (id *)(v0 + 96);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 96) = v31;
  v51 = sub_2419A9F74();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = swift_task_alloc();
  v54 = v31;
  if (swift_dynamicCast())
  {
    v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 88))(v53, v51);
    if (MEMORY[0x24BE2BB68] && v55 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v31 = *v50;
      v32 = 6;
      goto LABEL_40;
    }
    if (MEMORY[0x24BE2BB70] && v55 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v31 = *v50;
      v32 = 7;
      goto LABEL_40;
    }
    if (MEMORY[0x24BE2BB78] && v55 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v31 = *v50;
      v32 = 8;
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v51);
  }
  v60 = (id *)(v0 + 104);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 104) = v31;
  v61 = v31;
  if (swift_dynamicCast())
  {

    v32 = *(_BYTE *)(v0 + 292);
    v31 = *v60;
    goto LABEL_40;
  }

  *v85 = v31;
  v62 = sub_2419A9E84();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = swift_task_alloc();
  v65 = v31;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v62);
    swift_task_dealloc();
    v31 = *v85;
    v32 = 2;
    goto LABEL_40;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 128) = v31;
  v66 = sub_2419A9E48();
  v67 = *(_QWORD *)(v66 - 8);
  v68 = swift_task_alloc();
  v69 = v31;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v66);
    swift_task_dealloc();
    v32 = 0;
    v31 = *(id *)(v0 + 128);
    goto LABEL_40;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 136) = v31;
  v70 = v31;
  if (!swift_dynamicCast())
  {

    v32 = 1;
    goto LABEL_40;
  }
  v71 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 224);
  v73 = *(_QWORD *)(v0 + 200);
  v72 = *(_QWORD *)(v0 + 208);
  v74 = *(_QWORD *)(v0 + 184);
  v75 = *(_QWORD *)(v0 + 192);
  v76 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 216) + 8))(v76, v72);

  v71(v76, *MEMORY[0x24BECE110], v72);
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v74);

LABEL_41:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24198783C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2419878A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  int v17;
  char v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  int v24;
  id *v25;
  id v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void (*v37)(uint64_t, _QWORD, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v2, v3);
  swift_task_dealloc();
  v6 = sub_2419A9E9C();
  v8 = v7;
  v9 = sub_2419A9EA8();
  sub_241988380(v6, v8, v9, v10);
  v11 = *(void **)(v0 + 280);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  if (v1)
  {
    v12 = (id *)(v0 + 144);
    *(_QWORD *)(v0 + 144) = v1;
    v13 = sub_2419A9E54();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = swift_task_alloc();
    v16 = v1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v15, v13);
      if (MEMORY[0x24BECE0C0] && v17 == *MEMORY[0x24BECE0C0])
      {

        swift_task_dealloc();
        v18 = 3;
LABEL_30:
        v44 = *(_QWORD *)(v0 + 216);
        v43 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 224);
        v45 = *(_QWORD *)(v0 + 208);
        v46 = *(unsigned int *)(v0 + 288);
        v47 = *(_QWORD *)(v0 + 160);
        v48 = (_QWORD *)swift_task_alloc();
        sub_24193F23C();
        v49 = swift_allocError();
        *v50 = v18;
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v45);
        *v48 = v49;
        v43(v48, v46, v45);
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v44 + 32))(v47, v48, v45);
        swift_task_dealloc();
        goto LABEL_31;
      }
      if (MEMORY[0x24BECE0C8] && v17 == *MEMORY[0x24BECE0C8])
      {

        swift_task_dealloc();
        v18 = 4;
        goto LABEL_30;
      }
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
    }
    v19 = (id *)(v0 + 96);
    swift_task_dealloc();

    *(_QWORD *)(v0 + 96) = v1;
    v20 = sub_2419A9F74();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = swift_task_alloc();
    v23 = v1;
    if (swift_dynamicCast())
    {
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 88))(v22, v20);
      if (MEMORY[0x24BE2BB68] && v24 == *MEMORY[0x24BE2BB68])
      {

        swift_task_dealloc();
        v18 = 6;
        goto LABEL_30;
      }
      if (MEMORY[0x24BE2BB70] && v24 == *MEMORY[0x24BE2BB70])
      {

        swift_task_dealloc();
        v18 = 7;
        goto LABEL_30;
      }
      if (MEMORY[0x24BE2BB78] && v24 == *MEMORY[0x24BE2BB78])
      {

        swift_task_dealloc();
        v18 = 8;
        goto LABEL_30;
      }
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
    }
    v25 = (id *)(v0 + 104);
    swift_task_dealloc();

    *(_QWORD *)(v0 + 104) = v1;
    v26 = v1;
    if (swift_dynamicCast())
    {

      v18 = *(_BYTE *)(v0 + 292);
      goto LABEL_30;
    }
    v27 = (id *)(v0 + 120);

    *(_QWORD *)(v0 + 120) = v1;
    v28 = sub_2419A9E84();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = swift_task_alloc();
    v31 = v1;
    if (swift_dynamicCast())
    {

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
      swift_task_dealloc();

      v18 = 2;
      goto LABEL_30;
    }
    swift_task_dealloc();

    *(_QWORD *)(v0 + 128) = v1;
    v32 = sub_2419A9E48();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = swift_task_alloc();
    v35 = v1;
    if (swift_dynamicCast())
    {

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
      swift_task_dealloc();

      v18 = 0;
      goto LABEL_30;
    }
    swift_task_dealloc();

    *(_QWORD *)(v0 + 136) = v1;
    v36 = v1;
    if (!swift_dynamicCast())
    {

      v18 = 1;
      goto LABEL_30;
    }
    v37 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 224);
    v38 = *(_QWORD *)(v0 + 200);
    v39 = *(_QWORD *)(v0 + 208);
    v40 = *(_QWORD *)(v0 + 184);
    v41 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 216) + 8))(v42, v39);

    v37(v42, *MEMORY[0x24BECE110], v39);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v38, v40);

  }
LABEL_31:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241987E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  int v10;
  char v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  int v17;
  id *v18;
  id v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void (*v30)(uint64_t, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  v4 = *(id *)(v0 + 248);
  *(_QWORD *)(v0 + 144) = v4;
  v5 = (id *)(v0 + 144);
  v6 = sub_2419A9E54();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc();
  v9 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v8, v6);
    if (MEMORY[0x24BECE0C0] && v10 == *MEMORY[0x24BECE0C0])
    {

      swift_task_dealloc();
      v4 = *v5;
      v11 = 3;
LABEL_29:

      v37 = *(_QWORD *)(v0 + 216);
      v36 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v0 + 224);
      v38 = *(_QWORD *)(v0 + 208);
      v39 = *(unsigned int *)(v0 + 288);
      v40 = *(_QWORD *)(v0 + 160);
      v41 = (_QWORD *)swift_task_alloc();
      sub_24193F23C();
      v42 = swift_allocError();
      *v43 = v11;
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v40, v38);
      *v41 = v42;
      v36(v41, v39, v38);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v37 + 32))(v40, v41, v38);
      swift_task_dealloc();
      goto LABEL_30;
    }
    if (MEMORY[0x24BECE0C8] && v10 == *MEMORY[0x24BECE0C8])
    {

      swift_task_dealloc();
      v4 = *v5;
      v11 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  }
  v12 = (id *)(v0 + 96);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 96) = v4;
  v13 = sub_2419A9F74();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = swift_task_alloc();
  v16 = v4;
  if (swift_dynamicCast())
  {
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v15, v13);
    if (MEMORY[0x24BE2BB68] && v17 == *MEMORY[0x24BE2BB68])
    {

      swift_task_dealloc();
      v4 = *v12;
      v11 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB70] && v17 == *MEMORY[0x24BE2BB70])
    {

      swift_task_dealloc();
      v4 = *v12;
      v11 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x24BE2BB78] && v17 == *MEMORY[0x24BE2BB78])
    {

      swift_task_dealloc();
      v4 = *v12;
      v11 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
  }
  v18 = (id *)(v0 + 104);
  swift_task_dealloc();

  *(_QWORD *)(v0 + 104) = v4;
  v19 = v4;
  if (swift_dynamicCast())
  {

    v11 = *(_BYTE *)(v0 + 292);
    v4 = *v18;
    goto LABEL_29;
  }
  v20 = (id *)(v0 + 120);

  *(_QWORD *)(v0 + 120) = v4;
  v21 = sub_2419A9E84();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = swift_task_alloc();
  v24 = v4;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
    swift_task_dealloc();
    v4 = *v20;
    v11 = 2;
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 128) = v4;
  v25 = sub_2419A9E48();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = swift_task_alloc();
  v28 = v4;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
    swift_task_dealloc();
    v11 = 0;
    v4 = *(id *)(v0 + 128);
    goto LABEL_29;
  }
  swift_task_dealloc();

  *(_QWORD *)(v0 + 136) = v4;
  v29 = v4;
  if (!swift_dynamicCast())
  {

    v11 = 1;
    goto LABEL_29;
  }
  v30 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 224);
  v32 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 208);
  v33 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 192);
  v35 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 216) + 8))(v35, v31);

  v30(v35, *MEMORY[0x24BECE110], v31);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);

LABEL_30:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241988380(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_2419AA208();
  if ((result & 1) != 0)
  {
    if (qword_257162A80 != -1)
      swift_once();
    v9 = sub_2419AA040();
    __swift_project_value_buffer(v9, (uint64_t)qword_257165A40);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v10 = sub_2419AA028();
    v11 = sub_2419AA22C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v14 = v13;
      *(_DWORD *)v12 = 136315394;
      swift_bridgeObjectRetain();
      sub_24193F470(a1, a2, &v14);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_24193F470(a3, a4, &v14);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24193B000, v10, v11, "TaskId: %s, TaskName: %s: asked to stop!", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v13, -1, -1);
      MEMORY[0x24269F7A0](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_2419AA1FC();
    sub_241956B88();
    swift_allocError();
    sub_2419AA04C();
    return swift_willThrow();
  }
  return result;
}

uint64_t ExperimentMetricsExecutor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ExperimentMetricsExecutor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2419885E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_2419AA040();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24198864C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163978);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  v3 = qword_257162A80;
  v4 = v1;
  if (v3 == -1)
  {
    v5 = v4;
  }
  else
  {
    swift_once();
    v5 = *(void **)(v0 + 32);
  }
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_257165A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  type metadata accessor for SiriDeviceExperimentMetrics();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = SiriDeviceExperimentMetrics.init(defaults:logger:)(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257165A68);
  swift_allocObject();
  v10 = sub_2419A9E6C();
  *(_QWORD *)(v0 + 80) = v10;
  if (v10)
  {
    v11 = *(_QWORD *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163988);
    v12 = swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v12;
    v13 = sub_2419A9E3C();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v15;
    *v15 = v0;
    v15[1] = sub_2419558A0;
    return sub_2419A9E60();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 24);
    v18 = sub_2419A9E78();
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v2, 1, 1, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v17, *MEMORY[0x24BECE0F8], v18);
    sub_241941720(v2, &qword_257163978);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t ExperimentMetricsExecutor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExperimentMetricsExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for ExperimentMetricsWorker()
{
  return &type metadata for ExperimentMetricsWorker;
}

uint64_t type metadata accessor for ExperimentMetricsExecutor()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExperimentMetricsExecutor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExperimentMetricsExecutor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ExperimentMetricsExecutor.executeSiriDeviceExperimentMetrics(defaults:pluginContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 88)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 88));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_24193D468;
  return v10(a1, a2, a3);
}

uint64_t sub_2419889A0()
{
  uint64_t v0;

  v0 = sub_2419A9D64();
  __swift_allocate_value_buffer(v0, qword_257165B18);
  __swift_project_value_buffer(v0, (uint64_t)qword_257165B18);
  return sub_2419A9D58();
}

uint64_t DevicePropertiesUtils.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DevicePropertiesUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DevicePropertiesUtils()
{
  return objc_opt_self();
}

uint64_t method lookup function for DevicePropertiesUtils()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_241988A2C()
{
  id v0;
  uint64_t result;
  double v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95598]), sel_init);
  result = sub_2419A9CBC();
  if (!v0)
    return (uint64_t)v0;
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 1.84467441e19)
  {
    objc_msgSend(v0, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v2);
    objc_msgSend(v0, sel_setNumberOfSeconds_, 86400);
    return (uint64_t)v0;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_241988AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  uint64_t result;
  uint64_t v20;

  v4 = sub_2419A9CE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2419A9D1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954F0]), sel_init);
  v13 = v12;
  if (!v12)
    return (uint64_t)v13;
  objc_msgSend(v12, sel_setDeviceAggregationId_, a2);
  sub_2419A9D10();
  v14 = objc_allocWithZone(MEMORY[0x24BE95C78]);
  v15 = (void *)sub_2419A9D04();
  v16 = objc_msgSend(v14, sel_initWithNSUUID_, v15);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  objc_msgSend(v13, sel_setOddId_, v16);

  sub_2419A9D94();
  sub_2419A9CBC();
  v18 = v17;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v18 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v18 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (is_mul_ok((unint64_t)v18, 0x3E8uLL))
  {
    objc_msgSend(v13, sel_setEventTimestampInMsSince1970_, 1000 * (unint64_t)v18);
    objc_msgSend(v13, sel_setAggregationInterval_, a1);
    return (uint64_t)v13;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SiriDigestMetricsBiomeReporter.__allocating_init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = v4 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t SiriDigestMetricsBiomeReporter.init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = v2 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  v5 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_241988D90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2[2] = v1;
  v2[3] = *(_QWORD *)(type metadata accessor for DeviceUsageMetrics(0) - 8);
  v4 = swift_task_alloc();
  v5 = *(_QWORD *)(a1 + 16);
  v2[4] = v4;
  v2[5] = v5;
  return swift_task_switch();
}

uint64_t sub_241988DF4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Reporter invoked: SiriDigestMetricsBiomeReporter", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 40);

  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 40)
       + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v9 = *(_QWORD *)(v0 + 32);
      sub_241989960(v7, v9);
      v10 = _s16MetricsFramework010SiriDigestA13BiomeReporterC06createe8OnDeviced5UsageA5Event05usageA0So06BMSirihidjA0CAA0ijA0V_tFZ_0(v9);
      sub_2419A9DB8();

      sub_2419899A4(v9);
      v7 += v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241988F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  v2 = sub_2419AA040();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t SiriDigestMetricsBiomeReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriDigestMetricsBiomeReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id sub_241989010(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,uint64_t a34,uint64_t a35,void *a36,void *a37)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;

  if (a3)
  {
    v49 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    v38 = a11;
    if (a7)
      goto LABEL_3;
  }
  else
  {
    v49 = 0;
    v38 = a11;
    if (a7)
    {
LABEL_3:
      v48 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v39 = a13;
      if (v38)
        goto LABEL_4;
LABEL_8:
      v47 = 0;
      v40 = a19;
      if (v39)
        goto LABEL_5;
      goto LABEL_9;
    }
  }
  v48 = 0;
  v39 = a13;
  if (!v38)
    goto LABEL_8;
LABEL_4:
  v47 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v40 = a19;
  if (v39)
  {
LABEL_5:
    v46 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_9:
  v46 = 0;
LABEL_10:
  if (v40)
  {
    v45 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = 0;
  }
  if (a35)
  {
    v41 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = 0;
  }
  sub_241950A30();
  v43 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  v44 = objc_msgSend(v50, sel_initWithEventMetadata_deviceType_programCode_productId_systemBuild_dataSharingOptInStatus_viewInterface_audioInterfaceVendorId_audioInterfaceProductId_asrLocation_nlLocation_siriInputLocale_dictationLocale_subDomain_totalTurnCount_validTurnCount_siriTasksStarted_siriTasksCompleted_flowTasksStarted_flowTasksCompleted_reliabilityRequestCount_reliabilityTurnCount_clientErrorCount_undesiredResponseCount_fatalResponseCount_failureResponseCount_siriUnavailableResponseCount_asrTurnCount_siriResponseId_responseCategory_isIntelligenceEngineRequest_intelligenceEngineRouting_, a1, v49, a4, a5, v48, a8, a9, v47, v46, a14, a15, a16, a17, v45, a20, a21, a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31,
          a32,
          a33,
          v41,
          a36,
          a37,
          v43);

  return v44;
}

id _s16MetricsFramework010SiriDigestA13BiomeReporterC06createe8OnDeviced5UsageA5Event05usageA0So06BMSirihidjA0CAA0ijA0V_tFZ_0(uint64_t a1)
{
  id v2;
  int *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;

  v2 = _s16MetricsFramework13EventMetadataV07toBiomeC005usagecD0So025BMSiriOnDeviceDigestUsageacD0CACSg_tFZ_0(a1);
  v3 = (int *)type metadata accessor for DeviceUsageMetrics(0);
  v4 = (uint64_t *)(a1 + v3[6]);
  v55 = v4[1];
  v56 = v2;
  v54 = *v4;
  if ((*(_BYTE *)(a1 + v3[7] + 4) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v29 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v29 = (void *)sub_2419AA5D4();
  }
  if (*(_BYTE *)(a1 + v3[8]) == 3)
    v45 = 0;
  else
    v45 = (void *)sub_2419AA220();
  v5 = (uint64_t *)(a1 + v3[9]);
  v52 = *v5;
  v53 = v5[1];
  if ((*(_BYTE *)(a1 + v3[10] + 4) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v44 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v44 = (void *)sub_2419AA5D4();
  }
  if ((*(_BYTE *)(a1 + v3[11] + 4) & 1) != 0)
    v43 = 0;
  else
    v43 = (void *)sub_2419AA5D4();
  v6 = (uint64_t *)(a1 + v3[12]);
  v7 = *v6;
  v8 = v6[1];
  v9 = (uint64_t *)(a1 + v3[13]);
  v51 = v7;
  v48 = v9[1];
  v49 = *v9;
  if ((*(_BYTE *)(a1 + v3[14] + 4) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = (void *)sub_2419AA5D4();
  }
  v50 = v8;
  if ((*(_BYTE *)(a1 + v3[15] + 4) & 1) != 0)
    v41 = 0;
  else
    v41 = (void *)sub_2419AA5D4();
  v10 = v3[16];
  v11 = *(void **)(a1 + v10);
  if (v11)
  {
    objc_msgSend(*(id *)(a1 + v10), sel_languageCode);
    v12 = (void *)sub_2419AA5D4();
    objc_msgSend(v11, sel_countryCode);
    v11 = (void *)sub_2419AA5D4();
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6F8]), sel_initWithLanguageCode_countryCode_, v12, v11);

  v14 = v3[17];
  v15 = *(void **)(a1 + v14);
  if (v15)
  {
    objc_msgSend(*(id *)(a1 + v14), sel_languageCode);
    v16 = (void *)sub_2419AA5D4();
    objc_msgSend(v15, sel_countryCode);
    v15 = (void *)sub_2419AA5D4();
  }
  else
  {
    v16 = 0;
  }
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6F8]), sel_initWithLanguageCode_countryCode_, v16, v15);

  v18 = (uint64_t *)(a1 + v3[18]);
  v46 = v18[1];
  v47 = *v18;
  if ((*(_BYTE *)(a1 + v3[19] + 4) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v40 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v40 = (void *)sub_2419AA628();
  }
  if ((*(_BYTE *)(a1 + v3[20] + 4) & 1) != 0)
    v39 = 0;
  else
    v39 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[21] + 4) & 1) != 0)
    v38 = 0;
  else
    v38 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[22] + 4) & 1) != 0)
    v37 = 0;
  else
    v37 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[23] + 4) & 1) != 0)
    v36 = 0;
  else
    v36 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[24] + 4) & 1) != 0)
    v35 = 0;
  else
    v35 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[25] + 4) & 1) != 0)
    v34 = 0;
  else
    v34 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[26] + 4) & 1) != 0)
    v33 = 0;
  else
    v33 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[27] + 4) & 1) != 0)
    v32 = 0;
  else
    v32 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[28] + 4) & 1) != 0)
    v31 = 0;
  else
    v31 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[29] + 4) & 1) != 0)
    v30 = 0;
  else
    v30 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[30] + 4) & 1) != 0)
    v19 = 0;
  else
    v19 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[31] + 4) & 1) != 0)
    v20 = 0;
  else
    v20 = (void *)sub_2419AA628();
  if ((*(_BYTE *)(a1 + v3[32] + 4) & 1) != 0)
    v21 = 0;
  else
    v21 = (void *)sub_2419AA628();
  v22 = (uint64_t *)(a1 + v3[33]);
  v23 = *v22;
  v24 = v22[1];
  if ((*(_BYTE *)(a1 + v3[34] + 4) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v25 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v25 = (void *)sub_2419AA5D4();
  }
  if (*(_BYTE *)(a1 + v3[36]) == 2)
    v26 = 0;
  else
    v26 = (void *)sub_2419AA1F0();
  v27 = objc_allocWithZone(MEMORY[0x24BE0C6E0]);
  return sub_241989010(v56, v54, v55, v29, v45, v52, v53, v44, v43, v51, v50, v49, v48, v42, v41, v13, v17, v47, v46,
           v40,
           v39,
           v38,
           v37,
           v36,
           v35,
           v34,
           v33,
           v32,
           v31,
           v30,
           v19,
           v20,
           v21,
           v23,
           v24,
           v25,
           v26);
}

uint64_t sub_241989960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceUsageMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2419899A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeviceUsageMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2419899E0()
{
  return type metadata accessor for SiriDigestMetricsBiomeReporter();
}

uint64_t type metadata accessor for SiriDigestMetricsBiomeReporter()
{
  uint64_t result;

  result = qword_257165C00;
  if (!qword_257165C00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for SiriDigestMetricsBiomeReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDigestMetricsBiomeReporter.__allocating_init(biomeDonator:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t DevicePropertiesPlugin.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_24198A024(a1, a2);

  return v4;
}

uint64_t DevicePropertiesPlugin.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_24198A024(a1, a2);

  return v3;
}

uint64_t sub_241989AD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  return swift_task_switch();
}

uint64_t sub_241989AF0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[8] = *(_QWORD *)(v0[7] + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_dataProvider);
  v1 = (_QWORD *)swift_task_alloc();
  v0[9] = v1;
  *v1 = v0;
  v1[1] = sub_241989B48;
  return sub_241997FE4();
}

uint64_t sub_241989B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v5 = (_QWORD *)*v3;
  v4[10] = a2;
  swift_task_dealloc();
  if (v2)
    return ((uint64_t (*)(void))v5[1])();
  v7 = (_QWORD *)swift_task_alloc();
  v4[11] = v7;
  *v7 = v5;
  v7[1] = sub_241989BD0;
  return sub_241997D84();
}

uint64_t sub_241989BD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = v4[3];
    v4[13] = a1;
    v4[14] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_241989C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);
  *(_OWORD *)v2 = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v2 + 16) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241989C68()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241989C9C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = *a1;
  return swift_task_switch();
}

uint64_t sub_241989CBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_reporter);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 40);
  v4 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 80) + *(_QWORD *)(*(_QWORD *)v1 + 80));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_241989D38;
  return v4(v0 + 16);
}

uint64_t sub_241989D38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_241989DA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241989DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 72) = *(_QWORD *)(a2 + 16);
  return swift_task_switch();
}

uint64_t sub_241989DD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 32) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_241989E4C;
  return sub_24195C8E0(*(_QWORD *)(v0 + 40), v0 + 16);
}

uint64_t sub_241989E4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_241989EB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DevicePropertiesPlugin.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DevicePropertiesPlugin.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_241989FB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v3;
  return swift_task_switch();
}

uint64_t sub_241989FD4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = v4;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 72) = *(_QWORD *)(a2 + 16);
  return swift_task_switch();
}

uint64_t sub_24198A000(_OWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = *v1;
  *(_OWORD *)(v2 + 40) = *a1;
  return swift_task_switch();
}

uint64_t sub_24198A024(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, char *, uint64_t);
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v20;

  v5 = sub_2419AA040();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v10 = v8;
  v20 = v8;
  v9(v2 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_logger, a2, v5);
  v9((uint64_t)v7, a2, v5);
  type metadata accessor for DevicePropertiesDataProvider();
  v11 = swift_allocObject();
  v12 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v12(v11 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger, v7, v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_dataProvider) = v11;
  v9((uint64_t)v7, a2, v5);
  type metadata accessor for DevicePropertiesCalculator();
  v13 = swift_allocObject();
  v14 = a1;
  sub_2419A9D58();
  *(_QWORD *)(v13 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_defaults) = v14;
  v12(v13 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger, v7, v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_calculator) = v13;
  v9((uint64_t)v7, a2, v5);
  type metadata accessor for SELFReportingService();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 24) = objc_msgSend((id)objc_opt_self(), sel_sharedLoggerWithPersistenceConfiguration_, 1);
  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
  v17 = objc_msgSend(v16, sel_defaultMessageStream);

  *(_QWORD *)(v15 + 16) = v17;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a2, v5);
  type metadata accessor for DevicePropertiesSELFReporter();
  v18 = swift_allocObject();
  v12(v18 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger, v7, v5);
  *(_QWORD *)(v18 + 16) = v15;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_reporter) = v18;
  return v2;
}

uint64_t sub_24198A27C()
{
  return sub_24198A324(&qword_257165CD8, (uint64_t)&protocol conformance descriptor for DevicePropertiesPlugin);
}

uint64_t type metadata accessor for DevicePropertiesPlugin()
{
  uint64_t result;

  result = qword_257165D30;
  if (!qword_257165D30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24198A2DC()
{
  return sub_24198A324(&qword_257165CE0, (uint64_t)&protocol conformance descriptor for DevicePropertiesPlugin);
}

uint64_t sub_24198A300()
{
  return sub_24198A324(qword_257165CE8, (uint64_t)&protocol conformance descriptor for DevicePropertiesPlugin);
}

uint64_t sub_24198A324(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DevicePropertiesPlugin();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24198A368()
{
  return type metadata accessor for DevicePropertiesPlugin();
}

uint64_t sub_24198A370()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DevicePropertiesPlugin()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DevicePropertiesPlugin.__allocating_init(defaults:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DevicePropertiesPlugin.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 120) + *(_QWORD *)(*(_QWORD *)v1 + 120));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of DevicePropertiesPlugin.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of DevicePropertiesPlugin.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 136) + *(_QWORD *)(*(_QWORD *)v2 + 136));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t AssetPenetrationStatusDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t AssetPenetrationStatusDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_24198A60C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24198A624()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: AssetPenetrationMetricsDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AssetPenetrationStatusDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AssetPenetrationStatusDataProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24198A768()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for AssetPenetrationStatusDataRecord()
{
  return &type metadata for AssetPenetrationStatusDataRecord;
}

uint64_t sub_24198A794()
{
  return type metadata accessor for AssetPenetrationStatusDataProvider();
}

uint64_t type metadata accessor for AssetPenetrationStatusDataProvider()
{
  uint64_t result;

  result = qword_257165E40;
  if (!qword_257165E40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for AssetPenetrationStatusDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetPenetrationStatusDataProvider.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AssetPenetrationStatusDataProvider.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t sub_24198A854@<X0>(uint64_t *a1@<X8>)
{
  return sub_24198A86C((uint64_t (*)(void))sub_241996228, a1);
}

uint64_t sub_24198A860@<X0>(uint64_t *a1@<X8>)
{
  return sub_24198A86C((uint64_t (*)(void))sub_241996E8C, a1);
}

uint64_t sub_24198A86C@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = a1();
  v5 = v4;
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257162F10);
  a2[3] = result;
  *a2 = v3;
  a2[1] = v5;
  return result;
}

uint64_t SiriDigestMetricsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  SiriDigestMetricsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SiriDigestMetricsResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDigestMetricsResults.eventStreamMetadata.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SiriDigestMetricsResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriDigestMetricsResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDigestMetricsResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SiriDigestMetricsResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriDigestMetricsResults.deviceUsageMetricsResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDigestMetricsResults.deviceUsageMetricsResults.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SiriDigestMetricsResults.deviceUsageMetricsResults.modify())()
{
  return nullsub_1;
}

uint64_t SiriDigestMetricsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;

  sub_2419A9D58();
  v9 = v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_logger;
  v10 = sub_2419AA040();
  v11 = *(_QWORD *)(v10 - 8);
  v19 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  sub_2419416DC(a2, v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_sqlFileURL, &qword_257162CF0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_bookmarkService) = a3;
  v12 = v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_oddId;
  v13 = sub_2419A9D1C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  v15 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  swift_retain();
  v16 = (void *)sub_2419AA0DC();
  v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

  if (!v17)
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCF50]), sel_init);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  sub_241941720(a2, &qword_257162CF0);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v10);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_defaults) = v17;
  return v4;
}

uint64_t sub_24198AB7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[369] = v1;
  v2[368] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v2[370] = swift_task_alloc();
  v2[371] = swift_task_alloc();
  type metadata accessor for DeviceUsageMetrics(0);
  v2[372] = swift_task_alloc();
  v2[373] = swift_task_alloc();
  v3 = type metadata accessor for EventMetadata(0);
  v2[374] = v3;
  v2[375] = *(_QWORD *)(v3 - 8);
  v2[376] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v2[377] = swift_task_alloc();
  v2[378] = swift_task_alloc();
  v2[379] = swift_task_alloc();
  v2[380] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v2[381] = swift_task_alloc();
  v4 = sub_2419A9CE0();
  v2[382] = v4;
  v2[383] = *(_QWORD *)(v4 - 8);
  v2[384] = swift_task_alloc();
  v2[385] = swift_task_alloc();
  v2[386] = swift_task_alloc();
  v2[387] = swift_task_alloc();
  v2[388] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  v2[389] = swift_task_alloc();
  v2[390] = swift_task_alloc();
  v5 = sub_2419A9FBC();
  v2[391] = v5;
  v2[392] = *(_QWORD *)(v5 - 8);
  v2[393] = swift_task_alloc();
  v2[394] = swift_task_alloc();
  v6 = sub_2419A9FE0();
  v2[395] = v6;
  v2[396] = *(_QWORD *)(v6 - 8);
  v2[397] = swift_task_alloc();
  return swift_task_switch();
}

void sub_24198ADA4()
{
  _QWORD *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t);
  uint8_t *v7;
  os_signpost_id_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unsigned int v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  os_log_type_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  void *v45;
  id v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  _OWORD *v68;
  unint64_t v69;
  char v70;
  _OWORD *v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  void *v81;
  unsigned __int8 v82;
  double v83;
  double v84;
  _OWORD *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  void *v90;
  id v91;
  unint64_t v92;
  int v93;
  void *v94;
  id v95;
  int v96;
  void *v97;
  id v98;
  int v99;
  char *v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  void *v127;
  void (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _OWORD *v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  char v141;
  int v142;
  uint64_t v143;
  char v144;
  _OWORD *v145;
  id v146;
  unsigned int v147;
  NSObject *v148;
  int v149;
  uint8_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  double v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  _OWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  void *v184;
  uint64_t v185;
  int v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  int v200;
  int v201;
  char v202;
  uint64_t v203;
  int v204;
  int v205;
  char v206;
  uint64_t v207;
  int v208;
  int v209;
  char v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(uint64_t, uint64_t);
  uint64_t v221;
  NSObject *v222;
  os_log_type_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  uint8_t *v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  uint64_t v234;
  id v235;
  id v236;
  NSObject *v237;
  os_log_type_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  os_log_type_t v245;
  uint8_t *v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  void (*v259)(uint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  void (*v267)(uint64_t, uint64_t);
  unsigned int *v268;
  _OWORD *v269;
  uint64_t v270;
  uint64_t *v271;
  double *v272;
  void *v273;
  id v274;
  uint64_t v275;
  uint64_t v276;
  _DWORD *v277;
  uint64_t v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  _OWORD *v309;
  _OWORD *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _OWORD *v319;
  _OWORD *v320;
  uint64_t *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  id v326;
  unint64_t v327;
  char v328;
  uint64_t v329;
  int v330;
  uint64_t v331;
  char v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  int v336;
  uint64_t v337;
  uint64_t v338;
  int v339;
  uint64_t v340;
  char v341;
  uint64_t v342;
  int v343;
  char v344;
  unint64_t v345;
  int v346;
  char v347;
  uint64_t v348;
  char v349;
  int v350;
  uint64_t v351;
  BOOL v352;
  NSObject *v353;
  void *v354;
  uint64_t v355;
  id v356;
  int *v357;
  uint64_t v358;
  _OWORD *v359;
  id v360;
  void *v361;
  NSObject *v362;
  char *v363;
  NSObject *v364;
  _QWORD *v365;
  char v366;
  uint64_t v367[3];

  sub_2419A9FD4();
  sub_2419A9FC8();
  sub_2419A9FA4();
  v1 = sub_2419A9FC8();
  v2 = sub_2419AA268();
  if ((sub_2419AA2B0() & 1) != 0)
  {
    v3 = v0[393];
    v4 = v0[392];
    v5 = v0[391];
    v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16);
    v6(v3, v0[394], v5);
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    v8 = sub_2419A9FB0();
    _os_signpost_emit_with_name_impl(&dword_24193B000, v1, v2, v8, "SiriDigestMetricsCalculatorSP", "", v7, 2u);
    MEMORY[0x24269F7A0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v9 = v0[392];

    v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16);
  }
  v6(v0[393], v0[394], v0[391]);
  sub_2419AA010();
  swift_allocObject();
  sub_2419AA004();
  v10 = sub_2419AA028();
  v11 = sub_2419AA238();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_24193B000, v10, v11, "SQL calculator invoked: SiriDigestMetricsCalculator", v12, 2u);
    MEMORY[0x24269F7A0](v12, -1, -1);
  }
  v13 = v0[369];

  v14 = *(void **)(v13 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_defaults);
  v363 = "ufferPointer.swift";
  v15 = (void *)sub_2419AA0DC();
  v326 = v14;
  v16 = objc_msgSend(v14, sel_BOOLForKey_, v15);

  v17 = sub_2419AA028();
  v18 = sub_2419AA238();
  v19 = os_log_type_enabled(v17, v18);
  if (v16)
  {
    if (v19)
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = v18;
      v22 = "SiriDigestMetricsCalculator: Include current date data for aggregation.";
LABEL_11:
      _os_log_impl(&dword_24193B000, v17, v21, v22, v20, 2u);
      MEMORY[0x24269F7A0](v20, -1, -1);
    }
  }
  else if (v19)
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    v21 = v18;
    v22 = "SiriDigestMetricsCalculator: current date data NOT included for aggregation.";
    goto LABEL_11;
  }
  v23 = v0[390];
  v24 = v0[369];

  v25 = v24 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_sqlFileURL;
  sub_2419416DC(v25, v23, &qword_257162CF0);
  v26 = sub_2419A9C14();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v23, 1, v26);
  sub_241941720(v23, &qword_257162CF0);
  if (v29 == 1)
  {
    v30 = v0[397];
    sub_24193F23C();
    swift_allocError();
    *v31 = 9;
    swift_willThrow();
    goto LABEL_19;
  }
  v32 = v0[389];
  sub_2419416DC(v25, v32, &qword_257162CF0);
  if (v28(v32, 1, v26) == 1)
    goto LABEL_267;
  v33 = v0[389];
  v34 = sub_2419AA0D0();
  v36 = v35;
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v33, v26);
  swift_bridgeObjectRetain_n();
  v37 = sub_2419AA028();
  v38 = sub_2419AA238();
  v365 = v0;
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v367[0] = v40;
    *(_DWORD *)v39 = 136315138;
    swift_bridgeObjectRetain();
    v0[360] = sub_24193F470(v34, v36, v367);
    sub_2419AA2EC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24193B000, v37, v38, "SQL: %s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v40, -1, -1);
    MEMORY[0x24269F7A0](v39, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v45 = (void *)sub_2419A9DE8();
  v321 = v0 + 365;
  v271 = v0 + 364;
  v272 = (double *)(v0 + 367);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162D20);
  sub_2419A9F5C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2419AB040;
  v46 = v45;
  sub_2419A9F50();
  sub_2419A9F50();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257163E90);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_2419AB050;
  *(_QWORD *)(v47 + 32) = 20;
  nullsub_1(v47);
  objc_allocWithZone((Class)sub_2419A9EE4());
  v274 = v46;
  v273 = (void *)sub_2419A9EC0();
  sub_2419A9ED8();
  swift_bridgeObjectRelease();
  sub_2419A9D94();
  v48 = (char *)v0;
  sub_2419A9C5C();
  v49 = sub_24193F168(0);
  v0[365] = v49;
  v50 = sub_2419A9EFC();
  if ((v50 & 1) == 0)
  {
    v358 = 0;
    v322 = 0;
    v323 = 0;
    v324 = 0;
    v325 = 0;
LABEL_249:
    v221 = swift_allocObject();
    *(_QWORD *)(v221 + 16) = v49;
    swift_bridgeObjectRetain_n();
    v222 = sub_2419AA028();
    v223 = sub_2419AA238();
    v224 = swift_allocObject();
    *(_BYTE *)(v224 + 16) = 0;
    v225 = swift_allocObject();
    *(_BYTE *)(v225 + 16) = 8;
    v226 = swift_allocObject();
    *(_QWORD *)(v226 + 16) = sub_24198F304;
    *(_QWORD *)(v226 + 24) = v221;
    v227 = swift_allocObject();
    *(_QWORD *)(v227 + 16) = sub_24198F330;
    *(_QWORD *)(v227 + 24) = v226;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163E98);
    v228 = swift_allocObject();
    sub_241941890(v228, 3);
    *v229 = sub_24195BF0C;
    v229[1] = v224;
    v229[2] = sub_24195C3F8;
    v229[3] = v225;
    v229[4] = sub_24198F35C;
    v229[5] = v227;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v222, v223))
    {
      v362 = v222;
      v0 = v365;
      v230 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v230 = 256;
      v230[2] = 0;
      swift_release();
      v230[3] = 8;
      swift_release();
      v231 = sub_241956C20(v49);
      swift_release();
      swift_bridgeObjectRelease();
      v365[366] = v231;
      sub_2419AA2EC();
      swift_release();
      swift_release();
      _os_log_impl(&dword_24193B000, v362, v223, "SiriDigestMetricsCalculator query yielded %ld results", v230, 0xCu);
      MEMORY[0x24269F7A0](v230, -1, -1);

    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      v0 = v365;
    }
    sub_24198ED68(v325, 0x69737361206C696ELL, 0xEF6449746E617473);
    sub_24198ED68(v324, 0xD000000000000017, 0x80000002419B1140);
    sub_24198ED68(v323, 0xD000000000000015, 0x80000002419B1160);
    sub_24198ED68(v322, 0xD000000000000014, 0x80000002419B21C0);
    sub_24198ED68(v358, 0xD00000000000001CLL, 0x80000002419B1180);
    v232 = sub_2419A9F08();
    if (!v232)
    {
      v250 = v0[397];
      v340 = v0[396];
      v342 = v0[395];
      v338 = v0[394];
      v334 = v0[392];
      v335 = v0[391];
      v331 = v0[388];
      v329 = v0[387];
      v251 = v0[385];
      v252 = v0[383];
      v253 = v0[382];
      v254 = (uint64_t *)v0[368];
      sub_2419A9F20();

      v255 = swift_allocObject();
      v256 = sub_24193F2EC(v255, 1);
      *v257 = 20;
      nullsub_1(v256);
      sub_2419A9DD0();
      v258 = sub_2419A9DA0();
      swift_bridgeObjectRelease();
      v259 = *(void (**)(uint64_t, uint64_t))(v252 + 8);
      v259(v251, v253);
      v260 = sub_24193F15C(0);

      swift_release();
      v259(v329, v253);
      v259(v331, v253);
      swift_beginAccess();
      v261 = v0[365];
      *v254 = v258;
      v254[1] = v260;
      v254[2] = v261;
      sub_24198EA88(v250, "SiriDigestMetricsCalculatorSP", 29, 2);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v334 + 8))(v338, v335);
      (*(void (**)(uint64_t, uint64_t))(v340 + 8))(v250, v342);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v44 = (void (*)(void))v0[1];
      goto LABEL_20;
    }
    v233 = (void *)v232;
    swift_bridgeObjectRelease();

    v234 = swift_allocObject();
    *(_QWORD *)(v234 + 16) = v233;
    v235 = v233;
    v236 = v233;
    v237 = sub_2419AA028();
    v238 = sub_2419AA244();
    v239 = swift_allocObject();
    *(_BYTE *)(v239 + 16) = 32;
    v240 = swift_allocObject();
    *(_BYTE *)(v240 + 16) = 8;
    v241 = swift_allocObject();
    *(_QWORD *)(v241 + 16) = sub_24195BEF4;
    *(_QWORD *)(v241 + 24) = v234;
    v242 = swift_allocObject();
    *(_QWORD *)(v242 + 16) = sub_24195BF48;
    *(_QWORD *)(v242 + 24) = v241;
    v243 = swift_allocObject();
    sub_241941890(v243, 3);
    *v244 = sub_24195C3F8;
    v244[1] = v239;
    v244[2] = sub_24195C3F8;
    v244[3] = v240;
    v244[4] = sub_24195BF50;
    v244[5] = v242;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v245 = v238;
    if (os_log_type_enabled(v237, v238))
    {
      v246 = (uint8_t *)swift_slowAlloc();
      v364 = v237;
      v247 = swift_slowAlloc();
      v367[0] = v247;
      *(_WORD *)v246 = 258;
      v246[2] = 32;
      swift_release();
      v246[3] = 8;
      swift_release();
      swift_getErrorValue();
      v248 = sub_2419AA598();
      v0[363] = sub_24193F470(v248, v249, v367);
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      _os_log_impl(&dword_24193B000, v364, v245, "SQL execution error: %s", v246, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v247, -1, -1);
      MEMORY[0x24269F7A0](v246, -1, -1);

    }
    else
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

    }
    v30 = v0[397];
    v262 = v0[388];
    v263 = v0[387];
    v264 = v0[383];
    v265 = v0[382];
    swift_getErrorValue();
    sub_2419AA598();
    sub_24193F23C();
    swift_allocError();
    static BiomeSQLDatabaseUtils.identifySqlError(errorString:)(v266);
    swift_bridgeObjectRelease();
    swift_willThrow();

    swift_release();
    v267 = *(void (**)(uint64_t, uint64_t))(v264 + 8);
    v267(v263, v265);
    v267(v262, v265);
LABEL_19:
    sub_24198EA88(v30, "SiriDigestMetricsCalculatorSP", 29, 2);
    swift_release();
    v41 = v0[397];
    v42 = v0[396];
    v43 = v0[395];
    (*(void (**)(_QWORD, _QWORD))(v0[392] + 8))(v0[394], v0[391]);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v44 = (void (*)(void))v0[1];
LABEL_20:
    v44();
    return;
  }
  v358 = 0;
  v322 = 0;
  v323 = 0;
  v324 = 0;
  v325 = 0;
  v299 = (uint64_t)(v0 + 8);
  v276 = (uint64_t)(v0 + 13);
  v298 = (uint64_t)(v0 + 18);
  v270 = (uint64_t)(v0 + 23);
  v297 = (uint64_t)(v0 + 28);
  v296 = (uint64_t)(v0 + 33);
  v318 = (uint64_t)(v0 + 38);
  v295 = (uint64_t)(v0 + 43);
  v51 = (uint64_t)(v0 + 48);
  v300 = v0[369] + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_oddId;
  v306 = (uint64_t)(v0 + 53);
  v305 = (uint64_t)(v0 + 58);
  v317 = (uint64_t)(v0 + 63);
  v294 = (uint64_t)(v0 + 68);
  v293 = (uint64_t)(v0 + 73);
  v316 = (uint64_t)(v0 + 78);
  v304 = (uint64_t)(v0 + 83);
  v307 = (uint64_t)(v0 + 88);
  v315 = (uint64_t)(v0 + 93);
  v292 = (uint64_t)(v0 + 98);
  v291 = (uint64_t)(v0 + 103);
  v314 = (uint64_t)(v0 + 108);
  v308 = (uint64_t)(v0 + 113);
  v313 = (uint64_t)(v0 + 118);
  v312 = (uint64_t)(v0 + 123);
  v290 = (uint64_t)(v0 + 128);
  v289 = (uint64_t)(v0 + 133);
  v311 = (uint64_t)(v0 + 138);
  v288 = v0 + 143;
  v320 = v0 + 147;
  v287 = v0 + 151;
  v310 = v0 + 159;
  v286 = v0 + 167;
  v319 = v0 + 171;
  v285 = v0 + 175;
  v52 = v0 + 179;
  v284 = v0 + 191;
  v303 = v0 + 195;
  v283 = v0 + 199;
  v309 = v0 + 203;
  v302 = v0 + 207;
  v53 = v0 + 211;
  v301 = v0 + 219;
  v281 = v0 + 235;
  v282 = v0 + 231;
  v269 = v0 + 239;
  v279 = v0 + 247;
  v280 = v0 + 243;
  v359 = v0 + 227;
  v277 = v0 + 398;
  v268 = (unsigned int *)v0 + 799;
  v275 = v0[383];
  v278 = v0[375];
  v357 = (int *)v0[374];
  while (1)
  {
    v65 = sub_2419A9EF0();
    if (!v65)
      goto LABEL_28;
    v66 = v65;
    v360 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95598]), sel_init);
    if (qword_257162A90 != -1)
      swift_once();
    v67 = (void *)qword_25716E860;
    *((_QWORD *)v48 + 338) = 0x61645F746E657665;
    *((_QWORD *)v48 + 339) = 0xEA00000000006574;
    sub_2419AA388();
    v68 = v365 + 155;
    if (*(_QWORD *)(v66 + 16) && (v69 = sub_24195B4F4(v51), (v70 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v66 + 56) + 32 * v69, (uint64_t)v359);
    }
    else
    {
      *v359 = 0u;
      *(_OWORD *)(v365 + 229) = 0u;
    }
    sub_24195BF58(v51);
    if (!*((_QWORD *)v48 + 230))
    {
      sub_241941720((uint64_t)v359, &qword_257163EA0);
      v71 = v365 + 187;
      goto LABEL_52;
    }
    v71 = v365 + 187;
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_52;
    v72 = *((_QWORD *)v48 + 268);
    v73 = *((_QWORD *)v48 + 269);
    v74 = (void *)sub_2419AA0DC();
    v75 = objc_msgSend(v67, sel_dateFromString_, v74);

    if (!v75)
      break;
    v76 = *((_QWORD *)v48 + 385);
    v77 = *((_QWORD *)v48 + 382);
    v78 = *((_QWORD *)v48 + 381);
    sub_2419A9CD4();

    v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v275 + 32);
    v79(v78, v76, v77);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v275 + 56))(v78, 0, 1, v77);
    v80 = v78;
    v52 = v365 + 179;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v275 + 48))(v80, 1, v77) == 1)
      goto LABEL_51;
    v79(*((_QWORD *)v48 + 386), *((_QWORD *)v48 + 381), *((_QWORD *)v48 + 382));
    sub_2419A9C5C();
    if ((sub_2419A9CC8() & 1) != 0)
    {
      v81 = (void *)sub_2419AA0DC();
      v82 = objc_msgSend(v326, sel_BOOLForKey_, v81);

      if ((v82 & 1) == 0)
      {
        v119 = *((_QWORD *)v48 + 386);
        v120 = *((_QWORD *)v48 + 384);
        v121 = *((_QWORD *)v48 + 382);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v122 = *(void (**)(uint64_t, uint64_t))(v275 + 8);
        v122(v120, v121);
        v122(v119, v121);
        v51 = (uint64_t)(v365 + 48);
        goto LABEL_27;
      }
    }
    sub_2419A9CBC();
    v84 = v83;
    if (v83 > -1.0 && v83 < 1.84467441e19 && v83 == trunc(v83))
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v360, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v84);
      v85 = v365 + 163;
      v53 = v365 + 211;
      if (v360)
      {
        *((_QWORD *)v48 + 340) = 0xD000000000000018;
        *((_QWORD *)v48 + 341) = 0x80000002419B1300;
        v86 = v360;
        sub_2419AA388();
        sub_24195AC8C(v270, v66, v269);
        sub_24195BF58(v270);
        if (*((_QWORD *)v48 + 242))
        {
          if (swift_dynamicCast())
            v87 = *v268;
          else
            v87 = 86400;
        }
        else
        {
          v87 = 86400;
          sub_241941720((uint64_t)v269, &qword_257163EA0);
        }
        objc_msgSend(v86, sel_setNumberOfSeconds_, v87, v268);

      }
      v218 = *((_QWORD *)v48 + 386);
      v219 = *((_QWORD *)v48 + 382);
      v220 = *(void (**)(uint64_t, uint64_t))(v275 + 8);
      v220(*((_QWORD *)v48 + 384), v219);
      v220(v218, v219);
      v68 = v365 + 155;
      v71 = v365 + 187;
      goto LABEL_54;
    }
    swift_bridgeObjectRelease();
    v106 = swift_allocObject();
    *(double *)(v106 + 16) = v84;
    v363 = (char *)v106;
    v107 = swift_allocObject();
    v337 = v72;
    *(_QWORD *)(v107 + 16) = v72;
    *(_QWORD *)(v107 + 24) = v73;
    v345 = v73;
    swift_bridgeObjectRetain();
    v353 = sub_2419AA028();
    LODWORD(v354) = sub_2419AA244();
    v108 = swift_allocObject();
    *(_BYTE *)(v108 + 16) = 0;
    v109 = v108;
    v351 = swift_allocObject();
    *(_BYTE *)(v351 + 16) = 8;
    v110 = swift_allocObject();
    *(_QWORD *)(v110 + 16) = sub_24195C028;
    *(_QWORD *)(v110 + 24) = v106;
    v111 = swift_allocObject();
    *(_QWORD *)(v111 + 16) = sub_24195BF48;
    *(_QWORD *)(v111 + 24) = v110;
    v112 = swift_allocObject();
    *(_BYTE *)(v112 + 16) = 32;
    v348 = swift_allocObject();
    *(_BYTE *)(v348 + 16) = 8;
    v113 = swift_allocObject();
    *(_QWORD *)(v113 + 16) = sub_24195C054;
    *(_QWORD *)(v113 + 24) = v107;
    v114 = swift_allocObject();
    *(_QWORD *)(v114 + 16) = sub_24195C3F0;
    *(_QWORD *)(v114 + 24) = v113;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257163E98);
    v115 = swift_allocObject();
    sub_241941890(v115, 6);
    *v116 = sub_24195C3F8;
    v116[1] = v109;
    v116[2] = sub_24195C3F8;
    v116[3] = v351;
    v116[4] = sub_24198F3FC;
    v116[5] = v111;
    v116[6] = sub_24195C3F8;
    v116[7] = v112;
    v116[8] = sub_24195C3F8;
    v116[9] = v348;
    v116[10] = sub_24195C3F4;
    v116[11] = v114;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v117 = v354;
    if (os_log_type_enabled(v353, (os_log_type_t)v354))
    {
      v118 = (uint8_t *)swift_slowAlloc();
      v354 = (void *)swift_slowAlloc();
      v367[0] = (uint64_t)v354;
      *(_WORD *)v118 = 514;
      v118[2] = 0;
      swift_release();
      v118[3] = 8;
      swift_release();
      *v272 = v84;
      sub_2419AA2EC();
      swift_release();
      swift_release();
      swift_release();
      v118[12] = 32;
      swift_release();
      v118[13] = 8;
      swift_release();
      swift_bridgeObjectRetain();
      *v271 = sub_24193F470(v337, v345, v367);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_24193B000, v353, v117, "startTimestamp %f of eventDate %s cannot be cast to UInt64.", v118, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v354, -1, -1);
      MEMORY[0x24269F7A0](v118, -1, -1);

    }
    else
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    v123 = *((_QWORD *)v48 + 386);
    v124 = *((_QWORD *)v48 + 384);
    v125 = *((_QWORD *)v48 + 382);
    v126 = (void *)sub_2419AA0DC();
    *((_QWORD *)v48 + 6) = sub_24198ECDC;
    *((_QWORD *)v48 + 7) = 0;
    *((_QWORD *)v48 + 2) = MEMORY[0x24BDAC760];
    *((_QWORD *)v48 + 3) = 1107296256;
    *((_QWORD *)v48 + 4) = sub_241956C98;
    *((_QWORD *)v48 + 5) = &block_descriptor_4;
    v127 = _Block_copy(v365 + 2);
    AnalyticsSendEventLazy();
    _Block_release(v127);

    v128 = *(void (**)(uint64_t, uint64_t))(v275 + 8);
    v128(v124, v125);
    v128(v123, v125);
LABEL_26:
    v51 = (uint64_t)(v365 + 48);
    v52 = v365 + 179;
LABEL_27:
    v53 = v365 + 211;
LABEL_28:
    if ((sub_2419A9EFC() & 1) == 0)
    {
      v49 = *v321;
      goto LABEL_249;
    }
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v275 + 56))(*((_QWORD *)v48 + 381), 1, 1, *((_QWORD *)v48 + 382));
LABEL_51:
  v88 = *((_QWORD *)v48 + 381);
  swift_bridgeObjectRelease();
  sub_241941720(v88, &qword_257162EF0);
  v68 = v365 + 155;
  v71 = v365 + 187;
  v53 = v365 + 211;
LABEL_52:
  if (__OFADD__(v358, 1))
    goto LABEL_262;
  ++v358;
  v85 = v365 + 163;
LABEL_54:
  *((_QWORD *)v48 + 312) = 0x6C707261635F7369;
  *((_QWORD *)v48 + 313) = 0xEA00000000007961;
  sub_2419AA388();
  sub_24195AC8C(v317, v66, v53);
  sub_24195BF58(v317);
  if (!*((_QWORD *)v48 + 214))
  {
    sub_241941720((uint64_t)v53, &qword_257163EA0);
    goto LABEL_61;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_61:
    v350 = 0;
    v352 = 1;
    goto LABEL_62;
  }
  v352 = *v277 != 1;
  if (*v277 == 1)
    v89 = 5;
  else
    v89 = 0;
  v350 = v89;
LABEL_62:
  *((_QWORD *)v48 + 310) = 0xD000000000000019;
  *((_QWORD *)v48 + 311) = 0x80000002419B11A0;
  sub_2419AA388();
  sub_24195AC8C(v316, v66, v309);
  sub_24195BF58(v316);
  if (*((_QWORD *)v48 + 206))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v90 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v91 = v90;
      if ((objc_msgSend(v91, "isEqualToString:", CFSTR("UNKNOWN")) & 1) != 0)
      {
        v336 = 0;
        v71 = v365 + 187;
        v92 = 0x24BE95000;
      }
      else
      {
        v71 = v365 + 187;
        v92 = 0x24BE95000uLL;
        if ((objc_msgSend(v91, "isEqualToString:", CFSTR("OPTED_IN")) & 1) != 0)
        {
          v93 = 1;
        }
        else if ((objc_msgSend(v91, "isEqualToString:", CFSTR("OPTED_OUT")) & 1) != 0)
        {
          v93 = 2;
        }
        else if (objc_msgSend(v91, "isEqualToString:", CFSTR("DISMISSED")))
        {
          v93 = 3;
        }
        else
        {
          v93 = 0;
        }
        v336 = v93;
      }

      v347 = 0;
      goto LABEL_77;
    }
  }
  else
  {
    sub_241941720((uint64_t)v309, &qword_257163EA0);
  }
  v336 = 0;
  v347 = 1;
  v92 = 0x24BE95000;
LABEL_77:
  strcpy(v48 + 2448, "asr_location");
  v48[2461] = 0;
  *((_WORD *)v48 + 1231) = -5120;
  sub_2419AA388();
  sub_24195AC8C(v315, v66, v71);
  sub_24195BF58(v315);
  if (*((_QWORD *)v48 + 190))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v94 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v95 = v94;
      if ((objc_msgSend(v95, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_UNKNOWN")) & 1) != 0)
      {
        v339 = 0;
      }
      else
      {
        if ((objc_msgSend(v95, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_SERVER")) & 1) != 0)
        {
          v96 = 1;
        }
        else if (objc_msgSend(v95, "isEqualToString:", CFSTR("ORCHSIRIASRMODE_DEVICE")))
        {
          v96 = 2;
        }
        else
        {
          v96 = 0;
        }
        v339 = v96;
      }

      v349 = 0;
    }
    else
    {
      v339 = 0;
      v349 = 1;
    }
  }
  else
  {
    sub_241941720((uint64_t)v71, &qword_257163EA0);
    v339 = 0;
    v349 = 1;
  }
  *((_QWORD *)v48 + 304) = 0x7461636F6C5F6C6ELL;
  *((_QWORD *)v48 + 305) = 0xEB000000006E6F69;
  sub_2419AA388();
  sub_24195AC8C(v314, v66, v52);
  sub_24195BF58(v314);
  if (*((_QWORD *)v48 + 182))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v97 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v98 = v97;
      if ((objc_msgSend(v98, "isEqualToString:", CFSTR("ORCHSIRINLMODE_UNKNOWN")) & 1) != 0)
      {
        v346 = 0;
      }
      else
      {
        if ((objc_msgSend(v98, "isEqualToString:", CFSTR("ORCHSIRINLMODE_NLV3_SERVER")) & 1) != 0)
        {
          v99 = 1;
        }
        else if (objc_msgSend(v98, "isEqualToString:", CFSTR("ORCHSIRINLMODE_NLX_DEVICE")))
        {
          v99 = 2;
        }
        else
        {
          v99 = 0;
        }
        v346 = v99;
      }

      v344 = 0;
    }
    else
    {
      v346 = 0;
      v344 = 1;
    }
  }
  else
  {
    sub_241941720((uint64_t)v52, &qword_257163EA0);
    v346 = 0;
    v344 = 1;
  }
  v363 = (char *)objc_msgSend(objc_allocWithZone(*(Class *)(v92 + 2840)), sel_init);
  *((_QWORD *)v48 + 300) = 0xD000000000000011;
  *((_QWORD *)v48 + 301) = 0x80000002419B02B0;
  sub_2419AA388();
  sub_24195AC8C(v312, v66, v85);
  sub_24195BF58(v312);
  if (*((_QWORD *)v48 + 166))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v100 = (char *)_sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(*((_QWORD *)v48 + 324), *((_QWORD *)v48 + 325));

      swift_bridgeObjectRelease();
      v363 = v100;
    }
  }
  else
  {
    sub_241941720((uint64_t)v85, &qword_257163EA0);
  }
  v101 = objc_msgSend(objc_allocWithZone(*(Class *)(v92 + 2840)), sel_init);
  *((_QWORD *)v48 + 298) = 0xD000000000000015;
  *((_QWORD *)v48 + 299) = 0x80000002419B21E0;
  sub_2419AA388();
  sub_24195AC8C(v311, v66, v68);
  sub_24195BF58(v311);
  if (*((_QWORD *)v48 + 158))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v102 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(*((_QWORD *)v48 + 348), *((_QWORD *)v48 + 349));

      swift_bridgeObjectRelease();
      v101 = v102;
    }
  }
  else
  {
    sub_241941720((uint64_t)v68, &qword_257163EA0);
  }
  strcpy(v48 + 2352, "program_code");
  v48[2365] = 0;
  *((_WORD *)v48 + 1183) = -5120;
  sub_2419AA388();
  sub_24195AC8C(v318, v66, v320);
  sub_24195BF58(v318);
  v354 = v101;
  if (!*((_QWORD *)v48 + 150))
  {
    sub_241941720((uint64_t)v320, &qword_257163EA0);
    goto LABEL_116;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_116:
    v343 = 0;
    v341 = 1;
    goto LABEL_135;
  }
  v103 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v104 = v103;
  if ((objc_msgSend(v104, "isEqualToString:", CFSTR("PROGRAMCODE_UNKNOWN")) & 1) != 0)
  {
    v343 = 0;
  }
  else
  {
    if ((objc_msgSend(v104, "isEqualToString:", CFSTR("PROGRAMCODE_IOS")) & 1) != 0)
    {
      v105 = 1;
    }
    else if ((objc_msgSend(v104, "isEqualToString:", CFSTR("PROGRAMCODE_MACOS")) & 1) != 0)
    {
      v105 = 2;
    }
    else if ((objc_msgSend(v104, "isEqualToString:", CFSTR("PROGRAMCODE_TVOS")) & 1) != 0)
    {
      v105 = 3;
    }
    else if ((objc_msgSend(v104, "isEqualToString:", CFSTR("PROGRAMCODE_WATCHOS")) & 1) != 0)
    {
      v105 = 4;
    }
    else if (objc_msgSend(v104, "isEqualToString:", CFSTR("PROGRAMCODE_VISIONOS")))
    {
      v105 = 5;
    }
    else
    {
      v105 = 0;
    }
    v343 = v105;
  }

  v341 = 0;
LABEL_135:
  v129 = *((_QWORD *)v48 + 380);
  v130 = sub_2419A9D1C();
  v355 = *(_QWORD *)(v130 - 8);
  v131 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v355 + 56);
  v131(v129, 1, 1, v130);
  strcpy(v48 + 2336, "assistant_id");
  v48[2349] = 0;
  *((_WORD *)v48 + 1175) = -5120;
  sub_2419AA388();
  sub_24195AC8C(v313, v66, v310);
  sub_24195BF58(v313);
  if (*((_QWORD *)v48 + 162))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v132 = *((_QWORD *)v48 + 380);
      v133 = *((_QWORD *)v48 + 379);
      sub_2419A9CEC();
      swift_bridgeObjectRelease();
      sub_241941720(v132, &qword_257162D48);
      sub_24195BFD0(v133, v132);
      goto LABEL_141;
    }
  }
  else
  {
    sub_241941720((uint64_t)v310, &qword_257163EA0);
  }
  if (__OFADD__(v325, 1))
    goto LABEL_263;
  ++v325;
LABEL_141:
  v131(*((_QWORD *)v48 + 378), 1, 1, v130);
  *((_QWORD *)v48 + 288) = 0xD000000000000015;
  *((_QWORD *)v48 + 289) = 0x80000002419B0250;
  sub_2419AA388();
  sub_24195AC8C(v308, v66, v319);
  sub_24195BF58(v308);
  if (*((_QWORD *)v48 + 174))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v134 = *((_QWORD *)v48 + 379);
      v135 = *((_QWORD *)v48 + 378);
      sub_2419A9CEC();
      swift_bridgeObjectRelease();
      sub_241941720(v135, &qword_257162D48);
      sub_24195BFD0(v134, v135);
      v136 = v365 + 183;
      goto LABEL_147;
    }
  }
  else
  {
    sub_241941720((uint64_t)v319, &qword_257163EA0);
  }
  v136 = v365 + 183;
  if (__OFADD__(v324, 1))
    goto LABEL_264;
  ++v324;
LABEL_147:
  v131(*((_QWORD *)v48 + 377), 1, 1, v130);
  *((_QWORD *)v48 + 286) = 0xD000000000000013;
  *((_QWORD *)v48 + 287) = 0x80000002419B11E0;
  sub_2419AA388();
  sub_24195AC8C(v307, v66, v136);
  sub_24195BF58(v307);
  if (*((_QWORD *)v48 + 186))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v137 = *((_QWORD *)v48 + 379);
      v138 = *((_QWORD *)v48 + 377);
      sub_2419A9CEC();
      swift_bridgeObjectRelease();
      sub_241941720(v138, &qword_257162D48);
      sub_24195BFD0(v137, v138);
      goto LABEL_153;
    }
  }
  else
  {
    sub_241941720((uint64_t)v136, &qword_257163EA0);
  }
  if (__OFADD__(v323, 1))
    goto LABEL_265;
  ++v323;
LABEL_153:
  *((_QWORD *)v48 + 282) = 0xD000000000000029;
  *((_QWORD *)v48 + 283) = 0x80000002419B1200;
  sub_2419AA388();
  sub_24195AC8C(v304, v66, v303);
  sub_24195BF58(v304);
  if (*((_QWORD *)v48 + 198))
  {
    v139 = swift_dynamicCast();
    v140 = v365[358];
    if (!v139)
      v140 = 0;
    v333 = v140;
    v141 = v139 ^ 1;
  }
  else
  {
    sub_241941720((uint64_t)v303, &qword_257163EA0);
    v333 = 0;
    v141 = 1;
  }
  v332 = v141;
  *((_QWORD *)v48 + 280) = 0xD00000000000002BLL;
  *((_QWORD *)v48 + 281) = 0x80000002419B1230;
  sub_2419AA388();
  sub_24195AC8C(v305, v66, v302);
  sub_24195BF58(v305);
  if (*((_QWORD *)v48 + 210))
  {
    v142 = swift_dynamicCast();
    if (v142)
      v143 = v365[359];
    else
      v143 = 0;
    v144 = v142 ^ 1;
  }
  else
  {
    sub_241941720((uint64_t)v302, &qword_257163EA0);
    v143 = 0;
    v144 = 1;
  }
  v365[276] = 0xD000000000000016;
  v365[277] = 0x80000002419B2200;
  sub_2419AA388();
  sub_24195AC8C(v306, v66, v301);
  sub_24195BF58(v306);
  if (v365[222])
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      SiriReponseCategory.init(rawValue:)(*((Swift::String *)v365 + 173));
      v145 = v365 + 223;
      if (v366 == 20)
        goto LABEL_268;
      LOBYTE(v367[0]) = v366;
      v330 = sub_24196FDA8((char *)v367);
      v328 = 0;
      goto LABEL_171;
    }
  }
  else
  {
    sub_241941720((uint64_t)v301, &qword_257163EA0);
  }
  v145 = v365 + 223;
  if (__OFADD__(v322, 1))
    goto LABEL_266;
  ++v322;
  v330 = 0;
  v328 = 1;
LABEL_171:
  v146 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v147 = objc_msgSend(v146, sel_longLivedIdentifierUploadingEnabled);

  if (v147)
  {
    v365[342] = 0x7364695F6E727574;
    v365[343] = 0xE800000000000000;
    sub_2419AA388();
    sub_24195AC8C(v276, v66, v145);
    sub_24195BF58(v276);
    if (v365[226])
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v327 = _s16MetricsFramework15ExtensionsUtilsC13decodeTurnIdsySay10Foundation4UUIDVGSgSSSgFZ_0(v365[344], v365[345]);
        swift_bridgeObjectRelease();
        goto LABEL_180;
      }
    }
    else
    {
      sub_241941720((uint64_t)v145, &qword_257163EA0);
    }
  }
  else
  {
    v148 = sub_2419AA028();
    v149 = sub_2419AA22C();
    if (os_log_type_enabled(v148, (os_log_type_t)v149))
    {
      v150 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v150 = 0;
      _os_log_impl(&dword_24193B000, v148, (os_log_type_t)v149, "No turnIds found.", v150, 2u);
      MEMORY[0x24269F7A0](v150, -1, -1);
    }

  }
  v327 = 0;
LABEL_180:
  v151 = v365[378];
  v152 = v365[377];
  v153 = v365[376];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v355 + 16))(v153, v300, v130);
  v131(v153, 0, 1, v130);
  sub_2419416DC(v151, v153 + v357[5], &qword_257162D48);
  sub_2419416DC(v152, v153 + v357[6], &qword_257162D48);
  sub_2419A9CBC();
  if ((~*(_QWORD *)&v154 & 0x7FF0000000000000) != 0)
  {
    if (v154 <= -1.0)
      goto LABEL_259;
    if (v154 >= 1.84467441e19)
      goto LABEL_260;
    if (!is_mul_ok((unint64_t)v154, 0x3E8uLL))
      goto LABEL_261;
    v155 = v365[380];
    v156 = v365[379];
    v157 = v365[376];
    v158 = v157 + v357[7];
    *(_QWORD *)v158 = 1000 * (unint64_t)v154;
    *(_BYTE *)(v158 + 8) = 0;
    *(_QWORD *)(v157 + v357[8]) = v360;
    v159 = v157 + v357[9];
    *(_QWORD *)v159 = v333;
    *(_BYTE *)(v159 + 8) = v332;
    v160 = v157 + v357[10];
    *(_QWORD *)v160 = v143;
    *(_BYTE *)(v160 + 8) = v144;
    type metadata accessor for DeviceUsageMetricsBuilderImpl(0);
    swift_allocObject();
    v161 = sub_24199EEFC();
    sub_2419416DC(v155, v156, &qword_257162D48);
    v162 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_assistantId;
    swift_beginAccess();
    v163 = v360;
    sub_24195BF8C(v156, v162, &qword_257162D48);
    swift_endAccess();
    v365[274] = 0x5F746375646F7270;
    v365[275] = 0xEA00000000006469;
    sub_2419AA388();
    sub_24195AC8C(v296, v66, v281);
    sub_24195BF58(v296);
    v361 = v163;
    if (v365[238])
    {
      v164 = v365 + 215;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v165 = v365[337];
        if (v165)
        {
          v166 = v365[336];
          if (v166 == 0x4E41545349535341 && v165 == 0xE900000000000054 || (sub_2419AA574() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v167 = 1;
LABEL_237:
            v164 = v365 + 215;
            goto LABEL_192;
          }
          if (v166 == 0x4F49544154434944 && v165 == 0xE90000000000004ELL)
          {
            swift_bridgeObjectRelease();
            v167 = 2;
            goto LABEL_237;
          }
          v217 = sub_2419AA574();
          swift_bridgeObjectRelease();
          v164 = v365 + 215;
          if ((v217 & 1) != 0)
          {
            v167 = 2;
            goto LABEL_192;
          }
        }
      }
    }
    else
    {
      sub_241941720((uint64_t)v281, &qword_257163EA0);
      v164 = v365 + 215;
    }
    v167 = 0;
LABEL_192:
    v168 = v365[376];
    v169 = v365[374];
    v170 = v365[371];
    v171 = v365[370];
    *(_BYTE *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_productId) = v167;
    sub_241943C64(v168, v170, type metadata accessor for EventMetadata);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v278 + 56))(v170, 0, 1, v169);
    sub_2419416DC(v170, v171, &qword_257163E60);
    v172 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_eventMetadata;
    swift_beginAccess();
    sub_24195BF8C(v171, v172, &qword_257163E60);
    swift_endAccess();
    sub_241941720(v170, &qword_257163E60);
    v365[270] = 0x745F656369766564;
    v365[271] = 0xEB00000000657079;
    sub_2419AA388();
    sub_24195AC8C(v297, v66, v279);
    sub_24195BF58(v297);
    if (v365[250])
    {
      v173 = swift_dynamicCast();
      v174 = v365[334];
      v175 = v365[335];
      if (!v173)
      {
        v174 = 0;
        v175 = 0;
      }
    }
    else
    {
      sub_241941720((uint64_t)v279, &qword_257163EA0);
      v174 = 0;
      v175 = 0;
    }
    v176 = (_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_deviceType);
    *v176 = v174;
    v176[1] = v175;
    swift_bridgeObjectRelease();
    strcpy((char *)v365 + 2128, "system_build");
    *((_BYTE *)v365 + 2141) = 0;
    *((_WORD *)v365 + 1071) = -5120;
    sub_2419AA388();
    sub_24195AC8C(v299, v66, v282);
    sub_24195BF58(v299);
    if (v365[234])
    {
      v177 = swift_dynamicCast();
      v178 = v365[332];
      v179 = v365[333];
      if (!v177)
      {
        v178 = 0;
        v179 = 0;
      }
    }
    else
    {
      sub_241941720((uint64_t)v282, &qword_257163EA0);
      v178 = 0;
      v179 = 0;
    }
    v180 = (_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_systemBuild);
    *v180 = v178;
    v180[1] = v179;
    swift_bridgeObjectRelease();
    v181 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_programCode;
    *(_DWORD *)v181 = v343;
    *(_BYTE *)(v181 + 4) = v341;
    v182 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dataSharingOptInStatus;
    *(_DWORD *)v182 = v336;
    *(_BYTE *)(v182 + 4) = v347;
    v183 = *(void **)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriInputLocale);
    *(_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriInputLocale) = v363;
    v363 = v363;

    v184 = *(void **)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dictationLocale);
    *(_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dictationLocale) = v354;
    v356 = v354;

    v185 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_viewInterface;
    *(_DWORD *)v185 = v350;
    *(_BYTE *)(v185 + 4) = v352;
    v365[272] = 0xD000000000000012;
    v365[273] = 0x80000002419B1260;
    sub_2419AA388();
    sub_24195AC8C(v298, v66, v287);
    sub_24195BF58(v298);
    if (v365[154])
    {
      v186 = swift_dynamicCast();
      v187 = v365[330];
      v188 = v365[331];
      if (!v186)
      {
        v187 = 0;
        v188 = 0;
      }
    }
    else
    {
      sub_241941720((uint64_t)v287, &qword_257163EA0);
      v187 = 0;
      v188 = 0;
    }
    v189 = (_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_audioInterfaceVendorId);
    *v189 = v187;
    v189[1] = v188;
    swift_bridgeObjectRelease();
    v365[278] = 0xD000000000000013;
    v365[279] = 0x80000002419B1280;
    sub_2419AA388();
    sub_24195AC8C(v295, v66, v280);
    sub_24195BF58(v295);
    if (v365[246])
    {
      v190 = swift_dynamicCast();
      v191 = v365[328];
      v192 = v365[329];
      if (!v190)
      {
        v191 = 0;
        v192 = 0;
      }
    }
    else
    {
      sub_241941720((uint64_t)v280, &qword_257163EA0);
      v191 = 0;
      v192 = 0;
    }
    v193 = (_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_audioInterfaceProductId);
    *v193 = v191;
    v193[1] = v192;
    swift_bridgeObjectRelease();
    v194 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrLocation;
    *(_DWORD *)v194 = v339;
    *(_BYTE *)(v194 + 4) = v349;
    v195 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_nlLocation;
    *(_DWORD *)v195 = v346;
    *(_BYTE *)(v195 + 4) = v344;
    v365[284] = 0x616D6F645F627573;
    v365[285] = 0xEA00000000006E69;
    sub_2419AA388();
    sub_24195AC8C(v293, v66, v164);
    sub_24195BF58(v293);
    if (v365[218])
    {
      v196 = swift_dynamicCast();
      v197 = v365[326];
      v198 = v365[327];
      if (!v196)
      {
        v197 = 0;
        v198 = 0;
      }
    }
    else
    {
      sub_241941720((uint64_t)v164, &qword_257163EA0);
      v197 = 0;
      v198 = 0;
    }
    v199 = (_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_subDomain);
    *v199 = v197;
    v199[1] = v198;
    swift_bridgeObjectRelease();
    v365[290] = 0x746E635F6E727574;
    v365[291] = 0xE800000000000000;
    sub_2419AA388();
    sub_24195AC8C(v291, v66, v284);
    sub_24195BF58(v291);
    if (v365[194])
    {
      v200 = swift_dynamicCast();
      v201 = *((_DWORD *)v365 + 800);
      if (!v200)
        v201 = 0;
      v202 = v200 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)v284, &qword_257163EA0);
      v201 = 0;
      v202 = 1;
    }
    v203 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_totalTurnCount;
    *(_DWORD *)v203 = v201;
    *(_BYTE *)(v203 + 4) = v202;
    strcpy((char *)v365 + 2368, "user_turn_cnt");
    *((_WORD *)v365 + 1191) = -4864;
    sub_2419AA388();
    sub_24195AC8C(v289, v66, v286);
    sub_24195BF58(v289);
    if (v365[170])
    {
      v204 = swift_dynamicCast();
      v205 = *((_DWORD *)v365 + 798);
      if (!v204)
        v205 = 0;
      v206 = v204 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)v286, &qword_257163EA0);
      v205 = 0;
      v206 = 1;
    }
    v207 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_validTurnCount;
    *(_DWORD *)v207 = v205;
    *(_BYTE *)(v207 + 4) = v206;
    strcpy((char *)v365 + 2416, "asr_turn_cnt");
    *((_BYTE *)v365 + 2429) = 0;
    *((_WORD *)v365 + 1215) = -5120;
    sub_2419AA388();
    sub_24195AC8C(v290, v66, v288);
    sub_24195BF58(v290);
    if (v365[146])
    {
      v208 = swift_dynamicCast();
      v209 = *((_DWORD *)v365 + 797);
      if (!v208)
        v209 = 0;
      v210 = v208 ^ 1;
    }
    else
    {
      sub_241941720((uint64_t)v288, &qword_257163EA0);
      v209 = 0;
      v210 = 1;
    }
    v211 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrTurnCount;
    *(_DWORD *)v211 = v209;
    *(_BYTE *)(v211 + 4) = v210;
    v365[308] = 0xD000000000000014;
    v365[309] = 0x80000002419B2220;
    sub_2419AA388();
    sub_24195AC8C(v292, v66, v285);
    sub_24195BF58(v292);
    if (v365[178])
    {
      v212 = swift_dynamicCast();
      v213 = v365[318];
      v214 = v365[319];
      if (!v212)
      {
        v213 = 0;
        v214 = 0;
      }
    }
    else
    {
      sub_241941720((uint64_t)v285, &qword_257163EA0);
      v213 = 0;
      v214 = 0;
    }
    v215 = (_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriResponseId);
    *v215 = v213;
    v215[1] = v214;
    swift_bridgeObjectRelease();
    v216 = v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_responseCategory;
    *(_DWORD *)v216 = v330;
    *(_BYTE *)(v216 + 4) = v328;
    *(_QWORD *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_turnIds) = v327;
    swift_bridgeObjectRelease();
    v365[314] = 0xD00000000000001BLL;
    v365[315] = 0x80000002419B2240;
    sub_2419AA388();
    sub_24195AC8C(v294, v66, v283);
    swift_bridgeObjectRelease();
    sub_24195BF58(v294);
    if (v365[202])
    {
      v54 = swift_dynamicCast();
      v55 = *((_BYTE *)v365 + 3204);
      if (!v54)
        v55 = 2;
    }
    else
    {
      sub_241941720((uint64_t)v283, &qword_257163EA0);
      v55 = 2;
    }
    v56 = v365[380];
    v57 = v365[378];
    v58 = v365[377];
    v59 = v365[376];
    v60 = v365[373];
    v61 = v365[372];
    *(_BYTE *)(v161 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_isIntelligenceEngineRequest) = v55;
    sub_24199E8A4(v60);
    swift_release();
    sub_241943C64(v60, v61, type metadata accessor for DeviceUsageMetrics);
    sub_24195B32C();
    v62 = *(_QWORD *)(v365[365] + 16);
    sub_24195B38C(v62);
    v63 = v62;
    v48 = (char *)v365;
    v64 = sub_24195B3CC(v63, v61);
    nullsub_1(v64);

    sub_241943CA8(v60, type metadata accessor for DeviceUsageMetrics);
    sub_241943CA8(v59, type metadata accessor for EventMetadata);
    sub_241941720(v58, &qword_257162D48);
    sub_241941720(v57, &qword_257162D48);
    sub_241941720(v56, &qword_257162D48);
    goto LABEL_26;
  }
  __break(1u);
LABEL_259:
  __break(1u);
LABEL_260:
  __break(1u);
LABEL_261:
  __break(1u);
LABEL_262:
  __break(1u);
LABEL_263:
  __break(1u);
LABEL_264:
  __break(1u);
LABEL_265:
  __break(1u);
LABEL_266:
  __break(1u);
LABEL_267:
  __break(1u);
LABEL_268:

  __break(1u);
}

uint64_t sub_24198EA88(uint64_t a1, const char *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  uint64_t result;
  const char *v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  int v22;
  int v23;
  char *v24;
  char v25;

  v23 = a4;
  v24 = (char *)a2;
  v4 = sub_2419A9FEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2419A9FBC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  v15 = sub_2419A9FC8();
  sub_2419A9FF8();
  v22 = sub_2419AA25C();
  result = sub_2419AA2B0();
  if ((result & 1) == 0)
    goto LABEL_5;
  if ((v23 & 1) == 0)
  {
    if (!v24)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v24 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v24 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v24 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v24 = &v25;
LABEL_10:
  swift_retain();
  sub_2419AA01C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x24BEE7810])
  {
    v17 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = "";
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v18 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v18 = 0;
  v19 = sub_2419A9FB0();
  _os_signpost_emit_with_name_impl(&dword_24193B000, v15, (os_signpost_type_t)v22, v19, v24, v17, v18, 2u);
  MEMORY[0x24269F7A0](v18, -1, -1);

  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v12, v8);
}

unint64_t sub_24198ECDC()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257163FD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2419AB050;
  *(_QWORD *)(inited + 32) = 0xD000000000000018;
  *(_QWORD *)(inited + 40) = 0x80000002419B13A0;
  sub_24198F5EC();
  *(_QWORD *)(inited + 48) = sub_2419AA2A4();
  return sub_24194D8A4(inited);
}

void sub_24198ED68(uint64_t a1, uint64_t a2, unint64_t a3)
{
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  uint64_t aBlock[6];

  if (a1 >= 1)
  {
    swift_bridgeObjectRetain_n();
    v6 = sub_2419AA028();
    v7 = sub_2419AA244();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      aBlock[0] = v9;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_24193F470(a2, a3, aBlock);
      sub_2419AA2EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24193B000, v6, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v9, -1, -1);
      MEMORY[0x24269F7A0](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v10 = (void *)sub_2419AA0DC();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a2;
    v11[3] = a3;
    v11[4] = a1;
    aBlock[4] = (uint64_t)sub_24195C3E4;
    aBlock[5] = (uint64_t)v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241956C98;
    aBlock[3] = (uint64_t)&block_descriptor_76;
    v12 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v12);

  }
}

uint64_t SiriDigestMetricsCalculator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_sqlFileURL, &qword_257162CF0);
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_calendar;
  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t SiriDigestMetricsCalculator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_sqlFileURL, &qword_257162CF0);
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_calendar;
  v6 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t sub_24198F130(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24193D468;
  return sub_24198AB7C(a1);
}

id sub_24198F184()
{
  id result;

  result = sub_24198F1A0();
  qword_25716E860 = (uint64_t)result;
  return result;
}

id sub_24198F1A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571650A8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v4 = (void *)sub_2419AA0DC();
  objc_msgSend(v3, sel_setDateFormat_, v4);

  sub_2419A9D70();
  v5 = sub_2419A9D88();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
  {
    v7 = (void *)sub_2419A9D7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
  }
  objc_msgSend(v3, sel_setTimeZone_, v7);

  return v3;
}

char *sub_24198F2D0()
{
  char v1;

  return &v1;
}

uint64_t sub_24198F2E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24198F304()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t sub_24198F310()
{
  return swift_deallocObject();
}

uint64_t sub_24198F320()
{
  return swift_deallocObject();
}

uint64_t sub_24198F330@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_24193FB9C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_24198F338()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24198F35C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_24193FAB0(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_24198F364()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24198F388()
{
  return swift_deallocObject();
}

uint64_t sub_24198F398()
{
  return swift_deallocObject();
}

uint64_t sub_24198F3A8()
{
  return swift_deallocObject();
}

uint64_t sub_24198F3B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24198F3DC()
{
  return swift_deallocObject();
}

uint64_t sub_24198F3EC()
{
  return swift_deallocObject();
}

uint64_t sub_24198F3FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_24195B440(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

uint64_t sub_24198F404()
{
  return swift_deallocObject();
}

uint64_t sub_24198F414()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for SiriDigestMetricsResults()
{
  return &type metadata for SiriDigestMetricsResults;
}

uint64_t sub_24198F44C()
{
  return type metadata accessor for SiriDigestMetricsCalculator();
}

uint64_t type metadata accessor for SiriDigestMetricsCalculator()
{
  uint64_t result;

  result = qword_257165F40;
  if (!qword_257165F40)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24198F490()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2419415E0();
  if (v0 <= 0x3F)
  {
    sub_2419AA040();
    if (v1 <= 0x3F)
    {
      sub_2419A9D1C();
      if (v2 <= 0x3F)
      {
        sub_2419A9D64();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for SiriDigestMetricsCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDigestMetricsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SiriDigestMetricsCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 136) + *(_QWORD *)(*(_QWORD *)v2 + 136));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

unint64_t sub_24198F5EC()
{
  unint64_t result;

  result = qword_257163FE0;
  if (!qword_257163FE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257163FE0);
  }
  return result;
}

uint64_t sub_24198F628()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24198F670(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24198F6AC + 4 * byte_2419AEE10[a1]))(0xD000000000000015, 0x80000002419B0250);
}

uint64_t sub_24198F6AC()
{
  return 0x7465537465737361;
}

uint64_t sub_24198F6D0()
{
  return 0x69745F746E657665;
}

uint64_t sub_24198F6F4()
{
  return 0x745F656369766564;
}

uint64_t sub_24198F714()
{
  return 0x625F6D6574737973;
}

uint64_t sub_24198F734()
{
  return 0x5F6D6172676F7270;
}

unint64_t sub_24198F754()
{
  return 0xD000000000000011;
}

uint64_t sub_24198F770()
{
  uint64_t v0;

  return v0 + 27;
}

uint64_t sub_24198F798()
{
  return 0x644964646FLL;
}

uint64_t sub_24198F7AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24198F7E8 + 4 * byte_2419AEE1A[a1]))(0xD000000000000015, 0x80000002419B0250);
}

uint64_t sub_24198F7E8()
{
  return 0x7465537465737361;
}

uint64_t sub_24198F80C()
{
  return 0x69745F746E657665;
}

uint64_t sub_24198F830()
{
  return 0x745F656369766564;
}

uint64_t sub_24198F850()
{
  return 0x625F6D6574737973;
}

uint64_t sub_24198F870()
{
  return 0x5F6D6172676F7270;
}

unint64_t sub_24198F890()
{
  return 0xD000000000000011;
}

uint64_t sub_24198F8AC()
{
  uint64_t v0;

  return v0 + 27;
}

uint64_t sub_24198F8D4()
{
  return 0x644964646FLL;
}

uint64_t sub_24198F8E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_24198F670(*a1);
  v5 = v4;
  if (v3 == sub_24198F670(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_2419AA574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24198F970()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2419AA5EC();
  sub_24198F670(v1);
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_24198F9D0()
{
  unsigned __int8 *v0;

  sub_24198F670(*v0);
  sub_2419AA148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24198FA10()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2419AA5EC();
  sub_24198F670(v1);
  sub_2419AA148();
  swift_bridgeObjectRelease();
  return sub_2419AA61C();
}

uint64_t sub_24198FA6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2419928D4();
  *a1 = result;
  return result;
}

uint64_t sub_24198FA98@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_24198F670(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24198FAC0()
{
  unsigned __int8 *v0;

  return sub_24198F7AC(*v0);
}

uint64_t sub_24198FAC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2419928D4();
  *a1 = result;
  return result;
}

void sub_24198FAEC(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

void sub_24198FAF8(_QWORD *a1@<X8>)
{
  *a1 = &unk_2511C4078;
}

uint64_t sub_24198FB08()
{
  sub_241990F6C();
  return sub_2419AA658();
}

uint64_t sub_24198FB30()
{
  sub_241990F6C();
  return sub_2419AA664();
}

unint64_t sub_24198FB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = sub_2419AA040();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_2419A9D1C();
  v28 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257166118);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AssetPenetrationData();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v26 - v18;
  if ((sub_2419A9EFC() & 1) != 0)
  {
    v29 = v17;
    v30 = v13;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v21 = MEMORY[0x24BEE4AF8];
    v27 = a2;
    v28 = a3;
    v20(v9, a2, v31);
    while (1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v7, a3, v33);
      v22 = swift_retain();
      sub_24198FDF4(v22, (uint64_t)v9, (uint64_t)v7, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v30) == 1)
      {
        sub_241941720((uint64_t)v12, &qword_257166118);
        if ((sub_2419A9EFC() & 1) == 0)
          return v21;
      }
      else
      {
        sub_24199291C((uint64_t)v12, (uint64_t)v19);
        sub_2419730F0((uint64_t)v19, (uint64_t)v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_241980870(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
        v24 = *(_QWORD *)(v21 + 16);
        v23 = *(_QWORD *)(v21 + 24);
        if (v24 >= v23 >> 1)
          v21 = sub_241980870(v23 > 1, v24 + 1, 1, v21);
        *(_QWORD *)(v21 + 16) = v24 + 1;
        sub_24199291C((uint64_t)v29, v21+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v24);
        sub_241973134((uint64_t)v19);
        a2 = v27;
        a3 = v28;
        if ((sub_2419A9EFC() & 1) == 0)
          return v21;
      }
      v20(v9, a2, v31);
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24198FDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126[4];
  __int128 v127;
  __int128 v128;

  v8 = sub_2419AA118();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2419A9EF0();
  if (v12)
  {
    v13 = v12;
    *(_QWORD *)&v127 = 0xD000000000000015;
    *((_QWORD *)&v127 + 1) = 0x80000002419B0250;
    sub_2419AA388();
    if (*(_QWORD *)(v13 + 16) && (v14 = sub_24195B4F4((uint64_t)v126), (v15 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v127);
    }
    else
    {
      v127 = 0u;
      v128 = 0u;
    }
    sub_24195BF58((uint64_t)v126);
    if (*((_QWORD *)&v128 + 1))
    {
      v16 = swift_dynamicCast();
      if (v16)
        v17 = v124;
      else
        v17 = 0;
      if (v16)
        v18 = v125;
      else
        v18 = 0;
      v120 = v18;
      v121 = v17;
    }
    else
    {
      sub_241941720((uint64_t)&v127, &qword_257163EA0);
      v120 = 0;
      v121 = 0;
    }
    v124 = 0x7465537465737361;
    v125 = 0xEF64616F6C796150;
    sub_2419AA388();
    if (*(_QWORD *)(v13 + 16) && (v26 = sub_24195B4F4((uint64_t)v126), (v27 & 1) != 0))
    {
      sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v26, (uint64_t)&v127);
    }
    else
    {
      v127 = 0u;
      v128 = 0u;
    }
    sub_24195BF58((uint64_t)v126);
    v123 = a1;
    if (*((_QWORD *)&v128 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_2419AA10C();
        v28 = sub_2419AA0F4();
        v30 = v29;
        swift_bridgeObjectRelease();
        v31 = *(void (**)(char *, uint64_t))(v9 + 8);
        v32 = v30;
        v33 = v8;
        v34 = v28;
        v31(v11, v33);
LABEL_27:
        sub_2419A9BF0();
        swift_allocObject();
        sub_2419A9BE4();
        if (v32 >> 60 == 15)
          v35 = 0;
        else
          v35 = v34;
        if (v32 >> 60 == 15)
          v36 = 0xC000000000000000;
        else
          v36 = v32;
        v122 = v34;
        sub_241992960(v34, v32);
        sub_2419915AC();
        sub_2419A9BD8();
        swift_release();
        sub_24195F3B4(v35, v36);
        v118 = v126[1];
        v119 = v126[0];
        v117 = v126[2];
        v116 = v126[3];
        *(_QWORD *)&v127 = 0x69745F746E657665;
        *((_QWORD *)&v127 + 1) = 0xEF706D617473656DLL;
        sub_2419AA388();
        if (*(_QWORD *)(v13 + 16) && (v37 = sub_24195B4F4((uint64_t)v126), (v38 & 1) != 0))
        {
          sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v37, (uint64_t)&v127);
        }
        else
        {
          v127 = 0u;
          v128 = 0u;
        }
        sub_24195BF58((uint64_t)v126);
        if (*((_QWORD *)&v128 + 1))
        {
          v39 = swift_dynamicCast();
          v40 = v124;
          if (!v39)
            v40 = 0;
          v115 = v40;
          if (v39)
            v41 = v125;
          else
            v41 = 0;
          v114 = v41;
        }
        else
        {
          sub_241941720((uint64_t)&v127, &qword_257163EA0);
          v115 = 0;
          v114 = 0;
        }
        *(_QWORD *)&v127 = 0x745F656369766564;
        *((_QWORD *)&v127 + 1) = 0xEB00000000657079;
        sub_2419AA388();
        if (*(_QWORD *)(v13 + 16) && (v42 = sub_24195B4F4((uint64_t)v126), (v43 & 1) != 0))
        {
          sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v42, (uint64_t)&v127);
        }
        else
        {
          v127 = 0u;
          v128 = 0u;
        }
        sub_24195BF58((uint64_t)v126);
        if (*((_QWORD *)&v128 + 1))
        {
          v44 = swift_dynamicCast();
          v45 = v124;
          if (!v44)
            v45 = 0;
          v113 = v45;
          if (v44)
            v46 = v125;
          else
            v46 = 0;
          v112 = v46;
        }
        else
        {
          sub_241941720((uint64_t)&v127, &qword_257163EA0);
          v113 = 0;
          v112 = 0;
        }
        strcpy((char *)&v127, "system_build");
        BYTE13(v127) = 0;
        HIWORD(v127) = -5120;
        sub_2419AA388();
        if (*(_QWORD *)(v13 + 16) && (v47 = sub_24195B4F4((uint64_t)v126), (v48 & 1) != 0))
        {
          sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v47, (uint64_t)&v127);
        }
        else
        {
          v127 = 0u;
          v128 = 0u;
        }
        sub_24195BF58((uint64_t)v126);
        if (*((_QWORD *)&v128 + 1))
        {
          v49 = swift_dynamicCast();
          v50 = v124;
          if (!v49)
            v50 = 0;
          v111 = v50;
          if (v49)
            v51 = v125;
          else
            v51 = 0;
          v110 = v51;
        }
        else
        {
          sub_241941720((uint64_t)&v127, &qword_257163EA0);
          v111 = 0;
          v110 = 0;
        }
        strcpy((char *)&v127, "program_code");
        BYTE13(v127) = 0;
        HIWORD(v127) = -5120;
        sub_2419AA388();
        if (*(_QWORD *)(v13 + 16) && (v52 = sub_24195B4F4((uint64_t)v126), (v53 & 1) != 0))
        {
          sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v52, (uint64_t)&v127);
        }
        else
        {
          v127 = 0u;
          v128 = 0u;
        }
        sub_24195BF58((uint64_t)v126);
        if (*((_QWORD *)&v128 + 1))
        {
          v54 = swift_dynamicCast();
          v55 = v124;
          if (!v54)
            v55 = 0;
          v109 = v55;
          if (v54)
            v56 = v125;
          else
            v56 = 0;
          v108 = v56;
        }
        else
        {
          sub_241941720((uint64_t)&v127, &qword_257163EA0);
          v109 = 0;
          v108 = 0;
        }
        *(_QWORD *)&v127 = 0xD000000000000011;
        *((_QWORD *)&v127 + 1) = 0x80000002419B02B0;
        sub_2419AA388();
        if (*(_QWORD *)(v13 + 16) && (v57 = sub_24195B4F4((uint64_t)v126), (v58 & 1) != 0))
        {
          sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v57, (uint64_t)&v127);
        }
        else
        {
          v127 = 0u;
          v128 = 0u;
        }
        sub_24195BF58((uint64_t)v126);
        if (*((_QWORD *)&v128 + 1))
        {
          v59 = swift_dynamicCast();
          v60 = v124;
          if (!v59)
            v60 = 0;
          v107 = v60;
          if (v59)
            v61 = v125;
          else
            v61 = 0;
          v106 = v61;
        }
        else
        {
          sub_241941720((uint64_t)&v127, &qword_257163EA0);
          v107 = 0;
          v106 = 0;
        }
        *(_QWORD *)&v127 = 0xD000000000000013;
        *((_QWORD *)&v127 + 1) = 0x80000002419B00C0;
        sub_2419AA388();
        if (*(_QWORD *)(v13 + 16) && (v62 = sub_24195B4F4((uint64_t)v126), (v63 & 1) != 0))
        {
          sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v62, (uint64_t)&v127);
        }
        else
        {
          v127 = 0u;
          v128 = 0u;
        }
        sub_24195BF58((uint64_t)v126);
        if (*((_QWORD *)&v128 + 1))
        {
          v64 = swift_dynamicCast();
          v65 = v124;
          if (!v64)
            v65 = 0;
          v105 = v65;
          if (v64)
            v66 = v125;
          else
            v66 = 0;
          v104 = v66;
        }
        else
        {
          sub_241941720((uint64_t)&v127, &qword_257163EA0);
          v105 = 0;
          v104 = 0;
        }
        *(_QWORD *)&v127 = 0xD00000000000002CLL;
        *((_QWORD *)&v127 + 1) = 0x80000002419B0120;
        sub_2419AA388();
        if (*(_QWORD *)(v13 + 16) && (v67 = sub_24195B4F4((uint64_t)v126), (v68 & 1) != 0))
        {
          sub_24193D1D0(*(_QWORD *)(v13 + 56) + 32 * v67, (uint64_t)&v127);
        }
        else
        {
          v127 = 0u;
          v128 = 0u;
        }
        sub_24195BF58((uint64_t)v126);
        if (*((_QWORD *)&v128 + 1))
        {
          v69 = swift_dynamicCast();
          v70 = v124;
          if (!v69)
            v70 = 0;
          v103 = v70;
          v71 = v69 ^ 1;
        }
        else
        {
          sub_241941720((uint64_t)&v127, &qword_257163EA0);
          v103 = 0;
          v71 = 1;
        }
        v102 = v71;
        v72 = swift_bridgeObjectRetain();
        sub_24196C220(v72, v13);
        v74 = v73;
        swift_bridgeObjectRelease_n();
        v126[0] = v74;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257164A20);
        sub_24196C594((unint64_t *)&qword_257164A28, &qword_257164A20, MEMORY[0x24BEE12B0]);
        v75 = sub_2419AA0A0();
        v77 = v76;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v78 = sub_2419AA028();
        v79 = sub_2419AA250();
        if (os_log_type_enabled(v78, v79))
        {
          v100 = v32;
          v80 = swift_slowAlloc();
          v101 = a3;
          v81 = a2;
          v82 = (uint8_t *)v80;
          v83 = swift_slowAlloc();
          v126[0] = v83;
          *(_DWORD *)v82 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)&v127 = sub_24193F470(v75, v77, v126);
          sub_2419AA2EC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_24193B000, v78, v79, "Asset Set Status query result yielded: \n{%s}", v82, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24269F7A0](v83, -1, -1);
          v84 = v82;
          a2 = v81;
          MEMORY[0x24269F7A0](v84, -1, -1);

          swift_release();
          sub_24196FD80(v122, v100);
          v85 = sub_2419AA040();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v101, v85);
        }
        else
        {
          sub_24196FD80(v122, v32);

          swift_release();
          swift_bridgeObjectRelease_n();
          v86 = sub_2419AA040();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(a3, v86);
        }
        v87 = v120;
        *(_QWORD *)a4 = v121;
        *(_QWORD *)(a4 + 8) = v87;
        v88 = v118;
        *(_QWORD *)(a4 + 16) = v119;
        *(_QWORD *)(a4 + 24) = v88;
        v89 = v116;
        *(_QWORD *)(a4 + 32) = v117;
        *(_QWORD *)(a4 + 40) = v89;
        v90 = v114;
        *(_QWORD *)(a4 + 48) = v115;
        *(_QWORD *)(a4 + 56) = v90;
        v91 = v112;
        *(_QWORD *)(a4 + 64) = v113;
        *(_QWORD *)(a4 + 72) = v91;
        v92 = v110;
        *(_QWORD *)(a4 + 80) = v111;
        *(_QWORD *)(a4 + 88) = v92;
        v93 = v108;
        *(_QWORD *)(a4 + 96) = v109;
        *(_QWORD *)(a4 + 104) = v93;
        v94 = v106;
        *(_QWORD *)(a4 + 112) = v107;
        *(_QWORD *)(a4 + 120) = v94;
        v95 = v104;
        *(_QWORD *)(a4 + 128) = v105;
        *(_QWORD *)(a4 + 136) = v95;
        *(_QWORD *)(a4 + 144) = v103;
        *(_BYTE *)(a4 + 152) = v102;
        v96 = type metadata accessor for AssetPenetrationData();
        v97 = a4 + *(int *)(v96 + 52);
        v98 = sub_2419A9D1C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v97, a2, v98);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(a4, 0, 1, v96);
      }
    }
    else
    {
      sub_241941720((uint64_t)&v127, &qword_257163EA0);
    }
    v34 = 0;
    v32 = 0xF000000000000000;
    goto LABEL_27;
  }
  v19 = sub_2419AA028();
  v20 = sub_2419AA250();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_24193B000, v19, v20, "failed to get row", v21, 2u);
    MEMORY[0x24269F7A0](v21, -1, -1);
  }

  swift_release();
  v22 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a3, v22);
  v23 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a2, v23);
  v24 = type metadata accessor for AssetPenetrationData();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a4, 1, 1, v24);
}

uint64_t AssetPenetrationData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  _BYTE v11[16];
  __int128 v12;
  __int128 v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257166008);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241990F6C();
  sub_2419AA64C();
  LOBYTE(v12) = 0;
  sub_2419AA4F0();
  if (!v2)
  {
    v9 = *(_OWORD *)(v3 + 32);
    v12 = *(_OWORD *)(v3 + 16);
    v13 = v9;
    v11[15] = 1;
    sub_241990FB0();
    sub_2419AA508();
    LOBYTE(v12) = 2;
    sub_2419AA4F0();
    LOBYTE(v12) = 3;
    sub_2419AA4F0();
    LOBYTE(v12) = 4;
    sub_2419AA4F0();
    LOBYTE(v12) = 5;
    sub_2419AA4F0();
    LOBYTE(v12) = 6;
    sub_2419AA4F0();
    LOBYTE(v12) = 7;
    sub_2419AA520();
    LOBYTE(v12) = 8;
    sub_2419AA4F0();
    type metadata accessor for AssetPenetrationData();
    LOBYTE(v12) = 9;
    sub_2419A9D1C();
    sub_2419915F0(&qword_257166020, MEMORY[0x24BDCEA70]);
    sub_2419AA544();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_241990F6C()
{
  unint64_t result;

  result = qword_257166010;
  if (!qword_257166010)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AF034, &type metadata for AssetPenetrationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257166010);
  }
  return result;
}

unint64_t sub_241990FB0()
{
  unint64_t result;

  result = qword_257166018;
  if (!qword_257166018)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC7A0, &type metadata for AssetPenetrationPayload);
    atomic_store(result, (unint64_t *)&qword_257166018);
  }
  return result;
}

uint64_t type metadata accessor for AssetPenetrationData()
{
  uint64_t result;

  result = qword_257166098;
  if (!qword_257166098)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AssetPenetrationData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v34 = a2;
  v3 = sub_2419A9D1C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257166028);
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AssetPenetrationData();
  MEMORY[0x24BDAC7A8](v10);
  v39 = (_QWORD *)((char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_241990F6C();
  v35 = v9;
  v13 = v38;
  sub_2419AA640();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  v30 = v10;
  v31 = v4;
  v32 = v6;
  v33 = v3;
  LOBYTE(v40) = 0;
  v14 = sub_2419AA46C();
  v15 = v39;
  *v39 = v14;
  v15[1] = v16;
  v44 = 1;
  sub_2419915AC();
  sub_2419AA490();
  v17 = v41;
  v18 = v42;
  v19 = v43;
  v29[0] = v40;
  v29[1] = v41;
  v15[2] = v40;
  v15[3] = v17;
  v15[4] = v18;
  v15[5] = v19;
  v38 = v19;
  LOBYTE(v40) = 2;
  v15[6] = sub_2419AA46C();
  v15[7] = v20;
  LOBYTE(v40) = 3;
  v15[8] = sub_2419AA46C();
  v15[9] = v21;
  LOBYTE(v40) = 4;
  v15[10] = sub_2419AA46C();
  v15[11] = v22;
  LOBYTE(v40) = 5;
  v15[12] = sub_2419AA46C();
  v15[13] = v23;
  LOBYTE(v40) = 6;
  v15[14] = sub_2419AA46C();
  v15[15] = v24;
  LOBYTE(v40) = 7;
  v15[18] = sub_2419AA4A8();
  *((_BYTE *)v15 + 152) = v25 & 1;
  LOBYTE(v40) = 8;
  v15[16] = sub_2419AA46C();
  v15[17] = v26;
  LOBYTE(v40) = 9;
  sub_2419915F0(&qword_257166038, MEMORY[0x24BDCEAA8]);
  sub_2419AA4CC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v36);
  v27 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v39 + *(int *)(v30 + 52), v32, v33);
  sub_2419730F0(v27, v34);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  return sub_241973134(v27);
}

uint64_t sub_241991570(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2419915AC()
{
  unint64_t result;

  result = qword_257166030;
  if (!qword_257166030)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AC778, &type metadata for AssetPenetrationPayload);
    atomic_store(result, (unint64_t *)&qword_257166030);
  }
  return result;
}

uint64_t sub_2419915F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2419A9D1C();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241991630@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetPenetrationData.init(from:)(a1, a2);
}

uint64_t sub_241991644(_QWORD *a1)
{
  return AssetPenetrationData.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for AssetPenetrationData(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      v9 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v11;
    }
    v12 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v12;
    v13 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v13;
    v14 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v14;
    v15 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v15;
    v16 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v16;
    v17 = a2[17];
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = v17;
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    v18 = *(int *)(a3 + 52);
    v23 = (uint64_t)a2 + v18;
    v19 = a1 + v18;
    *(_QWORD *)(a1 + 144) = a2[18];
    v20 = sub_2419A9D1C();
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v19, v23, v20);
  }
  return a1;
}

uint64_t destroy for AssetPenetrationData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_2419A9D1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for AssetPenetrationData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v7;
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
  }
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v11;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  v13 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v13;
  v14 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v14;
  v15 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v15;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v16 = *(int *)(a3 + 52);
  v21 = a2 + v16;
  v17 = a1 + v16;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v18 = sub_2419A9D1C();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v17, v21, v18);
  return a1;
}

uint64_t assignWithCopy for AssetPenetrationData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 16);
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241991BB4(a1 + 16);
      v9 = *(_OWORD *)(a2 + 32);
      *v6 = *v7;
      *(_OWORD *)(a1 + 32) = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 32);
    *v6 = *v7;
    *(_OWORD *)(a1 + 32) = v10;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v11;
  v12 = *(int *)(a3 + 52);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t sub_241991BB4(uint64_t a1)
{
  destroy for AssetDailyStatus();
  return a1;
}

uint64_t initializeWithTake for AssetPenetrationData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v8 = *(int *)(a3 + 52);
  v9 = a2 + v8;
  v10 = a1 + v8;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v11 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, v9, v11);
  return a1;
}

uint64_t assignWithTake for AssetPenetrationData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  v7 = *(_QWORD *)(a2 + 24);
  if (!v7)
  {
    sub_241991BB4(a1 + 16);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v15 = *(int *)(a3 + 52);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetPenetrationData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241991DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_2419A9D1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 52), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for AssetPenetrationData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241991E50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_2419A9D1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

uint64_t sub_241991EC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419A9D1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AssetPenetrationData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetPenetrationData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_241992034 + 4 * byte_2419AEE29[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_241992068 + 4 * byte_2419AEE24[v4]))();
}

uint64_t sub_241992068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241992070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241992078);
  return result;
}

uint64_t sub_241992084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24199208CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_241992090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241992098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetPenetrationData.CodingKeys()
{
  return &type metadata for AssetPenetrationData.CodingKeys;
}

uint64_t sub_2419920B4()
{
  return sub_24196C594(&qword_2571660F0, &qword_2571660F8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2419920E4()
{
  unint64_t result;

  result = qword_257166100;
  if (!qword_257166100)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AF00C, &type metadata for AssetPenetrationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257166100);
  }
  return result;
}

unint64_t sub_24199212C()
{
  unint64_t result;

  result = qword_257166108;
  if (!qword_257166108)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AEF0C, &type metadata for AssetPenetrationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257166108);
  }
  return result;
}

unint64_t sub_241992174()
{
  unint64_t result;

  result = qword_257166110;
  if (!qword_257166110)
  {
    result = MEMORY[0x24269F6EC](&unk_2419AEF34, &type metadata for AssetPenetrationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257166110);
  }
  return result;
}

uint64_t sub_2419921B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24199222C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2419921D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_241992394(a1, a2, a3, (_QWORD *)*v3, &qword_257166128, &qword_257165108);
  *v3 = result;
  return result;
}

uint64_t sub_241992200(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_241992394(a1, a2, a3, (_QWORD *)*v3, &qword_257166130, &qword_257165118);
  *v3 = result;
  return result;
}

uint64_t sub_24199222C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257165828);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_241992394(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_2419AA454();
  __break(1u);
  return result;
}

uint64_t sub_241992520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  v5 = ~v4;
  *(_QWORD *)a3 = a1;
  v8 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v7 = v8;
  v9 = -v4;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  *(_QWORD *)(a3 + 8) = result;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = v10 & v7;
  v11 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a3 + 40) = a2;
  v14 = *(_QWORD *)(a2 + 64);
  v12 = a2 + 64;
  v13 = v14;
  v15 = -1 << v11;
  if (-v15 < 64)
    v3 = ~(-1 << -(char)v15);
  *(_QWORD *)(a3 + 48) = v12;
  *(_QWORD *)(a3 + 56) = ~v15;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = v3 & v13;
  *(_BYTE *)(a3 + 80) = 0;
  return result;
}

void sub_24199258C(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  __int128 *v32;
  int64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  if (*((_BYTE *)v1 + 80) == 1)
  {
    *(_QWORD *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  if (v7)
  {
    v8 = (v7 - 1) & v7;
    v9 = __clz(__rbit64(v7)) | (v6 << 6);
    goto LABEL_5;
  }
  v20 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  v21 = (unint64_t)(v5 + 64) >> 6;
  v22 = v1[3];
  if (v20 >= v21)
    goto LABEL_38;
  v23 = *(_QWORD *)(v4 + 8 * v20);
  if (!v23)
  {
    v28 = v6 + 2;
    v22 = v6 + 1;
    if (v6 + 2 < v21)
    {
      v23 = *(_QWORD *)(v4 + 8 * v28);
      if (v23)
      {
LABEL_20:
        v20 = v28;
        goto LABEL_13;
      }
      v22 = v6 + 2;
      if (v6 + 3 < v21)
      {
        v23 = *(_QWORD *)(v4 + 8 * (v6 + 3));
        if (v23)
        {
          v20 = v6 + 3;
          goto LABEL_13;
        }
        v28 = v6 + 4;
        v22 = v6 + 3;
        if (v6 + 4 < v21)
        {
          v23 = *(_QWORD *)(v4 + 8 * v28);
          if (v23)
            goto LABEL_20;
          v20 = v6 + 5;
          v22 = v6 + 4;
          if (v6 + 5 < v21)
          {
            v23 = *(_QWORD *)(v4 + 8 * v20);
            if (v23)
              goto LABEL_13;
            v22 = v21 - 1;
            v30 = v6 + 6;
            while (v21 != v30)
            {
              v23 = *(_QWORD *)(v4 + 8 * v30++);
              if (v23)
              {
                v20 = v30 - 1;
                goto LABEL_13;
              }
            }
          }
        }
      }
    }
LABEL_38:
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    *v1 = v3;
    v1[1] = v4;
    v1[2] = v5;
    v1[3] = v22;
    v1[4] = 0;
    goto LABEL_39;
  }
LABEL_13:
  v8 = (v23 - 1) & v23;
  v9 = __clz(__rbit64(v23)) + (v20 << 6);
  v6 = v20;
LABEL_5:
  sub_24195C384(*(_QWORD *)(v3 + 48) + 40 * v9, (uint64_t)&v36);
  v10 = *((_QWORD *)&v37 + 1);
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v5;
  v1[3] = v6;
  v1[4] = v8;
  if (v10)
  {
    v39 = v36;
    v40 = v37;
    v41 = v38;
    v11 = v1[5];
    v12 = v1[6];
    v13 = v1[7];
    v14 = v1[8];
    v15 = v1[9];
    if (v15)
    {
      v16 = (v15 - 1) & v15;
      v17 = __clz(__rbit64(v15)) | (v14 << 6);
      goto LABEL_8;
    }
    v24 = v14 + 1;
    if (!__OFADD__(v14, 1))
    {
      v25 = (unint64_t)(v13 + 64) >> 6;
      v26 = v1[8];
      if (v24 < v25)
      {
        v27 = *(_QWORD *)(v12 + 8 * v24);
        if (v27)
        {
LABEL_17:
          v16 = (v27 - 1) & v27;
          v17 = __clz(__rbit64(v27)) + (v24 << 6);
          v14 = v24;
LABEL_8:
          sub_24193D1D0(*(_QWORD *)(v11 + 56) + 32 * v17, (uint64_t)&v34);
          v18 = *((_QWORD *)&v35 + 1);
          v1[5] = v11;
          v1[6] = v12;
          v1[7] = v13;
          v1[8] = v14;
          v1[9] = v16;
          if (v18)
          {
            sub_24194F580(&v34, &v36);
            v19 = v40;
            *(_OWORD *)a1 = v39;
            *(_OWORD *)(a1 + 16) = v19;
            *(_QWORD *)(a1 + 32) = v41;
            sub_24194F580(&v36, (_OWORD *)(a1 + 40));
            return;
          }
          goto LABEL_49;
        }
        v29 = v14 + 2;
        v26 = v14 + 1;
        if (v14 + 2 < v25)
        {
          v27 = *(_QWORD *)(v12 + 8 * v29);
          if (v27)
          {
LABEL_23:
            v24 = v29;
            goto LABEL_17;
          }
          v26 = v14 + 2;
          if (v14 + 3 < v25)
          {
            v27 = *(_QWORD *)(v12 + 8 * (v14 + 3));
            if (v27)
            {
              v24 = v14 + 3;
              goto LABEL_17;
            }
            v29 = v14 + 4;
            v26 = v14 + 3;
            if (v14 + 4 < v25)
            {
              v27 = *(_QWORD *)(v12 + 8 * v29);
              if (v27)
                goto LABEL_23;
              v24 = v14 + 5;
              v26 = v14 + 4;
              if (v14 + 5 < v25)
              {
                v27 = *(_QWORD *)(v12 + 8 * v24);
                if (v27)
                  goto LABEL_17;
                v26 = v25 - 1;
                v33 = v14 + 6;
                while (v25 != v33)
                {
                  v27 = *(_QWORD *)(v12 + 8 * v33++);
                  if (v27)
                  {
                    v24 = v33 - 1;
                    goto LABEL_17;
                  }
                }
              }
            }
          }
        }
      }
      v34 = 0u;
      v35 = 0u;
      v1[5] = v11;
      v1[6] = v12;
      v1[7] = v13;
      v1[8] = v26;
      v1[9] = 0;
LABEL_49:
      sub_24195BF58((uint64_t)&v39);
      v31 = (uint64_t *)&unk_257163EA0;
      v32 = &v34;
      goto LABEL_50;
    }
LABEL_53:
    __break(1u);
    return;
  }
LABEL_39:
  v31 = (uint64_t *)&unk_257166120;
  v32 = &v36;
LABEL_50:
  sub_241941720((uint64_t)v32, v31);
  *((_BYTE *)v1 + 80) = 1;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
}

uint64_t sub_2419928D4()
{
  unint64_t v0;

  v0 = sub_2419AA460();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_24199291C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssetPenetrationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241992960(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_241992974(a1, a2);
  return a1;
}

uint64_t sub_241992974(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t SiriSegmentCohortBiomeReporter.__allocating_init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = v4 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t SiriSegmentCohortBiomeReporter.init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = v2 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  v5 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_241992A80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2[2] = v1;
  v2[3] = *(_QWORD *)(type metadata accessor for DeviceSegmentsCohorts(0) - 8);
  v4 = swift_task_alloc();
  v5 = *(_QWORD *)(a1 + 16);
  v2[4] = v4;
  v2[5] = v5;
  return swift_task_switch();
}

uint64_t sub_241992AE4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Reporter invoked: SiriDigestMetricsBiomeReporter", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 40);

  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 40)
       + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v9 = *(_QWORD *)(v0 + 32);
      sub_241993164(v7, v9);
      v10 = _s16MetricsFramework30SiriSegmentCohortBiomeReporterC06createF34OnDeviceDigestSegmentsCohortsEvent08segmentsmA0So06BMSiriijklM0CAA0jlM0V_tFZ_0(v9);
      sub_2419A9DB8();

      sub_2419931A8(v9);
      v7 += v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241992C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  v2 = sub_2419AA040();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t SiriSegmentCohortBiomeReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriSegmentCohortBiomeReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id _s16MetricsFramework30SiriSegmentCohortBiomeReporterC06createF34OnDeviceDigestSegmentsCohortsEvent08segmentsmA0So06BMSiriijklM0CAA0jlM0V_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  char v20;
  char v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257166210);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BEE4AF8];
  v42 = MEMORY[0x24BEE4AF8];
  v5 = type metadata accessor for DeviceSegmentsCohorts(0);
  v6 = *(_QWORD *)(a1 + *(int *)(v5 + 20));
  if (v6)
  {
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v38 = v5;
      v39 = a1;
      v40 = v4;
      v37 = swift_bridgeObjectRetain();
      v8 = (char *)(v37 + 60);
      while (1)
      {
        v9 = *(v8 - 16);
        v10 = *(v8 - 8);
        v11 = *v8;
        if ((*(v8 - 24) & 1) != 0)
        {
          v12 = 0;
          if ((*(v8 - 16) & 1) == 0)
            goto LABEL_6;
        }
        else
        {
          v12 = (void *)sub_2419AA5D4();
          if ((v9 & 1) == 0)
          {
LABEL_6:
            v13 = (void *)sub_2419AA5D4();
            if ((v10 & 1) == 0)
              goto LABEL_7;
            goto LABEL_11;
          }
        }
        v13 = 0;
        if ((v10 & 1) == 0)
        {
LABEL_7:
          v14 = (void *)sub_2419AA628();
          if ((v11 & 1) != 0)
            goto LABEL_12;
          goto LABEL_8;
        }
LABEL_11:
        v14 = 0;
        if ((v11 & 1) != 0)
        {
LABEL_12:
          v15 = 0;
          goto LABEL_13;
        }
LABEL_8:
        v15 = (void *)sub_2419AA628();
LABEL_13:
        v16 = objc_allocWithZone(MEMORY[0x24BE0C6C8]);
        objc_msgSend(v16, sel_initWithSegmentType_segmentDataAvailabilityState_daysWithTwoValidAssistantTurnsPerWeek_daysWithTwoAssistantSpeechRequestsPerWeek_, v12, v13, v14, v15, v37);

        MEMORY[0x24269EE34]();
        if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2419AA1CC();
        sub_2419AA1E4();
        sub_2419AA1C0();
        v8 += 32;
        if (!--v7)
        {
          swift_bridgeObjectRelease();
          a1 = v39;
          v4 = v40;
          v5 = v38;
          break;
        }
      }
    }
  }
  v17 = *(_QWORD *)(a1 + *(int *)(v5 + 24));
  if (v17)
  {
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v38 = v5;
      v39 = a1;
      v40 = v4;
      v37 = swift_bridgeObjectRetain();
      v19 = (void **)(v37 + 48);
      while (1)
      {
        v20 = *((_BYTE *)v19 - 12);
        v21 = *((_BYTE *)v19 - 4);
        v22 = *v19;
        if (*v19)
        {
          v23 = v22;
          objc_msgSend(v23, sel_startTimestampInSecondsSince1970, v37);
          objc_msgSend(v23, sel_numberOfSeconds);
          v24 = (void *)sub_2419AA634();
          v25 = (void *)sub_2419AA628();
        }
        else
        {
          v25 = 0;
          v24 = 0;
        }
        v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6D8]), sel_initWithStartTimestampInSecondsSince1970_numberOfSeconds_, v24, v25);

        if ((v20 & 1) != 0)
        {
          v27 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_27;
        }
        else
        {
          v27 = (void *)sub_2419AA5D4();
          if ((v21 & 1) != 0)
          {
LABEL_27:
            v28 = 0;
            goto LABEL_28;
          }
        }
        v28 = (void *)sub_2419AA5D4();
LABEL_28:
        v29 = objc_allocWithZone(MEMORY[0x24BE0C6C0]);
        v30 = v26;
        objc_msgSend(v29, sel_initWithTimeInterval_cohortType_cohortDataAvailabilityState_, v30, v27, v28);

        MEMORY[0x24269EE34]();
        if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2419AA1CC();
        v19 += 3;
        sub_2419AA1E4();
        sub_2419AA1C0();

        if (!--v18)
        {
          swift_bridgeObjectRelease();
          a1 = v39;
          v4 = v40;
          v5 = v38;
          break;
        }
      }
    }
  }
  sub_241993164(a1, (uint64_t)v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  v31 = _s16MetricsFramework13EventMetadataV07toBiomeC021deviceSegmentsCohortsSo020BMSiriOnDeviceDigesthicD0CAA0lhI0VSg_tFZ_0((uint64_t)v4);
  sub_24199323C((uint64_t)v4);
  v32 = objc_allocWithZone(MEMORY[0x24BE0C6B8]);
  sub_241943088(0, &qword_257166218);
  v33 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  sub_241943088(0, qword_257166220);
  v34 = (void *)sub_2419AA1A8();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v32, sel_initWithEventMetadata_deviceSegmentsReported_deviceCohortsReported_, v31, v33, v34);

  return v35;
}

uint64_t sub_241993164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceSegmentsCohorts(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2419931A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeviceSegmentsCohorts(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2419931E4()
{
  return type metadata accessor for SiriSegmentCohortBiomeReporter();
}

uint64_t type metadata accessor for SiriSegmentCohortBiomeReporter()
{
  uint64_t result;

  result = qword_257166170;
  if (!qword_257166170)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for SiriSegmentCohortBiomeReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriSegmentCohortBiomeReporter.__allocating_init(biomeDonator:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_24199323C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257166210);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AssetPenetrationReporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_241993284()
{
  return swift_task_switch();
}

uint64_t sub_241993298()
{
  return sub_2419AA418();
}

uint64_t AssetPenetrationReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetPenetrationReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for AssetPenetrationReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetPenetrationReporter.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 80) + *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t BootToAssetResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BootToAssetResults.eventStreamMetadata.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*BootToAssetResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t BootToAssetResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BootToAssetResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*BootToAssetResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t BootToAssetResults.combinedBootToAssetData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BootToAssetResults.combinedBootToAssetData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*BootToAssetResults.combinedBootToAssetData.modify())()
{
  return nullsub_1;
}

uint64_t CombinedBootToAssetData.assetAvailabilityData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CombinedBootToAssetData.assetAvailabilityData.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*CombinedBootToAssetData.assetAvailabilityData.modify())()
{
  return nullsub_1;
}

uint64_t CombinedBootToAssetData.eventMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CombinedBootToAssetData(0) + 20);
  return sub_24193D8BC(v3, a1);
}

uint64_t type metadata accessor for CombinedBootToAssetData(uint64_t a1)
{
  return sub_241941450(a1, qword_257166378);
}

uint64_t CombinedBootToAssetData.eventMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CombinedBootToAssetData(0) + 20);
  return sub_24193D930(a1, v3);
}

uint64_t (*CombinedBootToAssetData.eventMetadata.modify())(_QWORD)
{
  type metadata accessor for CombinedBootToAssetData(0);
  return nullsub_1;
}

uint64_t SiriBootToAssetCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  SiriBootToAssetCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SiriBootToAssetCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;

  sub_2419A9D58();
  v9 = v4 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_logger;
  v10 = sub_2419AA040();
  v11 = *(_QWORD *)(v10 - 8);
  v19 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  sub_2419416DC(a2, v4 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_sqlFileURL, &qword_257162CF0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_bookmarkService) = a3;
  v12 = v4 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_oddId;
  v13 = sub_2419A9D1C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  v15 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  swift_retain();
  v16 = (void *)sub_2419AA0DC();
  v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

  if (!v17)
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCF50]), sel_init);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  sub_241941720(a2, &qword_257162CF0);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v10);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_defaults) = v17;
  return v4;
}

uint64_t sub_24199374C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  v3 = sub_2419A9CE0();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  v2[12] = swift_task_alloc();
  v4 = sub_2419A9C14();
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 - 8);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_241993810()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t (*v16)(void);
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void *v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_t log;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;

  v1 = v0[6] + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_logger;
  swift_retain_n();
  v2 = sub_2419AA028();
  v3 = sub_2419AA238();
  if (os_log_type_enabled(v2, v3))
  {
    v54 = v1;
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v55 = v5;
    sub_2419A9D1C();
    sub_24194169C((unint64_t *)&qword_257162D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v6 = sub_2419AA568();
    v0[4] = sub_24193F470(v6, v7, &v55);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24193B000, v2, v3, "SQL calculator invoked: SiriBootToAssetCalculator %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v5, -1, -1);
    v8 = v4;
    v1 = v54;
    MEMORY[0x24269F7A0](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v9 = v0[13];
  v10 = v0[14];
  v11 = v0[12];
  sub_2419416DC(v0[6] + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_sqlFileURL, v11, &qword_257162CF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    sub_241941720(v0[12], &qword_257162CF0);
    sub_24193F23C();
    swift_allocError();
    *v12 = 9;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v16 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[14] + 32))(v0[15], v0[12], v0[13]);
    v13 = (void *)sub_2419A9DE8();
    v14 = v0[15];
    v15 = v13;
    v18 = sub_241993FB0(v14, v15);
    v53 = v15;

    v19 = (void *)sub_2419A9F08();
    if (v19)
    {
      v20 = v19;
      v21 = v19;
      v22 = v20;
      v23 = sub_2419AA028();
      v24 = sub_2419AA244();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v51 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v25 = 138412290;
        v26 = v20;
        v27 = _swift_stdlib_bridgeErrorToNSError();
        v0[3] = v27;
        sub_2419AA2EC();
        *v51 = v27;

        _os_log_impl(&dword_24193B000, v23, v24, "%@", v25, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
        swift_arrayDestroy();
        MEMORY[0x24269F7A0](v51, -1, -1);
        MEMORY[0x24269F7A0](v25, -1, -1);

      }
      else
      {

      }
    }
    v28 = sub_241969CC4(v18, v1);
    swift_bridgeObjectRetain();
    v29 = sub_2419AA028();
    v30 = sub_2419AA238();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v31 = 134217984;
      v0[2] = v28[2];
      sub_2419AA2EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24193B000, v29, v30, "SiriBootToAssetCalculator query yielded %ld results", v31, 0xCu);
      MEMORY[0x24269F7A0](v31, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v32 = v0[11];
    v33 = v0[8];
    v34 = v0[9];

    sub_2419A9DD0();
    v52 = sub_2419A9DA0();
    log = *(os_log_t *)(v34 + 8);
    ((void (*)(uint64_t, uint64_t))log)(v32, v33);
    sub_2419A9D94();
    if (qword_257162A90 != -1)
      swift_once();
    v48 = v0[13];
    v49 = v0[15];
    v35 = v0[11];
    v36 = v0[10];
    v46 = v0[8];
    v47 = v0[14];
    v37 = v0[6];
    v45 = v0[7];
    v38 = (uint64_t *)v0[5];
    v39 = (void *)qword_25716E860;
    swift_bridgeObjectRetain();
    v40 = v39;
    v41 = sub_2419957FC((uint64_t)v28, v40);

    swift_bridgeObjectRelease();
    sub_2419A9C5C();
    v42 = (_QWORD *)swift_task_alloc();
    v42[2] = v37;
    v42[3] = v36;
    v42[4] = v35;
    v42[5] = v45;
    v43 = sub_241995C60(v41, (void (*)(char *, uint64_t))sub_241995C54);
    ((void (*)(uint64_t, uint64_t))log)(v36, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();

    swift_release();
    ((void (*)(uint64_t, uint64_t))log)(v35, v46);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
    v44 = MEMORY[0x24BEE4AF8];
    *v38 = v52;
    v38[1] = v44;
    v38[2] = v43;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v16 = (uint64_t (*)(void))v0[1];
  }
  return v16();
}

uint64_t sub_241993FB0(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  _QWORD *v25;
  uint64_t v26;

  v4 = sub_2419AA118();
  MEMORY[0x24BDAC7A8](v4);
  sub_2419AA10C();
  sub_2419AA0C4();
  if (v2)
  {
    v5 = sub_2419AA028();
    v6 = sub_2419AA244();
    v7 = v6;
    if (os_log_type_enabled(v5, v6))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_24193B000, v5, (os_log_type_t)v7, "SQL file could not be loaded", v8, 2u);
      MEMORY[0x24269F7A0](v8, -1, -1);
    }

    sub_24193F23C();
    swift_allocError();
    *v9 = 10;
    swift_willThrow();

  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162D20);
    sub_2419A9F5C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2419AB050;
    v10 = sub_2419A9F68();
    v12 = v11;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v12;
    sub_2419A9F50();
    objc_allocWithZone((Class)sub_2419A9EE4());
    v14 = a2;
    v15 = (void *)sub_2419A9EC0();
    v7 = sub_2419A9ED8();
    swift_bridgeObjectRelease();
    v16 = (void *)sub_2419A9F08();
    if (v16)
    {
      v17 = v16;
      v18 = v16;
      v19 = v17;
      v20 = sub_2419AA028();
      v21 = sub_2419AA244();
      if (!os_log_type_enabled(v20, v21))
      {

        return v7;
      }
      v22 = (uint8_t *)swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v23 = v17;
      v26 = _swift_stdlib_bridgeErrorToNSError();
      sub_2419AA2EC();
      *v25 = v26;

      _os_log_impl(&dword_24193B000, v20, v21, "%@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
      swift_arrayDestroy();
      MEMORY[0x24269F7A0](v25, -1, -1);
      MEMORY[0x24269F7A0](v22, -1, -1);

    }
  }
  return v7;
}

uint64_t sub_241994368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  double v30;
  double v31;
  double v32;
  BOOL v34;
  char *v35;
  double v36;
  void (*v37)(char *, uint64_t);
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint8_t *v60;
  id v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t result;
  double v66;
  unint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t (*v78)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;

  v82 = a5;
  v84 = a4;
  v87 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v83 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v86 = (uint64_t)&v80 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v85 = (uint64_t)&v80 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v88 = (uint8_t *)&v80 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2419A9CE0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v80 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v80 - v28;
  sub_2419416DC(a1, (uint64_t)v19, &qword_257162EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_241941720((uint64_t)v19, &qword_257162EF0);
LABEL_44:
    v77 = type metadata accessor for CombinedBootToAssetData(0);
    v78 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56);
    v79 = a6;
    return v78(v79, 1, 1, v77);
  }
  v81 = a6;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v29, v19, v20);
  sub_2419A9C5C();
  sub_2419A9CBC();
  v31 = v30;
  v32 = trunc(v30);
  v34 = v31 > -1.0 && v31 < 1.84467441e19 && v31 == v32;
  v35 = v29;
  if (!v34)
  {
    sub_2419A9CBC();
    a6 = v81;
    if (v36 <= 0.0)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v27, v20);
      v48 = sub_2419AA028();
      v49 = sub_2419AA244();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v50 = 134217984;
        v88 = v50 + 4;
        sub_2419A9CBC();
        v89 = v51;
        sub_2419AA2EC();
        v37 = *(void (**)(char *, uint64_t))(v21 + 8);
        v37(v24, v20);
        _os_log_impl(&dword_24193B000, v48, v49, "Boot to asset event contains date before 1970 %f", v50, 0xCu);
        a6 = v81;
        MEMORY[0x24269F7A0](v50, -1, -1);

      }
      else
      {

        v37 = *(void (**)(char *, uint64_t))(v21 + 8);
        v37(v24, v20);
      }
      v37(v27, v20);
    }
    else
    {
      v37 = *(void (**)(char *, uint64_t))(v21 + 8);
      v37(v27, v20);
    }
    v37(v35, v20);
    goto LABEL_44;
  }
  sub_24194169C(&qword_257162EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  if ((sub_2419AA0B8() & 1) != 0)
  {
    v38 = *(void **)(a3 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_defaults);
    v39 = (void *)sub_2419AA0DC();
    LODWORD(v38) = objc_msgSend(v38, sel_BOOLForKey_, v39);

    if (!(_DWORD)v38)
    {
      v76 = *(void (**)(char *, uint64_t))(v21 + 8);
      v76(v27, v20);
      v76(v29, v20);
      v77 = type metadata accessor for CombinedBootToAssetData(0);
      v78 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56);
      v79 = v81;
      return v78(v79, 1, 1, v77);
    }
  }
  v84 = a3;
  v40 = *(_QWORD *)(v87 + 16);
  if (v40)
  {
    v80 = v29;
    v41 = (uint64_t *)(swift_bridgeObjectRetain() + 104);
    v42 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v44 = *v41;
      if (*v41)
      {
        v45 = *(v41 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v42 = sub_2419803E4(0, v42[2] + 1, 1, v42);
        v47 = v42[2];
        v46 = v42[3];
        if (v47 >= v46 >> 1)
          v42 = sub_2419803E4((_QWORD *)(v46 > 1), v47 + 1, 1, v42);
        v42[2] = v47 + 1;
        v43 = &v42[2 * v47];
        v43[4] = v45;
        v43[5] = v44;
      }
      v41 += 24;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
    v35 = v80;
  }
  else
  {
    v42 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v52 = v81;
  v53 = v35;
  if (v42[2])
    swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = (uint64_t)v88;
  sub_2419A9CEC();
  swift_bridgeObjectRelease();
  v55 = sub_2419A9D1C();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
  {
    v57 = sub_2419AA028();
    v58 = sub_2419AA238();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v59 = 0;
      _os_log_impl(&dword_24193B000, v57, v58, "Calculator: Found no device aggregation Id", v59, 2u);
      v60 = v59;
      v52 = v81;
      MEMORY[0x24269F7A0](v60, -1, -1);
    }

  }
  v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95598]), sel_init);
  objc_msgSend(v61, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v31);
  if (v61)
    objc_msgSend(v61, sel_setNumberOfSeconds_, 86400);
  v62 = v85;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v85, v84 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_oddId, v55);
  v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
  v63(v62, 0, 1, v55);
  sub_2419416DC((uint64_t)v88, v86, &qword_257162D48);
  v64 = (uint64_t)v83;
  v63((uint64_t)v83, 1, 1, v55);
  result = sub_2419A9CBC();
  if ((~*(_QWORD *)&v66 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v66 <= -1.0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v66 < 1.84467441e19)
  {
    v67 = (unint64_t)v66;
    v68 = *(void (**)(char *, uint64_t))(v21 + 8);
    v68(v27, v20);
    result = ((uint64_t (*)(char *, uint64_t))v68)(v53, v20);
    if (is_mul_ok(v67, 0x3E8uLL))
    {
      v69 = 1000 * v67;
      v70 = type metadata accessor for CombinedBootToAssetData(0);
      v71 = (uint64_t)v52 + *(int *)(v70 + 20);
      sub_24194184C(v85, v71, &qword_257162D48);
      v72 = (int *)type metadata accessor for EventMetadata(0);
      sub_24194184C(v86, v71 + v72[5], &qword_257162D48);
      sub_24194184C(v64, v71 + v72[6], &qword_257162D48);
      v73 = v71 + v72[7];
      *(_QWORD *)v73 = v69;
      *(_BYTE *)(v73 + 8) = 0;
      *(_QWORD *)(v71 + v72[8]) = v61;
      v74 = v71 + v72[9];
      *(_QWORD *)v74 = 0;
      *(_BYTE *)(v74 + 8) = 1;
      v75 = v71 + v72[10];
      *(_QWORD *)v75 = 0;
      *(_BYTE *)(v75 + 8) = 1;
      *v52 = v87;
      swift_bridgeObjectRetain();
      sub_241941720((uint64_t)v88, &qword_257162D48);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v52, 0, 1, v70);
    }
    goto LABEL_49;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t SiriBootToAssetCalculator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_sqlFileURL, &qword_257162CF0);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_calendar;
  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_oddId;
  v6 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  return v0;
}

uint64_t SiriBootToAssetCalculator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_sqlFileURL, &qword_257162CF0);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_calendar;
  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework25SiriBootToAssetCalculator_oddId;
  v6 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_241994D28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24193D468;
  return sub_24199374C(a1);
}

uint64_t sub_241994D7C(uint64_t a1, char a2)
{
  return sub_2419953BC(a1, a2, &qword_2571664C0);
}

uint64_t sub_241994D88(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;

  v3 = v2;
  v5 = type metadata accessor for EventMetadata(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257165860);
  v33 = a2;
  v9 = sub_2419AA43C();
  v10 = (_QWORD *)v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v31 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v29 = v2;
    v30 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        v23 = v31;
        if (v22 >= v30)
          goto LABEL_24;
        v24 = v31[v22];
        ++v17;
        if (!v24)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v30)
            goto LABEL_24;
          v24 = v31[v17];
          if (!v24)
          {
            v25 = v22 + 2;
            if (v25 >= v30)
            {
LABEL_24:
              swift_release();
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v29;
                goto LABEL_31;
              }
              v28 = 1 << *(_BYTE *)(v8 + 32);
              if (v28 >= 64)
                bzero(v23, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v23 = -1 << v28;
              v3 = v29;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v24 = v31[v25];
            if (!v24)
            {
              while (1)
              {
                v17 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_33;
                if (v17 >= v30)
                  goto LABEL_24;
                v24 = v31[v17];
                ++v25;
                if (v24)
                  goto LABEL_21;
              }
            }
            v17 = v25;
          }
        }
LABEL_21:
        v14 = (v24 - 1) & v24;
        v21 = __clz(__rbit64(v24)) + (v17 << 6);
      }
      v26 = *(_QWORD *)(v32 + 72);
      v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
      if ((v33 & 1) != 0)
      {
        sub_24195C340(v27, (uint64_t)v7, type metadata accessor for EventMetadata);
        v18 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v21);
      }
      else
      {
        sub_24193D8BC(v27, (uint64_t)v7);
        v18 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v21);
        swift_bridgeObjectRetain();
      }
      sub_2419AA5EC();
      EventMetadata.hash(into:)();
      sub_2419AA61C();
      v19 = sub_2419AA358();
      *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      result = sub_24195C340((uint64_t)v7, v10[6] + v26 * v19, type metadata accessor for EventMetadata);
      *(_QWORD *)(v10[7] + 8 * v19) = v18;
      ++v10[2];
    }
  }
  result = swift_release();
LABEL_31:
  *v3 = v10;
  return result;
}

uint64_t sub_241995088(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257165840);
  v41 = a2;
  v6 = sub_2419AA43C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v39)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v40 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v39)
        goto LABEL_33;
      v25 = *(_QWORD *)(v40 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v39)
        {
LABEL_33:
          swift_release();
          if ((v41 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v40 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v25 = *(_QWORD *)(v40 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2419AA5EC();
    sub_2419AA148();
    result = sub_2419AA61C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v24 = (_QWORD *)(v5 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2419953BC(uint64_t a1, char a2, uint64_t *a3)
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v5 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = (_QWORD *)sub_2419AA43C();
  if (*(_QWORD *)(v11 + 16))
  {
    v29 = v5;
    v13 = 1 << *(_BYTE *)(v11 + 32);
    v14 = (_QWORD *)(v11 + 64);
    v15 = -1;
    if (v13 < 64)
      v15 = ~(-1 << v13);
    v16 = v15 & *(_QWORD *)(v11 + 64);
    v17 = (unint64_t)(v13 + 63) >> 6;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v21 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v22 = v21 | (v19 << 6);
      }
      else
      {
        v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v23 >= v17)
          goto LABEL_23;
        v24 = v14[v23];
        ++v19;
        if (!v24)
        {
          v19 = v23 + 1;
          if (v23 + 1 >= v17)
            goto LABEL_23;
          v24 = v14[v19];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v17)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v5 = v29;
                goto LABEL_30;
              }
              v27 = 1 << *(_BYTE *)(v11 + 32);
              if (v27 >= 64)
                bzero((void *)(v11 + 64), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v14 = -1 << v27;
              v5 = v29;
              *(_QWORD *)(v11 + 16) = 0;
              break;
            }
            v24 = v14[v25];
            if (!v24)
            {
              while (1)
              {
                v19 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_32;
                if (v19 >= v17)
                  goto LABEL_23;
                v24 = v14[v19];
                ++v25;
                if (v24)
                  goto LABEL_20;
              }
            }
            v19 = v25;
          }
        }
LABEL_20:
        v16 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v19 << 6);
      }
      v26 = *(_QWORD *)(v11 + 48) + *(_QWORD *)(v8 + 72) * v22;
      if ((a2 & 1) != 0)
      {
        sub_24194184C(v26, (uint64_t)v10, &qword_257162EF0);
        v20 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
      }
      else
      {
        sub_2419416DC(v26, (uint64_t)v10, &qword_257162EF0);
        v20 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
      }
      result = sub_24199561C((uint64_t)v10, v20, v12);
    }
  }
  result = swift_release();
LABEL_30:
  *v5 = v12;
  return result;
}

uint64_t sub_24199561C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_2419A9CE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2419AA5EC();
  sub_2419416DC(a1, (uint64_t)v13, &qword_257162EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    sub_2419AA604();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_2419AA604();
    sub_24194169C(&qword_257163FC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_2419AA07C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_2419AA61C();
  v14 = sub_2419AA358();
  *(_QWORD *)((char *)a3 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
  result = sub_24194184C(a1, a3[6] + *(_QWORD *)(v11 + 72) * v14, &qword_257162EF0);
  *(_QWORD *)(a3[7] + 8 * v14) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_2419957FC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t result;
  _QWORD v70[2];
  __int128 v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  _QWORD *v87;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
  v73 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)MEMORY[0x24BEE4B00];
  v87 = (_QWORD *)MEMORY[0x24BEE4B00];
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    return (uint64_t)v9;
  v70[0] = v6;
  v70[1] = v2;
  v11 = *(_OWORD *)(a1 + 176);
  v83 = *(_OWORD *)(a1 + 160);
  v84 = v11;
  v12 = *(_OWORD *)(a1 + 208);
  v85 = *(_OWORD *)(a1 + 192);
  v86 = v12;
  v13 = *(_OWORD *)(a1 + 112);
  v79 = *(_OWORD *)(a1 + 96);
  v80 = v13;
  v14 = *(_OWORD *)(a1 + 144);
  v81 = *(_OWORD *)(a1 + 128);
  v82 = v14;
  v15 = *(_OWORD *)(a1 + 48);
  v16 = (__int128 *)(a1 + 224);
  v75 = *(_OWORD *)(a1 + 32);
  v76 = v15;
  v17 = v10 - 1;
  v18 = *(_OWORD *)(a1 + 64);
  v19 = *(_OWORD *)(a1 + 80);
  v20 = &qword_257162EF0;
  v77 = v18;
  v78 = v19;
  v71 = xmmword_2419AB050;
  v72 = a2;
  while (1)
  {
    sub_241942F20((uint64_t)&v75);
    swift_bridgeObjectRetain();
    v21 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(a2, sel_dateFromString_, v21, v70[0]);

    if (v22)
    {
      sub_2419A9CD4();

      v23 = sub_2419A9CE0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 0, 1, v23);
    }
    else
    {
      v24 = sub_2419A9CE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
    }
    v26 = sub_24195B524((uint64_t)v8);
    v27 = v9[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
      break;
    v30 = v25;
    if (v9[3] < v29)
    {
      sub_2419953BC(v29, 1, &qword_2571664B8);
      v9 = v87;
      v31 = sub_24195B524((uint64_t)v8);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_23;
      v26 = v31;
    }
    if ((v30 & 1) != 0)
    {
      v74 = v17;
      v33 = v20;
      sub_241941720((uint64_t)v8, v20);
      v9 = v87;
      v34 = v87[7];
      v35 = *(_QWORD **)(v34 + 8 * v26);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v34 + 8 * v26) = v35;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v35 = sub_24198074C(0, v35[2] + 1, 1, v35);
        *(_QWORD *)(v34 + 8 * v26) = v35;
      }
      v38 = v35[2];
      v37 = v35[3];
      if (v38 >= v37 >> 1)
      {
        v35 = sub_24198074C((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
        *(_QWORD *)(v34 + 8 * v26) = v35;
      }
      v20 = v33;
      v35[2] = v38 + 1;
      v39 = &v35[24 * v38];
      v40 = v75;
      v41 = v76;
      v42 = v78;
      v39[4] = v77;
      v39[5] = v42;
      v39[2] = v40;
      v39[3] = v41;
      v43 = v79;
      v44 = v80;
      v45 = v82;
      v39[8] = v81;
      v39[9] = v45;
      v39[6] = v43;
      v39[7] = v44;
      v46 = v83;
      v47 = v84;
      v48 = v86;
      v39[12] = v85;
      v39[13] = v48;
      v39[10] = v46;
      v39[11] = v47;
      a2 = v72;
      v17 = v74;
      if (!v74)
        return (uint64_t)v9;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257165830);
      v49 = (_OWORD *)swift_allocObject();
      v51 = v81;
      v50 = v82;
      v52 = v79;
      v49[7] = v80;
      v49[8] = v51;
      v53 = v86;
      v49[12] = v85;
      v49[13] = v53;
      v54 = v84;
      v49[10] = v83;
      v49[11] = v54;
      v49[9] = v50;
      v55 = v75;
      v56 = v76;
      v49[1] = v71;
      v49[2] = v55;
      v57 = v77;
      v58 = v78;
      v49[3] = v56;
      v49[4] = v57;
      v49[5] = v58;
      v49[6] = v52;
      v9[(v26 >> 6) + 8] |= 1 << v26;
      sub_24194184C((uint64_t)v8, v9[6] + *(_QWORD *)(v73 + 72) * v26, v20);
      *(_QWORD *)(v9[7] + 8 * v26) = v49;
      v59 = v9[2];
      v60 = __OFADD__(v59, 1);
      v61 = v59 + 1;
      if (v60)
        goto LABEL_22;
      v9[2] = v61;
      if (!v17)
        return (uint64_t)v9;
    }
    v62 = v16[9];
    v83 = v16[8];
    v84 = v62;
    v63 = v16[11];
    v85 = v16[10];
    v86 = v63;
    v64 = v16[5];
    v79 = v16[4];
    v80 = v64;
    v65 = v16[7];
    v81 = v16[6];
    v82 = v65;
    v66 = v16[1];
    v75 = *v16;
    v76 = v66;
    v67 = v16[2];
    v68 = v16[3];
    v16 += 12;
    --v17;
    v77 = v67;
    v78 = v68;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:

  result = sub_2419AA58C();
  __break(1u);
  return result;
}

uint64_t sub_241995C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;

  return sub_241994368(a1, a2, v3[2], v3[3], v3[4], a3);
}

uint64_t sub_241995C60(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571664A8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for CombinedBootToAssetData(0);
  v39 = *(_QWORD *)(v37 - 8);
  v6 = MEMORY[0x24BDAC7A8](v37);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v31 = (uint64_t)&v30 - v8;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571664B0);
  MEMORY[0x24BDAC7A8](v36);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v35 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v33 = MEMORY[0x24BEE4AF8];
  if (!v14)
    goto LABEL_7;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v23)) + (v16 << 6))
  {
    v19 = *(_QWORD *)(a1 + 48);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162EF0);
    sub_2419416DC(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * i, (uint64_t)v10, &qword_257162EF0);
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    *(_QWORD *)&v10[*(int *)(v36 + 48)] = v21;
    swift_bridgeObjectRetain();
    v38(v10, v21);
    sub_241941720((uint64_t)v10, &qword_2571664B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v5, 1, v37) == 1)
    {
      result = sub_241941720((uint64_t)v5, &qword_2571664A8);
      if (v14)
        goto LABEL_4;
    }
    else
    {
      v25 = v31;
      sub_24195C340((uint64_t)v5, v31, type metadata accessor for CombinedBootToAssetData);
      sub_24195C340(v25, v32, type metadata accessor for CombinedBootToAssetData);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_241980884(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
      v27 = *(_QWORD *)(v33 + 16);
      v26 = *(_QWORD *)(v33 + 24);
      if (v27 >= v26 >> 1)
        v33 = sub_241980884(v26 > 1, v27 + 1, 1, v33);
      v28 = v32;
      v29 = v33;
      *(_QWORD *)(v33 + 16) = v27 + 1;
      result = sub_24195C340(v28, v29+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v27, type metadata accessor for CombinedBootToAssetData);
      if (v14)
        goto LABEL_4;
    }
LABEL_7:
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v35)
      goto LABEL_29;
    v23 = *(_QWORD *)(v34 + 8 * v22);
    ++v16;
    if (!v23)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_29;
      v23 = *(_QWORD *)(v34 + 8 * v16);
      if (!v23)
      {
        v16 = v22 + 2;
        if (v22 + 2 >= v35)
          goto LABEL_29;
        v23 = *(_QWORD *)(v34 + 8 * v16);
        if (!v23)
        {
          v16 = v22 + 3;
          if (v22 + 3 >= v35)
            goto LABEL_29;
          v23 = *(_QWORD *)(v34 + 8 * v16);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v14 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v35)
  {
LABEL_29:
    swift_release();
    return v33;
  }
  v23 = *(_QWORD *)(v34 + 8 * v24);
  if (v23)
  {
    v16 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v35)
      goto LABEL_29;
    v23 = *(_QWORD *)(v34 + 8 * v16);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for BootToAssetResults()
{
  return &type metadata for BootToAssetResults;
}

uint64_t getEnumTagSinglePayload for CombinedBootToAssetData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24199605C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for EventMetadata(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CombinedBootToAssetData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2419960E4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for EventMetadata(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_241996158()
{
  return type metadata accessor for SiriBootToAssetCalculator(0);
}

uint64_t type metadata accessor for SiriBootToAssetCalculator(uint64_t a1)
{
  return sub_241941450(a1, (uint64_t *)&unk_2571663D8);
}

uint64_t method lookup function for SiriBootToAssetCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriBootToAssetCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SiriBootToAssetCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 136) + *(_QWORD *)(*(_QWORD *)v2 + 136));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t sub_2419961FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241996220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_24193E644(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_241996228(uint64_t result, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t inited;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  char v17[32];

  if (*(_QWORD *)(result + 16))
  {
    sub_24193D1D0(result + 32, (uint64_t)v17);
    v3 = MEMORY[0x24BEE0D00];
    if ((swift_dynamicCast() & 1) == 0)
    {
      if (a2)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163D18);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2419AB050;
        *(_QWORD *)(inited + 32) = sub_2419AA0E8();
        *(_QWORD *)(inited + 40) = v11;
        *(_QWORD *)(inited + 72) = v3;
        *(_QWORD *)(inited + 48) = 0xD00000000000002DLL;
        *(_QWORD *)(inited + 56) = 0x80000002419B2560;
        sub_24194D77C(inited);
        v12 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v7 = (void *)sub_2419AA0DC();
        v8 = (void *)sub_2419AA058();
        swift_bridgeObjectRelease();
        v9 = objc_msgSend(v12, sel_initWithDomain_code_userInfo_, v7, -1, v8);
        goto LABEL_8;
      }
      return 0;
    }
    type metadata accessor for SiriUserDefinedFunctions();
    static SiriUserDefinedFunctions.getSiriResponseCategoryUdf(siriResponseId:)(v15, v16, v17);
    swift_bridgeObjectRelease();
    if (v17[0] == 20)
    {
      if (a2)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163D18);
        v4 = swift_initStackObject();
        *(_OWORD *)(v4 + 16) = xmmword_2419AB050;
        *(_QWORD *)(v4 + 32) = sub_2419AA0E8();
        *(_QWORD *)(v4 + 40) = v5;
        *(_QWORD *)(v4 + 72) = v3;
        *(_QWORD *)(v4 + 48) = 0xD000000000000046;
        *(_QWORD *)(v4 + 56) = 0x80000002419B2590;
        sub_24194D77C(v4);
        v6 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v7 = (void *)sub_2419AA0DC();
        v8 = (void *)sub_2419AA058();
        swift_bridgeObjectRelease();
        v9 = objc_msgSend(v6, sel_initWithDomain_code_userInfo_, v7, 1, v8);
LABEL_8:
        v13 = v9;

        v14 = v13;
        result = 0;
        *a2 = v13;
        return result;
      }
      return 0;
    }
    return SiriReponseCategory.rawValue.getter();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static SiriUserDefinedFunctions.getSiriResponseCategoryUdf(siriResponseId:)(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  _BYTE *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t countAndFlagsBits;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  id v38;
  _BYTE *v39;
  os_log_type_t v40;
  id v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  char v49;
  os_log_type_t v50;
  unint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  os_log_type_t v58;
  unint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  Swift::String v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v67 = a2;
  v68 = a1;
  v72 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v64 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v64 - v11;
  type metadata accessor for SiriUserDefinedFunctions();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = (void *)sub_2419AA0DC();
  v16 = (void *)sub_2419AA0DC();
  v17 = objc_msgSend(v14, sel_URLForResource_withExtension_, v15, v16);

  if (v17)
  {
    sub_2419A9C08();

    v18 = sub_2419A9C14();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 0, 1, v18);
  }
  else
  {
    v18 = sub_2419A9C14();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  }
  sub_24196D304((uint64_t)v10, (uint64_t)v12);
  sub_2419A9C14();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v12, 1, v18) == 1)
  {
    sub_241997060();
    v21 = (void *)swift_allocError();
    *v22 = 0;
    swift_willThrow();
  }
  else
  {
    sub_2419972C4((uint64_t)v12, (uint64_t)v7);
    if (v20(v7, 1, v18) == 1)
    {
      __break(1u);
      return;
    }
    v23 = sub_2419A9C20();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    v26 = (void *)objc_opt_self();
    v27 = (void *)sub_2419A9C2C();
    *(_QWORD *)&v70 = 0;
    v28 = objc_msgSend(v26, sel_JSONObjectWithData_options_error_, v27, 0, &v70);

    if (v28)
    {
      v29 = (id)v70;
      sub_2419AA340();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2571664D8);
      if (swift_dynamicCast())
      {
        v64 = a3;
        countAndFlagsBits = v69._countAndFlagsBits;
        v31 = *(_QWORD *)(v69._countAndFlagsBits + 16);
        v66 = v23;
        if (v31)
        {
          v32 = 0;
          v33 = 0x80000002419B0950;
          v65 = 0x80000002419B0950;
          do
          {
            v34 = *(_QWORD *)(countAndFlagsBits + 8 * v32 + 32);
            if (*(_QWORD *)(v34 + 16))
            {
              swift_bridgeObjectRetain();
              v35 = sub_24195B490(0xD000000000000010, v33);
              if ((v36 & 1) != 0
                && (sub_24193D1D0(*(_QWORD *)(v34 + 56) + 32 * v35, (uint64_t)&v70), (swift_dynamicCast() & 1) != 0))
              {
                if (v69._countAndFlagsBits == v68 && v69._object == v67)
                {
                  swift_bridgeObjectRelease();
LABEL_34:
                  swift_bridgeObjectRelease();
                  a3 = v64;
                  if (*(_QWORD *)(v34 + 16)
                    && (v56 = sub_24195B490(0xD00000000000001BLL, 0x80000002419B0970), (v57 & 1) != 0))
                  {
                    sub_24193D1D0(*(_QWORD *)(v34 + 56) + 32 * v56, (uint64_t)&v70);
                  }
                  else
                  {
                    v70 = 0u;
                    v71 = 0u;
                  }
                  swift_bridgeObjectRelease();
                  if (*((_QWORD *)&v71 + 1))
                  {
                    if ((swift_dynamicCast() & 1) != 0)
                    {
                      SiriReponseCategory.init(rawValue:)(v69);
                      v49 = v70;
                      if (v70 != 20)
                      {
                        sub_24195F3B4(v66, v25);
                        sub_241941720((uint64_t)v12, &qword_257162CF0);
                        goto LABEL_27;
                      }
                    }
                  }
                  else
                  {
                    sub_241941720((uint64_t)&v70, &qword_257163EA0);
                  }
                  v58 = sub_2419AA238();
                  sub_2419970A4();
                  v59 = (unint64_t)v67;
                  swift_bridgeObjectRetain_n();
                  v60 = sub_2419AA2BC();
                  v61 = v58;
                  if (os_log_type_enabled(v60, v58))
                  {
                    v62 = (uint8_t *)swift_slowAlloc();
                    v63 = swift_slowAlloc();
                    *(_QWORD *)&v70 = v63;
                    *(_DWORD *)v62 = 136315138;
                    swift_bridgeObjectRetain();
                    v69._countAndFlagsBits = sub_24193F470(v68, v59, (uint64_t *)&v70);
                    sub_2419AA2EC();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_24193B000, v60, v61, "Unable to find the SiriReponseCategory for %s", v62, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x24269F7A0](v63, -1, -1);
                    MEMORY[0x24269F7A0](v62, -1, -1);
                    sub_24195F3B4(v66, v25);
                  }
                  else
                  {
                    sub_24195F3B4(v66, v25);
                    swift_bridgeObjectRelease_n();
                  }

LABEL_32:
                  sub_241941720((uint64_t)v12, &qword_257162CF0);
                  v49 = 19;
                  goto LABEL_27;
                }
                v37 = sub_2419AA574();
                swift_bridgeObjectRelease();
                if ((v37 & 1) != 0)
                  goto LABEL_34;
                swift_bridgeObjectRelease();
                v33 = v65;
                v23 = v66;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            ++v32;
          }
          while (v31 != v32);
        }
        swift_bridgeObjectRelease();
        v50 = sub_2419AA238();
        sub_2419970A4();
        v51 = (unint64_t)v67;
        swift_bridgeObjectRetain_n();
        v52 = sub_2419AA2BC();
        v53 = v50;
        if (os_log_type_enabled(v52, v50))
        {
          v54 = (uint8_t *)swift_slowAlloc();
          v55 = swift_slowAlloc();
          *(_QWORD *)&v70 = v55;
          *(_DWORD *)v54 = 136315138;
          swift_bridgeObjectRetain();
          v69._countAndFlagsBits = sub_24193F470(v68, v51, (uint64_t *)&v70);
          sub_2419AA2EC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_24193B000, v52, v53, "Unable to find the %s in the mapping source", v54, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24269F7A0](v55, -1, -1);
          MEMORY[0x24269F7A0](v54, -1, -1);
          sub_24195F3B4(v66, v25);
        }
        else
        {
          sub_24195F3B4(v23, v25);
          swift_bridgeObjectRelease_n();
        }

        a3 = v64;
        goto LABEL_32;
      }
      sub_241997060();
      v21 = (void *)swift_allocError();
      *v39 = 2;
    }
    else
    {
      v38 = (id)v70;
      v21 = (void *)sub_2419A9BFC();

    }
    swift_willThrow();
    sub_24195F3B4(v23, v25);
  }
  sub_241941720((uint64_t)v12, &qword_257162CF0);
  v40 = sub_2419AA244();
  sub_2419970A4();
  v41 = v21;
  v42 = v21;
  v43 = sub_2419AA2BC();
  v44 = v40;
  if (os_log_type_enabled(v43, v40))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v45 = 138412290;
    v47 = v21;
    v48 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v70 = v48;
    sub_2419AA2EC();
    *v46 = v48;

    _os_log_impl(&dword_24193B000, v43, v44, "unexpected error throws: %@", v45, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v46, -1, -1);
    MEMORY[0x24269F7A0](v45, -1, -1);

  }
  else
  {

  }
  v49 = 20;
LABEL_27:
  *a3 = v49;
}

uint64_t (*static SiriUserDefinedFunctions.getSiriResponseCategory.getter())(uint64_t result, _QWORD *a2)
{
  return sub_241996228;
}

uint64_t sub_241996E8C(uint64_t result, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _BYTE v12[32];

  if (*(_QWORD *)(result + 16))
  {
    sub_24193D1D0(result + 32, (uint64_t)v12);
    v3 = MEMORY[0x24BEE0D00];
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = _s16MetricsFramework24SiriUserDefinedFunctionsC09convertToC13ResponseIdUdf03rawI0SSSgSS_tFZ_0();
      swift_bridgeObjectRelease();
    }
    else if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163D18);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2419AB050;
      *(_QWORD *)(inited + 32) = sub_2419AA0E8();
      *(_QWORD *)(inited + 40) = v6;
      *(_QWORD *)(inited + 72) = v3;
      *(_QWORD *)(inited + 48) = 0xD000000000000018;
      *(_QWORD *)(inited + 56) = 0x80000002419B24C0;
      sub_24194D77C(inited);
      v7 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v8 = (void *)sub_2419AA0DC();
      v9 = (void *)sub_2419AA058();
      swift_bridgeObjectRelease();
      v10 = objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, -1, v9);

      v11 = v10;
      v4 = 0;
      *a2 = v10;
    }
    else
    {
      return 0;
    }
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t (*static SiriUserDefinedFunctions.convertToSiriResponseId.getter())(uint64_t result, _QWORD *a2)
{
  return sub_241996E8C;
}

uint64_t type metadata accessor for SiriUserDefinedFunctions()
{
  return objc_opt_self();
}

unint64_t sub_241997060()
{
  unint64_t result;

  result = qword_2571664C8;
  if (!qword_2571664C8)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for MetricsUtilityError, &type metadata for MetricsUtilityError);
    atomic_store(result, (unint64_t *)&qword_2571664C8);
  }
  return result;
}

unint64_t sub_2419970A4()
{
  unint64_t result;

  result = qword_2571664D0;
  if (!qword_2571664D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571664D0);
  }
  return result;
}

uint64_t sub_2419970E0(uint64_t result)
{
  char v1;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      result = sub_2419AA160();
      if ((v1 & 1) == 0)
        return sub_2419AA130();
    }
    __break(1u);
  }
  return result;
}

uint64_t SiriUserDefinedFunctions.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SiriUserDefinedFunctions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL static MetricsUtilityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MetricsUtilityError.hash(into:)()
{
  return sub_2419AA5F8();
}

uint64_t MetricsUtilityError.hashValue.getter()
{
  sub_2419AA5EC();
  sub_2419AA5F8();
  return sub_2419AA61C();
}

id sub_2419971EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_2419A9BFC();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_2419972C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s16MetricsFramework24SiriUserDefinedFunctionsC09convertToC13ResponseIdUdf03rawI0SSSgSS_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint32_t *p_align;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t result;
  unsigned __int128 v40;
  id v41;
  unsigned __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unsigned __int128 v49;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257166580);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_allocWithZone(MEMORY[0x24BDD1798]);
  v4 = sub_2419971EC(0xD000000000000021, 0x80000002419B24E0, 0);
  v5 = (void *)sub_2419AA0DC();
  v6 = sub_2419AA154();
  v7 = (void *)sub_2419AA0DC();
  p_align = &stru_2511CBFE8.align;
  v9 = objc_msgSend(v4, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v5, 0, 0, v6, v7);

  v10 = sub_2419AA0E8();
  v12 = v11;

  *(_QWORD *)&v42 = v10;
  *((_QWORD *)&v42 + 1) = v12;
  sub_241956600();
  swift_bridgeObjectRetain();
  v13 = sub_2419AA334();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 16) <= 2uLL)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v26 = objc_allocWithZone(MEMORY[0x24BDD1798]);
    v27 = sub_2419971EC(0x2E5D3A2E5C245C5BLL, 0xEA0000000000242ALL, 0);
    swift_bridgeObjectRetain();
    v28 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    v29 = sub_2419AA154();
    swift_bridgeObjectRelease();
    v30 = (void *)sub_2419AA0DC();
    v31 = objc_msgSend(v27, *((SEL *)p_align + 225), v28, 0, 0, v29, v30);

    v32 = sub_2419AA0E8();
    v34 = v33;

    *(_QWORD *)&v42 = v32;
    *((_QWORD *)&v42 + 1) = v34;
    *(_QWORD *)&v49 = v32;
    *((_QWORD *)&v49 + 1) = v34;
    v47 = 0xD000000000000010;
    v48 = 0x80000002419B2540;
    sub_24193D24C();
    sub_24199799C();
    if ((sub_2419AA088() & 1) != 0)
    {
      v35 = sub_2419AA154();
      sub_2419970E0(v35);
      v49 = v42;
      v47 = 95;
      v48 = 0xE100000000000000;
      v36 = sub_2419A9D40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v2, 1, 1, v36);
      swift_bridgeObjectRetain();
      sub_2419AA31C();
      v38 = v37;
      sub_241941720((uint64_t)v2, &qword_257166580);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v38 & 1) != 0)
      {

        return v42;
      }
      v49 = v42;
      v47 = 95;
      v48 = 0xE100000000000000;
      v45 = 35;
      v46 = 0xE100000000000000;
      v32 = sub_2419AA310();
      swift_bridgeObjectRelease();
    }

    return v32;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v13 + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v41 = v4;
  v14 = *(_QWORD *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 40);
  v17 = *(_QWORD *)(v13 + 48);
  v16 = *(_QWORD *)(v13 + 56);
  *(_QWORD *)&v49 = 0;
  *((_QWORD *)&v49 + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v18 = sub_2419AA154();
  v19 = sub_2419AA2D4();
  v20 = __OFADD__(v18, v19);
  v21 = v18 + v19;
  if (v20)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  MEMORY[0x24269EDD4](v21);
  *(_QWORD *)&v42 = v14;
  *((_QWORD *)&v42 + 1) = v15;
  v43 = v17;
  v44 = v16;
  sub_2419979E0();
  sub_2419AA16C();
  *(_QWORD *)&v42 = 35;
  *((_QWORD *)&v42 + 1) = 0xE100000000000000;
  sub_2419AA16C();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 16) >= 2uLL)
  {
    v23 = *((_QWORD *)&v49 + 1);
    v22 = v49;
    v40 = *(_OWORD *)(v13 + 64);
    v24 = *(_QWORD *)(v13 + 80);
    v25 = *(_QWORD *)(v13 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v49 = __PAIR128__(v23, v22);
    v42 = v40;
    v43 = v24;
    v44 = v25;
    swift_bridgeObjectRetain();
    sub_2419AA16C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v41;
    p_align = (_DWORD *)(&stru_2511CBFE8 + 24);
    goto LABEL_7;
  }
LABEL_15:
  __break(1u);
  swift_unexpectedError();
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_241997880()
{
  unint64_t result;

  result = qword_2571664E0;
  if (!qword_2571664E0)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for MetricsUtilityError, &type metadata for MetricsUtilityError);
    atomic_store(result, (unint64_t *)&qword_2571664E0);
  }
  return result;
}

uint64_t method lookup function for SiriUserDefinedFunctions()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for MetricsUtilityError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24199791C + 4 * byte_2419AF2D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_241997950 + 4 * byte_2419AF2D0[v4]))();
}

uint64_t sub_241997950(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241997958(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241997960);
  return result;
}

uint64_t sub_24199796C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241997974);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_241997978(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241997980(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsUtilityError()
{
  return &type metadata for MetricsUtilityError;
}

unint64_t sub_24199799C()
{
  unint64_t result;

  result = qword_257166588;
  if (!qword_257166588)
  {
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE5E60], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257166588);
  }
  return result;
}

unint64_t sub_2419979E0()
{
  unint64_t result;

  result = qword_257166590;
  if (!qword_257166590)
  {
    result = MEMORY[0x24269F6EC](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_257166590);
  }
  return result;
}

uint64_t sub_241997A24(uint64_t a1, void *a2, void *a3)
{
  return sub_2419984D0(a1, a2, a3, &qword_257166690);
}

uint64_t DevicePropertiesDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

id DevicePropertiesDataRecord.devicePropertiesEvent.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void DevicePropertiesDataRecord.devicePropertiesEvent.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*DevicePropertiesDataRecord.devicePropertiesEvent.modify())()
{
  return nullsub_1;
}

uint64_t DevicePropertiesDataRecord.assistantId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DevicePropertiesDataRecord.assistantId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*DevicePropertiesDataRecord.assistantId.modify())()
{
  return nullsub_1;
}

uint64_t DevicePropertiesDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_241997BB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2[6] = a1;
  v2[7] = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v2[8] = v3;
  *v3 = v2;
  v3[1] = sub_241997C18;
  v3[16] = v1;
  return swift_task_switch();
}

uint64_t sub_241997C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v5 = (_QWORD *)*v3;
  v4[9] = a2;
  swift_task_dealloc();
  if (v2)
    return ((uint64_t (*)(void))v5[1])();
  v7 = (_QWORD *)swift_task_alloc();
  v4[10] = v7;
  *v7 = v5;
  v7[1] = sub_241997CB8;
  v7[16] = v4[7];
  return swift_task_switch();
}

uint64_t sub_241997CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = v4[3];
    v4[12] = a1;
    v4[13] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_241997D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  *(_OWORD *)v2 = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v2 + 16) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241997D50()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241997D84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_241997D9C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE092B8]), sel_init);
  v0[17] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_241997E54;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_241997A24;
  v3[3] = &block_descriptor_5;
  v3[4] = v2;
  objc_msgSend(v1, sel_getODDDeviceProperties_, v3);
  return swift_continuation_await();
}

uint64_t sub_241997E54()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_241997EB4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  const char *v4;
  uint8_t *v5;

  v1 = *(_QWORD *)(v0 + 120);

  v2 = sub_2419AA028();
  if (v1)
  {
    v3 = sub_2419AA238();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = "Successfully fetched DevicePropertiesEvent";
LABEL_6:
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_24193B000, v2, v3, v4, v5, 2u);
      MEMORY[0x24269F7A0](v5, -1, -1);
    }
  }
  else
  {
    v3 = sub_2419AA244();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = "Unable to fetch DevicePropertiesEvent";
      goto LABEL_6;
    }
  }

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_241997FA4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241997FE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_241997FFC()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v2 = objc_msgSend(v1, sel_longLivedIdentifierUploadingEnabled);

  if ((v2 & 1) != 0)
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE092B8]), sel_init);
    *(_QWORD *)(v0 + 136) = v3;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_241998190;
    v4 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v5 = (_QWORD *)(v0 + 80);
    v5[1] = 0x40000000;
    v5[2] = sub_2419984C4;
    v5[3] = &block_descriptor_9_0;
    v5[4] = v4;
    objc_msgSend(v3, sel_fetchActiveAccount_, v5);
    return swift_continuation_await();
  }
  else
  {
    v7 = sub_2419AA028();
    v8 = sub_2419AA238();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_24193B000, v7, v8, "RPI enabled, skipping assistantIdentifier fetch", v9, 2u);
      MEMORY[0x24269F7A0](v9, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
}

uint64_t sub_241998190()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2419981F0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint8_t *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;

  v1 = *(void **)(v0 + 120);

  if (!v1)
  {
    v11 = sub_2419AA028();
    v12 = sub_2419AA244();
    if (os_log_type_enabled(v11, (os_log_type_t)v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_24193B000, v11, (os_log_type_t)v12, "Unable to fetch AFAccount", v13, 2u);
      MEMORY[0x24269F7A0](v13, -1, -1);
    }
    goto LABEL_10;
  }
  v2 = objc_msgSend(v1, sel_assistantIdentifier);
  if (!v2)
  {
    v11 = sub_2419AA028();
    v14 = sub_2419AA244();
    if (os_log_type_enabled(v11, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_24193B000, v11, v14, "assistantIdentifier from fetched AFAccount is nil", v15, 2u);
      MEMORY[0x24269F7A0](v15, -1, -1);
    }

LABEL_10:
    v4 = 0;
    v6 = 0;
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v4, v6);
  }
  v3 = v2;
  v4 = sub_2419AA0E8();
  v6 = v5;

  swift_bridgeObjectRetain_n();
  v7 = sub_2419AA028();
  v8 = sub_2419AA238();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v17 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_24193F470(v4, v6, &v17);
    sub_2419AA2EC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24193B000, v7, v8, "Fetched assistantIdentifier: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v10, -1, -1);
    MEMORY[0x24269F7A0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v4, v6);
}

uint64_t sub_2419984C4(uint64_t a1, void *a2, void *a3)
{
  return sub_2419984D0(a1, a2, a3, &qword_257166698);
}

uint64_t sub_2419984D0(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  uint64_t v4;
  _QWORD *v6;
  id v7;
  uint64_t v10;
  id v11;
  void *v12;

  v4 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257163968);
    swift_allocError();
    *v6 = a3;
    v7 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v12 = a2;
    v10 = *(_QWORD *)(*(_QWORD *)(v4 + 64) + 40);
    v11 = a2;
    sub_24194184C((uint64_t)&v12, v10, a4);
    return swift_continuation_throwingResume();
  }
}

uint64_t DevicePropertiesDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DevicePropertiesDataProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24199860C(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  v2[6] = a1;
  v2[7] = v3;
  v4 = (_QWORD *)swift_task_alloc();
  v2[8] = v4;
  *v4 = v2;
  v4[1] = sub_241997C18;
  v4[16] = v3;
  return swift_task_switch();
}

uint64_t destroy for DevicePropertiesDataRecord(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s16MetricsFramework26DevicePropertiesDataRecordVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DevicePropertiesDataRecord(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DevicePropertiesDataRecord(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DevicePropertiesDataRecord(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DevicePropertiesDataRecord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DevicePropertiesDataRecord()
{
  return &type metadata for DevicePropertiesDataRecord;
}

uint64_t sub_24199883C()
{
  return type metadata accessor for DevicePropertiesDataProvider();
}

uint64_t type metadata accessor for DevicePropertiesDataProvider()
{
  uint64_t result;

  result = qword_2571665E8;
  if (!qword_2571665E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for DevicePropertiesDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DevicePropertiesDataProvider.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DevicePropertiesDataProvider.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t DevicePropertiesSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  v5 = v4 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  *(_QWORD *)(v4 + 16) = a2;
  return v4;
}

uint64_t sub_24199896C()
{
  return swift_task_switch();
}

uint64_t sub_241998980()
{
  return sub_2419AA418();
}

uint64_t DevicePropertiesReporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DevicePropertiesReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_241998A04()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  qword_25716E868 = (uint64_t)result;
  return result;
}

uint64_t DevicePropertiesSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  *(_QWORD *)(v2 + 16) = a2;
  return v2;
}

uint64_t sub_241998A98(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(int, int);

  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = *a1;
  v5 = (uint64_t (*)(int, int))((char *)&dword_257164EF0 + dword_257164EF0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 40) = v3;
  *v3 = v2;
  v3[1] = sub_241998B04;
  return v5(3, 1);
}

uint64_t sub_241998B04(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241998B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint8_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v3 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    v4 = v2 + v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = sub_241998EA4;
    v6 = v1;
    v7 = v4;
    return sub_24194F754(v6, v7);
  }
  v8 = sub_2419AA028();
  v9 = sub_2419AA244();
  if (os_log_type_enabled(v8, (os_log_type_t)v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_24193B000, v8, (os_log_type_t)v9, "Unable to create exection metadata event", v10, 2u);
    MEMORY[0x24269F7A0](v10, -1, -1);
  }

  v11 = *(_QWORD *)(v0 + 24);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_2419AA424();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v0 + 80) = v12;
  v13 = *(_QWORD *)(v0 + 24);
  if (v12)
  {
    v14 = *(_QWORD *)(v0 + 16);
    v15 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(_QWORD *)(v0 + 88) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v14 + 16);
    if ((v13 & 0xC000000000000001) != 0)
    {
      v16 = (id)MEMORY[0x24269F038](0);
      v15 = *(_QWORD *)(v0 + 88);
      v14 = *(_QWORD *)(v0 + 16);
    }
    else
    {
      v16 = *(id *)(v13 + 32);
    }
    *(_QWORD *)(v0 + 104) = v16;
    *(_QWORD *)(v0 + 112) = 1;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v22;
    *v22 = v0;
    v22[1] = sub_24199919C;
    v7 = v14 + v15;
LABEL_20:
    v6 = (uint64_t)v16;
    return sub_24194F754(v6, v7);
  }
  swift_bridgeObjectRelease();
  if (qword_257162A98 != -1)
    swift_once();
  if (objc_msgSend((id)qword_25716E868, sel_longLivedIdentifierUploadingEnabled))
  {
    v17 = *(_QWORD *)(v0 + 32);
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_2419AA424();
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v0 + 136) = v18;
    v19 = *(_QWORD *)(v0 + 32);
    if (v18)
    {
      v20 = *(_QWORD *)(v0 + 16);
      v21 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      *(_QWORD *)(v0 + 152) = *(_QWORD *)(v20 + 16);
      if ((v19 & 0xC000000000000001) != 0)
      {
        v16 = (id)MEMORY[0x24269F038](0);
        v21 = *(_QWORD *)(v0 + 144);
        v20 = *(_QWORD *)(v0 + 16);
      }
      else
      {
        v16 = *(id *)(v19 + 32);
      }
      *(_QWORD *)(v0 + 160) = v16;
      *(_QWORD *)(v0 + 168) = 1;
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v27;
      *v27 = v0;
      v27[1] = sub_241999464;
      v7 = v20 + v21;
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = sub_2419AA028();
    v25 = sub_2419AA238();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_24193B000, v24, v25, "RPI enabled, skipping ODDSiriAccountInformation upload", v26, 2u);
      MEMORY[0x24269F7A0](v26, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241998EA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241998F08()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2419AA424();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v0 + 80) = v2;
  v3 = *(_QWORD *)(v0 + 24);
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 16);
    v5 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(_QWORD *)(v0 + 88) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v4 + 16);
    if ((v3 & 0xC000000000000001) != 0)
    {
      v6 = (id)MEMORY[0x24269F038](0);
      v5 = *(_QWORD *)(v0 + 88);
      v4 = *(_QWORD *)(v0 + 16);
    }
    else
    {
      v6 = *(id *)(v3 + 32);
    }
    *(_QWORD *)(v0 + 104) = v6;
    *(_QWORD *)(v0 + 112) = 1;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v12;
    *v12 = v0;
    v12[1] = sub_24199919C;
    v13 = v4 + v5;
    return sub_24194F754((uint64_t)v6, v13);
  }
  swift_bridgeObjectRelease();
  if (qword_257162A98 != -1)
    swift_once();
  if (objc_msgSend((id)qword_25716E868, sel_longLivedIdentifierUploadingEnabled))
  {
    v7 = *(_QWORD *)(v0 + 32);
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_2419AA424();
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v0 + 136) = v8;
    v9 = *(_QWORD *)(v0 + 32);
    if (v8)
    {
      v10 = *(_QWORD *)(v0 + 16);
      v11 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      *(_QWORD *)(v0 + 152) = *(_QWORD *)(v10 + 16);
      if ((v9 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x24269F038](0);
        v11 = *(_QWORD *)(v0 + 144);
        v10 = *(_QWORD *)(v0 + 16);
      }
      else
      {
        v6 = *(id *)(v9 + 32);
      }
      *(_QWORD *)(v0 + 160) = v6;
      *(_QWORD *)(v0 + 168) = 1;
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v18;
      *v18 = v0;
      v18[1] = sub_241999464;
      v13 = v10 + v11;
      return sub_24194F754((uint64_t)v6, v13);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_2419AA028();
    v16 = sub_2419AA238();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_24193B000, v15, v16, "RPI enabled, skipping ODDSiriAccountInformation upload", v17, 2u);
      MEMORY[0x24269F7A0](v17, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24199919C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_241999208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 80);

  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    if (qword_257162A98 != -1)
      swift_once();
    if (!objc_msgSend((id)qword_25716E868, sel_longLivedIdentifierUploadingEnabled))
    {
      v12 = sub_2419AA028();
      v13 = sub_2419AA238();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_24193B000, v12, v13, "RPI enabled, skipping ODDSiriAccountInformation upload", v14, 2u);
        MEMORY[0x24269F7A0](v14, -1, -1);
      }

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v3 = *(_QWORD *)(v0 + 32);
    if (!(v3 >> 62))
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
LABEL_7:
      *(_QWORD *)(v0 + 136) = v4;
      v5 = *(_QWORD *)(v0 + 32);
      if (v4)
      {
        v6 = *(_QWORD *)(v0 + 16);
        v7 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
        *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
        *(_QWORD *)(v0 + 152) = *(_QWORD *)(v6 + 16);
        if ((v5 & 0xC000000000000001) != 0)
        {
          v8 = (id)MEMORY[0x24269F038](0);
          v7 = *(_QWORD *)(v0 + 144);
          v6 = *(_QWORD *)(v0 + 16);
        }
        else
        {
          v8 = *(id *)(v5 + 32);
        }
        *(_QWORD *)(v0 + 160) = v8;
        *(_QWORD *)(v0 + 168) = 1;
        v22 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 176) = v22;
        *v22 = v0;
        v22[1] = sub_241999464;
        v19 = v6 + v7;
        v20 = (uint64_t)v8;
        return sub_24194F754(v20, v19);
      }
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
LABEL_24:
    swift_bridgeObjectRetain();
    v4 = sub_2419AA424();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 24);
  if ((v10 & 0xC000000000000001) != 0)
    v11 = (id)MEMORY[0x24269F038](*(_QWORD *)(v0 + 112));
  else
    v11 = *(id *)(v10 + 8 * v9 + 32);
  v15 = (uint64_t)v11;
  *(_QWORD *)(v0 + 104) = v11;
  *(_QWORD *)(v0 + 112) = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  v16 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 16);
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v18;
  *v18 = v0;
  v18[1] = sub_24199919C;
  v19 = v17 + v16;
  v20 = v15;
  return sub_24194F754(v20, v19);
}

uint64_t sub_241999464()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

id sub_2419994D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 136);

  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 32);
    if ((v5 & 0xC000000000000001) != 0)
      result = (id)MEMORY[0x24269F038](*(_QWORD *)(v0 + 168));
    else
      result = *(id *)(v5 + 8 * v4 + 32);
    v6 = (uint64_t)result;
    *(_QWORD *)(v0 + 160) = result;
    *(_QWORD *)(v0 + 168) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      v7 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 16);
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v9;
      *v9 = v0;
      v9[1] = sub_241999464;
      return (id)sub_24194F754(v6, v8 + v7);
    }
  }
  return result;
}

uint64_t sub_2419995A4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  BOOL v3;
  void *v4;
  uint8_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  uint64_t v23;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(void **)(v0 + 72);
  if (v3)
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Unable to report execution Event", v5, 2u);
    MEMORY[0x24269F7A0](v5, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 24);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2419AA424();
    v6 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 80) = v14;
    if (v14)
      goto LABEL_5;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = v7;
    if (v7)
    {
LABEL_5:
      v8 = *(_QWORD *)(v0 + 16);
      v9 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      *(_QWORD *)(v0 + 88) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      *(_QWORD *)(v0 + 96) = *(_QWORD *)(v8 + 16);
      if ((v6 & 0xC000000000000001) != 0)
      {
        v10 = (id)MEMORY[0x24269F038](0, v6);
        v9 = *(_QWORD *)(v0 + 88);
        v8 = *(_QWORD *)(v0 + 16);
      }
      else
      {
        v10 = *(id *)(v6 + 32);
      }
      *(_QWORD *)(v0 + 104) = v10;
      *(_QWORD *)(v0 + 112) = 1;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v11;
      *v11 = v0;
      v11[1] = sub_24199919C;
      v12 = v8 + v9;
      return sub_24194F754((uint64_t)v10, v12);
    }
  }
  swift_bridgeObjectRelease();
  if (qword_257162A98 != -1)
    swift_once();
  if (objc_msgSend((id)qword_25716E868, sel_longLivedIdentifierUploadingEnabled))
  {
    v15 = *(_QWORD *)(v0 + 32);
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_2419AA424();
      v15 = *(_QWORD *)(v0 + 32);
      *(_QWORD *)(v0 + 136) = v23;
      if (v23)
        goto LABEL_16;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 136) = v16;
      if (v16)
      {
LABEL_16:
        v17 = *(_QWORD *)(v0 + 16);
        v18 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
        *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
        *(_QWORD *)(v0 + 152) = *(_QWORD *)(v17 + 16);
        if ((v15 & 0xC000000000000001) != 0)
        {
          v10 = (id)MEMORY[0x24269F038](0, v15);
          v18 = *(_QWORD *)(v0 + 144);
          v17 = *(_QWORD *)(v0 + 16);
        }
        else
        {
          v10 = *(id *)(v15 + 32);
        }
        *(_QWORD *)(v0 + 160) = v10;
        *(_QWORD *)(v0 + 168) = 1;
        v22 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 176) = v22;
        *v22 = v0;
        v22[1] = sub_241999464;
        v12 = v17 + v18;
        return sub_24194F754((uint64_t)v10, v12);
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_2419AA028();
    v20 = sub_2419AA238();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_24193B000, v19, v20, "RPI enabled, skipping ODDSiriAccountInformation upload", v21, 2u);
      MEMORY[0x24269F7A0](v21, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2419998D8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Unable to report devicePropertiesEvent", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  v4 = *(void **)(v0 + 104);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241999994()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Unable to report siriAccountInformationEvent", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  v4 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241999A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
  v2 = sub_2419AA040();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t DevicePropertiesSELFReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DevicePropertiesSELFReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DevicePropertiesReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for DevicePropertiesReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DevicePropertiesReporter.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 80) + *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t sub_241999BC8()
{
  return type metadata accessor for DevicePropertiesSELFReporter();
}

uint64_t type metadata accessor for DevicePropertiesSELFReporter()
{
  uint64_t result;

  result = qword_257166790;
  if (!qword_257166790)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for DevicePropertiesSELFReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DevicePropertiesSELFReporter.__allocating_init(logger:reportingService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t SiriSegmentCohortSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents) = MEMORY[0x24BEE4AF8];
  v5 = v4 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_reportingService) = a2;
  return v4;
}

uint64_t sub_241999CAC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241999D14()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_241999D5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_241999DAC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SiriSegmentCohortSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents) = MEMORY[0x24BEE4AF8];
  v5 = v2 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger;
  v6 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_reportingService) = a2;
  return v2;
}

uint64_t sub_241999E68(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;

  *(_QWORD *)(v2 + 40) = v1;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(type metadata accessor for DeviceSegmentsCohorts(0) - 8);
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  v4 = a1[1];
  *(_OWORD *)(v2 + 64) = *a1;
  *(_OWORD *)(v2 + 80) = v4;
  return swift_task_switch();
}

uint64_t sub_241999ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 96) = v2;
  if (!v2)
  {
LABEL_13:
    v17 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 40);
    v32 = *(_OWORD *)(v0 + 64);
    v33 = v1;
    v34 = v17;
    *(_QWORD *)(v0 + 184) = OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger;
    v19 = sub_24199AE48((uint64_t)&v32);
    v20 = (uint64_t *)(v18 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents);
    swift_beginAccess();
    *v20 = v19;
    swift_bridgeObjectRelease();
    v21 = *v20;
    *(_QWORD *)(v0 + 192) = *v20;
    if (!(v21 >> 62))
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 200) = v22;
      if (!v22)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
LABEL_15:
      v23 = *(_QWORD *)(v0 + 40);
      *(_QWORD *)(v0 + 208) = *(_QWORD *)(v23
                                        + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_reportingService);
      v24 = *(_QWORD *)(v0 + 192);
      if ((v24 & 0xC000000000000001) != 0)
      {
        v25 = (id)MEMORY[0x24269F038](0);
        v23 = *(_QWORD *)(v0 + 40);
      }
      else
      {
        v25 = *(id *)(v24 + 32);
      }
      *(_QWORD *)(v0 + 216) = v25;
      *(_QWORD *)(v0 + 224) = 1;
      v26 = *(_QWORD *)(v0 + 184);
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v27;
      *v27 = v0;
      v27[1] = sub_24199A590;
      return sub_24194FB68((uint64_t)v25, v23 + v26);
    }
LABEL_22:
    swift_bridgeObjectRetain();
    v31 = sub_2419AA424();
    *(_QWORD *)(v0 + 200) = v31;
    if (!v31)
      goto LABEL_23;
    goto LABEL_15;
  }
  v3 = *(_QWORD *)(v0 + 48);
  v4 = OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger;
  *(_QWORD *)(v0 + 104) = OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_reportingService;
  *(_QWORD *)(v0 + 112) = v4;
  *(_DWORD *)(v0 + 248) = *(_DWORD *)(v3 + 80);
  *(_QWORD *)(v0 + 120) = 0;
  v5 = *(_QWORD *)(v1 + 16);
  v6 = swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v7 = 0;
  while (1)
  {
    sub_241943C64(v6+ ((*(unsigned __int8 *)(v0 + 248) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 248))+ *(_QWORD *)(*(_QWORD *)(v0 + 48) + 72) * v7, *(_QWORD *)(v0 + 56), type metadata accessor for DeviceSegmentsCohorts);
    v8 = sub_24199A880();
    *(_QWORD *)(v0 + 128) = v8;
    if (v8 >> 62)
      break;
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 136) = v9;
    if (v9)
      goto LABEL_10;
LABEL_6:
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRelease();
    sub_241943CA8(v12, type metadata accessor for DeviceSegmentsCohorts);
    if (v10 + 1 == v11)
    {
      swift_bridgeObjectRelease();
      v1 = *(_QWORD *)(v0 + 80);
      goto LABEL_13;
    }
    v7 = *(_QWORD *)(v0 + 120) + 1;
    *(_QWORD *)(v0 + 120) = v7;
    v6 = *(_QWORD *)(v0 + 80);
    if (v7 >= *(_QWORD *)(v6 + 16))
      goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  v13 = sub_2419AA424();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 136) = v13;
  if (!v13)
    goto LABEL_6;
LABEL_10:
  v14 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v14 + *(_QWORD *)(v0 + 104));
  v15 = *(_QWORD *)(v0 + 128);
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x24269F038](0);
    v14 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v16 = *(id *)(v15 + 32);
  }
  *(_QWORD *)(v0 + 152) = v16;
  *(_QWORD *)(v0 + 160) = 1;
  v29 = *(_QWORD *)(v0 + 112);
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v30;
  *v30 = v0;
  v30[1] = sub_24199A20C;
  return sub_24194F754((uint64_t)v16, v14 + v29);
}

uint64_t sub_24199A20C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_24199A284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _OWORD v31[2];

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 136);

  if (v1 != v2)
  {
    v11 = *(_QWORD *)(v0 + 160);
LABEL_10:
    v12 = *(_QWORD *)(v0 + 128);
    if ((v12 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x24269F038](v11);
    else
      v13 = *(id *)(v12 + 8 * v11 + 32);
    v14 = (uint64_t)v13;
    *(_QWORD *)(v0 + 152) = v13;
    *(_QWORD *)(v0 + 160) = v11 + 1;
    if (!__OFADD__(v11, 1))
    {
      v15 = *(_QWORD *)(v0 + 112);
      v16 = *(_QWORD *)(v0 + 40);
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v17;
      *v17 = v0;
      v17[1] = sub_24199A20C;
      return sub_24194F754(v14, v16 + v15);
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    v30 = sub_2419AA424();
    *(_QWORD *)(v0 + 200) = v30;
    if (v30)
      goto LABEL_17;
LABEL_24:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  while (1)
  {
    v3 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRelease();
    sub_241943CA8(v5, type metadata accessor for DeviceSegmentsCohorts);
    if (v3 + 1 == v4)
      break;
    v6 = *(_QWORD *)(v0 + 120) + 1;
    *(_QWORD *)(v0 + 120) = v6;
    v7 = *(_QWORD *)(v0 + 80);
    if (v6 >= *(_QWORD *)(v7 + 16))
    {
      __break(1u);
      goto LABEL_22;
    }
    sub_241943C64(v7+ ((*(unsigned __int8 *)(v0 + 248) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 248))+ *(_QWORD *)(*(_QWORD *)(v0 + 48) + 72) * v6, *(_QWORD *)(v0 + 56), type metadata accessor for DeviceSegmentsCohorts);
    v8 = sub_24199A880();
    *(_QWORD *)(v0 + 128) = v8;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_2419AA424();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 136) = v10;
      if (v10)
      {
LABEL_8:
        v11 = 0;
        *(_QWORD *)(v0 + 144) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 104));
        goto LABEL_10;
      }
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)(v0 + 136) = v9;
      if (v9)
        goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v0 + 40);
  v20 = *(_OWORD *)(v0 + 80);
  v31[0] = *(_OWORD *)(v0 + 64);
  v31[1] = v20;
  *(_QWORD *)(v0 + 184) = OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger;
  v21 = sub_24199AE48((uint64_t)v31);
  v22 = (uint64_t *)(v19 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents);
  swift_beginAccess();
  *v22 = v21;
  swift_bridgeObjectRelease();
  v23 = *v22;
  *(_QWORD *)(v0 + 192) = *v22;
  if (v23 >> 62)
    goto LABEL_23;
  v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 200) = v24;
  if (!v24)
    goto LABEL_24;
LABEL_17:
  v25 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v25
                                    + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_reportingService);
  v26 = *(_QWORD *)(v0 + 192);
  if ((v26 & 0xC000000000000001) != 0)
  {
    v27 = (id)MEMORY[0x24269F038](0);
    v25 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v27 = *(id *)(v26 + 32);
  }
  *(_QWORD *)(v0 + 216) = v27;
  *(_QWORD *)(v0 + 224) = 1;
  v28 = *(_QWORD *)(v0 + 184);
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v29;
  *v29 = v0;
  v29[1] = sub_24199A590;
  return sub_24194FB68((uint64_t)v27, v25 + v28);
}

uint64_t sub_24199A590()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

id sub_24199A5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);

  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 192);
    if ((v5 & 0xC000000000000001) != 0)
      result = (id)MEMORY[0x24269F038](*(_QWORD *)(v0 + 224));
    else
      result = *(id *)(v5 + 8 * v4 + 32);
    v6 = (uint64_t)result;
    *(_QWORD *)(v0 + 216) = result;
    *(_QWORD *)(v0 + 224) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      v7 = *(_QWORD *)(v0 + 184);
      v8 = *(_QWORD *)(v0 + 40);
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v9;
      *v9 = v0;
      v9[1] = sub_24199A590;
      return (id)sub_24194FB68(v6, v8 + v7);
    }
  }
  return result;
}

uint64_t sub_24199A6DC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  uint64_t v5;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Unable to report event", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v4 = *(void **)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 56);

  swift_willThrow();
  sub_241943CA8(v5, type metadata accessor for DeviceSegmentsCohorts);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24199A7BC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;

  v1 = sub_2419AA028();
  v2 = sub_2419AA244();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "Unable to report event", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }
  v4 = *(void **)(v0 + 216);

  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24199A880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void **v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  _QWORD v50[2];
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EventMetadata(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BEE4AF8];
  sub_2419416DC(v1, (uint64_t)v4, &qword_257163E60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_241941720((uint64_t)v4, &qword_257163E60);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_241978738((uint64_t)v4, (uint64_t)v8);
    v10 = type metadata accessor for DeviceSegmentsCohorts(0);
    v11 = *(_QWORD *)(v1 + *(int *)(v10 + 20));
    if (v11)
    {
      v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
      if (v12)
      {
        v13 = v12;
        v14 = EventMetadata.transformToODDClientEventMetadata()();
        objc_msgSend(v13, sel_setEventMetadata_, v14);

        v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95510]), sel_init);
        v16 = *(_QWORD *)(v11 + 16);
        if (v16)
        {
          v50[0] = v13;
          v51 = (void *)v10;
          v52 = v1;
          v53 = v8;
          swift_bridgeObjectRetain();
          v50[1] = v11;
          v17 = (unsigned __int8 *)(v11 + 44);
          do
          {
            v18 = *((_DWORD *)v17 - 3);
            v19 = *(v17 - 8);
            v20 = *((_DWORD *)v17 - 1);
            v21 = *v17;
            v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95508]), (SEL)0x2511CCDC8);
            if (v22)
            {
              v23 = v22;
              if (v19)
                v24 = 0;
              else
                v24 = v18;
              objc_msgSend(v22, sel_setSegmentType_, v24);
              if (v21)
                v25 = 0;
              else
                v25 = v20;
              objc_msgSend(v23, sel_setSegmentDataAvailabilityState_, v25);
              v26 = v15;
              objc_msgSend(v26, sel_addSegments_, v23);

            }
            v17 += 32;
            --v16;
          }
          while (v16);
          swift_bridgeObjectRelease();
          v1 = v52;
          v8 = v53;
          v10 = (uint64_t)v51;
          v13 = (void *)v50[0];
        }
        objc_msgSend(v13, sel_setDeviceSegmentsReported_, v15);
        v27 = v13;
        MEMORY[0x24269EE34]();
        if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2419AA1CC();
        sub_2419AA1E4();
        sub_2419AA1C0();

      }
    }
    v28 = *(_QWORD *)(v1 + *(int *)(v10 + 24));
    if (v28)
    {
      v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95588]), sel_init);
      if (v29)
      {
        v30 = v29;
        v31 = EventMetadata.transformToODDClientEventMetadata()();
        objc_msgSend(v30, sel_setEventMetadata_, v31);

        v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95500]), sel_init);
        v33 = v32;
        v34 = *(_QWORD *)(v28 + 16);
        if (v34)
        {
          v51 = v30;
          v35 = v32;
          v53 = v8;
          swift_bridgeObjectRetain();
          v52 = v28;
          v36 = (void **)(v28 + 48);
          do
          {
            v37 = *((_DWORD *)v36 - 4);
            v38 = *((unsigned __int8 *)v36 - 12);
            v39 = *((_DWORD *)v36 - 2);
            v40 = *((unsigned __int8 *)v36 - 4);
            v41 = *v36;
            v42 = objc_allocWithZone(MEMORY[0x24BE954F8]);
            v43 = v41;
            v44 = objc_msgSend(v42, (SEL)0x2511CCDC8);
            if (v44)
            {
              v45 = v44;
              if (v38)
                v46 = 0;
              else
                v46 = v37;
              objc_msgSend(v44, sel_setCohortType_, v46);
              if (v40)
                v47 = 0;
              else
                v47 = v39;
              objc_msgSend(v45, sel_setCohortDataAvailabilityState_, v47);
              objc_msgSend(v45, sel_setCohortInterval_, v43);
              v48 = v35;
              objc_msgSend(v48, sel_addCohorts_, v45);

              v43 = v45;
            }
            v36 += 3;

            --v34;
          }
          while (v34);
          swift_bridgeObjectRelease();
          v8 = v53;
          v33 = v35;
          v30 = v51;
        }
        objc_msgSend(v30, sel_setDeviceCohortsReported_, v33);
        v49 = v30;
        MEMORY[0x24269EE34]();
        if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2419AA1CC();
        sub_2419AA1E4();
        sub_2419AA1C0();

      }
    }
    sub_241943CA8((uint64_t)v8, type metadata accessor for EventMetadata);
    return v54;
  }
}

uint64_t sub_24199AD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t SiriSegmentCohortSELFReporter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SiriSegmentCohortSELFReporter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24199AE48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint32_t *p_align;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  void (*v41)(char *, uint64_t);
  unsigned int v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v58 - v6;
  v62 = sub_2419A9D1C();
  v69 = *(_QWORD *)(v62 - 8);
  v8 = MEMORY[0x24BDAC7A8](v62);
  v61 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v58 - v10;
  v12 = type metadata accessor for DeviceBatchData(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v67 = v7;
    v68 = v11;
    v65 = v13;
    v66 = v5;
    v72 = MEMORY[0x24BEE4AF8];
    v19 = v17 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v20 = *(_QWORD *)(v14 + 72);
    v60 = v17;
    swift_bridgeObjectRetain();
    p_align = &stru_2511CBFE8.align;
    v22 = v62;
    v63 = v20;
    v64 = v16;
    while (1)
    {
      sub_241943C64(v19, (uint64_t)v16, type metadata accessor for DeviceBatchData);
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95458]), *((SEL *)p_align + 67));
      if (v23)
      {
        v24 = v23;
        v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95460]), *((SEL *)p_align + 67));
        if (v25)
        {
          v26 = v25;
          v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95468]), *((SEL *)p_align + 67));
          if (!v27)
          {
            sub_241943CA8((uint64_t)v16, type metadata accessor for DeviceBatchData);

LABEL_23:
            p_align = (_DWORD *)(&stru_2511CBFE8 + 24);
            goto LABEL_4;
          }
          v70 = v27;
          v71 = v26;
          v28 = v22;
          v29 = (uint64_t)v67;
          sub_2419416DC((uint64_t)v16, (uint64_t)v67, &qword_257162D48);
          v30 = v69;
          v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
          if (v31(v29, 1, v28) != 1)
          {
            v32 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
            v32(v68, v29, v28);
            v33 = v16;
            v34 = v65;
            v35 = (uint64_t)v66;
            sub_2419416DC((uint64_t)&v33[*(int *)(v65 + 20)], (uint64_t)v66, &qword_257162D48);
            if (v31(v35, 1, v28) == 1)
            {

              (*(void (**)(char *, uint64_t))(v30 + 8))(v68, v28);
              v16 = v64;
              sub_241943CA8((uint64_t)v64, type metadata accessor for DeviceBatchData);
              sub_241941720(v35, &qword_257162D48);
              v22 = v28;
            }
            else
            {
              v36 = v61;
              v32(v61, v35, v28);
              v37 = (uint64_t)v64;
              v38 = &v64[*(int *)(v34 + 24)];
              if (v38[4] == 1)
              {

                v39 = *(void (**)(char *, uint64_t))(v69 + 8);
                v39(v36, v28);
                v39(v68, v28);
                sub_241943CA8(v37, type metadata accessor for DeviceBatchData);
                v22 = v28;
                v16 = (char *)v37;
              }
              else
              {
                v40 = &v64[*(int *)(v34 + 28)];
                v16 = v64;
                if (v40[4] == 1)
                {

                  v41 = *(void (**)(char *, uint64_t))(v69 + 8);
                  v22 = v62;
                  v41(v36, v62);
                }
                else
                {
                  v42 = *(_DWORD *)v38;
                  v58 = *(_DWORD *)v40;
                  v59 = v42;
                  v43 = objc_allocWithZone(MEMORY[0x24BE95C78]);
                  v44 = (void *)sub_2419A9D04();
                  v45 = objc_msgSend(v43, sel_initWithNSUUID_, v44);

                  v46 = v71;
                  objc_msgSend(v71, sel_setOdbatchId_, v45);

                  v47 = objc_allocWithZone(MEMORY[0x24BE95C78]);
                  v48 = (void *)sub_2419A9D04();
                  v49 = objc_msgSend(v47, sel_initWithNSUUID_, v48);

                  v50 = v70;
                  objc_msgSend(v70, sel_setOriginalClockId_, v49);

                  objc_msgSend(v50, sel_setDaysWithTwoValidAssistantTurnsPerWeek_, v59);
                  objc_msgSend(v50, sel_setDaysWithTwoAssistantSpeechRequestsPerWeek_, v58);
                  objc_msgSend(v24, sel_setEventMetadata_, v46);
                  objc_msgSend(v24, sel_setOdbatchDataReported_, v50);
                  v51 = v24;
                  MEMORY[0x24269EE34]();
                  v22 = v62;
                  v52 = v36;
                  v53 = v69;
                  if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                    sub_2419AA1CC();
                  sub_2419AA1E4();
                  sub_2419AA1C0();

                  v41 = *(void (**)(char *, uint64_t))(v53 + 8);
                  v41(v52, v22);
                }
                v41(v68, v22);
                sub_241943CA8((uint64_t)v16, type metadata accessor for DeviceBatchData);
              }
            }
            v20 = v63;
            goto LABEL_23;
          }
          sub_241943CA8((uint64_t)v16, type metadata accessor for DeviceBatchData);

          sub_241941720(v29, &qword_257162D48);
          p_align = (_DWORD *)(&stru_2511CBFE8 + 24);
          v22 = v28;
        }
        else
        {
          sub_241943CA8((uint64_t)v16, type metadata accessor for DeviceBatchData);

        }
      }
      else
      {
        sub_241943CA8((uint64_t)v16, type metadata accessor for DeviceBatchData);
      }
LABEL_4:
      v19 += v20;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        return v72;
      }
    }
  }
  v55 = sub_2419AA028();
  v56 = sub_2419AA22C();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v57 = 0;
    _os_log_impl(&dword_24193B000, v55, v56, "No On-Device ODBATCH Data available", v57, 2u);
    MEMORY[0x24269F7A0](v57, -1, -1);
  }

  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24199B478@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24199B4D0()
{
  return type metadata accessor for SiriSegmentCohortSELFReporter();
}

uint64_t type metadata accessor for SiriSegmentCohortSELFReporter()
{
  uint64_t result;

  result = qword_257166870;
  if (!qword_257166870)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24199B514()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SiriSegmentCohortSELFReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriSegmentCohortSELFReporter.odBatchClientEvents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SiriSegmentCohortSELFReporter.odBatchClientEvents.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of SiriSegmentCohortSELFReporter.odBatchClientEvents.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of SiriSegmentCohortSELFReporter.__allocating_init(logger:reportingService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for SiriSegmentsCohortsSELFAdapter()
{
  return &type metadata for SiriSegmentsCohortsSELFAdapter;
}

uint64_t SiriBootToAssetMetrics.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  SiriBootToAssetMetrics.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t sub_24199B638@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for SiriBootToAssetCalculator(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_2419AA0DC();
  v5 = (void *)sub_2419AA0DC();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2419A9C08();

    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  else
  {
    v7 = sub_2419A9C14();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t SiriBootToAssetMetrics.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  MEMORY[0x24BDAC7A8](v3);
  v61 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2419A9D64();
  v58 = *(_QWORD *)(v5 - 8);
  v59 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v57 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2419A9CE0();
  v55 = *(_QWORD *)(v7 - 8);
  v56 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v54 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2419A9D1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2419AA040();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v64 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v54 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19((char *)&v54 - v17, a2, v13);
  type metadata accessor for SiriBootToAssetDataProvider();
  v20 = swift_allocObject();
  v69 = v14;
  v62 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v63 = v18;
  v62(v20 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetDataProvider_logger, v18, v13);
  v21 = v73;
  *(_QWORD *)(v73 + 24) = v20;
  v22 = v21 + OBJC_IVAR____TtC16MetricsFramework22SiriBootToAssetMetrics_logger;
  v23 = v21;
  v19((char *)(v21 + OBJC_IVAR____TtC16MetricsFramework22SiriBootToAssetMetrics_logger), a2, v13);
  sub_2419A9D10();
  v24 = v23 + OBJC_IVAR____TtC16MetricsFramework22SiriBootToAssetMetrics_oddId;
  v66 = v10;
  v67 = v9;
  v25 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v60 = v12;
  v25(v24, v12, v9);
  v26 = sub_2419A9F8C();
  swift_allocObject();
  v68 = v68;
  v27 = sub_2419A9F80();
  v71 = v26;
  v72 = MEMORY[0x24BE2BBA0];
  v28 = a2;
  v70 = v27;
  v29 = a2;
  v30 = (void (*)(uint64_t, uint64_t, uint64_t))v19;
  v19(v64, v29, v13);
  sub_2419A9E0C();
  swift_allocObject();
  v31 = v65;
  v32 = sub_2419A9DF4();
  if (v31)
  {

    v33 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v33(v28, v13);
    v34 = v73;
    swift_release();
    v33(v22, v13);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v24, v67);
    type metadata accessor for SiriBootToAssetMetrics();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v35 = v32;
    v36 = v54;
    sub_2419A9F14();
    v65 = 0;
    v37 = v57;
    sub_2419A9D58();
    sub_2419A9E00();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v59);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v56);
    v38 = (uint64_t)v63;
    v39 = v30;
    v30((uint64_t)v63, v28, v13);
    v40 = v13;
    v41 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v60, v24, v67);
    v64 = (char *)v35;
    swift_retain();
    v42 = v61;
    sub_24199B638(v61);
    type metadata accessor for SiriBootToAssetCalculator(0);
    swift_allocObject();
    v43 = SiriBootToAssetCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(v38, v42, v35, v41);
    v34 = v73;
    *(_QWORD *)(v73 + 32) = v43;
    v44 = v40;
    v39(v38, v28, v40);
    v45 = type metadata accessor for SELFReportingService();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 24) = objc_msgSend((id)objc_opt_self(), sel_sharedLoggerWithPersistenceConfiguration_, 1);
    v47 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
    v48 = objc_msgSend(v47, sel_defaultMessageStream);

    *(_QWORD *)(v46 + 16) = v48;
    type metadata accessor for SiriBootToAssetSELFReporter();
    v49 = swift_allocObject();
    v50 = (uint64_t *)(v49 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_reportingService);
    v50[3] = v45;
    v50[4] = (uint64_t)&protocol witness table for SELFReportingService;
    *v50 = v46;
    v62(v49 + OBJC_IVAR____TtC16MetricsFramework27SiriBootToAssetSELFReporter_logger, (char *)v38, v44);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571630D0);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_2419AB250;
    *(_QWORD *)(v51 + 32) = v49;
    v70 = v51;
    sub_2419AA1C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257166940);
    swift_allocObject();
    swift_retain();
    v70 = sub_2419A9DC4();
    __swift_instantiateConcreteTypeFromMangledName(qword_257166948);
    swift_allocObject();
    v52 = sub_2419A9DDC();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v28, v44);
    *(_QWORD *)(v34 + 16) = v52;
  }
  return v34;
}

uint64_t type metadata accessor for SiriBootToAssetMetrics()
{
  uint64_t result;

  result = qword_2571669C0;
  if (!qword_2571669C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24199BD68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24199BD80()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: ODDAssetAvailabilityFromBoodDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24199BE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_24199BE5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 32) = v1;
  v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE2B748] + MEMORY[0x24BE2B748]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_241946A8C;
  return v4(v0 + 16);
}

uint64_t sub_24199BED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_24199BEF0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_24199BF48;
  return sub_24199374C(v0 + 16);
}

uint64_t sub_24199BF48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24199BFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SiriBootToAssetMetrics.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22SiriBootToAssetMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework22SiriBootToAssetMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SiriBootToAssetMetrics.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22SiriBootToAssetMetrics_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework22SiriBootToAssetMetrics_oddId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_24199C0DC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_24199C0F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v3;
  return swift_task_switch();
}

uint64_t sub_24199C114(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_24199C140()
{
  return sub_24199C1AC(&qword_257166968, (uint64_t)&protocol conformance descriptor for SiriBootToAssetMetrics);
}

uint64_t sub_24199C164()
{
  return sub_24199C1AC(&qword_257166970, (uint64_t)&protocol conformance descriptor for SiriBootToAssetMetrics);
}

uint64_t sub_24199C188()
{
  return sub_24199C1AC(qword_257166978, (uint64_t)&protocol conformance descriptor for SiriBootToAssetMetrics);
}

uint64_t sub_24199C1AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SiriBootToAssetMetrics();
    result = MEMORY[0x24269F6EC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24199C1EC()
{
  return type metadata accessor for SiriBootToAssetMetrics();
}

uint64_t sub_24199C1F4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2419AA040();
  if (v1 <= 0x3F)
  {
    result = sub_2419A9D1C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SiriBootToAssetMetrics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriBootToAssetMetrics.__allocating_init(defaults:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SiriBootToAssetMetrics.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of SiriBootToAssetMetrics.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2419470D8;
  return v6(a1);
}

uint64_t dispatch thunk of SiriBootToAssetMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t SiriDeviceExperimentMetricsReporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24199C3FC()
{
  return swift_task_switch();
}

uint64_t sub_24199C410()
{
  return sub_2419AA418();
}

uint64_t SiriDeviceExperimentMetricsReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SiriDeviceExperimentMetricsReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriDeviceExperimentMetricsReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsReporter.report(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 80) + *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

uint64_t AssetPenetrationCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = swift_allocObject();
  sub_2419A9D58();
  v9 = v8 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_logger;
  v10 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  sub_24196D304(a2, v8 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_sqlFileURL);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_bookmarkService) = a3;
  v11 = v8 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_oddId;
  v12 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a4, v12);
  return v8;
}

uint64_t SiriAssetPenetrationResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriAssetPenetrationResults.eventStreamMetadata.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SiriAssetPenetrationResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriAssetPenetrationResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriAssetPenetrationResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SiriAssetPenetrationResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriAssetPenetrationResults.assetPenetrationData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriAssetPenetrationResults.assetPenetrationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SiriAssetPenetrationResults.assetPenetrationData.modify())()
{
  return nullsub_1;
}

uint64_t AssetPenetrationCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2419A9D58();
  v9 = v4 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_logger;
  v10 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  sub_24196D304(a2, v4 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_sqlFileURL);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_bookmarkService) = a3;
  v11 = v4 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_oddId;
  v12 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a4, v12);
  return v4;
}

uint64_t sub_24199C778(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_2419A9CE0();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  v2[8] = swift_task_alloc();
  v4 = sub_2419A9C14();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24199C824()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_logger;
  swift_retain_n();
  v2 = sub_2419AA028();
  v3 = sub_2419AA238();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v29 = v5;
    sub_2419A9D1C();
    sub_24199D24C();
    v6 = sub_2419AA568();
    *(_QWORD *)(v0 + 16) = sub_24193F470(v6, v7, &v29);
    sub_2419AA2EC();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24193B000, v2, v3, "SQL calculator invoked: SiriAssetPenetrationCalculator %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24269F7A0](v5, -1, -1);
    MEMORY[0x24269F7A0](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 64);
  sub_2419972C4(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_sqlFileURL, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    sub_24199CC58(*(_QWORD *)(v0 + 64));
    sub_24193F23C();
    swift_allocError();
    *v11 = 9;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 32))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    v12 = (void *)sub_2419A9DE8();
    v13 = *(_QWORD *)(v0 + 88);
    v14 = v12;
    v15 = sub_24199CC98(v13, v14);
    v17 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 72);
    v20 = (uint64_t)v15;
    v21 = *(_QWORD *)(v0 + 56);
    v27 = *(_QWORD *)(v0 + 48);
    v22 = *(_QWORD *)(v0 + 32);
    v28 = *(_QWORD *)(v0 + 40);
    v23 = *(uint64_t **)(v0 + 24);

    v24 = sub_24198FB58(v20, v22 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_oddId, v1);
    sub_2419A9D94();
    v25 = sub_2419A9DA0();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v21, v28);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    v26 = MEMORY[0x24BEE4AF8];
    *v23 = v25;
    v23[1] = v26;
    v23[2] = v24;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24199CC58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162CF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint8_t *sub_24199CC98(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  _BYTE *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  os_log_t v29;
  uint64_t v30;
  _QWORD *v31;
  os_log_t v32;
  id v33;
  uint64_t v34;

  v4 = sub_2419AA118();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint8_t *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2419AA10C();
  sub_2419AA0C4();
  if (v2)
  {
    v7 = sub_2419AA028();
    v8 = sub_2419AA244();
    if (os_log_type_enabled(v7, v8))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_24193B000, v7, v8, "SQL file could not be loaded", v6, 2u);
      MEMORY[0x24269F7A0](v6, -1, -1);
    }

    sub_24193F23C();
    swift_allocError();
    *v9 = 10;
    swift_willThrow();

  }
  else
  {
    v11 = sub_2419A9F68();
    v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257162D20);
    sub_2419A9F5C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2419AB050;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v11;
    *(_QWORD *)(v14 + 24) = v13;
    swift_retain();
    sub_2419A9F50();
    v15 = objc_allocWithZone((Class)sub_2419A9EE4());
    v16 = a2;
    v17 = (void *)sub_2419A9EC0();
    v6 = (uint8_t *)sub_2419A9ED8();
    swift_bridgeObjectRelease();
    v18 = (void *)sub_2419A9F08();
    if (v18)
    {
      v19 = v18;
      v20 = v18;
      v21 = v19;
      v22 = sub_2419AA028();
      v23 = sub_2419AA244();
      if (os_log_type_enabled(v22, v23))
      {
        v33 = v17;
        v24 = swift_slowAlloc();
        v32 = v22;
        v25 = (uint8_t *)v24;
        v31 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v25 = 138412290;
        v26 = v19;
        v27 = _swift_stdlib_bridgeErrorToNSError();
        v34 = v27;
        sub_2419AA2EC();
        v28 = v31;
        *v31 = v27;

        v29 = v32;
        _os_log_impl(&dword_24193B000, v32, v23, "%@", v25, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257162D28);
        swift_arrayDestroy();
        MEMORY[0x24269F7A0](v28, -1, -1);
        MEMORY[0x24269F7A0](v25, -1, -1);
        swift_release();

      }
      else
      {
        swift_release();

      }
    }
    else
    {

      swift_release();
    }
  }
  return v6;
}

uint64_t AssetPenetrationCalculator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_24199CC58(v0 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_sqlFileURL);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_calendar;
  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_oddId;
  v6 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t AssetPenetrationCalculator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_24199CC58(v0 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_sqlFileURL);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_calendar;
  v4 = sub_2419A9D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_oddId;
  v6 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t sub_24199D1F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24193D468;
  return sub_24199C778(a1);
}

unint64_t sub_24199D24C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257162D30;
  if (!qword_257162D30)
  {
    v1 = sub_2419A9D1C();
    result = MEMORY[0x24269F6EC](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_257162D30);
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriAssetPenetrationResults()
{
  return &type metadata for SiriAssetPenetrationResults;
}

uint64_t sub_24199D2A4()
{
  return type metadata accessor for AssetPenetrationCalculator();
}

uint64_t type metadata accessor for AssetPenetrationCalculator()
{
  uint64_t result;

  result = qword_257166BB0;
  if (!qword_257166BB0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24199D2E8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2419AA040();
  if (v0 <= 0x3F)
  {
    sub_2419415E0();
    if (v1 <= 0x3F)
    {
      sub_2419A9D64();
      if (v2 <= 0x3F)
      {
        sub_2419A9D1C();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for AssetPenetrationCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetPenetrationCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AssetPenetrationCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 128) + *(_QWORD *)(*(_QWORD *)v2 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24193D468;
  return v8(a1, a2);
}

uint64_t sub_24199D438()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t SiriDeviceExperimentMetricsDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SiriDeviceExperimentMetricsDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsDataProvider_logger;
  v4 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_24199D518()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24199D530()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: SiriDeviceExperimentMetricsDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SiriDeviceExperimentMetricsDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriDeviceExperimentMetricsDataProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24199D674()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for SiriDeviceExperimentMetricsDataRecord()
{
  return &type metadata for SiriDeviceExperimentMetricsDataRecord;
}

uint64_t sub_24199D6A0()
{
  return type metadata accessor for SiriDeviceExperimentMetricsDataProvider();
}

uint64_t type metadata accessor for SiriDeviceExperimentMetricsDataProvider()
{
  uint64_t result;

  result = qword_257166CB0;
  if (!qword_257166CB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for SiriDeviceExperimentMetricsDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsDataProvider.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsDataProvider.loadData()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24193D468;
  return v6(a1);
}

ValueMetadata *type metadata accessor for RequestWithNoAssetDataRecord()
{
  return &type metadata for RequestWithNoAssetDataRecord;
}

uint64_t sub_24199D770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetDataProvider_logger;
  v2 = sub_2419AA040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24199D7C0()
{
  return type metadata accessor for RequestWithNoAssetDataProvider();
}

uint64_t type metadata accessor for RequestWithNoAssetDataProvider()
{
  uint64_t result;

  result = qword_257166D78;
  if (!qword_257166D78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24199D804()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_24199D820()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_2419AA028();
  v2 = sub_2419AA238();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24193B000, v1, v2, "no-op data provider invoked: RequestWithNoAssetDataProvider", v3, 2u);
    MEMORY[0x24269F7A0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id EventMetadata.transformToODDClientEventMetadata()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  unsigned int (*v19)(_QWORD, _QWORD, _QWORD);
  id v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD, _QWORD, _QWORD);
  void *v26;
  id v27;
  int *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  unsigned int v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v41 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v41 - v9;
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE954F0]), sel_init);
  if (v18)
  {
    sub_2419416DC(v1, (uint64_t)v10, &qword_257162D48);
    v19 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v12 + 48);
    if (v19(v10, 1, v11) == 1)
    {
      sub_241941720((uint64_t)v10, &qword_257162D48);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
      v20 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v21 = sub_2419A9D04();
      v42 = v15;
      v22 = v5;
      v23 = v18;
      v24 = v1;
      v25 = v19;
      v26 = (void *)v21;
      v27 = objc_msgSend(v20, sel_initWithNSUUID_, v21);

      v19 = v25;
      v1 = v24;
      v18 = v23;
      v5 = v22;
      v15 = v42;
      objc_msgSend(v18, sel_setOddId_, v27);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    v28 = (int *)type metadata accessor for EventMetadata(0);
    sub_2419416DC(v1 + v28[5], (uint64_t)v8, &qword_257162D48);
    if (v19(v8, 1, v11) == 1)
    {
      sub_241941720((uint64_t)v8, &qword_257162D48);
      sub_2419AA238();
      sub_241943088(0, (unint64_t *)&qword_2571664D0);
      v29 = (void *)sub_2419AA2BC();
      sub_2419A9F98();

    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v8, v11);
      v30 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v31 = (void *)sub_2419A9D04();
      v32 = objc_msgSend(v30, sel_initWithNSUUID_, v31);

      objc_msgSend(v18, sel_setDeviceAggregationId_, v32);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    sub_2419416DC(v1 + v28[6], (uint64_t)v5, &qword_257162D48);
    v33 = v19(v5, 1, v11);
    sub_241941720((uint64_t)v5, &qword_257162D48);
    if (v33 == 1)
    {
      sub_2419AA238();
      sub_241943088(0, (unint64_t *)&qword_2571664D0);
      v34 = (void *)sub_2419AA2BC();
      sub_2419A9F98();

    }
    v35 = v1 + v28[10];
    if ((*(_BYTE *)(v35 + 8) & 1) != 0)
    {
      sub_2419AA238();
      sub_241943088(0, (unint64_t *)&qword_2571664D0);
      v36 = (void *)sub_2419AA2BC();
      sub_2419A9F98();

    }
    else
    {
      objc_msgSend(v18, sel_setUserAggregationIdExpirationTimestampMs_, *(_QWORD *)v35);
    }
    v37 = v1 + v28[9];
    if ((*(_BYTE *)(v37 + 8) & 1) != 0)
    {
      sub_2419AA238();
      sub_241943088(0, (unint64_t *)&qword_2571664D0);
      v38 = (void *)sub_2419AA2BC();
      sub_2419A9F98();

    }
    else
    {
      objc_msgSend(v18, sel_setUserAggregationIdRotationTimestampMs_, *(_QWORD *)v37);
    }
    v39 = v1 + v28[7];
    if ((*(_BYTE *)(v39 + 8) & 1) == 0)
      objc_msgSend(v18, sel_setEventTimestampInMsSince1970_, *(_QWORD *)v39);
    if (*(_QWORD *)(v1 + v28[8]))
      objc_msgSend(v18, sel_setAggregationInterval_);
  }
  return v18;
}

uint64_t type metadata accessor for EventMetadata(uint64_t a1)
{
  return sub_241941450(a1, qword_257166ED8);
}

id static ODDSiriSchemaODDTimeInterval.toBiomeEvent(timeInterval:)(id a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  if (a1)
  {
    objc_msgSend(a1, sel_startTimestampInSecondsSince1970);
    objc_msgSend(v1, sel_numberOfSeconds);
    v1 = (id)sub_2419AA634();
    v2 = (void *)sub_2419AA628();
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6D8]), sel_initWithStartTimestampInSecondsSince1970_numberOfSeconds_, v1, v2);

  return v3;
}

uint64_t ProductId.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

id static SISchemaISOLocale.toBiomeEvent(isoLocale:)(id a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  if (a1)
  {
    objc_msgSend(a1, sel_languageCode);
    v2 = (void *)sub_2419AA5D4();
    objc_msgSend(v1, sel_countryCode);
    v1 = (id)sub_2419AA5D4();
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6F8]), sel_initWithLanguageCode_countryCode_, v2, v1);

  return v3;
}

uint64_t static ProductId.fromString(productIdString:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  char v6;

  if (!a2)
    goto LABEL_10;
  v5 = result;
  if (result != 0x4E41545349535341 || a2 != 0xE900000000000054)
  {
    result = sub_2419AA574();
    if ((result & 1) == 0)
    {
      if (v5 == 0x4F49544154434944 && a2 == 0xE90000000000004ELL || (result = sub_2419AA574(), (result & 1) != 0))
      {
        v6 = 2;
        goto LABEL_11;
      }
LABEL_10:
      v6 = 0;
      goto LABEL_11;
    }
  }
  v6 = 1;
LABEL_11:
  *a3 = v6;
  return result;
}

void EventMetadata.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  int *v16;
  void *v17;
  id v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_2419A9D1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v19 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v19 - v13;
  sub_2419416DC(v1, (uint64_t)&v19 - v13, &qword_257162D48);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v15(v14, 1, v2) == 1)
  {
    sub_2419AA604();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
    sub_2419AA604();
    sub_24194169C(&qword_257166E10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_2419AA07C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v16 = (int *)type metadata accessor for EventMetadata(0);
  sub_2419416DC(v1 + v16[5], (uint64_t)v12, &qword_257162D48);
  if (v15(v12, 1, v2) == 1)
  {
    sub_2419AA604();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    sub_2419AA604();
    sub_24194169C(&qword_257166E10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_2419AA07C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_2419416DC(v1 + v16[6], (uint64_t)v9, &qword_257162D48);
  if (v15(v9, 1, v2) == 1)
  {
    sub_2419AA604();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_2419AA604();
    sub_24194169C(&qword_257166E10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_2419AA07C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (*(_BYTE *)(v1 + v16[9] + 8) == 1)
  {
    sub_2419AA604();
  }
  else
  {
    sub_2419AA604();
    sub_2419AA610();
  }
  if (*(_BYTE *)(v1 + v16[10] + 8) == 1)
  {
    sub_2419AA604();
  }
  else
  {
    sub_2419AA604();
    sub_2419AA610();
  }
  if (*(_BYTE *)(v1 + v16[7] + 8) == 1)
  {
    sub_2419AA604();
  }
  else
  {
    sub_2419AA604();
    sub_2419AA610();
  }
  v17 = *(void **)(v1 + v16[8]);
  sub_2419AA604();
  if (v17)
  {
    v18 = v17;
    sub_2419AA298();

  }
}

uint64_t EventMetadata.hashValue.getter()
{
  sub_2419AA5EC();
  EventMetadata.hash(into:)();
  return sub_2419AA61C();
}

uint64_t sub_24199E430()
{
  sub_2419AA5EC();
  EventMetadata.hash(into:)();
  return sub_2419AA61C();
}

uint64_t sub_24199E470()
{
  sub_2419AA5EC();
  EventMetadata.hash(into:)();
  return sub_2419AA61C();
}

MetricsFramework::ProductId_optional __swiftcall ProductId.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (MetricsFramework::ProductId_optional)rawValue;
}

uint64_t sub_24199E4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, char a11, int a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, int a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,int a28,char a29,int a30,char a31,int a32,char a33,int a34,char a35,int a36,char a37,int a38,char a39,int a40,char a41,int a42,char a43,int a44,char a45,int a46,char a47,int a48,char a49,int a50,char a51,int a52,char a53,uint64_t a54,uint64_t a55,int a56,char a57,uint64_t a58,char a59)
{
  char v62;
  int *v63;
  uint64_t result;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;

  v62 = *a6;
  sub_24194184C(a1, a9, &qword_257163E60);
  v63 = (int *)type metadata accessor for DeviceUsageMetrics(0);
  result = sub_24194184C(a2, a9 + v63[5], &qword_257162D48);
  v65 = (_QWORD *)(a9 + v63[6]);
  *v65 = a3;
  v65[1] = a4;
  v66 = a9 + v63[7];
  *(_DWORD *)v66 = a5;
  *(_BYTE *)(v66 + 4) = BYTE4(a5) & 1;
  *(_BYTE *)(a9 + v63[8]) = v62;
  v67 = (_QWORD *)(a9 + v63[9]);
  *v67 = a7;
  v67[1] = a8;
  v68 = a9 + v63[10];
  *(_DWORD *)v68 = a10;
  *(_BYTE *)(v68 + 4) = a11 & 1;
  v69 = a9 + v63[11];
  *(_DWORD *)v69 = a12;
  *(_BYTE *)(v69 + 4) = a13 & 1;
  v70 = (_QWORD *)(a9 + v63[12]);
  *v70 = a14;
  v70[1] = a15;
  v71 = (_QWORD *)(a9 + v63[13]);
  *v71 = a16;
  v71[1] = a17;
  v72 = a9 + v63[14];
  *(_DWORD *)v72 = a18;
  *(_BYTE *)(v72 + 4) = a19 & 1;
  v73 = a9 + v63[15];
  *(_DWORD *)v73 = a20;
  *(_BYTE *)(v73 + 4) = a21 & 1;
  *(_QWORD *)(a9 + v63[16]) = a22;
  *(_QWORD *)(a9 + v63[17]) = a23;
  v74 = (_QWORD *)(a9 + v63[18]);
  *v74 = a24;
  v74[1] = a25;
  v75 = a9 + v63[19];
  *(_DWORD *)v75 = a26;
  *(_BYTE *)(v75 + 4) = a27 & 1;
  v76 = a9 + v63[20];
  *(_DWORD *)v76 = a28;
  *(_BYTE *)(v76 + 4) = a29 & 1;
  v77 = a9 + v63[21];
  *(_DWORD *)v77 = a30;
  *(_BYTE *)(v77 + 4) = a31 & 1;
  v78 = a9 + v63[22];
  *(_DWORD *)v78 = a32;
  *(_BYTE *)(v78 + 4) = a33 & 1;
  v79 = a9 + v63[23];
  *(_DWORD *)v79 = a34;
  *(_BYTE *)(v79 + 4) = a35 & 1;
  v80 = a9 + v63[24];
  *(_DWORD *)v80 = a36;
  *(_BYTE *)(v80 + 4) = a37 & 1;
  v81 = a9 + v63[25];
  *(_DWORD *)v81 = a38;
  *(_BYTE *)(v81 + 4) = a39 & 1;
  v82 = a9 + v63[26];
  *(_DWORD *)v82 = a40;
  *(_BYTE *)(v82 + 4) = a41 & 1;
  v83 = a9 + v63[27];
  *(_DWORD *)v83 = a42;
  *(_BYTE *)(v83 + 4) = a43 & 1;
  v84 = a9 + v63[28];
  *(_DWORD *)v84 = a44;
  *(_BYTE *)(v84 + 4) = a45 & 1;
  v85 = a9 + v63[29];
  *(_DWORD *)v85 = a46;
  *(_BYTE *)(v85 + 4) = a47 & 1;
  v86 = a9 + v63[30];
  *(_DWORD *)v86 = a48;
  *(_BYTE *)(v86 + 4) = a49 & 1;
  v87 = a9 + v63[31];
  *(_DWORD *)v87 = a50;
  *(_BYTE *)(v87 + 4) = a51 & 1;
  v88 = a9 + v63[32];
  *(_DWORD *)v88 = a52;
  *(_BYTE *)(v88 + 4) = a53 & 1;
  v89 = (_QWORD *)(a9 + v63[33]);
  *v89 = a54;
  v89[1] = a55;
  v90 = a9 + v63[34];
  *(_DWORD *)v90 = a56;
  *(_BYTE *)(v90 + 4) = a57 & 1;
  *(_QWORD *)(a9 + v63[35]) = a58;
  *(_BYTE *)(a9 + v63[36]) = a59;
  return result;
}

MetricsFramework::ProductId_optional sub_24199E890(Swift::Int *a1)
{
  return ProductId.init(rawValue:)(*a1);
}

void sub_24199E898(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_24199E8A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int *v17;
  uint64_t *v18;
  unsigned int *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  void *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  unsigned __int8 v77;
  char v78;

  v76 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v7;
  v8 = v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_eventMetadata;
  swift_beginAccess();
  sub_2419416DC(v8, (uint64_t)v7, &qword_257163E60);
  v9 = v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_assistantId;
  swift_beginAccess();
  sub_2419416DC(v9, (uint64_t)v4, &qword_257162D48);
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_deviceType);
  v78 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_productId);
  v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_systemBuild);
  v71 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_audioInterfaceVendorId);
  v70 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_audioInterfaceProductId);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriInputLocale);
  v72 = *(void **)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dictationLocale);
  v73 = v12;
  v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_subDomain);
  v14 = (unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_fatalResponseCount);
  v15 = (unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_failureResponseCount);
  v16 = (unsigned int *)(v1
                       + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriUnavailableResponseCount);
  v17 = (unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrTurnCount);
  v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriResponseId);
  v19 = (unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_responseCategory);
  v67 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_turnIds);
  v65 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_isIntelligenceEngineRequest);
  v20 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_programCode);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_programCode + 4);
  v21 = v20 | ((unint64_t)v77 << 32);
  v22 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dataSharingOptInStatus);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dataSharingOptInStatus + 4);
  v68 = v22 | ((unint64_t)v77 << 32);
  v69 = v21;
  v23 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_viewInterface);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_viewInterface + 4);
  v66 = v23 | ((unint64_t)v77 << 32);
  v24 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrLocation);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrLocation + 4);
  v64 = v24 | ((unint64_t)v77 << 32);
  v25 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_nlLocation);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_nlLocation + 4);
  v26 = v25 | ((unint64_t)v77 << 32);
  v27 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_totalTurnCount);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_totalTurnCount + 4);
  v28 = v27 | ((unint64_t)v77 << 32);
  v29 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_validTurnCount);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_validTurnCount + 4);
  v30 = v29 | ((unint64_t)v77 << 32);
  v31 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriTasksStarted);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriTasksStarted + 4);
  v32 = v31 | ((unint64_t)v77 << 32);
  v33 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriTasksCompleted);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriTasksCompleted + 4);
  v34 = v33 | ((unint64_t)v77 << 32);
  v35 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_flowTasksStarted);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_flowTasksStarted + 4);
  v36 = v35 | ((unint64_t)v77 << 32);
  v37 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_flowTasksCompleted);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_flowTasksCompleted + 4);
  v38 = v37 | ((unint64_t)v77 << 32);
  v39 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_reliabilityRequestCount);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_reliabilityRequestCount + 4);
  v40 = v39 | ((unint64_t)v77 << 32);
  v41 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_reliabilityTurnCount);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_reliabilityTurnCount + 4);
  v42 = v41 | ((unint64_t)v77 << 32);
  v43 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_clientErrorCount);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_clientErrorCount + 4);
  v44 = v43 | ((unint64_t)v77 << 32);
  v45 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_undesiredResponseCount);
  v77 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_undesiredResponseCount + 4);
  v46 = v45 | ((unint64_t)v77 << 32);
  v47 = *v14;
  v77 = *((_BYTE *)v14 + 4);
  v48 = v47 | ((unint64_t)v77 << 32);
  v49 = *v15;
  v77 = *((_BYTE *)v15 + 4);
  v50 = v49 | ((unint64_t)v77 << 32);
  v51 = *v16;
  v77 = *((_BYTE *)v16 + 4);
  v52 = v51 | ((unint64_t)v77 << 32);
  v53 = *v17;
  v77 = *((_BYTE *)v17 + 4);
  v54 = v53 | ((unint64_t)v77 << 32);
  v55 = *v19;
  v77 = *((_BYTE *)v19 + 4);
  v62 = v52;
  v61 = v46;
  v56 = v72;
  v57 = (void *)v12;
  sub_24199E4C0((uint64_t)v75, (uint64_t)v74, *v10, v10[1], v69, &v78, *v11, v11[1], v76, v68, SBYTE4(v68), v66, SBYTE4(v66), *v71, v71[1], *v70, v70[1], v64, SBYTE4(v64),
    v26,
    SBYTE4(v26),
    v12,
    (uint64_t)v72,
    *v13,
    v13[1],
    v28,
    SBYTE4(v28),
    v30,
    SBYTE4(v30),
    v32,
    SBYTE4(v32),
    v34,
    SBYTE4(v34),
    v36,
    SBYTE4(v36),
    v38,
    SBYTE4(v38),
    v40,
    SBYTE4(v40),
    v42,
    SBYTE4(v42),
    v44,
    SBYTE4(v44),
    v61,
    SBYTE4(v61),
    v48,
    SBYTE4(v48),
    v50,
    SBYTE4(v50),
    v62,
    SBYTE4(v62),
    v54,
    SBYTE4(v54),
    *v18,
    v18[1],
    v55,
    (v55 | ((unint64_t)v77 << 32)) >> 32,
    v67,
    v65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = v57;
  v59 = v56;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DeviceUsageMetricsBuilderImpl.deinit()
{
  uint64_t v0;

  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_eventMetadata, &qword_257163E60);
  sub_241941720(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_assistantId, &qword_257162D48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DeviceUsageMetricsBuilderImpl.__deallocating_deinit()
{
  DeviceUsageMetricsBuilderImpl.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24199EEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_eventMetadata;
  v2 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_assistantId;
  v4 = sub_2419A9D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_deviceType);
  *v5 = 0;
  v5[1] = 0;
  v6 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_programCode;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_productId) = 3;
  v7 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_systemBuild);
  *v7 = 0;
  v7[1] = 0;
  v8 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dataSharingOptInStatus;
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_viewInterface;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_audioInterfaceVendorId);
  *v10 = 0;
  v10[1] = 0;
  v11 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_audioInterfaceProductId);
  *v11 = 0;
  v11[1] = 0;
  v12 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrLocation;
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_nlLocation;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriInputLocale) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dictationLocale) = 0;
  v14 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_subDomain);
  *v14 = 0;
  v14[1] = 0;
  v15 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_totalTurnCount;
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_validTurnCount;
  *(_DWORD *)v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  v17 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriTasksStarted;
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  v18 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriTasksCompleted;
  *(_DWORD *)v18 = 0;
  *(_BYTE *)(v18 + 4) = 1;
  v19 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_flowTasksStarted;
  *(_DWORD *)v19 = 0;
  *(_BYTE *)(v19 + 4) = 1;
  v20 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_flowTasksCompleted;
  *(_DWORD *)v20 = 0;
  *(_BYTE *)(v20 + 4) = 1;
  v21 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_reliabilityRequestCount;
  *(_DWORD *)v21 = 0;
  *(_BYTE *)(v21 + 4) = 1;
  v22 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_reliabilityTurnCount;
  *(_DWORD *)v22 = 0;
  *(_BYTE *)(v22 + 4) = 1;
  v23 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_clientErrorCount;
  *(_DWORD *)v23 = 0;
  *(_BYTE *)(v23 + 4) = 1;
  v24 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_undesiredResponseCount;
  *(_DWORD *)v24 = 0;
  *(_BYTE *)(v24 + 4) = 1;
  v25 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_fatalResponseCount;
  *(_DWORD *)v25 = 0;
  *(_BYTE *)(v25 + 4) = 1;
  v26 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_failureResponseCount;
  *(_DWORD *)v26 = 0;
  *(_BYTE *)(v26 + 4) = 1;
  v27 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriUnavailableResponseCount;
  *(_DWORD *)v27 = 0;
  *(_BYTE *)(v27 + 4) = 1;
  v28 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrTurnCount;
  *(_DWORD *)v28 = 0;
  *(_BYTE *)(v28 + 4) = 1;
  v29 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriResponseId);
  *v29 = 0;
  v29[1] = 0;
  v30 = v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_responseCategory;
  *(_DWORD *)v30 = 0;
  *(_BYTE *)(v30 + 4) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_turnIds) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_isIntelligenceEngineRequest) = 2;
  return v0;
}

id sub_24199F1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  v11 = v10;
  if (a2)
  {
    v16 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    v17 = a9;
    if (a4)
      goto LABEL_3;
LABEL_6:
    v18 = 0;
    v19 = a10;
    if (a6)
      goto LABEL_4;
LABEL_7:
    v20 = 0;
    goto LABEL_8;
  }
  v16 = 0;
  v17 = a9;
  if (!a4)
    goto LABEL_6;
LABEL_3:
  v18 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
  v19 = a10;
  if (!a6)
    goto LABEL_7;
LABEL_4:
  v20 = (void *)sub_2419AA0DC();
  swift_bridgeObjectRelease();
LABEL_8:
  v21 = objc_msgSend(v11, sel_initWithOddIdUUID_deviceAggregationId_userAggregationId_eventTimestampInMSSince1970_timeInterval_userAggregationIdRotationTimestampInMs_userAggregationIdExpirationTimestampInMs_, v16, v18, v20, a7, a8, v17, v19);

  return v21;
}

id _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;

  sub_241956600();
  v2 = (_QWORD *)sub_2419AA304();
  v3 = v2;
  v4 = v2[2];
  if (v4 == 2)
  {
    sub_2419AA124();
    v10 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    v7 = v10;
    if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ISOLANGUAGECODE_UNKNOWN"), 95, 0xE100000000000000, a1, a2) & 1) != 0)
    {
      v8 = 0;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AB")) & 1) != 0)
    {
      v8 = 1;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AA")) & 1) != 0)
    {
      v8 = 2;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AF")) & 1) != 0)
    {
      v8 = 3;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AK")) & 1) != 0)
    {
      v8 = 4;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SQ")) & 1) != 0)
    {
      v8 = 5;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AM")) & 1) != 0)
    {
      v8 = 6;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AR")) & 1) != 0)
    {
      v8 = 7;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AN")) & 1) != 0)
    {
      v8 = 8;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HY")) & 1) != 0)
    {
      v8 = 9;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AS")) & 1) != 0)
    {
      v8 = 10;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AV")) & 1) != 0)
    {
      v8 = 11;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AE")) & 1) != 0)
    {
      v8 = 12;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AY")) & 1) != 0)
    {
      v8 = 13;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AZ")) & 1) != 0)
    {
      v8 = 14;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BM")) & 1) != 0)
    {
      v8 = 15;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BA")) & 1) != 0)
    {
      v8 = 16;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EU")) & 1) != 0)
    {
      v8 = 17;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BE")) & 1) != 0)
    {
      v8 = 18;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BN")) & 1) != 0)
    {
      v8 = 19;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BI")) & 1) != 0)
    {
      v8 = 20;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BS")) & 1) != 0)
    {
      v8 = 21;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BR")) & 1) != 0)
    {
      v8 = 22;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BG")) & 1) != 0)
    {
      v8 = 23;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MY")) & 1) != 0)
    {
      v8 = 24;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CA")) & 1) != 0)
    {
      v8 = 25;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CH")) & 1) != 0)
    {
      v8 = 26;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CE")) & 1) != 0)
    {
      v8 = 27;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NY")) & 1) != 0)
    {
      v8 = 28;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ZH")) & 1) != 0)
    {
      v8 = 29;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CV")) & 1) != 0)
    {
      v8 = 30;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KW")) & 1) != 0)
    {
      v8 = 31;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CO")) & 1) != 0)
    {
      v8 = 32;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CR")) & 1) != 0)
    {
      v8 = 33;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HR")) & 1) != 0)
    {
      v8 = 34;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CS")) & 1) != 0)
    {
      v8 = 35;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("DA")) & 1) != 0)
    {
      v8 = 36;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("DV")) & 1) != 0)
    {
      v8 = 37;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NL")) & 1) != 0)
    {
      v8 = 38;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("DZ")) & 1) != 0)
    {
      v8 = 39;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EN")) & 1) != 0)
    {
      v8 = 40;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EO")) & 1) != 0)
    {
      v8 = 41;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ET")) & 1) != 0)
    {
      v8 = 42;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EE")) & 1) != 0)
    {
      v8 = 43;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FO")) & 1) != 0)
    {
      v8 = 44;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FJ")) & 1) != 0)
    {
      v8 = 45;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FI")) & 1) != 0)
    {
      v8 = 46;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FR")) & 1) != 0)
    {
      v8 = 47;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FF")) & 1) != 0)
    {
      v8 = 48;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GL")) & 1) != 0)
    {
      v8 = 49;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KA")) & 1) != 0)
    {
      v8 = 50;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("DE")) & 1) != 0)
    {
      v8 = 51;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EL")) & 1) != 0)
    {
      v8 = 52;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GN")) & 1) != 0)
    {
      v8 = 53;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GU")) & 1) != 0)
    {
      v8 = 54;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HT")) & 1) != 0)
    {
      v8 = 55;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HA")) & 1) != 0)
    {
      v8 = 56;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HE")) & 1) != 0)
    {
      v8 = 57;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HZ")) & 1) != 0)
    {
      v8 = 58;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HI")) & 1) != 0)
    {
      v8 = 59;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HO")) & 1) != 0)
    {
      v8 = 60;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HU")) & 1) != 0)
    {
      v8 = 61;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IA")) & 1) != 0)
    {
      v8 = 62;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ID")) & 1) != 0)
    {
      v8 = 63;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IE")) & 1) != 0)
    {
      v8 = 64;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GA")) & 1) != 0)
    {
      v8 = 65;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IG")) & 1) != 0)
    {
      v8 = 66;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IK")) & 1) != 0)
    {
      v8 = 67;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IO")) & 1) != 0)
    {
      v8 = 68;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IS")) & 1) != 0)
    {
      v8 = 69;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IT")) & 1) != 0)
    {
      v8 = 70;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IU")) & 1) != 0)
    {
      v8 = 71;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("JA")) & 1) != 0)
    {
      v8 = 72;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("JV")) & 1) != 0)
    {
      v8 = 73;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KL")) & 1) != 0)
    {
      v8 = 74;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KN")) & 1) != 0)
    {
      v8 = 75;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KR")) & 1) != 0)
    {
      v8 = 76;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KS")) & 1) != 0)
    {
      v8 = 77;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KK")) & 1) != 0)
    {
      v8 = 78;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KM")) & 1) != 0)
    {
      v8 = 79;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KI")) & 1) != 0)
    {
      v8 = 80;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RW")) & 1) != 0)
    {
      v8 = 81;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KY")) & 1) != 0)
    {
      v8 = 82;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KV")) & 1) != 0)
    {
      v8 = 83;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KG")) & 1) != 0)
    {
      v8 = 84;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KO")) & 1) != 0)
    {
      v8 = 85;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KU")) & 1) != 0)
    {
      v8 = 86;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KJ")) & 1) != 0)
    {
      v8 = 87;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LA")) & 1) != 0)
    {
      v8 = 88;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LB")) & 1) != 0)
    {
      v8 = 89;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LG")) & 1) != 0)
    {
      v8 = 90;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LI")) & 1) != 0)
    {
      v8 = 91;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LN")) & 1) != 0)
    {
      v8 = 92;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LO")) & 1) != 0)
    {
      v8 = 93;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LT")) & 1) != 0)
    {
      v8 = 94;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LU")) & 1) != 0)
    {
      v8 = 95;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LV")) & 1) != 0)
    {
      v8 = 96;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GV")) & 1) != 0)
    {
      v8 = 97;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MK")) & 1) != 0)
    {
      v8 = 98;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MG")) & 1) != 0)
    {
      v8 = 99;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MS")) & 1) != 0)
    {
      v8 = 100;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ML")) & 1) != 0)
    {
      v8 = 101;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MT")) & 1) != 0)
    {
      v8 = 102;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MI")) & 1) != 0)
    {
      v8 = 103;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MR")) & 1) != 0)
    {
      v8 = 104;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MH")) & 1) != 0)
    {
      v8 = 105;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MN")) & 1) != 0)
    {
      v8 = 106;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NA")) & 1) != 0)
    {
      v8 = 107;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NV")) & 1) != 0)
    {
      v8 = 108;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ND")) & 1) != 0)
    {
      v8 = 109;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NE")) & 1) != 0)
    {
      v8 = 110;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NG")) & 1) != 0)
    {
      v8 = 111;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NB")) & 1) != 0)
    {
      v8 = 112;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NN")) & 1) != 0)
    {
      v8 = 113;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NO")) & 1) != 0)
    {
      v8 = 114;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("II")) & 1) != 0)
    {
      v8 = 115;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NR")) & 1) != 0)
    {
      v8 = 116;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OC")) & 1) != 0)
    {
      v8 = 117;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OJ")) & 1) != 0)
    {
      v8 = 118;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CU")) & 1) != 0)
    {
      v8 = 119;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OM")) & 1) != 0)
    {
      v8 = 120;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OR")) & 1) != 0)
    {
      v8 = 121;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OS")) & 1) != 0)
    {
      v8 = 122;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PA")) & 1) != 0)
    {
      v8 = 123;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PI")) & 1) != 0)
    {
      v8 = 124;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FA")) & 1) != 0)
    {
      v8 = 125;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PL")) & 1) != 0)
    {
      v8 = 126;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PS")) & 1) != 0)
    {
      v8 = 127;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PT")) & 1) != 0)
    {
      v8 = 128;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("QU")) & 1) != 0)
    {
      v8 = 129;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RM")) & 1) != 0)
    {
      v8 = 130;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RN")) & 1) != 0)
    {
      v8 = 131;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RO")) & 1) != 0)
    {
      v8 = 132;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RU")) & 1) != 0)
    {
      v8 = 133;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SA")) & 1) != 0)
    {
      v8 = 134;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SC")) & 1) != 0)
    {
      v8 = 135;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SD")) & 1) != 0)
    {
      v8 = 136;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SE")) & 1) != 0)
    {
      v8 = 137;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SM")) & 1) != 0)
    {
      v8 = 138;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SG")) & 1) != 0)
    {
      v8 = 139;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SR")) & 1) != 0)
    {
      v8 = 140;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GD")) & 1) != 0)
    {
      v8 = 141;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SN")) & 1) != 0)
    {
      v8 = 142;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SI")) & 1) != 0)
    {
      v8 = 143;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SK")) & 1) != 0)
    {
      v8 = 144;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SL")) & 1) != 0)
    {
      v8 = 145;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SO")) & 1) != 0)
    {
      v8 = 146;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ST")) & 1) != 0)
    {
      v8 = 147;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ES")) & 1) != 0)
    {
      v8 = 148;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SU")) & 1) != 0)
    {
      v8 = 149;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SW")) & 1) != 0)
    {
      v8 = 150;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SS")) & 1) != 0)
    {
      v8 = 151;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SV")) & 1) != 0)
    {
      v8 = 152;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TA")) & 1) != 0)
    {
      v8 = 153;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TE")) & 1) != 0)
    {
      v8 = 154;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TG")) & 1) != 0)
    {
      v8 = 155;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TH")) & 1) != 0)
    {
      v8 = 156;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TI")) & 1) != 0)
    {
      v8 = 157;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BO")) & 1) != 0)
    {
      v8 = 158;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TK")) & 1) != 0)
    {
      v8 = 159;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TL")) & 1) != 0)
    {
      v8 = 160;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TN")) & 1) != 0)
    {
      v8 = 161;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TO")) & 1) != 0)
    {
      v8 = 162;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TR")) & 1) != 0)
    {
      v8 = 163;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TS")) & 1) != 0)
    {
      v8 = 164;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TT")) & 1) != 0)
    {
      v8 = 165;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TW")) & 1) != 0)
    {
      v8 = 166;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TY")) & 1) != 0)
    {
      v8 = 167;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("UG")) & 1) != 0)
    {
      v8 = 168;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("UK")) & 1) != 0)
    {
      v8 = 169;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("UR")) & 1) != 0)
    {
      v8 = 170;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("UZ")) & 1) != 0)
    {
      v8 = 171;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("VE")) & 1) != 0)
    {
      v8 = 172;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("VI")) & 1) != 0)
    {
      v8 = 173;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("VO")) & 1) != 0)
    {
      v8 = 174;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("WA")) & 1) != 0)
    {
      v8 = 175;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CY")) & 1) != 0)
    {
      v8 = 176;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("WO")) & 1) != 0)
    {
      v8 = 177;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FY")) & 1) != 0)
    {
      v8 = 178;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("XH")) & 1) != 0)
    {
      v8 = 179;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("YI")) & 1) != 0)
    {
      v8 = 180;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("YO")) & 1) != 0)
    {
      v8 = 181;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ZA")) & 1) != 0)
    {
      v8 = 182;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ZU")) & 1) != 0)
    {
      v8 = 183;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("WUU")) & 1) != 0)
    {
      v8 = 184;
    }
    else if (objc_msgSend(v7, "isEqualToString:", CFSTR("YUE")))
    {
      v8 = 185;
    }
    else
    {
      v8 = 0;
    }

    v12 = objc_opt_self();
    if (v3[2] >= 2uLL)
    {
      v13 = (void *)v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_2419AA124();
      swift_bridgeObjectRelease();
      v3 = (_QWORD *)sub_2419AA0DC();
LABEL_1131:
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(v13, sel_convertCountryCodeToSchemaCountryCode_, v3);
LABEL_1137:

      goto LABEL_1138;
    }
    __break(1u);
    goto LABEL_1126;
  }
  if (v4 == 3)
  {
    v5 = v2[4] == 0x454C41434F4CLL && v2[5] == 0xE600000000000000;
    if (v5 || (sub_2419AA574() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v6 = (void *)sub_2419AA0DC();
      swift_bridgeObjectRelease();
      v7 = v6;
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ISOLANGUAGECODE_UNKNOWN"), 95, 0xE100000000000000, a1, a2) & 1) != 0)
      {
        v8 = 0;
LABEL_1129:

        v14 = objc_opt_self();
        if (v3[2] >= 3uLL)
        {
          v13 = (void *)v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v3 = (_QWORD *)sub_2419AA0DC();
          goto LABEL_1131;
        }
        __break(1u);
        goto LABEL_1133;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AB")) & 1) != 0)
      {
        v8 = 1;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AA")) & 1) != 0)
      {
        v8 = 2;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AF")) & 1) != 0)
      {
        v8 = 3;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AK")) & 1) != 0)
      {
        v8 = 4;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SQ")) & 1) != 0)
      {
        v8 = 5;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AM")) & 1) != 0)
      {
        v8 = 6;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AR")) & 1) != 0)
      {
        v8 = 7;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AN")) & 1) != 0)
      {
        v8 = 8;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HY")) & 1) != 0)
      {
        v8 = 9;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AS")) & 1) != 0)
      {
        v8 = 10;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AV")) & 1) != 0)
      {
        v8 = 11;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AE")) & 1) != 0)
      {
        v8 = 12;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AY")) & 1) != 0)
      {
        v8 = 13;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("AZ")) & 1) != 0)
      {
        v8 = 14;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BM")) & 1) != 0)
      {
        v8 = 15;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BA")) & 1) != 0)
      {
        v8 = 16;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EU")) & 1) != 0)
      {
        v8 = 17;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BE")) & 1) != 0)
      {
        v8 = 18;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BN")) & 1) != 0)
      {
        v8 = 19;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BI")) & 1) != 0)
      {
        v8 = 20;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BS")) & 1) != 0)
      {
        v8 = 21;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BR")) & 1) != 0)
      {
        v8 = 22;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BG")) & 1) != 0)
      {
        v8 = 23;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MY")) & 1) != 0)
      {
        v8 = 24;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CA")) & 1) != 0)
      {
        v8 = 25;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CH")) & 1) != 0)
      {
        v8 = 26;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CE")) & 1) != 0)
      {
        v8 = 27;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NY")) & 1) != 0)
      {
        v8 = 28;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ZH")) & 1) != 0)
      {
        v8 = 29;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CV")) & 1) != 0)
      {
        v8 = 30;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KW")) & 1) != 0)
      {
        v8 = 31;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CO")) & 1) != 0)
      {
        v8 = 32;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CR")) & 1) != 0)
      {
        v8 = 33;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HR")) & 1) != 0)
      {
        v8 = 34;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CS")) & 1) != 0)
      {
        v8 = 35;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("DA")) & 1) != 0)
      {
        v8 = 36;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("DV")) & 1) != 0)
      {
        v8 = 37;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NL")) & 1) != 0)
      {
        v8 = 38;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("DZ")) & 1) != 0)
      {
        v8 = 39;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EN")) & 1) != 0)
      {
        v8 = 40;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EO")) & 1) != 0)
      {
        v8 = 41;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ET")) & 1) != 0)
      {
        v8 = 42;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EE")) & 1) != 0)
      {
        v8 = 43;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FO")) & 1) != 0)
      {
        v8 = 44;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FJ")) & 1) != 0)
      {
        v8 = 45;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FI")) & 1) != 0)
      {
        v8 = 46;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FR")) & 1) != 0)
      {
        v8 = 47;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FF")) & 1) != 0)
      {
        v8 = 48;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GL")) & 1) != 0)
      {
        v8 = 49;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KA")) & 1) != 0)
      {
        v8 = 50;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("DE")) & 1) != 0)
      {
        v8 = 51;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("EL")) & 1) != 0)
      {
        v8 = 52;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GN")) & 1) != 0)
      {
        v8 = 53;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GU")) & 1) != 0)
      {
        v8 = 54;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HT")) & 1) != 0)
      {
        v8 = 55;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HA")) & 1) != 0)
      {
        v8 = 56;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HE")) & 1) != 0)
      {
        v8 = 57;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HZ")) & 1) != 0)
      {
        v8 = 58;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HI")) & 1) != 0)
      {
        v8 = 59;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HO")) & 1) != 0)
      {
        v8 = 60;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("HU")) & 1) != 0)
      {
        v8 = 61;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IA")) & 1) != 0)
      {
        v8 = 62;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ID")) & 1) != 0)
      {
        v8 = 63;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IE")) & 1) != 0)
      {
        v8 = 64;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GA")) & 1) != 0)
      {
        v8 = 65;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IG")) & 1) != 0)
      {
        v8 = 66;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IK")) & 1) != 0)
      {
        v8 = 67;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IO")) & 1) != 0)
      {
        v8 = 68;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IS")) & 1) != 0)
      {
        v8 = 69;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IT")) & 1) != 0)
      {
        v8 = 70;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("IU")) & 1) != 0)
      {
        v8 = 71;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("JA")) & 1) != 0)
      {
        v8 = 72;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("JV")) & 1) != 0)
      {
        v8 = 73;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KL")) & 1) != 0)
      {
        v8 = 74;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KN")) & 1) != 0)
      {
        v8 = 75;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KR")) & 1) != 0)
      {
        v8 = 76;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KS")) & 1) != 0)
      {
        v8 = 77;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KK")) & 1) != 0)
      {
        v8 = 78;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KM")) & 1) != 0)
      {
        v8 = 79;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KI")) & 1) != 0)
      {
        v8 = 80;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RW")) & 1) != 0)
      {
        v8 = 81;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KY")) & 1) != 0)
      {
        v8 = 82;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KV")) & 1) != 0)
      {
        v8 = 83;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KG")) & 1) != 0)
      {
        v8 = 84;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KO")) & 1) != 0)
      {
        v8 = 85;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KU")) & 1) != 0)
      {
        v8 = 86;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("KJ")) & 1) != 0)
      {
        v8 = 87;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LA")) & 1) != 0)
      {
        v8 = 88;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LB")) & 1) != 0)
      {
        v8 = 89;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LG")) & 1) != 0)
      {
        v8 = 90;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LI")) & 1) != 0)
      {
        v8 = 91;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LN")) & 1) != 0)
      {
        v8 = 92;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LO")) & 1) != 0)
      {
        v8 = 93;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LT")) & 1) != 0)
      {
        v8 = 94;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LU")) & 1) != 0)
      {
        v8 = 95;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("LV")) & 1) != 0)
      {
        v8 = 96;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GV")) & 1) != 0)
      {
        v8 = 97;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MK")) & 1) != 0)
      {
        v8 = 98;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MG")) & 1) != 0)
      {
        v8 = 99;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MS")) & 1) != 0)
      {
        v8 = 100;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ML")) & 1) != 0)
      {
        v8 = 101;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MT")) & 1) != 0)
      {
        v8 = 102;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MI")) & 1) != 0)
      {
        v8 = 103;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MR")) & 1) != 0)
      {
        v8 = 104;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MH")) & 1) != 0)
      {
        v8 = 105;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("MN")) & 1) != 0)
      {
        v8 = 106;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NA")) & 1) != 0)
      {
        v8 = 107;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NV")) & 1) != 0)
      {
        v8 = 108;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ND")) & 1) != 0)
      {
        v8 = 109;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NE")) & 1) != 0)
      {
        v8 = 110;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NG")) & 1) != 0)
      {
        v8 = 111;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NB")) & 1) != 0)
      {
        v8 = 112;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NN")) & 1) != 0)
      {
        v8 = 113;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NO")) & 1) != 0)
      {
        v8 = 114;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("II")) & 1) != 0)
      {
        v8 = 115;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("NR")) & 1) != 0)
      {
        v8 = 116;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OC")) & 1) != 0)
      {
        v8 = 117;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OJ")) & 1) != 0)
      {
        v8 = 118;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CU")) & 1) != 0)
      {
        v8 = 119;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OM")) & 1) != 0)
      {
        v8 = 120;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OR")) & 1) != 0)
      {
        v8 = 121;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("OS")) & 1) != 0)
      {
        v8 = 122;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PA")) & 1) != 0)
      {
        v8 = 123;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PI")) & 1) != 0)
      {
        v8 = 124;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FA")) & 1) != 0)
      {
        v8 = 125;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PL")) & 1) != 0)
      {
        v8 = 126;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PS")) & 1) != 0)
      {
        v8 = 127;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("PT")) & 1) != 0)
      {
        v8 = 128;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("QU")) & 1) != 0)
      {
        v8 = 129;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RM")) & 1) != 0)
      {
        v8 = 130;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RN")) & 1) != 0)
      {
        v8 = 131;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RO")) & 1) != 0)
      {
        v8 = 132;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("RU")) & 1) != 0)
      {
        v8 = 133;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SA")) & 1) != 0)
      {
        v8 = 134;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SC")) & 1) != 0)
      {
        v8 = 135;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SD")) & 1) != 0)
      {
        v8 = 136;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SE")) & 1) != 0)
      {
        v8 = 137;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SM")) & 1) != 0)
      {
        v8 = 138;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SG")) & 1) != 0)
      {
        v8 = 139;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SR")) & 1) != 0)
      {
        v8 = 140;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("GD")) & 1) != 0)
      {
        v8 = 141;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SN")) & 1) != 0)
      {
        v8 = 142;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SI")) & 1) != 0)
      {
        v8 = 143;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SK")) & 1) != 0)
      {
        v8 = 144;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SL")) & 1) != 0)
      {
        v8 = 145;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SO")) & 1) != 0)
      {
        v8 = 146;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ST")) & 1) != 0)
      {
        v8 = 147;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ES")) & 1) != 0)
      {
        v8 = 148;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SU")) & 1) != 0)
      {
        v8 = 149;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SW")) & 1) != 0)
      {
        v8 = 150;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SS")) & 1) != 0)
      {
        v8 = 151;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("SV")) & 1) != 0)
      {
        v8 = 152;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TA")) & 1) != 0)
      {
        v8 = 153;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TE")) & 1) != 0)
      {
        v8 = 154;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TG")) & 1) != 0)
      {
        v8 = 155;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TH")) & 1) != 0)
      {
        v8 = 156;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TI")) & 1) != 0)
      {
        v8 = 157;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("BO")) & 1) != 0)
      {
        v8 = 158;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TK")) & 1) != 0)
      {
        v8 = 159;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TL")) & 1) != 0)
      {
        v8 = 160;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TN")) & 1) != 0)
      {
        v8 = 161;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TO")) & 1) != 0)
      {
        v8 = 162;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TR")) & 1) != 0)
      {
        v8 = 163;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TS")) & 1) != 0)
      {
        v8 = 164;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TT")) & 1) != 0)
      {
        v8 = 165;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TW")) & 1) != 0)
      {
        v8 = 166;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("TY")) & 1) != 0)
      {
        v8 = 167;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("UG")) & 1) != 0)
      {
        v8 = 168;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("UK")) & 1) != 0)
      {
        v8 = 169;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("UR")) & 1) != 0)
      {
        v8 = 170;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("UZ")) & 1) != 0)
      {
        v8 = 171;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("VE")) & 1) != 0)
      {
        v8 = 172;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("VI")) & 1) != 0)
      {
        v8 = 173;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("VO")) & 1) != 0)
      {
        v8 = 174;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("WA")) & 1) != 0)
      {
        v8 = 175;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("CY")) & 1) != 0)
      {
        v8 = 176;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("WO")) & 1) != 0)
      {
        v8 = 177;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("FY")) & 1) != 0)
      {
        v8 = 178;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("XH")) & 1) != 0)
      {
        v8 = 179;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("YI")) & 1) != 0)
      {
        v8 = 180;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("YO")) & 1) != 0)
      {
        v8 = 181;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ZA")) & 1) != 0)
      {
        v8 = 182;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("ZU")) & 1) != 0)
      {
        v8 = 183;
        goto LABEL_1129;
      }
      if ((objc_msgSend(v7, "isEqualToString:", CFSTR("WUU")) & 1) != 0)
      {
        v8 = 184;
        goto LABEL_1129;
      }
LABEL_1126:
      if (objc_msgSend(v7, "isEqualToString:", CFSTR("YUE")))
        v8 = 185;
      else
        v8 = 0;
      goto LABEL_1129;
    }
  }
  swift_bridgeObjectRelease();
  if (sub_2419AA154() == 2)
  {
    sub_2419AA124();
    v9 = (void *)sub_2419AA0DC();
    swift_bridgeObjectRelease();
    v3 = v9;
    if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ISOLANGUAGECODE_UNKNOWN"), 95, 0xE100000000000000, a1, a2) & 1) != 0)
    {
      v8 = 0;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AB")) & 1) != 0)
    {
      v8 = 1;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AA")) & 1) != 0)
    {
      v8 = 2;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AF")) & 1) != 0)
    {
      v8 = 3;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AK")) & 1) != 0)
    {
      v8 = 4;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SQ")) & 1) != 0)
    {
      v8 = 5;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AM")) & 1) != 0)
    {
      v8 = 6;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AR")) & 1) != 0)
    {
      v8 = 7;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AN")) & 1) != 0)
    {
      v8 = 8;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HY")) & 1) != 0)
    {
      v8 = 9;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AS")) & 1) != 0)
    {
      v8 = 10;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AV")) & 1) != 0)
    {
      v8 = 11;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AE")) & 1) != 0)
    {
      v8 = 12;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AY")) & 1) != 0)
    {
      v8 = 13;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("AZ")) & 1) != 0)
    {
      v8 = 14;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BM")) & 1) != 0)
    {
      v8 = 15;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BA")) & 1) != 0)
    {
      v8 = 16;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("EU")) & 1) != 0)
    {
      v8 = 17;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BE")) & 1) != 0)
    {
      v8 = 18;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BN")) & 1) != 0)
    {
      v8 = 19;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BI")) & 1) != 0)
    {
      v8 = 20;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BS")) & 1) != 0)
    {
      v8 = 21;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BR")) & 1) != 0)
    {
      v8 = 22;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BG")) & 1) != 0)
    {
      v8 = 23;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MY")) & 1) != 0)
    {
      v8 = 24;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CA")) & 1) != 0)
    {
      v8 = 25;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CH")) & 1) != 0)
    {
      v8 = 26;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CE")) & 1) != 0)
    {
      v8 = 27;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NY")) & 1) != 0)
    {
      v8 = 28;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ZH")) & 1) != 0)
    {
      v8 = 29;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CV")) & 1) != 0)
    {
      v8 = 30;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KW")) & 1) != 0)
    {
      v8 = 31;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CO")) & 1) != 0)
    {
      v8 = 32;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CR")) & 1) != 0)
    {
      v8 = 33;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HR")) & 1) != 0)
    {
      v8 = 34;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CS")) & 1) != 0)
    {
      v8 = 35;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("DA")) & 1) != 0)
    {
      v8 = 36;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("DV")) & 1) != 0)
    {
      v8 = 37;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NL")) & 1) != 0)
    {
      v8 = 38;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("DZ")) & 1) != 0)
    {
      v8 = 39;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("EN")) & 1) != 0)
    {
      v8 = 40;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("EO")) & 1) != 0)
    {
      v8 = 41;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ET")) & 1) != 0)
    {
      v8 = 42;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("EE")) & 1) != 0)
    {
      v8 = 43;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("FO")) & 1) != 0)
    {
      v8 = 44;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("FJ")) & 1) != 0)
    {
      v8 = 45;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("FI")) & 1) != 0)
    {
      v8 = 46;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("FR")) & 1) != 0)
    {
      v8 = 47;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("FF")) & 1) != 0)
    {
      v8 = 48;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("GL")) & 1) != 0)
    {
      v8 = 49;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KA")) & 1) != 0)
    {
      v8 = 50;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("DE")) & 1) != 0)
    {
      v8 = 51;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("EL")) & 1) != 0)
    {
      v8 = 52;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("GN")) & 1) != 0)
    {
      v8 = 53;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("GU")) & 1) != 0)
    {
      v8 = 54;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HT")) & 1) != 0)
    {
      v8 = 55;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HA")) & 1) != 0)
    {
      v8 = 56;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HE")) & 1) != 0)
    {
      v8 = 57;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HZ")) & 1) != 0)
    {
      v8 = 58;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HI")) & 1) != 0)
    {
      v8 = 59;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HO")) & 1) != 0)
    {
      v8 = 60;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("HU")) & 1) != 0)
    {
      v8 = 61;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("IA")) & 1) != 0)
    {
      v8 = 62;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ID")) & 1) != 0)
    {
      v8 = 63;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("IE")) & 1) != 0)
    {
      v8 = 64;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("GA")) & 1) != 0)
    {
      v8 = 65;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("IG")) & 1) != 0)
    {
      v8 = 66;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("IK")) & 1) != 0)
    {
      v8 = 67;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("IO")) & 1) != 0)
    {
      v8 = 68;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("IS")) & 1) != 0)
    {
      v8 = 69;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("IT")) & 1) != 0)
    {
      v8 = 70;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("IU")) & 1) != 0)
    {
      v8 = 71;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("JA")) & 1) != 0)
    {
      v8 = 72;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("JV")) & 1) != 0)
    {
      v8 = 73;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KL")) & 1) != 0)
    {
      v8 = 74;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KN")) & 1) != 0)
    {
      v8 = 75;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KR")) & 1) != 0)
    {
      v8 = 76;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KS")) & 1) != 0)
    {
      v8 = 77;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KK")) & 1) != 0)
    {
      v8 = 78;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KM")) & 1) != 0)
    {
      v8 = 79;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KI")) & 1) != 0)
    {
      v8 = 80;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("RW")) & 1) != 0)
    {
      v8 = 81;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KY")) & 1) != 0)
    {
      v8 = 82;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KV")) & 1) != 0)
    {
      v8 = 83;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KG")) & 1) != 0)
    {
      v8 = 84;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KO")) & 1) != 0)
    {
      v8 = 85;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KU")) & 1) != 0)
    {
      v8 = 86;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("KJ")) & 1) != 0)
    {
      v8 = 87;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LA")) & 1) != 0)
    {
      v8 = 88;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LB")) & 1) != 0)
    {
      v8 = 89;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LG")) & 1) != 0)
    {
      v8 = 90;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LI")) & 1) != 0)
    {
      v8 = 91;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LN")) & 1) != 0)
    {
      v8 = 92;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LO")) & 1) != 0)
    {
      v8 = 93;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LT")) & 1) != 0)
    {
      v8 = 94;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LU")) & 1) != 0)
    {
      v8 = 95;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("LV")) & 1) != 0)
    {
      v8 = 96;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("GV")) & 1) != 0)
    {
      v8 = 97;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MK")) & 1) != 0)
    {
      v8 = 98;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MG")) & 1) != 0)
    {
      v8 = 99;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MS")) & 1) != 0)
    {
      v8 = 100;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ML")) & 1) != 0)
    {
      v8 = 101;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MT")) & 1) != 0)
    {
      v8 = 102;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MI")) & 1) != 0)
    {
      v8 = 103;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MR")) & 1) != 0)
    {
      v8 = 104;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MH")) & 1) != 0)
    {
      v8 = 105;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("MN")) & 1) != 0)
    {
      v8 = 106;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NA")) & 1) != 0)
    {
      v8 = 107;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NV")) & 1) != 0)
    {
      v8 = 108;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ND")) & 1) != 0)
    {
      v8 = 109;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NE")) & 1) != 0)
    {
      v8 = 110;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NG")) & 1) != 0)
    {
      v8 = 111;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NB")) & 1) != 0)
    {
      v8 = 112;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NN")) & 1) != 0)
    {
      v8 = 113;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NO")) & 1) != 0)
    {
      v8 = 114;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("II")) & 1) != 0)
    {
      v8 = 115;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("NR")) & 1) != 0)
    {
      v8 = 116;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("OC")) & 1) != 0)
    {
      v8 = 117;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("OJ")) & 1) != 0)
    {
      v8 = 118;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CU")) & 1) != 0)
    {
      v8 = 119;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("OM")) & 1) != 0)
    {
      v8 = 120;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("OR")) & 1) != 0)
    {
      v8 = 121;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("OS")) & 1) != 0)
    {
      v8 = 122;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("PA")) & 1) != 0)
    {
      v8 = 123;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("PI")) & 1) != 0)
    {
      v8 = 124;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("FA")) & 1) != 0)
    {
      v8 = 125;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("PL")) & 1) != 0)
    {
      v8 = 126;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("PS")) & 1) != 0)
    {
      v8 = 127;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("PT")) & 1) != 0)
    {
      v8 = 128;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("QU")) & 1) != 0)
    {
      v8 = 129;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("RM")) & 1) != 0)
    {
      v8 = 130;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("RN")) & 1) != 0)
    {
      v8 = 131;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("RO")) & 1) != 0)
    {
      v8 = 132;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("RU")) & 1) != 0)
    {
      v8 = 133;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SA")) & 1) != 0)
    {
      v8 = 134;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SC")) & 1) != 0)
    {
      v8 = 135;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SD")) & 1) != 0)
    {
      v8 = 136;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SE")) & 1) != 0)
    {
      v8 = 137;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SM")) & 1) != 0)
    {
      v8 = 138;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SG")) & 1) != 0)
    {
      v8 = 139;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SR")) & 1) != 0)
    {
      v8 = 140;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("GD")) & 1) != 0)
    {
      v8 = 141;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SN")) & 1) != 0)
    {
      v8 = 142;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SI")) & 1) != 0)
    {
      v8 = 143;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SK")) & 1) != 0)
    {
      v8 = 144;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SL")) & 1) != 0)
    {
      v8 = 145;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SO")) & 1) != 0)
    {
      v8 = 146;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ST")) & 1) != 0)
    {
      v8 = 147;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ES")) & 1) != 0)
    {
      v8 = 148;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SU")) & 1) != 0)
    {
      v8 = 149;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SW")) & 1) != 0)
    {
      v8 = 150;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SS")) & 1) != 0)
    {
      v8 = 151;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("SV")) & 1) != 0)
    {
      v8 = 152;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TA")) & 1) != 0)
    {
      v8 = 153;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TE")) & 1) != 0)
    {
      v8 = 154;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TG")) & 1) != 0)
    {
      v8 = 155;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TH")) & 1) != 0)
    {
      v8 = 156;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TI")) & 1) != 0)
    {
      v8 = 157;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("BO")) & 1) != 0)
    {
      v8 = 158;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TK")) & 1) != 0)
    {
      v8 = 159;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TL")) & 1) != 0)
    {
      v8 = 160;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TN")) & 1) != 0)
    {
      v8 = 161;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TO")) & 1) != 0)
    {
      v8 = 162;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TR")) & 1) != 0)
    {
      v8 = 163;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TS")) & 1) != 0)
    {
      v8 = 164;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TT")) & 1) != 0)
    {
      v8 = 165;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TW")) & 1) != 0)
    {
      v8 = 166;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("TY")) & 1) != 0)
    {
      v8 = 167;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("UG")) & 1) != 0)
    {
      v8 = 168;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("UK")) & 1) != 0)
    {
      v8 = 169;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("UR")) & 1) != 0)
    {
      v8 = 170;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("UZ")) & 1) != 0)
    {
      v8 = 171;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("VE")) & 1) != 0)
    {
      v8 = 172;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("VI")) & 1) != 0)
    {
      v8 = 173;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("VO")) & 1) != 0)
    {
      v8 = 174;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("WA")) & 1) != 0)
    {
      v8 = 175;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("CY")) & 1) != 0)
    {
      v8 = 176;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("WO")) & 1) != 0)
    {
      v8 = 177;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("FY")) & 1) != 0)
    {
      v8 = 178;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("XH")) & 1) != 0)
    {
      v8 = 179;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("YI")) & 1) != 0)
    {
      v8 = 180;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("YO")) & 1) != 0)
    {
      v8 = 181;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ZA")) & 1) != 0)
    {
      v8 = 182;
    }
    else if ((objc_msgSend(v3, "isEqualToString:", CFSTR("ZU")) & 1) != 0)
    {
      v8 = 183;
    }
    else
    {
      if ((objc_msgSend(v3, "isEqualToString:", CFSTR("WUU")) & 1) == 0)
      {
LABEL_1133:
        if (objc_msgSend(v3, "isEqualToString:", CFSTR("YUE")))
          v8 = 185;
        else
          v8 = 0;
        goto LABEL_1136;
      }
      v8 = 184;
    }
LABEL_1136:

    v11 = 0;
    goto LABEL_1137;
  }
  v11 = 0;
  v8 = 0;
LABEL_1138:
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B18]), sel_init);
  objc_msgSend(v15, sel_setLanguageCode_, v8);
  objc_msgSend(v15, sel_setCountryCode_, v11);
  return v15;
}

uint64_t _s16MetricsFramework13EventMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  void (*v61)(_BYTE *, uint64_t);
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  int v68;
  uint64_t v69;
  int v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  _BYTE *v76;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  char v80;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  void (*v85)(_BYTE *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  void (*v98)(_BYTE *, uint64_t);
  uint64_t v99;
  int *v100;
  uint64_t v101;
  char v102;
  _BYTE *v103;
  _BYTE *v104;
  char v105;
  _BYTE *v106;
  BOOL v107;
  int *v108;
  _BYTE *v109;
  char v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  char v114;
  int *v115;
  _BYTE *v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  void *v123;
  void *v124;
  id v125;
  id v126;
  id v127;
  _BYTE v128[12];
  int v129;
  _BYTE *v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  int *v135;
  _BYTE *v136;
  uint64_t v137;
  _BYTE *v138;
  _BYTE *v139;
  _BYTE *v140;
  _BYTE *v141;
  _BYTE *v142;
  uint64_t v143;
  _BYTE *v144;
  _BYTE *v145;
  _BYTE *v146;
  uint64_t v147;
  _BYTE *v148;
  _BYTE *v149;
  _BYTE *v150;

  v135 = (int *)type metadata accessor for EventMetadata(0);
  v4 = MEMORY[0x24BDAC7A8](v135);
  v138 = &v128[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v4);
  v139 = &v128[-v7];
  v8 = MEMORY[0x24BDAC7A8](v6);
  v149 = &v128[-v9];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v146 = &v128[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v141 = &v128[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v140 = &v128[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v145 = &v128[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v144 = &v128[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v150 = &v128[-v21];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v148 = &v128[-v23];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v147 = (uint64_t)&v128[-v25];
  MEMORY[0x24BDAC7A8](v24);
  v142 = &v128[-v26];
  v27 = sub_2419A9D1C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v133 = &v128[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571676C0);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v131 = &v128[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = MEMORY[0x24BDAC7A8](v31);
  v136 = &v128[-v34];
  MEMORY[0x24BDAC7A8](v33);
  v36 = &v128[-v35];
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v130 = &v128[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = MEMORY[0x24BDAC7A8](v38);
  v132 = &v128[-v41];
  v42 = MEMORY[0x24BDAC7A8](v40);
  v44 = &v128[-v43];
  v45 = MEMORY[0x24BDAC7A8](v42);
  v47 = &v128[-v46];
  MEMORY[0x24BDAC7A8](v45);
  v49 = &v128[-v48];
  v143 = a1;
  sub_2419416DC(a1, (uint64_t)&v128[-v48], &qword_257162D48);
  v50 = a2;
  sub_2419416DC(a2, (uint64_t)v47, &qword_257162D48);
  v134 = v30;
  v51 = (uint64_t)&v36[*(int *)(v30 + 48)];
  sub_2419416DC((uint64_t)v49, (uint64_t)v36, &qword_257162D48);
  sub_2419416DC((uint64_t)v47, v51, &qword_257162D48);
  v137 = v28;
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v52((uint64_t)v36, 1, v27) == 1)
  {
    sub_241941720((uint64_t)v47, &qword_257162D48);
    sub_241941720((uint64_t)v49, &qword_257162D48);
    v53 = v52(v51, 1, v27);
    v54 = v150;
    if (v53 == 1)
    {
      sub_241941720((uint64_t)v36, &qword_257162D48);
      v55 = v142;
      v56 = v143;
      sub_24193D8BC(v143, (uint64_t)v142);
      v57 = v50;
      v58 = v147;
      sub_24193D8BC(v50, v147);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2419416DC((uint64_t)v36, (uint64_t)v44, &qword_257162D48);
  if (v52(v51, 1, v27) == 1)
  {
    sub_241941720((uint64_t)v47, &qword_257162D48);
    sub_241941720((uint64_t)v49, &qword_257162D48);
    (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v44, v27);
    v54 = v150;
LABEL_6:
    sub_241941720((uint64_t)v36, &qword_2571676C0);
    v55 = v142;
    v56 = v143;
    sub_24193D8BC(v143, (uint64_t)v142);
    v57 = v50;
    v58 = v147;
    sub_24193D8BC(v50, v147);
LABEL_11:
    sub_241943CA8(v58, type metadata accessor for EventMetadata);
    sub_241943CA8((uint64_t)v55, type metadata accessor for EventMetadata);
    v73 = (uint64_t)v138;
    v72 = (uint64_t)v139;
    v69 = (uint64_t)v149;
LABEL_15:
    v71 = v148;
    sub_24193D8BC(v56, (uint64_t)v148);
    sub_24193D8BC(v57, (uint64_t)v54);
LABEL_16:
    sub_241943CA8((uint64_t)v54, type metadata accessor for EventMetadata);
    sub_241943CA8((uint64_t)v71, type metadata accessor for EventMetadata);
LABEL_17:
    v76 = v144;
    v75 = v145;
    sub_24193D8BC(v56, (uint64_t)v144);
    sub_24193D8BC(v57, (uint64_t)v75);
LABEL_18:
    sub_241943CA8((uint64_t)v75, type metadata accessor for EventMetadata);
    sub_241943CA8((uint64_t)v76, type metadata accessor for EventMetadata);
    goto LABEL_19;
  }
  v59 = v137;
  v60 = v133;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v137 + 32))(v133, v51, v27);
  sub_24194169C(&qword_2571676C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v129 = sub_2419AA0B8();
  v61 = *(void (**)(_BYTE *, uint64_t))(v59 + 8);
  v61(v60, v27);
  sub_241941720((uint64_t)v47, &qword_257162D48);
  sub_241941720((uint64_t)v49, &qword_257162D48);
  v61(v44, v27);
  sub_241941720((uint64_t)v36, &qword_257162D48);
  v55 = v142;
  v56 = v143;
  sub_24193D8BC(v143, (uint64_t)v142);
  v57 = v50;
  v58 = v147;
  sub_24193D8BC(v50, v147);
  v54 = v150;
  if ((v129 & 1) == 0)
    goto LABEL_11;
LABEL_8:
  v62 = v136;
  v63 = v135[5];
  v64 = v58 + v63;
  v65 = (uint64_t)&v136[*(int *)(v134 + 48)];
  sub_2419416DC((uint64_t)&v55[v63], (uint64_t)v136, &qword_257162D48);
  v66 = v64;
  v67 = v62;
  sub_2419416DC(v66, v65, &qword_257162D48);
  v68 = v52((uint64_t)v62, 1, v27);
  v69 = (uint64_t)v149;
  if (v68 == 1)
  {
    sub_241943CA8(v58, type metadata accessor for EventMetadata);
    v67 = v136;
    sub_241943CA8((uint64_t)v55, type metadata accessor for EventMetadata);
    v70 = v52(v65, 1, v27);
    v54 = v150;
    if (v70 == 1)
    {
      sub_241941720((uint64_t)v67, &qword_257162D48);
      v71 = v148;
      sub_24193D8BC(v56, (uint64_t)v148);
      sub_24193D8BC(v57, (uint64_t)v54);
      v73 = (uint64_t)v138;
      v72 = (uint64_t)v139;
      goto LABEL_28;
    }
    goto LABEL_14;
  }
  v74 = v132;
  sub_2419416DC((uint64_t)v67, (uint64_t)v132, &qword_257162D48);
  if (v52(v65, 1, v27) == 1)
  {
    sub_241943CA8(v58, type metadata accessor for EventMetadata);
    sub_241943CA8((uint64_t)v55, type metadata accessor for EventMetadata);
    (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v74, v27);
    v54 = v150;
LABEL_14:
    sub_241941720((uint64_t)v67, &qword_2571676C0);
    v73 = (uint64_t)v138;
    v72 = (uint64_t)v139;
    goto LABEL_15;
  }
  v82 = v137;
  v83 = v133;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v137 + 32))(v133, v65, v27);
  sub_24194169C(&qword_2571676C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  LODWORD(v143) = sub_2419AA0B8();
  v84 = v74;
  v85 = *(void (**)(_BYTE *, uint64_t))(v82 + 8);
  v85(v83, v27);
  sub_241943CA8(v147, type metadata accessor for EventMetadata);
  sub_241943CA8((uint64_t)v55, type metadata accessor for EventMetadata);
  v85(v84, v27);
  sub_241941720((uint64_t)v136, &qword_257162D48);
  v71 = v148;
  sub_24193D8BC(v56, (uint64_t)v148);
  v54 = v150;
  sub_24193D8BC(v57, (uint64_t)v150);
  v73 = (uint64_t)v138;
  v72 = (uint64_t)v139;
  if ((v143 & 1) == 0)
    goto LABEL_16;
LABEL_28:
  v86 = v135[6];
  v87 = (uint64_t)&v71[v86];
  v88 = (uint64_t)&v54[v86];
  v89 = v131;
  v90 = (uint64_t)&v131[*(int *)(v134 + 48)];
  sub_2419416DC(v87, (uint64_t)v131, &qword_257162D48);
  v147 = v90;
  v91 = (uint64_t)v89;
  sub_2419416DC(v88, v90, &qword_257162D48);
  if (v52((uint64_t)v89, 1, v27) == 1)
  {
    sub_241943CA8((uint64_t)v150, type metadata accessor for EventMetadata);
    sub_241943CA8((uint64_t)v148, type metadata accessor for EventMetadata);
    v92 = v52(v147, 1, v27);
    v69 = (uint64_t)v149;
    if (v92 == 1)
    {
      sub_241941720((uint64_t)v89, &qword_257162D48);
      v76 = v144;
      sub_24193D8BC(v56, (uint64_t)v144);
      v75 = v145;
      sub_24193D8BC(v57, (uint64_t)v145);
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  v93 = (uint64_t)v89;
  v94 = v130;
  sub_2419416DC(v93, (uint64_t)v130, &qword_257162D48);
  if (v52(v147, 1, v27) == 1)
  {
    sub_241943CA8((uint64_t)v150, type metadata accessor for EventMetadata);
    sub_241943CA8((uint64_t)v148, type metadata accessor for EventMetadata);
    (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v94, v27);
    v69 = (uint64_t)v149;
LABEL_33:
    sub_241941720(v91, &qword_2571676C0);
    goto LABEL_17;
  }
  v95 = v137;
  v96 = v133;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v137 + 32))(v133, v147, v27);
  sub_24194169C(&qword_2571676C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  LODWORD(v147) = sub_2419AA0B8();
  v97 = v91;
  v98 = *(void (**)(_BYTE *, uint64_t))(v95 + 8);
  v98(v96, v27);
  sub_241943CA8((uint64_t)v150, type metadata accessor for EventMetadata);
  sub_241943CA8((uint64_t)v148, type metadata accessor for EventMetadata);
  v98(v94, v27);
  sub_241941720(v97, &qword_257162D48);
  v76 = v144;
  sub_24193D8BC(v56, (uint64_t)v144);
  v75 = v145;
  sub_24193D8BC(v57, (uint64_t)v145);
  v69 = (uint64_t)v149;
  if ((v147 & 1) == 0)
    goto LABEL_18;
LABEL_35:
  v99 = (uint64_t)v76;
  v100 = v135;
  v101 = v99 + v135[9];
  v150 = *(_BYTE **)v101;
  v102 = *(_BYTE *)(v101 + 8);
  sub_241943CA8(v99, type metadata accessor for EventMetadata);
  v103 = &v75[v100[9]];
  v104 = *(_BYTE **)v103;
  v105 = v103[8];
  sub_241943CA8((uint64_t)v75, type metadata accessor for EventMetadata);
  if ((v102 & 1) != 0)
  {
    if ((v105 & 1) != 0)
    {
      v77 = v140;
      sub_24193D8BC(v56, (uint64_t)v140);
      v78 = v141;
      sub_24193D8BC(v57, (uint64_t)v141);
      goto LABEL_41;
    }
    goto LABEL_19;
  }
  if ((v105 & 1) != 0)
  {
LABEL_19:
    v77 = v140;
    sub_24193D8BC(v56, (uint64_t)v140);
    v78 = v141;
    sub_24193D8BC(v57, (uint64_t)v141);
LABEL_20:
    sub_241943CA8((uint64_t)v78, type metadata accessor for EventMetadata);
    sub_241943CA8((uint64_t)v77, type metadata accessor for EventMetadata);
    goto LABEL_21;
  }
  v106 = v140;
  sub_24193D8BC(v56, (uint64_t)v140);
  v78 = v141;
  sub_24193D8BC(v57, (uint64_t)v141);
  v107 = v150 == v104;
  v77 = v106;
  if (!v107)
    goto LABEL_20;
LABEL_41:
  v108 = v135;
  v109 = &v77[v135[10]];
  v150 = *(_BYTE **)v109;
  v110 = v109[8];
  sub_241943CA8((uint64_t)v77, type metadata accessor for EventMetadata);
  v111 = &v78[v108[10]];
  v112 = *(_BYTE **)v111;
  v113 = (uint64_t)v78;
  v114 = v111[8];
  sub_241943CA8(v113, type metadata accessor for EventMetadata);
  if ((v110 & 1) != 0)
  {
    if ((v114 & 1) != 0)
    {
      v79 = v146;
      sub_24193D8BC(v56, (uint64_t)v146);
      sub_24193D8BC(v57, v69);
      goto LABEL_46;
    }
    goto LABEL_21;
  }
  if ((v114 & 1) != 0)
  {
LABEL_21:
    v79 = v146;
    sub_24193D8BC(v56, (uint64_t)v146);
    sub_24193D8BC(v57, v69);
LABEL_22:
    sub_241943CA8(v69, type metadata accessor for EventMetadata);
    sub_241943CA8((uint64_t)v79, type metadata accessor for EventMetadata);
    goto LABEL_23;
  }
  v79 = v146;
  sub_24193D8BC(v56, (uint64_t)v146);
  sub_24193D8BC(v57, v69);
  if (v150 != v112)
    goto LABEL_22;
LABEL_46:
  v115 = v135;
  v116 = &v79[v135[7]];
  v117 = *(_QWORD *)v116;
  v118 = v116[8];
  sub_241943CA8((uint64_t)v79, type metadata accessor for EventMetadata);
  v119 = v69 + v115[7];
  v120 = *(_QWORD *)v119;
  v121 = *(_BYTE *)(v119 + 8);
  sub_241943CA8(v69, type metadata accessor for EventMetadata);
  if ((v118 & 1) == 0)
  {
    if ((v121 & 1) == 0)
    {
      sub_24193D8BC(v56, v72);
      sub_24193D8BC(v57, v73);
      if (v117 == v120)
        goto LABEL_51;
LABEL_24:
      sub_241943CA8(v73, type metadata accessor for EventMetadata);
      sub_241943CA8(v72, type metadata accessor for EventMetadata);
      goto LABEL_25;
    }
LABEL_23:
    sub_24193D8BC(v56, v72);
    sub_24193D8BC(v57, v73);
    goto LABEL_24;
  }
  if ((v121 & 1) == 0)
    goto LABEL_23;
  sub_24193D8BC(v56, v72);
  sub_24193D8BC(v57, v73);
LABEL_51:
  v122 = v135[8];
  v123 = *(void **)(v72 + v122);
  v124 = *(void **)(v73 + v122);
  if (v123)
  {
    if (v124)
    {
      sub_241943088(0, (unint64_t *)&qword_2571644B8);
      v125 = v124;
      v126 = v123;
      v80 = sub_2419AA28C();
      sub_241943CA8(v73, type metadata accessor for EventMetadata);
      sub_241943CA8(v72, type metadata accessor for EventMetadata);

      return v80 & 1;
    }
    v127 = v123;
    sub_241943CA8(v73, type metadata accessor for EventMetadata);
    sub_241943CA8(v72, type metadata accessor for EventMetadata);
  }
  else
  {
    v127 = v124;
    sub_241943CA8(v73, type metadata accessor for EventMetadata);
    sub_241943CA8(v72, type metadata accessor for EventMetadata);
    if (!v124)
    {
      v80 = 1;
      return v80 & 1;
    }
  }

LABEL_25:
  v80 = 0;
  return v80 & 1;
}

id _s16MetricsFramework13EventMetadataV07toBiomeC021deviceSegmentsCohortsSo020BMSiriOnDeviceDigesthicD0CAA0lhI0VSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char **v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  id v91;
  uint64_t v92;
  id v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  id v100;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257166210);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v117 = (uint64_t)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v120 = (char *)&v108 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v118 = (char *)&v108 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v116 = (uint64_t)&v108 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v108 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v108 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v108 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v110 = (uint64_t)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v119 = (char *)&v108 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v109 = (uint64_t)&v108 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v108 = (uint64_t)&v108 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v115 = (char *)&v108 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v108 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v108 - v33;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v108 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v108 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v108 - v42;
  v121 = a1;
  sub_2419416DC(a1, (uint64_t)v18, &qword_257166210);
  v44 = type metadata accessor for DeviceSegmentsCohorts(0);
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48);
  if (v45(v18, 1, v44) == 1)
  {
    v46 = &qword_257166210;
    v47 = (uint64_t)v18;
LABEL_7:
    sub_241941720(v47, v46);
    v112 = 0;
    v113 = 0;
    goto LABEL_8;
  }
  sub_2419416DC((uint64_t)v18, (uint64_t)v34, &qword_257163E60);
  sub_241943CA8((uint64_t)v18, type metadata accessor for DeviceSegmentsCohorts);
  v48 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v34, 1, v48) == 1)
  {
    v46 = &qword_257163E60;
    v47 = (uint64_t)v34;
    goto LABEL_7;
  }
  sub_2419416DC((uint64_t)v34, (uint64_t)v43, &qword_257162D48);
  sub_241943CA8((uint64_t)v34, type metadata accessor for EventMetadata);
  v49 = sub_2419A9D1C();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v43, 1, v49) == 1)
  {
    v46 = &qword_257162D48;
    v47 = (uint64_t)v43;
    goto LABEL_7;
  }
  v103 = sub_2419A9CF8();
  v112 = v104;
  v113 = v103;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v49);
LABEL_8:
  v51 = (uint64_t)v38;
  v52 = v116;
  sub_2419416DC(v121, (uint64_t)v16, &qword_257166210);
  if (v45(v16, 1, v44) == 1)
  {
    v53 = &qword_257166210;
    v54 = (uint64_t)v16;
LABEL_14:
    sub_241941720(v54, v53);
    v111 = 0;
    v114 = 0;
    goto LABEL_15;
  }
  sub_2419416DC((uint64_t)v16, (uint64_t)v32, &qword_257163E60);
  sub_241943CA8((uint64_t)v16, type metadata accessor for DeviceSegmentsCohorts);
  v55 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v32, 1, v55) == 1)
  {
    v53 = &qword_257163E60;
    v54 = (uint64_t)v32;
    goto LABEL_14;
  }
  sub_2419416DC((uint64_t)&v32[*(int *)(v55 + 20)], (uint64_t)v41, &qword_257162D48);
  sub_241943CA8((uint64_t)v32, type metadata accessor for EventMetadata);
  v56 = sub_2419A9D1C();
  v57 = *(_QWORD *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v41, 1, v56) == 1)
  {
    v53 = &qword_257162D48;
    v54 = (uint64_t)v41;
    goto LABEL_14;
  }
  v111 = sub_2419A9CF8();
  v114 = v105;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v56);
LABEL_15:
  v58 = v117;
  v59 = v121;
  v60 = (uint64_t)v115;
  sub_2419416DC(v121, (uint64_t)v13, &qword_257166210);
  if (v45(v13, 1, v44) == 1)
  {
    v61 = &qword_257166210;
    v62 = (uint64_t)v13;
LABEL_19:
    sub_241941720(v62, v61);
    v116 = 0;
    v117 = 0;
    v64 = (uint64_t)v118;
    goto LABEL_20;
  }
  sub_2419416DC((uint64_t)v13, v60, &qword_257163E60);
  sub_241943CA8((uint64_t)v13, type metadata accessor for DeviceSegmentsCohorts);
  v63 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v60, 1, v63) == 1)
  {
    v61 = &qword_257163E60;
    v62 = v60;
    goto LABEL_19;
  }
  sub_2419416DC(v60 + *(int *)(v63 + 24), v51, &qword_257162D48);
  sub_241943CA8(v60, type metadata accessor for EventMetadata);
  v70 = sub_2419A9D1C();
  v71 = *(_QWORD *)(v70 - 8);
  v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v51, 1, v70);
  v64 = (uint64_t)v118;
  if (v72 == 1)
  {
    sub_241941720(v51, &qword_257162D48);
    v116 = 0;
    v117 = 0;
  }
  else
  {
    v106 = sub_2419A9CF8();
    v116 = v107;
    v117 = v106;
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v51, v70);
  }
LABEL_20:
  sub_2419416DC(v59, v52, &qword_257166210);
  if (v45((char *)v52, 1, v44) == 1)
  {
    v65 = &qword_257166210;
    v66 = v52;
LABEL_24:
    sub_241941720(v66, v65);
    v118 = 0;
    v69 = 1;
    goto LABEL_28;
  }
  v67 = v108;
  sub_2419416DC(v52, v108, &qword_257163E60);
  sub_241943CA8(v52, type metadata accessor for DeviceSegmentsCohorts);
  v68 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v67, 1, v68) == 1)
  {
    v65 = &qword_257163E60;
    v66 = v67;
    goto LABEL_24;
  }
  v73 = (char **)(v67 + *(int *)(v68 + 36));
  v118 = *v73;
  v69 = *((_BYTE *)v73 + 8);
  sub_241943CA8(v67, type metadata accessor for EventMetadata);
LABEL_28:
  v75 = (uint64_t)v119;
  v74 = (uint64_t)v120;
  sub_2419416DC(v59, v64, &qword_257166210);
  if (v45((char *)v64, 1, v44) == 1)
  {
    v76 = &qword_257166210;
LABEL_32:
    sub_241941720(v64, v76);
    v80 = 1;
    goto LABEL_34;
  }
  v77 = v109;
  sub_2419416DC(v64, v109, &qword_257163E60);
  v78 = v64;
  v64 = v77;
  sub_241943CA8(v78, type metadata accessor for DeviceSegmentsCohorts);
  v79 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v77, 1, v79) == 1)
  {
    v76 = &qword_257163E60;
    goto LABEL_32;
  }
  v80 = *(_BYTE *)(v77 + *(int *)(v79 + 40) + 8);
  sub_241943CA8(v64, type metadata accessor for EventMetadata);
LABEL_34:
  sub_2419416DC(v59, v74, &qword_257166210);
  if (v45((char *)v74, 1, v44) == 1)
  {
    v81 = &qword_257166210;
    v82 = v74;
LABEL_38:
    sub_241941720(v82, v81);
    v84 = 1;
    goto LABEL_40;
  }
  sub_2419416DC(v74, v75, &qword_257163E60);
  sub_241943CA8(v74, type metadata accessor for DeviceSegmentsCohorts);
  v83 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 48))(v75, 1, v83) == 1)
  {
    v81 = &qword_257163E60;
    v82 = v75;
    goto LABEL_38;
  }
  v84 = *(_BYTE *)(v75 + *(int *)(v83 + 28) + 8);
  sub_241943CA8(v75, type metadata accessor for EventMetadata);
LABEL_40:
  sub_2419416DC(v121, v58, &qword_257166210);
  if (v45((char *)v58, 1, v44) == 1)
  {
    v85 = &qword_257166210;
    v86 = v58;
  }
  else
  {
    v87 = v110;
    sub_2419416DC(v58, v110, &qword_257163E60);
    sub_241943CA8(v58, type metadata accessor for DeviceSegmentsCohorts);
    v88 = type metadata accessor for EventMetadata(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 48))(v87, 1, v88) != 1)
    {
      v102 = *(void **)(v87 + *(int *)(v88 + 32));
      v91 = v102;
      sub_241943CA8(v87, type metadata accessor for EventMetadata);
      v92 = v114;
      if (v102)
      {
        objc_msgSend(v91, sel_startTimestampInSecondsSince1970);
        objc_msgSend(v91, sel_numberOfSeconds);
        v90 = (void *)sub_2419AA634();
        v89 = (void *)sub_2419AA628();
      }
      else
      {
        v89 = 0;
        v90 = 0;
        v91 = 0;
      }
      goto LABEL_45;
    }
    v85 = &qword_257163E60;
    v86 = v87;
  }
  sub_241941720(v86, v85);
  v89 = 0;
  v90 = 0;
  v91 = 0;
  v92 = v114;
LABEL_45:
  v93 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6D8]), sel_initWithStartTimestampInSecondsSince1970_numberOfSeconds_, v90, v89);

  if ((v84 & 1) != 0)
    v94 = 0;
  else
    v94 = (void *)sub_2419AA634();
  v96 = v112;
  v95 = v113;
  v97 = v111;
  if ((v69 & 1) == 0)
  {
    v98 = (void *)sub_2419AA634();
    if ((v80 & 1) == 0)
      goto LABEL_50;
LABEL_52:
    v99 = 0;
    goto LABEL_53;
  }
  v98 = 0;
  if ((v80 & 1) != 0)
    goto LABEL_52;
LABEL_50:
  v99 = (void *)sub_2419AA634();
LABEL_53:
  v100 = objc_allocWithZone(MEMORY[0x24BE0C6D0]);
  return sub_24199F1BC(v95, v96, v97, v92, v117, v116, v94, v93, v98, v99);
}

id _sSo17SISchemaISOLocaleC16MetricsFrameworkE22toExperimentBiomeEvent16experimentDigestSo014BMSiriOnDevicejfcB0CAC0fJ0VSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571656B8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v18 - v6;
  sub_2419416DC(a1, (uint64_t)&v18 - v6, &qword_2571656B8);
  v8 = type metadata accessor for ExperimentDigest(0);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (v9(v7, 1, v8) == 1)
  {
    sub_241941720((uint64_t)v7, &qword_2571656B8);
  }
  else
  {
    v10 = (void *)*((_QWORD *)v7 + 10);
    v11 = v10;
    sub_241943CA8((uint64_t)v7, type metadata accessor for ExperimentDigest);
    if (v10)
    {
      objc_msgSend(v11, sel_languageCode);

      v12 = (void *)sub_2419AA5D4();
      goto LABEL_6;
    }
  }
  v12 = 0;
LABEL_6:
  sub_2419416DC(a1, (uint64_t)v5, &qword_2571656B8);
  if (v9(v5, 1, v8) == 1)
  {
    sub_241941720((uint64_t)v5, &qword_2571656B8);
LABEL_10:
    v15 = 0;
    goto LABEL_11;
  }
  v13 = (void *)*((_QWORD *)v5 + 10);
  v14 = v13;
  sub_241943CA8((uint64_t)v5, type metadata accessor for ExperimentDigest);
  if (!v13)
    goto LABEL_10;
  objc_msgSend(v14, sel_countryCode);

  v15 = (void *)sub_2419AA5D4();
LABEL_11:
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6B0]), sel_initWithLanguageCode_countryCode_, v12, v15);

  return v16;
}

id _s16MetricsFramework13EventMetadataV07toBiomeC0016deviceExperimentA0So020BMSiriOnDeviceDigesthacD0CAA0khA0VSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  void *v90;
  uint64_t v91;
  void *v92;
  void *v93;
  id v94;
  void *v95;
  id v96;
  uint64_t v97;
  id v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  id v118;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571631C0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v135 = (uint64_t)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v132 = (char *)&v121 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v134 = (char *)&v121 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v131 = (char *)&v121 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v121 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v121 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v121 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v121 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v126 = (uint64_t)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v125 = (uint64_t)&v121 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v124 = (uint64_t)&v121 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v123 = (uint64_t)&v121 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v122 = (uint64_t)&v121 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v133 = (char *)&v121 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v121 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v121 - v38;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v130 = (char *)&v121 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v121 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v121 - v46;
  v136 = a1;
  sub_2419416DC(a1, (uint64_t)v21, &qword_2571631C0);
  v48 = type metadata accessor for DeviceExperimentMetrics(0);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48);
  if (v49(v21, 1, v48) == 1)
  {
    v50 = &qword_2571631C0;
    v51 = (uint64_t)v21;
LABEL_7:
    sub_241941720(v51, v50);
    v127 = 0;
    v128 = 0;
    goto LABEL_8;
  }
  sub_2419416DC((uint64_t)v21, (uint64_t)v39, &qword_257163E60);
  sub_241943CA8((uint64_t)v21, type metadata accessor for DeviceExperimentMetrics);
  v52 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v39, 1, v52) == 1)
  {
    v50 = &qword_257163E60;
    v51 = (uint64_t)v39;
    goto LABEL_7;
  }
  sub_2419416DC((uint64_t)v39, (uint64_t)v47, &qword_257162D48);
  sub_241943CA8((uint64_t)v39, type metadata accessor for EventMetadata);
  v53 = sub_2419A9D1C();
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v47, 1, v53) == 1)
  {
    v50 = &qword_257162D48;
    v51 = (uint64_t)v47;
    goto LABEL_7;
  }
  v65 = sub_2419A9CF8();
  v127 = v66;
  v128 = v65;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v47, v53);
LABEL_8:
  v55 = (uint64_t)v131;
  sub_2419416DC(v136, (uint64_t)v19, &qword_2571631C0);
  if (v49(v19, 1, v48) == 1)
  {
    v56 = &qword_2571631C0;
    v57 = (uint64_t)v19;
LABEL_12:
    sub_241941720(v57, v56);
    v131 = 0;
    v129 = 0;
    v59 = v136;
    v60 = (uint64_t)v130;
    v61 = (uint64_t)v133;
    goto LABEL_18;
  }
  sub_2419416DC((uint64_t)v19, (uint64_t)v37, &qword_257163E60);
  sub_241943CA8((uint64_t)v19, type metadata accessor for DeviceExperimentMetrics);
  v58 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v37, 1, v58) == 1)
  {
    v56 = &qword_257163E60;
    v57 = (uint64_t)v37;
    goto LABEL_12;
  }
  sub_2419416DC((uint64_t)&v37[*(int *)(v58 + 20)], (uint64_t)v45, &qword_257162D48);
  sub_241943CA8((uint64_t)v37, type metadata accessor for EventMetadata);
  v62 = sub_2419A9D1C();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48))(v45, 1, v62);
  v61 = (uint64_t)v133;
  if (v64 == 1)
  {
    sub_241941720((uint64_t)v45, &qword_257162D48);
    v131 = 0;
    v129 = 0;
  }
  else
  {
    v131 = (char *)sub_2419A9CF8();
    v129 = v67;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v62);
  }
  v59 = v136;
  v60 = (uint64_t)v130;
LABEL_18:
  sub_2419416DC(v59, (uint64_t)v16, &qword_2571631C0);
  if (v49(v16, 1, v48) == 1)
  {
    v68 = &qword_2571631C0;
    v69 = (uint64_t)v16;
LABEL_24:
    sub_241941720(v69, v68);
    v73 = 0;
    v133 = 0;
    goto LABEL_25;
  }
  sub_2419416DC((uint64_t)v16, v61, &qword_257163E60);
  sub_241943CA8((uint64_t)v16, type metadata accessor for DeviceExperimentMetrics);
  v70 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48))(v61, 1, v70) == 1)
  {
    v68 = &qword_257163E60;
    v69 = v61;
    goto LABEL_24;
  }
  sub_2419416DC(v61 + *(int *)(v70 + 24), v60, &qword_257162D48);
  sub_241943CA8(v61, type metadata accessor for EventMetadata);
  v71 = sub_2419A9D1C();
  v72 = *(_QWORD *)(v71 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v60, 1, v71) == 1)
  {
    v68 = &qword_257162D48;
    v69 = v60;
    goto LABEL_24;
  }
  v73 = sub_2419A9CF8();
  v133 = v120;
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v60, v71);
LABEL_25:
  sub_2419416DC(v59, (uint64_t)v13, &qword_2571631C0);
  if (v49(v13, 1, v48) == 1)
  {
    v74 = &qword_2571631C0;
    v75 = (uint64_t)v13;
LABEL_29:
    sub_241941720(v75, v74);
    v78 = 1;
    goto LABEL_31;
  }
  v76 = v122;
  sub_2419416DC((uint64_t)v13, v122, &qword_257163E60);
  sub_241943CA8((uint64_t)v13, type metadata accessor for DeviceExperimentMetrics);
  v77 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v76, 1, v77) == 1)
  {
    v74 = &qword_257163E60;
    v75 = v76;
    goto LABEL_29;
  }
  v78 = *(_BYTE *)(v76 + *(int *)(v77 + 28) + 8);
  sub_241943CA8(v76, type metadata accessor for EventMetadata);
LABEL_31:
  v79 = (uint64_t)v134;
  sub_2419416DC(v59, v55, &qword_2571631C0);
  if (v49((char *)v55, 1, v48) == 1)
  {
    v80 = &qword_2571631C0;
LABEL_35:
    sub_241941720(v55, v80);
LABEL_36:
    v84 = 1;
    goto LABEL_37;
  }
  v81 = v123;
  sub_2419416DC(v55, v123, &qword_257163E60);
  v82 = v55;
  v55 = v81;
  sub_241943CA8(v82, type metadata accessor for DeviceExperimentMetrics);
  v83 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 48))(v55, 1, v83) == 1)
  {
    v80 = &qword_257163E60;
    goto LABEL_35;
  }
  v93 = *(void **)(v55 + *(int *)(v83 + 32));
  v94 = v93;
  sub_241943CA8(v55, type metadata accessor for EventMetadata);
  if (!v93)
    goto LABEL_36;
  objc_msgSend(v94, sel_startTimestampInSecondsSince1970);

  v84 = 0;
LABEL_37:
  sub_2419416DC(v59, v79, &qword_2571631C0);
  if (v49((char *)v79, 1, v48) == 1)
  {
    v85 = &qword_2571631C0;
    v86 = v79;
LABEL_41:
    sub_241941720(v86, v85);
    goto LABEL_42;
  }
  v87 = v124;
  sub_2419416DC(v79, v124, &qword_257163E60);
  sub_241943CA8(v79, type metadata accessor for DeviceExperimentMetrics);
  v88 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 48))(v87, 1, v88) == 1)
  {
    v85 = &qword_257163E60;
    v86 = v87;
    goto LABEL_41;
  }
  v95 = *(void **)(v87 + *(int *)(v88 + 32));
  v96 = v95;
  sub_241943CA8(v87, type metadata accessor for EventMetadata);
  if (!v95)
  {
LABEL_42:
    v89 = 1;
    if ((v84 & 1) != 0)
      goto LABEL_43;
LABEL_49:
    v90 = (void *)sub_2419AA634();
    v91 = (uint64_t)v132;
    if ((v89 & 1) == 0)
      goto LABEL_44;
    goto LABEL_50;
  }
  objc_msgSend(v96, sel_numberOfSeconds);

  v89 = 0;
  if ((v84 & 1) == 0)
    goto LABEL_49;
LABEL_43:
  v90 = 0;
  v91 = (uint64_t)v132;
  if ((v89 & 1) == 0)
  {
LABEL_44:
    v92 = (void *)sub_2419AA628();
    goto LABEL_51;
  }
LABEL_50:
  v92 = 0;
LABEL_51:
  v97 = v136;
  v98 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C698]), sel_initWithStartTimestampInSecondsSince1970_numberOfSeconds_, v90, v92);

  sub_2419416DC(v97, v91, &qword_2571631C0);
  if (v49((char *)v91, 1, v48) == 1)
  {
    v99 = &qword_2571631C0;
    v100 = v91;
LABEL_55:
    sub_241941720(v100, v99);
    v103 = 1;
    goto LABEL_57;
  }
  v101 = v125;
  sub_2419416DC(v91, v125, &qword_257163E60);
  sub_241943CA8(v91, type metadata accessor for DeviceExperimentMetrics);
  v102 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(v101, 1, v102) == 1)
  {
    v99 = &qword_257163E60;
    v100 = v101;
    goto LABEL_55;
  }
  v103 = *(_BYTE *)(v101 + *(int *)(v102 + 36) + 8);
  sub_241943CA8(v101, type metadata accessor for EventMetadata);
LABEL_57:
  v104 = v135;
  sub_2419416DC(v97, v135, &qword_2571631C0);
  if (v49((char *)v104, 1, v48) == 1)
  {
    v105 = &qword_2571631C0;
    v106 = v104;
LABEL_61:
    sub_241941720(v106, v105);
    v109 = 1;
    goto LABEL_63;
  }
  v107 = v126;
  sub_2419416DC(v104, v126, &qword_257163E60);
  sub_241943CA8(v104, type metadata accessor for DeviceExperimentMetrics);
  v108 = type metadata accessor for EventMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 48))(v107, 1, v108) == 1)
  {
    v105 = &qword_257163E60;
    v106 = v107;
    goto LABEL_61;
  }
  v109 = *(_BYTE *)(v107 + *(int *)(v108 + 40) + 8);
  sub_241943CA8(v107, type metadata accessor for EventMetadata);
LABEL_63:
  v110 = (uint64_t)v131;
  v111 = v129;
  if ((v78 & 1) != 0)
  {
    v112 = 0;
    v113 = v127;
    if ((v103 & 1) == 0)
      goto LABEL_65;
LABEL_68:
    v114 = 0;
    v115 = (uint64_t)v133;
    if ((v109 & 1) == 0)
      goto LABEL_66;
LABEL_69:
    v116 = 0;
    goto LABEL_70;
  }
  v112 = (void *)sub_2419AA634();
  v113 = v127;
  if ((v103 & 1) != 0)
    goto LABEL_68;
LABEL_65:
  v114 = (void *)sub_2419AA634();
  v115 = (uint64_t)v133;
  if ((v109 & 1) != 0)
    goto LABEL_69;
LABEL_66:
  v116 = (void *)sub_2419AA634();
LABEL_70:
  v117 = v128;
  v118 = objc_allocWithZone(MEMORY[0x24BE0C690]);
  return sub_24199F1BC(v117, v113, v110, v111, v73, v115, v112, v98, v114, v116);
}

id _sSo28ODDSiriSchemaODDTimeIntervalC16MetricsFrameworkE12toBiomeEvent13eventMetadataSo025BMSiriOnDeviceDigestUsageeik4TimeD0CAC0iK0VSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  void *v10;
  id v11;
  char v12;
  void *v13;
  id v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v20 - v6;
  sub_2419416DC(a1, (uint64_t)&v20 - v6, &qword_257163E60);
  v8 = type metadata accessor for EventMetadata(0);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (v9(v7, 1, v8) == 1)
  {
    sub_241941720((uint64_t)v7, &qword_257163E60);
  }
  else
  {
    v10 = *(void **)&v7[*(int *)(v8 + 32)];
    v11 = v10;
    sub_241943CA8((uint64_t)v7, type metadata accessor for EventMetadata);
    if (v10)
    {
      objc_msgSend(v11, sel_startTimestampInSecondsSince1970);

      v12 = 0;
      goto LABEL_6;
    }
  }
  v12 = 1;
LABEL_6:
  sub_2419416DC(a1, (uint64_t)v5, &qword_257163E60);
  if (v9(v5, 1, v8) == 1)
  {
    sub_241941720((uint64_t)v5, &qword_257163E60);
  }
  else
  {
    v13 = *(void **)&v5[*(int *)(v8 + 32)];
    v14 = v13;
    sub_241943CA8((uint64_t)v5, type metadata accessor for EventMetadata);
    if (v13)
    {
      objc_msgSend(v14, sel_numberOfSeconds);

      v15 = 0;
      if ((v12 & 1) != 0)
        goto LABEL_13;
      goto LABEL_10;
    }
  }
  v15 = 1;
  if ((v12 & 1) != 0)
  {
LABEL_13:
    v16 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_14;
    goto LABEL_11;
  }
LABEL_10:
  v16 = (void *)sub_2419AA634();
  if ((v15 & 1) != 0)
  {
LABEL_14:
    v17 = 0;
    goto LABEL_15;
  }
LABEL_11:
  v17 = (void *)sub_2419AA628();
LABEL_15:
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C6F0]), sel_initWithStartTimestampInSecondsSince1970_numberOfSeconds_, v16, v17);

  return v18;
}

id _s16MetricsFramework13EventMetadataV07toBiomeC005usagecD0So025BMSiriOnDeviceDigestUsageacD0CACSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  int *v26;
  unsigned int (*v27)(char *, uint64_t, int *);
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  id v51;
  void *v52;
  char v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v65 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v64 = (uint64_t)&v58 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v58 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v58 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v58 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v58 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v59 = (uint64_t)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v58 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v58 - v24;
  sub_2419416DC(a1, (uint64_t)v17, &qword_257163E60);
  v26 = (int *)type metadata accessor for EventMetadata(0);
  v27 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v26 - 1) + 48);
  if (v27(v17, 1, v26) == 1)
  {
    v28 = &qword_257163E60;
    v29 = (uint64_t)v17;
LABEL_5:
    sub_241941720(v29, v28);
    v62 = 0;
    v63 = 0;
    goto LABEL_7;
  }
  sub_2419416DC((uint64_t)v17, (uint64_t)v25, &qword_257162D48);
  sub_241943CA8((uint64_t)v17, type metadata accessor for EventMetadata);
  v30 = sub_2419A9D1C();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v25, 1, v30) == 1)
  {
    v28 = &qword_257162D48;
    v29 = (uint64_t)v25;
    goto LABEL_5;
  }
  v32 = sub_2419A9CF8();
  v62 = v33;
  v63 = v32;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v30);
LABEL_7:
  sub_2419416DC(a1, (uint64_t)v15, &qword_257163E60);
  if (v27(v15, 1, v26) == 1)
  {
    v34 = &qword_257163E60;
    v35 = (uint64_t)v15;
LABEL_11:
    sub_241941720(v35, v34);
    v60 = 0;
    v61 = 0;
    goto LABEL_13;
  }
  sub_2419416DC((uint64_t)&v15[v26[5]], (uint64_t)v23, &qword_257162D48);
  sub_241943CA8((uint64_t)v15, type metadata accessor for EventMetadata);
  v36 = sub_2419A9D1C();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v23, 1, v36) == 1)
  {
    v34 = &qword_257162D48;
    v35 = (uint64_t)v23;
    goto LABEL_11;
  }
  v38 = sub_2419A9CF8();
  v60 = v39;
  v61 = v38;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v36);
LABEL_13:
  v40 = (uint64_t)v65;
  sub_2419416DC(a1, (uint64_t)v12, &qword_257163E60);
  v41 = v27(v12, 1, v26);
  v42 = v59;
  if (v41 == 1)
  {
    sub_241941720((uint64_t)v12, &qword_257163E60);
    v43 = 0;
    v44 = 0;
  }
  else
  {
    sub_2419416DC((uint64_t)&v12[v26[6]], v59, &qword_257162D48);
    sub_241943CA8((uint64_t)v12, type metadata accessor for EventMetadata);
    v45 = sub_2419A9D1C();
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v42, 1, v45) == 1)
    {
      sub_241941720(v42, &qword_257162D48);
      v43 = 0;
      v44 = 0;
    }
    else
    {
      v43 = sub_2419A9CF8();
      v44 = v47;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v42, v45);
    }
    v40 = (uint64_t)v65;
  }
  sub_2419416DC(a1, (uint64_t)v9, &qword_257163E60);
  if (v27(v9, 1, v26) == 1)
  {
    sub_241941720((uint64_t)v9, &qword_257163E60);
    v48 = 1;
  }
  else
  {
    v48 = v9[v26[9] + 8];
    sub_241943CA8((uint64_t)v9, type metadata accessor for EventMetadata);
  }
  v49 = v64;
  sub_2419416DC(a1, v64, &qword_257163E60);
  if (v27((char *)v49, 1, v26) == 1)
  {
    sub_241941720(v49, &qword_257163E60);
    v50 = 1;
  }
  else
  {
    v50 = *(_BYTE *)(v49 + v26[10] + 8);
    sub_241943CA8(v49, type metadata accessor for EventMetadata);
  }
  sub_2419416DC(a1, v40, &qword_257163E60);
  if (v27((char *)v40, 1, v26) == 1)
  {
    sub_241941720(v40, &qword_257163E60);
    v51 = _sSo28ODDSiriSchemaODDTimeIntervalC16MetricsFrameworkE12toBiomeEvent13eventMetadataSo025BMSiriOnDeviceDigestUsageeik4TimeD0CAC0iK0VSg_tFZ_0(a1);
    v52 = 0;
    if ((v48 & 1) != 0)
    {
LABEL_33:
      v54 = 0;
      if ((v50 & 1) != 0)
        goto LABEL_34;
      goto LABEL_31;
    }
  }
  else
  {
    v53 = *(_BYTE *)(v40 + v26[7] + 8);
    sub_241943CA8(v40, type metadata accessor for EventMetadata);
    v51 = _sSo28ODDSiriSchemaODDTimeIntervalC16MetricsFrameworkE12toBiomeEvent13eventMetadataSo025BMSiriOnDeviceDigestUsageeik4TimeD0CAC0iK0VSg_tFZ_0(a1);
    if ((v53 & 1) != 0)
    {
      v52 = 0;
      if ((v48 & 1) != 0)
        goto LABEL_33;
    }
    else
    {
      v52 = (void *)sub_2419AA634();
      if ((v48 & 1) != 0)
        goto LABEL_33;
    }
  }
  v54 = (void *)sub_2419AA634();
  if ((v50 & 1) != 0)
  {
LABEL_34:
    v55 = 0;
    goto LABEL_35;
  }
LABEL_31:
  v55 = (void *)sub_2419AA634();
LABEL_35:
  v56 = objc_allocWithZone(MEMORY[0x24BE0C6E8]);
  return sub_24199F1BC(v63, v62, v61, v60, v43, v44, v52, v51, v54, v55);
}

uint64_t sub_2419A6070()
{
  return sub_24194169C(&qword_257166E70, type metadata accessor for EventMetadata, (uint64_t)&protocol conformance descriptor for EventMetadata);
}

unint64_t sub_2419A60A0()
{
  unint64_t result;

  result = qword_257166E78;
  if (!qword_257166E78)
  {
    result = MEMORY[0x24269F6EC](&protocol conformance descriptor for ProductId, &type metadata for ProductId);
    atomic_store(result, (unint64_t *)&qword_257166E78);
  }
  return result;
}

uint64_t sub_2419A60E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_2419A60EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 64))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_2419A6110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_2419A6118(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 88))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6134(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 96))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t sub_2419A6158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t sub_2419A6160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t sub_2419A6168(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 128))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6184(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 136))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A61A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 144))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A61BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 152))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A61D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 160))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A61F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 168))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6210(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 176))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A622C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 184))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6248(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 192))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6264(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 200))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6280(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 208))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A629C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 216))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A62B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 224))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A62D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 232))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A62F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 240))();
}

uint64_t sub_2419A62F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 248))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2419A6314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t sub_2419A631C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t sub_2419A6324(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t *initializeBufferWithCopyOfBuffer for EventMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  id v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2419A9D1C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    v20 = a3[7];
    v21 = a3[8];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = *(void **)((char *)a2 + v21);
    *(uint64_t *)((char *)a1 + v21) = (uint64_t)v24;
    v25 = a3[9];
    v26 = a3[10];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    v27[8] = v28[8];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v29 = (char *)a1 + v26;
    v30 = (char *)a2 + v26;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v24;
  }
  return a1;
}

void destroy for EventMetadata(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v4 = sub_2419A9D1C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + a2[5];
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  v8 = a1 + a2[6];
  if (!v6(v8, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);

}

char *initializeWithCopy for EventMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  id v29;

  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = *(void **)&a2[v19];
  *(_QWORD *)&a1[v19] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = &a1[v23];
  v26 = &a2[v23];
  v25[8] = v26[8];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = &a1[v24];
  v28 = &a2[v24];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v22;
  return a1;
}

char *assignWithCopy for EventMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = *(_QWORD *)v26;
  v25[8] = v26[8];
  *(_QWORD *)v25 = v27;
  v28 = a3[8];
  v29 = *(void **)&a1[v28];
  v30 = *(void **)&a2[v28];
  *(_QWORD *)&a1[v28] = v30;
  v31 = v30;

  v32 = a3[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_QWORD *)v34;
  v33[8] = v34[8];
  *(_QWORD *)v33 = v35;
  v36 = a3[10];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *(_QWORD *)v37 = v39;
  return a1;
}

char *initializeWithTake for EventMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;

  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = *(_QWORD *)&a2[v19];
  v20[8] = v21[8];
  *(_QWORD *)&a1[v19] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = &a1[v23];
  v26 = &a2[v23];
  v25[8] = v26[8];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = &a1[v24];
  v28 = &a2[v24];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  return a1;
}

char *assignWithTake for EventMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;

  v6 = sub_2419A9D1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  v24 = a3[7];
  v25 = a3[8];
  v26 = &a1[v24];
  v27 = &a2[v24];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = *(void **)&a1[v25];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];

  v29 = a3[9];
  v30 = a3[10];
  v31 = &a1[v29];
  v32 = &a2[v29];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  v33 = &a1[v30];
  v34 = &a2[v30];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v34[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for EventMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2419A6FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for EventMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2419A7040(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2;
  return result;
}

void sub_2419A70BC()
{
  unint64_t v0;

  sub_24197BF98(319, (unint64_t *)&qword_257163520, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *__swift_memcpy13_4(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ISOLocale(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 13))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ISOLocale(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 13) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ISOLocale()
{
  return &type metadata for ISOLocale;
}

uint64_t storeEnumTagSinglePayload for ProductId(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2419A7210 + 4 * byte_2419AFAE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2419A7244 + 4 * byte_2419AFAE0[v4]))();
}

uint64_t sub_2419A7244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2419A724C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2419A7254);
  return result;
}

uint64_t sub_2419A7260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2419A7268);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2419A726C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2419A7274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductId()
{
  return &type metadata for ProductId;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceUsageMetrics(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(uint64_t *, _QWORD, uint64_t, int *);
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  id v130;
  id v131;
  uint64_t v133;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for EventMetadata(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_2419A9D1C();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
      if (v13(a2, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      v15 = v7[5];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      if (v13((uint64_t *)((char *)a2 + v15), 1, v11))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
      }
      v19 = v7[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v13((uint64_t *)((char *)a2 + v19), 1, v11))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v20, v21, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
      }
      v23 = v7[7];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v26 = v7[8];
      v27 = *(void **)((char *)a2 + v26);
      *(uint64_t *)((char *)a1 + v26) = (uint64_t)v27;
      v28 = v7[9];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v29[8] = v30[8];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v31 = v7[10];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v32[8] = v33[8];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v34 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      v35 = v27;
      v34(a1, 0, 1, v7);
    }
    v36 = a3[5];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_2419A9D1C();
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v42 = a3[6];
    v43 = a3[7];
    v44 = (uint64_t *)((char *)a1 + v42);
    v45 = (uint64_t *)((char *)a2 + v42);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = (char *)a1 + v43;
    v48 = (char *)a2 + v43;
    v47[4] = v48[4];
    *(_DWORD *)v47 = *(_DWORD *)v48;
    v49 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v50 = (uint64_t *)((char *)a1 + v49);
    v51 = (uint64_t *)((char *)a2 + v49);
    v133 = v51[1];
    *v50 = *v51;
    v50[1] = v133;
    v52 = a3[10];
    v53 = a3[11];
    v54 = (char *)a1 + v52;
    v55 = (char *)a2 + v52;
    *(_DWORD *)v54 = *(_DWORD *)v55;
    v54[4] = v55[4];
    v56 = (char *)a1 + v53;
    v57 = (char *)a2 + v53;
    *(_DWORD *)v56 = *(_DWORD *)v57;
    v56[4] = v57[4];
    v58 = a3[12];
    v59 = a3[13];
    v60 = (uint64_t *)((char *)a1 + v58);
    v61 = (uint64_t *)((char *)a2 + v58);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = (uint64_t *)((char *)a1 + v59);
    v64 = (uint64_t *)((char *)a2 + v59);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    v66 = a3[14];
    v67 = a3[15];
    v68 = (char *)a1 + v66;
    v69 = (char *)a2 + v66;
    *(_DWORD *)v68 = *(_DWORD *)v69;
    v68[4] = v69[4];
    v70 = (char *)a1 + v67;
    v71 = (char *)a2 + v67;
    *(_DWORD *)v70 = *(_DWORD *)v71;
    v70[4] = v71[4];
    v72 = a3[16];
    v73 = a3[17];
    v74 = *(void **)((char *)a2 + v72);
    *(uint64_t *)((char *)a1 + v72) = (uint64_t)v74;
    v75 = *(void **)((char *)a2 + v73);
    *(uint64_t *)((char *)a1 + v73) = (uint64_t)v75;
    v76 = a3[18];
    v77 = a3[19];
    v78 = (uint64_t *)((char *)a1 + v76);
    v79 = (uint64_t *)((char *)a2 + v76);
    v80 = v79[1];
    *v78 = *v79;
    v78[1] = v80;
    v81 = (char *)a1 + v77;
    v82 = (char *)a2 + v77;
    *(_DWORD *)v81 = *(_DWORD *)v82;
    v81[4] = v82[4];
    v83 = a3[20];
    v84 = a3[21];
    v85 = (char *)a1 + v83;
    v86 = (char *)a2 + v83;
    *(_DWORD *)v85 = *(_DWORD *)v86;
    v85[4] = v86[4];
    v87 = (char *)a1 + v84;
    v88 = (char *)a2 + v84;
    *(_DWORD *)v87 = *(_DWORD *)v88;
    v87[4] = v88[4];
    v89 = a3[22];
    v90 = a3[23];
    v91 = (char *)a1 + v89;
    v92 = (char *)a2 + v89;
    *(_DWORD *)v91 = *(_DWORD *)v92;
    v91[4] = v92[4];
    v93 = (char *)a1 + v90;
    v94 = (char *)a2 + v90;
    LODWORD(v91) = *(_DWORD *)v94;
    v93[4] = v94[4];
    *(_DWORD *)v93 = (_DWORD)v91;
    v95 = a3[24];
    v96 = a3[25];
    v97 = (char *)a1 + v95;
    v98 = (char *)a2 + v95;
    *(_DWORD *)v97 = *(_DWORD *)v98;
    v97[4] = v98[4];
    v99 = (char *)a1 + v96;
    v100 = (char *)a2 + v96;
    *(_DWORD *)v99 = *(_DWORD *)v100;
    v99[4] = v100[4];
    v101 = a3[26];
    v102 = a3[27];
    v103 = (char *)a1 + v101;
    v104 = (char *)a2 + v101;
    *(_DWORD *)v103 = *(_DWORD *)v104;
    v103[4] = v104[4];
    v105 = (char *)a1 + v102;
    v106 = (char *)a2 + v102;
    *(_DWORD *)v105 = *(_DWORD *)v106;
    v105[4] = v106[4];
    v107 = a3[28];
    v108 = a3[29];
    v109 = (char *)a1 + v107;
    v110 = (char *)a2 + v107;
    *(_DWORD *)v109 = *(_DWORD *)v110;
    v109[4] = v110[4];
    v111 = (char *)a1 + v108;
    v112 = (char *)a2 + v108;
    *(_DWORD *)v111 = *(_DWORD *)v112;
    v111[4] = v112[4];
    v113 = a3[30];
    v114 = a3[31];
    v115 = (char *)a1 + v113;
    v116 = (char *)a2 + v113;
    *(_DWORD *)v115 = *(_DWORD *)v116;
    v115[4] = v116[4];
    v117 = (char *)a1 + v114;
    v118 = (char *)a2 + v114;
    *(_DWORD *)v117 = *(_DWORD *)v118;
    v117[4] = v118[4];
    v119 = a3[32];
    v120 = a3[33];
    v121 = (char *)a1 + v119;
    v122 = (char *)a2 + v119;
    *(_DWORD *)v121 = *(_DWORD *)v122;
    v121[4] = v122[4];
    v123 = (uint64_t *)((char *)a1 + v120);
    v124 = (uint64_t *)((char *)a2 + v120);
    v125 = v124[1];
    *v123 = *v124;
    v123[1] = v125;
    v126 = a3[34];
    v127 = a3[35];
    v128 = (char *)a1 + v126;
    v129 = (char *)a2 + v126;
    *(_DWORD *)v128 = *(_DWORD *)v129;
    v128[4] = v129[4];
    *(uint64_t *)((char *)a1 + v127) = *(uint64_t *)((char *)a2 + v127);
    *((_BYTE *)a1 + a3[36]) = *((_BYTE *)a2 + a3[36]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v130 = v74;
    v131 = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DeviceUsageMetrics(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (int *)type metadata accessor for EventMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    v5 = sub_2419A9D1C();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = a1 + v4[5];
    if (!v7(v8, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    v9 = a1 + v4[6];
    if (!v7(v9, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);

  }
  v10 = a1 + a2[5];
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for DeviceUsageMetrics(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t, int *);
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  id v128;
  id v129;
  uint64_t v131;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_2419A9D1C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v13 = v6[5];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    v17 = v6[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v19, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    v21 = v6[7];
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = v6[8];
    v25 = *(void **)&a2[v24];
    *(_QWORD *)&a1[v24] = v25;
    v26 = v6[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v27[8] = v28[8];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v29 = v6[10];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v30[8] = v31[8];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v32 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
    v33 = v25;
    v32(a1, 0, 1, v6);
  }
  v34 = a3[5];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = sub_2419A9D1C();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v40 = a3[6];
  v41 = a3[7];
  v42 = &a1[v40];
  v43 = &a2[v40];
  v44 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *((_QWORD *)v42 + 1) = v44;
  v45 = &a1[v41];
  v46 = &a2[v41];
  v45[4] = v46[4];
  *(_DWORD *)v45 = *(_DWORD *)v46;
  v47 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v131 = *((_QWORD *)v49 + 1);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *((_QWORD *)v48 + 1) = v131;
  v50 = a3[10];
  v51 = a3[11];
  v52 = &a1[v50];
  v53 = &a2[v50];
  *(_DWORD *)v52 = *(_DWORD *)v53;
  v52[4] = v53[4];
  v54 = &a1[v51];
  v55 = &a2[v51];
  *(_DWORD *)v54 = *(_DWORD *)v55;
  v54[4] = v55[4];
  v56 = a3[12];
  v57 = a3[13];
  v58 = &a1[v56];
  v59 = &a2[v56];
  v60 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *((_QWORD *)v58 + 1) = v60;
  v61 = &a1[v57];
  v62 = &a2[v57];
  v63 = *((_QWORD *)v62 + 1);
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *((_QWORD *)v61 + 1) = v63;
  v64 = a3[14];
  v65 = a3[15];
  v66 = &a1[v64];
  v67 = &a2[v64];
  *(_DWORD *)v66 = *(_DWORD *)v67;
  v66[4] = v67[4];
  v68 = &a1[v65];
  v69 = &a2[v65];
  *(_DWORD *)v68 = *(_DWORD *)v69;
  v68[4] = v69[4];
  v70 = a3[16];
  v71 = a3[17];
  v72 = *(void **)&a2[v70];
  *(_QWORD *)&a1[v70] = v72;
  v73 = *(void **)&a2[v71];
  *(_QWORD *)&a1[v71] = v73;
  v74 = a3[18];
  v75 = a3[19];
  v76 = &a1[v74];
  v77 = &a2[v74];
  v78 = *((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *((_QWORD *)v76 + 1) = v78;
  v79 = &a1[v75];
  v80 = &a2[v75];
  *(_DWORD *)v79 = *(_DWORD *)v80;
  v79[4] = v80[4];
  v81 = a3[20];
  v82 = a3[21];
  v83 = &a1[v81];
  v84 = &a2[v81];
  *(_DWORD *)v83 = *(_DWORD *)v84;
  v83[4] = v84[4];
  v85 = &a1[v82];
  v86 = &a2[v82];
  *(_DWORD *)v85 = *(_DWORD *)v86;
  v85[4] = v86[4];
  v87 = a3[22];
  v88 = a3[23];
  v89 = &a1[v87];
  v90 = &a2[v87];
  *(_DWORD *)v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v91 = &a1[v88];
  v92 = &a2[v88];
  LODWORD(v89) = *(_DWORD *)v92;
  v91[4] = v92[4];
  *(_DWORD *)v91 = (_DWORD)v89;
  v93 = a3[24];
  v94 = a3[25];
  v95 = &a1[v93];
  v96 = &a2[v93];
  *(_DWORD *)v95 = *(_DWORD *)v96;
  v95[4] = v96[4];
  v97 = &a1[v94];
  v98 = &a2[v94];
  *(_DWORD *)v97 = *(_DWORD *)v98;
  v97[4] = v98[4];
  v99 = a3[26];
  v100 = a3[27];
  v101 = &a1[v99];
  v102 = &a2[v99];
  *(_DWORD *)v101 = *(_DWORD *)v102;
  v101[4] = v102[4];
  v103 = &a1[v100];
  v104 = &a2[v100];
  *(_DWORD *)v103 = *(_DWORD *)v104;
  v103[4] = v104[4];
  v105 = a3[28];
  v106 = a3[29];
  v107 = &a1[v105];
  v108 = &a2[v105];
  *(_DWORD *)v107 = *(_DWORD *)v108;
  v107[4] = v108[4];
  v109 = &a1[v106];
  v110 = &a2[v106];
  *(_DWORD *)v109 = *(_DWORD *)v110;
  v109[4] = v110[4];
  v111 = a3[30];
  v112 = a3[31];
  v113 = &a1[v111];
  v114 = &a2[v111];
  *(_DWORD *)v113 = *(_DWORD *)v114;
  v113[4] = v114[4];
  v115 = &a1[v112];
  v116 = &a2[v112];
  *(_DWORD *)v115 = *(_DWORD *)v116;
  v115[4] = v116[4];
  v117 = a3[32];
  v118 = a3[33];
  v119 = &a1[v117];
  v120 = &a2[v117];
  *(_DWORD *)v119 = *(_DWORD *)v120;
  v119[4] = v120[4];
  v121 = &a1[v118];
  v122 = &a2[v118];
  v123 = *((_QWORD *)v122 + 1);
  *(_QWORD *)v121 = *(_QWORD *)v122;
  *((_QWORD *)v121 + 1) = v123;
  v124 = a3[34];
  v125 = a3[35];
  v126 = &a1[v124];
  v127 = &a2[v124];
  *(_DWORD *)v126 = *(_DWORD *)v127;
  v126[4] = v127[4];
  *(_QWORD *)&a1[v125] = *(_QWORD *)&a2[v125];
  a1[a3[36]] = a2[a3[36]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v128 = v72;
  v129 = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DeviceUsageMetrics(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, int *);
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(char *, uint64_t, uint64_t);
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  int v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  int v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int v133;
  uint64_t v134;
  char *v135;
  char *v136;
  int v137;
  uint64_t v138;
  char *v139;
  char *v140;
  int v141;
  uint64_t v142;
  char *v143;
  char *v144;
  int v145;
  uint64_t v146;
  char *v147;
  char *v148;
  int v149;
  uint64_t v150;
  char *v151;
  char *v152;
  int v153;
  uint64_t v154;
  char *v155;
  char *v156;
  int v157;
  uint64_t v158;
  char *v159;
  char *v160;
  int v161;
  uint64_t v162;
  char *v163;
  char *v164;
  int v165;
  uint64_t v166;
  char *v167;
  char *v168;
  int v169;
  uint64_t v170;
  char *v171;
  char *v172;
  int v173;
  uint64_t v174;
  char *v175;
  char *v176;
  int v177;
  uint64_t v178;
  char *v179;
  char *v180;
  int v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  int v188;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_241943CA8((uint64_t)a1, type metadata accessor for EventMetadata);
      goto LABEL_7;
    }
    v16 = sub_2419A9D1C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(a1, a2, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 24))(a1, a2, v16);
LABEL_22:
        v46 = v6[5];
        v47 = &a1[v46];
        v48 = &a2[v46];
        v49 = v18(&a1[v46], 1, v16);
        v50 = v18(v48, 1, v16);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v47, v48, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v47, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v47, v48, v16);
LABEL_28:
            v52 = v6[6];
            v53 = &a1[v52];
            v54 = &a2[v52];
            v55 = v18(&a1[v52], 1, v16);
            v56 = v18(v54, 1, v16);
            if (v55)
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v53, v54, v16);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v53, 0, 1, v16);
LABEL_34:
                v58 = v6[7];
                v59 = &a1[v58];
                v60 = &a2[v58];
                v61 = *(_QWORD *)v60;
                v59[8] = v60[8];
                *(_QWORD *)v59 = v61;
                v62 = v6[8];
                v63 = *(void **)&a1[v62];
                v64 = *(void **)&a2[v62];
                *(_QWORD *)&a1[v62] = v64;
                v65 = v64;

                v66 = v6[9];
                v67 = &a1[v66];
                v68 = &a2[v66];
                v69 = *(_QWORD *)v68;
                v67[8] = v68[8];
                *(_QWORD *)v67 = v69;
                v70 = v6[10];
                v71 = &a1[v70];
                v72 = &a2[v70];
                v73 = *(_QWORD *)v72;
                v71[8] = v72[8];
                *(_QWORD *)v71 = v73;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v53, v54, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
            }
            v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v47, v16);
        }
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_35;
  }
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(a2, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v21 = v6[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v13(&a2[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = v6[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v13(&a2[v25], 1, v11))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
  }
  v29 = v6[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)v30 = v32;
  v33 = v6[8];
  v34 = *(void **)&a2[v33];
  *(_QWORD *)&a1[v33] = v34;
  v35 = v6[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *(_QWORD *)v37;
  v36[8] = v37[8];
  *(_QWORD *)v36 = v38;
  v39 = v6[10];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *(_QWORD *)v41;
  v40[8] = v41[8];
  *(_QWORD *)v40 = v42;
  v43 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
  v44 = v34;
  v43(a1, 0, 1, v6);
LABEL_35:
  v74 = a3[5];
  v75 = &a1[v74];
  v76 = &a2[v74];
  v77 = sub_2419A9D1C();
  v78 = *(_QWORD *)(v77 - 8);
  v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
  v80 = v79(v75, 1, v77);
  v81 = v79(v76, 1, v77);
  if (!v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 24))(v75, v76, v77);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v77);
    goto LABEL_40;
  }
  if (v81)
  {
LABEL_40:
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
LABEL_41:
  v83 = a3[6];
  v84 = &a1[v83];
  v85 = &a2[v83];
  *(_QWORD *)v84 = *(_QWORD *)v85;
  *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v86 = a3[7];
  v87 = &a1[v86];
  v88 = &a2[v86];
  v89 = *(_DWORD *)v88;
  v87[4] = v88[4];
  *(_DWORD *)v87 = v89;
  a1[a3[8]] = a2[a3[8]];
  v90 = a3[9];
  v91 = &a1[v90];
  v92 = &a2[v90];
  *(_QWORD *)v91 = *(_QWORD *)v92;
  *((_QWORD *)v91 + 1) = *((_QWORD *)v92 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v93 = a3[10];
  v94 = &a1[v93];
  v95 = &a2[v93];
  v96 = *(_DWORD *)v95;
  v94[4] = v95[4];
  *(_DWORD *)v94 = v96;
  v97 = a3[11];
  v98 = &a1[v97];
  v99 = &a2[v97];
  v100 = *(_DWORD *)v99;
  v98[4] = v99[4];
  *(_DWORD *)v98 = v100;
  v101 = a3[12];
  v102 = &a1[v101];
  v103 = &a2[v101];
  *(_QWORD *)v102 = *(_QWORD *)v103;
  *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v104 = a3[13];
  v105 = &a1[v104];
  v106 = &a2[v104];
  *(_QWORD *)v105 = *(_QWORD *)v106;
  *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v107 = a3[14];
  v108 = &a1[v107];
  v109 = &a2[v107];
  v110 = *(_DWORD *)v109;
  v108[4] = v109[4];
  *(_DWORD *)v108 = v110;
  v111 = a3[15];
  v112 = &a1[v111];
  v113 = &a2[v111];
  v114 = *(_DWORD *)v113;
  v112[4] = v113[4];
  *(_DWORD *)v112 = v114;
  v115 = a3[16];
  v116 = *(void **)&a1[v115];
  v117 = *(void **)&a2[v115];
  *(_QWORD *)&a1[v115] = v117;
  v118 = v117;

  v119 = a3[17];
  v120 = *(void **)&a1[v119];
  v121 = *(void **)&a2[v119];
  *(_QWORD *)&a1[v119] = v121;
  v122 = v121;

  v123 = a3[18];
  v124 = &a1[v123];
  v125 = &a2[v123];
  *(_QWORD *)v124 = *(_QWORD *)v125;
  *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v126 = a3[19];
  v127 = &a1[v126];
  v128 = &a2[v126];
  v129 = *(_DWORD *)v128;
  v127[4] = v128[4];
  *(_DWORD *)v127 = v129;
  v130 = a3[20];
  v131 = &a1[v130];
  v132 = &a2[v130];
  v133 = *(_DWORD *)v132;
  v131[4] = v132[4];
  *(_DWORD *)v131 = v133;
  v134 = a3[21];
  v135 = &a1[v134];
  v136 = &a2[v134];
  v137 = *(_DWORD *)v136;
  v135[4] = v136[4];
  *(_DWORD *)v135 = v137;
  v138 = a3[22];
  v139 = &a1[v138];
  v140 = &a2[v138];
  v141 = *(_DWORD *)v140;
  v139[4] = v140[4];
  *(_DWORD *)v139 = v141;
  v142 = a3[23];
  v143 = &a1[v142];
  v144 = &a2[v142];
  v145 = *(_DWORD *)v144;
  v143[4] = v144[4];
  *(_DWORD *)v143 = v145;
  v146 = a3[24];
  v147 = &a1[v146];
  v148 = &a2[v146];
  v149 = *(_DWORD *)v148;
  v147[4] = v148[4];
  *(_DWORD *)v147 = v149;
  v150 = a3[25];
  v151 = &a1[v150];
  v152 = &a2[v150];
  v153 = *(_DWORD *)v152;
  v151[4] = v152[4];
  *(_DWORD *)v151 = v153;
  v154 = a3[26];
  v155 = &a1[v154];
  v156 = &a2[v154];
  v157 = *(_DWORD *)v156;
  v155[4] = v156[4];
  *(_DWORD *)v155 = v157;
  v158 = a3[27];
  v159 = &a1[v158];
  v160 = &a2[v158];
  v161 = *(_DWORD *)v160;
  v159[4] = v160[4];
  *(_DWORD *)v159 = v161;
  v162 = a3[28];
  v163 = &a1[v162];
  v164 = &a2[v162];
  v165 = *(_DWORD *)v164;
  v163[4] = v164[4];
  *(_DWORD *)v163 = v165;
  v166 = a3[29];
  v167 = &a1[v166];
  v168 = &a2[v166];
  v169 = *(_DWORD *)v168;
  v167[4] = v168[4];
  *(_DWORD *)v167 = v169;
  v170 = a3[30];
  v171 = &a1[v170];
  v172 = &a2[v170];
  v173 = *(_DWORD *)v172;
  v171[4] = v172[4];
  *(_DWORD *)v171 = v173;
  v174 = a3[31];
  v175 = &a1[v174];
  v176 = &a2[v174];
  v177 = *(_DWORD *)v176;
  v175[4] = v176[4];
  *(_DWORD *)v175 = v177;
  v178 = a3[32];
  v179 = &a1[v178];
  v180 = &a2[v178];
  v181 = *(_DWORD *)v180;
  v179[4] = v180[4];
  *(_DWORD *)v179 = v181;
  v182 = a3[33];
  v183 = &a1[v182];
  v184 = &a2[v182];
  *(_QWORD *)v183 = *(_QWORD *)v184;
  *((_QWORD *)v183 + 1) = *((_QWORD *)v184 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v185 = a3[34];
  v186 = &a1[v185];
  v187 = &a2[v185];
  v188 = *(_DWORD *)v187;
  v186[4] = v187[4];
  *(_DWORD *)v186 = v188;
  *(_QWORD *)&a1[a3[35]] = *(_QWORD *)&a2[a3[35]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[36]] = a2[a3[36]];
  return a1;
}

char *initializeWithTake for DeviceUsageMetrics(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_2419A9D1C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v13 = v6[5];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    v17 = v6[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v19, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    v21 = v6[7];
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v24 = v6[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v25[8] = v26[8];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v27 = v6[10];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v28[8] = v29[8];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v30 = a3[5];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_2419A9D1C();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v36 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  v37 = &a1[v36];
  v38 = &a2[v36];
  *(_DWORD *)v37 = *(_DWORD *)v38;
  v37[4] = v38[4];
  v39 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_OWORD *)&a1[v39] = *(_OWORD *)&a2[v39];
  v40 = a3[10];
  v41 = a3[11];
  v42 = &a1[v40];
  v43 = &a2[v40];
  *(_DWORD *)v42 = *(_DWORD *)v43;
  v42[4] = v43[4];
  v44 = &a1[v41];
  v45 = &a2[v41];
  *(_DWORD *)v44 = *(_DWORD *)v45;
  v44[4] = v45[4];
  v46 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)&a1[v46] = *(_OWORD *)&a2[v46];
  v47 = a3[14];
  v48 = a3[15];
  v49 = &a1[v47];
  v50 = &a2[v47];
  v51 = *(_DWORD *)v50;
  v49[4] = v50[4];
  *(_DWORD *)v49 = v51;
  v52 = &a1[v48];
  v53 = &a2[v48];
  *(_DWORD *)v52 = *(_DWORD *)v53;
  v52[4] = v53[4];
  v54 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  *(_QWORD *)&a1[v54] = *(_QWORD *)&a2[v54];
  v55 = a3[19];
  *(_OWORD *)&a1[a3[18]] = *(_OWORD *)&a2[a3[18]];
  v56 = &a1[v55];
  v57 = &a2[v55];
  *(_DWORD *)v56 = *(_DWORD *)v57;
  v56[4] = v57[4];
  v58 = a3[20];
  v59 = a3[21];
  v60 = &a1[v58];
  v61 = &a2[v58];
  *(_DWORD *)v60 = *(_DWORD *)v61;
  v60[4] = v61[4];
  v62 = &a1[v59];
  v63 = &a2[v59];
  *(_DWORD *)v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v64 = a3[22];
  v65 = a3[23];
  v66 = &a1[v64];
  v67 = &a2[v64];
  *(_DWORD *)v66 = *(_DWORD *)v67;
  v66[4] = v67[4];
  v68 = &a1[v65];
  v69 = &a2[v65];
  LODWORD(v66) = *(_DWORD *)v69;
  v68[4] = v69[4];
  *(_DWORD *)v68 = (_DWORD)v66;
  v70 = a3[24];
  v71 = a3[25];
  v72 = &a1[v70];
  v73 = &a2[v70];
  *(_DWORD *)v72 = *(_DWORD *)v73;
  v72[4] = v73[4];
  v74 = &a1[v71];
  v75 = &a2[v71];
  *(_DWORD *)v74 = *(_DWORD *)v75;
  v74[4] = v75[4];
  v76 = a3[26];
  v77 = a3[27];
  v78 = &a1[v76];
  v79 = &a2[v76];
  *(_DWORD *)v78 = *(_DWORD *)v79;
  v78[4] = v79[4];
  v80 = &a1[v77];
  v81 = &a2[v77];
  *(_DWORD *)v80 = *(_DWORD *)v81;
  v80[4] = v81[4];
  v82 = a3[28];
  v83 = a3[29];
  v84 = &a1[v82];
  v85 = &a2[v82];
  *(_DWORD *)v84 = *(_DWORD *)v85;
  v84[4] = v85[4];
  v86 = &a1[v83];
  v87 = &a2[v83];
  *(_DWORD *)v86 = *(_DWORD *)v87;
  v86[4] = v87[4];
  v88 = a3[30];
  v89 = a3[31];
  v90 = &a1[v88];
  v91 = &a2[v88];
  *(_DWORD *)v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v92 = &a1[v89];
  v93 = &a2[v89];
  *(_DWORD *)v92 = *(_DWORD *)v93;
  v92[4] = v93[4];
  v94 = a3[32];
  v95 = a3[33];
  v96 = &a1[v94];
  v97 = &a2[v94];
  *(_DWORD *)v96 = *(_DWORD *)v97;
  v96[4] = v97[4];
  *(_OWORD *)&a1[v95] = *(_OWORD *)&a2[v95];
  v98 = a3[34];
  v99 = a3[35];
  v100 = &a1[v98];
  v101 = &a2[v98];
  *(_DWORD *)v100 = *(_DWORD *)v101;
  v100[4] = v101[4];
  *(_QWORD *)&a1[v99] = *(_QWORD *)&a2[v99];
  a1[a3[36]] = a2[a3[36]];
  return a1;
}

char *assignWithTake for DeviceUsageMetrics(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;

  v6 = (int *)type metadata accessor for EventMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_241943CA8((uint64_t)a1, type metadata accessor for EventMetadata);
      goto LABEL_7;
    }
    v16 = sub_2419A9D1C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(a1, a2, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 40))(a1, a2, v16);
LABEL_22:
        v39 = v6[5];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v42 = v18(&a1[v39], 1, v16);
        v43 = v18(v41, 1, v16);
        if (v42)
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v40, v41, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v40, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v40, v41, v16);
LABEL_28:
            v45 = v6[6];
            v46 = &a1[v45];
            v47 = &a2[v45];
            v48 = v18(&a1[v45], 1, v16);
            v49 = v18(v47, 1, v16);
            if (v48)
            {
              if (!v49)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v46, v47, v16);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v16);
LABEL_34:
                v51 = v6[7];
                v52 = &a1[v51];
                v53 = &a2[v51];
                *(_QWORD *)v52 = *(_QWORD *)v53;
                v52[8] = v53[8];
                v54 = v6[8];
                v55 = *(void **)&a1[v54];
                *(_QWORD *)&a1[v54] = *(_QWORD *)&a2[v54];

                v56 = v6[9];
                v57 = &a1[v56];
                v58 = &a2[v56];
                *(_QWORD *)v57 = *(_QWORD *)v58;
                v57[8] = v58[8];
                v59 = v6[10];
                v60 = &a1[v59];
                v61 = &a2[v59];
                v60[8] = v61[8];
                *(_QWORD *)v60 = *(_QWORD *)v61;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v49)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v46, v47, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v46, v16);
            }
            v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v40, v16);
        }
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_35;
  }
  v11 = sub_2419A9D1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(a2, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v21 = v6[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v13(&a2[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = v6[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v13(&a2[v25], 1, v11))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v26, v27, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
  }
  v29 = v6[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  v32 = v6[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v33[8] = v34[8];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v35 = v6[10];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v36[8] = v37[8];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_35:
  v62 = a3[5];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = sub_2419A9D1C();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 40))(v63, v64, v65);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v65);
    goto LABEL_40;
  }
  if (v69)
  {
LABEL_40:
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_41:
  v71 = a3[6];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v75 = *(_QWORD *)v73;
  v74 = *((_QWORD *)v73 + 1);
  *(_QWORD *)v72 = v75;
  *((_QWORD *)v72 + 1) = v74;
  swift_bridgeObjectRelease();
  v76 = a3[7];
  v77 = a3[8];
  v78 = &a1[v76];
  v79 = &a2[v76];
  *(_DWORD *)v78 = *(_DWORD *)v79;
  v78[4] = v79[4];
  a1[v77] = a2[v77];
  v80 = a3[9];
  v81 = &a1[v80];
  v82 = &a2[v80];
  v84 = *(_QWORD *)v82;
  v83 = *((_QWORD *)v82 + 1);
  *(_QWORD *)v81 = v84;
  *((_QWORD *)v81 + 1) = v83;
  swift_bridgeObjectRelease();
  v85 = a3[10];
  v86 = a3[11];
  v87 = &a1[v85];
  v88 = &a2[v85];
  *(_DWORD *)v87 = *(_DWORD *)v88;
  v87[4] = v88[4];
  v89 = &a1[v86];
  v90 = &a2[v86];
  *(_DWORD *)v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v91 = a3[12];
  v92 = &a1[v91];
  v93 = &a2[v91];
  v95 = *(_QWORD *)v93;
  v94 = *((_QWORD *)v93 + 1);
  *(_QWORD *)v92 = v95;
  *((_QWORD *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  v96 = a3[13];
  v97 = &a1[v96];
  v98 = &a2[v96];
  v100 = *(_QWORD *)v98;
  v99 = *((_QWORD *)v98 + 1);
  *(_QWORD *)v97 = v100;
  *((_QWORD *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  v101 = a3[14];
  v102 = a3[15];
  v103 = &a1[v101];
  v104 = &a2[v101];
  v103[4] = v104[4];
  *(_DWORD *)v103 = *(_DWORD *)v104;
  v105 = &a1[v102];
  v106 = &a2[v102];
  v105[4] = v106[4];
  *(_DWORD *)v105 = *(_DWORD *)v106;
  v107 = a3[16];
  v108 = *(void **)&a1[v107];
  *(_QWORD *)&a1[v107] = *(_QWORD *)&a2[v107];

  v109 = a3[17];
  v110 = *(void **)&a1[v109];
  *(_QWORD *)&a1[v109] = *(_QWORD *)&a2[v109];

  v111 = a3[18];
  v112 = &a1[v111];
  v113 = &a2[v111];
  v115 = *(_QWORD *)v113;
  v114 = *((_QWORD *)v113 + 1);
  *(_QWORD *)v112 = v115;
  *((_QWORD *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  v116 = a3[19];
  v117 = a3[20];
  v118 = &a1[v116];
  v119 = &a2[v116];
  *(_DWORD *)v118 = *(_DWORD *)v119;
  v118[4] = v119[4];
  v120 = &a1[v117];
  v121 = &a2[v117];
  *(_DWORD *)v120 = *(_DWORD *)v121;
  v120[4] = v121[4];
  v122 = a3[21];
  v123 = a3[22];
  v124 = &a1[v122];
  v125 = &a2[v122];
  *(_DWORD *)v124 = *(_DWORD *)v125;
  v124[4] = v125[4];
  v126 = &a1[v123];
  v127 = &a2[v123];
  v126[4] = v127[4];
  *(_DWORD *)v126 = *(_DWORD *)v127;
  v128 = a3[23];
  v129 = a3[24];
  v130 = &a1[v128];
  v131 = &a2[v128];
  *(_DWORD *)v130 = *(_DWORD *)v131;
  v130[4] = v131[4];
  v132 = &a1[v129];
  v133 = &a2[v129];
  *(_DWORD *)v132 = *(_DWORD *)v133;
  v132[4] = v133[4];
  v134 = a3[25];
  v135 = a3[26];
  v136 = &a1[v134];
  v137 = &a2[v134];
  *(_DWORD *)v136 = *(_DWORD *)v137;
  v136[4] = v137[4];
  v138 = &a1[v135];
  v139 = &a2[v135];
  *(_DWORD *)v138 = *(_DWORD *)v139;
  v138[4] = v139[4];
  v140 = a3[27];
  v141 = a3[28];
  v142 = &a1[v140];
  v143 = &a2[v140];
  *(_DWORD *)v142 = *(_DWORD *)v143;
  v142[4] = v143[4];
  v144 = &a1[v141];
  v145 = &a2[v141];
  *(_DWORD *)v144 = *(_DWORD *)v145;
  v144[4] = v145[4];
  v146 = a3[29];
  v147 = a3[30];
  v148 = &a1[v146];
  v149 = &a2[v146];
  *(_DWORD *)v148 = *(_DWORD *)v149;
  v148[4] = v149[4];
  v150 = &a1[v147];
  v151 = &a2[v147];
  *(_DWORD *)v150 = *(_DWORD *)v151;
  v150[4] = v151[4];
  v152 = a3[31];
  v153 = a3[32];
  v154 = &a1[v152];
  v155 = &a2[v152];
  *(_DWORD *)v154 = *(_DWORD *)v155;
  v154[4] = v155[4];
  v156 = &a1[v153];
  v157 = &a2[v153];
  *(_DWORD *)v156 = *(_DWORD *)v157;
  v156[4] = v157[4];
  v158 = a3[33];
  v159 = &a1[v158];
  v160 = &a2[v158];
  v162 = *(_QWORD *)v160;
  v161 = *((_QWORD *)v160 + 1);
  *(_QWORD *)v159 = v162;
  *((_QWORD *)v159 + 1) = v161;
  swift_bridgeObjectRelease();
  v163 = a3[34];
  v164 = a3[35];
  v165 = &a1[v163];
  v166 = &a2[v163];
  *(_DWORD *)v165 = *(_DWORD *)v166;
  v165[4] = v166[4];
  *(_QWORD *)&a1[v164] = *(_QWORD *)&a2[v164];
  swift_bridgeObjectRelease();
  a1[a3[36]] = a2[a3[36]];
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceUsageMetrics()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2419A9810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceUsageMetrics()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2419A98DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257163E60);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257162D48);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for DeviceUsageMetrics(uint64_t a1)
{
  return sub_241941450(a1, qword_257166F80);
}

void sub_2419A99A0()
{
  unint64_t v0;
  unint64_t v1;

  sub_24197BF98(319, qword_257164358, (void (*)(uint64_t))type metadata accessor for EventMetadata);
  if (v0 <= 0x3F)
  {
    sub_24197BF98(319, (unint64_t *)&qword_257163520, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2419A9AA8()
{
  return type metadata accessor for DeviceUsageMetricsBuilderImpl(0);
}

uint64_t type metadata accessor for DeviceUsageMetricsBuilderImpl(uint64_t a1)
{
  return sub_241941450(a1, qword_257167110);
}

void sub_2419A9AC4()
{
  unint64_t v0;
  unint64_t v1;

  sub_24197BF98(319, qword_257164358, (void (*)(uint64_t))type metadata accessor for EventMetadata);
  if (v0 <= 0x3F)
  {
    sub_24197BF98(319, (unint64_t *)&qword_257163520, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DeviceUsageMetricsBuilderImpl()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2419A9BD8()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_2419A9BE4()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_2419A9BF0()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_2419A9BFC()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2419A9C08()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2419A9C14()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2419A9C20()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_2419A9C2C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2419A9C38()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2419A9C44()
{
  return MEMORY[0x24BDCDE78]();
}

uint64_t sub_2419A9C50()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_2419A9C5C()
{
  return MEMORY[0x24BE2B638]();
}

uint64_t sub_2419A9C68()
{
  return MEMORY[0x24BE2B640]();
}

uint64_t sub_2419A9C74()
{
  return MEMORY[0x24BE2B648]();
}

uint64_t sub_2419A9C80()
{
  return MEMORY[0x24BE2B658]();
}

uint64_t sub_2419A9C8C()
{
  return MEMORY[0x24BDCE320]();
}

uint64_t sub_2419A9C98()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_2419A9CA4()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_2419A9CB0()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_2419A9CBC()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_2419A9CC8()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_2419A9CD4()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_2419A9CE0()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_2419A9CEC()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_2419A9CF8()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_2419A9D04()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_2419A9D10()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_2419A9D1C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_2419A9D28()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_2419A9D34()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_2419A9D40()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_2419A9D4C()
{
  return MEMORY[0x24BDCEFC8]();
}

uint64_t sub_2419A9D58()
{
  return MEMORY[0x24BE2B668]();
}

uint64_t sub_2419A9D64()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_2419A9D70()
{
  return MEMORY[0x24BDCF4B0]();
}

uint64_t sub_2419A9D7C()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_2419A9D88()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_2419A9D94()
{
  return MEMORY[0x24BE2B690]();
}

uint64_t sub_2419A9DA0()
{
  return MEMORY[0x24BE2B6C8]();
}

uint64_t sub_2419A9DAC()
{
  return MEMORY[0x24BE2B6D8]();
}

uint64_t sub_2419A9DB8()
{
  return MEMORY[0x24BE2B6E8]();
}

uint64_t sub_2419A9DC4()
{
  return MEMORY[0x24BE2B710]();
}

uint64_t sub_2419A9DD0()
{
  return MEMORY[0x24BE2B720]();
}

uint64_t sub_2419A9DDC()
{
  return MEMORY[0x24BE2B768]();
}

uint64_t sub_2419A9DE8()
{
  return MEMORY[0x24BE2B7E8]();
}

uint64_t sub_2419A9DF4()
{
  return MEMORY[0x24BE2B800]();
}

uint64_t sub_2419A9E00()
{
  return MEMORY[0x24BE2B820]();
}

uint64_t sub_2419A9E0C()
{
  return MEMORY[0x24BE2B828]();
}

uint64_t sub_2419A9E18()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_2419A9E24()
{
  return MEMORY[0x24BEE7448]();
}

uint64_t sub_2419A9E30()
{
  return MEMORY[0x24BECE088]();
}

uint64_t sub_2419A9E3C()
{
  return MEMORY[0x24BECE0A0]();
}

uint64_t sub_2419A9E48()
{
  return MEMORY[0x24BECE0B8]();
}

uint64_t sub_2419A9E54()
{
  return MEMORY[0x24BECE0D0]();
}

uint64_t sub_2419A9E60()
{
  return MEMORY[0x24BECE0D8]();
}

uint64_t sub_2419A9E6C()
{
  return MEMORY[0x24BECE0E8]();
}

uint64_t sub_2419A9E78()
{
  return MEMORY[0x24BECE118]();
}

uint64_t sub_2419A9E84()
{
  return MEMORY[0x24BECE128]();
}

uint64_t sub_2419A9E90()
{
  return MEMORY[0x24BE5F6D0]();
}

uint64_t sub_2419A9E9C()
{
  return MEMORY[0x24BE5F6D8]();
}

uint64_t sub_2419A9EA8()
{
  return MEMORY[0x24BE5F6E0]();
}

uint64_t sub_2419A9EB4()
{
  return MEMORY[0x24BE5F6E8]();
}

uint64_t sub_2419A9EC0()
{
  return MEMORY[0x24BE2B8B8]();
}

uint64_t sub_2419A9ECC()
{
  return MEMORY[0x24BE2B8C0]();
}

uint64_t sub_2419A9ED8()
{
  return MEMORY[0x24BE2B8C8]();
}

uint64_t sub_2419A9EE4()
{
  return MEMORY[0x24BE2B8D0]();
}

uint64_t sub_2419A9EF0()
{
  return MEMORY[0x24BE2B918]();
}

uint64_t sub_2419A9EFC()
{
  return MEMORY[0x24BE2B920]();
}

uint64_t sub_2419A9F08()
{
  return MEMORY[0x24BE2B928]();
}

uint64_t sub_2419A9F14()
{
  return MEMORY[0x24BE2B930]();
}

uint64_t sub_2419A9F20()
{
  return MEMORY[0x24BE2BA70]();
}

uint64_t sub_2419A9F2C()
{
  return MEMORY[0x24BE2BA80]();
}

uint64_t sub_2419A9F38()
{
  return MEMORY[0x24BE2BAA8]();
}

uint64_t sub_2419A9F44()
{
  return MEMORY[0x24BE2BAB8]();
}

uint64_t sub_2419A9F50()
{
  return MEMORY[0x24BE2BAE0]();
}

uint64_t sub_2419A9F5C()
{
  return MEMORY[0x24BE2BAE8]();
}

uint64_t sub_2419A9F68()
{
  return MEMORY[0x24BE2BB40]();
}

uint64_t sub_2419A9F74()
{
  return MEMORY[0x24BE2BB80]();
}

uint64_t sub_2419A9F80()
{
  return MEMORY[0x24BE2BB90]();
}

uint64_t sub_2419A9F8C()
{
  return MEMORY[0x24BE2BBB0]();
}

uint64_t sub_2419A9F98()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_2419A9FA4()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_2419A9FB0()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_2419A9FBC()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_2419A9FC8()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_2419A9FD4()
{
  return MEMORY[0x24BEE77E0]();
}

uint64_t sub_2419A9FE0()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_2419A9FEC()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_2419A9FF8()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_2419AA004()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_2419AA010()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_2419AA01C()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_2419AA028()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2419AA034()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2419AA040()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2419AA04C()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_2419AA058()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2419AA064()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2419AA070()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_2419AA07C()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2419AA088()
{
  return MEMORY[0x24BEE75F0]();
}

uint64_t sub_2419AA094()
{
  return MEMORY[0x24BEE7600]();
}

uint64_t sub_2419AA0A0()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2419AA0AC()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_2419AA0B8()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2419AA0C4()
{
  return MEMORY[0x24BDCF870]();
}

uint64_t sub_2419AA0D0()
{
  return MEMORY[0x24BDCF878]();
}

uint64_t sub_2419AA0DC()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2419AA0E8()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2419AA0F4()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_2419AA100()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_2419AA10C()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_2419AA118()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_2419AA124()
{
  return MEMORY[0x24BEE0A20]();
}

uint64_t sub_2419AA130()
{
  return MEMORY[0x24BEE0A58]();
}

uint64_t sub_2419AA13C()
{
  return MEMORY[0x24BEE0A70]();
}

uint64_t sub_2419AA148()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2419AA154()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_2419AA160()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_2419AA16C()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_2419AA178()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2419AA184()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2419AA190()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_2419AA19C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2419AA1A8()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2419AA1B4()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_2419AA1C0()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2419AA1CC()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2419AA1D8()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_2419AA1E4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2419AA1F0()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_2419AA1FC()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_2419AA208()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_2419AA214()
{
  return MEMORY[0x24BDCFC80]();
}

uint64_t sub_2419AA220()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_2419AA22C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_2419AA238()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_2419AA244()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2419AA250()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2419AA25C()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_2419AA268()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_2419AA274()
{
  return MEMORY[0x24BE94920]();
}

uint64_t sub_2419AA280()
{
  return MEMORY[0x24BE94930]();
}

uint64_t sub_2419AA28C()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_2419AA298()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_2419AA2A4()
{
  return MEMORY[0x24BDD0248]();
}

uint64_t sub_2419AA2B0()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_2419AA2BC()
{
  return MEMORY[0x24BEE7978]();
}

uint64_t sub_2419AA2C8()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2419AA2D4()
{
  return MEMORY[0x24BEE1DF0]();
}

uint64_t sub_2419AA2E0()
{
  return MEMORY[0x24BDD0498]();
}

uint64_t sub_2419AA2EC()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2419AA2F8()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2419AA304()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_2419AA310()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_2419AA31C()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_2419AA328()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_2419AA334()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t sub_2419AA340()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2419AA34C()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2419AA358()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_2419AA364()
{
  return MEMORY[0x24BEE2398]();
}

uint64_t sub_2419AA370()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_2419AA37C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_2419AA388()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_2419AA394()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2419AA3A0()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2419AA3AC()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_2419AA3B8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2419AA3C4()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_2419AA3D0()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_2419AA3DC()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_2419AA3E8()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_2419AA3F4()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_2419AA400()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2419AA40C()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2419AA418()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2419AA424()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2419AA430()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2419AA43C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2419AA448()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2419AA454()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2419AA460()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2419AA46C()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2419AA478()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_2419AA484()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_2419AA490()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2419AA49C()
{
  return MEMORY[0x24BEE3340]();
}

uint64_t sub_2419AA4A8()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_2419AA4B4()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_2419AA4C0()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_2419AA4CC()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2419AA4D8()
{
  return MEMORY[0x24BEE33B8]();
}

uint64_t sub_2419AA4E4()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_2419AA4F0()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2419AA4FC()
{
  return MEMORY[0x24BEE3438]();
}

uint64_t sub_2419AA508()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2419AA514()
{
  return MEMORY[0x24BEE3488]();
}

uint64_t sub_2419AA520()
{
  return MEMORY[0x24BEE3490]();
}

uint64_t sub_2419AA52C()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2419AA538()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2419AA544()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2419AA550()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_2419AA55C()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_2419AA568()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2419AA574()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2419AA580()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_2419AA58C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2419AA598()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_2419AA5A4()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2419AA5B0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2419AA5BC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2419AA5C8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2419AA5D4()
{
  return MEMORY[0x24BDD0730]();
}

uint64_t sub_2419AA5E0()
{
  return MEMORY[0x24BDD0758]();
}

uint64_t sub_2419AA5EC()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2419AA5F8()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2419AA604()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2419AA610()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2419AA61C()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2419AA628()
{
  return MEMORY[0x24BDD07D0]();
}

uint64_t sub_2419AA634()
{
  return MEMORY[0x24BDD0810]();
}

uint64_t sub_2419AA640()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2419AA64C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2419AA658()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2419AA664()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x24BDBC188](key, applicationID, keyExistsAndHasValidFormat);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

