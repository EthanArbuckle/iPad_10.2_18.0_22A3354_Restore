uint64_t sub_1BDADA850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char v61;
  _QWORD *v62;

  sub_1BDAD4010((uint64_t)&v60);
  v0 = *(_QWORD *)(v60 + 16);
  if (v0 == 2)
  {
    v2 = v62[2];
    if (v61)
    {
      if (v2)
      {
LABEL_16:
        v17 = v62[4];
        v16 = v62[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
        *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(inited + 64) = sub_1BD942A90();
        *(_QWORD *)(inited + 32) = v17;
        *(_QWORD *)(inited + 40) = v16;
        v19 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v20 = (void *)sub_1BDBFD6C8();
        v21 = objc_msgSend(v19, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v20, 0, 0, 1);

        v22 = sub_1BDBFD6F8();
        v24 = v23;

        swift_bridgeObjectRetain();
        v0 = (uint64_t)sub_1BDB09360(inited, v22, v24);
        swift_bridgeObjectRelease_n();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
LABEL_26:
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v0;
      }
    }
    else if (v2)
    {
      if (v2 != 1)
      {
        v47 = v62[4];
        v46 = v62[5];
        v49 = v62[6];
        v48 = v62[7];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v50 = swift_initStackObject();
        *(_OWORD *)(v50 + 16) = xmmword_1BDC17EC0;
        v51 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v50 + 56) = MEMORY[0x1E0DEA968];
        v52 = sub_1BD942A90();
        *(_QWORD *)(v50 + 32) = v47;
        *(_QWORD *)(v50 + 40) = v46;
        *(_QWORD *)(v50 + 96) = v51;
        *(_QWORD *)(v50 + 104) = v52;
        *(_QWORD *)(v50 + 64) = v52;
        *(_QWORD *)(v50 + 72) = v49;
        *(_QWORD *)(v50 + 80) = v48;
        v53 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54 = (void *)sub_1BDBFD6C8();
        v55 = objc_msgSend(v53, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v54, 0, 0, 1);

        v56 = sub_1BDBFD6F8();
        v58 = v57;

        swift_bridgeObjectRetain();
        v34 = sub_1BDB09360(v50, v56, v58);
        goto LABEL_25;
      }
      v9 = v62[4];
      v8 = v62[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_1BDC17EC0;
      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      v11 = sub_1BD942A90();
      *(_QWORD *)(v10 + 32) = v9;
      *(_QWORD *)(v10 + 40) = v8;
      v12 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v10 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v10 + 104) = v12;
      *(_QWORD *)(v10 + 64) = v11;
      *(_QWORD *)(v10 + 72) = 1;
      v13 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v14 = (void *)sub_1BDBFD6C8();
      v15 = objc_msgSend(v13, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v14, 0, 0, 0);
LABEL_19:
      v30 = v15;

      v31 = sub_1BDBFD6F8();
      v33 = v32;

      swift_bridgeObjectRetain();
      v34 = sub_1BDB8F750(v10, v31, v33);
LABEL_25:
      v0 = (uint64_t)v34;
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
      goto LABEL_26;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
    v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BDC16BA0;
    v35 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v3 + 64) = v35;
    *(_QWORD *)(v3 + 32) = 2;
    v36 = (void *)objc_opt_self();
    v6 = (void *)sub_1BDBFD6C8();
    v7 = objc_msgSend(v36, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v6, 0, 0, 0);
    goto LABEL_23;
  }
  v1 = v0 - 1;
  if (v0 == 1)
  {
    if (v61 || !v62[2])
    {
      v37 = (void *)objc_opt_self();
      v38 = (void *)sub_1BDBFD6C8();
      v39 = objc_msgSend(v37, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v38, 0, 0, 1);

      v0 = sub_1BDBFD6F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v0;
    }
    goto LABEL_16;
  }
  if (v0)
  {
    if (v61)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v3 = swift_initStackObject();
      *(_OWORD *)(v3 + 16) = xmmword_1BDC16BA0;
      v4 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v3 + 64) = v4;
      *(_QWORD *)(v3 + 32) = v1;
      v5 = (void *)objc_opt_self();
      v6 = (void *)sub_1BDBFD6C8();
      v7 = objc_msgSend(v5, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v6, 0, 0, 0);
LABEL_23:
      v42 = v7;

      v43 = sub_1BDBFD6F8();
      v45 = v44;

      swift_bridgeObjectRetain();
      v0 = (uint64_t)sub_1BDB8F750(v3, v43, v45);
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
      goto LABEL_26;
    }
    if (!v62[2])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v3 = swift_initStackObject();
      *(_OWORD *)(v3 + 16) = xmmword_1BDC16BA0;
      v40 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v3 + 64) = v40;
      *(_QWORD *)(v3 + 32) = v0;
      v41 = (void *)objc_opt_self();
      v6 = (void *)sub_1BDBFD6C8();
      v7 = objc_msgSend(v41, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v6, 0, 0, 0);
      goto LABEL_23;
    }
    v26 = v62[4];
    v25 = v62[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v27 = sub_1BD942A90();
    *(_QWORD *)(v10 + 32) = v26;
    *(_QWORD *)(v10 + 40) = v25;
    v28 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v10 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v10 + 104) = v28;
    *(_QWORD *)(v10 + 64) = v27;
    *(_QWORD *)(v10 + 72) = v1;
    v29 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v14 = (void *)sub_1BDBFD6C8();
    v15 = objc_msgSend(v29, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v14, 0, 0, 0);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BDADB0CC()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  char v6;

  sub_1BDAD4010((uint64_t)&v5);
  if (*(_QWORD *)(v5 + 16) == 1 && v6)
  {
    v0 = (void *)objc_opt_self();
    v1 = (void *)sub_1BDBFD6C8();
    v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

    v3 = sub_1BDBFD6F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

_QWORD *sub_1BDADB1C8(uint64_t a1)
{
  uint64_t v1;
  unint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = *v2;
    if (*v2 >= 3)
    {
      v6 = *(v2 - 1);
      sub_1BDAE1530(v6, *v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BDBCBCC4(0, v3[2] + 1, 1, v3);
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
        v3 = sub_1BDBCBCC4((_QWORD *)(v7 > 1), v8 + 1, 1, v3);
      v3[2] = v8 + 1;
      v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BDADB2D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B868);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  if (swift_dynamicCast())
    return v9[0];
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B870);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADB4C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEA968];
  if (swift_dynamicCast())
    return v9[0];
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B908);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADB6B8(uint64_t a1)
{
  return sub_1BDADD014(a1, &qword_1EF50B920, &qword_1EF50B928);
}

uint64_t sub_1BDADB6CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEAFA0];
  if (swift_dynamicCast())
    return v9[0] & 1;
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B910);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADB8C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEB070];
  result = swift_dynamicCast();
  if (!(_DWORD)result)
  {
    sub_1BDAE0BA0(a1, (uint64_t)v11);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "Cannot cast ");
    HIBYTE(v10[6]) = 0;
    v10[7] = -5120;
    sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
    sub_1BDBFEA3C();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v8 = *(void (**)(char *, uint64_t))(v3 + 8);
    v8(v5, v2);
    sub_1BDBFD7DC();
    v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B900);
    v9[0] = v6;
    sub_1BDBFEA3C();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v8(v5, v2);
    result = sub_1BDBFE52C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDADBAB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEB188];
  result = swift_dynamicCast();
  if (!(_DWORD)result)
  {
    sub_1BDAE0BA0(a1, (uint64_t)v11);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "Cannot cast ");
    HIBYTE(v10[6]) = 0;
    v10[7] = -5120;
    sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
    sub_1BDBFEA3C();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v8 = *(void (**)(char *, uint64_t))(v3 + 8);
    v8(v5, v2);
    sub_1BDBFD7DC();
    v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8F8);
    v9[0] = v6;
    sub_1BDBFEA3C();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v8(v5, v2);
    result = sub_1BDBFE52C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDADBCA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEB418];
  if (swift_dynamicCast())
    return v9[0];
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8F0);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADBE90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEDA70];
  if (swift_dynamicCast())
    return LOBYTE(v9[0]);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8E8);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADC080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEDB58];
  if (swift_dynamicCast())
    return LOWORD(v9[0]);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8E0);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADC270(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEDBC8];
  if (swift_dynamicCast())
    return LODWORD(v9[0]);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8D8);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADC460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEDC60];
  if (swift_dynamicCast())
    return v9[0];
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8D0);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADC650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEBB98];
  if (swift_dynamicCast())
    return v9[0];
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8C8);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADC840(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEDE70];
  if (swift_dynamicCast())
    return LOBYTE(v9[0]);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8C0);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADCA30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEE068];
  if (swift_dynamicCast())
    return LOWORD(v9[0]);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8B8);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADCC20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEE0F8];
  if (swift_dynamicCast())
    return LODWORD(v9[0]);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8B0);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADCE10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v6 = MEMORY[0x1E0DEE190];
  if (swift_dynamicCast())
    return v9[0];
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B8A8);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADD000(uint64_t a1)
{
  return sub_1BDADD014(a1, (uint64_t *)&unk_1EF50BBC0, &qword_1EF50B940);
}

uint64_t sub_1BDADD014(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(char *, uint64_t);
  _QWORD v13[4];
  _WORD v14[8];
  _BYTE v15[32];

  v6 = sub_1BDBFEA78();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1BDAE0BA0(a1, (uint64_t)v15);
  if (swift_dynamicCast())
    return v13[0];
  sub_1BDAE0BA0(a1, (uint64_t)v15);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v14, "Cannot cast ");
  HIBYTE(v14[6]) = 0;
  v14[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v15, (uint64_t)v13);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v12 = *(void (**)(char *, uint64_t))(v7 + 8);
  v12(v9, v6);
  sub_1BDBFD7DC();
  v13[3] = __swift_instantiateConcreteTypeFromMangledName(a3);
  v13[0] = v10;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v12(v9, v6);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDADD20C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(char *, uint64_t);
  _QWORD v9[4];
  _WORD v10[8];
  _BYTE v11[32];

  v2 = sub_1BDBFEA78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BD942914(0, &qword_1EF50B930);
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  if (swift_dynamicCast())
    return v9[0];
  sub_1BDAE0BA0(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v11, (uint64_t)v9);
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1BDBFD7DC();
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B938);
  v9[0] = v6;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

char *sub_1BDADD410(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1BDBCBCC4(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDADD590(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BDAE14D4(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1BDADD608(uint64_t a1, char *a2, char *a3, char *a4, uint64_t (*a5)(uint64_t, char *), uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  void (*v32)(char *, uint64_t);
  _OWORD *v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char v47;
  char v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  __int128 v52;
  __int128 v53;
  unint64_t v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t result;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, char *);
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[40];
  _BYTE v77[40];
  unint64_t v78;
  char *v79;
  char *v80;

  v8 = v7;
  v74 = a6;
  v75 = a7;
  v73 = a5;
  v12 = sub_1BDBFCAC8();
  v71 = *(_QWORD *)(v12 - 8);
  v72 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v65 - v18;
  MEMORY[0x1E0C80A78](v17);
  v23 = (char *)&v65 - v22;
  v24 = a2 - v20;
  v25 = (a2 - v20) / 40;
  v70 = a3;
  v26 = a3 - a2;
  v27 = (a3 - a2) / 40;
  v80 = v20;
  v79 = a4;
  if (v25 >= v27)
  {
    if (v26 < -39)
      goto LABEL_50;
    v68 = v21;
    if (a4 != a2 || &a2[40 * v27] <= a4)
    {
      v40 = v20;
      v41 = v26;
      memmove(a4, a2, 40 * v27);
      v26 = v41;
      v20 = v40;
    }
    v42 = &a4[40 * v27];
    v78 = (unint64_t)v42;
    v80 = a2;
    if (v26 < 40 || v20 >= a2)
    {
LABEL_49:
      sub_1BDBBCC98((void **)&v80, (const void **)&v79, &v78);
      return 1;
    }
    v43 = v70 - 40;
    v67 = a4;
    v66 = v20;
    while (1)
    {
      v44 = v15;
      sub_1BDADED64((uint64_t)(v42 - 40), (uint64_t)v77);
      v70 = a2;
      v45 = a2 - 40;
      sub_1BDADED64((uint64_t)(a2 - 40), (uint64_t)v76);
      v46 = v68;
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      v47 = v73((uint64_t)v46, v15);
      if (v8)
      {
        v62 = v72;
        v63 = *(void (**)(char *, uint64_t))(v71 + 8);
        v63(v15, v72);
        v63(v46, v62);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v76);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v77);
        goto LABEL_49;
      }
      v48 = v47;
      v69 = 0;
      v49 = v43 + 40;
      v50 = v72;
      v51 = *(void (**)(char *, uint64_t))(v71 + 8);
      v51(v44, v72);
      v51(v46, v50);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v76);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v77);
      if ((v48 & 1) != 0)
      {
        if (v49 != v70 || v43 >= v70)
        {
          v52 = *(_OWORD *)v45;
          v53 = *((_OWORD *)v45 + 1);
          *((_QWORD *)v43 + 4) = *((_QWORD *)v45 + 4);
          *(_OWORD *)v43 = v52;
          *((_OWORD *)v43 + 1) = v53;
        }
        v80 -= 40;
        v42 = (char *)v78;
      }
      else
      {
        v54 = v78;
        v42 = (char *)(v78 - 40);
        v78 -= 40;
        v45 = v70;
        if ((unint64_t)v49 >= v54 && (unint64_t)v43 < v54)
        {
          v55 = v66;
          v15 = v44;
          if (v49 != (char *)v54)
          {
            v56 = *(_OWORD *)v42;
            v57 = *((_OWORD *)v42 + 1);
            *((_QWORD *)v43 + 4) = *((_QWORD *)v42 + 4);
            *(_OWORD *)v43 = v56;
            *((_OWORD *)v43 + 1) = v57;
          }
          v8 = v69;
          goto LABEL_43;
        }
        v58 = *(_OWORD *)v42;
        v59 = *(_OWORD *)(v54 - 24);
        *((_QWORD *)v43 + 4) = *(_QWORD *)(v54 - 8);
        *(_OWORD *)v43 = v58;
        *((_OWORD *)v43 + 1) = v59;
      }
      v55 = v66;
      v8 = v69;
      v15 = v44;
LABEL_43:
      if (v42 > v67)
      {
        v43 -= 40;
        a2 = v45;
        if (v45 > v55)
          continue;
      }
      goto LABEL_49;
    }
  }
  if (v24 >= -39)
  {
    if (a4 != v20 || &v20[40 * v25] <= a4)
      memmove(a4, v20, 40 * v25);
    v28 = (unint64_t)&a4[40 * v25];
    v78 = v28;
    if (v24 >= 40 && a2 < v70)
    {
      v29 = v72;
      while (1)
      {
        sub_1BDADED64((uint64_t)a2, (uint64_t)v77);
        sub_1BDADED64((uint64_t)a4, (uint64_t)v76);
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        v30 = v73((uint64_t)v23, v19);
        if (v7)
          break;
        v31 = v30;
        v32 = *(void (**)(char *, uint64_t))(v71 + 8);
        v32(v19, v29);
        v32(v23, v29);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v76);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v77);
        v33 = v80;
        if ((v31 & 1) != 0)
        {
          v34 = (unint64_t)(a2 + 40);
          if (v80 >= a2 && (unint64_t)v80 < v34 && v80 == a2)
          {
            v33 = a2;
          }
          else
          {
            v35 = *(_OWORD *)a2;
            v36 = *((_OWORD *)a2 + 1);
            *((_QWORD *)v80 + 4) = *((_QWORD *)a2 + 4);
            *v33 = v35;
            v33[1] = v36;
          }
        }
        else
        {
          v37 = v79 + 40;
          if (v80 != v79 || v80 >= v37)
          {
            v38 = *(_OWORD *)v79;
            v39 = *((_OWORD *)v79 + 1);
            *((_QWORD *)v80 + 4) = *((_QWORD *)v79 + 4);
            *v33 = v38;
            v33[1] = v39;
          }
          v79 = v37;
          v34 = (unint64_t)a2;
        }
        v80 = (char *)v33 + 40;
        a4 = v79;
        if ((unint64_t)v79 < v28)
        {
          a2 = (char *)v34;
          if (v34 < (unint64_t)v70)
            continue;
        }
        goto LABEL_49;
      }
      v60 = v72;
      v61 = *(void (**)(char *, uint64_t))(v71 + 8);
      v61(v19, v72);
      v61(v23, v60);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v76);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v77);
    }
    goto LABEL_49;
  }
LABEL_50:
  swift_release();
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDADDB74(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  BOOL v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, char *);
  uint64_t v44;
  _BYTE v45[40];
  __int128 v46[2];
  char *v47;

  v8 = v7;
  v43 = a5;
  v44 = a7;
  v42 = a6;
  v13 = sub_1BDBFCAC8();
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v35 - v18;
  v37 = a2;
  if (a3 != a2)
  {
    v19 = 40 * a3 - 40;
    v20 = v47;
    v36 = a1;
    v39 = a4;
    while (2)
    {
      v38 = v19;
      while (1)
      {
        v21 = *a4 + v19;
        sub_1BDADED64(v21 + 40, (uint64_t)v46);
        sub_1BDADED64(v21, (uint64_t)v45);
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        v22 = v43(v20, v16);
        if (v8)
        {
          v33 = v41;
          v34 = *(void (**)(char *, uint64_t))(v40 + 8);
          v34(v16, v41);
          v34(v20, v33);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
        }
        v23 = v22;
        v24 = v16;
        v25 = a3;
        v26 = v41;
        v27 = *(void (**)(void))(v40 + 8);
        v28 = v24;
        v27();
        ((void (*)(char *, uint64_t))v27)(v20, v26);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
        result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
        if ((v23 & 1) == 0)
          break;
        a4 = v39;
        v29 = *v39;
        if (!*v39)
        {
          __break(1u);
          return result;
        }
        a3 = v25;
        v30 = v29 + v19;
        sub_1BDAE14D4((__int128 *)(v29 + v19 + 40), (uint64_t)v46);
        v31 = *(_OWORD *)(v30 + 16);
        *(_OWORD *)(v30 + 40) = *(_OWORD *)v30;
        *(_OWORD *)(v30 + 56) = v31;
        *(_QWORD *)(v30 + 72) = *(_QWORD *)(v30 + 32);
        result = sub_1BDAE14D4(v46, v30);
        v19 -= 40;
        v32 = v25 == ++a1;
        v16 = v28;
        v8 = 0;
        v20 = v47;
        if (v32)
          goto LABEL_11;
      }
      a4 = v39;
      a3 = v25;
      v16 = v28;
      v8 = 0;
      v20 = v47;
LABEL_11:
      ++a3;
      v19 = v38 + 40;
      a1 = v36;
      if (a3 != v37)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1BDADDDBC(_QWORD *a1, uint64_t (*a2)(uint64_t, char *), uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  size_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char v125;
  void (*v126)(char *, uint64_t);
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  _QWORD *v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  unint64_t v143;
  uint64_t result;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t (*v165)(char *, char *);
  _BYTE v166[40];
  __int128 v167[3];
  uint64_t v168;

  v5 = v4;
  v168 = a3;
  v165 = (uint64_t (*)(char *, char *))a2;
  v8 = sub_1BDBFCAC8();
  v157 = *(_QWORD *)(v8 - 8);
  v158 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v147 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v147 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v147 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v147 - v22;
  MEMORY[0x1E0C80A78](v21);
  v150 = (char *)&v147 - v24;
  v164 = a1;
  v25 = a1[1];
  swift_retain_n();
  v151 = sub_1BDBFE748();
  if (v151 >= v25)
  {
    if (v25 < 0)
      goto LABEL_143;
    if (v25)
    {
      swift_retain();
      sub_1BDADDB74(0, v25, 1, v164, v165, v168, a4);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    return swift_release_n();
  }
  if (v25 >= 0)
    v26 = v25;
  else
    v26 = v25 + 1;
  if (v25 < -1)
    goto LABEL_152;
  v163 = a4;
  v148 = v23;
  if (v25 < 2)
  {
    v159 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v149 = MEMORY[0x1E0DEE9D8];
    if (v25 != 1)
    {
      v60 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v30 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_107:
      v162 = v5;
      if (v60 >= 2)
      {
        v132 = (_QWORD *)*v164;
        v164 = (_QWORD *)*v164;
        do
        {
          v133 = v60 - 2;
          if (v60 < 2)
            goto LABEL_138;
          if (!v132)
            goto LABEL_151;
          v134 = v30;
          v135 = *(_QWORD *)&v30[16 * v133 + 32];
          v136 = *(_QWORD *)&v30[16 * v60 + 24];
          v137 = &v132[5 * v135];
          v138 = (char *)&v132[5 * *(_QWORD *)&v30[16 * v60 + 16]];
          v139 = (char *)&v132[5 * v136];
          swift_retain();
          v140 = (uint64_t)v137;
          v141 = v162;
          sub_1BDADD608(v140, v138, v139, v159, (uint64_t (*)(uint64_t, char *))v165, v168, a4);
          v162 = v141;
          if (v141)
            goto LABEL_105;
          swift_release();
          if (v136 < v135)
            goto LABEL_139;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v134 = sub_1BDBBCF04((uint64_t)v134);
          if (v133 >= *((_QWORD *)v134 + 2))
            goto LABEL_140;
          v142 = &v134[16 * v133 + 32];
          *(_QWORD *)v142 = v135;
          *((_QWORD *)v142 + 1) = v136;
          v143 = *((_QWORD *)v134 + 2);
          if (v60 > v143)
            goto LABEL_141;
          memmove(&v134[16 * v60 + 16], &v134[16 * v60 + 32], 16 * (v143 - v60));
          v30 = v134;
          *((_QWORD *)v134 + 2) = v143 - 1;
          v60 = v143 - 1;
          a4 = v163;
          v132 = v164;
        }
        while (v143 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v149 + 16) = 0;
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    v153 = v20;
    v154 = v17;
    v155 = v14;
    v156 = v11;
  }
  else
  {
    v153 = v20;
    v154 = v17;
    v155 = v14;
    v156 = v11;
    v27 = v26 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
    v28 = sub_1BDBFDA4C();
    *(_QWORD *)(v28 + 16) = v27;
    v149 = v28;
    v159 = (char *)(v28 + 32);
  }
  v29 = 0;
  v30 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v31 = v29 + 1;
    v160 = v30;
    if (v29 + 1 >= v25)
    {
LABEL_44:
      if (v31 < v29)
        goto LABEL_142;
      goto LABEL_45;
    }
    v32 = v30;
    v33 = *v164;
    sub_1BDADED64(*v164 + 40 * v31, (uint64_t)v167);
    v161 = v33;
    sub_1BDADED64(v33 + 40 * v29, (uint64_t)v166);
    v34 = v29;
    v35 = (uint64_t)v150;
    swift_getAtKeyPath();
    v36 = v148;
    swift_getAtKeyPath();
    LODWORD(v152) = v165((char *)v35, v36);
    if (v5)
    {
      v145 = v158;
      v146 = *(void (**)(char *, uint64_t))(v157 + 8);
      v146(v36, v158);
      v146((char *)v35, v145);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v166);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
      swift_bridgeObjectRelease();
LABEL_119:
      *(_QWORD *)(v149 + 16) = 0;
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    v37 = v158;
    v38 = *(void (**)(char *, uint64_t))(v157 + 8);
    v38(v36, v158);
    v38((char *)v35, v37);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v166);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
    v39 = v25;
    v40 = v34 + 2;
    v162 = (char *)v39;
    v29 = v34;
    if (v34 + 2 >= v39)
    {
      v30 = v32;
      if ((v152 & 1) == 0)
        goto LABEL_22;
    }
    else
    {
      v147 = v34;
      v41 = v161 + 40 * v34 + 40;
      v42 = v152;
      while (1)
      {
        sub_1BDADED64(v41 + 40, (uint64_t)v167);
        sub_1BDADED64(v41, (uint64_t)v166);
        v43 = (uint64_t)v153;
        swift_getAtKeyPath();
        v44 = v154;
        swift_getAtKeyPath();
        v45 = v165((char *)v43, v44);
        v46 = v44;
        v47 = v158;
        v38(v46, v158);
        v38((char *)v43, v47);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v166);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
        if (((v42 ^ v45) & 1) != 0)
          break;
        v41 += 40;
        if (v162 == (char *)++v40)
        {
          v40 = (uint64_t)v162;
          break;
        }
      }
      v30 = v160;
      v29 = v147;
      if ((v42 & 1) == 0)
      {
LABEL_22:
        v48 = v151;
        v31 = v40;
        goto LABEL_35;
      }
    }
    if (v40 < v29)
      goto LABEL_147;
    v31 = v40;
    if (v29 >= v40)
    {
      v48 = v151;
    }
    else
    {
      v49 = 40 * v40 - 40;
      v50 = 40 * v29;
      v147 = v29;
      do
      {
        if (v29 != --v31)
        {
          if (!v161)
            goto LABEL_150;
          v51 = v161 + v50;
          v52 = v161 + v49;
          sub_1BDAE14D4((__int128 *)(v161 + v50), (uint64_t)v167);
          v53 = *(_QWORD *)(v52 + 32);
          v54 = *(_OWORD *)(v52 + 16);
          *(_OWORD *)v51 = *(_OWORD *)v52;
          *(_OWORD *)(v51 + 16) = v54;
          *(_QWORD *)(v51 + 32) = v53;
          sub_1BDAE14D4(v167, v52);
          v30 = v160;
        }
        ++v29;
        v49 -= 40;
        v50 += 40;
      }
      while (v29 < v31);
      v48 = v151;
      v31 = v40;
      v29 = v147;
    }
LABEL_35:
    if (v31 >= (uint64_t)v162)
      goto LABEL_44;
    if (__OFSUB__(v31, v29))
      goto LABEL_144;
    if (v31 - v29 >= v48)
      goto LABEL_44;
    if (__OFADD__(v29, v48))
      goto LABEL_145;
    v55 = v29 + v48 >= (uint64_t)v162 ? (uint64_t)v162 : v29 + v48;
    if (v55 < v29)
      break;
    if (v31 == v55)
      goto LABEL_44;
    v119 = 40 * v31 - 40;
    v147 = v29;
    v161 = v55;
    do
    {
      v120 = v31;
      v162 = (char *)v119;
      v121 = v119;
      do
      {
        v122 = *v164 + v121;
        sub_1BDADED64(v122 + 40, (uint64_t)v167);
        sub_1BDADED64(v122, (uint64_t)v166);
        v123 = (uint64_t)v155;
        swift_getAtKeyPath();
        v124 = v156;
        swift_getAtKeyPath();
        v125 = v165((char *)v123, v124);
        v126 = *(void (**)(char *, uint64_t))(v157 + 8);
        v127 = v124;
        v128 = v158;
        v126(v127, v158);
        v126((char *)v123, v128);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v166);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
        if ((v125 & 1) == 0)
          break;
        v129 = *v164;
        if (!*v164)
          goto LABEL_149;
        v130 = v129 + v121;
        sub_1BDAE14D4((__int128 *)(v129 + v121 + 40), (uint64_t)v167);
        v131 = *(_OWORD *)(v130 + 16);
        *(_OWORD *)(v130 + 40) = *(_OWORD *)v130;
        *(_OWORD *)(v130 + 56) = v131;
        *(_QWORD *)(v130 + 72) = *(_QWORD *)(v130 + 32);
        sub_1BDAE14D4(v167, v130);
        v121 -= 40;
        ++v29;
      }
      while (v120 != v29);
      v31 = v120 + 1;
      v119 = (uint64_t)(v162 + 40);
      v29 = v147;
    }
    while (v120 + 1 != v161);
    v31 = v161;
    v30 = v160;
    if (v161 < v147)
      goto LABEL_142;
LABEL_45:
    v56 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v152 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v30 = v56;
    else
      v30 = sub_1BDBBCAF8(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
    v59 = *((_QWORD *)v30 + 2);
    v58 = *((_QWORD *)v30 + 3);
    v60 = v59 + 1;
    if (v59 >= v58 >> 1)
      v30 = sub_1BDBBCAF8((char *)(v58 > 1), v59 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v60;
    v61 = v30 + 32;
    v62 = &v30[16 * v59 + 32];
    v63 = v152;
    *(_QWORD *)v62 = v29;
    *((_QWORD *)v62 + 1) = v63;
    if (v59)
    {
      v160 = v30;
      v162 = v30 + 32;
      while (1)
      {
        v64 = v60 - 1;
        if (v60 >= 4)
        {
          v69 = &v61[16 * v60];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_127;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_128;
          v76 = v60 - 2;
          v77 = &v61[16 * v60 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_130;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_133;
          if (v81 >= v72)
          {
            v99 = &v61[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_137;
            v92 = v67 < v102;
            goto LABEL_82;
          }
        }
        else
        {
          if (v60 != 3)
          {
            v93 = *((_QWORD *)v30 + 4);
            v94 = *((_QWORD *)v30 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_76;
          }
          v66 = *((_QWORD *)v30 + 4);
          v65 = *((_QWORD *)v30 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_129;
        v76 = v60 - 2;
        v82 = &v61[16 * v60 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_132;
        v88 = &v61[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_135;
        if (__OFADD__(v86, v91))
          goto LABEL_136;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_82:
          if (v92)
            v64 = v76;
          goto LABEL_84;
        }
LABEL_76:
        if ((v87 & 1) != 0)
          goto LABEL_131;
        v95 = &v61[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_134;
        if (v98 < v86)
          goto LABEL_93;
LABEL_84:
        v103 = v64 - 1;
        if (v64 - 1 >= v60)
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        v104 = *v164;
        if (!*v164)
          goto LABEL_148;
        v105 = v5;
        v106 = &v61[16 * v103];
        v107 = *(_QWORD *)v106;
        v108 = v64;
        v109 = &v61[16 * v64];
        v110 = *(_QWORD *)v109;
        v111 = *((_QWORD *)v109 + 1);
        v161 = v104 + 40 * *(_QWORD *)v106;
        v112 = (char *)(v104 + 40 * v110);
        v113 = (char *)(v104 + 40 * v111);
        v114 = v163;
        swift_retain();
        sub_1BDADD608(v161, v112, v113, v159, (uint64_t (*)(uint64_t, char *))v165, v168, v114);
        if (v105)
        {
LABEL_105:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_119;
        }
        swift_release();
        v115 = v160;
        if (v111 < v107)
          goto LABEL_124;
        if (v108 > *((_QWORD *)v160 + 2))
          goto LABEL_125;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v162[16 * v103 + 8] = v111;
        v116 = *((_QWORD *)v115 + 2);
        if (v108 >= v116)
          goto LABEL_126;
        v60 = v116 - 1;
        v117 = 16 * (v116 - 1 - v108);
        v118 = v115;
        memmove(v109, v109 + 16, v117);
        v30 = v118;
        v61 = v162;
        a4 = v163;
        *((_QWORD *)v118 + 2) = v116 - 1;
        v5 = 0;
        if (v116 <= 2)
          goto LABEL_93;
      }
    }
    v60 = 1;
LABEL_93:
    v25 = v164[1];
    v29 = v152;
    if (v152 >= v25)
      goto LABEL_107;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  swift_release_n();
  __break(1u);
LABEL_149:
  swift_release_n();
  __break(1u);
LABEL_150:
  swift_release_n();
  __break(1u);
LABEL_151:
  swift_release_n();
  __break(1u);
LABEL_152:
  swift_release_n();
  result = sub_1BDBFE520();
  __break(1u);
  return result;
}

uint64_t sub_1BDADEA04(_QWORD **a1, uint64_t (*a2)(uint64_t, char *), uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD v11[2];

  v8 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = (_QWORD *)sub_1BDBBCF7C(v8);
  v9 = v8[2];
  v11[0] = v8 + 4;
  v11[1] = v9;
  swift_retain();
  sub_1BDADDDBC(v11, a2, a3, a4);
  swift_release();
  *a1 = v8;
  return swift_release_n();
}

uint64_t sub_1BDADEABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE v21[24];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  result = MEMORY[0x1E0DEE9D8];
  v27 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v8 = a1 + 32;
    do
    {
      sub_1BDADED64(v8, (uint64_t)&v24);
      v9 = v25;
      v10 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 64))(a2, a3, v9, v10) & 1) != 0)
      {
        sub_1BDAE14D4(&v24, (uint64_t)v21);
        v11 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDB225CC(0, *(_QWORD *)(v11 + 16) + 1, 1);
          v11 = v27;
        }
        v13 = *(_QWORD *)(v11 + 16);
        v12 = *(_QWORD *)(v11 + 24);
        if (v13 >= v12 >> 1)
          sub_1BDB225CC(v12 > 1, v13 + 1, 1);
        v14 = v22;
        v15 = v23;
        v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
        MEMORY[0x1E0C80A78](v16);
        v18 = &v21[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
        (*(void (**)(_BYTE *))(v19 + 16))(v18);
        sub_1BDADD590(v13, (uint64_t)v18, &v27, v14, v15);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v24);
      }
      v8 += 40;
      --v5;
    }
    while (v5);
    return v27;
  }
  return result;
}

uint64_t sub_1BDADEC5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1BDADECA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDADECF0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BDADED1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDADED64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1BDADEDEC(uint64_t result, uint64_t a2, uint64_t (*a3)(__int128 *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  uint64_t v28;

  v4 = result;
  v5 = MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(result + 16);
  if (v6)
  {
    v8 = a2;
    v9 = 0;
    v10 = result + 32;
    v22 = a2;
    v23 = result;
    v21 = v6;
    while (v9 < *(_QWORD *)(v4 + 16))
    {
      sub_1BDADED64(v10, (uint64_t)v27);
      v11 = a3(v27, v8);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if ((v11 & 1) != 0)
      {
        sub_1BDAE14D4(v27, (uint64_t)v24);
        v12 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDB225CC(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v12 = v28;
        }
        v14 = *(_QWORD *)(v12 + 16);
        v13 = *(_QWORD *)(v12 + 24);
        if (v14 >= v13 >> 1)
          sub_1BDB225CC(v13 > 1, v14 + 1, 1);
        v5 = v25;
        v15 = v26;
        v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
        MEMORY[0x1E0C80A78](v16);
        v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v19 + 16))(v18);
        sub_1BDADD590(v14, (uint64_t)v18, &v28, v5, v15);
        result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
        v8 = v22;
        v4 = v23;
        v6 = v21;
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        v5 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1BDADEFD0(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = 0;
  v18 = (_QWORD *)(a2 + 40);
  v19 = result + 32;
  v4 = MEMORY[0x1E0DEE9D8];
  do
  {
    v17 = v4;
    if (v3 <= v2)
      v5 = v2;
    else
      v5 = v3;
    while (1)
    {
      if (v3 == v5)
      {
        __break(1u);
        return result;
      }
      v6 = (uint64_t *)(v19 + 32 * v3);
      v7 = *v6;
      v8 = v6[1];
      v9 = v6[3];
      v20 = v6[2];
      ++v3;
      v10 = a2;
      v11 = *(_QWORD *)(a2 + 16);
      if (!v11)
        break;
      v12 = v18;
      while (1)
      {
        result = *(v12 - 1);
        if (result == v7 && *v12 == v8)
          break;
        result = sub_1BDBFE874();
        if ((result & 1) != 0)
          break;
        v12 += 4;
        if (!--v11)
          goto LABEL_16;
      }
      a2 = v10;
      if (v3 == v2)
        return v17;
    }
LABEL_16:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = v17;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BDB226C0(0, *(_QWORD *)(v17 + 16) + 1, 1);
      v4 = v17;
    }
    v15 = *(_QWORD *)(v4 + 16);
    v14 = *(_QWORD *)(v4 + 24);
    if (v15 >= v14 >> 1)
    {
      result = sub_1BDB226C0(v14 > 1, v15 + 1, 1);
      v4 = v17;
    }
    *(_QWORD *)(v4 + 16) = v15 + 1;
    v16 = (_QWORD *)(v4 + 32 * v15);
    v16[4] = v7;
    v16[5] = v8;
    v16[6] = v20;
    v16[7] = v9;
    a2 = v10;
  }
  while (v3 != v2);
  return v4;
}

uint64_t sub_1BDADF160(uint64_t result, void *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *i;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  _OWORD v34[2];
  uint64_t v35;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = 0;
  v29 = -(uint64_t)v2;
  v27 = result + 56;
  v4 = MEMORY[0x1E0DEE9D8];
  v26 = *(_QWORD *)(result + 16);
  do
  {
    v28 = v4;
    if (v3 <= v2)
      v5 = v2;
    else
      v5 = v3;
    v32 = -(uint64_t)v5;
    for (i = (uint64_t *)(v27 + 32 * v3++); ; i += 4)
    {
      if (v32 + v3 == 1)
      {
        __break(1u);
        return result;
      }
      v9 = *(i - 3);
      v8 = *(i - 2);
      v10 = *(i - 1);
      v11 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = v10;
      if (objc_msgSend(a2, sel_resolverStorage))
      {
        sub_1BDBFE184();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v34, 0, sizeof(v34));
      }
      v33[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
      v33[0] = swift_allocObject();
      sub_1BDADED1C((uint64_t)v34, v33[0] + 16);
      sub_1BDADB2D0((uint64_t)v33);
      v13 = v12;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
      sub_1BDAC350C((uint64_t)v34, qword_1ED239CF8);
      ObjectType = swift_getObjectType();
      v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      swift_bridgeObjectRetain();
      v16 = (void *)v15(ObjectType, v13);
      if (!v16)
        break;
      v17 = v16;
      v18 = objc_msgSend(v16, sel_cloudAccount);

      if (!v18)
        break;
      v19 = objc_msgSend(v18, sel_userRecordName);

      v20 = sub_1BDBFD6F8();
      v22 = v21;

      if (v9 == v20 && v8 == v22)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v7 = sub_1BDBFE874();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
          goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      ++v3;
      if (v29 + v3 == 1)
        return v28;
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_19:
    v4 = v28;
    result = swift_isUniquelyReferenced_nonNull_native();
    v35 = v28;
    if ((result & 1) == 0)
    {
      result = sub_1BDB226C0(0, *(_QWORD *)(v28 + 16) + 1, 1);
      v4 = v35;
    }
    v24 = *(_QWORD *)(v4 + 16);
    v23 = *(_QWORD *)(v4 + 24);
    if (v24 >= v23 >> 1)
    {
      result = sub_1BDB226C0(v23 > 1, v24 + 1, 1);
      v4 = v35;
    }
    *(_QWORD *)(v4 + 16) = v24 + 1;
    v25 = (_QWORD *)(v4 + 32 * v24);
    v25[4] = v9;
    v25[5] = v8;
    v25[6] = v31;
    v25[7] = v11;
    v2 = v26;
  }
  while (v29 + v3);
  return v4;
}

uint64_t sub_1BDADF480(uint64_t a1, void *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v15;
  _QWORD v17[4];
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1BDB226DC(0, v2, 0);
    v3 = v23;
    v5 = (uint64_t *)(a1 + 56);
    do
    {
      v6 = *(v5 - 2);
      v7 = *(v5 - 1);
      v8 = *v5;
      v19 = *(v5 - 3);
      v20 = v6;
      v21 = v7;
      v22 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (objc_msgSend(a2, sel_resolverStorage))
      {
        sub_1BDBFE184();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v18, 0, sizeof(v18));
      }
      v17[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
      v17[0] = swift_allocObject();
      sub_1BDADED1C((uint64_t)v18, v17[0] + 16);
      sub_1BDADB2D0((uint64_t)v17);
      v10 = v9;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
      sub_1BDAC350C((uint64_t)v18, qword_1ED239CF8);
      ActivityEventParticipant.shortName(resolver:)(v10, (uint64_t *)v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      v11 = v18[0];
      v23 = v3;
      v13 = *(_QWORD *)(v3 + 16);
      v12 = *(_QWORD *)(v3 + 24);
      if (v13 >= v12 >> 1)
      {
        v15 = v18[0];
        sub_1BDB226DC(v12 > 1, v13 + 1, 1);
        v11 = v15;
        v3 = v23;
      }
      v5 += 4;
      *(_QWORD *)(v3 + 16) = v13 + 1;
      *(_OWORD *)(v3 + 16 * v13 + 32) = v11;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1BDADF648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BDADF684(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  _QWORD v36[3];
  char *v37;
  char *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43[40];
  uint64_t v44[6];

  v42 = type metadata accessor for PersistedActivityEvent.Activities();
  v2 = MEMORY[0x1E0C80A78](v42);
  v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v39 = (uint64_t)v36 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AAD0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PersistedActivityEvent();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v41 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v36 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v36 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v21 = *((_QWORD *)a1 + 2);
  v22 = MEMORY[0x1E0DEE9D8];
  v38 = v15;
  if (v21)
  {
    v23 = (uint64_t)(a1 + 32);
    v37 = a1;
    swift_bridgeObjectRetain();
    v24 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v40 = v18;
    do
    {
      sub_1BDADED64(v23, (uint64_t)v44);
      sub_1BDADED64((uint64_t)v44, (uint64_t)v43);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
      v25 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v25 ^ 1u, 1, v9);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_1BDAC350C((uint64_t)v8, &qword_1ED23AAD0);
      }
      else
      {
        sub_1BDAE1588((uint64_t)v8, (uint64_t)v20);
        sub_1BDAE1588((uint64_t)v20, (uint64_t)v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = sub_1BDBCBBA4(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
        v27 = *(_QWORD *)(v24 + 16);
        v26 = *(_QWORD *)(v24 + 24);
        if (v27 >= v26 >> 1)
          v24 = sub_1BDBCBBA4(v26 > 1, v27 + 1, 1, v24);
        *(_QWORD *)(v24 + 16) = v27 + 1;
        v28 = v24
            + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
            + *(_QWORD *)(v10 + 72) * v27;
        v18 = (char *)v40;
        sub_1BDAE1588(v40, v28);
      }
      v23 += 40;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v15 = v38;
    v22 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v44[0] = v22;
  *(_QWORD *)&v40 = *(_QWORD *)(v24 + 16);
  if ((_QWORD)v40)
  {
    v36[2] = "ame";
    v36[1] = "removeParticipant";
    v37 = v4;
    if (*(_QWORD *)(v24 + 16))
    {
      sub_1BDAE1544(v24 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
      sub_1BDAE1544((uint64_t)&v15[*(int *)(v9 + 28)], (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
      v29 = (char *)&loc_1BDADFA34 + *((int *)qword_1BDADFE00 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1BDADFE00);
  }
  swift_bridgeObjectRelease();
  v30 = v44[0];
  v31 = sub_1BDAD021C(v44[0]);
  v32 = v31;
  v44[0] = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v30 + 16))
  {
    v38 = (char *)v31;
    v33 = v30 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    swift_retain();
    v40 = xmmword_1BDC16BA0;
    sub_1BDAE1544(v33 + *(int *)(v9 + 28), v39, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
    v34 = (char *)&loc_1BDADFD2C + dword_1BDADFE24[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  swift_release();
  return v32;
}

uint64_t sub_1BDADFE48(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  uint64_t v29;

  v4 = type metadata accessor for NoteEditActivityEvent(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a2;
  v7 = MEMORY[0x1E0DEE9D8];
  v29 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v8)
  {
    v23 = a1;
    v9 = a1 + 32;
    do
    {
      sub_1BDADED64(v9, (uint64_t)v28);
      sub_1BDADED64((uint64_t)v28, (uint64_t)v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BDAE1658((uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
        sub_1BDAE14D4(v28, (uint64_t)v25);
        v10 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDB225CC(0, *(_QWORD *)(v10 + 16) + 1, 1);
          v10 = v29;
        }
        v12 = *(_QWORD *)(v10 + 16);
        v11 = *(_QWORD *)(v10 + 24);
        if (v12 >= v11 >> 1)
          sub_1BDB225CC(v11 > 1, v12 + 1, 1);
        v13 = v26;
        v14 = v27;
        v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
        MEMORY[0x1E0C80A78](v15);
        v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v18 + 16))(v17);
        sub_1BDADD590(v12, (uint64_t)v17, &v29, v13, v14);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
      }
      v9 += 40;
      --v8;
    }
    while (v8);
    v7 = v29;
    a1 = v23;
  }
  swift_bridgeObjectRelease();
  v19 = sub_1BDAD0338(v7);
  swift_release();
  if ((v24 & 1) == 0 && *(_QWORD *)(v19 + 16))
  {
    v20 = sub_1BDADF684((char *)a1);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v28[0] = v19;
    sub_1BDBC3E90(v20);
    return *(_QWORD *)&v28[0];
  }
  return v19;
}

uint64_t sub_1BDAE00A8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v35[2];
  char *v36;
  uint64_t v37;
  __int128 v38;
  char *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43[40];
  _QWORD v44[6];

  v42 = type metadata accessor for PersistedActivityEvent.Activities();
  v2 = MEMORY[0x1E0C80A78](v42);
  v40 = (uint64_t)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v35 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AAD0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PersistedActivityEvent();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  *(_QWORD *)&v38 = (char *)v35 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)&v41 = (char *)v35 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v37 = (uint64_t)v35 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v35 - v20;
  v22 = *((_QWORD *)a1 + 2);
  v23 = MEMORY[0x1E0DEE9D8];
  v39 = v13;
  if (v22)
  {
    v24 = (uint64_t)(a1 + 32);
    v36 = a1;
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BDADED64(v24, (uint64_t)v44);
      sub_1BDADED64((uint64_t)v44, (uint64_t)v43);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
      v26 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v26 ^ 1u, 1, v9);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_1BDAC350C((uint64_t)v8, &qword_1ED23AAD0);
      }
      else
      {
        sub_1BDAE1588((uint64_t)v8, (uint64_t)v21);
        sub_1BDAE1588((uint64_t)v21, v37);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_1BDBCBBA4(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
        v28 = *(_QWORD *)(v25 + 16);
        v27 = *(_QWORD *)(v25 + 24);
        if (v28 >= v27 >> 1)
          v25 = sub_1BDBCBBA4(v27 > 1, v28 + 1, 1, v25);
        *(_QWORD *)(v25 + 16) = v28 + 1;
        sub_1BDAE1588(v37, v25+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v28);
        v13 = v39;
      }
      v24 += 40;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v25 = MEMORY[0x1E0DEE9D8];
  }
  v44[0] = v23;
  v37 = *(_QWORD *)(v25 + 16);
  if (v37)
  {
    v35[0] = "removeParticipant";
    v35[1] = "ame";
    v36 = v5;
    if (*(_QWORD *)(v25 + 16))
    {
      v29 = v41;
      sub_1BDAE1544(v25 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v41, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
      sub_1BDAE1544(v29 + *(int *)(v9 + 28), (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
      v30 = (char *)&loc_1BDAE0470 + dword_1BDAE084C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1BDAE084CLL);
  }
  swift_bridgeObjectRelease();
  v31 = v44[0];
  v44[0] = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v31 + 16))
  {
    v32 = v31 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v37 = v31;
    swift_retain();
    v38 = xmmword_1BDC16BA0;
    sub_1BDAE1544(v32, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    sub_1BDAE1544((uint64_t)&v13[*(int *)(v9 + 28)], v40, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
    v33 = (char *)&loc_1BDAE0778 + *((int *)qword_1BDAE0870 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  swift_release();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BDAE0894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = type metadata accessor for ShareActivityEvent();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    v31 = a1;
    v7 = a1 + 32;
    do
    {
      sub_1BDADED64(v7, (uint64_t)&v35);
      sub_1BDADED64((uint64_t)&v35, (uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BDAE1658((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ShareActivityEvent);
        sub_1BDAE14D4(&v35, (uint64_t)v32);
        v8 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDB225CC(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v38;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
          sub_1BDB225CC(v9 > 1, v10 + 1, 1);
        v11 = v33;
        v12 = v34;
        v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
        MEMORY[0x1E0C80A78](v13);
        v15 = (char *)&v32[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v16 + 16))(v15);
        sub_1BDADD590(v10, (uint64_t)v15, &v38, v11, v12);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v35);
      }
      v7 += 40;
      --v6;
    }
    while (v6);
    v17 = v38;
    v5 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v17 = v5;
  }
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v38 = v5;
    sub_1BDB226C0(0, v18, 0);
    v19 = v17 + 32;
    do
    {
      sub_1BDADED64(v19, (uint64_t)&v35);
      v20 = v36;
      v21 = v37;
      __swift_project_boxed_opaque_existential_1(&v35, v36);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v21 + 48))(v32, v20, v21);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v35);
      v22 = v32[0];
      v23 = v32[1];
      v24 = v32[2];
      v25 = v33;
      v26 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDB226C0(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v26 = v38;
      }
      v28 = *(_QWORD *)(v26 + 16);
      v27 = *(_QWORD *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BDB226C0(v27 > 1, v28 + 1, 1);
        v26 = v38;
      }
      *(_QWORD *)(v26 + 16) = v28 + 1;
      v29 = (_QWORD *)(v26 + 32 * v28);
      v29[4] = v22;
      v29[5] = v23;
      v29[6] = v24;
      v29[7] = v25;
      v19 += 40;
      --v18;
    }
    while (v18);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v26;
}

uint64_t sub_1BDAE0BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1BDAE0BDC()
{
  unint64_t result;

  result = qword_1EF50B888;
  if (!qword_1EF50B888)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventParticipant, &type metadata for ActivityEventParticipant);
    atomic_store(result, (unint64_t *)&qword_1EF50B888);
  }
  return result;
}

unint64_t sub_1BDAE0C24()
{
  unint64_t result;

  result = qword_1EF50B890;
  if (!qword_1EF50B890)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICActivityStreamDigest.Summary.Formats, &type metadata for ICActivityStreamDigest.Summary.Formats);
    atomic_store(result, (unint64_t *)&qword_1EF50B890);
  }
  return result;
}

uint64_t sub_1BDAE0C68()
{
  return sub_1BDAE0C94(&qword_1EF50B898, &qword_1EF50B8A0, MEMORY[0x1E0DEAF50]);
}

uint64_t sub_1BDAE0C94(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3B7B388](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s7SummaryVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s7SummaryVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7SummaryVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s7SummaryVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t _s7SummaryVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7SummaryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ICActivityStreamDigest.Summary()
{
  return &type metadata for ICActivityStreamDigest.Summary;
}

uint64_t _s7SummaryV7FormatsOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7SummaryV7FormatsOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDAE1028 + 4 * byte_1BDC17EE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDAE105C + 4 * byte_1BDC17EE0[v4]))();
}

uint64_t sub_1BDAE105C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAE1064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDAE106CLL);
  return result;
}

uint64_t sub_1BDAE1078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDAE1080);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDAE1084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAE108C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BDAE1098(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ICActivityStreamDigest.Summary.Formats()
{
  return &type metadata for ICActivityStreamDigest.Summary.Formats;
}

uint64_t _s7SummaryV12ParticipantsVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s7SummaryV12ParticipantsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7SummaryV12ParticipantsVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7SummaryV12ParticipantsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ICActivityStreamDigest.Summary.Participants()
{
  return &type metadata for ICActivityStreamDigest.Summary.Participants;
}

uint64_t sub_1BDAE11F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1BDBFE574();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1C3B79960](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1BD942914(0, &qword_1EF50B918);
  swift_arrayDestroy();
  if (!v6)
    return sub_1BDBFD9F8();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1BDBFE574();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_1BDBFD9F8();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDAE14D4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1BDAE1514()
{
  return swift_release();
}

uint64_t sub_1BDAE151C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BDAE1530(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BDAE1544(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDAE1588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersistedActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDAE15CC(_QWORD *a1)
{
  return sub_1BDAD16B8(a1) & 1;
}

unint64_t sub_1BDAE15E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50B958;
  if (!qword_1EF50B958)
  {
    v1 = sub_1BD942914(255, (unint64_t *)&qword_1EF50FED0);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50B958);
  }
  return result;
}

uint64_t sub_1BDAE1640@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BDAD1780(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BDAE1658(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BDAE1694(_QWORD *a1)
{
  return sub_1BDAE15CC(a1) & 1;
}

uint64_t sub_1BDAE16AC()
{
  return sub_1BDAD471C() & 1;
}

_QWORD *sub_1BDAE16C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  _QWORD v11[4];

  v11[1] = a1;
  v11[2] = a2;
  v3 = sub_1BDBFDF50();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFDF44();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BDBFD23C();
  MEMORY[0x1E0C80A78](v9);
  v11[0] = sub_1BDAE218C();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = 0;
  sub_1BDBFD200();
  v11[3] = MEMORY[0x1E0DEE9D8];
  sub_1BDAC31B0(&qword_1ED23AE70, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE58);
  sub_1BDAE21C8(&qword_1ED23AE60, &qword_1ED23AE58);
  sub_1BDBFE1B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  v2[5] = sub_1BDBFDF68();
  return v2;
}

uint64_t sub_1BDAE1880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1BDBFD1D0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BDBFD23C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v3 + 40);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_1BDAE2180;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB24AB0;
  aBlock[3] = &block_descriptor_13;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BDBFD200();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1BDAC31B0(&qword_1ED23AE18, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE40);
  sub_1BDAE21C8((unint64_t *)&qword_1ED23AE48, &qword_1ED23AE40);
  sub_1BDBFE1B4();
  MEMORY[0x1C3B79528](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1BDAE1A78(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[2])
  {
    v9 = a1[3];
    a1[3] = a2;
    a1[4] = a3;
    swift_retain();
    return sub_1BDAE1FE0(v9);
  }
  else
  {
    v11 = sub_1BDBFDBC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = a2;
    v12[5] = a3;
    v12[6] = a1;
    swift_retain();
    swift_retain();
    a1[2] = sub_1BDAEE400((uint64_t)v8, (uint64_t)&unk_1EF50BA68, (uint64_t)v12);
    return swift_release();
  }
}

uint64_t sub_1BDAE1B9C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  *(_QWORD *)(v6 + 16) = a6;
  v9 = (uint64_t (*)(void))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v7;
  *v7 = v6;
  v7[1] = sub_1BDAE1BF4;
  return v9();
}

uint64_t sub_1BDAE1BF4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDAE1C48()
{
  uint64_t v0;

  sub_1BDAE1C78();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAE1C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1BDBFD1D0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFD23C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + 40);
  aBlock[4] = sub_1BDAE1FC0;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB24AB0;
  aBlock[3] = &block_descriptor;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1BDBFD200();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1BDAC31B0(&qword_1ED23AE18, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE40);
  sub_1BDAE21C8((unint64_t *)&qword_1ED23AE48, &qword_1ED23AE40);
  sub_1BDBFE1B4();
  MEMORY[0x1C3B79528](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1BDAE1E44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[2] = 0;
  result = swift_release();
  v6 = a1[3];
  if (v6)
  {
    v7 = a1[4];
    a1[3] = 0;
    a1[4] = 0;
    swift_retain();
    sub_1BDAE1FE0(v6);
    v8 = sub_1BDBFDBC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v6;
    v9[5] = v7;
    v9[6] = a1;
    sub_1BDAE2080(v6);
    swift_retain();
    a1[2] = sub_1BDAEE400((uint64_t)v4, (uint64_t)&unk_1EF50BA60, (uint64_t)v9);
    swift_release();
    return sub_1BDAE1FE0(v6);
  }
  return result;
}

uint64_t sub_1BDAE1F6C()
{
  uint64_t v0;

  swift_release();
  sub_1BDAE1FE0(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CancellableTaskQueue()
{
  return objc_opt_self();
}

uint64_t sub_1BDAE1FC0()
{
  _QWORD *v0;

  return sub_1BDAE1E44(v0);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1BDAE1FE0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1BDAE1FF4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v2 = *(int **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BDAE2208;
  v4[2] = v3;
  v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  v5 = (_QWORD *)swift_task_alloc();
  v4[3] = v5;
  *v5 = v4;
  v5[1] = sub_1BDAE1BF4;
  return v7();
}

uint64_t sub_1BDAE2080(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDAE20C8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v2 = *(int **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BDAC9D90;
  v4[2] = v3;
  v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  v5 = (_QWORD *)swift_task_alloc();
  v4[3] = v5;
  *v5 = v4;
  v5[1] = sub_1BDAE1BF4;
  return v7();
}

uint64_t sub_1BDAE2154()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDAE2180()
{
  uint64_t v0;

  return sub_1BDAE1A78(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_1BDAE218C()
{
  unint64_t result;

  result = qword_1ED23AE78;
  if (!qword_1ED23AE78)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED23AE78);
  }
  return result;
}

uint64_t sub_1BDAE21C8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Argument.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t Argument.wrappedValue.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*Argument.wrappedValue.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t Argument.name.getter()
{
  uint64_t v0;

  v0 = sub_1BDAE32A8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Argument.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Argument.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t Argument.isHidden.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_beginAccess();
  return *v1;
}

uint64_t Argument.isHidden.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*Argument.isHidden.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t Argument.isReadonly.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_beginAccess();
  return *v1;
}

uint64_t Argument.isReadonly.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*Argument.isReadonly.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t Argument.summary.getter()
{
  uint64_t v0;

  v0 = sub_1BDAE32EC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Argument.summary.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128));
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Argument.summary.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t Argument.prose.getter()
{
  uint64_t v0;

  v0 = sub_1BDAE3330();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Argument.prose.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136));
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Argument.prose.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t Argument.__allocating_init(wrappedValue:name:isHidden:isReadonly:summary:prose:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;

  v17 = swift_allocObject();
  Argument.init(wrappedValue:name:isHidden:isReadonly:summary:prose:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t *Argument.init(wrappedValue:name:isHidden:isReadonly:summary:prose:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v14;
  _QWORD *v15;
  _BYTE *v16;
  _BYTE *v17;
  _QWORD *v18;
  _QWORD *v19;

  v14 = *v9;
  v15 = (uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 104));
  *v15 = 0;
  v15[1] = 0;
  v16 = (char *)v9 + *(_QWORD *)(*v9 + 112);
  *v16 = 0;
  v17 = (char *)v9 + *(_QWORD *)(*v9 + 120);
  *v17 = 0;
  v18 = (uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 128));
  *v18 = 0;
  v18[1] = 0;
  v19 = (uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 136));
  *v19 = 0;
  v19[1] = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v14 + 80) - 8) + 32))((uint64_t)v9 + *(_QWORD *)(*v9 + 96), a1);
  swift_beginAccess();
  *v15 = a2;
  v15[1] = a3;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *v16 = a4;
  swift_beginAccess();
  *v17 = a5;
  swift_beginAccess();
  *v18 = a6;
  v18[1] = a7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *v19 = a8;
  v19[1] = a9;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t Argument.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Argument.init(from:)(a1);
  return v2;
}

uint64_t *Argument.init(from:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _BYTE v15[40];
  uint64_t v16;

  v3 = v1;
  v5 = *v1;
  v6 = *(_QWORD *)(*v1 + 80);
  v16 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (uint64_t *)((char *)v3 + *(_QWORD *)(v5 + 104));
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)v3 + *(_QWORD *)(*v3 + 112)) = 0;
  *((_BYTE *)v3 + *(_QWORD *)(*v3 + 120)) = 0;
  v11 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 128));
  *v11 = 0;
  v11[1] = 0;
  v12 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 136));
  *v12 = 0;
  v12[1] = 0;
  sub_1BDADED64(v7, (uint64_t)v15);
  sub_1BDBFDCF8();
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))((uint64_t)v3 + *(_QWORD *)(*v3 + 96), v9, v6);
  }
  return v3;
}

uint64_t Argument.value.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 80);
  a1[3] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_1, v4, v5);
}

uint64_t Argument.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  castOrFatalError<A>(_:as:)(v5, v3, v3, (uint64_t)v7);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v8 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v8, v7, v3);
  return swift_endAccess();
}

void (*Argument.value.modify(uint64_t **a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t *v3;

  v3 = (uint64_t *)malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  Argument.value.getter(v3);
  return sub_1BDAE2C7C;
}

void sub_1BDAE2C7C(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_1BDAE0BA0(*a1, (uint64_t)v2 + 32);
    Argument.value.setter((uint64_t)v2 + 32);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
  }
  else
  {
    Argument.value.setter(*a1);
  }
  free(v2);
}

Swift::String __swiftcall Argument.typeSummary(forName:)(Swift::String forName)
{
  uint64_t *v1;
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _BYTE *v14;
  uint64_t v15;
  void *v16;
  Swift::String result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;

  v2 = v1;
  object = forName._object;
  countAndFlagsBits = forName._countAndFlagsBits;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](forName._countAndFlagsBits);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)v2 + *(_QWORD *)(v5 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_getDynamicType();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = (*(uint64_t (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v5 + 88) + 32))(countAndFlagsBits, object, v6);
  v13 = v12;
  v14 = (char *)v2 + *(_QWORD *)(*v2 + 120);
  swift_beginAccess();
  if (*v14 == 1)
  {
    v22 = v11;
    v23 = v13;
    sub_1BDBFD7DC();
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    v19 = 2;
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    v19 = 0;
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v11 = v22;
    v13 = v23;
  }
  v15 = v11;
  v16 = v13;
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

uint64_t Argument.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Argument.__deallocating_deinit()
{
  Argument.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BDAE2FEC()
{
  uint64_t v0;

  v0 = sub_1BDAE32A8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BDAE3024()
{
  return Argument.isHidden.getter() & 1;
}

uint64_t sub_1BDAE3048()
{
  return Argument.isReadonly.getter() & 1;
}

uint64_t sub_1BDAE306C()
{
  uint64_t v0;

  v0 = sub_1BDAE32EC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BDAE30A4()
{
  uint64_t v0;

  v0 = sub_1BDAE3330();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BDAE30DC@<X0>(uint64_t *a1@<X8>)
{
  return Argument.value.getter(a1);
}

uint64_t sub_1BDAE30FC(uint64_t a1)
{
  return Argument.value.setter(a1);
}

void (*sub_1BDAE311C(uint64_t ***a1))(_QWORD *a1)
{
  uint64_t **v2;

  v2 = (uint64_t **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t *)Argument.value.modify(v2);
  return sub_1BDAC7508;
}

uint64_t sub_1BDAE3164(uint64_t a1, uint64_t a2)
{
  return Argument.typeSummary(forName:)(*(Swift::String *)&a1)._countAndFlagsBits;
}

uint64_t sub_1BDAE3184@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = Argument.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t Argument<>.encode(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + *(_QWORD *)(v6 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  sub_1BDBFD608();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BDAE3284(uint64_t a1)
{
  return Argument<>.encode(to:)(a1);
}

uint64_t sub_1BDAE32A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BDAE32EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BDAE3330()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BDAE3374@<X0>(uint64_t *a1@<X8>)
{
  return Argument.value.getter(a1);
}

uint64_t sub_1BDAE3394(uint64_t a1)
{
  _BYTE v2[32];

  sub_1BDAE0BA0(a1, (uint64_t)v2);
  return Argument.value.setter((uint64_t)v2);
}

uint64_t sub_1BDAE33CC()
{
  return 16;
}

__n128 sub_1BDAE33D8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of AnyArgument.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyArgument.isHidden.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnyArgument.isReadonly.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyArgument.summary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnyArgument.prose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AnyArgument.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AnyArgument.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of AnyArgument.value.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of AnyArgument.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1BDAE342C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Argument(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Argument);
}

uint64_t method lookup function for Argument()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Argument.__allocating_init(wrappedValue:name:isHidden:isReadonly:summary:prose:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of Argument.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

Swift::Void __swiftcall NoteObject.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  _BYTE v10[8];
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BDACEF90((void (*)(char *, uint64_t, uint64_t))v10);
  sub_1BDAC246C(v10[0], v11, v12, (uint64_t)v4);
  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BDACDBAC((uint64_t)v4);
  }
  else
  {
    sub_1BDBFC8A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v1, sel_title);
  if (v7)
  {
    v8 = v7;
    sub_1BDBFD6F8();

  }
  sub_1BDAC2F74(MEMORY[0x1E0DEE9D8]);
  sub_1BDBFE034();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1BDAE36A4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  NoteObject.associateAppEntity(with:)((CSSearchableItemAttributeSet)v4);

}

uint64_t dispatch thunk of ActivityEventResolving.object.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityEventResolving.resolves(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityEventResolving.fetch(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ActivityEventResolving.resolve(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ActivityEventResolving.fetchMention(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ActivityEventResolving.resolveMention(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ActivityEventResolving.fetchSnippet(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t ICFolderObject<>.entityIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(char *);
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  os_log_type_t v37;
  char *v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  os_log_t v45;
  uint64_t result;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  os_log_t v50;
  uint64_t v51;
  void (*v52)(char *);
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  os_log_t v59;

  v3 = sub_1BDBFCE34();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v47 - v8;
  v10 = objc_msgSend(v1, sel_objectID);
  if (!objc_msgSend(v10, sel_ic_isModernType))
    objc_msgSend(v10, sel_ic_isLegacyType);

  v54 = v47;
  MEMORY[0x1E0C80A78](v11);
  v56 = v12;
  LOBYTE(v47[-2]) = v12;
  v13 = qword_1ED23B180;
  v14 = v1;
  if (v13 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED23B160);
  v16 = *(void (**)(char *))(v4 + 16);
  v55 = v15;
  v16(v9);
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = 2;
  if ((sub_1BDBB6748(v17, (uint64_t (*)(void))sub_1BDAE5A14) & 1) != 0)
  {

    v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v9, v3);
    swift_release();
  }
  else
  {
    v52 = v16;
    v19 = sub_1BDBFDEF0();
    v20 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v20, v19))
    {
      v21 = swift_slowAlloc();
      v53 = a1;
      v22 = v21;
      v51 = swift_slowAlloc();
      v59 = (os_log_t)v51;
      *(_DWORD *)v22 = 136315650;
      v50 = v20;
      v23 = sub_1BDBFE34C();
      v57 = sub_1BDAE53FC(v23, v24, (uint64_t *)&v59);
      LODWORD(v49) = v19;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      v57 = 40;
      sub_1BDBFE100();
      *(_WORD *)(v22 + 22) = 2080;
      v47[1] = v22 + 24;
      v57 = 0;
      v58 = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v25 = objc_msgSend(v14, sel_ic_loggingDescription);
      sub_1BDBFD6F8();
      v48 = v4;

      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v57 = sub_1BDAE53FC(v57, v58, (uint64_t *)&v59);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      v26 = v50;
      _os_log_impl(&dword_1BD918000, v50, (os_log_type_t)v49, "Failed assertion at %s:%lu: %s", (uint8_t *)v22, 0x20u);
      v27 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v27, -1, -1);
      v28 = v22;
      a1 = v53;
      MEMORY[0x1C3B7B478](v28, -1, -1);

      v18 = *(void (**)(char *, uint64_t))(v48 + 8);
    }
    else
    {

      v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    }
    v18(v9, v3);
    swift_release();
    v16 = v52;
  }
  v29 = objc_msgSend(v14, sel_identifierURIPathComponent);
  if (v29)
  {
    v30 = v29;
    v31 = sub_1BDBFD6F8();
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0xE000000000000000;
  }
  v54 = v47;
  MEMORY[0x1E0C80A78](v29);
  v47[-2] = v31;
  v47[-1] = v33;
  ((void (*)(char *, uint64_t, uint64_t))v16)(v7, v55, v3);
  v34 = swift_allocObject();
  *(_BYTE *)(v34 + 16) = 2;
  v35 = v14;
  if ((sub_1BDBB6748(v34, (uint64_t (*)(void))sub_1BDAE5A0C) & 1) != 0)
  {

    v36 = v7;
LABEL_19:
    v18(v36, v3);
    goto LABEL_20;
  }
  v37 = sub_1BDBFDEF0();
  v38 = v7;
  v39 = sub_1BDBFCE1C();
  if (!os_log_type_enabled(v39, v37))
  {

    v36 = v38;
    goto LABEL_19;
  }
  v40 = swift_slowAlloc();
  LODWORD(v51) = v37;
  v41 = v40;
  v50 = (os_log_t)swift_slowAlloc();
  v59 = v50;
  *(_DWORD *)v41 = 136315650;
  v55 = (uint64_t)v38;
  v42 = sub_1BDBFE34C();
  v52 = (void (*)(char *))v18;
  v57 = sub_1BDAE53FC(v42, v43, (uint64_t *)&v59);
  v53 = a1;
  sub_1BDBFE100();
  swift_bridgeObjectRelease();
  *(_WORD *)(v41 + 12) = 2048;
  v57 = 42;
  sub_1BDBFE100();
  *(_WORD *)(v41 + 22) = 2080;
  v49 = v41 + 24;
  v57 = 0;
  v58 = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  v57 = 0xD000000000000028;
  v58 = 0x80000001BDC34CD0;
  v44 = objc_msgSend(v35, sel_ic_loggingDescription);
  sub_1BDBFD6F8();

  sub_1BDBFD7DC();
  a1 = v53;
  swift_bridgeObjectRelease();
  v57 = sub_1BDAE53FC(v57, v58, (uint64_t *)&v59);
  sub_1BDBFE100();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BD918000, v39, (os_log_type_t)v51, "Failed assertion at %s:%lu: %s", (uint8_t *)v41, 0x20u);
  v45 = v50;
  swift_arrayDestroy();
  MEMORY[0x1C3B7B478](v45, -1, -1);
  MEMORY[0x1C3B7B478](v41, -1, -1);

  ((void (*)(uint64_t, uint64_t))v52)(v55, v3);
LABEL_20:
  result = swift_release();
  *(_BYTE *)a1 = v56;
  *(_QWORD *)(a1 + 8) = v31;
  *(_QWORD *)(a1 + 16) = v33;
  return result;
}

uint64_t ICTableObject<>.tableEntityIdentifier.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1BDAE3EA4((uint64_t (*)(void))sub_1BDAE59D8, 0x58, (uint64_t (*)(void))sub_1BDAE59E8, 0x5A, a1);
}

uint64_t sub_1BDAE3EA4@<X0>(uint64_t (*a1)(void)@<X1>, NSObject *a2@<X2>, uint64_t (*a3)(void)@<X3>, NSObject *a4@<X4>, _BYTE *a5@<X8>)
{
  void *v5;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void (*isa)(char *);
  uint64_t v21;
  Class v22;
  os_log_type_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  os_log_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  os_log_type_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t result;
  _BYTE *v47;
  _QWORD v48[2];
  int v49;
  os_log_t v50;
  uint64_t v51;
  void (*v52)(char *);
  os_log_t v53;
  os_log_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t (*v57)(void);
  int v58;
  _BYTE *v59;
  os_log_t v60;
  unint64_t v61;
  uint64_t v62;

  v53 = a2;
  v54 = a4;
  v57 = a3;
  v59 = a5;
  v7 = sub_1BDBFCE34();
  v8 = *(NSObject **)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = ((char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v48 - v12;
  v14 = objc_msgSend(v5, sel_objectID);
  if (!objc_msgSend(v14, sel_ic_isModernType))
    objc_msgSend(v14, sel_ic_isLegacyType);

  v55 = v48;
  MEMORY[0x1E0C80A78](v15);
  v58 = v16;
  LOBYTE(v48[-2]) = v16;
  v17 = qword_1ED23B180;
  v18 = v5;
  if (v17 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED23B160);
  isa = (void (*)(char *))v8[2].isa;
  v56 = v19;
  isa(v13);
  v21 = swift_allocObject();
  *(_BYTE *)(v21 + 16) = 2;
  if ((sub_1BDBB6748(v21, a1) & 1) != 0)
  {

    v22 = v8[1].isa;
    ((void (*)(char *, uint64_t))v22)(v13, v7);
    swift_release();
  }
  else
  {
    v52 = isa;
    v23 = sub_1BDBFDEF0();
    v24 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v24, v23))
    {
      v25 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v62 = v51;
      *(_DWORD *)v25 = 136315650;
      v50 = v24;
      v26 = sub_1BDBFE34C();
      v60 = (os_log_t)sub_1BDAE53FC(v26, v27, &v62);
      v49 = v23;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2048;
      v60 = v53;
      sub_1BDBFE100();
      *(_WORD *)(v25 + 22) = 2080;
      v48[1] = v25 + 24;
      v60 = 0;
      v61 = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v28 = objc_msgSend(v18, sel_ic_loggingDescription);
      sub_1BDBFD6F8();
      v53 = v8;

      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v60 = (os_log_t)sub_1BDAE53FC((uint64_t)v60, v61, &v62);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      v29 = v50;
      _os_log_impl(&dword_1BD918000, v50, (os_log_type_t)v49, "Failed assertion at %s:%lu: %s", (uint8_t *)v25, 0x20u);
      v30 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v30, -1, -1);
      MEMORY[0x1C3B7B478](v25, -1, -1);

      v22 = v53[1].isa;
    }
    else
    {

      v22 = v8[1].isa;
    }
    ((void (*)(char *, uint64_t))v22)(v13, v7);
    swift_release();
    isa = v52;
  }
  v31 = objc_msgSend(v18, sel_identifierURIPathComponent);
  if (v31)
  {
    v32 = v31;
    v33 = sub_1BDBFD6F8();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0xE000000000000000;
  }
  v55 = v48;
  MEMORY[0x1E0C80A78](v31);
  v48[-2] = v33;
  v48[-1] = v35;
  ((void (*)(NSObject *, uint64_t, uint64_t))isa)(v11, v56, v7);
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = 2;
  v37 = v18;
  if ((sub_1BDBB6748(v36, v57) & 1) != 0)
  {

LABEL_19:
    ((void (*)(NSObject *, uint64_t))v22)(v11, v7);
    goto LABEL_20;
  }
  v38 = sub_1BDBFDEF0();
  v39 = sub_1BDBFCE1C();
  if (!os_log_type_enabled(v39, v38))
  {

    goto LABEL_19;
  }
  v40 = swift_slowAlloc();
  v56 = swift_slowAlloc();
  v62 = v56;
  *(_DWORD *)v40 = 136315650;
  v53 = v39;
  v41 = sub_1BDBFE34C();
  v57 = (uint64_t (*)(void))v22;
  v60 = (os_log_t)sub_1BDAE53FC(v41, v42, &v62);
  LODWORD(v52) = v38;
  sub_1BDBFE100();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 12) = 2048;
  v60 = v54;
  sub_1BDBFE100();
  *(_WORD *)(v40 + 22) = 2080;
  v51 = v40 + 24;
  v60 = 0;
  v61 = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  v60 = (os_log_t)0xD00000000000002CLL;
  v61 = 0x80000001BDC34E70;
  v43 = objc_msgSend(v37, sel_ic_loggingDescription);
  sub_1BDBFD6F8();
  v54 = v11;

  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v60 = (os_log_t)sub_1BDAE53FC((uint64_t)v60, v61, &v62);
  sub_1BDBFE100();
  swift_bridgeObjectRelease();
  v44 = v53;
  _os_log_impl(&dword_1BD918000, v53, (os_log_type_t)v52, "Failed assertion at %s:%lu: %s", (uint8_t *)v40, 0x20u);
  v45 = v56;
  swift_arrayDestroy();
  MEMORY[0x1C3B7B478](v45, -1, -1);
  MEMORY[0x1C3B7B478](v40, -1, -1);

  ((void (*)(os_log_t, uint64_t))v57)(v54, v7);
LABEL_20:
  result = swift_release();
  v47 = v59;
  *v59 = v58;
  *((_QWORD *)v47 + 1) = v33;
  *((_QWORD *)v47 + 2) = v35;
  return result;
}

uint64_t ICAttachmentObject<>.entityIdentifier.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1BDAE3EA4((uint64_t (*)(void))sub_1BDAE5A14, 0x1C, (uint64_t (*)(void))sub_1BDAE5A0C, 0x1E, a1);
}

uint64_t ICSearchIndexableNote<>.entityIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(char *);
  uint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  os_log_t v25;
  os_log_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t result;
  os_log_type_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  os_log_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  os_log_t v51;
  os_log_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  os_log_t v60;

  v3 = sub_1BDBFCE34();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v48 - v8;
  v10 = objc_msgSend(v1, sel_objectID);
  if (!objc_msgSend(v10, sel_ic_isModernType))
    objc_msgSend(v10, sel_ic_isLegacyType);

  v55 = v48;
  MEMORY[0x1E0C80A78](v11);
  v57 = v12;
  LOBYTE(v48[-2]) = v12;
  v13 = qword_1ED23B180;
  v14 = v1;
  if (v13 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED23B160);
  v16 = *(void (**)(char *))(v4 + 16);
  v56 = v15;
  v16(v9);
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = 2;
  if ((sub_1BDBB6748(v17, (uint64_t (*)(void))sub_1BDAE5A14) & 1) != 0)
  {

  }
  else
  {
    v18 = sub_1BDBFDEF0();
    v19 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v19, v18))
    {
      v20 = swift_slowAlloc();
      v54 = v7;
      v21 = v20;
      v52 = (os_log_t)swift_slowAlloc();
      v60 = v52;
      *(_DWORD *)v21 = 136315650;
      v51 = v19;
      v22 = sub_1BDBFE34C();
      v53 = (uint64_t)v16;
      v58 = sub_1BDAE53FC(v22, v23, (uint64_t *)&v60);
      LODWORD(v50) = v18;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      v58 = 16;
      sub_1BDBFE100();
      *(_WORD *)(v21 + 22) = 2080;
      v48[1] = v21 + 24;
      v58 = 0;
      v59 = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v24 = objc_msgSend(v14, sel_ic_loggingDescription);
      sub_1BDBFD6F8();
      v49 = v4;

      v16 = (void (*)(char *))v53;
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v58 = sub_1BDAE53FC(v58, v59, (uint64_t *)&v60);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      v25 = v51;
      _os_log_impl(&dword_1BD918000, v51, (os_log_type_t)v50, "Failed assertion at %s:%lu: %s", (uint8_t *)v21, 0x20u);
      v26 = v52;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v26, -1, -1);
      v27 = v21;
      v7 = v54;
      MEMORY[0x1C3B7B478](v27, -1, -1);

      v28 = v9;
      v29 = *(void (**)(char *, uint64_t))(v49 + 8);
      v29(v28, v3);
      goto LABEL_11;
    }

  }
  v30 = v9;
  v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  v29(v30, v3);
LABEL_11:
  swift_release();
  v31 = objc_msgSend(v14, sel_identifier);
  if (v31)
  {
    v32 = v31;
    sub_1BDBFD6F8();

    v33 = sub_1BDBFD740();
    v35 = v34;
    v31 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    v33 = 0;
    v35 = 0xE000000000000000;
  }
  v55 = v48;
  MEMORY[0x1E0C80A78](v31);
  v48[-2] = v33;
  v48[-1] = v35;
  ((void (*)(char *, uint64_t, uint64_t))v16)(v7, v56, v3);
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = 2;
  v37 = v14;
  if ((sub_1BDBB6748(v36, (uint64_t (*)(void))sub_1BDAE5A0C) & 1) != 0)
  {

    v29(v7, v3);
    result = swift_release();
  }
  else
  {
    v56 = v33;
    v39 = sub_1BDBFDEF0();
    v40 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v40, v39))
    {
      v41 = swift_slowAlloc();
      v54 = v7;
      v42 = v41;
      v53 = swift_slowAlloc();
      v60 = (os_log_t)v53;
      *(_DWORD *)v42 = 136315650;
      v52 = v40;
      v43 = sub_1BDBFE34C();
      v58 = sub_1BDAE53FC(v43, v44, (uint64_t *)&v60);
      LODWORD(v51) = v39;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2048;
      v58 = 18;
      sub_1BDBFE100();
      *(_WORD *)(v42 + 22) = 2080;
      v49 = v42 + 24;
      v58 = 0;
      v59 = 0xE000000000000000;
      sub_1BDBFE304();
      swift_bridgeObjectRelease();
      v58 = 0xD000000000000026;
      v59 = 0x80000001BDC34EF0;
      v45 = objc_msgSend(v37, sel_ic_loggingDescription);
      sub_1BDBFD6F8();
      v50 = v29;

      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v58 = sub_1BDAE53FC(v58, v59, (uint64_t *)&v60);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      v46 = v52;
      _os_log_impl(&dword_1BD918000, v52, (os_log_type_t)v51, "Failed assertion at %s:%lu: %s", (uint8_t *)v42, 0x20u);
      v47 = v53;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v47, -1, -1);
      MEMORY[0x1C3B7B478](v42, -1, -1);

      v50(v54, v3);
    }
    else
    {

      v29(v7, v3);
    }
    result = swift_release();
    v33 = v56;
  }
  *(_BYTE *)a1 = v57;
  *(_QWORD *)(a1 + 8) = v33;
  *(_QWORD *)(a1 + 16) = v35;
  return result;
}

BOOL sub_1BDAE4D88(char a1)
{
  return a1 != 2;
}

void ICAccountObject<>.entityIdentifier.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  unsigned __int8 v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_objectID);
  if ((objc_msgSend(v4, sel_ic_isModernType) & 1) != 0)
    v5 = 0;
  else
    v5 = objc_msgSend(v4, sel_ic_isLegacyType);

  v6 = v2;
  if (objc_msgSend(v6, sel_isLocalAccount))
  {

    v7 = 0;
    v8 = 0;
  }
  else
  {
    v9 = objc_msgSend(v6, sel_emailAddress);
    if (v9)
    {
      v10 = v9;
      v7 = sub_1BDBFD6F8();
      v8 = v11;

    }
    else
    {

      v7 = 0;
      v8 = 0xE000000000000000;
    }
  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v5;
}

void NoteAccountObject.entityIdentifier.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  unsigned __int8 v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_objectID);
  v5 = objc_msgSend(v4, sel_ic_isModernType);
  if ((v5 & 1) == 0)
    objc_msgSend(v4, sel_ic_isLegacyType);

  v6 = v2;
  if (objc_msgSend(v6, sel_isLocalAccount))
  {

    v7 = 0;
    v8 = 0;
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_emailAddressForAccount_, v6);
    v7 = sub_1BDBFD6F8();
    v8 = v10;

  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v5 ^ 1;
}

void ICHashtag.entityIdentifier.getter(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(v1, sel_displayText);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BDBFD6F8();
    v7 = v6;

    *a1 = v5;
    a1[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_1BDAE4FC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  return v2 != 0;
}

void NotesAssistantFolderOption.entityIdentifier.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v3 = sub_1BDBFCE34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, sel_managedObjectID);
  if (objc_msgSend(v7, sel_ic_isModernType))
  {

    v9 = 0;
  }
  else
  {
    v10 = objc_msgSend(v7, sel_ic_isLegacyType);

    if (v10)
      v9 = 1;
    else
      v9 = 2;
  }
  MEMORY[0x1E0C80A78](v8);
  LOBYTE(v27[-2]) = v9;
  v11 = qword_1ED23B180;
  v12 = v1;
  if (v11 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED23B160);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = 2;
  if ((sub_1BDBB6748(v14, (uint64_t (*)(void))sub_1BDAE5A14) & 1) != 0)
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_release();
  }
  else
  {
    v32 = v27;
    v15 = sub_1BDBFDEF0();
    v16 = sub_1BDBFCE1C();
    v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v18 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v35 = v29;
      *(_DWORD *)v18 = 136315650;
      v28 = v17;
      v19 = sub_1BDBFE34C();
      v30 = v9;
      v33 = sub_1BDAE53FC(v19, v20, &v35);
      v31 = a1;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2048;
      v33 = 98;
      sub_1BDBFE100();
      *(_WORD *)(v18 + 22) = 2080;
      v27[1] = v18 + 24;
      v33 = 0;
      v34 = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v21 = objc_msgSend(v12, sel_description);
      sub_1BDBFD6F8();

      a1 = v31;
      sub_1BDBFD7DC();
      LOBYTE(v9) = v30;
      swift_bridgeObjectRelease();
      v33 = sub_1BDAE53FC(v33, v34, &v35);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, v16, (os_log_type_t)v28, "Failed assertion at %s:%lu: %s", (uint8_t *)v18, 0x20u);
      v22 = v29;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v22, -1, -1);
      MEMORY[0x1C3B7B478](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_release();
  }
  v23 = objc_msgSend(v12, sel_identifierURIPathComponent);
  v24 = sub_1BDBFD6F8();
  v26 = v25;

  *(_BYTE *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v24;
  *(_QWORD *)(a1 + 16) = v26;
}

uint64_t sub_1BDAE53EC()
{
  return swift_deallocObject();
}

uint64_t sub_1BDAE53FC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1BDAE54CC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1BDAE0BA0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1BDAE0BA0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1BDAE54CC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BDBFE10C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1BDAE5684(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1BDBFE418();
  if (!v8)
  {
    sub_1BDBFE520();
    __break(1u);
LABEL_17:
    result = sub_1BDBFE5A4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1BDAE5684(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BDAE5718(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BDAE588C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BDAE588C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BDAE5718(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BDB97348(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1BDBFE310();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1BDBFE520();
      __break(1u);
LABEL_10:
      v2 = sub_1BDBFD800();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1BDBFE5A4();
    __break(1u);
LABEL_14:
    result = sub_1BDBFE520();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BDAE588C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BAF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

BOOL sub_1BDAE59D8()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 16) != 2;
}

BOOL sub_1BDAE59E8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0)
    v2 = HIBYTE(v1) & 0xF;
  return v2 != 0;
}

uint64_t ICTTAudioDocument.orderedFragments.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t result;
  _QWORD *v16;

  v1 = objc_msgSend(v0, sel_document);
  v2 = objc_msgSend(v1, sel_rootObject);

  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
    return v3;
  }
  v5 = objc_msgSend(v4, sel_fragments);
  swift_unknownObjectRelease();
  v6 = objc_msgSend(v5, sel_allObjects);

  type metadata accessor for ICTTAudioRecording.Fragment();
  v7 = sub_1BDBFD9E0();

  v16 = (_QWORD *)v3;
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRetain();
    if ((v13 & 0x8000000000000000) != 0 || (v14 = (_QWORD *)v13, (v13 & 0x4000000000000000) != 0))
    {
      v14 = sub_1BDAE97BC(v13);
      swift_release();
    }
    v16 = v14;
    sub_1BDAE9B04((uint64_t *)&v16);
    swift_release();
    return (uint64_t)v16;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1BDBFE574();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_17;
LABEL_5:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1C3B79954](i, v7);
      else
        v10 = *(id *)(v7 + 8 * i + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_createdDate);

      if (v12)
      {
        sub_1BDBFE448();
        sub_1BDBFE478();
        sub_1BDBFE484();
        sub_1BDBFE454();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v13 = (unint64_t)v16;
    goto LABEL_18;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void ICTTAudioDocument.append(_:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = objc_msgSend(v1, sel_document);
  v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      v6 = objc_msgSend(v5, sel_fragments);
      swift_unknownObjectRelease();
      objc_msgSend(v6, sel_addObject_, a1);

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void ICTTAudioDocument.recordingSummary.setter(void *a1)
{
  sub_1BDAE7E84(a1, (SEL *)&selRef_setSummary_);
}

id ICTTAudioDocument.recordingSummary.getter()
{
  return sub_1BDAE7C54((SEL *)&selRef_summary);
}

uint64_t ICTTAudioDocument.root.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_document);
  v2 = objc_msgSend(v1, sel_rootObject);

  if (v2)
  {
    objc_opt_self();
    result = swift_dynamicCastObjCClass();
    if (result)
      return result;
    swift_unknownObjectRelease();
  }
  return 0;
}

void ICTTAudioDocument.topLineSummary.setter(void *a1)
{
  sub_1BDAE7E84(a1, (SEL *)&selRef_setTopLineSummary_);
}

id ICTTAudioDocument.topLineSummary.getter()
{
  return sub_1BDAE7C54((SEL *)&selRef_topLineSummary);
}

void *ICTTAudioDocument.fragment(for:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[6];

  v3 = objc_msgSend(v1, sel_document);
  v4 = objc_msgSend(v3, sel_rootObject);

  if (!v4)
    return 0;
  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v6 = objc_msgSend(v5, sel_fragments);
  swift_unknownObjectRelease();
  v7 = objc_msgSend(v6, sel_allObjects);

  type metadata accessor for ICTTAudioRecording.Fragment();
  v8 = sub_1BDBFD9E0();

  MEMORY[0x1E0C80A78](v9);
  v12[2] = a1;
  v10 = sub_1BDAE7988(sub_1BDAEA93C, (uint64_t)v12, v8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BDAE5F44(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v17 = sub_1BDBFCB40();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    if (!v7)
      return v8;
    v18 = MEMORY[0x1E0DEE9D8];
    result = sub_1BDB22630(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v16 = v2;
    v10 = 0;
    v8 = v18;
    v2 = a1 & 0xC000000000000001;
    while (v7 != v10)
    {
      if (v2)
        v11 = (id)MEMORY[0x1C3B79954](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_identity, v16);
      sub_1BDBFCB10();

      v18 = v8;
      v15 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BDB22630(v14 > 1, v15 + 1, 1);
        v8 = v18;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, v6, v17);
      if (v7 == v10)
        return v8;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v7 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDAE6110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50BB00);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50BB00);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id ICTTAudioDocument.init(replicaID:compatibleDocument:)(uint64_t a1, void *a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_1BDBFCAF8();
  v6 = objc_msgSend(v4, sel_initWithReplicaID_compatibleDocument_, v5, a2);

  v7 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

uint64_t ICTTAudioDocument.init(replicaID:compatibleDocument:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t result;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  char *v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t, uint64_t);
  objc_super v32;

  v3 = v2;
  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - v14;
  if (a2)
  {
    *(_QWORD *)&v3[OBJC_IVAR___ICTTAudioDocument_document] = a2;
LABEL_9:
    v32.receiver = v3;
    v32.super_class = (Class)ICTTAudioDocument;
    v29 = objc_msgSendSuper2(&v32, sel_init, v30);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    return (uint64_t)v29;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v30 - v14, a1, v6);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v31(v15, 0, 1, v6);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v17 = v16(v15, 1, v6);
  v30 = v3;
  if (v17 == 1)
  {
    v18 = 0;
  }
  else
  {
    v18 = (void *)sub_1BDBFCAF8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  v19 = objc_msgSend(objc_allocWithZone((Class)ICCRTTCompatibleDocument), sel_initWithReplica_, v18);

  v20 = objc_msgSend((id)objc_opt_self(), sel_TTZero);
  if (v20)
  {
    v21 = v20;
    sub_1BDBFCB10();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
    v31(v13, 0, 1, v6);
    result = v16(v13, 1, v6);
    if ((_DWORD)result != 1)
    {
      v23 = objc_allocWithZone((Class)ICTTAudioRecording);
      v24 = v19;
      v25 = (void *)sub_1BDBFCAF8();
      v26 = objc_msgSend(v23, sel_initWithDocument_identity_, v24, v25);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v27 = v24;
      objc_msgSend(v27, sel_setRootObject_, v26);

      v28 = v30;
      *(_QWORD *)&v30[OBJC_IVAR___ICTTAudioDocument_document] = v27;

      goto LABEL_9;
    }
  }
  else
  {
    result = v31(v13, 1, 1, v6);
  }
  __break(1u);
  return result;
}

uint64_t ICTTAudioDocument.archivedData()()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_document);
  v2 = objc_msgSend(v1, sel_archivedData);

  v3 = sub_1BDBFC990();
  return v3;
}

id sub_1BDAE66D8()
{
  void *ObjCClassFromMetadata;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[4];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B920);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v1 = (void *)sub_1BDBFC978();
  v2 = (void *)sub_1BDBFCAF8();
  v3 = objc_msgSend(ObjCClassFromMetadata, sel_unarchiveFromData_replica_, v1, v2);

  if (!v3)
    return 0;
  v11[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BBC0);
  v11[0] = v3;
  v4 = v3;
  v5 = (void *)sub_1BDADB6B8((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = v5;
  v8 = (void *)sub_1BDBFCAF8();
  v9 = objc_msgSend(v6, sel_initWithReplicaID_compatibleDocument_, v8, v7, v11[0]);

  return v9;
}

id ICTTAudioDocument.merge(withMergeableData:replicaID:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1BDBFC978();
  v4 = (void *)sub_1BDBFCAF8();
  v5 = objc_msgSend(v2, sel_unarchiveFromData_replicaID_, v3, v4);

  if (v5)
  {
    v6 = objc_msgSend(v1, sel_document);
    v7 = objc_msgSend(v5, sel_document);
    v8 = objc_msgSend(v6, sel_mergeWithDocument_, v7);

  }
  else
  {
    if (qword_1EF50AFD0 != -1)
      swift_once();
    v9 = sub_1BDBFCE34();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EF50BB00);
    v7 = sub_1BDBFCE1C();
    v10 = sub_1BDBFDEF0();
    if (os_log_type_enabled(v7, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BD918000, v7, v10, "could not unarchive audio document", v11, 2u);
      MEMORY[0x1C3B7B478](v11, -1, -1);
    }
    v8 = 0;
  }

  return v8;
}

uint64_t ICTTAudioDocument.orderedFragmentUUIDs.getter()
{
  unint64_t v0;
  uint64_t v1;

  v0 = ICTTAudioDocument.orderedFragments.getter();
  v1 = sub_1BDAE5F44(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1BDAE6C3C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char v24;
  NSObject *v25;
  void (*v26)(char *, NSObject *, uint64_t);
  char *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  id v43;
  char *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  NSObject *v49;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v3);
  v49 = ((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1BDBFCB40();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - v9;
  v45 = v1;
  v11 = objc_msgSend(v1, sel_document);
  v12 = objc_msgSend(v11, sel_rootObject);

  if (!v12)
    goto LABEL_23;
  objc_opt_self();
  v13 = (void *)swift_dynamicCastObjCClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
LABEL_23:
    if (qword_1EF50AFD0 != -1)
      swift_once();
    v39 = sub_1BDBFCE34();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EF50BB00);
    v49 = sub_1BDBFCE1C();
    v40 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v49, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_1BD918000, v49, v40, "Cannot update fragment identities after load because fragments are unavailable", v41, 2u);
      MEMORY[0x1C3B7B478](v41, -1, -1);
    }

    return;
  }
  v43 = objc_msgSend(v13, sel_fragments);
  swift_unknownObjectRelease();
  v14 = ICTTAudioDocument.orderedFragments.getter();
  if (v14 >> 62)
  {
    v15 = sub_1BDBFE574();
    if (v15)
      goto LABEL_5;
LABEL_29:

    swift_bridgeObjectRelease();
    return;
  }
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
    goto LABEL_29;
LABEL_5:
  if (v15 >= 1)
  {
    v16 = 0;
    v46 = a1;
    v47 = v14 & 0xC000000000000001;
    v48 = v14;
    v42 = v6;
    while (1)
    {
      v17 = v47 ? (id)MEMORY[0x1C3B79954](v16, v14) : *(id *)(v14 + 8 * v16 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_identity, v42);
      sub_1BDBFCB10();

      v20 = sub_1BDBFCAEC();
      v22 = v21;
      v23 = *(void (**)(char *, uint64_t))(v6 + 8);
      v23(v10, v5);
      if (!*(_QWORD *)(a1 + 16))
        break;
      sub_1BDAC358C(v20, v22);
      if ((v24 & 1) == 0)
        break;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v25 = v49;
      sub_1BDBFCAE0();
      a1 = v46;
      swift_bridgeObjectRelease_n();
      if ((*(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v6 + 48))(v25, 1, v5) == 1)
        goto LABEL_17;
      v26 = *(void (**)(char *, NSObject *, uint64_t))(v6 + 32);
      v27 = v44;
      v26(v44, v25, v5);
      type metadata accessor for ICTTAudioRecording.Fragment();
      v28 = objc_msgSend(v45, sel_document);
      v29 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v30 = (void *)sub_1BDBFCAF8();
      v31 = objc_msgSend(v29, sel_initWithDocument_identity_, v28, v30);

      sub_1BDAEAAD0(v18, v31);
      v32 = v43;
      objc_msgSend(v43, sel_removeObject_, v18);
      objc_msgSend(v32, sel_addObject_, v31);

      a1 = v46;
      v33 = v27;
      v6 = v42;
      v23(v33, v5);
LABEL_8:
      ++v16;
      v14 = v48;
      if (v15 == v16)
        goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    v25 = v49;
    (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v49, 1, 1, v5);
LABEL_17:
    sub_1BDAC350C((uint64_t)v25, &qword_1ED23AD30);
    if (qword_1EF50AFD0 != -1)
      swift_once();
    v34 = sub_1BDBFCE34();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EF50BB00);
    v35 = sub_1BDBFCE1C();
    v36 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1BD918000, v35, v36, "Cannot update fragment identity after load because mapped identity is missing", v37, 2u);
      v38 = v37;
      a1 = v46;
      MEMORY[0x1C3B7B478](v38, -1, -1);

    }
    else
    {

    }
    goto LABEL_8;
  }
  __break(1u);
}

id ICTTAudioDocument.fragments.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_msgSend(v0, sel_document);
  v2 = objc_msgSend(v1, sel_rootObject);

  if (!v2)
    return 0;
  objc_opt_self();
  v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v4 = objc_msgSend(v3, sel_fragments);
  swift_unknownObjectRelease();
  return v4;
}

unint64_t ICTTAudioDocument.transcriptAsPlainText.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;

  v0 = sub_1BDBFC444();
  v29 = *(_QWORD *)(v0 - 8);
  v30 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0DEE9D8];
  result = ICTTAudioDocument.orderedFragments.getter();
  v4 = result;
  if (result >> 62)
  {
    result = sub_1BDBFE574();
    v5 = result;
    if (result)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
    goto LABEL_12;
  }
  v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    goto LABEL_11;
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  v6 = 0;
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1C3B79954](v6, v4);
    else
      v7 = *(id *)(v4 + 8 * v6 + 32);
    v8 = v7;
    ++v6;
    v9 = objc_msgSend(v7, sel_transcript);
    v10 = objc_msgSend(v9, sel_allObjects);

    type metadata accessor for ICTTTranscriptSegment();
    v11 = sub_1BDBFD9E0();

    sub_1BDBC4164(v11);
  }
  while (v5 != v6);
  swift_bridgeObjectRelease();
  v12 = v35;
LABEL_12:
  v33 = 0;
  v34 = 0xE000000000000000;
  v28 = v12;
  if (v12 >> 62)
    goto LABEL_22;
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v13; v13 = sub_1BDBFE574())
  {
    v14 = 0;
    v15 = v28 + 32;
    v16 = v13 - 1;
    do
    {
      v17 = *(id *)(v15 + 8 * v14);
      v18 = objc_msgSend(v17, sel_text);
      if (v18)
      {
        v19 = v18;
        sub_1BDBFC438();
        v20 = (void *)sub_1BDBFC3FC();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v2, v30);
        v21 = objc_msgSend(v19, sel_stringByTrimmingCharactersInSet_, v20);

        v22 = sub_1BDBFD6F8();
        v24 = v23;

        v31 = v22;
        v32 = v24;
        v31 = sub_1BDBFD8A8();
        v32 = v25;
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD7DC();

        swift_bridgeObjectRelease();
        if (v16 == v14)
          goto LABEL_23;
      }
      else
      {

        if (v16 == v14)
          goto LABEL_23;
      }
      ++v14;
    }
    while (!__OFADD__(v14, 1));
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain_n();
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
  v26 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v27 = sub_1BDBFD7A0();
  swift_bridgeObjectRelease();
  if (v27 > 0)
  {
    sub_1BDAE7664();
    swift_bridgeObjectRelease();
    return v33;
  }
  return v26;
}

uint64_t sub_1BDAE7664()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((*v0 & 0xFFFFFFFFFFFFLL) != 0)
    {
LABEL_5:
      sub_1BDBFD7AC();
      return sub_1BDBFD7E8();
    }
    __break(1u);
  }
  if ((v1 & 0xF00000000000000) != 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

uint64_t ICTTAudioDocument.transcriptVersion.getter()
{
  unint64_t v0;
  uint64_t result;
  id v2;
  void *v3;
  id v4;

  v0 = ICTTAudioDocument.orderedFragments.getter();
  if (!(v0 >> 62))
  {
    result = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    v3 = 0;
    goto LABEL_9;
  }
  result = sub_1BDBFE574();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v0 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1C3B79954](0, v0);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(v0 + 32);
LABEL_6:
    v3 = v2;
LABEL_9:
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v3, sel_transcriptVersion);

    return (uint64_t)v4;
  }
  __break(1u);
  return result;
}

void __swiftcall ICTTAudioDocument.init()(ICTTAudioDocument *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void ICTTAudioDocument.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t static ICTTAudioDocument.currentTranscriptVersion.getter()
{
  return 1;
}

uint64_t static ICTTAudioDocument.currentSummaryVersion.getter()
{
  return 0;
}

uint64_t sub_1BDAE78C8(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char v7;
  uint64_t v9;

  v2 = sub_1BDBFCB40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*a1, sel_identity);
  sub_1BDBFCB10();

  v7 = sub_1BDBFCB04();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

void *sub_1BDAE7988(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1BDBFE574())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B79954](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void (*ICTTAudioDocument.topLineSummary.modify(_QWORD *a1))(id *a1, char a2)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;

  a1[1] = v1;
  v3 = objc_msgSend(v1, sel_document);
  v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5)
      swift_unknownObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v5, sel_topLineSummary);

  *a1 = v6;
  return sub_1BDAE7B6C;
}

void sub_1BDAE7B6C(id *a1, char a2)
{
  sub_1BDAE8008(a1, a2, (SEL *)&selRef_setTopLineSummary_);
}

void (*ICTTAudioDocument.recordingSummary.modify(_QWORD *a1))(id *a1, char a2)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;

  a1[1] = v1;
  v3 = objc_msgSend(v1, sel_document);
  v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5)
      swift_unknownObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v5, sel_summary);

  *a1 = v6;
  return sub_1BDAE7C3C;
}

void sub_1BDAE7C3C(id *a1, char a2)
{
  sub_1BDAE8008(a1, a2, (SEL *)&selRef_setSummary_);
}

id ICTTAudioDocument.recordingSummaryVersion.getter()
{
  return sub_1BDAE7C54((SEL *)&selRef_summaryVersion);
}

id sub_1BDAE7C54(SEL *a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = objc_msgSend(v1, sel_document);
  v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5)
      swift_unknownObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v5, *a1);

  return v6;
}

void sub_1BDAE7D04(id *a1@<X0>, SEL *a2@<X3>, _QWORD *a3@<X8>)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v5 = objc_msgSend(*a1, sel_document);
  v6 = objc_msgSend(v5, sel_rootObject);

  if (v6)
  {
    objc_opt_self();
    v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7)
      swift_unknownObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v7, *a2);

  *a3 = v8;
}

void sub_1BDAE7DB8(id *a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v6 = *a2;
  v10 = *a1;
  v7 = objc_msgSend(v6, sel_document);
  v8 = objc_msgSend(v7, sel_rootObject);

  if (v8)
  {
    objc_opt_self();
    v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9)
      swift_unknownObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v9, *a5, v10);

}

void ICTTAudioDocument.recordingSummaryVersion.setter(void *a1)
{
  sub_1BDAE7E84(a1, (SEL *)&selRef_setSummaryVersion_);
}

void sub_1BDAE7E84(void *a1, SEL *a2)
{
  void *v2;
  id v4;
  id v5;
  void *v6;

  v4 = objc_msgSend(v2, sel_document);
  v5 = objc_msgSend(v4, sel_rootObject);

  if (v5)
  {
    objc_opt_self();
    v6 = (void *)swift_dynamicCastObjCClass();
    if (!v6)
      swift_unknownObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v6, *a2, a1);

}

void (*ICTTAudioDocument.recordingSummaryVersion.modify(_QWORD *a1))(id *a1, char a2)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;

  a1[1] = v1;
  v3 = objc_msgSend(v1, sel_document);
  v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5)
      swift_unknownObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v5, sel_summaryVersion);

  *a1 = v6;
  return sub_1BDAE7FFC;
}

void sub_1BDAE7FFC(id *a1, char a2)
{
  sub_1BDAE8008(a1, a2, (SEL *)&selRef_setSummaryVersion_);
}

void sub_1BDAE8008(id *a1, char a2, SEL *a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v4 = *a1;
  v5 = a1[1];
  if ((a2 & 1) == 0)
  {
    v9 = objc_msgSend(a1[1], sel_document);
    v10 = objc_msgSend(v9, sel_rootObject);

    if (v10)
    {
      objc_opt_self();
      v11 = (void *)swift_dynamicCastObjCClass();
      if (v11)
      {
LABEL_11:
        v12 = v11;
        objc_msgSend(v11, *a3, v4);
        goto LABEL_12;
      }
      swift_unknownObjectRelease();
    }
    v11 = 0;
    goto LABEL_11;
  }
  v4 = v4;
  v6 = objc_msgSend(v5, sel_document);
  v7 = objc_msgSend(v6, sel_rootObject);

  if (!v7)
  {
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  objc_opt_self();
  v8 = (void *)swift_dynamicCastObjCClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
LABEL_6:
  v12 = v8;
  objc_msgSend(v8, *a3, v4);

LABEL_12:
}

id ICTTAudioDocument.isCallRecording.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_msgSend(v0, sel_document);
  v2 = objc_msgSend(v1, sel_rootObject);

  if (v2)
  {
    objc_opt_self();
    v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
    {
      v4 = objc_msgSend(v3, sel_callRecording);
      swift_unknownObjectRelease();
      if (v4)
      {
        v2 = objc_msgSend(v4, sel_BOOLValue);

        return v2;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return v2;
}

void ICTTAudioDocument.isCallRecording.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = objc_msgSend(v1, sel_document);
  v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    objc_opt_self();
    v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      v6 = (void *)v5;
      v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a1 & 1);
      objc_msgSend(v6, sel_setCallRecording_, v7);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t ICTTAudioDocument.transcriptViewModelSegments.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t i;
  unint64_t v11;
  double v12;
  double v13;
  double v14;
  id v15;
  BOOL v16;
  unint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t result;
  double v35;
  id v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  _BYTE *v49;
  uint64_t v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _QWORD *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CEC0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for TranscriptViewModelSegment(0);
  v78 = *(_QWORD *)(v74 - 8);
  v3 = MEMORY[0x1E0C80A78](v74);
  v73 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v72 = (char *)&v60 - v6;
  MEMORY[0x1E0C80A78](v5);
  v68 = (uint64_t)&v60 - v7;
  v84 = MEMORY[0x1E0DEE9D8];
  v8 = ICTTAudioDocument.orderedFragments.getter();
  if (v8 >> 62)
    goto LABEL_50;
  for (i = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1BDBFE574())
  {
    v11 = 0;
    v64 = 0;
    v67 = v8 & 0xC000000000000001;
    v63 = v8 & 0xFFFFFFFFFFFFFF8;
    v62 = v8 + 32;
    v61 = &v83;
    v12 = 0.0;
    *(_QWORD *)&v9 = 138412290;
    v60 = v9;
    v13 = 0.0;
    v14 = 0.0;
    v71 = v2;
    v66 = v8;
    v65 = i;
    while (v67)
    {
      v15 = (id)MEMORY[0x1C3B79954](v11, v8);
      v16 = __OFADD__(v11, 1);
      v17 = v11 + 1;
      if (v16)
        goto LABEL_48;
LABEL_13:
      v69 = v15;
      v70 = v17;
      v18 = objc_msgSend(v15, sel_transcript, (_QWORD)v60, *((_QWORD *)&v60 + 1), v61);
      v19 = objc_msgSend(v18, sel_allObjects);

      type metadata accessor for ICTTTranscriptSegment();
      v8 = sub_1BDBFD9E0();

      if (v8 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v20 = sub_1BDBFE574();
        swift_bridgeObjectRelease();
        if (v20)
        {
LABEL_15:
          v77 = v8 & 0xC000000000000001;
          v21 = 4;
          v81 = MEMORY[0x1E0DEE9D8];
          v75 = v20;
          v76 = v8;
          while (1)
          {
            if (v77)
              v23 = (id)MEMORY[0x1C3B79954](v21 - 4, v8);
            else
              v23 = *(id *)(v8 + 8 * v21);
            v24 = v23;
            v25 = v21 - 3;
            if (__OFADD__(v21 - 4, 1))
            {
              __break(1u);
              goto LABEL_48;
            }
            v26 = objc_msgSend(v23, sel_text);
            if (!v26)
              break;
            v27 = v26;
            v82 = 0;
            v83 = 0;
            sub_1BDBFD6EC();

            v28 = v83;
            if (!v83)
              break;
            v29 = v82;
            v30 = objc_msgSend(v24, sel_timestamp);
            if (!v30)
            {
              swift_bridgeObjectRelease();
              break;
            }
            v31 = v30;
            v32 = objc_msgSend(v24, sel_duration);
            if (!v32)
            {
              swift_bridgeObjectRelease();

              break;
            }
            v33 = v32;
            v82 = 0;
            LOBYTE(v83) = 1;
            result = MEMORY[0x1C3B792AC](v31, &v82);
            if ((v83 & 1) != 0)
            {
              __break(1u);
LABEL_53:
              __break(1u);
              return result;
            }
            v80 = v21;
            v35 = *(double *)&v82;
            v82 = 0;
            LOBYTE(v83) = 1;
            result = MEMORY[0x1C3B792AC](v33, &v82);
            if ((v83 & 1) != 0)
              goto LABEL_53;
            v12 = *(double *)&v82;
            v36 = objc_msgSend(v24, sel_speaker);
            v79 = v25;
            if (v36)
            {
              v82 = 0;
              v83 = 0;
              sub_1BDBFD6EC();

              v36 = v82;
              v37 = v83;
            }
            else
            {
              v37 = 0;
            }
            v13 = v14 + v35;
            v38 = (int *)v74;
            v39 = (uint64_t)v72;
            v40 = &v72[*(int *)(v74 + 32)];
            _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
            v41 = (_QWORD *)(v39 + v38[5]);
            *v41 = v29;
            v41[1] = v28;
            *(double *)(v39 + v38[6]) = v13;
            *(double *)(v39 + v38[7]) = v12;
            *(_QWORD *)v40 = v36;
            *((_QWORD *)v40 + 1) = v37;
            v2 = v71;
            sub_1BDAEA978(v39, (uint64_t)v71);

            v42 = v78;
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56))(v2, 0, 1, v38);

            if ((*(unsigned int (**)(char *, uint64_t, int *))(v42 + 48))(v2, 1, v38) == 1)
            {
              sub_1BDAC350C((uint64_t)v2, &qword_1EF50CEC0);
              v22 = v75;
              v8 = v76;
            }
            else
            {
              v43 = v68;
              sub_1BDAEA978((uint64_t)v2, v68);
              sub_1BDAEA978(v43, v73);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v22 = v75;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                v81 = sub_1BDBCC35C(0, *(_QWORD *)(v81 + 16) + 1, 1, v81);
              v46 = *(_QWORD *)(v81 + 16);
              v45 = *(_QWORD *)(v81 + 24);
              v8 = v76;
              if (v46 >= v45 >> 1)
                v81 = sub_1BDBCC35C(v45 > 1, v46 + 1, 1, v81);
              v47 = v81;
              *(_QWORD *)(v81 + 16) = v46 + 1;
              sub_1BDAEA978(v73, v47+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v46);
            }
            v21 = v80 + 1;
            if (v79 == v22)
              goto LABEL_45;
          }
          sub_1BDAC7614();
          v48 = (void *)swift_allocError();
          *v49 = 11;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();

          if (qword_1EF50AFD0 != -1)
            swift_once();
          v50 = sub_1BDBFCE34();
          __swift_project_value_buffer(v50, (uint64_t)qword_1EF50BB00);
          v51 = v48;
          v52 = v48;
          v53 = sub_1BDBFCE1C();
          v54 = sub_1BDBFDEE4();
          if (os_log_type_enabled(v53, v54))
          {
            v55 = (uint8_t *)swift_slowAlloc();
            v56 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v55 = v60;
            v57 = v48;
            v58 = _swift_stdlib_bridgeErrorToNSError();
            v82 = (void *)v58;
            sub_1BDBFE100();
            *v56 = v58;

            _os_log_impl(&dword_1BD918000, v53, v54, "%@", v55, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
            swift_arrayDestroy();
            MEMORY[0x1C3B7B478](v56, -1, -1);
            MEMORY[0x1C3B7B478](v55, -1, -1);

          }
          else
          {

          }
          v64 = 0;
          goto LABEL_6;
        }
      }
      else
      {
        v20 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v20)
          goto LABEL_15;
      }
      v81 = MEMORY[0x1E0DEE9D8];
LABEL_45:
      swift_bridgeObjectRelease_n();
      v59 = swift_bridgeObjectRetain();
      sub_1BDBC433C(v59);
      swift_bridgeObjectRelease();

      v14 = v14 + v12 + v13;
LABEL_6:
      v11 = v70;
      v8 = v66;
      if (v70 == v65)
      {
        swift_bridgeObjectRelease();
        return v84;
      }
    }
    if (v11 >= *(_QWORD *)(v63 + 16))
      goto LABEL_49;
    v15 = *(id *)(v62 + 8 * v11);
    v16 = __OFADD__(v11, 1);
    v17 = v11 + 1;
    if (!v16)
      goto LABEL_13;
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    ;
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

id ICTTAudioDocument.callType.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, sel_document);
  v2 = objc_msgSend(v1, sel_rootObject);

  if (v2)
  {
    objc_opt_self();
    v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
    {
      v4 = objc_msgSend(v3, sel_callType);
      swift_unknownObjectRelease();
      if (v4)
      {
        v5 = objc_msgSend(v4, sel_unsignedIntegerValue);

        return v5;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

void ICTTAudioDocument.callType.setter(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = objc_msgSend(v1, sel_document);
  v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    objc_opt_self();
    v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      v6 = (void *)v5;
      v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, a1);
      objc_msgSend(v6, sel_setCallType_, v7);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

id ICTTAudioRecording.init(identity:fields:)(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_1BDBFCAF8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BBA0);
  v4 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_initWithIdentity_fields_, v3, v4);

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  objc_super v9;

  v2 = v1;
  v4 = (void *)sub_1BDBFCAF8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BBA0);
  v5 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  v9.receiver = v2;
  v9.super_class = (Class)ICTTAudioRecording;
  v6 = objc_msgSendSuper2(&v9, sel_initWithIdentity_fields_, v4, v5);

  v7 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

void __swiftcall ICTTAudioRecording.init(iccrCoder:)(ICTTAudioRecording_optional *__return_ptr retstr, ICCRCoder iccrCoder)
{
  Class isa;

  isa = iccrCoder.super.isa;
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithICCRCoder_, iccrCoder.super.isa);

}

id ICTTAudioRecording.init(iccrCoder:)(void *a1)
{
  id v2;
  objc_super v4;

  v4.super_class = (Class)ICTTAudioRecording;
  v2 = objc_msgSendSuper2(&v4, sel_initWithICCRCoder_, a1);

  return v2;
}

id sub_1BDAE92D0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v3;

  a3();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BBA0);
  v3 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  return v3;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC8document8identityAESo0A8DocumentC_10Foundation4UUIDVtcfC_0(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;

  v5 = objc_allocWithZone(v2);
  v6 = objc_msgSend(a1, sel_document);
  v7 = (void *)sub_1BDBFCAF8();
  v8 = objc_msgSend(v5, sel_initWithDocument_identity_, v6, v7);

  v9 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a2, v9);
  return v8;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC8identity6fieldsAE10Foundation4UUIDV_SDySSSo12ICCRDataType_pGtcfC_0(uint64_t a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_1BDBFCAF8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BBA0);
  v5 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithIdentity_fields_, v4, v5);

  v7 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC8identity6fieldsAE10Foundation4UUIDV_SDySSSo12ICCRDataType_pGtcfc_0(uint64_t a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  objc_super v10;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = (void *)sub_1BDBFCAF8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BBA0);
  v6 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  v10.receiver = v2;
  v10.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v10, sel_initWithIdentity_fields_, v5, v6);

  v8 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id ICTTTranscriptSegment.__allocating_init(iccrCoder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithICCRCoder_, a1);

  return v3;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC9iccrCoderAESgSo9ICCRCoderC_tcfc_0(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithICCRCoder_, a1);

  return v3;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_1BDAE97BC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAF0);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1BDBD051C((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BDAE98B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

_QWORD *sub_1BDAE9A20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B948);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_1BDAEC588((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BDAE1514();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BDAE9B04(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BDBBCF68();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BDAE9B7C(v6);
  return sub_1BDBFE454();
}

void sub_1BDAE9B7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  _BOOL8 v22;
  uint64_t v23;
  void *v24;
  _BOOL8 v25;
  char *v26;
  BOOL v27;
  _BOOL4 v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void **v117;
  uint64_t v118;
  uint64_t v119;

  v3 = a1[1];
  v4 = sub_1BDBFE748();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      sub_1BDAEA3F0(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v116 = v3;
  v112 = v4;
  v110 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v119 = MEMORY[0x1E0DEE9D8];
    v117 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_118:
      if (v12 >= 2)
      {
        v104 = *v110;
        do
        {
          v105 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v104)
            goto LABEL_159;
          v106 = *(_QWORD *)&v8[16 * v105 + 32];
          v107 = *(_QWORD *)&v8[16 * v12 + 24];
          sub_1BDAEA540((id *)(v104 + 8 * v106), (id *)(v104 + 8 * *(_QWORD *)&v8[16 * v12 + 16]), v104 + 8 * v107, v117);
          if (v1)
            break;
          if (v107 < v106)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1BDBBCF04((uint64_t)v8);
          if (v105 >= *((_QWORD *)v8 + 2))
            goto LABEL_149;
          v108 = &v8[16 * v105 + 32];
          *(_QWORD *)v108 = v106;
          *((_QWORD *)v108 + 1) = v107;
          v109 = *((_QWORD *)v8 + 2);
          if (v12 > v109)
            goto LABEL_150;
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v109 - v12));
          *((_QWORD *)v8 + 2) = v109 - 1;
          v12 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_129:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BDBFD9F8();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for ICTTAudioRecording.Fragment();
    v7 = sub_1BDBFDA4C();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v3 = v116;
    v117 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v119 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v111 = *a1 - 8;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = &selRef_randomObject_;
  v118 = v10;
  while (1)
  {
    v13 = v9++;
    v115 = v8;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = *(void **)(v10 + 8 * v13);
    v15 = *(id *)(v10 + 8 * v9);
    v16 = v14;
    v17 = objc_msgSend(v15, v11[246]);
    if (!v17)
    {
      v18 = v16;
      goto LABEL_22;
    }
    v18 = v17;
    v19 = objc_msgSend(v16, v11[246]);
    if (!v19)
      break;
    v20 = v19;
    v21 = objc_msgSend(v18, sel_compare_, v19);

    v22 = v21 == (id)-1;
    v23 = v13 + 2;
    v8 = v115;
    v10 = v118;
    v11 = &selRef_randomObject_;
    if (v13 + 2 < v116)
      goto LABEL_29;
LABEL_37:
    v9 = v23;
    if (v22)
      goto LABEL_38;
LABEL_46:
    v41 = v116;
    if (v9 < v116)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v112)
      {
        if (__OFADD__(v13, v112))
          goto LABEL_153;
        if (v13 + v112 < v116)
          v41 = v13 + v112;
        if (v41 < v13)
        {
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        if (v9 != v41)
        {
          v42 = v111 + 8 * v9;
          v113 = v41;
          v114 = v13;
          do
          {
            v44 = *(void **)(v10 + 8 * v9);
            v45 = v42;
            while (1)
            {
              v46 = *(void **)v45;
              v47 = v44;
              v48 = v46;
              v49 = objc_msgSend(v47, sel_createdDate);
              if (!v49)
              {
                v43 = v48;
                goto LABEL_56;
              }
              v43 = v49;
              v50 = objc_msgSend(v48, sel_createdDate);
              if (!v50)
                break;
              v51 = v50;
              v52 = objc_msgSend(v43, sel_compare_, v50);

              if (v52 != (id)-1)
                goto LABEL_57;
              v10 = v118;
              if (!v118)
                goto LABEL_156;
              v53 = *(void **)v45;
              v44 = *(void **)(v45 + 8);
              *(_QWORD *)v45 = v44;
              *(_QWORD *)(v45 + 8) = v53;
              v45 -= 8;
              if (v9 == ++v13)
                goto LABEL_58;
            }

            v47 = v48;
LABEL_56:

LABEL_57:
            v10 = v118;
LABEL_58:
            ++v9;
            v42 += 8;
            v13 = v114;
          }
          while (v9 != v113);
          v9 = v113;
          v8 = v115;
        }
      }
    }
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1BDBBCAF8(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v55 = *((_QWORD *)v8 + 2);
    v54 = *((_QWORD *)v8 + 3);
    v12 = v55 + 1;
    v10 = v118;
    if (v55 >= v54 >> 1)
    {
      v103 = sub_1BDBBCAF8((char *)(v54 > 1), v55 + 1, 1, v8);
      v10 = v118;
      v8 = v103;
    }
    *((_QWORD *)v8 + 2) = v12;
    v56 = v8 + 32;
    v57 = &v8[16 * v55 + 32];
    *(_QWORD *)v57 = v13;
    *((_QWORD *)v57 + 1) = v9;
    if (v55)
    {
      while (1)
      {
        v58 = v12 - 1;
        if (v12 >= 4)
        {
          v63 = &v56[16 * v12];
          v64 = *((_QWORD *)v63 - 8);
          v65 = *((_QWORD *)v63 - 7);
          v69 = __OFSUB__(v65, v64);
          v66 = v65 - v64;
          if (v69)
            goto LABEL_135;
          v68 = *((_QWORD *)v63 - 6);
          v67 = *((_QWORD *)v63 - 5);
          v69 = __OFSUB__(v67, v68);
          v61 = v67 - v68;
          v62 = v69;
          if (v69)
            goto LABEL_136;
          v70 = v12 - 2;
          v71 = &v56[16 * v12 - 32];
          v73 = *(_QWORD *)v71;
          v72 = *((_QWORD *)v71 + 1);
          v69 = __OFSUB__(v72, v73);
          v74 = v72 - v73;
          if (v69)
            goto LABEL_138;
          v69 = __OFADD__(v61, v74);
          v75 = v61 + v74;
          if (v69)
            goto LABEL_141;
          if (v75 >= v66)
          {
            v93 = &v56[16 * v58];
            v95 = *(_QWORD *)v93;
            v94 = *((_QWORD *)v93 + 1);
            v69 = __OFSUB__(v94, v95);
            v96 = v94 - v95;
            if (v69)
              goto LABEL_145;
            v86 = v61 < v96;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v87 = *((_QWORD *)v8 + 4);
            v88 = *((_QWORD *)v8 + 5);
            v69 = __OFSUB__(v88, v87);
            v80 = v88 - v87;
            v81 = v69;
            goto LABEL_99;
          }
          v60 = *((_QWORD *)v8 + 4);
          v59 = *((_QWORD *)v8 + 5);
          v69 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          v62 = v69;
        }
        if ((v62 & 1) != 0)
          goto LABEL_137;
        v70 = v12 - 2;
        v76 = &v56[16 * v12 - 32];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v79 = __OFSUB__(v77, v78);
        v80 = v77 - v78;
        v81 = v79;
        if (v79)
          goto LABEL_140;
        v82 = &v56[16 * v58];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v69 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v69)
          goto LABEL_143;
        if (__OFADD__(v80, v85))
          goto LABEL_144;
        if (v80 + v85 >= v61)
        {
          v86 = v61 < v85;
LABEL_105:
          if (v86)
            v58 = v70;
          goto LABEL_107;
        }
LABEL_99:
        if ((v81 & 1) != 0)
          goto LABEL_139;
        v89 = &v56[16 * v58];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v69 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v69)
          goto LABEL_142;
        if (v92 < v80)
          goto LABEL_14;
LABEL_107:
        v97 = v58 - 1;
        if (v58 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10)
          goto LABEL_157;
        v98 = &v56[16 * v97];
        v99 = *(_QWORD *)v98;
        v100 = &v56[16 * v58];
        v101 = *((_QWORD *)v100 + 1);
        sub_1BDAEA540((id *)(v10 + 8 * *(_QWORD *)v98), (id *)(v10 + 8 * *(_QWORD *)v100), v10 + 8 * v101, v117);
        if (v1)
          goto LABEL_129;
        if (v101 < v99)
          goto LABEL_132;
        if (v58 > *((_QWORD *)v8 + 2))
          goto LABEL_133;
        *(_QWORD *)v98 = v99;
        *(_QWORD *)&v56[16 * v97 + 8] = v101;
        v102 = *((_QWORD *)v8 + 2);
        if (v58 >= v102)
          goto LABEL_134;
        v12 = v102 - 1;
        memmove(&v56[16 * v58], v100 + 16, 16 * (v102 - 1 - v58));
        *((_QWORD *)v8 + 2) = v102 - 1;
        v10 = v118;
        if (v102 <= 2)
          goto LABEL_14;
      }
    }
    v12 = 1;
LABEL_14:
    v3 = v116;
    v11 = &selRef_randomObject_;
    if (v9 >= v116)
      goto LABEL_118;
  }

  v15 = v16;
  v11 = &selRef_randomObject_;
LABEL_22:

  v23 = v13 + 2;
  v8 = v115;
  if (v13 + 2 >= v116)
  {
    v9 = v13 + 2;
    v10 = v118;
    goto LABEL_46;
  }
  v22 = 0;
  v10 = v118;
  while (1)
  {
LABEL_29:
    v30 = *(void **)(v10 + 8 * v9);
    v31 = *(id *)(v10 + 8 * v23);
    v32 = v30;
    v33 = objc_msgSend(v31, v11[246]);
    if (!v33)
    {
      v34 = v32;
LABEL_33:

      v8 = v115;
      if (v22)
      {
        v10 = v118;
        goto LABEL_38;
      }
      goto LABEL_28;
    }
    v34 = v33;
    v35 = objc_msgSend(v32, v11[246]);
    if (!v35)
    {

      v31 = v32;
      v11 = &selRef_randomObject_;
      goto LABEL_33;
    }
    v24 = v35;
    v25 = v22;
    v26 = (char *)objc_msgSend(v34, sel_compare_, v35);

    v27 = v26 + 1 == 0;
    v22 = v25;
    v28 = !v27;
    v8 = v115;
    v11 = &selRef_randomObject_;
    if (v25 == v28)
      break;
LABEL_28:
    v29 = v23 + 1;
    v9 = v23;
    v23 = v29;
    v10 = v118;
    if (v29 >= v116)
    {
      v23 = v29;
      goto LABEL_37;
    }
  }
  v10 = v118;
  v9 = v23;
  if (!v22)
    goto LABEL_46;
LABEL_38:
  if (v23 >= v13)
  {
    if (v13 < v23)
    {
      v36 = (uint64_t *)(v111 + 8 * v23);
      v37 = v23;
      v38 = v13;
      v39 = (uint64_t *)(v10 + 8 * v13);
      do
      {
        if (v38 != --v37)
        {
          if (!v10)
            goto LABEL_158;
          v40 = *v39;
          *v39 = *v36;
          *v36 = v40;
        }
        ++v38;
        --v36;
        ++v39;
      }
      while (v38 < v37);
    }
    v9 = v23;
    goto LABEL_46;
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  sub_1BDBFE520();
  __break(1u);
}

void sub_1BDAEA3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v19;
  uint64_t v20;

  if (a3 != a2)
  {
    v4 = a3;
    v20 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v7 = *(void **)(v20 + 8 * v4);
      v8 = a1;
      v19 = v5;
      while (1)
      {
        v9 = *(void **)v5;
        v10 = v7;
        v11 = v9;
        v12 = objc_msgSend(v10, sel_createdDate);
        if (!v12)
          break;
        v6 = v12;
        v13 = objc_msgSend(v11, sel_createdDate);
        if (!v13)
        {

          v10 = v11;
          goto LABEL_5;
        }
        v14 = v13;
        v15 = objc_msgSend(v6, sel_compare_, v13);

        if (v15 != (id)-1)
          goto LABEL_6;
        if (!v20)
        {
          __break(1u);
          return;
        }
        v16 = *(void **)v5;
        v7 = *(void **)(v5 + 8);
        *(_QWORD *)v5 = v7;
        *(_QWORD *)(v5 + 8) = v16;
        v5 -= 8;
        if (v4 == ++v8)
          goto LABEL_6;
      }
      v6 = v11;
LABEL_5:

LABEL_6:
      ++v4;
      v5 = v19 + 8;
      if (v4 == a2)
        return;
      continue;
    }
  }
}

uint64_t sub_1BDAEA540(id *__src, id *a2, unint64_t a3, void **__dst)
{
  void **v4;
  id *v5;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id *v20;
  id v21;
  void *v22;
  id v23;
  id *v24;
  void **v25;
  id *v26;
  id *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  char *v35;
  BOOL v36;
  void **v37;
  uint64_t result;
  void **v39;
  id *v40;
  void **v41;
  id *v43;
  void **v44;
  void **v45;
  id *v46;

  v4 = __dst;
  v5 = a2;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v46 = __src;
  v45 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_55;
    if (__dst != a2 || &a2[v12] <= __dst)
      memmove(__dst, a2, 8 * v12);
    v25 = &v4[v12];
    v44 = v25;
    v46 = v5;
    v40 = __src;
    if (__src >= v5 || v10 < 8)
    {
LABEL_54:
      sub_1BDBBCBF0((void **)&v46, (const void **)&v45, &v44);
      return 1;
    }
    v26 = (id *)(a3 - 8);
    v27 = v5;
    v39 = v4;
    while (1)
    {
      v43 = v5;
      v28 = *--v27;
      v29 = *(v25 - 1);
      v30 = v28;
      v31 = objc_msgSend(v29, sel_createdDate);
      if (!v31)
        break;
      v32 = v31;
      v33 = objc_msgSend(v30, sel_createdDate);
      if (!v33)
      {

        v29 = v30;
        v4 = v39;
        goto LABEL_46;
      }
      v34 = v33;
      v35 = (char *)objc_msgSend(v32, sel_compare_, v33);

      v36 = v35 + 1 == 0;
      v4 = v39;
      v37 = v26 + 1;
      v5 = v43;
      if (v36)
      {
        if (v26 + 1 != v43 || v26 >= v43)
          *v26 = *v27;
        v46 = v27;
        goto LABEL_52;
      }
LABEL_47:
      v44 = v25 - 1;
      if (v37 < v25 || v26 >= v25 || v37 != v25)
        *v26 = *(v25 - 1);
      v27 = v5;
      --v25;
LABEL_52:
      if (v27 > v40)
      {
        --v26;
        v5 = v27;
        if (v25 > v4)
          continue;
      }
      goto LABEL_54;
    }
    v32 = v30;
LABEL_46:

    v37 = v26 + 1;
    goto LABEL_47;
  }
  if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
      memmove(__dst, __src, 8 * v9);
    v41 = &v4[v9];
    v44 = v41;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v13 = __src;
      while (1)
      {
        v14 = v4;
        v15 = *v4;
        v16 = *v5;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_createdDate);
        if (!v18)
          break;
        v19 = v18;
        v20 = v13;
        v21 = objc_msgSend(v17, sel_createdDate);
        if (!v21)
        {

          v16 = v17;
          goto LABEL_22;
        }
        v22 = v21;
        v23 = objc_msgSend(v19, sel_compare_, v21);

        v4 = v14;
        v13 = v20;
        if (v23 != (id)-1)
          goto LABEL_23;
        v24 = v5 + 1;
        if (v20 < v5 || v20 >= v24 || v20 != v5)
          *v20 = *v5;
LABEL_26:
        ++v13;
        if (v4 < v41)
        {
          v5 = v24;
          if ((unint64_t)v24 < a3)
            continue;
        }
        v46 = v13;
        goto LABEL_54;
      }
      v19 = v17;
LABEL_22:

      v4 = v14;
LABEL_23:
      if (v13 != v4)
        *v13 = *v4;
      v45 = ++v4;
      v24 = v5;
      goto LABEL_26;
    }
    goto LABEL_54;
  }
LABEL_55:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ICTTAudioRecording.Fragment()
{
  return objc_opt_self();
}

uint64_t sub_1BDAEA93C(id *a1)
{
  return sub_1BDAE78C8(a1) & 1;
}

uint64_t type metadata accessor for ICTTTranscriptSegment()
{
  return objc_opt_self();
}

uint64_t sub_1BDAEA978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

objc_class *sub_1BDAEAAD0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  objc_class *result;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  Class v27;
  uint64_t v28;
  uint64_t v29;

  v4 = sub_1BDBFCB40();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_createdDate);
  objc_msgSend(a2, sel_setCreatedDate_, v7);

  v8 = objc_msgSend(a1, sel_transcriptVersion);
  objc_msgSend(a2, sel_setTranscriptVersion_, v8);

  v9 = objc_msgSend(a1, sel_transcript);
  v10 = objc_msgSend(v9, sel_allObjects);

  type metadata accessor for ICTTTranscriptSegment();
  v11 = sub_1BDBFD9E0();

  if (!(v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
      goto LABEL_3;
    return (objc_class *)swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v12 = sub_1BDBFE574();
  if (!v12)
    return (objc_class *)swift_bridgeObjectRelease_n();
LABEL_3:
  result = (objc_class *)swift_getObjCClassFromMetadata();
  v27 = result;
  if (v12 >= 1)
  {
    v14 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
        v15 = (id)MEMORY[0x1C3B79954](v14, v11);
      else
        v15 = *(id *)(v11 + 8 * v14 + 32);
      v16 = v15;
      ++v14;
      v17 = objc_msgSend(a2, sel_document);
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      v18 = objc_allocWithZone(v27);
      v19 = (void *)sub_1BDBFCAF8();
      v20 = objc_msgSend(v18, sel_initWithDocument_identity_, v17, v19);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
      v21 = objc_msgSend(v16, sel_text);
      objc_msgSend(v20, sel_setText_, v21);

      v22 = objc_msgSend(v16, sel_timestamp);
      objc_msgSend(v20, sel_setTimestamp_, v22);

      v23 = objc_msgSend(v16, sel_duration);
      objc_msgSend(v20, sel_setDuration_, v23);

      v24 = objc_msgSend(v16, sel_speaker);
      objc_msgSend(v20, sel_setSpeaker_, v24);

      v25 = objc_msgSend(a2, sel_transcript);
      objc_msgSend(v25, sel_addObject_, v20);

    }
    while (v12 != v14);
    return (objc_class *)swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

unint64_t _sSo18ICTTAudioRecordingC11NotesSharedE12crPropertiesSDySSSo12ICCRDataType_pGvgZ_0()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC18190;
  *(_QWORD *)(inited + 32) = 0x7972616D6D7573;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(_QWORD *)(inited + 56) = 0x746E656D67617266;
  *(_QWORD *)(inited + 64) = 0xE900000000000073;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)ICCROrderedSet), sel_init);
  strcpy((char *)(inited + 80), "summaryVersion");
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  strcpy((char *)(inited + 104), "topLineSummary");
  *(_BYTE *)(inited + 119) = -18;
  *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  strcpy((char *)(inited + 128), "callRecording");
  *(_WORD *)(inited + 142) = -4864;
  *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(_QWORD *)(inited + 152) = 0x657079546C6C6163;
  *(_QWORD *)(inited + 160) = 0xE800000000000000;
  *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  return sub_1BDB0AAA4(inited);
}

unint64_t _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC12crPropertiesSDySSSo12ICCRDataType_pGvgZ_0()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC17ED0;
  *(_QWORD *)(inited + 32) = 0x697263736E617274;
  *(_QWORD *)(inited + 40) = 0xEA00000000007470;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)ICCRArray), sel_initWithDocument_, 0);
  *(_QWORD *)(inited + 56) = 0x4464657461657263;
  *(_QWORD *)(inited + 64) = 0xEB00000000657461;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(_QWORD *)(inited + 80) = 0xD000000000000011;
  *(_QWORD *)(inited + 88) = 0x80000001BDC36820;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  return sub_1BDB0AAA4(inited);
}

unint64_t _s11NotesShared21ICTTTranscriptSegmentC12crPropertiesSDySSSo12ICCRDataType_pGvgZ_0()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC181A0;
  *(_QWORD *)(inited + 32) = 1954047348;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(_QWORD *)(inited + 56) = 0x6D617473656D6974;
  *(_QWORD *)(inited + 64) = 0xE900000000000070;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(_QWORD *)(inited + 80) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(_QWORD *)(inited + 104) = 0x72656B61657073;
  *(_QWORD *)(inited + 112) = 0xE700000000000000;
  *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  return sub_1BDB0AAA4(inited);
}

void sub_1BDAEB210(id *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1BDAE7D04(a1, (SEL *)&selRef_topLineSummary, a2);
}

void sub_1BDAEB22C(id *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BDAE7DB8(a1, a2, a3, a4, (SEL *)&selRef_setTopLineSummary_);
}

void sub_1BDAEB248(id *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1BDAE7D04(a1, (SEL *)&selRef_summary, a2);
}

void sub_1BDAEB264(id *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BDAE7DB8(a1, a2, a3, a4, (SEL *)&selRef_setSummary_);
}

void sub_1BDAEB280(id *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1BDAE7D04(a1, (SEL *)&selRef_summaryVersion, a2);
}

void sub_1BDAEB29C(id *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BDAE7DB8(a1, a2, a3, a4, (SEL *)&selRef_setSummaryVersion_);
}

char *keypath_get_selector_isCallRecording()
{
  return sel_isCallRecording;
}

id sub_1BDAEB2C4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isCallRecording);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1BDAEB2F4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsCallRecording_, *a1);
}

char *keypath_get_selector_callType()
{
  return sel_callType;
}

id sub_1BDAEB314@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_callType);
  *a2 = result;
  return result;
}

id sub_1BDAEB344(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallType_, *a1);
}

char *keypath_get_selector_summary()
{
  return sel_summary;
}

id sub_1BDAEB364@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_summary);
  *a2 = result;
  return result;
}

id sub_1BDAEB39C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSummary_, *a1);
}

char *keypath_get_selector_topLineSummary()
{
  return sel_topLineSummary;
}

id sub_1BDAEB3BC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_topLineSummary);
  *a2 = result;
  return result;
}

id sub_1BDAEB3F4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTopLineSummary_, *a1);
}

char *keypath_get_selector_summaryVersion()
{
  return sel_summaryVersion;
}

id sub_1BDAEB414@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_summaryVersion);
  *a2 = result;
  return result;
}

id sub_1BDAEB44C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSummaryVersion_, *a1);
}

char *keypath_get_selector_fragments()
{
  return sel_fragments;
}

id sub_1BDAEB46C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fragments);
  *a2 = result;
  return result;
}

id sub_1BDAEB4A4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFragments_, *a1);
}

char *keypath_get_selector_callRecording()
{
  return sel_callRecording;
}

id sub_1BDAEB4C4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_callRecording);
  *a2 = result;
  return result;
}

id sub_1BDAEB4FC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallRecording_, *a1);
}

id sub_1BDAEB510@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_callType);
  *a2 = result;
  return result;
}

id sub_1BDAEB548(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallType_, *a1);
}

char *keypath_get_selector_createdDate()
{
  return sel_createdDate;
}

id sub_1BDAEB568@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_createdDate);
  *a2 = result;
  return result;
}

id sub_1BDAEB5A0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCreatedDate_, *a1);
}

char *keypath_get_selector_transcript()
{
  return sel_transcript;
}

id sub_1BDAEB5C0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_transcript);
  *a2 = result;
  return result;
}

id sub_1BDAEB5F8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTranscript_, *a1);
}

char *keypath_get_selector_transcriptVersion()
{
  return sel_transcriptVersion;
}

id sub_1BDAEB618@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_transcriptVersion);
  *a2 = result;
  return result;
}

id sub_1BDAEB650(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTranscriptVersion_, *a1);
}

char *keypath_get_selector_text()
{
  return sel_text;
}

id sub_1BDAEB670@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_text);
  *a2 = result;
  return result;
}

id sub_1BDAEB6A8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setText_, *a1);
}

char *keypath_get_selector_timestamp()
{
  return sel_timestamp;
}

id sub_1BDAEB6C8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_timestamp);
  *a2 = result;
  return result;
}

id sub_1BDAEB700(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

char *keypath_get_selector_duration()
{
  return sel_duration;
}

id sub_1BDAEB720@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_duration);
  *a2 = result;
  return result;
}

id sub_1BDAEB758(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

char *keypath_get_selector_speaker()
{
  return sel_speaker;
}

id sub_1BDAEB778@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_speaker);
  *a2 = result;
  return result;
}

id sub_1BDAEB7B0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSpeaker_, *a1);
}

uint64_t type metadata accessor for ICTTAudioDocument(uint64_t a1)
{
  return sub_1BD942914(a1, (unint64_t *)&unk_1EF50BBB0);
}

uint64_t type metadata accessor for ICTTAudioRecording(uint64_t a1)
{
  return sub_1BD942914(a1, (unint64_t *)&unk_1ED23B2C0);
}

uint64_t sub_1BDAEB7EC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

Swift::Int_optional __swiftcall ICAttachmentGalleryModel.index(ofSubAttachmentWithIdentifier:)(Swift::String ofSubAttachmentWithIdentifier)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  Swift::Bool v5;
  Swift::Int v6;
  Swift::Int_optional result;

  v2 = (void *)sub_1BDBFD6C8();
  v3 = objc_msgSend(v1, sel_indexOfSubAttachmentWithIdentifier_, v2);

  v4 = sub_1BDBFC360();
  v5 = v3 == (id)v4;
  if (v3 == (id)v4)
    v6 = 0;
  else
    v6 = (Swift::Int)v3;
  result.value = v6;
  result.is_nil = v5;
  return result;
}

id ICAttachmentGalleryModel.subAttachments.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  *a1 = v1;
  return v1;
}

uint64_t ICAttachmentGalleryModel.SubAttachments.makeIterator()@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[7];

  v3 = *v1;
  v4 = objc_msgSend(*v1, sel_attachmentIdentifiersOrderedSet);
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_allObjects);

  sub_1BD942914(0, (unint64_t *)&qword_1EF50BBE0);
  v7 = sub_1BDBFD9E0();

  v8 = sub_1BDBC3218(v7);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v3, sel_attachment);
  if (!v9)
  {
LABEL_11:
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_subAttachments);

  if (v11)
  {
    sub_1BD942914(0, (unint64_t *)&qword_1EF50FED0);
    sub_1BDAE15E8();
    v12 = sub_1BDBFDD10();

  }
  else if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1BDBFE574())
  {
    sub_1BDAEDCC0(MEMORY[0x1E0DEE9D8], &qword_1EF50BCC0, (unint64_t *)&qword_1EF50FED0);
    v12 = v14;
  }
  else
  {
    v12 = MEMORY[0x1E0DEE9E8];
  }
  v16[0] = v12;
  v16[1] = (uint64_t)sub_1BDAEC7A0;
  v16[2] = 0;
  v16[3] = (uint64_t)sub_1BDAEC81C;
  v16[4] = 0;
  v16[5] = (uint64_t)sub_1BDAEC82C;
  v16[6] = 0;
  v15 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRetain_n();
  sub_1BDAEBD0C(v16, 1, &v15);
  result = swift_bridgeObjectRelease_n();
  *a1 = v15;
  a1[1] = v8;
  a1[2] = 0;
  return result;
}

void sub_1BDAEBAA8(_QWORD *a1@<X8>)
{
  id *v1;

  ICAttachmentGalleryModel.SubAttachments.makeIterator()(a1);

}

uint64_t sub_1BDAEBAC0()
{
  return 0;
}

uint64_t sub_1BDAEBAC8()
{
  return 2;
}

uint64_t sub_1BDAEBAD0()
{
  void **v0;
  void *v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1BDAEC1E4();

  return v2;
}

void sub_1BDAEBB00(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void **v3;

  sub_1BDAEC3F0(a1, a2, a3, *v3);
}

uint64_t sub_1BDAEBB08()
{
  return sub_1BDBFD908();
}

uint64_t sub_1BDAEBB28(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  _QWORD v10[2];
  uint64_t v11;

  v3 = MEMORY[0x1E0DEA968];
  v4 = MEMORY[0x1E0DEA978];
  while (1)
  {
    v5 = sub_1BDAEBBE8(a1);
    if (!v6)
      break;
    v7 = *v1;
    v10[0] = v5;
    v10[1] = v6;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    MEMORY[0x1C3B78BC8](&v11, v10, v7, v3, AssociatedTypeWitness, v4);
    swift_bridgeObjectRelease();
    result = v11;
    if (v11)
      return result;
  }
  return 0;
}

uint64_t sub_1BDAEBBE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v2 = v1 + *(int *)(a1 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, AssociatedTypeWitness))
  {
    swift_getAssociatedConformanceWitness();
    sub_1BDBFE0F4();
    if (v8)
      return v7;
  }
  v5 = sub_1BDBFE0AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, AssociatedTypeWitness);
  return 0;
}

uint64_t sub_1BDAEBCE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BDAEBB28(a1);
  *a2 = result;
  return result;
}

void sub_1BDAEBD0C(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  void (*v49)(_QWORD *__return_ptr, _QWORD);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(_QWORD);
  uint64_t v63;
  void (*v64)(_QWORD *__return_ptr, _QWORD);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;

  v4 = a1[1];
  v6 = a1[2];
  v5 = (uint64_t (*)(_QWORD))a1[3];
  v70 = *a1;
  v3 = v70;
  v7 = a1[4];
  v49 = (void (*)(_QWORD *__return_ptr, _QWORD))a1[5];
  v8 = a1[6];
  if ((v70 & 0xC000000000000001) != 0)
  {
    sub_1BDAEE370((uint64_t)&v70);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BDBFE1E4();
    sub_1BD942914(0, (unint64_t *)&qword_1EF50FED0);
    sub_1BDAE15E8();
    sub_1BDBFDD40();
    v3 = v66;
    v9 = v67;
    v10 = v68;
    v11 = v69;
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v70 + 32);
    v9 = v70 + 56;
    v13 = ~v12;
    v14 = -v12;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v11 = v15 & *(_QWORD *)(v70 + 56);
    sub_1BDAEE370((uint64_t)&v70);
    swift_retain();
    swift_retain();
    swift_retain();
    v10 = (unint64_t)v13;
  }
  v56 = v3;
  v57 = v9;
  v58 = v10;
  v59 = v11;
  v60 = v4;
  v61 = v6;
  v62 = v5;
  v63 = v7;
  v64 = v49;
  v65 = v8;
  sub_1BDAC8918();
  if (v17 == 1)
  {
LABEL_8:
    sub_1BDAEE398((uint64_t)&v70);
    swift_release();
    swift_release();
    swift_release();
    sub_1BDAE1514();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  v19 = v16;
  v20 = v17;
  v21 = v18;
  while (1)
  {
    while (1)
    {
      v53 = v19;
      v54 = v20;
      v55 = v21;
      if ((v5(&v53) & 1) != 0)
        break;
      sub_1BDAEE3C0(v19, v20, v21);
      sub_1BDAC8918();
      v19 = v22;
      v20 = v23;
      v21 = v24;
      if (v23 == 1)
        goto LABEL_8;
    }
    v53 = v19;
    v54 = v20;
    v55 = v21;
    v49(&v50, &v53);
    sub_1BDAEE3C0(v19, v20, v21);
    v25 = v50;
    v26 = v51;
    v27 = v52;
    v53 = v50;
    v54 = v51;
    v28 = (_QWORD *)*a3;
    v30 = sub_1BDAC358C(v50, v51);
    v31 = v28[2];
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      sub_1BDBFE994();
      __break(1u);
      goto LABEL_29;
    }
    v34 = v29;
    if (v28[3] < v33)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v29 & 1) != 0)
        goto LABEL_24;
    }
    else
    {
      sub_1BDBCCC58();
      if ((v34 & 1) != 0)
        goto LABEL_24;
    }
LABEL_20:
    v37 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    v38 = (uint64_t *)(v37[6] + 16 * v30);
    *v38 = v25;
    v38[1] = v26;
    *(_QWORD *)(v37[7] + 8 * v30) = v27;
    v39 = v37[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_27;
    v37[2] = v41;
    sub_1BDAC8918();
    v19 = v42;
    v20 = v43;
    v21 = v44;
    a2 = 1;
    if (v43 == 1)
      goto LABEL_8;
  }
  sub_1BDBCE15C(v33, a2 & 1);
  v35 = sub_1BDAC358C(v25, v26);
  if ((v34 & 1) != (v36 & 1))
    goto LABEL_28;
  v30 = v35;
  if ((v34 & 1) == 0)
    goto LABEL_20;
LABEL_24:
  v45 = (void *)swift_allocError();
  swift_willThrow();
  v46 = v45;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1BDAEE398((uint64_t)&v70);

    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BDAE1514();
    swift_release();
    swift_release();
    swift_release();

    return;
  }
LABEL_29:
  v50 = 0;
  v51 = 0xE000000000000000;
  sub_1BDBFE304();
  sub_1BDBFD7DC();
  sub_1BDBFE4E4();
  sub_1BDBFD7DC();
  sub_1BDBFE52C();
  __break(1u);
}

uint64_t sub_1BDAEC1E4()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  const void *v23;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  result = ICAttachmentGalleryModel.SubAttachments.makeIterator()(&v28);
  v1 = v29;
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = 0;
  if (v29)
  {
    v4 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
LABEL_3:
    v5 = v30;
    v6 = *(_QWORD *)(v1 + 16);
    if (v30 != v6)
    {
      v7 = v28;
      v8 = (uint64_t *)(v1 + 16 * v30 + 40);
      do
      {
        if (v5 >= v6)
        {
          __break(1u);
          goto LABEL_30;
        }
        if (*(_QWORD *)(v7 + 16))
        {
          v10 = *(v8 - 1);
          v9 = *v8;
          swift_bridgeObjectRetain();
          v11 = sub_1BDAC358C(v10, v9);
          if ((v12 & 1) != 0)
          {
            v30 = v5 + 1;
            v13 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v11);
            result = swift_bridgeObjectRelease();
            if (!v3)
            {
              v14 = v2[3];
              if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0)
                goto LABEL_32;
              v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
              if (v15 <= 1)
                v16 = 1;
              else
                v16 = v15;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAF0);
              v17 = (_QWORD *)swift_allocObject();
              v18 = _swift_stdlib_malloc_size(v17);
              v19 = v18 - 32;
              if (v18 < 32)
                v19 = v18 - 25;
              v20 = v19 >> 3;
              v17[2] = v16;
              v17[3] = (2 * (v19 >> 3)) | 1;
              v21 = (unint64_t)(v17 + 4);
              v22 = v2[3] >> 1;
              if (v2[2])
              {
                v23 = v2 + 4;
                if (v17 != v2 || v21 >= (unint64_t)v23 + 8 * v22)
                  memmove(v17 + 4, v23, 8 * v22);
                v2[2] = 0;
              }
              v4 = (_QWORD *)(v21 + 8 * v22);
              v3 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
              result = swift_release();
              v2 = v17;
            }
            v24 = __OFSUB__(v3--, 1);
            if (!v24)
            {
              result = 0;
              *v4++ = v13;
              v1 = v29;
              if (v29)
                goto LABEL_3;
              break;
            }
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
            return result;
          }
          result = swift_bridgeObjectRelease();
        }
        ++v5;
        v6 = *(_QWORD *)(v1 + 16);
        v8 += 2;
      }
      while (v5 != v6);
    }
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v25 = v2[3];
  if (v25 >= 2)
  {
    v26 = v25 >> 1;
    v24 = __OFSUB__(v26, v3);
    v27 = v26 - v3;
    if (v24)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v2[2] = v27;
  }
  return (uint64_t)v2;
}

void sub_1BDAEC3F0(uint64_t a1, _QWORD *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  void *v24;

  v24 = a4;
  ICAttachmentGalleryModel.SubAttachments.makeIterator()(&v22);

  if (!a2)
  {
    *(_QWORD *)a1 = v22;
    *(_OWORD *)(a1 + 8) = v23;
    return;
  }
  if (a3)
  {
    if ((a3 & 0x8000000000000000) == 0)
    {
      v8 = v22;
      v9 = v23;
      if (!(_QWORD)v23)
        goto LABEL_19;
      v10 = *((_QWORD *)&v23 + 1);
      v11 = v23 + 40;
      v12 = 1;
      v21 = v23 + 40;
      while (1)
      {
        v13 = v12;
        v14 = *(_QWORD *)(v9 + 16);
        if (v10 == v14)
          goto LABEL_19;
        v15 = (uint64_t *)(v11 + 16 * v10);
        while (1)
        {
          if (v10 >= v14)
          {
            __break(1u);
            goto LABEL_22;
          }
          if (*(_QWORD *)(v8 + 16))
            break;
LABEL_8:
          ++v10;
          v14 = *(_QWORD *)(v9 + 16);
          v15 += 2;
          if (v10 == v14)
            goto LABEL_19;
        }
        v17 = *(v15 - 1);
        v16 = *v15;
        swift_bridgeObjectRetain();
        v18 = sub_1BDAC358C(v17, v16);
        if ((v19 & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v18);
        swift_bridgeObjectRelease();
        *a2 = v20;
        ++v10;
        if (v13 == a3)
          goto LABEL_18;
        ++a2;
        v12 = v13 + 1;
        v11 = v21;
        if (!v9)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 8) = 0;
          *(_QWORD *)(a1 + 16) = 0;
          *(_QWORD *)a1 = v8;
          return;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
LABEL_22:
    __break(1u);
  }
  else
  {
    v8 = v22;
    v10 = *((_QWORD *)&v23 + 1);
    v9 = v23;
LABEL_18:
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
  }
}

uint64_t sub_1BDAEC588(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 56) + 32 * v16);
    v21 = v20[1];
    v23 = v20[2];
    v22 = v20[3];
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v23;
    v11[3] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

id sub_1BDAEC7A0@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  result = objc_msgSend(*a1, sel_identifier);
  if (result)
  {
    v5 = result;
    v6 = sub_1BDBFD6F8();
    v8 = v7;

    result = v3;
  }
  else
  {
    v6 = 0;
    v8 = 0;
    v3 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
  a2[2] = (uint64_t)v3;
  return result;
}

BOOL sub_1BDAEC81C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) != 0;
}

id sub_1BDAEC82C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  id v4;

  result = (id)a1[1];
  if (result)
  {
    v4 = (id)a1[2];
    *a2 = *a1;
    a2[1] = result;
    a2[2] = v4;
    swift_bridgeObjectRetain();
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDAEC870()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ICAttachmentGalleryModel.SubAttachments()
{
  return &type metadata for ICAttachmentGalleryModel.SubAttachments;
}

unint64_t sub_1BDAEC894()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50BBE8;
  if (!qword_1EF50BBE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EF50BBF0);
    result = MEMORY[0x1C3B7B388](&unk_1BDC182C8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF50BBE8);
  }
  return result;
}

uint64_t sub_1BDAEC8E0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BDAEC8E8()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_1BDBFE0AC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BDAEC984(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  const void *v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  v10 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v9 != 0 || ((v7 + 8) & ~v7) + v8 > 0x18)
  {
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v13 = ~v7;
    v14 = (char *)a1 + v7;
    v15 = (char *)a2 + v7;
    v16 = (void *)((unint64_t)(v14 + 8) & v13);
    v17 = (const void *)((unint64_t)(v15 + 8) & v13);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    if (v18(v17, 1, AssociatedTypeWitness))
    {
      memcpy(v16, v17, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v16, v17, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, AssociatedTypeWitness);
    }
  }
  return a1;
}

uint64_t sub_1BDAECAB8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(v4, AssociatedTypeWitness);
  return result;
}

_QWORD *sub_1BDAECB54(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);
  size_t v10;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  swift_bridgeObjectRetain();
  if (v9(v8, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v10 = *(_QWORD *)(v5 + 64);
    else
      v10 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

_QWORD *sub_1BDAECC44(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, AssociatedTypeWitness);
  v11 = v9(v8, 1, AssociatedTypeWitness);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
  return a1;
}

_QWORD *sub_1BDAECD84(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

_QWORD *sub_1BDAECE64(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, AssociatedTypeWitness);
  v11 = v9(v8, 1, AssociatedTypeWitness);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
  return a1;
}

uint64_t sub_1BDAECF9C(_QWORD *a1, unsigned int a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  if (a2 <= v7)
    goto LABEL_30;
  v10 = v8 + ((v9 + 8) & ~v9);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(_WORD *)((char *)a1 + v10))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v14 < 2)
    {
LABEL_30:
      if ((v6 & 0x80000000) != 0)
      {
        v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v9 + 8) & ~v9);
        if (v18 >= 2)
          return v18 - 1;
        else
          return 0;
      }
      else
      {
        v17 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v17) = -1;
        return (v17 + 1);
      }
    }
  }
  v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((_BYTE *)a1 + v10))
    goto LABEL_30;
LABEL_21:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if ((_DWORD)v10)
  {
    if (v10 <= 3)
      v16 = v10;
    else
      v16 = 4;
    __asm { BR              X12 }
  }
  return v7 + v15 + 1;
}

void sub_1BDAED140(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v6 = 0u;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(unsigned __int8 *)(v7 + 80);
  if (v8)
    v12 = *(_QWORD *)(v7 + 64);
  else
    v12 = *(_QWORD *)(v7 + 64) + 1;
  v13 = ((v11 + 8) & ~(_DWORD)v11) + v12;
  if (a3 > v10)
  {
    if (v13 > 3)
    {
      v6 = 1u;
      if (v10 >= a2)
LABEL_25:
        __asm { BR              X14 }
LABEL_18:
      v15 = ~v10 + a2;
      if (v13 < 4)
      {
        if (v13)
        {
          v16 = v15 & ~(-1 << (8 * v13));
          bzero(a1, ((v11 + 8) & ~v11) + v12);
          if (v13 == 3)
          {
            *(_WORD *)a1 = v16;
            a1[2] = BYTE2(v16);
          }
          else if (v13 == 2)
          {
            *(_WORD *)a1 = v16;
          }
          else
          {
            *a1 = v16;
          }
        }
      }
      else
      {
        bzero(a1, ((v11 + 8) & ~v11) + v12);
        *(_DWORD *)a1 = v15;
      }
      __asm { BR              X10 }
    }
    v14 = ((a3 - v10 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v14))
    {
      v6 = 4u;
      if (v10 >= a2)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v14 >= 0x100)
      v6 = 2;
    else
      v6 = v14 > 1;
  }
  if (v10 >= a2)
    goto LABEL_25;
  goto LABEL_18;
}

void sub_1BDAED3B0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1BDAED3B8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1BDAED3D8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1BDAED3E0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1BDAED3F0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void _s14SubAttachmentsV9_IteratorVMa()
{
  JUMPOUT(0x1C3B7B2C8);
}

uint64_t sub_1BDAED408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCB8);
    v3 = sub_1BDBFE2D4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1BDBFEA0C();
      swift_bridgeObjectRetain();
      sub_1BDBFD794();
      result = sub_1BDBFEA30();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1BDBFE874(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1BDBFE874();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1BDAED5A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1BDBFCF78();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BC98);
    v10 = sub_1BDBFE2D4();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1BDAC31B0(&qword_1EF50BCA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7768], MEMORY[0x1E0CD7778]);
      v14 = sub_1BDBFD614();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1BDAC31B0(&qword_1EF50BCA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7768], MEMORY[0x1E0CD7780]);
          v20 = sub_1BDBFD6BC();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1BDAED810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1BDBFD05C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BC80);
    v10 = sub_1BDBFE2D4();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1BDAC31B0(&qword_1EF50BC88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7DE8], MEMORY[0x1E0CD7DF8]);
      v14 = sub_1BDBFD614();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1BDAC31B0(&qword_1EF50BC90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7DE8], MEMORY[0x1E0CD7E00]);
          v20 = sub_1BDBFD6BC();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1BDAEDA78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCB0);
    v3 = sub_1BDBFE2D4();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_1BDBFD6F8();
      sub_1BDBFEA0C();
      v7 = v6;
      sub_1BDBFD794();
      v8 = sub_1BDBFEA30();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_1BDBFD6F8();
        v17 = v16;
        if (v15 == sub_1BDBFD6F8() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_1BDBFE874();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_1BDBFD6F8();
          v24 = v23;
          if (v22 == sub_1BDBFD6F8() && v24 == v25)
            goto LABEL_3;
          v27 = sub_1BDBFE874();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

void sub_1BDAEDCA4(unint64_t a1)
{
  sub_1BDAEDCC0(a1, &qword_1EF50BCC8, (unint64_t *)&qword_1EF510130);
}

void sub_1BDAEDCC0(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v4 = a1;
  v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v6 = sub_1BDBFE2D4();
      if (!v5)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v7 = sub_1BDBFE574();
      swift_bridgeObjectRelease();
      if (!v7)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v6 = MEMORY[0x1E0DEE9E8];
  if (v5)
    goto LABEL_8;
LABEL_4:
  v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return;
LABEL_9:
  v9 = v6 + 56;
  v45 = v7;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v10 = 0;
    v42 = v4;
    while (1)
    {
      v11 = MEMORY[0x1C3B79954](v10, v4);
      v12 = __OFADD__(v10++, 1);
      if (v12)
      {
        __break(1u);
        goto LABEL_37;
      }
      v13 = v11;
      v14 = sub_1BDBFE064();
      v15 = -1 << *(_BYTE *)(v6 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        sub_1BD942914(0, a3);
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = sub_1BDBFE070();

        if ((v21 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v4 = v42;
          goto LABEL_12;
        }
        v22 = ~v15;
        while (1)
        {
          v16 = (v16 + 1) & v22;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            break;
          v23 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
          v24 = sub_1BDBFE070();

          if ((v24 & 1) != 0)
            goto LABEL_11;
        }
        v4 = v42;
      }
      *(_QWORD *)(v9 + 8 * v17) = v19 | v18;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16) = v13;
      v25 = *(_QWORD *)(v6 + 16);
      v12 = __OFADD__(v25, 1);
      v26 = v25 + 1;
      if (v12)
        goto LABEL_38;
      *(_QWORD *)(v6 + 16) = v26;
LABEL_12:
      if (v10 == v45)
        return;
    }
  }
  v27 = 0;
  v43 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v27 != v43)
  {
    v28 = *(id *)(v4 + 32 + 8 * v27);
    v29 = sub_1BDBFE064();
    v30 = -1 << *(_BYTE *)(v6 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_1BD942914(0, a3);
      v35 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
      v36 = sub_1BDBFE070();

      if ((v36 & 1) != 0)
        goto LABEL_24;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
          v39 = sub_1BDBFE070();

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v7 = v45;
        goto LABEL_25;
      }
LABEL_32:
      v7 = v45;
    }
    *(_QWORD *)(v9 + 8 * v32) = v34 | v33;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v31) = v28;
    v40 = *(_QWORD *)(v6 + 16);
    v12 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v12)
      goto LABEL_39;
    *(_QWORD *)(v6 + 16) = v41;
LABEL_25:
    if (++v27 == v7)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1BDAEE024(unint64_t a1)
{
  sub_1BDAEDCC0(a1, &qword_1EF50BC78, (unint64_t *)&qword_1EF50FF20);
}

uint64_t sub_1BDAEE040(uint64_t a1)
{
  uint64_t v2;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A940);
    sub_1BDBFE2D4();
    v2 = *(unsigned __int8 *)(a1 + 32);
    sub_1BDBFEA0C();
    __asm { BR              X8 }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1BDAEE370(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BDAEE398(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BDAEE3C0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2 != 1)
    sub_1BDAEE3D0(a1, a2, a3);
}

void sub_1BDAEE3D0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1BDAEE400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BDBFDBC0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BDBFDBB4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BDAC350C(a1, (uint64_t *)&unk_1ED23A600);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BDBFDADC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BDAEE54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BDBFDBC0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BDBFDBB4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BDAC350C(a1, (uint64_t *)&unk_1ED23A600);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BDBFDADC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE20);
  return swift_task_create();
}

uint64_t sub_1BDAEE6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50BCD0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50BCD0);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static SiriTranscriptionMethod.bufferSize.getter()
{
  return 4096;
}

uint64_t SiriTranscriptionMethod.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v1 = v0 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t SiriTranscriptionMethod.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = 0;
  v1 = v0 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t SiriTranscriptionMethod.prepareForTranscription()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  v2[4] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD00);
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD08);
  v2[8] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD10);
  v2[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[10] = v5;
  v2[11] = *(_QWORD *)(v5 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDAEE8E0()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[3];
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SiriSpeechRecognitionManager()), sel_init);
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v2;

  v4 = *(void **)(v1 + 16);
  v0[14] = v4;
  if (v4)
  {
    v4;
    v5 = (_QWORD *)swift_task_alloc();
    v0[15] = v5;
    *v5 = v0;
    v5[1] = sub_1BDAEE9D0;
    return sub_1BDB9D644(v0[8]);
  }
  else
  {
    v7 = v0[8];
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[10] + 56))(v7, 1, 1, v0[9]);
    sub_1BDAC350C(v7, &qword_1EF50BD08);
    v8 = (_QWORD *)swift_task_alloc();
    v0[17] = v8;
    *v8 = v0;
    v8[1] = sub_1BDAEEC00;
    return SiriTranscriptionMethod.finishTranscription()();
  }
}

uint64_t sub_1BDAEE9D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_1BDAEEA3C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);

  v1 = *(char **)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 32);
  v14 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 24);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v4);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  v15(v1, v3, v4);
  type metadata accessor for TranscriptionUpdate(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E0DF07B8], v7);
  sub_1BDBFDC08();
  v9 = sub_1BDBFDBC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v13, 1, 1, v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v14, v1, v4);
  v10 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = 0;
  *((_QWORD *)v11 + 3) = 0;
  *((_QWORD *)v11 + 4) = v8;
  v15(&v11[v10], v14, v4);
  swift_retain();
  sub_1BDAEE400(v13, (uint64_t)&unk_1EF50BD20, (uint64_t)v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAEEC00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDAEECB0()
{
  uint64_t v0;
  _BYTE *v1;

  sub_1BDAC7614();
  swift_allocError();
  *v1 = 13;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAEED48()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SiriTranscriptionMethod.finishTranscription()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[8] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD30);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for TranscriptionUpdate(0);
  v1[11] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCF0);
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD38);
  v1[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDAEEE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  *(_QWORD *)(v0 + 128) = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v5 = v3 + v4;
  swift_beginAccess();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 136) = v6;
  v7 = v6(v5, 1, v1);
  v8 = *(_QWORD *)(v0 + 120);
  if (v7)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 112);
    v13 = *(_BYTE **)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v5, v12);
    *v13 = 1;
    swift_storeEnumTagMultiPayload();
    sub_1BDBFDBD8();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  v15 = *(_QWORD *)(v0 + 64);
  sub_1BDAC350C(*(_QWORD *)(v0 + 120), &qword_1EF50BD38);
  v16 = *(void **)(v15 + 16);
  *(_QWORD *)(v0 + 144) = v16;
  if (v16)
  {
    v16;
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v17;
    *v17 = v0;
    v17[1] = sub_1BDAEF100;
    return sub_1BDB9E898();
  }
  else
  {
    v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
    v20 = *(_QWORD *)(v0 + 96);
    v21 = *(_QWORD *)(v0 + 64);
    v22 = v21 + *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v21 + 16) = 0;
    if (!v19(v22, 1, v20))
    {
      v24 = *(_QWORD *)(v0 + 104);
      v23 = *(_QWORD *)(v0 + 112);
      v25 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 16))(v23, *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 128), v25);
      sub_1BDBFDBE4();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v26 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 56))(v26, 1, 1, *(_QWORD *)(v0 + 96));
    swift_beginAccess();
    sub_1BDAF0FF0(v26, v27);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDAEF100()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_1BDAEF16C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(void **)(v1 + 16);
  v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = v1 + *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v1 + 16) = 0;

  if (!v3(v5, 1, v4))
  {
    v7 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16))(v6, *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 128), v8);
    sub_1BDBFDBE4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  v9 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 56))(v9, 1, 1, *(_QWORD *)(v0 + 96));
  swift_beginAccess();
  sub_1BDAF0FF0(v9, v10);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAEF288()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SiriTranscriptionMethod.receiveAudio(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for AudioData(0);
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDAEF34C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  _BYTE *v4;
  uint64_t (*v5)(void);

  sub_1BDAF1038(v0[2], v0[5]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v1 = *(void **)v0[5];
    v2 = *(void **)(v0[3] + 16);
    if (v2)
    {
      v3 = v2;
      sub_1BDB9E578(v1);

    }
    swift_task_dealloc();
    v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_1BDAF107C(v0[5]);
    sub_1BDAC7614();
    swift_allocError();
    *v4 = 15;
    swift_willThrow();
    swift_task_dealloc();
    v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

uint64_t sub_1BDAEF444(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  v3[5] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD00);
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3E0);
  v3[9] = swift_task_alloc();
  v5 = sub_1BDBFC948();
  v3[10] = v5;
  v3[11] = *(_QWORD *)(v5 - 8);
  v3[12] = swift_task_alloc();
  sub_1BDBFCF60();
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE30);
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3F0);
  v3[15] = swift_task_alloc();
  sub_1BDBFCB58();
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDAEF5A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(unint64_t, _QWORD, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0[15];
  v2 = v0[14];
  v31 = v0[10];
  v32 = v0[12];
  v33 = v0[9];
  v29 = v0[3];
  v30 = v0[11];
  sub_1BDBFCB4C();
  v3 = *MEMORY[0x1E0CD7ED8];
  v4 = sub_1BDBFD068();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v6 = sub_1BDBFCF6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE38);
  v7 = sub_1BDBFCF78();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BDC16BA0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x1E0CD7750], v7);
  sub_1BDAED5A8(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D400);
  v11 = sub_1BDBFD05C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BDC16BA0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E0CD7DE0], v11);
  sub_1BDAED810(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE40);
  v15 = sub_1BDBFCFC0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BDC17ED0;
  v20 = v19 + v18;
  v21 = *(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104);
  v21(v20, *MEMORY[0x1E0CD7838], v15);
  v21(v20 + v17, *MEMORY[0x1E0CD7840], v15);
  v21(v20 + 2 * v17, *MEMORY[0x1E0CD7858], v15);
  sub_1BDB9FDBC(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BDBFCFE4();
  swift_allocObject();
  v22 = sub_1BDBFCFD8();
  v0[17] = v22;
  sub_1BDBFCF48();
  sub_1BDBFCF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v29, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D410);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BDC16BA0;
  v24 = sub_1BDAF1308();
  *(_QWORD *)(v23 + 32) = v22;
  *(_QWORD *)(v23 + 40) = v24;
  v25 = sub_1BDBFD02C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v33, 1, 1, v25);
  v26 = objc_allocWithZone((Class)sub_1BDBFD020());
  swift_retain();
  objc_msgSend(v26, sel_init);
  v27 = (_QWORD *)swift_task_alloc();
  v0[18] = v27;
  *v27 = v0;
  v27[1] = sub_1BDAEF9DC;
  return sub_1BDBFCF3C();
}

uint64_t sub_1BDAEF9DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;

  v3 = (_QWORD *)*v2;
  v3[19] = a1;
  v3[20] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v5 = (_QWORD *)swift_task_alloc();
  v3[21] = v5;
  *v5 = v3;
  v5[1] = sub_1BDAEFA7C;
  return sub_1BDBFCF24();
}

uint64_t sub_1BDAEFA7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDAEFAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  type metadata accessor for TranscriptionUpdate(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, *MEMORY[0x1E0DF07B8], v3);
  sub_1BDBFDC08();
  v7 = sub_1BDBFDBC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  v8[5] = v1;
  swift_retain();
  sub_1BDB1DFBC(v5, (uint64_t)&unk_1EF50BE58, (uint64_t)v8);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAEFC54()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAEFCF8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAEFDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_1BDBFCFB4();
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE60);
  v5[14] = swift_task_alloc();
  v5[15] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3D0);
  v5[16] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE68);
  v5[17] = v7;
  v5[18] = *(_QWORD *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = type metadata accessor for TranscriptionUpdate(0);
  v5[21] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCF0);
  v5[22] = v8;
  v5[23] = *(_QWORD *)(v8 - 8);
  v5[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD38);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDAEFF10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = v0[22];
  v2 = v0[23];
  v3 = v0[9];
  v4 = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v0[28] = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v5 = v3 + v4;
  swift_beginAccess();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[29] = v6;
  v7 = v6(v5, 1, v1);
  v8 = v0[27];
  if (v7)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    v11 = v0[23];
    v10 = v0[24];
    v13 = (_BYTE *)v0[21];
    v12 = v0[22];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v5, v12);
    *v13 = 0;
    swift_storeEnumTagMultiPayload();
    sub_1BDBFDBD8();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  sub_1BDAC350C(v0[27], &qword_1EF50BD38);
  sub_1BDBFCFCC();
  v0[30] = swift_getOpaqueTypeConformance2();
  sub_1BDBFDC80();
  swift_getAssociatedConformanceWitness();
  v15 = (_QWORD *)swift_task_alloc();
  v0[31] = v15;
  *v15 = v0;
  v15[1] = sub_1BDAF00F4;
  return sub_1BDBFDB3C();
}

uint64_t sub_1BDAF00F4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDAF0158()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v1 = v0[14];
  v2 = v0[11];
  v3 = v0[12];
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = v0[28];
  v6 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[29];
  v7 = v0[22];
  if (v4 == 1)
  {
    v8 = v0[9] + v5;
    (*(void (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
    if (v6(v8, 1, v7))
    {
      v9 = v0[26];
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    }
    else
    {
      v14 = v0[26];
      v16 = v0[23];
      v15 = v0[24];
      v18 = (_BYTE *)v0[21];
      v17 = v0[22];
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 16))(v15, v0[9] + v0[28], v17);
      *v18 = 1;
      swift_storeEnumTagMultiPayload();
      sub_1BDBFDBD8();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 0, 1, v19);
    }
    sub_1BDAC350C(v0[26], &qword_1EF50BD38);
    v20 = (_QWORD *)swift_task_alloc();
    v0[32] = v20;
    *v20 = v0;
    v20[1] = sub_1BDAF04BC;
    return SiriTranscriptionMethod.finishTranscription()();
  }
  else
  {
    v11 = v0[9] + v5;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(v0[13], v1, v2);
    swift_beginAccess();
    if (v6(v11, 1, v7))
    {
      v12 = v0[25];
      (*(void (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[13], v0[11]);
      swift_endAccess();
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    }
    else
    {
      v22 = v0[24];
      v23 = v0[25];
      v24 = v0[22];
      v25 = v0[23];
      v26 = v0[21];
      v27 = v0[12];
      v28 = v0[13];
      v29 = v0[11];
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 16))(v22, v0[9] + v0[28], v24);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v28, v29);
      swift_storeEnumTagMultiPayload();
      sub_1BDBFDBD8();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v23, 0, 1, v30);
    }
    sub_1BDAC350C(v0[25], &qword_1EF50BD38);
    swift_getAssociatedConformanceWitness();
    v31 = (_QWORD *)swift_task_alloc();
    v0[31] = v31;
    *v31 = v0;
    v31[1] = sub_1BDAF00F4;
    return sub_1BDBFDB3C();
  }
}

uint64_t sub_1BDAF04BC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDAF057C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAF0634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD30);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCF0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = a2 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  swift_beginAccess();
  sub_1BDAF0FF0((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1BDAF0718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[8] = a4;
  v5[9] = a5;
  v6 = sub_1BDBFCFB4();
  v5[10] = v6;
  v5[11] = *(_QWORD *)(v6 - 8);
  v5[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE60);
  v5[13] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE70);
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = type metadata accessor for TranscriptionUpdate(0);
  v5[18] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCF0);
  v5[19] = v8;
  v5[20] = *(_QWORD *)(v8 - 8);
  v5[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD38);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDAF0858()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[8];
  v4 = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v0[25] = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v5 = v3 + v4;
  swift_beginAccess();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[26] = v6;
  v7 = v6(v5, 1, v1);
  v8 = v0[24];
  if (v7)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    v11 = v0[20];
    v10 = v0[21];
    v13 = (_BYTE *)v0[18];
    v12 = v0[19];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v5, v12);
    *v13 = 0;
    swift_storeEnumTagMultiPayload();
    sub_1BDBFDBD8();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  sub_1BDAC350C(v0[24], &qword_1EF50BD38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD10);
  sub_1BDBFDBF0();
  v15 = (_QWORD *)swift_task_alloc();
  v0[27] = v15;
  *v15 = v0;
  v15[1] = sub_1BDAF09E8;
  return sub_1BDBFDBFC();
}

uint64_t sub_1BDAF09E8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDAF0A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v7 = *(_QWORD *)(v0 + 152);
  if (v4 == 1)
  {
    v8 = *(_QWORD *)(v0 + 64) + v5;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    if (v6(v8, 1, v7))
    {
      v9 = *(_QWORD *)(v0 + 184);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 184);
      v16 = *(_QWORD *)(v0 + 160);
      v15 = *(_QWORD *)(v0 + 168);
      v18 = *(_BYTE **)(v0 + 144);
      v17 = *(_QWORD *)(v0 + 152);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 16))(v15, *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 200), v17);
      *v18 = 1;
      swift_storeEnumTagMultiPayload();
      sub_1BDBFDBD8();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 0, 1, v19);
    }
    sub_1BDAC350C(*(_QWORD *)(v0 + 184), &qword_1EF50BD38);
    if (qword_1EF50AFD8 != -1)
      swift_once();
    v20 = sub_1BDBFCE34();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EF50BCD0);
    v21 = sub_1BDBFCE1C();
    v22 = sub_1BDBFDED8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1BD918000, v21, v22, "Recognition stream task completed", v23, 2u);
      MEMORY[0x1C3B7B478](v23, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 64) + v5;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 96), v1, v2);
    swift_beginAccess();
    if (v6(v11, 1, v7))
    {
      v12 = *(_QWORD *)(v0 + 176);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
      swift_endAccess();
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 168);
      v26 = *(_QWORD *)(v0 + 176);
      v27 = *(_QWORD *)(v0 + 152);
      v28 = *(_QWORD *)(v0 + 160);
      v29 = *(_QWORD *)(v0 + 144);
      v30 = *(_QWORD *)(v0 + 88);
      v31 = *(_QWORD *)(v0 + 96);
      v32 = *(_QWORD *)(v0 + 80);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 16))(v25, *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 200), v27);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v31, v32);
      swift_storeEnumTagMultiPayload();
      sub_1BDBFDBD8();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v25, v27);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD40);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v26, 0, 1, v33);
    }
    sub_1BDAC350C(*(_QWORD *)(v0 + 176), &qword_1EF50BD38);
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v34;
    *v34 = v0;
    v34[1] = sub_1BDAF09E8;
    return sub_1BDBFDBFC();
  }
}

uint64_t SiriTranscriptionMethod.deinit()
{
  uint64_t v0;

  sub_1BDAC350C(v0 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation, &qword_1EF50BD30);
  return v0;
}

uint64_t SiriTranscriptionMethod.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BDAC350C(v0 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation, &qword_1EF50BD30);
  return swift_deallocClassInstance();
}

uint64_t sub_1BDAF0EC0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDAF0634(a1, v1);
}

uint64_t sub_1BDAF0ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BDAF0F58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD10) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1BDAC9D90;
  return sub_1BDAF0718(a1, v5, v6, v7, v8);
}

uint64_t sub_1BDAF0FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDAF1038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDAF107C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDAF10B8()
{
  return type metadata accessor for SiriTranscriptionMethod();
}

uint64_t type metadata accessor for SiriTranscriptionMethod()
{
  uint64_t result;

  result = qword_1EF50BD78;
  if (!qword_1EF50BD78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BDAF10FC()
{
  unint64_t v0;

  sub_1BDAF1188();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SiriTranscriptionMethod()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriTranscriptionMethod.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1BDAF1188()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF50BD88[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50BCF0);
    v0 = sub_1BDBFE0AC();
    if (!v1)
      atomic_store(v0, qword_1EF50BD88);
  }
}

uint64_t sub_1BDAF11E0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1BDAF1248;
  return v5(v2 + 32);
}

uint64_t sub_1BDAF1248()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1BDAF1298(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDAE2208;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF50BE10 + dword_1EF50BE10))(a1, v4);
}

unint64_t sub_1BDAF1308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50BE48;
  if (!qword_1EF50BE48)
  {
    v1 = sub_1BDBFCFE4();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CD7908], v1);
    atomic_store(result, &qword_1EF50BE48);
  }
  return result;
}

uint64_t sub_1BDAF1350()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDAF1384(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BDAC9D90;
  return sub_1BDAEFDA8(a1, v4, v5, v7, v6);
}

uint64_t sub_1BDAF13FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t NSOperationQueue.run<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BDAF1444()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v1 = v0[5];
  v2 = (void *)v0[6];
  v4 = v0[3];
  v3 = v0[4];
  v5 = (_QWORD *)swift_allocObject();
  v0[7] = (uint64_t)v5;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  v6 = swift_task_alloc();
  v0[8] = v6;
  *(_QWORD *)(v6 + 16) = v1;
  v7 = v2;
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_1BDAF1510;
  return withUnsafeRethrowingContinuation<A>(_:rethrow:)(v0[2], (uint64_t)sub_1BDAF16CC, (uint64_t)v5, (uint64_t)sub_1BDAF17F0, v6, v0[5]);
}

uint64_t sub_1BDAF1510()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDAF1590()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDAF15CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a5;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a1;
  v12[4] = sub_1BDAF1844;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BDB24AB0;
  v12[3] = &block_descriptor_0;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_addOperationWithBlock_, v11);
  _Block_release(v11);
}

uint64_t sub_1BDAF16A0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BDAF16CC(uint64_t a1)
{
  uint64_t v1;

  sub_1BDAF15CC(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BDAF16D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(void);
  uint64_t v11;
  char *v12;
  _QWORD v14[2];

  v6 = *(_QWORD *)(a4 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void (*)(void))MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v14 - v11;
  v10();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, a4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  sub_1BDB42018((uint64_t)v9, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, a4);
}

id sub_1BDAF17F0(void *a1)
{
  swift_willThrow();
  return a1;
}

uint64_t sub_1BDAF1820()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDAF1844()
{
  uint64_t *v0;

  return sub_1BDAF16D8(v0[3], v0[4], v0[5], v0[2]);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

_QWORD *sub_1BDAF1868(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = *v2;
    if (*v2)
    {
      v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BDBCBCC4(0, v3[2] + 1, 1, v3);
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
        v3 = sub_1BDBCBCC4((_QWORD *)(v7 > 1), v8 + 1, 1, v3);
      v3[2] = v8 + 1;
      v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5;
    }
    v2 += 4;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t PersistedActivityEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PersistedActivityEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

void (*PersistedActivityEvent.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PersistedActivityEvent.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PersistedActivityEvent()
{
  uint64_t result;

  result = qword_1ED23B0A0;
  if (!qword_1ED23B0A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PersistedActivityEvent.object.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 20);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_QWORD *)(v5 + 16) = v4;
  return result;
}

void (*PersistedActivityEvent.object.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for PersistedActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PersistedActivityEvent.participant.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 PersistedActivityEvent.participant.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

void (*PersistedActivityEvent.participant.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for PersistedActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void PersistedActivityEvent.associatedAttachmentIds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_1BDBFCB40();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PersistedActivityEvent();
  sub_1BDAE1544(v0 + *(int *)(v5 + 28), (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  v6 = (char *)sub_1BDAF1C80 + 4 * byte_1BDC18350[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDAF1C80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PersistedActivityEvent.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PersistedActivityEvent();
  return sub_1BDAE1544(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
}

uint64_t PersistedActivityEvent.activity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 28);
  return sub_1BDAF3F30(a1, v3);
}

void (*PersistedActivityEvent.activity.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for PersistedActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PersistedActivityEvent.init(timestamp:object:participant:activity:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;

  v8 = *a2;
  v9 = *((_QWORD *)a2 + 1);
  v10 = *((_QWORD *)a2 + 2);
  v18 = *a3;
  v11 = *((_QWORD *)a3 + 2);
  v12 = *((_QWORD *)a3 + 3);
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  v13 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a5, a1, v13);
  v14 = (int *)type metadata accessor for PersistedActivityEvent();
  v15 = a5 + v14[5];
  *(_BYTE *)v15 = v8;
  *(_QWORD *)(v15 + 8) = v9;
  *(_QWORD *)(v15 + 16) = v10;
  v16 = a5 + v14[6];
  *(_OWORD *)v16 = v18;
  *(_QWORD *)(v16 + 16) = v11;
  *(_QWORD *)(v16 + 24) = v12;
  return sub_1BDAF3F74(a4, a5 + v14[7]);
}

void sub_1BDAF1EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistedActivityEvent();
  sub_1BDAE1544(v0 + *(int *)(v4 + 28), (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  v5 = (char *)&loc_1BDAF1F7C + dword_1BDAF2D6C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDAF1F8C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  return v3;
}

void PersistedActivityEvent.hash(into:)()
{
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BDBFD620();
  type metadata accessor for PersistedActivityEvent();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  PersistedActivityEvent.Activities.hash(into:)();
}

uint64_t sub_1BDAF2ED4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDAF2F08 + 4 * byte_1BDC18359[*v0]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_1BDAF2F08()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1BDAF2F1C()
{
  return 0x7069636974726170;
}

uint64_t sub_1BDAF2F3C()
{
  return 0x7974697669746361;
}

uint64_t sub_1BDAF2F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDAF5120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDAF2F78()
{
  return 0;
}

void sub_1BDAF2F84(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1BDAF2F90()
{
  sub_1BDAF3FB8();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDAF2FB8()
{
  sub_1BDAF3FB8();
  return sub_1BDBFEB50();
}

uint64_t PersistedActivityEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDAF3FB8();
  sub_1BDBFEACC();
  LOBYTE(v18) = 0;
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1BDBFE718();
  if (!v2)
  {
    v9 = type metadata accessor for PersistedActivityEvent();
    v10 = (char *)(v3 + *(int *)(v9 + 20));
    v11 = *v10;
    v13 = *((_QWORD *)v10 + 1);
    v12 = *((_QWORD *)v10 + 2);
    LOBYTE(v18) = v11;
    v19 = v13;
    *(_QWORD *)&v20 = v12;
    v21 = 1;
    sub_1BDAF3FFC();
    sub_1BDBFE718();
    v14 = (uint64_t *)(v3 + *(int *)(v9 + 24));
    v15 = v14[1];
    v18 = *v14;
    v19 = v15;
    v20 = *((_OWORD *)v14 + 1);
    v21 = 2;
    sub_1BDAF4040();
    sub_1BDBFE718();
    LOBYTE(v18) = 3;
    type metadata accessor for PersistedActivityEvent.Activities();
    sub_1BDAC31B0(&qword_1EF50BEB0, (uint64_t (*)(uint64_t))type metadata accessor for PersistedActivityEvent.Activities, (uint64_t)&protocol conformance descriptor for PersistedActivityEvent.Activities);
    sub_1BDBFE718();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PersistedActivityEvent.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BDBFD620();
  type metadata accessor for PersistedActivityEvent();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  PersistedActivityEvent.Activities.hash(into:)();
  return sub_1BDBFEA30();
}

uint64_t PersistedActivityEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;

  v30 = a2;
  v3 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BDBFCAC8();
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BEB8);
  v8 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for PersistedActivityEvent();
  MEMORY[0x1E0C80A78](v34);
  v35 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  v12 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1BDAF3FB8();
  v13 = v10;
  v14 = v37;
  sub_1BDBFEAB4();
  if (v14)
  {
    v17 = v35;
    v18 = v36;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v17, v6);
  }
  else
  {
    v37 = v3;
    v29 = v5;
    LOBYTE(v38) = 0;
    sub_1BDAC31B0(&qword_1EF50BEC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v15 = v31;
    v16 = v13;
    sub_1BDBFE670();
    v19 = (uint64_t)v35;
    (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v35, v15, v6);
    v41 = 1;
    sub_1BDAF4084();
    sub_1BDBFE670();
    v20 = v39;
    v21 = v40;
    v22 = v34;
    v23 = v19 + *(int *)(v34 + 20);
    *(_BYTE *)v23 = v38;
    *(_QWORD *)(v23 + 8) = v20;
    *(_QWORD *)(v23 + 16) = v21;
    v41 = 2;
    sub_1BDAF40C8();
    sub_1BDBFE670();
    v24 = v39;
    v25 = v19 + *(int *)(v22 + 24);
    *(_QWORD *)v25 = v38;
    *(_QWORD *)(v25 + 8) = v24;
    *(_OWORD *)(v25 + 16) = v40;
    LOBYTE(v38) = 3;
    sub_1BDAC31B0(&qword_1EF50BED8, (uint64_t (*)(uint64_t))type metadata accessor for PersistedActivityEvent.Activities, (uint64_t)&protocol conformance descriptor for PersistedActivityEvent.Activities);
    v26 = (uint64_t)v29;
    sub_1BDBFE670();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v32);
    sub_1BDAF3F74(v26, v19 + *(int *)(v22 + 28));
    sub_1BDAE1544(v19, v30, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
    return sub_1BDAE1658(v19, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
  }
}

uint64_t sub_1BDAF375C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PersistedActivityEvent.init(from:)(a1, a2);
}

uint64_t sub_1BDAF3770(_QWORD *a1)
{
  return PersistedActivityEvent.encode(to:)(a1);
}

uint64_t sub_1BDAF378C()
{
  sub_1BDBFEA0C();
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BDBFD620();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  PersistedActivityEvent.Activities.hash(into:)();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDAF38D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1BDAF3908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

void (*sub_1BDAF3940())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1BDAF3950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2 + *(int *)(a1 + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a2 = *(_BYTE *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDAF396C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void _s11NotesShared22PersistedActivityEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  if ((sub_1BDBFCA98() & 1) != 0)
  {
    v4 = (int *)type metadata accessor for PersistedActivityEvent();
    v5 = v4[5];
    v6 = *(unsigned __int8 *)(a1 + v5);
    v8 = *(_QWORD *)(a1 + v5 + 8);
    v7 = *(_QWORD *)(a1 + v5 + 16);
    v9 = a2 + v5;
    v11 = *(_QWORD *)(v9 + 8);
    v10 = *(_QWORD *)(v9 + 16);
    if (v6)
      v12 = 1702129518;
    else
      v12 = 0x7265646C6F66;
    if (v6)
      v13 = 0xE400000000000000;
    else
      v13 = 0xE600000000000000;
    if (*(_BYTE *)v9)
      v14 = 1702129518;
    else
      v14 = 0x7265646C6F66;
    if (*(_BYTE *)v9)
      v15 = 0xE400000000000000;
    else
      v15 = 0xE600000000000000;
    if (v12 == v14 && v13 == v15)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = sub_1BDBFE874();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    if (v8 == v11 && v7 == v10)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v19 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
        return;
    }
    v20 = v4[6];
    v21 = *(_QWORD *)(a1 + v20);
    v22 = *(_QWORD *)(a1 + v20 + 8);
    v23 = (_QWORD *)(a2 + v20);
    if (v21 == *v23 && v22 == v23[1] || (sub_1BDBFE874() & 1) != 0)
      _s11NotesShared22PersistedActivityEventV10ActivitiesO2eeoiySbAE_AEtFZ_0(a1 + v4[7], a2 + v4[7]);
  }
}

uint64_t sub_1BDAF3B6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1BDBFCB40();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, v3, MEMORY[0x1E0CB09C8]);
  v19 = sub_1BDBFDD28();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_1BDB448E4((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_1BDAF3D3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1BDBFDD28();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1BDB44B38(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BDAF3DD0(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  sub_1BDAF52F4();
  sub_1BDAC31B0(&qword_1EF50D390, (uint64_t (*)(uint64_t))sub_1BDAF52F4, MEMORY[0x1E0DEFCF8]);
  result = sub_1BDBFDD28();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BDBFE574();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1C3B79954](i, a1);
        sub_1BDB44CE4(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1BDB44CE4(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDAF3F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersistedActivityEvent.Activities();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDAF3F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersistedActivityEvent.Activities();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDAF3FB8()
{
  unint64_t result;

  result = qword_1EF50BE90;
  if (!qword_1EF50BE90)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1858C, &type metadata for PersistedActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50BE90);
  }
  return result;
}

unint64_t sub_1BDAF3FFC()
{
  unint64_t result;

  result = qword_1EF50BEA0;
  if (!qword_1EF50BEA0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventObject, &type metadata for ActivityEventObject);
    atomic_store(result, (unint64_t *)&qword_1EF50BEA0);
  }
  return result;
}

unint64_t sub_1BDAF4040()
{
  unint64_t result;

  result = qword_1EF50BEA8;
  if (!qword_1EF50BEA8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventParticipant, &type metadata for ActivityEventParticipant);
    atomic_store(result, (unint64_t *)&qword_1EF50BEA8);
  }
  return result;
}

unint64_t sub_1BDAF4084()
{
  unint64_t result;

  result = qword_1EF50BEC8;
  if (!qword_1EF50BEC8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventObject, &type metadata for ActivityEventObject);
    atomic_store(result, (unint64_t *)&qword_1EF50BEC8);
  }
  return result;
}

unint64_t sub_1BDAF40C8()
{
  unint64_t result;

  result = qword_1EF50BED0;
  if (!qword_1EF50BED0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventParticipant, &type metadata for ActivityEventParticipant);
    atomic_store(result, (unint64_t *)&qword_1EF50BED0);
  }
  return result;
}

uint64_t sub_1BDAF410C()
{
  return sub_1BDAC31B0(&qword_1EF50BEE0, (uint64_t (*)(uint64_t))type metadata accessor for PersistedActivityEvent, (uint64_t)&protocol conformance descriptor for PersistedActivityEvent);
}

uint64_t *initializeBufferWithCopyOfBuffer for PersistedActivityEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BDBFCAC8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v17 = a3[7];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = type metadata accessor for PersistedActivityEvent.Activities();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        *(_BYTE *)v18 = *(_BYTE *)v19;
        v21 = v19[2];
        v18[1] = v19[1];
        v18[2] = v21;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *(_BYTE *)v18 = *(_BYTE *)v19;
        v24 = v19[2];
        v18[1] = v19[1];
        v18[2] = v24;
        *((_BYTE *)v18 + 24) = *((_BYTE *)v19 + 24);
        v25 = v19[4];
        v26 = v19[5];
        v18[4] = v25;
        v18[5] = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(_BYTE *)v18 = *(_BYTE *)v19;
        v27 = v19[2];
        v18[1] = v19[1];
        v18[2] = v27;
        *((_BYTE *)v18 + 24) = *((_BYTE *)v19 + 24);
        v28 = v19[5];
        v18[4] = v19[4];
        v18[5] = v28;
        *((_BYTE *)v18 + 48) = *((_BYTE *)v19 + 48);
        v29 = v19[7];
        v30 = v19[8];
        v18[7] = v29;
        v18[8] = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        v31 = v19[1];
        *v18 = *v19;
        v18[1] = v31;
        v32 = v19[2];
        v33 = v19[3];
        v18[2] = v32;
        v18[3] = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v34 = sub_1BDBFCB40();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v18, v19, v34);
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
        *((_BYTE *)v18 + *(int *)(v35 + 48)) = *((_BYTE *)v19 + *(int *)(v35 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *v18 = *v19;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for PersistedActivityEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v4 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  type metadata accessor for PersistedActivityEvent.Activities();
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
    case 7:
      goto LABEL_5;
    case 1:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    case 6:
      v7 = sub_1BDBFCB40();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for PersistedActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = type metadata accessor for PersistedActivityEvent.Activities();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
      *(_BYTE *)v17 = *(_BYTE *)v18;
      v20 = v18[2];
      v17[1] = v18[1];
      v17[2] = v20;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 1u:
      *(_BYTE *)v17 = *(_BYTE *)v18;
      v21 = v18[2];
      v17[1] = v18[1];
      v17[2] = v21;
      *((_BYTE *)v17 + 24) = *((_BYTE *)v18 + 24);
      v22 = v18[4];
      v23 = v18[5];
      v17[4] = v22;
      v17[5] = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 2u:
      *(_BYTE *)v17 = *(_BYTE *)v18;
      v24 = v18[2];
      v17[1] = v18[1];
      v17[2] = v24;
      *((_BYTE *)v17 + 24) = *((_BYTE *)v18 + 24);
      v25 = v18[5];
      v17[4] = v18[4];
      v17[5] = v25;
      *((_BYTE *)v17 + 48) = *((_BYTE *)v18 + 48);
      v26 = v18[7];
      v27 = v18[8];
      v17[7] = v26;
      v17[8] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 4u:
    case 5u:
      v28 = v18[1];
      *v17 = *v18;
      v17[1] = v28;
      v29 = v18[2];
      v30 = v18[3];
      v17[2] = v29;
      v17[3] = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 6u:
      v31 = sub_1BDBFCB40();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v17, v18, v31);
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
      *((_BYTE *)v17 + *(int *)(v32 + 48)) = *((_BYTE *)v18 + *(int *)(v32 + 48));
      goto LABEL_9;
    case 7u:
      *v17 = *v18;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for PersistedActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = *(_QWORD *)(v12 + 16);
  v11[3] = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v13 = a3[7];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    sub_1BDAE1658(a1 + v13, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
    v16 = type metadata accessor for PersistedActivityEvent.Activities();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        *(_BYTE *)v14 = *(_BYTE *)v15;
        v14[1] = v15[1];
        v14[2] = v15[2];
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 1u:
        *(_BYTE *)v14 = *(_BYTE *)v15;
        v14[1] = v15[1];
        v14[2] = v15[2];
        *((_BYTE *)v14 + 24) = *((_BYTE *)v15 + 24);
        v14[4] = v15[4];
        v14[5] = v15[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
        *(_BYTE *)v14 = *(_BYTE *)v15;
        v14[1] = v15[1];
        v14[2] = v15[2];
        *((_BYTE *)v14 + 24) = *((_BYTE *)v15 + 24);
        v14[4] = v15[4];
        v14[5] = v15[5];
        *((_BYTE *)v14 + 48) = *((_BYTE *)v15 + 48);
        v14[7] = v15[7];
        v14[8] = v15[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 4u:
      case 5u:
        *v14 = *v15;
        v14[1] = v15[1];
        v14[2] = v15[2];
        v14[3] = v15[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 6u:
        v17 = sub_1BDBFCB40();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
        *((_BYTE *)v14 + *(int *)(v18 + 48)) = *((_BYTE *)v15 + *(int *)(v18 + 48));
        goto LABEL_10;
      case 7u:
        *v14 = *v15;
        swift_bridgeObjectRetain();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t initializeWithTake for PersistedActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
  *(_OWORD *)v9 = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = type metadata accessor for PersistedActivityEvent.Activities();
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    v19 = sub_1BDBFCB40();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
    v16[*(int *)(v20 + 48)] = v17[*(int *)(v20 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for PersistedActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  v13[2] = *(_QWORD *)(v14 + 16);
  v13[3] = v16;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v17 = a3[7];
    v18 = (_BYTE *)(a1 + v17);
    v19 = (_BYTE *)(a2 + v17);
    sub_1BDAE1658(a1 + v17, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
    v20 = type metadata accessor for PersistedActivityEvent.Activities();
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      v21 = sub_1BDBFCB40();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
      v18[*(int *)(v22 + 48)] = v19[*(int *)(v22 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PersistedActivityEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDAF4D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1BDBFCAC8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for PersistedActivityEvent.Activities();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for PersistedActivityEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDAF4E3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for PersistedActivityEvent.Activities();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1BDAF4EE4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BDBFCAC8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PersistedActivityEvent.Activities();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PersistedActivityEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BDAF4FC8 + 4 * byte_1BDC18382[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BDAF4FFC + 4 * byte_1BDC1837D[v4]))();
}

uint64_t sub_1BDAF4FFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAF5004(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDAF500CLL);
  return result;
}

uint64_t sub_1BDAF5018(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDAF5020);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BDAF5024(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAF502C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersistedActivityEvent.CodingKeys()
{
  return &type metadata for PersistedActivityEvent.CodingKeys;
}

unint64_t sub_1BDAF504C()
{
  unint64_t result;

  result = qword_1EF50BEE8;
  if (!qword_1EF50BEE8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18564, &type metadata for PersistedActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50BEE8);
  }
  return result;
}

unint64_t sub_1BDAF5094()
{
  unint64_t result;

  result = qword_1EF50BEF0;
  if (!qword_1EF50BEF0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC184D4, &type metadata for PersistedActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50BEF0);
  }
  return result;
}

unint64_t sub_1BDAF50DC()
{
  unint64_t result;

  result = qword_1EF50BEF8[0];
  if (!qword_1EF50BEF8[0])
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC184FC, &type metadata for PersistedActivityEvent.CodingKeys);
    atomic_store(result, qword_1EF50BEF8);
  }
  return result;
}

uint64_t sub_1BDAF5120(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463656A626FLL && a2 == 0xE600000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1BDAF52F4()
{
  unint64_t result;

  result = qword_1EF50FF20;
  if (!qword_1EF50FF20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50FF20);
  }
  return result;
}

uint64_t sub_1BDAF5330()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BDAF539C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1BDAF540C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1BDAF541C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1BDAF544C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1BDAF547C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1BDAF54AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1BDAF54DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BDAF558C + 4 * byte_1BDC18600[(v7 - 1)]))();
}

void sub_1BDAF55DC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for HelpCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HelpCommand);
}

void sub_1BDAF5798()
{
  sub_1BDAF57A4();
}

void sub_1BDAF57A4()
{
  sub_1BDBFE52C();
  __break(1u);
}

uint64_t sub_1BDAF57FC(uint64_t *a1)
{
  uint64_t v1;

  sub_1BDAF585C((uint64_t)&off_1E76D26C0, a1);
  return sub_1BDAF599C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1BDAF585C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(void))(a1 + 16))();
  if (!v2)
  {
    a2[3] = MEMORY[0x1E0DEA968];
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1BDAF5894(uint64_t a1)
{
  return sub_1BDB3671C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1BDAF58B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_1BDAF58C8(uint64_t a1)
{
  return sub_1BDAF5894(a1);
}

uint64_t sub_1BDAF58DC(uint64_t *a1)
{
  uint64_t v1;

  sub_1BDAF585C((uint64_t)&off_1E76D3248, a1);
  return sub_1BDAF599C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1BDAF593C(uint64_t *a1)
{
  uint64_t v1;

  sub_1BDAF585C((uint64_t)&off_1E76D3358, a1);
  return sub_1BDAF599C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1BDAF599C(uint64_t (*a1)(void))
{
  return a1();
}

id static related decl 'e' for ICErrorCode.assertionFailure(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4;
  id v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = sub_1BDAF5A34(v4, a1, a2);
  swift_release();
  return v5;
}

uint64_t sub_1BDAF5A10()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BDAF5A34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  void *v3;
  void **v4;
  id v5;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v14;

  v4 = (void **)(a1 + 16);
  v3 = *(void **)(a1 + 16);
  if (v3)
  {
    v5 = *(id *)(a1 + 16);
  }
  else
  {
    type metadata accessor for ICError(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BF98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(inited + 32) = sub_1BDBFD6F8();
    *(_QWORD *)(inited + 40) = v8;
    v9 = a3();
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v9;
    *(_QWORD *)(inited + 56) = v10;
    sub_1BDAC2F74(inited);
    sub_1BDAF5B44();
    sub_1BDBFC858();
    swift_beginAccess();
    v11 = *v4;
    *v4 = v14;
    v5 = v14;

    v3 = 0;
  }
  v12 = v3;
  return v5;
}

unint64_t sub_1BDAF5B44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50B3D0;
  if (!qword_1EF50B3D0)
  {
    type metadata accessor for ICError(255);
    result = MEMORY[0x1C3B7B388](&unk_1BDC17260, v1);
    atomic_store(result, (unint64_t *)&qword_1EF50B3D0);
  }
  return result;
}

uint64_t sub_1BDAF5B8C@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BFA0);
  v5 = sub_1BDBFDAAC();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF48], v5);
  sub_1BDBFDDAC();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEB8A8], v4);
  if ((sub_1BDBFD92C() & 1) != 0)
  {
    sub_1BDBFDAC4();
    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v6, 1, a1);
}

google::protobuf::io::ZeroCopyOutputStream *Array.init<A, B>(uniquing:by:uniquingKeysWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  google::protobuf::io::ZeroCopyOutputStream *v9;

  v9 = sub_1BDAF76B8(a1, a2, a3, a4, a5, a6, a7);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 8))(a1, a5);
  return v9;
}

uint64_t Array.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  sub_1BDAF77F0(a1, a2, a3);
  v4 = sub_1BDBFE0AC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_1BDAF5ED0(uint64_t a1, uint64_t *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char isClassOrObjCExistentialType;
  uint64_t v13;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BFA0);
  v9 = sub_1BDBFDAAC();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF48], v9);
  sub_1BDBFDDAC();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEB8A8], v8);
  result = sub_1BDBFD92C();
  if ((result & 1) != 0)
  {
    sub_1BDBFDA34();
    v11 = *a2;
    sub_1BDAF715C(a3, *a2);
    isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0)
      v13 = v11;
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 24))(v13+ ((*(unsigned __int8 *)(*(_QWORD *)(a4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(a4 - 8) + 72) * a3, a1, a4);
  }
  return result;
}

void (*Array.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  void *v12;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = sub_1BDBFE0AC();
  v7[3] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[4] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v7[5] = malloc(v11);
  v12 = malloc(v11);
  v7[6] = v12;
  Array.subscript.getter(v8, (uint64_t)v12);
  return sub_1BDAF60B8;
}

void sub_1BDAF60B8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[5];
  v4 = (void *)(*a1)[6];
  v5 = (*a1)[3];
  v6 = (*a1)[4];
  v7 = (*a1)[1];
  v8 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_1BDAF77F0((uint64_t)v3, v8, v7);
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
  }
  else
  {
    sub_1BDAF77F0((*a1)[6], v8, v7);
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v9(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

google::protobuf::io::ZeroCopyOutputStream *Array.init<A, B>(uniquing:combine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::io::ZeroCopyOutputStream *v8;

  v8 = sub_1BDAF7580(a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 8))(a1, a6);
  return v8;
}

uint64_t sub_1BDAF61BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*a2 + *MEMORY[0x1E0DEE2A8]);
  v5 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v5, a1, v4);
}

uint64_t sub_1BDAF6254(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_1BDBFE0AC();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_1BDBFD8D8();
  v57 = sub_1BDBFE49C();
  v53 = sub_1BDBFE4A8();
  sub_1BDBFE460();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_1BDBFD8CC();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1BDBFE0F4();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_1BDBFE490();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_1BDBFE0F4();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_1BDBFE490();
      sub_1BDBFE0F4();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t Array.appendNonNil(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = sub_1BDBFE0AC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  v10 = MEMORY[0x1E0C80A78](v6);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v8, v3);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v3);
  sub_1BDBFDA7C();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v3);
}

uint64_t Array.insertOptional(_:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = sub_1BDBFE0AC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(_QWORD *)(v4 - 8);
  v11 = MEMORY[0x1E0C80A78](v7);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v9, v4);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v4);
  sub_1BDBFDA88();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v4);
}

uint64_t Array.prepend(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1BDBFDA88();
}

uint64_t Array.prependNonNil(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = sub_1BDBFE0AC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  Array.prepend(_:)((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
}

uint64_t Array.firstIndex(matching:)(uint64_t (*a1)(uint64_t, char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, char *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a1;
  v22 = a2;
  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = sub_1BDBFE0AC();
  v23 = *(_QWORD *)(v10 - 8);
  v24 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v20 - v14;
  v27 = a3;
  v16 = sub_1BDBFDAAC();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v16);
  sub_1BDBFD8F0();
  v25 = v26;
  sub_1BDBFE568();
  sub_1BDBFE544();
  sub_1BDBFE55C();
  while (1)
  {
    sub_1BDBFE550();
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v15, v13, v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v15, 1, TupleTypeMetadata2) == 1)break;
    v17 = *(_QWORD *)v15;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v15[*(int *)(TupleTypeMetadata2 + 48)], a4);
    v18 = v21(v17, v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a4);
    if ((v18 & 1) != 0)
      goto LABEL_6;
  }
  v17 = 0;
LABEL_6:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t Array.firstSearchingBackwards(from:matching:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return sub_1BDAF6EB8(a1, (void (*)(void))Array.firstSearchingBackwardsIndex(from:matching:), a2);
}

uint64_t Array.firstSearchingBackwardsIndex(from:matching:)(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  uint64_t v17;

  v7 = a1;
  v8 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1C3B7903C](v11, v12);
  result = 0;
  if ((v7 & 0x8000000000000000) == 0 && v13 > v7)
  {
    while (1)
    {
      sub_1BDBFDAC4();
      v15 = a2(v10);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a5);
      if ((v15 & 1) != 0)
        break;
      if (v7-- <= 0)
        return 0;
    }
    return v7;
  }
  return result;
}

uint64_t Array.firstSearchingForwards(from:matching:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return sub_1BDAF6EB8(a1, (void (*)(void))Array.firstSearchingForwardsIndex(from:matching:), a2);
}

uint64_t sub_1BDAF6EB8@<X0>(uint64_t a1@<X4>, void (*a2)(void)@<X5>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;

  a2();
  if ((v5 & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    sub_1BDBFDAC4();
    v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a3, v6, 1, a1);
}

uint64_t Array.firstSearchingForwardsIndex(from:matching:)(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;

  v8 = a1;
  v9 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10 < 0)
    return 0;
  v13 = MEMORY[0x1C3B7903C](a4, a5);
  if (v13 <= v8)
    return 0;
  v14 = v13;
  while (1)
  {
    sub_1BDBFDAC4();
    v15 = a2(v12);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, a5);
    if ((v15 & 1) != 0)
      break;
    if (v14 == ++v8)
      return 0;
  }
  return v8;
}

google::protobuf::io::ZeroCopyOutputStream *Array<A>.init<A>(uniquing:uniquingKeysWith:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t AssociatedConformanceWitness;
  google::protobuf::io::ZeroCopyOutputStream *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v21 = a2;
  v22 = a3;
  v12 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, a1, v15);
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  KeyPath = swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = sub_1BDAF76B8((uint64_t)v14, KeyPath, v21, v22, a5, AssociatedConformanceWitness, a7);
  swift_release();
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, a5);
  v19(a1, a5);
  return v18;
}

uint64_t sub_1BDAF715C(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_1BDAF71AC(uint64_t a1)
{
  int64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1BDB226F8(0, v2, 0);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(a1 + 56);
    do
    {
      v4 = *(v3 - 3);
      v5 = *(v3 - 2);
      v6 = *(v3 - 1);
      v7 = *v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      v8 = v14;
      v9 = v15;
      v11 = *(_QWORD *)(v16 + 16);
      v10 = *(_QWORD *)(v16 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BDB226F8(v10 > 1, v11 + 1, 1);
        v9 = v15;
        v8 = v14;
      }
      v3 += 4;
      *(_QWORD *)(v16 + 16) = v11 + 1;
      v12 = (_QWORD *)(v16 + 48 * v11);
      v12[4] = v8;
      v12[5] = v9;
      v12[6] = v4;
      v12[7] = v5;
      v12[8] = v6;
      v12[9] = v7;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BDAF72E0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = (uint64_t *)(a1 + 40);
    do
    {
      v7 = v5[3];
      v8 = v5[4];
      v9 = v5[1];
      v10 = v5[2];
      v12 = *(v5 - 1);
      v11 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v11)
        break;
      v31 = v9;
      v32 = v7;
      v30 = v4;
      v13 = (_QWORD *)*a3;
      v15 = sub_1BDAC358C(v12, v11);
      v16 = v13[2];
      v17 = (v14 & 1) == 0;
      v18 = v16 + v17;
      if (__OFADD__(v16, v17))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        result = sub_1BDBFE994();
        __break(1u);
        return result;
      }
      v19 = v14;
      if (v13[3] >= v18)
      {
        if ((a2 & 1) == 0)
          sub_1BDBCD078();
      }
      else
      {
        sub_1BDBCE814(v18, a2 & 1);
        v20 = sub_1BDAC358C(v12, v11);
        if ((v19 & 1) != (v21 & 1))
          goto LABEL_18;
        v15 = v20;
      }
      v22 = (_QWORD *)*a3;
      if ((v19 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v6 = (uint64_t *)(v22[7] + 32 * v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v6 = v31;
        v6[1] = v10;
        v6[2] = v32;
        v6[3] = v8;
      }
      else
      {
        v22[(v15 >> 6) + 8] |= 1 << v15;
        v23 = (uint64_t *)(v22[6] + 16 * v15);
        *v23 = v12;
        v23[1] = v11;
        v24 = (uint64_t *)(v22[7] + 32 * v15);
        *v24 = v31;
        v24[1] = v10;
        v24[2] = v32;
        v24[3] = v8;
        v25 = v22[2];
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_17;
        v22[2] = v27;
      }
      v5 += 6;
      a2 = 1;
      --v4;
    }
    while (v30 != 1);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BDAF74BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = sub_1BDAF71AC(a1);
  if (*(_QWORD *)(v3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EF50BFA8);
    v4 = sub_1BDBFE598();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E0];
  }
  v6 = v4;
  sub_1BDAF72E0(v3, 1, &v6);
  if (!v1)
    v2 = sub_1BDAE9A20(v6);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

google::protobuf::io::ZeroCopyOutputStream *sub_1BDAF7580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  google::protobuf::io::ZeroCopyOutputStream *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v3 + 16))((char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = (google::protobuf::io::ZeroCopyOutputStream *)sub_1BDBFD5F0();
  if (!v1)
  {
    google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(result);
    v6 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8[1] = v6;
    v7 = sub_1BDBFD5E4();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DE9F98], v7);
    return (google::protobuf::io::ZeroCopyOutputStream *)sub_1BDBFDAB8();
  }
  return result;
}

google::protobuf::io::ZeroCopyOutputStream *sub_1BDAF76B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::io::ZeroCopyOutputStream *v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = a2;
  v15 = a5;
  v16 = a6;
  v17 = a7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v19 = sub_1BDAF6254((void (*)(char *, char *))sub_1BDAF7954, (uint64_t)v14, a5, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], a7, MEMORY[0x1E0DEDD18], v10);
  v11 = sub_1BDBFDAAC();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v11);
  v12 = sub_1BDAF7580((uint64_t)&v19);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BDAF77F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[7];
  char v6;

  v5[2] = *(_QWORD *)(a3 + 16);
  v5[4] = a2;
  sub_1BDBFE0AC();
  return sub_1BDAF5B8C((void (*)(char *, char *))sub_1BDAF7934, (uint64_t)v5, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEE9C0] + 8, v3, (uint64_t)&v6);
}

uint64_t sub_1BDAF7870()
{
  return sub_1BDBFD938();
}

uint64_t sub_1BDAF78A0()
{
  return 32;
}

__n128 sub_1BDAF78AC(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1BDAF78B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return Array.subscript.getter(*(_QWORD *)(a2 + a1 - 8), a3);
}

uint64_t sub_1BDAF78D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a3;
  v5 = sub_1BDBFDAAC();
  return sub_1BDAF77F0(a1, v4, v5);
}

uint64_t sub_1BDAF791C()
{
  return 8;
}

_QWORD *sub_1BDAF7928(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BDAF7934(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDAF5ED0(a1, *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BDAF7954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BDAF61BC(a1, *(_QWORD **)(v2 + 40), a2);
}

uint64_t sub_1BDAF7974(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BDAF79BC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for GroupHelpCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GroupHelpCommand);
}

uint64_t sub_1BDAF7A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 8))(a3);
}

uint64_t sub_1BDAF7A34(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;

  result = sub_1BDB362CC(a3, a4);
  if (!v4)
  {
    if (v9)
    {
      if ((a2 & 1) != 0)
      {
        sub_1BDBFE304();
        sub_1BDB36EF0(a3, a4);
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD7DC();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD7DC();
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        sub_1BDBFE760();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD7DC();
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        sub_1BDBFE760();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD7DC();
      }
      else
      {
        sub_1BDB36EF0(a3, a4);
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD7DC();
        sub_1BDB3723C();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD7DC();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
      }
      return 0;
    }
    else
    {
      return sub_1BDB36EF0(a3, a4);
    }
  }
  return result;
}

uint64_t sub_1BDAF7DA0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDAF7A34(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1BDAF7DC4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BDAF7A08(*v1, 0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

id RealtimeCollaborationSelectionDocument.State.__allocating_init(identity:fields:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_1BDBFCAF8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BBA0);
  v5 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithIdentity_fields_, v4, v5);

  v7 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

id RealtimeCollaborationSelectionDocument.State.init(identity:fields:)(uint64_t a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  objc_super v10;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = (void *)sub_1BDBFCAF8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BBA0);
  v6 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  v10.receiver = v2;
  v10.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v10, sel_initWithIdentity_fields_, v5, v6);

  v8 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id RealtimeCollaborationSelectionDocument.State.__allocating_init(iccrCoder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithICCRCoder_, a1);

  return v3;
}

id RealtimeCollaborationSelectionDocument.State.init(iccrCoder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithICCRCoder_, a1);

  return v3;
}

unint64_t _s11NotesShared38RealtimeCollaborationSelectionDocumentC5StateC12crPropertiesSDySSSo12ICCRDataType_pGvgZ_0()
{
  uint64_t inited;
  NSString *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC17EC0;
  v1 = NSStringFromSelector(sel_participantIDsToSelectionRegisters);
  v2 = sub_1BDBFD6F8();
  v4 = v3;

  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)ICCRDictionary), sel_init);
  v5 = NSStringFromSelector(sel_participantIDsOrder);
  v6 = sub_1BDBFD6F8();
  v8 = v7;

  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)ICCROrderedSet), sel_init);
  return sub_1BDB0AAA4(inited);
}

uint64_t type metadata accessor for __RealtimeCollaborationSelectionState()
{
  return objc_opt_self();
}

id sub_1BDAF8314()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  v1 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1, 0xD000000000000011, 0x80000001BDC370F0);

  return v2;
}

uint64_t sub_1BDAF83EC(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C030);
}

uint64_t static Logger.accounts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(qword_1EF50AFE0, (uint64_t)qword_1EF50C030, a1);
}

uint64_t sub_1BDAF8428(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23AEF0);
}

uint64_t static Logger.activityStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23B0E8, (uint64_t)qword_1ED23AEF0, a1);
}

uint64_t sub_1BDAF8470@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1BDBFCE34();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1BDAF84D8(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C048);
}

uint64_t static Logger.analytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(qword_1EF50AFF0, (uint64_t)qword_1EF50C048, a1);
}

uint64_t sub_1BDAF8518(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23A2E8);
}

uint64_t static Logger.application.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(qword_1ED23A5B8, (uint64_t)qword_1ED23A2E8, a1);
}

uint64_t sub_1BDAF855C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C060);
}

uint64_t static Logger.archiving.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B000, (uint64_t)qword_1EF50C060, a1);
}

uint64_t sub_1BDAF859C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23ADC0);
}

uint64_t static Logger.audioTranscription.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23ADD8, (uint64_t)qword_1ED23ADC0, a1);
}

uint64_t sub_1BDAF85DC(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C078);
}

uint64_t static Logger.cloud.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B010, (uint64_t)qword_1EF50C078, a1);
}

uint64_t sub_1BDAF8614(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23A300);
}

uint64_t static Logger.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23A5C8, (uint64_t)qword_1ED23A300, a1);
}

uint64_t sub_1BDAF865C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C090);
}

uint64_t static Logger.coreData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B020, (uint64_t)qword_1EF50C090, a1);
}

uint64_t sub_1BDAF8698(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C0A8);
}

uint64_t static Logger.crFramework.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B028, (uint64_t)qword_1EF50C0A8, a1);
}

uint64_t sub_1BDAF86DC(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C0C0);
}

uint64_t static Logger.crypto.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B030, (uint64_t)qword_1EF50C0C0, a1);
}

uint64_t sub_1BDAF8714(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C0D8);
}

uint64_t static Logger.dataStoreServer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B038, (uint64_t)qword_1EF50C0D8, a1);
}

uint64_t sub_1BDAF875C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C0F0);
}

uint64_t static Logger.delete.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B040, (uint64_t)qword_1EF50C0F0, a1);
}

uint64_t sub_1BDAF8794(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C108);
}

uint64_t static Logger.digitalSeparation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B048, (uint64_t)qword_1EF50C108, a1);
}

uint64_t sub_1BDAF87D4(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C120);
}

uint64_t static Logger.dragAndDrop.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B050, (uint64_t)qword_1EF50C120, a1);
}

uint64_t sub_1BDAF8818(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C138);
}

uint64_t static Logger.documentCamera.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B058, (uint64_t)qword_1EF50C138, a1);
}

uint64_t sub_1BDAF8860(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C150);
}

uint64_t static Logger.duo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B060, (uint64_t)qword_1EF50C150, a1);
}

uint64_t sub_1BDAF8894(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C168);
}

uint64_t static Logger.export.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B068, (uint64_t)qword_1EF50C168, a1);
}

uint64_t sub_1BDAF88CC(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C180);
}

uint64_t static Logger.filesystem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B070, (uint64_t)qword_1EF50C180, a1);
}

uint64_t sub_1BDAF890C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C198);
}

uint64_t static Logger.handoff.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B078, (uint64_t)qword_1EF50C198, a1);
}

uint64_t sub_1BDAF8948(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C1B0);
}

uint64_t static Logger.hashtag.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B080, (uint64_t)qword_1EF50C1B0, a1);
}

uint64_t sub_1BDAF8984(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C1C8);
}

uint64_t static Logger.html.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B088, (uint64_t)qword_1EF50C1C8, a1);
}

uint64_t sub_1BDAF89B8(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C1E0);
}

uint64_t static Logger.import.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B090, (uint64_t)qword_1EF50C1E0, a1);
}

uint64_t sub_1BDAF89F0(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C1F8);
}

uint64_t static Logger.intents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B098, (uint64_t)qword_1EF50C1F8, a1);
}

uint64_t sub_1BDAF8A2C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C210);
}

uint64_t static Logger.internal.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0A0, (uint64_t)qword_1EF50C210, a1);
}

uint64_t sub_1BDAF8A68(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23A2D0);
}

uint64_t static Logger.launchTask.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23A5A8, (uint64_t)qword_1ED23A2D0, a1);
}

uint64_t sub_1BDAF8AA8(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23B160);
}

uint64_t static Logger.link.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23B180, (uint64_t)qword_1ED23B160, a1);
}

uint64_t sub_1BDAF8ADC(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C228);
}

uint64_t static Logger.linksAndSuggestions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(qword_1EF50B0A8, (uint64_t)qword_1EF50C228, a1);
}

uint64_t sub_1BDAF8B1C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23ADE0);
}

uint64_t static Logger.math.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23AB70, (uint64_t)qword_1ED23ADE0, a1);
}

uint64_t sub_1BDAF8B50(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C240);
}

uint64_t static Logger.media.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0B8, (uint64_t)qword_1EF50C240, a1);
}

uint64_t sub_1BDAF8B88(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C258);
}

uint64_t static Logger.mentions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0C0, (uint64_t)qword_1EF50C258, a1);
}

uint64_t sub_1BDAF8BC4(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C270);
}

uint64_t static Logger.migration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0C8, (uint64_t)qword_1EF50C270, a1);
}

uint64_t sub_1BDAF8C04(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C288);
}

uint64_t static Logger.move.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0D0, (uint64_t)qword_1EF50C288, a1);
}

uint64_t sub_1BDAF8C38(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C2A0);
}

uint64_t static Logger.multipeer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0D8, (uint64_t)qword_1EF50C2A0, a1);
}

uint64_t sub_1BDAF8C78(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C2B8);
}

uint64_t static Logger.nlp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0E0, (uint64_t)qword_1EF50C2B8, a1);
}

uint64_t sub_1BDAF8CAC(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C2D0);
}

uint64_t static Logger.notifications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0E8, (uint64_t)qword_1EF50C2D0, a1);
}

uint64_t sub_1BDAF8CF4(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C2E8);
}

uint64_t static Logger.pencilKit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0F0, (uint64_t)qword_1EF50C2E8, a1);
}

uint64_t sub_1BDAF8D34(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C300);
}

uint64_t static Logger.previewGeneration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B0F8, (uint64_t)qword_1EF50C300, a1);
}

uint64_t sub_1BDAF8D74(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C318);
}

uint64_t static Logger.imageAnalyzer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B100, (uint64_t)qword_1EF50C318, a1);
}

uint64_t sub_1BDAF8DBC(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C330);
}

uint64_t static Logger.outlining.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B108, (uint64_t)qword_1EF50C330, a1);
}

uint64_t sub_1BDAF8DFC(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C348);
}

uint64_t static Logger.scripting.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B110, (uint64_t)qword_1EF50C348, a1);
}

uint64_t sub_1BDAF8E3C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C360);
}

uint64_t static Logger.searchIndexer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B118, (uint64_t)qword_1EF50C360, a1);
}

uint64_t sub_1BDAF8E84(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C378);
}

uint64_t static Logger.sharingExtension.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B120, (uint64_t)qword_1EF50C378, a1);
}

uint64_t sub_1BDAF8EC4(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C390);
}

uint64_t static Logger.sidecar.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B128, (uint64_t)qword_1EF50C390, a1);
}

uint64_t sub_1BDAF8F00(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C3A8);
}

uint64_t static Logger.query.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B130, (uint64_t)qword_1EF50C3A8, a1);
}

uint64_t sub_1BDAF8F38(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C3C0);
}

uint64_t static Logger.quickNote.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B138, (uint64_t)qword_1EF50C3C0, a1);
}

uint64_t static Logger.fastSyncPresence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23A5D0, (uint64_t)qword_1ED23A318, a1);
}

uint64_t sub_1BDAF8F94(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23A330);
}

uint64_t static Logger.realtimeCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23A5D8, (uint64_t)qword_1ED23A330, a1);
}

uint64_t sub_1BDAF8FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C450);
  __swift_allocate_value_buffer(v0, qword_1EF50C3D8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50C3D8);
  if ((sub_1BDAF8314() & 1) != 0)
  {
    if (qword_1ED23A5D8 != -1)
      swift_once();
    v2 = sub_1BDBFCE34();
    v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED23A330);
    v4 = *(_QWORD *)(v2 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v3, v2);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v6 = v1;
    v7 = 0;
    v8 = v2;
  }
  else
  {
    v8 = sub_1BDBFCE34();
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v6 = v1;
    v7 = 1;
  }
  return v5(v6, v7, 1, v8);
}

uint64_t static Logger.verboseRealtimeCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF50B140 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C450);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF50C3D8);
  return sub_1BDAF9134(v3, a1);
}

uint64_t sub_1BDAF9134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDAF917C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C3F0);
}

uint64_t static Logger.siri.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(qword_1EF50B148, (uint64_t)qword_1EF50C3F0, a1);
}

uint64_t sub_1BDAF91B0(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23B078);
}

uint64_t static Logger.systemPaper.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23B0E0, (uint64_t)qword_1ED23B078, a1);
}

uint64_t sub_1BDAF91F4(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C408);
}

uint64_t static Logger.test.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B158, (uint64_t)qword_1EF50C408, a1);
}

uint64_t sub_1BDAF9228(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED239D88);
}

uint64_t static Logger.thumbnails.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23A5B0, (uint64_t)qword_1ED239D88, a1);
}

uint64_t sub_1BDAF9268(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23A290);
}

uint64_t static Logger.topoText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED23A2A8, (uint64_t)qword_1ED23A290, a1);
}

uint64_t sub_1BDAF92A4(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C420);
}

uint64_t static Logger.tool.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B160, (uint64_t)qword_1EF50C420, a1);
}

uint64_t static Logger.ui.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1ED239DA8, (uint64_t)qword_1ED23A348, a1);
}

uint64_t sub_1BDAF92F4(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23A968);
}

uint64_t static Logger.widget.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(qword_1ED23AA00, (uint64_t)qword_1ED23A968, a1);
}

uint64_t sub_1BDAF932C(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1EF50C438);
}

uint64_t static Logger.uiTests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDAF8470(&qword_1EF50B168, (uint64_t)qword_1EF50C438, a1);
}

uint64_t sub_1BDAF9368(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v4 = sub_1BDB22714(0, v1, 0);
    v2 = v10;
    v5 = a1 + 32;
    do
    {
      v5 += 8;
      v4 = ICQueryType.minimumSupportedVersion.getter(v4);
      v6 = v4;
      v8 = *(_QWORD *)(v10 + 16);
      v7 = *(_QWORD *)(v10 + 24);
      if (v8 >= v7 >> 1)
        v4 = sub_1BDB22714(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v10 + 16) = v8 + 1;
      *(_QWORD *)(v10 + 8 * v8 + 32) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDAF9440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = sub_1BDAFF76C(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

_QWORD *sub_1BDAF94A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3 = sub_1BDAFF884(a1, a2, a3);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static ICQueryType.creationDateRange(from:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = type metadata accessor for ICQueryType.DateRange(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BDBFCAC8();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v8, a1, v9);
  v10(&v8[*(int *)(v6 + 20)], a2, v9);
  v11 = swift_allocBox();
  result = sub_1BDAFE158((uint64_t)v8, v12, type metadata accessor for ICQueryType.DateRange);
  *a3 = v11 | 0x4000000000000000;
  return result;
}

uint64_t static ICQueryType.modificationDateRange(from:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = type metadata accessor for ICQueryType.DateRange(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BDBFCAC8();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v8, a1, v9);
  v10(&v8[*(int *)(v6 + 20)], a2, v9);
  v11 = swift_allocBox();
  result = sub_1BDAFE158((uint64_t)v8, v12, type metadata accessor for ICQueryType.DateRange);
  *a3 = v11 | 0x7000000000000000;
  return result;
}

void ICQueryType.minimumSupportedVersion.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1BDAF96D0()
{
  return 9;
}

uint64_t ICQueryType.allowsDeleted.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = ((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1;
  if (v2)
  {
    if (v2 != 2)
    {
      if (v2 == 10)
        return *(unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
      return 1;
    }
    v1 &= 0xFFFFFFFFFFFFFFBuLL;
  }
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  if (!v4)
    return 1;
  v5 = swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    v5 = ICQueryType.allowsDeleted.getter(v5);
    if ((v5 & 1) == 0)
      break;
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ICQueryType.canBeEdited.getter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v1;
  v3 = ((unint64_t)*v1 >> 59) & 0x1E | (*v1 >> 2) & 1;
  if ((v3 - 3) >= 0x15)
  {
    if (v3)
    {
      if (v3 == 1)
      {
        ICQueryType.canBeEdited.getter(a1);
        return 1;
      }
      v2 &= 0xFFFFFFFFFFFFFFBuLL;
    }
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
    if (v5)
    {
      v6 = swift_bridgeObjectRetain();
      v7 = 0;
      do
      {
        v8 = v7 + 1;
        v6 = ICQueryType.canBeEdited.getter(v6);
        v7 = v8;
      }
      while (v5 != v8);
      swift_bridgeObjectRelease();
    }
  }
  return 1;
}

void sub_1BDAF99D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  _QWORD v40[11];
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;

  v40[7] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C5A8);
  MEMORY[0x1E0C80A78](v3);
  v40[3] = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BDBFCB88();
  v6 = *(_QWORD *)(v5 - 8);
  v40[8] = v5;
  v40[9] = v6;
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1BDBFCB7C();
  v45 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v40[10] = (char *)v40 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v40 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v40[6] = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v19 = MEMORY[0x1E0C80A78](v18);
  v40[1] = (char *)v40 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v40 - v21;
  v23 = sub_1BDBFCAC8();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v40[4] = (char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v40[5] = (char *)v40 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v43 = (char *)v40 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v40[0] = (char *)v40 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v44 = (char *)v40 - v34;
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)v40 - v35;
  v37 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  sub_1BDACDF20(a1 + *(int *)(v37 + 28), (uint64_t)v22);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v38 = v41(v22, 1, v23);
  v40[2] = v10;
  if (v38 == 1)
  {
    sub_1BDBFCABC();
    sub_1BDAC350C((uint64_t)v22, &qword_1ED239CD8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v36, v22, v23);
  }
  v39 = *MEMORY[0x1E0CB1130];
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 104);
  v42(v14, v39, v7);
  sub_1BDBFC9F0();
  __asm { BR              X10 }
}

uint64_t sub_1BDAF9D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 88) + 8))(v2, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 112))(v2, v4, v1);
  v8 = *(_QWORD *)(v7 - 104);
  v9 = *(_QWORD *)(v7 - 144);
  sub_1BDBFCB70();
  v10 = *(_QWORD *)(v7 - 160);
  sub_1BDBFCB64();
  v11 = v0;
  v12 = v10;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 136) + 8))(v11, v9);
  v13 = *(_QWORD *)(v7 - 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v13, v6, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 - 120))(v10, 1, v3) == 1)
  {
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v14(v8, v13, v3);
    sub_1BDAC350C(v12, &qword_1ED239CD8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v3);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v14(v8, v12, v3);
  }
  v15 = *(_QWORD *)(v7 - 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 - 112))(v15, *MEMORY[0x1E0CB1140], v1);
  sub_1BDAC31B0(&qword_1EF50C5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
  v16 = sub_1BDBFD6BC();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 88) + 8);
  v17(v15, v1);
  if ((v16 & 1) != 0)
  {
    v17(v2, v1);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v3);
    v18 = *(_QWORD *)(v7 - 104);
  }
  else
  {
    v19 = *(_QWORD *)(v7 - 176);
    v18 = *(_QWORD *)(v7 - 104);
    sub_1BDBFC9D8();
    v20 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v20(v18, v3);
    v17(v2, v1);
    v20(v6, v3);
    v14(v18, v19, v3);
  }
  v21 = *(_QWORD *)(v7 - 96);
  v22 = *(_QWORD *)(v7 - 152);
  v14(v22, v18, v3);
  v23 = type metadata accessor for ICQueryType.DateRange(0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v22 + *(int *)(v23 + 20), v21, v3);
}

id sub_1BDAFA31C(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  sub_1BDBFE304();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(inited + 32) = sub_1BDBFD6F8();
  *(_QWORD *)(inited + 40) = v5;
  if (a2)
  {
    swift_bridgeObjectRetain();
    inited = (uint64_t)sub_1BDBCBCC4((_QWORD *)1, 2, 1, (_QWORD *)inited);
    *(_QWORD *)(inited + 16) = 2;
    *(_QWORD *)(inited + 48) = a1;
    *(_QWORD *)(inited + 56) = a2;
  }
  sub_1BDBC375C(inited);
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v6, v7);

  return v8;
}

uint64_t sub_1BDAFA568(uint64_t result)
{
  if (result == 1)
  {
    sub_1BDBFE304();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    goto LABEL_5;
  }
  if (!result)
  {
    sub_1BDBFE304();
    sub_1BDBFD7DC();
LABEL_5:
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    return 0;
  }
  if (!__OFSUB__(result, 1))
  {
    MEMORY[0x1C3B78E50](0x2E746E65726170, 0xE700000000000000, result - 1);
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFE304();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDAFA7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v7 = *v5;
  switch(((unint64_t)*v5 >> 59) & 0x1E | (*v5 >> 2) & 1)
  {
    case 0uLL:
      v12 = *(_QWORD *)(v7 + 16);
      v13 = swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = sub_1BDAF9440(v12, a1, a2, a3, a4);
      *(_QWORD *)(v13 + 16) = result;
      *a5 = v13;
      return result;
    case 1uLL:
      v15 = swift_allocObject();
      swift_retain();
      sub_1BDAFA7D8((_QWORD *)(v15 + 16), a1, a2, a3, a4);
      result = swift_release();
      v16 = v15 | 4;
      goto LABEL_5;
    case 2uLL:
      v17 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
      v18 = swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_1BDAFF76C(v17, a1, a2, a3, a4);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 16) = v19;
      v16 = v18 | 0x1000000000000000;
LABEL_5:
      *a5 = v16;
      return result;
    case 0x16uLL:
      v20 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10) == a1 && *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x18) == a2;
      if (!v20 && (sub_1BDBFE874() & 1) == 0)
        goto LABEL_13;
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = a3;
      *(_QWORD *)(v21 + 24) = a4;
      *a5 = v21 | 0xB000000000000000;
      result = swift_bridgeObjectRetain();
      break;
    default:
LABEL_13:
      *a5 = v7;
      result = swift_retain();
      break;
  }
  return result;
}

uint64_t sub_1BDAFAA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *v3;
  switch(((unint64_t)*v3 >> 59) & 0x1E | (*v3 >> 2) & 1)
  {
    case 0uLL:
      v8 = *(_QWORD *)(v5 + 16);
      v9 = swift_allocObject();
      swift_bridgeObjectRetain();
      result = (uint64_t)sub_1BDAF94A0(v8, a1, a2);
      *(_QWORD *)(v9 + 16) = result;
      *a3 = v9;
      return result;
    case 1uLL:
      swift_retain();
      sub_1BDAFAA2C(&v17, a1, a2);
      result = swift_release();
      v11 = v17;
      if ((~v17 & 0xF000000000000007) != 0)
      {
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = v11;
        v15 = result | 4;
        goto LABEL_14;
      }
      *a3 = v17;
      return result;
    case 2uLL:
      v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
      v13 = swift_allocObject();
      swift_bridgeObjectRetain();
      v14 = sub_1BDAFF884(v12, a1, a2);
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v13 + 16) = v14;
      v15 = v13 | 0x1000000000000000;
      goto LABEL_14;
    case 0x16uLL:
      result = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      if (result != a1 || *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != a2)
      {
        result = sub_1BDBFE874();
        if ((result & 1) == 0)
          goto LABEL_12;
      }
      v15 = 0xF000000000000007;
LABEL_14:
      *a3 = v15;
      break;
    default:
LABEL_12:
      *a3 = v5;
      result = swift_retain();
      break;
  }
  return result;
}

void static ICQueryType.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v4 = MEMORY[0x1E0C80A78](v3);
  v5 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for ICQueryType.DateRange(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  __asm { BR              X12 }
}

uint64_t sub_1BDAFAD60@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    v4 = 0;
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    v3 = *(_QWORD *)(a1 + 16);
    swift_retain();
    swift_retain();
    v4 = sub_1BDAFB5F0(v2, v3);
    swift_release();
    swift_release();
  }
  return v4 & 1;
}

uint64_t sub_1BDAFB3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1BDBFCC48();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_1BDAC31B0(&qword_1EF50C590, (uint64_t (*)(uint64_t))MEMORY[0x1E0D11188], MEMORY[0x1E0D11198]);
        v17 = sub_1BDBFD6BC();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1BDAFB56C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    for (i = (_QWORD *)(a2 + 40); ; i += 4)
    {
      v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_1BDBFE874() & 1) == 0)
        break;
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1BDAFB5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v9 = 1;
    }
    else
    {
      v3 = (uint64_t *)(a1 + 32);
      v4 = (uint64_t *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v7 = *v3++;
        v6 = v7;
        v8 = *v4++;
        v13 = v8;
        v14 = v6;
        v9 = static ICQueryType.== infix(_:_:)(&v14, &v13);
        v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1BDAFB67C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1BDBFE874(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1BDBFE874() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t static ICQueryType.DateRange.== infix(_:_:)()
{
  if ((sub_1BDBFCA98() & 1) == 0)
    return 0;
  type metadata accessor for ICQueryType.DateRange(0);
  return sub_1BDBFCA98();
}

uint64_t sub_1BDAFB794()
{
  _BYTE *v0;

  if (*v0)
    return 0x657461446F74;
  else
    return 0x657461446D6F7266;
}

uint64_t sub_1BDAFB7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDAFF9D4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDAFB7F0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BDAFB7FC()
{
  sub_1BDAFDFC0();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDAFB824()
{
  sub_1BDAFDFC0();
  return sub_1BDBFEB50();
}

uint64_t ICQueryType.DateRange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C468);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDAFDFC0();
  sub_1BDBFEACC();
  v8[15] = 0;
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1BDBFE718();
  if (!v1)
  {
    type metadata accessor for ICQueryType.DateRange(0);
    v8[14] = 1;
    sub_1BDBFE718();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ICQueryType.DateRange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v22 = a2;
  v26 = sub_1BDBFCAC8();
  v24 = *(_QWORD *)(v26 - 8);
  v4 = MEMORY[0x1E0C80A78](v26);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v20 - v6;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C478);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ICQueryType.DateRange(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDAFDFC0();
  sub_1BDBFEAB4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v20 = v10;
  v21 = a1;
  v13 = (uint64_t)v12;
  v15 = v23;
  v14 = v24;
  v29 = 0;
  sub_1BDAC31B0(&qword_1EF50BEC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v16 = v25;
  sub_1BDBFE670();
  v17 = v16;
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v18(v13, v17, v26);
  v28 = 1;
  sub_1BDBFE670();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
  v18(v13 + *(int *)(v20 + 20), v15, v26);
  sub_1BDAE1544(v13, v22, type metadata accessor for ICQueryType.DateRange);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
  return sub_1BDAE1658(v13, type metadata accessor for ICQueryType.DateRange);
}

uint64_t sub_1BDAFBC60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ICQueryType.DateRange.init(from:)(a1, a2);
}

uint64_t sub_1BDAFBC74(_QWORD *a1)
{
  return ICQueryType.DateRange.encode(to:)(a1);
}

uint64_t sub_1BDAFBC88()
{
  if ((sub_1BDBFCA98() & 1) != 0)
    return sub_1BDBFCA98();
  else
    return 0;
}

NotesShared::ICQueryType::RelativeDateRangeType_optional __swiftcall ICQueryType.RelativeDateRangeType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 7;
  if ((unint64_t)rawValue < 7)
    v2 = rawValue;
  *v1 = v2;
  return (NotesShared::ICQueryType::RelativeDateRangeType_optional)rawValue;
}

uint64_t ICQueryType.RelativeDateRangeType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

NotesShared::ICQueryType::RelativeDateRangeType_optional sub_1BDAFBD00(Swift::Int *a1)
{
  return ICQueryType.RelativeDateRangeType.init(rawValue:)(*a1);
}

void sub_1BDAFBD08(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1BDAFBD14()
{
  sub_1BDB005BC();
  return sub_1BDBFD9A4();
}

uint64_t sub_1BDAFBD70()
{
  sub_1BDB005BC();
  return sub_1BDBFD95C();
}

NotesShared::ICQueryType::RelativeDateRangeUnit_optional __swiftcall ICQueryType.RelativeDateRangeUnit.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (NotesShared::ICQueryType::RelativeDateRangeUnit_optional)rawValue;
}

NotesShared::ICQueryType::RelativeDateRangeUnit_optional sub_1BDAFBDD0(Swift::Int *a1)
{
  return ICQueryType.RelativeDateRangeUnit.init(rawValue:)(*a1);
}

uint64_t sub_1BDAFBDD8()
{
  sub_1BDB00578();
  return sub_1BDBFD9A4();
}

uint64_t sub_1BDAFBE34()
{
  sub_1BDB00578();
  return sub_1BDBFD95C();
}

uint64_t sub_1BDAFBE80()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDAFBEA8 + 4 * byte_1BDC187B6[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1BDAFBEA8()
{
  return 0x6E556D6F74737563;
}

uint64_t sub_1BDAFBEC4()
{
  return 0x6D416D6F74737563;
}

uint64_t sub_1BDAFBEE4()
{
  return 0x636E657265666572;
}

uint64_t sub_1BDAFBF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDAFFABC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDAFBF2C()
{
  sub_1BDAFE004();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDAFBF54()
{
  sub_1BDAFE004();
  return sub_1BDBFEB50();
}

uint64_t ICQueryType.RelativeDateRange.encode(to:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C480);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDAFE004();
  sub_1BDBFEACC();
  v10[15] = *v3;
  v10[14] = 0;
  sub_1BDAFE048();
  sub_1BDBFE718();
  if (!v2)
  {
    v10[13] = v3[1];
    v10[12] = 1;
    sub_1BDAFE08C();
    sub_1BDBFE6DC();
    v10[11] = 2;
    sub_1BDBFE6D0();
    type metadata accessor for ICQueryType.RelativeDateRange(0);
    v10[10] = 3;
    sub_1BDBFCAC8();
    sub_1BDAC31B0(&qword_1EF50BE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1BDBFE6DC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ICQueryType.RelativeDateRange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v21 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C4A0);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDAFE004();
  v22 = v8;
  v12 = v24;
  sub_1BDBFEAB4();
  if (!v12)
  {
    v13 = v6;
    v14 = (uint64_t)v5;
    v15 = v21;
    v29 = 0;
    sub_1BDAFE0D0();
    sub_1BDBFE670();
    v16 = (uint64_t)v11;
    *v11 = v30;
    v27 = 1;
    sub_1BDAFE114();
    sub_1BDBFE628();
    v11[1] = v28;
    v26 = 2;
    *((_QWORD *)v11 + 1) = sub_1BDBFE61C();
    v11[16] = v18 & 1;
    sub_1BDBFCAC8();
    v25 = 3;
    sub_1BDAC31B0(&qword_1EF50BEC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v19 = v23;
    v20 = v22;
    sub_1BDBFE628();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v19);
    sub_1BDADECA8(v14, v16 + *(int *)(v9 + 28));
    sub_1BDAFE158(v16, v15, type metadata accessor for ICQueryType.RelativeDateRange);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1BDAFC404(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDAFC430 + 4 * byte_1BDC187BA[a1]))(6581857, 0xE300000000000000);
}

uint64_t sub_1BDAFC430()
{
  return 7630702;
}

uint64_t sub_1BDAFC43C()
{
  return 29295;
}

uint64_t sub_1BDAFC448()
{
  return 0x656D686361747461;
}

unint64_t sub_1BDAFC464()
{
  return 0xD000000000000011;
}

uint64_t sub_1BDAFC5DC()
{
  return 0x61506D6574737973;
}

uint64_t sub_1BDAFC5FC()
{
  return 6775156;
}

uint64_t sub_1BDAFC608()
{
  return 0x646567676174;
}

uint64_t sub_1BDAFC61C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ICQueryType.RelativeDateRange.init(from:)(a1, a2);
}

uint64_t sub_1BDAFC630(_QWORD *a1)
{
  return ICQueryType.RelativeDateRange.encode(to:)(a1);
}

uint64_t sub_1BDAFC648()
{
  unsigned __int8 *v0;

  return sub_1BDAFC404(*v0);
}

uint64_t sub_1BDAFC650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDAFFCAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDAFC674(_BYTE *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_1BDAFC680()
{
  sub_1BDAFE19C();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDAFC6A8()
{
  sub_1BDAFE19C();
  return sub_1BDBFEB50();
}

uint64_t ICQueryType.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  char v136;
  uint64_t v137;

  v131 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C4B8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v126 = (uint64_t)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v122 = (uint64_t)&v116 - v6;
  v127 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  v120 = *(_QWORD *)(v127 - 8);
  v7 = MEMORY[0x1E0C80A78](v127);
  v125 = (uint64_t)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v121 = (uint64_t)&v116 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C4C0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v124 = (uint64_t)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v129 = (uint64_t)&v116 - v13;
  v130 = type metadata accessor for ICQueryType.DateRange(0);
  v128 = *(_QWORD *)(v130 - 8);
  v14 = MEMORY[0x1E0C80A78](v130);
  v123 = (uint64_t)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v116 - v16;
  v18 = sub_1BDBFE3C4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C4C8);
  v22 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v24 = (char *)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1[3];
  v135 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1BDAFE19C();
  v132 = v24;
  v26 = v134;
  sub_1BDBFEAB4();
  if (!v26)
  {
    v116 = v17;
    v117 = v21;
    v118 = v19;
    v119 = v18;
    v134 = v22;
    v27 = v131;
    v28 = *(_QWORD *)(sub_1BDBFE67C() + 16);
    swift_bridgeObjectRelease();
    if (v28 < 2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C4D8);
      v136 = 0;
      sub_1BDAFE2B8(&qword_1EF50C4E0, (uint64_t (*)(void))sub_1BDAFE1E0, MEMORY[0x1E0DEAF40]);
      sub_1BDBFE628();
      v38 = v137;
      if (v137)
      {
        (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
        v39 = swift_allocObject();
        *(_QWORD *)(v39 + 16) = v38;
        *v27 = v39;
      }
      else
      {
        v136 = 1;
        sub_1BDAFE1E0();
        sub_1BDBFE628();
        v40 = v137;
        if ((~v137 & 0xF000000000000007) != 0)
        {
          (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
          v43 = swift_allocObject();
          *(_QWORD *)(v43 + 16) = v40;
          *v27 = v43 | 4;
        }
        else
        {
          v136 = 2;
          sub_1BDBFE628();
          v41 = v137;
          if (!v137)
          {
            v137 = 3;
            v44 = sub_1BDBFE610();
            if (v44 == 2)
            {
              LOBYTE(v137) = 4;
              v45 = sub_1BDBFE634();
              v46 = v45;
              if ((v45 & 0x10000) == 0)
              {
                (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                v47 = swift_allocObject();
                *(_WORD *)(v47 + 16) = v46;
                *v27 = v47 | 0x2000000000000000;
                return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
              }
              LOBYTE(v137) = 5;
              v51 = sub_1BDBFE610();
              if (v51 == 2)
              {
                LOBYTE(v137) = 6;
                v52 = sub_1BDBFE610();
                if (v52 != 2)
                {
                  v62 = v52 & 1;
                  (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                  v63 = swift_allocObject();
                  *(_BYTE *)(v63 + 16) = v62;
                  *v27 = v63 | 0x3000000000000000;
                  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
                }
                LOBYTE(v137) = 7;
                v53 = sub_1BDBFE610();
                if (v53 == 2)
                {
                  LOBYTE(v137) = 8;
                  sub_1BDAC31B0(&qword_1EF50C4F0, type metadata accessor for ICQueryType.DateRange, (uint64_t)&protocol conformance descriptor for ICQueryType.DateRange);
                  sub_1BDBFE628();
                  v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
                  if (v54(v129, 1, v130) != 1)
                  {
                    (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                    v65 = (uint64_t)v116;
                    sub_1BDAFE158(v129, (uint64_t)v116, type metadata accessor for ICQueryType.DateRange);
                    v66 = swift_allocBox();
                    sub_1BDAFE158(v65, v67, type metadata accessor for ICQueryType.DateRange);
                    *v27 = v66 | 0x4000000000000000;
                    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
                  }
                  sub_1BDAC350C(v129, &qword_1EF50C4C0);
                  LOBYTE(v137) = 9;
                  sub_1BDAC31B0(&qword_1EF50C4F8, type metadata accessor for ICQueryType.RelativeDateRange, (uint64_t)&protocol conformance descriptor for ICQueryType.RelativeDateRange);
                  sub_1BDBFE628();
                  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
                  if (v55(v122, 1, v127) != 1)
                  {
                    (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                    v68 = v121;
                    sub_1BDAFE158(v122, v121, type metadata accessor for ICQueryType.RelativeDateRange);
                    v69 = swift_allocBox();
                    sub_1BDAFE158(v68, v70, type metadata accessor for ICQueryType.RelativeDateRange);
                    *v27 = v69 | 0x4000000000000004;
                    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
                  }
                  sub_1BDAC350C(v122, &qword_1EF50C4B8);
                  LOBYTE(v137) = 10;
                  v56 = sub_1BDBFE610();
                  if (v56 == 2)
                  {
                    LOBYTE(v137) = 11;
                    v57 = sub_1BDBFE604();
                    v59 = v58;
                    if (v58)
                    {
                      v60 = v57;
                      (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                      v49 = swift_allocObject();
                      *(_QWORD *)(v49 + 16) = v60;
                      *(_QWORD *)(v49 + 24) = v59;
                      v50 = 0x5000000000000004;
                    }
                    else
                    {
                      LOBYTE(v137) = 12;
                      v72 = sub_1BDBFE604();
                      v74 = v73;
                      if (v73)
                      {
                        v75 = v72;
                        (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                        v49 = swift_allocObject();
                        *(_QWORD *)(v49 + 16) = v75;
                        *(_QWORD *)(v49 + 24) = v74;
                        v50 = 0xA000000000000004;
                      }
                      else
                      {
                        LOBYTE(v137) = 17;
                        v76 = sub_1BDBFE610();
                        if (v76 != 2)
                        {
                          v83 = v76 & 1;
                          (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                          v84 = swift_allocObject();
                          *(_BYTE *)(v84 + 16) = v83;
                          *v27 = v84 | 0x8000000000000000;
                          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
                        }
                        LOBYTE(v137) = 18;
                        v77 = sub_1BDBFE610();
                        if (v77 == 2)
                        {
                          LOBYTE(v137) = 19;
                          v78 = sub_1BDBFE610();
                          if (v78 == 2)
                          {
                            LOBYTE(v137) = 20;
                            v79 = sub_1BDBFE604();
                            v81 = v80;
                            if (v80)
                            {
                              v82 = v79;
                              (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                              v49 = swift_allocObject();
                              *(_QWORD *)(v49 + 16) = v82;
                              *(_QWORD *)(v49 + 24) = v81;
                              v50 = 0x9000000000000004;
                            }
                            else
                            {
                              LOBYTE(v137) = 13;
                              v87 = sub_1BDBFE610();
                              if (v87 != 2)
                              {
                                v92 = v87 & 1;
                                (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                                v93 = swift_allocObject();
                                *(_BYTE *)(v93 + 16) = v92;
                                *v27 = v93 | 0x6000000000000000;
                                return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
                              }
                              LOBYTE(v137) = 14;
                              v88 = sub_1BDBFE604();
                              v90 = v89;
                              if (v89)
                              {
                                v91 = v88;
                                (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                                v49 = swift_allocObject();
                                *(_QWORD *)(v49 + 16) = v91;
                                *(_QWORD *)(v49 + 24) = v90;
                                v50 = 0x6000000000000004;
                              }
                              else
                              {
                                LOBYTE(v137) = 15;
                                sub_1BDBFE628();
                                if (v54(v124, 1, v130) != 1)
                                {
                                  (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                                  v98 = v123;
                                  sub_1BDAFE158(v124, v123, type metadata accessor for ICQueryType.DateRange);
                                  v99 = swift_allocBox();
                                  sub_1BDAFE158(v98, v100, type metadata accessor for ICQueryType.DateRange);
                                  *v27 = v99 | 0x7000000000000000;
                                  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
                                }
                                sub_1BDAC350C(v124, &qword_1EF50C4C0);
                                LOBYTE(v137) = 16;
                                sub_1BDBFE628();
                                if (v55(v126, 1, v127) != 1)
                                {
                                  (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                                  v101 = v125;
                                  sub_1BDAFE158(v126, v125, type metadata accessor for ICQueryType.RelativeDateRange);
                                  v102 = swift_allocBox();
                                  sub_1BDAFE158(v101, v103, type metadata accessor for ICQueryType.RelativeDateRange);
                                  *v27 = v102 | 0x7000000000000004;
                                  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
                                }
                                sub_1BDAC350C(v126, &qword_1EF50C4B8);
                                LOBYTE(v137) = 22;
                                v94 = sub_1BDBFE604();
                                v96 = v95;
                                if (v95)
                                {
                                  v97 = v94;
                                  (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                                  v49 = swift_allocObject();
                                  *(_QWORD *)(v49 + 16) = v97;
                                  *(_QWORD *)(v49 + 24) = v96;
                                  v50 = 0xB000000000000000;
                                }
                                else
                                {
                                  LOBYTE(v137) = 23;
                                  v104 = sub_1BDBFE610();
                                  if (v104 == 2)
                                  {
                                    LOBYTE(v137) = 21;
                                    v105 = sub_1BDBFE610();
                                    if (v105 == 2)
                                    {
                                      v107 = v132;
                                      v106 = v133;
                                      sub_1BDBFE5F8();
                                      v108 = v117;
                                      sub_1BDBFE3AC();
                                      v109 = sub_1BDBFE3D0();
                                      swift_allocError();
                                      v111 = v110;
                                      v113 = v118;
                                      v112 = v119;
                                      (*(void (**)(uint64_t, char *, uint64_t))(v118 + 16))(v110, v108, v119);
                                      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v109 - 8) + 104))(v111, *MEMORY[0x1E0DEC458], v109);
                                      swift_willThrow();
                                      (*(void (**)(char *, uint64_t))(v113 + 8))(v108, v112);
                                      (*(void (**)(char *, uint64_t))(v134 + 8))(v107, v106);
                                      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
                                    }
                                    v115 = v105 & 1;
                                    (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                                    v49 = swift_allocObject();
                                    *(_BYTE *)(v49 + 16) = v115;
                                    v50 = 0xA000000000000000;
                                  }
                                  else
                                  {
                                    v114 = v104 & 1;
                                    (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                                    v49 = swift_allocObject();
                                    *(_BYTE *)(v49 + 16) = v114;
                                    v50 = 0xB000000000000004;
                                  }
                                }
                              }
                            }
                          }
                          else
                          {
                            v86 = v78 & 1;
                            (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                            v49 = swift_allocObject();
                            *(_BYTE *)(v49 + 16) = v86;
                            v50 = 0x9000000000000000;
                          }
                        }
                        else
                        {
                          v85 = v77 & 1;
                          (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                          v49 = swift_allocObject();
                          *(_BYTE *)(v49 + 16) = v85;
                          v50 = 0x8000000000000004;
                        }
                      }
                    }
                  }
                  else
                  {
                    v71 = v56 & 1;
                    (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                    v49 = swift_allocObject();
                    *(_BYTE *)(v49 + 16) = v71;
                    v50 = 0x5000000000000000;
                  }
                }
                else
                {
                  v64 = v53 & 1;
                  (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                  v49 = swift_allocObject();
                  *(_BYTE *)(v49 + 16) = v64;
                  v50 = 0x3000000000000004;
                }
              }
              else
              {
                v61 = v51 & 1;
                (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
                v49 = swift_allocObject();
                *(_BYTE *)(v49 + 16) = v61;
                v50 = 0x2000000000000004;
              }
            }
            else
            {
              v48 = v44 & 1;
              (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
              v49 = swift_allocObject();
              *(_BYTE *)(v49 + 16) = v48;
              v50 = 0x1000000000000004;
            }
            *v27 = v49 | v50;
            return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
          }
          (*(void (**)(char *, uint64_t))(v134 + 8))(v132, v133);
          v42 = swift_allocObject();
          *(_QWORD *)(v42 + 16) = v41;
          *v27 = v42 | 0x1000000000000000;
        }
      }
    }
    else
    {
      v30 = v132;
      v29 = v133;
      sub_1BDBFE5F8();
      v31 = v117;
      sub_1BDBFE3AC();
      v32 = sub_1BDBFE3D0();
      swift_allocError();
      v34 = v33;
      v36 = v118;
      v35 = v119;
      (*(void (**)(uint64_t, char *, uint64_t))(v118 + 16))(v33, v31, v119);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x1E0DEC458], v32);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v35);
      (*(void (**)(char *, uint64_t))(v134 + 8))(v30, v29);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v135);
}

void ICQueryType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v2 = v1;
  v11 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  v4 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v4);
  v10 = type metadata accessor for ICQueryType.DateRange(0);
  v5 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v5);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C500);
  v12 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDAFE19C();
  v13 = v7;
  sub_1BDBFEACC();
  __asm { BR              X10 }
}

uint64_t sub_1BDAFD7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 72) = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 - 81) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C4D8);
  sub_1BDAFE2B8(&qword_1EF50C518, (uint64_t (*)(void))sub_1BDAFE320, MEMORY[0x1E0DEAF10]);
  v2 = *(_QWORD *)(v1 - 96);
  v3 = *(_QWORD *)(v1 - 104);
  sub_1BDBFE718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 112) + 8))(v3, v2);
}

uint64_t sub_1BDAFDC40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ICQueryType.init(from:)(a1, a2);
}

void sub_1BDAFDC54(_QWORD *a1)
{
  ICQueryType.encode(to:)(a1);
}

BOOL _s11NotesShared11ICQueryTypeO17RelativeDateRangeV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  _BOOL8 result;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v4 = sub_1BDBFCAC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C598);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v32 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v32 - v18;
  if (*a1 != *a2)
    return 0;
  v20 = a1[1];
  v21 = a2[1];
  if (v20 == 5)
  {
    if (v21 != 5)
      return 0;
LABEL_7:
    v23 = a2[16];
    if ((a1[16] & 1) != 0)
    {
      if (!a2[16])
        return 0;
    }
    else
    {
      if (*((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1))
        v23 = 1;
      if ((v23 & 1) != 0)
        return 0;
    }
    v24 = type metadata accessor for ICQueryType.RelativeDateRange(0);
    v33 = v5;
    v25 = v24;
    sub_1BDACDF20((uint64_t)&a1[*(int *)(v24 + 28)], (uint64_t)v19);
    v26 = *(int *)(v25 + 28);
    v27 = v33;
    sub_1BDACDF20((uint64_t)&a2[v26], (uint64_t)v17);
    v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1BDACDF20((uint64_t)v19, (uint64_t)v10);
    sub_1BDACDF20((uint64_t)v17, v28);
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v29((uint64_t)v10, 1, v4) == 1)
    {
      sub_1BDAC350C((uint64_t)v17, &qword_1ED239CD8);
      sub_1BDAC350C((uint64_t)v19, &qword_1ED239CD8);
      if (v29(v28, 1, v4) == 1)
      {
        sub_1BDAC350C((uint64_t)v10, &qword_1ED239CD8);
        return 1;
      }
    }
    else
    {
      sub_1BDACDF20((uint64_t)v10, (uint64_t)v14);
      if (v29(v28, 1, v4) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v7, v28, v4);
        sub_1BDAC31B0(&qword_1EF50C5A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v30 = sub_1BDBFD6BC();
        v31 = *(void (**)(char *, uint64_t))(v27 + 8);
        v31(v7, v4);
        sub_1BDAC350C((uint64_t)v17, &qword_1ED239CD8);
        sub_1BDAC350C((uint64_t)v19, &qword_1ED239CD8);
        v31(v14, v4);
        sub_1BDAC350C((uint64_t)v10, &qword_1ED239CD8);
        return (v30 & 1) != 0;
      }
      sub_1BDAC350C((uint64_t)v17, &qword_1ED239CD8);
      sub_1BDAC350C((uint64_t)v19, &qword_1ED239CD8);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v4);
    }
    sub_1BDAC350C((uint64_t)v10, &qword_1EF50C598);
    return 0;
  }
  result = 0;
  if (v21 != 5 && v20 == v21)
    goto LABEL_7;
  return result;
}

unint64_t sub_1BDAFDFC0()
{
  unint64_t result;

  result = qword_1EF50C470;
  if (!qword_1EF50C470)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18FB4, &type metadata for ICQueryType.DateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C470);
  }
  return result;
}

unint64_t sub_1BDAFE004()
{
  unint64_t result;

  result = qword_1EF50C488;
  if (!qword_1EF50C488)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18F64, &type metadata for ICQueryType.RelativeDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C488);
  }
  return result;
}

unint64_t sub_1BDAFE048()
{
  unint64_t result;

  result = qword_1EF50C490;
  if (!qword_1EF50C490)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType.RelativeDateRangeType, &type metadata for ICQueryType.RelativeDateRangeType);
    atomic_store(result, (unint64_t *)&qword_1EF50C490);
  }
  return result;
}

unint64_t sub_1BDAFE08C()
{
  unint64_t result;

  result = qword_1EF50C498;
  if (!qword_1EF50C498)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType.RelativeDateRangeUnit, &type metadata for ICQueryType.RelativeDateRangeUnit);
    atomic_store(result, (unint64_t *)&qword_1EF50C498);
  }
  return result;
}

unint64_t sub_1BDAFE0D0()
{
  unint64_t result;

  result = qword_1EF50C4A8;
  if (!qword_1EF50C4A8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType.RelativeDateRangeType, &type metadata for ICQueryType.RelativeDateRangeType);
    atomic_store(result, (unint64_t *)&qword_1EF50C4A8);
  }
  return result;
}

unint64_t sub_1BDAFE114()
{
  unint64_t result;

  result = qword_1EF50C4B0;
  if (!qword_1EF50C4B0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType.RelativeDateRangeUnit, &type metadata for ICQueryType.RelativeDateRangeUnit);
    atomic_store(result, (unint64_t *)&qword_1EF50C4B0);
  }
  return result;
}

uint64_t sub_1BDAFE158(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1BDAFE19C()
{
  unint64_t result;

  result = qword_1EF50C4D0;
  if (!qword_1EF50C4D0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18F14, &type metadata for ICQueryType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C4D0);
  }
  return result;
}

unint64_t sub_1BDAFE1E0()
{
  unint64_t result;

  result = qword_1EF50C4E8;
  if (!qword_1EF50C4E8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType, &type metadata for ICQueryType);
    atomic_store(result, (unint64_t *)&qword_1EF50C4E8);
  }
  return result;
}

uint64_t sub_1BDAFE224()
{
  return swift_deallocObject();
}

uint64_t sub_1BDAFE234()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDAFE258()
{
  return swift_deallocObject();
}

uint64_t sub_1BDAFE268()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDAFE28C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDAFE2B8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50C4D8);
    v8 = a2();
    result = MEMORY[0x1C3B7B388](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDAFE320()
{
  unint64_t result;

  result = qword_1EF50C520;
  if (!qword_1EF50C520)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType, &type metadata for ICQueryType);
    atomic_store(result, (unint64_t *)&qword_1EF50C520);
  }
  return result;
}

unint64_t sub_1BDAFE368()
{
  unint64_t result;

  result = qword_1EF50C528;
  if (!qword_1EF50C528)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType.RelativeDateRangeType, &type metadata for ICQueryType.RelativeDateRangeType);
    atomic_store(result, (unint64_t *)&qword_1EF50C528);
  }
  return result;
}

unint64_t sub_1BDAFE3B0()
{
  unint64_t result;

  result = qword_1EF50C530;
  if (!qword_1EF50C530)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType.RelativeDateRangeUnit, &type metadata for ICQueryType.RelativeDateRangeUnit);
    atomic_store(result, (unint64_t *)&qword_1EF50C530);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ICQueryType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ICQueryType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for ICQueryType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICQueryType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x69 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 105);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x68)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ICQueryType(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x68)
  {
    *(_QWORD *)result = a2 - 105;
    if (a3 >= 0x69)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x69)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BDAFE554(_QWORD *a1)
{
  return (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
}

_QWORD *sub_1BDAFE568(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_1BDAFE57C(unint64_t *result, uint64_t a2)
{
  *result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ICQueryType.DateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BDBFCAC8();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for ICQueryType.DateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1BDBFCAC8();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BDBFCAC8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BDBFCAC8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BDBFCAC8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BDBFCAC8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICQueryType.DateRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDAFE86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ICQueryType.DateRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDAFE8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t getEnumTagSinglePayload for ICQueryType.RelativeDateRangeType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ICQueryType.RelativeDateRangeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BDAFE9D0 + 4 * byte_1BDC18807[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BDAFEA04 + 4 * byte_1BDC18802[v4]))();
}

uint64_t sub_1BDAFEA04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFEA0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDAFEA14);
  return result;
}

uint64_t sub_1BDAFEA20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDAFEA28);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BDAFEA2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFEA34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.RelativeDateRangeType()
{
  return &type metadata for ICQueryType.RelativeDateRangeType;
}

uint64_t getEnumTagSinglePayload for ICQueryType.RelativeDateRangeUnit(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ICQueryType.RelativeDateRangeUnit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BDAFEB2C + 4 * byte_1BDC18811[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BDAFEB60 + 4 * byte_1BDC1880C[v4]))();
}

uint64_t sub_1BDAFEB60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFEB68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDAFEB70);
  return result;
}

uint64_t sub_1BDAFEB7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDAFEB84);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BDAFEB88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFEB90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.RelativeDateRangeUnit()
{
  return &type metadata for ICQueryType.RelativeDateRangeUnit;
}

_QWORD *initializeBufferWithCopyOfBuffer for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v5 = *(int *)(a3 + 28);
    v6 = (void *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = sub_1BDBFCAC8();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_1BDBFCAC8();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t initializeWithCopy for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1BDBFCAC8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(int *)(a3 + 28);
  v6 = (void *)(a1 + v5);
  v7 = (void *)(a2 + v5);
  v8 = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t initializeWithTake for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1BDBFCAC8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_1BDBFCAC8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICQueryType.RelativeDateRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDAFF0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 250)
  {
    if (*(unsigned __int8 *)(a1 + 1) <= 5u)
      v4 = 5;
    else
      v4 = *(unsigned __int8 *)(a1 + 1);
    v5 = v4 - 5;
    if (*(unsigned __int8 *)(a1 + 1) >= 5u)
      return v5;
    else
      return 0;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ICQueryType.RelativeDateRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDAFF17C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 250)
  {
    *(_BYTE *)(result + 1) = a2 + 5;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ICQueryType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ICQueryType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1BDAFF2CC + 4 * byte_1BDC1881B[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1BDAFF300 + 4 * byte_1BDC18816[v4]))();
}

uint64_t sub_1BDAFF300(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFF308(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDAFF310);
  return result;
}

uint64_t sub_1BDAFF31C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDAFF324);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1BDAFF328(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFF330(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.CodingKeys()
{
  return &type metadata for ICQueryType.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ICQueryType.RelativeDateRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BDAFF398 + 4 * byte_1BDC18825[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BDAFF3CC + 4 * byte_1BDC18820[v4]))();
}

uint64_t sub_1BDAFF3CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFF3D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDAFF3DCLL);
  return result;
}

uint64_t sub_1BDAFF3E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDAFF3F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BDAFF3F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFF3FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.RelativeDateRange.CodingKeys()
{
  return &type metadata for ICQueryType.RelativeDateRange.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ICQueryType.DateRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDAFF464 + 4 * byte_1BDC1882F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDAFF498 + 4 * byte_1BDC1882A[v4]))();
}

uint64_t sub_1BDAFF498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFF4A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDAFF4A8);
  return result;
}

uint64_t sub_1BDAFF4B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDAFF4BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDAFF4C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAFF4C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.DateRange.CodingKeys()
{
  return &type metadata for ICQueryType.DateRange.CodingKeys;
}

unint64_t sub_1BDAFF4E8()
{
  unint64_t result;

  result = qword_1EF50C538;
  if (!qword_1EF50C538)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18D7C, &type metadata for ICQueryType.DateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C538);
  }
  return result;
}

unint64_t sub_1BDAFF530()
{
  unint64_t result;

  result = qword_1EF50C540;
  if (!qword_1EF50C540)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18E34, &type metadata for ICQueryType.RelativeDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C540);
  }
  return result;
}

unint64_t sub_1BDAFF578()
{
  unint64_t result;

  result = qword_1EF50C548;
  if (!qword_1EF50C548)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18EEC, &type metadata for ICQueryType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C548);
  }
  return result;
}

unint64_t sub_1BDAFF5C0()
{
  unint64_t result;

  result = qword_1EF50C550;
  if (!qword_1EF50C550)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18E5C, &type metadata for ICQueryType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C550);
  }
  return result;
}

unint64_t sub_1BDAFF608()
{
  unint64_t result;

  result = qword_1EF50C558;
  if (!qword_1EF50C558)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18E84, &type metadata for ICQueryType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C558);
  }
  return result;
}

unint64_t sub_1BDAFF650()
{
  unint64_t result;

  result = qword_1EF50C560;
  if (!qword_1EF50C560)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18DA4, &type metadata for ICQueryType.RelativeDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C560);
  }
  return result;
}

unint64_t sub_1BDAFF698()
{
  unint64_t result;

  result = qword_1EF50C568;
  if (!qword_1EF50C568)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18DCC, &type metadata for ICQueryType.RelativeDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C568);
  }
  return result;
}

unint64_t sub_1BDAFF6E0()
{
  unint64_t result;

  result = qword_1EF50C570;
  if (!qword_1EF50C570)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18CEC, &type metadata for ICQueryType.DateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C570);
  }
  return result;
}

unint64_t sub_1BDAFF728()
{
  unint64_t result;

  result = qword_1EF50C578;
  if (!qword_1EF50C578)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC18D14, &type metadata for ICQueryType.DateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50C578);
  }
  return result;
}

uint64_t sub_1BDAFF76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BDB2274C(0, v5, 0);
    v6 = v18;
    v10 = a1 + 32;
    do
    {
      v10 += 8;
      swift_retain();
      sub_1BDAFA7D8(&v17, a2, a3, a4, a5);
      swift_release();
      v11 = v17;
      v18 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BDB2274C(v12 > 1, v13 + 1, 1);
        v6 = v18;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      *(_QWORD *)(v6 + 8 * v13 + 32) = v11;
      --v5;
    }
    while (v5);
  }
  return v6;
}

_QWORD *sub_1BDAFF884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    swift_retain();
    sub_1BDAFAA2C(&v12, a2, a3);
    swift_release();
    v8 = v12;
    if ((~v12 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1BDBCC370(0, v7[2] + 1, 1, v7);
      v10 = v7[2];
      v9 = v7[3];
      if (v10 >= v9 >> 1)
        v7 = sub_1BDBCC370((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      v7[2] = v10 + 1;
      v7[v10 + 4] = v8;
    }
    ++v6;
  }
  while (v3 != v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BDAFF9D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657461446D6F7266 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657461446F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BDAFFABC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E556D6F74737563 && a2 == 0xEA00000000007469 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D416D6F74737563 && a2 == 0xEC000000746E756FLL || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006574614465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BDAFFCAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6581857 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7630702 && a2 == 0xE300000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D686361747461 && a2 == 0xEA0000000000746ELL || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BDC37730 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73696C6B63656863 && a2 == 0xE900000000000074 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BDC37750 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BDC37770 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BDC37790 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BDC377B0 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x646574656C6564 && a2 == 0xE700000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7265646C6F66 && a2 == 0xE600000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BDC377D0 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6E6F69746E656DLL && a2 == 0xE700000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BDC377F0 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BDC37810 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001BDC37830 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BDC34B20 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x64656E6E6970 && a2 == 0xE600000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x646572616873 && a2 == 0xE600000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BDC37850 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x61506D6574737973 && a2 == 0xEB00000000726570 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x646567676174 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 23;
    else
      return 24;
  }
}

unint64_t sub_1BDB00578()
{
  unint64_t result;

  result = qword_1EF50C580;
  if (!qword_1EF50C580)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType.RelativeDateRangeUnit, &type metadata for ICQueryType.RelativeDateRangeUnit);
    atomic_store(result, (unint64_t *)&qword_1EF50C580);
  }
  return result;
}

unint64_t sub_1BDB005BC()
{
  unint64_t result;

  result = qword_1EF50C588;
  if (!qword_1EF50C588)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryType.RelativeDateRangeType, &type metadata for ICQueryType.RelativeDateRangeType);
    atomic_store(result, (unint64_t *)&qword_1EF50C588);
  }
  return result;
}

uint64_t ActivityEvent.timeInterval.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCAC8();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  return sub_1BDBFC468();
}

uint64_t sub_1BDB006B8()
{
  return 1;
}

uint64_t ActivityEvent.isVisible(resolver:)()
{
  return 1;
}

uint64_t sub_1BDB006CC()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t ActivityEvent.associatedAttachmentIds.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t dispatch thunk of ActivityEvent.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityEvent.timestamp.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityEvent.timestamp.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ActivityEvent.timeInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ActivityEvent.object.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ActivityEvent.participant.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ActivityEvent.associatedAttachmentIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ActivityEvent.isVisible(resolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1BDB00724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = sub_1BDBFCAC8();
  MEMORY[0x1E0C80A78](v1);
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v0);
  return sub_1BDBFC468();
}

char *initializeBufferWithCopyOfBuffer for AudioData(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_1BDBFC948();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = *a2;
      *(_QWORD *)a1 = *a2;
      v8 = v7;
    }
    else
    {
      *(_QWORD *)a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for AudioData(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v3 = sub_1BDBFC948();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 1:

      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
}

void **initializeWithCopy for AudioData(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  id v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_1BDBFC948();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = *a2;
    *a1 = *a2;
    v6 = v5;
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for AudioData(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  id v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1BDAF107C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_1BDBFC948();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = *a2;
      *a1 = *a2;
      v6 = v5;
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for AudioData(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50C628);
}

void *initializeWithTake for AudioData(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_1BDBFC948();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AudioData(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BDAF107C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_1BDBFC948();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s10ActivitiesOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t _s10ActivitiesOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1BDB00BCC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BDB00BDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFC948();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_1BDB00C5C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  id v16;
  id v17;
  unsigned int v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  char *v30;
  id v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id aBlock[7];

  v48 = a1;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1BDBFC948();
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8D8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v13 = *MEMORY[0x1E0C89688];
  v14 = *MEMORY[0x1E0C89768];
  aBlock[0] = 0;
  v15 = objc_msgSend(v12, sel_setCategory_mode_options_error_, v13, v14, 0, aBlock);
  v16 = aBlock[0];
  if (!v15
    || (aBlock[0] = 0,
        v17 = v16,
        v18 = objc_msgSend(v12, sel_setActive_withOptions_error_, 1, 1, aBlock),
        v16 = aBlock[0],
        !v18))
  {
    v38 = v16;
    sub_1BDBFC87C();

    swift_willThrow();
    return;
  }
  v44 = v7;
  v19 = *(void **)&v2[OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_audioEngine];
  v20 = aBlock[0];
  v21 = objc_msgSend(v19, sel_inputNode);
  objc_msgSend(v21, sel_removeTapOnBus_, 0);

  v42 = objc_msgSend(v19, sel_inputNode);
  v22 = objc_msgSend(v19, sel_inputNode);
  v43 = v3;
  v23 = v22;
  v24 = objc_msgSend(v22, sel_outputFormatForBus_, 0);
  v45 = a2;
  v25 = v24;

  aBlock[4] = sub_1BDB04150;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1BDB01440;
  aBlock[3] = &block_descriptor_26;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v27 = v42;
  objc_msgSend(v42, sel_installTapOnBus_bufferSize_format_block_, 0, 4096, v25, v26);
  _Block_release(v26);

  v28 = v45;
  objc_msgSend(v19, sel_prepare);
  type metadata accessor for AudioData(0);
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v30 = v2;
  v29(v11, *MEMORY[0x1E0DF07B8], v8);
  sub_1BDBFDC08();
  v31 = objc_msgSend(v19, sel_inputNode);
  v32 = objc_msgSend(v31, sel_inputFormatForBus_, 0);

  v33 = sub_1BDB03788(v32);
  v34 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v44, v48, v47);
  type metadata accessor for AudioAssetWriter();
  v35 = swift_allocObject();
  v36 = v43;
  sub_1BDB01E74(v34, v33);
  if (v36)
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8E0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v28, v37);
LABEL_8:

    return;
  }
  *(_QWORD *)&v30[OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter] = v35;
  swift_release();
  aBlock[0] = 0;
  if ((objc_msgSend(v19, sel_startAndReturnError_, aBlock) & 1) != 0)
  {
    v39 = aBlock[0];
    goto LABEL_8;
  }
  v40 = aBlock[0];
  sub_1BDBFC87C();

  swift_willThrow();
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v28, v41);
}

uint64_t sub_1BDB010CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AudioData(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF50C6B8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8E8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v18, v11);
    *v10 = a1;
    swift_storeEnumTagMultiPayload();
    v20 = a1;
    sub_1BDBFDBD8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8F0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v17, 0, 1, v21);
  }
  sub_1BDAC350C((uint64_t)v17, &qword_1EF50C8E8);
  v22 = sub_1BDBFDBC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  sub_1BDBFDB60();
  v23 = a1;
  swift_retain();
  v24 = sub_1BDBFDB54();
  v25 = (_QWORD *)swift_allocObject();
  v26 = MEMORY[0x1E0DF06E8];
  v25[2] = v24;
  v25[3] = v26;
  v25[4] = a3;
  v25[5] = v23;
  sub_1BDAEE54C((uint64_t)v7, (uint64_t)&unk_1EF50C900, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_1BDB01360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  sub_1BDBFDB60();
  v5[5] = sub_1BDBFDB54();
  sub_1BDBFDADC();
  return swift_task_switch();
}

uint64_t sub_1BDB013D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter);
  if (v2)
  {
    v3 = *(void **)(v0 + 32);
    swift_retain();
    sub_1BDB02394(v3);
    swift_release();
  }
  **(_BYTE **)(v0 + 16) = v2 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDB01440(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

uint64_t sub_1BDB014AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF50C6B8);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = a2 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation;
  swift_beginAccess();
  sub_1BDB03F7C((uint64_t)v6, v9);
  return swift_endAccess();
}

id sub_1BDB01590()
{
  uint64_t v0;
  void *v1;
  id v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_audioEngine);
  v4[0] = 0;
  if (objc_msgSend(v1, sel_startAndReturnError_, v4))
    return v4[0];
  v3 = v4[0];
  sub_1BDBFC87C();

  return (id)swift_willThrow();
}

uint64_t sub_1BDB0163C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE v20[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8B8);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF50C6B8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(void **)(v1 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_audioEngine);
  objc_msgSend(v12, sel_stop);
  v13 = objc_msgSend(v12, sel_inputNode);
  objc_msgSend(v13, sel_removeTapOnBus_, 0);

  v14 = v1 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v14, v8);
    sub_1BDBFDBE4();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  sub_1BDB03F7C((uint64_t)v7, v14);
  swift_endAccess();
  v15 = sub_1BDBFDBC0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1BDBFDB60();
  swift_retain();
  v16 = sub_1BDBFDB54();
  v17 = (_QWORD *)swift_allocObject();
  v18 = MEMORY[0x1E0DF06E8];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = v1;
  sub_1BDAEE400((uint64_t)v4, (uint64_t)&unk_1EF50C8C8, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1BDB01890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a4;
  sub_1BDBFDB60();
  v4[4] = sub_1BDBFDB54();
  v4[5] = sub_1BDBFDADC();
  v4[6] = v5;
  return swift_task_switch();
}

uint64_t sub_1BDB018FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter;
  *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter;
  v3 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 64) = v3;
  if (v3)
  {
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    swift_release();
    *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 56)) = 0;
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB01980()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1BDB01A0C;
  return sub_1BDBFE958();
}

uint64_t sub_1BDB01A0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB01A70()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BDB01AA8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 56)) = 0;
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB01AEC()
{
  return swift_task_switch();
}

uint64_t sub_1BDB01AFC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  swift_release();
  swift_release();
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 80);
  v2 = sub_1BDBFCE34();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED23ADC0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1BDBFCE1C();
  v6 = sub_1BDBFDEE4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 80);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v12;
    sub_1BDBFE100();
    *v10 = v12;

    _os_log_impl(&dword_1BD918000, v5, v6, "Failed to finish writing audio file: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v10, -1, -1);
    MEMORY[0x1C3B7B478](v9, -1, -1);

  }
  else
  {

  }
  *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 56)) = 0;
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB01CF0()
{
  uint64_t v0;

  sub_1BDAC350C(v0 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation, &qword_1EF50C8B8);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BDB01D48()
{
  return type metadata accessor for AVAudioEngineRecordingMethod(0);
}

uint64_t type metadata accessor for AVAudioEngineRecordingMethod(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1EF50C6A0);
}

void sub_1BDB01D64()
{
  unint64_t v0;

  sub_1BDB01DE8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1BDB01DE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF50C6B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EF50C6B8);
    v0 = sub_1BDBFE0AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF50C6B0);
  }
}

uint64_t sub_1BDB01E40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDBFD128();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB01E74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  _QWORD *v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CMTime v47;
  uint64_t v48;

  v45 = a1;
  v46 = a2;
  v48 = *MEMORY[0x1E0C80C00];
  v3 = sub_1BDBFC948();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1BDBFDF50();
  v5 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFDF44();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1BDBFD23C();
  MEMORY[0x1E0C80A78](v10);
  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  v43 = sub_1BD942914(0, (unint64_t *)&qword_1ED23AE78);
  sub_1BDBFD200();
  v47.value = MEMORY[0x1E0DEE9D8];
  sub_1BDAC31B0(&qword_1ED23AE70, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE58);
  v11 = v2;
  sub_1BDAE21C8(&qword_1ED23AE60, &qword_1ED23AE58);
  sub_1BDBFE1B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v44);
  v12 = v45;
  *(_QWORD *)(v2 + 48) = sub_1BDBFDF68();
  *(_QWORD *)(v2 + 56) = 0x4000000000000000;
  *(_QWORD *)(v2 + 64) = MEMORY[0x1E0DEE9D8];
  v13 = URL.fileSize.getter();
  if ((v14 & 1) != 0 || v13)
  {
    v19 = v41;
    v18 = v42;
    v20 = (uint64_t)v40;
    goto LABEL_6;
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = (void *)sub_1BDBFC8D0();
  v47.value = 0;
  v17 = objc_msgSend(v15, sel_removeItemAtURL_error_, v16, &v47);

  v19 = v41;
  v18 = v42;
  v20 = (uint64_t)v40;
  if (v17)
  {
    v21 = (id)v47.value;
LABEL_6:
    v22 = v39;
    goto LABEL_8;
  }
  v23 = (id)v47.value;
  v24 = (void *)sub_1BDBFC87C();

  swift_willThrow();
  v22 = 0;
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v20, v12, v18);
  v25 = (void *)*MEMORY[0x1E0C8A2A8];
  v26 = objc_allocWithZone(MEMORY[0x1E0C8B018]);
  v27 = v25;
  v28 = sub_1BDB03A20(v20, (uint64_t)v27);
  if (v22)
  {
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v18);
    swift_bridgeObjectRelease();
    type metadata accessor for AudioAssetWriter();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v29 = v28;

    *(_QWORD *)(v11 + 16) = v29;
    v30 = v29;
    CMTimeMakeWithSeconds(&v47, 2.0, 600);
    objc_msgSend(v30, sel_setMovieFragmentInterval_, &v47);

    v31 = (void *)*MEMORY[0x1E0C8A7A0];
    v32 = objc_allocWithZone(MEMORY[0x1E0C8B020]);
    v33 = v31;
    v34 = (void *)sub_1BDBFD5B4();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v32, sel_initWithMediaType_outputSettings_sourceFormatHint_, v33, v34, 0);

    *(_QWORD *)(v11 + 24) = v35;
    objc_msgSend(v35, sel_setExpectsMediaDataInRealTime_, 1);
    v36 = *(void **)(v11 + 16);
    if ((objc_msgSend(v36, sel_canAddInput_, v35) & 1) != 0)
    {
      objc_msgSend(v36, sel_addInput_, v35);
    }
    else
    {
      sub_1BDB03ED0();
      swift_allocError();
      *v37 = 1;
      swift_willThrow();
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v18);
  }
  return v11;
}

uint64_t sub_1BDB02394(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1BDBFD1D0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BDBFD23C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v2 + 48);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_1BDB03F40;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB24AB0;
  aBlock[3] = &block_descriptor_1;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = a1;
  sub_1BDBFD200();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1BDAC31B0(&qword_1ED23AE18, v5, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE40);
  sub_1BDAE21C8((unint64_t *)&qword_1ED23AE48, &qword_1ED23AE40);
  sub_1BDBFE1B4();
  MEMORY[0x1C3B79528](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1BDB02580(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD v41[8];

  v2 = v1;
  v41[7] = *MEMORY[0x1E0C80C00];
  v4 = (_QWORD *)sub_1BDBFD248();
  v5 = *(v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 32);
  v8 = *(void **)(v2 + 48);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v9 = v8;
  LOBYTE(v8) = sub_1BDBFD254();
  (*(void (**)(_QWORD *, _QWORD *))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if ((*(_BYTE *)(v2 + 32) & 1) == 0)
  {
    v10 = *(void **)(v2 + 16);
    if (objc_msgSend(v10, sel_startWriting))
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
      v41[0] = *MEMORY[0x1E0CA2E68];
      v41[1] = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 8);
      v41[2] = v11;
      objc_msgSend(v10, sel_startSessionAtSourceTime_, v41);
      *(_BYTE *)(v2 + 32) = 1;
      goto LABEL_5;
    }
    v20 = objc_msgSend(v10, sel_error);
    if (qword_1ED23ADD8 != -1)
      swift_once();
    v21 = sub_1BDBFCE34();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED23ADC0);
    v22 = v20;
    v23 = sub_1BDBFCE1C();
    v24 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138412290;
      if (v20)
      {
        v27 = v22;
        v28 = _swift_stdlib_bridgeErrorToNSError();
        v41[0] = v28;
        sub_1BDBFE100();
      }
      else
      {
        v41[0] = 0;
        sub_1BDBFE100();
        v28 = 0;
      }
      *v26 = v28;

      _os_log_impl(&dword_1BD918000, v23, v24, "Failed to start writing asset: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v26, -1, -1);
      MEMORY[0x1C3B7B478](v25, -1, -1);
    }
    else
    {

      v23 = v22;
    }

    sub_1BDB03ED0();
    v4 = (_QWORD *)swift_allocError();
    *v30 = v20;
    swift_willThrow();
    if (qword_1ED23ADD8 == -1)
    {
LABEL_42:
      v31 = sub_1BDBFCE34();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED23ADC0);
      v32 = v4;
      v33 = v4;
      v34 = sub_1BDBFCE1C();
      v35 = sub_1BDBFDEE4();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v36 = 138412290;
        v38 = v4;
        v39 = _swift_stdlib_bridgeErrorToNSError();
        v41[0] = v39;
        sub_1BDBFE100();
        *v37 = v39;

        _os_log_impl(&dword_1BD918000, v34, v35, "Failed to append sample buffer: %@", v36, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
        swift_arrayDestroy();
        MEMORY[0x1C3B7B478](v37, -1, -1);
        MEMORY[0x1C3B7B478](v36, -1, -1);

      }
      else
      {

      }
      return;
    }
LABEL_49:
    swift_once();
    goto LABEL_42;
  }
LABEL_5:
  v12 = (uint64_t *)(v2 + 64);
  swift_beginAccess();
  v4 = 0;
  while (1)
  {
    if ((unint64_t)*v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_1BDBFE574();
      swift_bridgeObjectRelease();
      if (!v16)
        goto LABEL_28;
    }
    else if (!*(_QWORD *)((*v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_28;
    }
    if ((objc_msgSend(*(id *)(v2 + 24), sel_isReadyForMoreMediaData) & 1) == 0)
      goto LABEL_28;
    swift_beginAccess();
    if ((unint64_t)*v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_1BDBFE574();
      swift_bridgeObjectRelease();
      if (!v17)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
    }
    else if (!*(_QWORD *)((*v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_45;
    }
    v13 = *v12;
    if ((unint64_t)*v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1BDBFE574();
      swift_bridgeObjectRelease();
      if (!v18)
        goto LABEL_46;
    }
    else if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_46;
    }
    if ((v13 & 0xC000000000000001) != 0)
    {
      v14 = (id)MEMORY[0x1C3B79954](0, v13);
    }
    else
    {
      if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_47;
      v14 = *(id *)(v13 + 32);
    }
    v15 = v14;
    if ((unint64_t)*v12 >> 62)
      break;
    if (!*(_QWORD *)((*v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_27;
LABEL_18:
    sub_1BDAE11F8(0, 1);
    swift_endAccess();
    sub_1BDB02CD8(v15);

  }
  swift_bridgeObjectRetain();
  v19 = sub_1BDBFE574();
  swift_bridgeObjectRelease();
  if (v19)
    goto LABEL_18;
LABEL_27:
  __break(1u);
LABEL_28:
  if ((objc_msgSend(*(id *)(v2 + 24), sel_isReadyForMoreMediaData) & 1) != 0)
  {
    sub_1BDB02CD8(a1);
  }
  else
  {
    objc_msgSend(a1, sel_copy);
    sub_1BDBFE184();
    swift_unknownObjectRelease();
    sub_1BD942914(0, &qword_1EF50B918);
    swift_dynamicCast();
    v29 = swift_beginAccess();
    MEMORY[0x1C3B78F88](v29);
    if (*(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BDBFDA1C();
    sub_1BDBFDA64();
    sub_1BDBFD9F8();
    swift_endAccess();
  }
}

void sub_1BDB02CD8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v4;
  id v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  void *v14;
  CMTime v15;

  v4 = *(_QWORD *)(v1 + 40);
  v5 = objc_msgSend(a1, sel_format);
  objc_msgSend(v5, sel_sampleRate);
  v7 = v6;

  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v7 <= -2147483650.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v7 >= 2147483650.0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  CMTimeMake(&v15, v4, (int)v7);
  sub_1BDB03B30(a1, v15.value, *(unint64_t *)&v15.timescale, v15.epoch);
  if (!v2)
  {
    v9 = v8;
    if (objc_msgSend(*(id *)(v1 + 24), sel_appendSampleBuffer_, v8))
    {
      v10 = objc_msgSend(a1, sel_frameLength);

      v11 = *(_QWORD *)(v1 + 40);
      v12 = __OFADD__(v11, v10);
      v13 = v11 + v10;
      if (!v12)
      {
        *(_QWORD *)(v1 + 40) = v13;
        return;
      }
      goto LABEL_16;
    }
    v14 = *(void **)(v1 + 16);
    if (objc_msgSend(v14, sel_status) == (id)3 && objc_msgSend(v14, sel_error))
    {
      swift_willThrow();

    }
    else
    {

    }
  }
}

uint64_t sub_1BDB02E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v4 = sub_1BDBFD1D0();
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFD23C();
  v18 = *(_QWORD *)(v7 - 8);
  v19 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8D0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v17[1] = *(_QWORD *)(a2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1BDB04068;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB24AB0;
  aBlock[3] = &block_descriptor_11;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1BDBFD200();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1BDAC31B0(&qword_1ED23AE18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE40);
  sub_1BDAE21C8((unint64_t *)&qword_1ED23AE48, &qword_1ED23AE40);
  sub_1BDBFE1B4();
  MEMORY[0x1C3B79528](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

void sub_1BDB030B8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  _QWORD aBlock[7];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8D0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (void *)a1[2];
  if (objc_msgSend(v7, sel_status) != (id)1)
  {
LABEL_25:
    sub_1BDBFDB00();
    return;
  }
  v22 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v7;
  v24 = a2;
  v8 = a1 + 8;
  swift_beginAccess();
  while (1)
  {
    do
    {
      if ((unint64_t)*v8 >> 62)
      {
        swift_bridgeObjectRetain();
        v13 = sub_1BDBFE574();
        swift_bridgeObjectRelease();
        v9 = (void *)a1[3];
        if (!v13)
        {
LABEL_26:
          objc_msgSend(v9, sel_markAsFinished);
          v17 = v22;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v22, v24, v4);
          v18 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
          v19 = swift_allocObject();
          *(_QWORD *)(v19 + 16) = a1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, v17, v4);
          aBlock[4] = sub_1BDB04078;
          aBlock[5] = v19;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1BDB24AB0;
          aBlock[3] = &block_descriptor_17;
          v20 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v23, sel_finishWritingWithCompletionHandler_, v20);
          _Block_release(v20);
          return;
        }
      }
      else
      {
        v9 = (void *)a1[3];
        if (!*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_26;
      }
    }
    while ((objc_msgSend(v9, sel_isReadyForMoreMediaData) & 1) == 0);
    swift_beginAccess();
    if ((unint64_t)*v8 >> 62)
      break;
    if (!*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_27;
LABEL_8:
    v10 = *v8;
    if ((unint64_t)*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1BDBFE574();
      swift_bridgeObjectRelease();
      if (!v15)
        goto LABEL_28;
    }
    else if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_28;
    }
    if ((v10 & 0xC000000000000001) != 0)
    {
      v11 = (id)MEMORY[0x1C3B79954](0, v10);
    }
    else
    {
      if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_29;
      v11 = *(id *)(v10 + 32);
    }
    v12 = v11;
    if ((unint64_t)*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_1BDBFE574();
      swift_bridgeObjectRelease();
      if (!v16)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else if (!*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_24;
    }
    sub_1BDAE11F8(0, 1);
    swift_endAccess();
    sub_1BDB02CD8(v12);

  }
  swift_bridgeObjectRetain();
  v14 = sub_1BDBFE574();
  swift_bridgeObjectRelease();
  if (v14)
    goto LABEL_8;
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_1BDB03430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v4 = sub_1BDBFD1D0();
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFD23C();
  v18 = *(_QWORD *)(v7 - 8);
  v19 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8D0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v17[1] = *(_QWORD *)(a1 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1BDB04100;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB24AB0;
  aBlock[3] = &block_descriptor_23;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1BDBFD200();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1BDAC31B0(&qword_1ED23AE18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE40);
  sub_1BDAE21C8((unint64_t *)&qword_1ED23AE48, &qword_1ED23AE40);
  sub_1BDBFE1B4();
  MEMORY[0x1C3B79528](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_1BDB03690(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 16);
  if (objc_msgSend(v1, sel_status) == (id)3 && objc_msgSend(v1, sel_error))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8D0);
    return sub_1BDBFDAF4();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8D0);
    return sub_1BDBFDB00();
  }
}

uint64_t sub_1BDB03720()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioAssetWriter()
{
  return objc_opt_self();
}

uint64_t sub_1BDB0377C()
{
  return MEMORY[0x1E0C96020];
}

unint64_t sub_1BDB03788(void *a1)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  UInt32 v7;
  unint64_t v8;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  UInt32 outPropertyDataSize;
  int inSpecifier;
  _OWORD v29[2];
  double v30[3];
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BF98);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC17EC0;
  *(_QWORD *)(inited + 32) = sub_1BDBFD6F8();
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEE0F8];
  *(_DWORD *)(inited + 48) = 1633772320;
  *(_QWORD *)(inited + 80) = sub_1BDBFD6F8();
  *(_QWORD *)(inited + 88) = v4;
  v5 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 96) = 96;
  v6 = sub_1BDB0ABBC(inited);
  outPropertyDataSize = 0;
  inSpecifier = 1633772320;
  AudioFormatGetPropertyInfo(0x61657372u, 4u, &inSpecifier, &outPropertyDataSize);
  v7 = outPropertyDataSize;
  v8 = 16 * ((unint64_t)outPropertyDataSize >> 4);
  v9 = (double *)swift_slowAlloc();
  AudioFormatGetProperty(0x61657372u, 4u, &inSpecifier, &outPropertyDataSize, v9);
  if (v7 >= 0x10)
  {
    v11 = 1.79769313e308;
    v10 = 44100.0;
    do
    {
      v12 = *v9;
      v9 += 2;
      v13 = v12;
      objc_msgSend(a1, sel_sampleRate);
      v15 = vabdd_f64(v12, v14);
      if (v15 < v11)
      {
        v10 = v13;
        v11 = v15;
      }
      v8 -= 16;
    }
    while (v8);
  }
  else
  {
    v10 = 44100.0;
  }
  v16 = sub_1BDBFD6F8();
  v18 = v17;
  v31 = MEMORY[0x1E0DEB070];
  v30[0] = v10;
  sub_1BD942258(v30, v29);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BDB6C124(v29, v16, v18, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = sub_1BDBFD6F8();
  v22 = v21;
  v23 = objc_msgSend(a1, sel_channelCount);
  v24 = 1;
  if (v23 > 1)
    v24 = 2;
  v31 = v5;
  *(_QWORD *)&v30[0] = v24;
  sub_1BD942258(v30, v29);
  v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BDB6C124(v29, v20, v22, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_1BDB03A20(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  id v12;
  uint64_t v13;
  id v15[2];

  v3 = v2;
  v15[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_1BDBFC8D0();
  v15[0] = 0;
  v7 = objc_msgSend(v3, sel_initWithURL_fileType_error_, v6, a2, v15);

  v8 = v15[0];
  if (v7)
  {
    v9 = sub_1BDBFC948();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v11 = v8;
    v10(a1, v9);
  }
  else
  {
    v12 = v15[0];
    sub_1BDBFC87C();

    swift_willThrow();
    v13 = sub_1BDBFC948();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

void sub_1BDB03B30(void *a1, CMTimeValue a2, unint64_t a3, CMTimeEpoch a4)
{
  CMTimeScale v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  const opaqueCMFormatDescription *v15;
  unsigned int v16;
  OSStatus v17;
  CMSampleBufferRef v18;
  opaqueCMSampleBuffer *v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  CMSampleBufferRef v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  opaqueCMSampleBuffer *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CMTime presentationTimeStamp;
  CMSampleBufferRef v36[2];

  v5 = a3;
  v36[1] = *(CMSampleBufferRef *)MEMORY[0x1E0C80C00];
  v8 = HIDWORD(a3);
  v9 = sub_1BDBFDF20();
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9);
  v30 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BDBFDF38();
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[0] = 0;
  v14 = objc_msgSend(a1, sel_format);
  v15 = (const opaqueCMFormatDescription *)objc_msgSend(v14, sel_formatDescription);

  v16 = objc_msgSend(a1, sel_frameLength);
  presentationTimeStamp.value = a2;
  presentationTimeStamp.timescale = v5;
  presentationTimeStamp.flags = v8;
  presentationTimeStamp.epoch = a4;
  v17 = CMAudioSampleBufferCreateWithPacketDescriptions(0, 0, 0, 0, 0, v15, v16, &presentationTimeStamp, 0, v36);

  v18 = v36[0];
  if (v17 != sub_1BDBFCEF4())
  {
    sub_1BDBFD6F8();
    v23 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v24 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, v17, 0);

    swift_willThrow();
    goto LABEL_8;
  }
  if (!v18)
  {
    __break(1u);
    goto LABEL_13;
  }
  v19 = v18;
  objc_msgSend(a1, sel_audioBufferList);
  v20 = (void *)*MEMORY[0x1E0C9AE00];
  presentationTimeStamp.value = MEMORY[0x1E0DEE9D8];
  sub_1BDAC31B0(&qword_1EF50C898, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF218], MEMORY[0x1E0DEF228]);
  v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8A0);
  sub_1BDAE21C8((unint64_t *)&qword_1EF50C8A8, &qword_1EF50C8A0);
  sub_1BDBFE1B4();
  v22 = v34;
  sub_1BDBFDEFC();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);

    v18 = v36[0];
LABEL_8:

    return;
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);

  v25 = v36[0];
  if (!v36[0])
  {
LABEL_13:
    __break(1u);
    return;
  }
  v27 = v30;
  v26 = v31;
  v28 = v32;
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v30, *MEMORY[0x1E0DEF1E8], v32);
  v29 = v25;
  sub_1BDBFDF2C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);

  if (!v36[0])
    __break(1u);
}

unint64_t sub_1BDB03ED0()
{
  unint64_t result;

  result = qword_1EF50C8B0;
  if (!qword_1EF50C8B0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19124, &type metadata for AudioAssetWriter.Error);
    atomic_store(result, (unint64_t *)&qword_1EF50C8B0);
  }
  return result;
}

uint64_t sub_1BDB03F14()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BDB03F40()
{
  uint64_t v0;

  sub_1BDB02580(*(void **)(v0 + 24));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1BDB03F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB03FC4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB03FF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BDAC9D90;
  return sub_1BDB01890(a1, v4, v5, v6);
}

uint64_t sub_1BDB0405C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB02E58(a1, v1);
}

uint64_t sub_1BDB04068()
{
  return sub_1BDB0410C((uint64_t (*)(_QWORD, uint64_t))sub_1BDB030B8);
}

uint64_t sub_1BDB04078()
{
  return sub_1BDB0410C(sub_1BDB03430);
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8D0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BDB04100()
{
  return sub_1BDB0410C((uint64_t (*)(_QWORD, uint64_t))sub_1BDB03690);
}

uint64_t sub_1BDB0410C(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8D0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_1BDB04150(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BDB010CC(a1, a2, v2);
}

uint64_t sub_1BDB04158(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB014AC(a1, v1);
}

uint64_t sub_1BDB04160()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BDB04194(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BDAE2208;
  return sub_1BDB01360(a1, v4, v5, v7, v6);
}

void destroy for AudioAssetWriter.Error(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

_QWORD *_s11NotesShared16AudioAssetWriterC5ErrorOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for AudioAssetWriter.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      v11 = v7;
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    v9 = v7;
    v10 = *a1;
    *a1 = v7;

  }
  return a1;
}

void **assignWithTake for AudioAssetWriter.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for AudioAssetWriter.Error(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AudioAssetWriter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1BDB04440(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1BDB04460(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioAssetWriter.Error()
{
  return &type metadata for AudioAssetWriter.Error;
}

uint64_t sub_1BDB044C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t result;
  uint64_t *v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t *v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v53 = MEMORY[0x1E0DEE9D8];
  sub_1BDB2253C(0, v6, 0);
  v7 = v53;
  v44 = v6;
  v46 = a2;
  v47 = a1;
  v48 = v4;
  v45 = v5;
  if (v6)
  {
    v8 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v10 = (uint64_t *)(a1 + 40);
    v11 = v6;
    v12 = v4;
    v13 = v5;
    while (v12)
    {
      if (!v13)
        goto LABEL_42;
      v49 = v11;
      v50 = v8;
      v52 = v7;
      v14 = *v10;
      v15 = *v8;
      v16 = qword_1EF50B2A0;
      swift_bridgeObjectRetain();
      if (v16 != -1)
        swift_once();
      v17 = (void *)qword_1EF50F600;
      v18 = (void *)sub_1BDBFD6C8();
      if ((v14 & 0x1000000000000000) != 0)
        v19 = sub_1BDBFD83C();
      else
        v19 = sub_1BDBFD848();
      v20 = v19;
      v21 = (void *)sub_1BDBFD6C8();
      v22 = objc_msgSend(v17, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v18, 0, 0, v20, v21);

      sub_1BDBFD6F8();
      v23 = sub_1BDBFD7A0();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v23 <= v15)
        v23 = v15;
      v7 = v52;
      v25 = *(_QWORD *)(v52 + 16);
      v24 = *(_QWORD *)(v52 + 24);
      if (v25 >= v24 >> 1)
      {
        result = sub_1BDB2253C(v24 > 1, v25 + 1, 1);
        v7 = v52;
      }
      --v13;
      *(_QWORD *)(v7 + 16) = v25 + 1;
      *(_QWORD *)(v7 + 8 * v25 + 32) = v23;
      --v12;
      v8 = v50 + 1;
      v10 += 2;
      v11 = v49 - 1;
      if (v49 == 1)
        goto LABEL_20;
    }
    __break(1u);
LABEL_42:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
LABEL_20:
    if (v48 <= v45)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    v26 = 0;
    if (v44 <= v45)
      v27 = v45;
    else
      v27 = v44;
    v51 = v27 - v44;
    v28 = v48 - v44;
    v29 = (uint64_t *)(v47 + 16 * v44 + 40);
    while (v28 != v26)
    {
      if (v45 - v44 == v26)
        goto LABEL_40;
      if (v51 == v26)
        goto LABEL_44;
      v30 = v7;
      v31 = *v29;
      v32 = *(_QWORD *)(v46 + 8 * v44 + 32 + 8 * v26);
      v33 = qword_1EF50B2A0;
      swift_bridgeObjectRetain();
      if (v33 != -1)
        swift_once();
      v34 = (void *)qword_1EF50F600;
      v35 = (void *)sub_1BDBFD6C8();
      if ((v31 & 0x1000000000000000) != 0)
        v36 = sub_1BDBFD83C();
      else
        v36 = sub_1BDBFD848();
      v37 = v36;
      v38 = (void *)sub_1BDBFD6C8();
      v39 = objc_msgSend(v34, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v35, 0, 0, v37, v38);

      sub_1BDBFD6F8();
      v40 = sub_1BDBFD7A0();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v40 <= v32)
        v41 = v32;
      else
        v41 = v40;
      v7 = v30;
      v43 = *(_QWORD *)(v30 + 16);
      v42 = *(_QWORD *)(v30 + 24);
      if (v43 >= v42 >> 1)
      {
        result = sub_1BDB2253C(v42 > 1, v43 + 1, 1);
        v7 = v30;
      }
      *(_QWORD *)(v7 + 16) = v43 + 1;
      *(_QWORD *)(v7 + 8 * v43 + 32) = v41;
      ++v26;
      v29 += 2;
      v28 = v48 - v44;
      if (v48 - v44 == v26)
        goto LABEL_40;
    }
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BDB04910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t result;
  uint64_t *v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int64_t v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v43;
  uint64_t v44;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 >= v6)
    v8 = *(_QWORD *)(a1 + 16);
  else
    v8 = *(_QWORD *)(a2 + 16);
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1BDB224F4(0, v8, 0);
  v36 = v8;
  v39 = a2;
  v40 = a1;
  v37 = v7;
  v38 = v6;
  if (v8)
  {
    v9 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v11 = (uint64_t *)(a1 + 40);
    v12 = v6;
    v13 = v8;
    v14 = v7;
    while (v12)
    {
      if (!v14)
        goto LABEL_26;
      v15 = *(v11 - 1);
      v16 = *v11;
      v17 = *v9;
      swift_bridgeObjectRetain();
      v43 = a4(v15, v16, v17);
      v19 = v18;
      result = swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v44 + 16);
      v20 = *(_QWORD *)(v44 + 24);
      if (v21 >= v20 >> 1)
        result = sub_1BDB224F4(v20 > 1, v21 + 1, 1);
      *(_QWORD *)(v44 + 16) = v21 + 1;
      v22 = v44 + 16 * v21;
      --v14;
      *(_QWORD *)(v22 + 32) = v43;
      *(_QWORD *)(v22 + 40) = v19;
      --v12;
      ++v9;
      v11 += 2;
      if (!--v13)
        goto LABEL_13;
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
LABEL_13:
    if (v38 <= v37)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v44;
    }
    v23 = 0;
    if (v36 <= v37)
      v24 = v37;
    else
      v24 = v36;
    v41 = v24 - v36;
    v25 = v38 - v36;
    v26 = (uint64_t *)(v40 + 16 * v36 + 40);
    while (v25 != v23)
    {
      if (v37 - v36 == v23)
        goto LABEL_24;
      if (v41 == v23)
        goto LABEL_28;
      v27 = *(v26 - 1);
      v28 = *v26;
      v29 = *(_QWORD *)(v39 + 8 * v36 + 32 + 8 * v23);
      swift_bridgeObjectRetain();
      v30 = a4(v27, v28, v29);
      v32 = v31;
      result = swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(v44 + 16);
      v33 = *(_QWORD *)(v44 + 24);
      if (v34 >= v33 >> 1)
        result = sub_1BDB224F4(v33 > 1, v34 + 1, 1);
      *(_QWORD *)(v44 + 16) = v34 + 1;
      v35 = v44 + 16 * v34;
      *(_QWORD *)(v35 + 32) = v30;
      *(_QWORD *)(v35 + 40) = v32;
      ++v23;
      v26 += 2;
      if (v25 == v23)
        goto LABEL_24;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t TableFormat.columnCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TableFormat.labels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TableFormat.rows.getter()
{
  return swift_bridgeObjectRetain();
}

void TableFormat.format.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t TableFormat.maximumColumnWidth.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t static TableFormat.Formats.defaultArgument.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = byte_1EF50C908;
  return result;
}

uint64_t static TableFormat.Formats.defaultArgument.setter(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  result = swift_beginAccess();
  byte_1EF50C908 = v1;
  return result;
}

uint64_t (*static TableFormat.Formats.defaultArgument.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

NotesShared::TableFormat::Formats_optional __swiftcall TableFormat.Formats.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NotesShared::TableFormat::Formats_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BDBFE5D4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static TableFormat.Formats.allCases.getter()
{
  return &unk_1E76D10B0;
}

uint64_t TableFormat.Formats.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4E49414C50;
  if (*v0 != 1)
    v1 = 1313821514;
  if (*v0)
    return v1;
  else
    return 0x455454414D524F46;
}

uint64_t sub_1BDB04D44(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BDB5338C(*a1, *a2);
}

uint64_t sub_1BDB04D50()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB04DE8()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB04E5C()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

NotesShared::TableFormat::Formats_optional sub_1BDB04EF0(Swift::String *a1)
{
  return TableFormat.Formats.init(rawValue:)(*a1);
}

void sub_1BDB04EFC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000044;
  v4 = 0xE500000000000000;
  v5 = 0x4E49414C50;
  if (v2 != 1)
  {
    v5 = 1313821514;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x455454414D524F46;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1BDB04F54(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E76D10D8;
}

uint64_t sub_1BDB04F64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = byte_1EF50C908;
  return result;
}

uint64_t sub_1BDB04FAC()
{
  sub_1BDB082F4();
  return sub_1BDBFD998();
}

uint64_t sub_1BDB05008()
{
  uint64_t result;

  sub_1BDBFC3D8();
  swift_allocObject();
  result = sub_1BDBFC3CC();
  qword_1EF50C910 = result;
  return result;
}

uint64_t TableFormat.init<A>(rows:columns:format:maximumColumnWidth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;

  v27 = *a3;
  v37 = a2;
  v36 = a6;
  v34 = a6;
  KeyPath = swift_getKeyPath();
  sub_1BDBFE430();
  v11 = MEMORY[0x1E0DEA968];
  swift_getTupleTypeMetadata2();
  v12 = sub_1BDBFDAAC();
  v13 = MEMORY[0x1E0DEAF50];
  v14 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v12);
  v15 = MEMORY[0x1E0DEDCE8];
  v17 = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDB053CC, (uint64_t)v33, v12, v11, MEMORY[0x1E0DEDCE8], v14, MEMORY[0x1E0DEDD18], v16);
  swift_release();
  v37 = a1;
  v31 = a6;
  v32 = a2;
  v18 = sub_1BDBFDAAC();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510000);
  v20 = MEMORY[0x1C3B7B388](v13, v18);
  v22 = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDB053E8, (uint64_t)v30, v18, v19, v15, v20, MEMORY[0x1E0DEDD18], v21);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v17 + 16);
  v25 = *(_QWORD *)(v22 + 16);
  if (v25)
  {
    v26 = v22 + 32;
    while (*(_QWORD *)(*(_QWORD *)v26 + 16) == v24)
    {
      v26 += 8;
      if (!--v25)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    *(_QWORD *)a7 = v24;
    *(_QWORD *)(a7 + 8) = v17;
    *(_QWORD *)(a7 + 16) = v22;
    *(_BYTE *)(a7 + 24) = v27;
    *(_QWORD *)(a7 + 32) = a4;
    *(_BYTE *)(a7 + 40) = a5 & 1;
  }
  return result;
}

{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[6];

  v10 = *a3;
  v20[5] = a1;
  v20[2] = a6;
  v20[3] = a2;
  v11 = sub_1BDBFDAAC();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510000);
  v13 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v11);
  v15 = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDB055D4, (uint64_t)v20, v11, v12, MEMORY[0x1E0DEDCE8], v13, MEMORY[0x1E0DEDD18], v14);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v15 + 16);
  if (v17)
  {
    v18 = v15 + 32;
    v19 = *(_QWORD *)(*(_QWORD *)(v15 + 32) + 16);
    while (*(_QWORD *)(*(_QWORD *)v18 + 16) == v19)
    {
      v18 += 8;
      if (!--v17)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v19 = 0;
LABEL_7:
    *(_QWORD *)a7 = v19;
    *(_QWORD *)(a7 + 8) = 0;
    *(_QWORD *)(a7 + 16) = v15;
    *(_BYTE *)(a7 + 24) = v10;
    *(_QWORD *)(a7 + 32) = a4;
    *(_BYTE *)(a7 + 40) = a5 & 1;
  }
  return result;
}

uint64_t sub_1BDB05220()
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB05298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[6];

  v9[5] = a2;
  v9[2] = a3;
  v9[3] = a1;
  sub_1BDBFE430();
  swift_getTupleTypeMetadata2();
  v5 = sub_1BDBFDAAC();
  v6 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v5);
  result = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDB084A0, (uint64_t)v9, v5, MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
  *a4 = result;
  return result;
}

uint64_t TableFormat.init(labels:rows:format:maximumColumnWidth:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *a3;
  if (result)
  {
    v7 = *(_QWORD *)(result + 16);
    v8 = *(_QWORD *)(a2 + 16);
    if (!v8)
      goto LABEL_9;
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (!v8)
    {
      v7 = 0;
LABEL_9:
      *(_QWORD *)a6 = v7;
      *(_QWORD *)(a6 + 8) = result;
      *(_QWORD *)(a6 + 16) = a2;
      *(_BYTE *)(a6 + 24) = v6;
      *(_QWORD *)(a6 + 32) = a4;
      *(_BYTE *)(a6 + 40) = a5 & 1;
      return result;
    }
    v7 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
  }
  v9 = a2 + 32;
  while (*(_QWORD *)(*(_QWORD *)v9 + 16) == v7)
  {
    v9 += 8;
    if (!--v8)
      goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB053CC()
{
  return sub_1BDB05220();
}

uint64_t sub_1BDB053E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BDB05298(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BDB05530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[6];

  v9[5] = a2;
  v9[2] = a3;
  v9[3] = a1;
  sub_1BDBFE430();
  v5 = sub_1BDBFDAAC();
  v6 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v5);
  result = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDB08470, (uint64_t)v9, v5, MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
  *a4 = result;
  return result;
}

uint64_t sub_1BDB055D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BDB05530(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 16), a2);
}

uint64_t TableFormat.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1BDBFD728();
  MEMORY[0x1E0C80A78](v1);
  v2 = *(_QWORD **)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  if (!*(_BYTE *)(v0 + 24))
    return sub_1BDB057FC();
  if (*(_BYTE *)(v0 + 24) == 1)
    return sub_1BDB05DA0();
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1BDB07D60(v3, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EF50B170 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C918);
    sub_1BDB07E78();
    v7 = sub_1BDBFC3C0();
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1BDBFD71C();
    v10 = sub_1BDBFD710();
    if (v11)
    {
      v5 = v10;
      sub_1BDAEB7EC(v7, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    sub_1BDAEB7EC(v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1BDB057FC()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45[8];
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49[8];
  __int128 v50;
  _OWORD v51[2];

  v1 = v0[1];
  v50 = *v0;
  v51[0] = v1;
  *(_OWORD *)((char *)v51 + 9) = *(__int128 *)((char *)v0 + 25);
  v2 = *((_QWORD *)&v50 + 1);
  if (*((_QWORD *)&v50 + 1))
  {
    v3 = *(_QWORD *)(*((_QWORD *)&v50 + 1) + 16);
    v4 = MEMORY[0x1E0DEE9D8];
    if (v3)
    {
      v46 = MEMORY[0x1E0DEE9D8];
      sub_1BDB2253C(0, v3, 0);
      v44 = *((_QWORD *)&v50 + 1);
      v5 = (uint64_t *)(*((_QWORD *)&v50 + 1) + 40);
      v4 = v46;
      do
      {
        v6 = *v5;
        v7 = qword_1EF50B2A0;
        swift_bridgeObjectRetain_n();
        if (v7 != -1)
          swift_once();
        v8 = (void *)qword_1EF50F600;
        v9 = (void *)sub_1BDBFD6C8();
        if ((v6 & 0x1000000000000000) != 0)
          v10 = sub_1BDBFD83C();
        else
          v10 = sub_1BDBFD848();
        v11 = v10;
        v12 = (void *)sub_1BDBFD6C8();
        v13 = objc_msgSend(v8, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v9, 0, 0, v11, v12);

        sub_1BDBFD6F8();
        v14 = sub_1BDBFD7A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v46 = v4;
        v16 = *(_QWORD *)(v4 + 16);
        v15 = *(_QWORD *)(v4 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1BDB2253C(v15 > 1, v16 + 1, 1);
          v4 = v46;
        }
        v5 += 2;
        *(_QWORD *)(v4 + 16) = v16 + 1;
        *(_QWORD *)(v4 + 8 * v16 + 32) = v14;
        --v3;
      }
      while (v3);
      v2 = v44;
    }
  }
  else
  {
    v4 = sub_1BDBADBEC(0, v50);
  }
  sub_1BDB08338((uint64_t)&v50);
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1BDB075D0(v17, (uint64_t)&v50);
  sub_1BDB0836C((uint64_t)&v50);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = 0;
    v21 = v4;
    do
    {
      v22 = *(_QWORD *)(v18 + 8 * v20++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = sub_1BDB044C0(v22, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    while (v19 != v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_18:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1BDB04910(v2, v21, (uint64_t)v45, sub_1BDB06054);
      swift_bridgeObjectRelease();
      v46 = v23;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
      sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
      v24 = sub_1BDBFD674();
      v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v18 + 16);
      if (v27)
        goto LABEL_19;
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = MEMORY[0x1E0DEE9D8];
      goto LABEL_27;
    }
  }
  else
  {
    v21 = v4;
    if (v2)
      goto LABEL_18;
  }
  v24 = 0;
  v26 = 0xE000000000000000;
  v27 = *(_QWORD *)(v18 + 16);
  if (!v27)
    goto LABEL_26;
LABEL_19:
  v42 = v24;
  v43 = v26;
  v46 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BDB224F4(0, v27, 0);
  v28 = 0;
  v29 = v46;
  do
  {
    v30 = v27;
    swift_bridgeObjectRetain();
    v31 = swift_bridgeObjectRetain();
    v32 = sub_1BDB04910(v31, v21, (uint64_t)v49, sub_1BDB06208);
    swift_bridgeObjectRelease();
    v48 = v32;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
    sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
    v33 = sub_1BDBFD674();
    v35 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v29;
    v37 = *(_QWORD *)(v29 + 16);
    v36 = *(_QWORD *)(v29 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_1BDB224F4(v36 > 1, v37 + 1, 1);
      v29 = v46;
    }
    ++v28;
    *(_QWORD *)(v29 + 16) = v37 + 1;
    v38 = v29 + 16 * v37;
    *(_QWORD *)(v38 + 32) = v33;
    *(_QWORD *)(v38 + 40) = v35;
    v27 = v30;
  }
  while (v30 != v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v24 = v42;
  v26 = v43;
LABEL_27:
  v46 = v29;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
  v39 = sub_1BDBFD674();
  swift_bridgeObjectRelease();
  v40 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0)
    v40 = v24 & 0xFFFFFFFFFFFFLL;
  if (v40)
  {
    v46 = v24;
    v47 = v26;
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v46;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v39;
}

uint64_t sub_1BDB05DA0()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17;

  v1 = v0[1];
  v15 = *v0;
  v16[0] = v1;
  *(_OWORD *)((char *)v16 + 9) = *(__int128 *)((char *)v0 + 25);
  if (*((_QWORD *)&v15 + 1))
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
    sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
    v2 = sub_1BDBFD674();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = *(_QWORD *)&v16[0];
  v17 = *(_QWORD *)&v16[0];
  v4 = *(_QWORD *)(*(_QWORD *)&v16[0] + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    sub_1BDB08338((uint64_t)&v15);
    sub_1BDAEE370((uint64_t)&v17);
    sub_1BDB224F4(0, v4, 0);
    v6 = v3 + 32;
    do
    {
      sub_1BDB08338((uint64_t)&v15);
      v7 = swift_bridgeObjectRetain();
      sub_1BDB07B04(v7, (uint64_t)&v15);
      sub_1BDB0836C((uint64_t)&v15);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
      sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
      v8 = sub_1BDBFD674();
      v10 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v5 + 24);
      if (v12 >= v11 >> 1)
        sub_1BDB224F4(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v5 + 16) = v12 + 1;
      v13 = v5 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      v6 += 8;
      --v4;
    }
    while (v4);
    sub_1BDB0836C((uint64_t)&v15);
    sub_1BDAEE398((uint64_t)&v17);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
  sub_1BDBFD674();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BDB06054(uint64_t a1, uint64_t a2, Swift::Int a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = 1;
  v7 = 0xE000000000000000;
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  v8 = 0;
  v9 = 0xE000000000000000;
  String.padding(to:alignment:ignoringAnsi:)(a3, (unsigned __int8 *)&v6, 1, a1);
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v6 = 0;
  v7 = 0xE000000000000000;
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return v8;
}

uint64_t sub_1BDB06208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24[4];
  char v25;
  uint64_t v26;

  if (qword_1EF50B2A0 != -1)
    swift_once();
  v6 = (void *)qword_1EF50F600;
  v7 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRetain();
  v8 = sub_1BDBFD854();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1BDBFD6C8();
  v10 = objc_msgSend(v6, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v7, 0, 0, v8, v9);

  sub_1BDBFD6F8();
  v11 = sub_1BDBFD7A0();
  result = swift_bridgeObjectRelease();
  v13 = a3 - v11;
  if (!__OFSUB__(a3, v11))
  {
    if (v13 <= 0)
    {
      if (a3 <= 0)
      {
        v22 = 0;
        v23 = 0xE000000000000000;
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        v26 = 0;
        sub_1BDBFE760();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD650();
        goto LABEL_7;
      }
      v14 = (void *)qword_1EF50F600;
      v15 = (void *)sub_1BDBFD6C8();
      swift_bridgeObjectRetain();
      v16 = sub_1BDBFD854();
      swift_bridgeObjectRelease();
      v17 = (void *)sub_1BDBFD6C8();
      v18 = objc_msgSend(v14, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v15, 0, 0, v16, v17);

      sub_1BDBFD6F8();
      v19 = sub_1BDBFD7A0();
      swift_bridgeObjectRelease();
      if (v19 <= a3)
      {
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        v26 = 0;
        sub_1BDBFE760();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD650();
        v22 = a1;
        v23 = a2;
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
      }
      else
      {
        v24[0] = 0;
        v24[1] = 0xE000000000000000;
        v24[2] = 0;
        v24[3] = a3;
        v25 = 0;
        swift_bridgeObjectRetain();
        sub_1BDBAD774(v24, a1, a2, (uint64_t)&v22);
        v21 = v22;
        v20 = v23;
        v22 = 0;
        v23 = 0xE000000000000000;
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        v26 = 0;
        sub_1BDBFE760();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD650();
        v22 = v21;
        v23 = v20;
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1BDBADCD4(32, 0xE100000000000000, v13);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
      sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
      sub_1BDBFD674();
      swift_bridgeObjectRelease();
      v22 = a1;
      v23 = a2;
      swift_bridgeObjectRetain();
      sub_1BDBFD7DC();
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    return v22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB066D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v21[4];
  _QWORD *v22;

  v4 = v3;
  v6 = a3;
  v7 = *a1;
  v8 = *(_QWORD *)(*a1 + 16);
  if (v8)
  {
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1BDB224F4(0, v8, 0);
    v9 = v7 + 32;
    v10 = v22;
    do
    {
      sub_1BDAE0BA0(v9, (uint64_t)v21);
      v11 = sub_1BDB070A8((uint64_t)v21);
      v13 = v12;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDB224F4(0, v10[2] + 1, 1);
        v10 = v22;
      }
      v15 = v10[2];
      v14 = v10[3];
      v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_1BDB224F4(v14 > 1, v15 + 1, 1);
        v10 = v22;
      }
      v10[2] = v16;
      v17 = &v10[2 * v15];
      v17[4] = v11;
      v17[5] = v13;
      v9 += 32;
      --v8;
    }
    while (v8);
    v4 = v3;
    v6 = a3;
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v16 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  }
  if (v16 >= a2[2])
    v16 = a2[2];
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5100F0);
    v18 = sub_1BDBFE598();
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9E0];
  }
  v21[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1BDB06C48(a2, v10, 1, v21);
  if (v4)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *v6 = v21[0];
  }
  return result;
}

uint64_t Date.tableCellDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BDBFCA5C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDB06940((uint64_t)v3);
  v4 = sub_1BDBFCA08();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BDB06940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t);
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C960);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1BDBFCBA0();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1BDBFCA50();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFCA38();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BDBFCA20();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BDBFCA2C();
  MEMORY[0x1E0C80A78](v16);
  (*(void (**)(char *, _QWORD))(v18 + 104))((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0CB05F0]);
  v19 = v12;
  v20 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CB05E0], v19);
  v21 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v22 = v29;
  v21(v11, *MEMORY[0x1E0CB0600], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CB0628], v28);
  sub_1BDBFCB94();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v3, 1, v22);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v3, v22);
    return sub_1BDBFCA44();
  }
  return result;
}

uint64_t sub_1BDB06BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BDBFCA5C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDB06940((uint64_t)v3);
  v4 = sub_1BDBFCA08();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_1BDB06C48(_QWORD *a1, _QWORD *a2, char a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if (!a1[2] || (v49 = a2[2]) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v48 = a1[2];
  v7 = a1[4];
  v6 = a1[5];
  v8 = a2[4];
  v9 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)*a4;
  swift_bridgeObjectRetain();
  v12 = sub_1BDAC358C(v7, v6);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_30;
  v16 = v11;
  if (v10[3] >= v15)
  {
    if ((a3 & 1) != 0)
    {
      v19 = a1;
      if ((v11 & 1) != 0)
        goto LABEL_11;
    }
    else
    {
      sub_1BDBCD430();
      v19 = a1;
      if ((v16 & 1) != 0)
        goto LABEL_11;
    }
LABEL_14:
    v22 = (_QWORD *)*a4;
    *(_QWORD *)(*a4 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v23 = (uint64_t *)(v22[6] + 16 * v12);
    *v23 = v7;
    v23[1] = v6;
    v24 = (_QWORD *)(v22[7] + 16 * v12);
    *v24 = v8;
    v24[1] = v9;
    v25 = v22[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v22[2] = v27;
    if (v48 == 1)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return;
    }
    if (v19[2] < 2uLL)
      goto LABEL_32;
    if (v49 == 1)
      goto LABEL_18;
    v28 = v19 + 7;
    v29 = a2 + 7;
    for (i = 2; ; ++i)
    {
      v32 = *(v28 - 1);
      v31 = *v28;
      swift_bridgeObjectRetain();
      v33 = *(v29 - 1);
      v34 = *v29;
      v35 = (_QWORD *)*a4;
      swift_bridgeObjectRetain();
      v36 = sub_1BDAC358C(v32, v31);
      v38 = v35[2];
      v39 = (v37 & 1) == 0;
      v26 = __OFADD__(v38, v39);
      v40 = v38 + v39;
      if (v26)
        break;
      v41 = v37;
      if (v35[3] < v40)
      {
        sub_1BDBCEE38(v40, 1);
        v36 = sub_1BDAC358C(v32, v31);
        if ((v41 & 1) != (v42 & 1))
          goto LABEL_33;
      }
      if ((v41 & 1) != 0)
        goto LABEL_11;
      v43 = (_QWORD *)*a4;
      *(_QWORD *)(*a4 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      v44 = (uint64_t *)(v43[6] + 16 * v36);
      *v44 = v32;
      v44[1] = v31;
      v45 = (_QWORD *)(v43[7] + 16 * v36);
      *v45 = v33;
      v45[1] = v34;
      v46 = v43[2];
      v26 = __OFADD__(v46, 1);
      v47 = v46 + 1;
      if (v26)
        goto LABEL_31;
      v43[2] = v47;
      if (v48 == i)
        goto LABEL_18;
      if (i >= a1[2])
        goto LABEL_32;
      if (v49 == i)
        goto LABEL_18;
      v29 += 2;
      v28 += 2;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1BDBCEE38(v15, a3 & 1);
  v17 = sub_1BDAC358C(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    v12 = v17;
    v19 = a1;
    if ((v16 & 1) == 0)
      goto LABEL_14;
LABEL_11:
    v20 = (void *)swift_allocError();
    swift_willThrow();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_34;
  }
LABEL_33:
  sub_1BDBFE994();
  __break(1u);
LABEL_34:
  sub_1BDBFE304();
  sub_1BDBFD7DC();
  sub_1BDBFE4E4();
  sub_1BDBFD7DC();
  sub_1BDBFE52C();
  __break(1u);
}

uint64_t sub_1BDB070A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41[2];
  uint64_t v42;
  _QWORD v43[4];
  __int128 v44;
  uint64_t v45;

  v2 = sub_1BDBFEA48();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C970);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C978);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  v18 = sub_1BDBFEA78();
  v35 = *(_QWORD *)(v18 - 8);
  v36 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  sub_1BDAE0BA0(a1, (uint64_t)&v37);
  sub_1BDBFEA3C();
  v34 = v20;
  sub_1BDBFEA54();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v15, *MEMORY[0x1E0DEDFC0], v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  v21 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1BDB083E4((uint64_t)v17, (uint64_t)v8);
  sub_1BDB083E4((uint64_t)v15, v21);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v22((uint64_t)v8, 1, v2) == 1)
  {
    sub_1BDAC350C((uint64_t)v15, &qword_1EF50C978);
    sub_1BDAC350C((uint64_t)v17, &qword_1EF50C978);
    v23 = v22(v21, 1, v2);
    v24 = v34;
    if (v23 == 1)
    {
      sub_1BDAC350C((uint64_t)v8, &qword_1EF50C978);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1BDB083E4((uint64_t)v8, (uint64_t)v12);
  if (v22(v21, 1, v2) == 1)
  {
    sub_1BDAC350C((uint64_t)v15, &qword_1EF50C978);
    sub_1BDAC350C((uint64_t)v17, &qword_1EF50C978);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    v24 = v34;
LABEL_6:
    sub_1BDAC350C((uint64_t)v8, &qword_1EF50C970);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v21, v2);
  v25 = sub_1BDBFD6BC();
  v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v5, v2);
  sub_1BDAC350C((uint64_t)v15, &qword_1EF50C978);
  sub_1BDAC350C((uint64_t)v17, &qword_1EF50C978);
  v26(v12, v2);
  sub_1BDAC350C((uint64_t)v8, &qword_1EF50C978);
  v24 = v34;
  if ((v25 & 1) != 0)
  {
LABEL_8:
    sub_1BDBFEA6C();
    sub_1BDB2C7C0(&v37);
    swift_release();
    if (v40)
    {
      swift_bridgeObjectRelease();
      sub_1BD942258(&v38, v41);
      sub_1BD942258(v41, &v44);
    }
    else
    {
      sub_1BDAC350C((uint64_t)&v37, &qword_1EF50C990);
      v45 = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v44 = 0;
      *((_QWORD *)&v44 + 1) = 0xE000000000000000;
    }
    goto LABEL_11;
  }
LABEL_10:
  sub_1BDAE0BA0(v33, (uint64_t)&v44);
LABEL_11:
  sub_1BDAE0BA0((uint64_t)&v44, (uint64_t)v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C980);
  if (swift_dynamicCast())
  {
    sub_1BDAE14D4(v41, (uint64_t)&v37);
    v27 = *((_QWORD *)&v38 + 1);
    v28 = v39;
    __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v36);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
    v30 = &v37;
  }
  else
  {
    v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1BDAC350C((uint64_t)v41, &qword_1EF50C988);
    sub_1BDAE0BA0((uint64_t)&v44, (uint64_t)&v37);
    *(_QWORD *)&v37 = sub_1BDBFD734();
    *((_QWORD *)&v37 + 1) = v31;
    *(_QWORD *)&v41[0] = 10;
    *((_QWORD *)&v41[0] + 1) = 0xE100000000000000;
    v43[0] = 32;
    v43[1] = 0xE100000000000000;
    sub_1BDAC3548();
    v29 = sub_1BDBFE13C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v36);
    v30 = &v44;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
  return v29;
}

uint64_t sub_1BDB075D0(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43[4];
  char v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[16];
  uint64_t v48;
  char v49;
  uint64_t v50;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v50 = MEMORY[0x1E0DEE9D8];
  sub_1BDB22510(0, v2, 0);
  v6 = 0;
  result = v50;
  v36 = a2;
  v37 = a1 + 32;
  v34 = a2 + 32;
  v35 = v2;
  do
  {
    v8 = *(_QWORD *)(v37 + 8 * v6);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v38 = result;
      v39 = v6;
      swift_bridgeObjectRetain();
      sub_1BDB08338(a2);
      v46 = v3;
      sub_1BDB224F4(0, v9, 0);
      v10 = v46;
      v11 = v8 + 32;
      sub_1BDB0839C(v34, (uint64_t)v47);
      do
      {
        sub_1BDB0839C((uint64_t)v47, (uint64_t)&v48);
        if ((v49 & 1) != 0)
        {
          v12 = sub_1BDB070A8(v11);
          v14 = v13;
        }
        else
        {
          v15 = v48;
          v16 = sub_1BDB070A8(v11);
          v18 = v17;
          if (v15 < 1)
          {
            v41 = 0;
            v42 = 0xE000000000000000;
            sub_1BDBFD650();
            sub_1BDBFD7DC();
            v45 = 0;
            sub_1BDBFE760();
            sub_1BDBFD7DC();
            swift_bridgeObjectRelease();
            sub_1BDBFD650();
          }
          else
          {
            v19 = v16;
            if (qword_1EF50B2A0 != -1)
              swift_once();
            v20 = (void *)qword_1EF50F600;
            v21 = (void *)sub_1BDBFD6C8();
            v40 = v19;
            if ((v18 & 0x1000000000000000) != 0)
              v22 = sub_1BDBFD83C();
            else
              v22 = sub_1BDBFD848();
            v23 = v22;
            v24 = (void *)sub_1BDBFD6C8();
            v25 = objc_msgSend(v20, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v21, 0, 0, v23, v24);

            sub_1BDBFD6F8();
            v26 = sub_1BDBFD7A0();
            swift_bridgeObjectRelease();
            if (v15 >= v26)
            {
              v41 = 0;
              v42 = 0xE000000000000000;
              sub_1BDBFD650();
              sub_1BDBFD7DC();
              v45 = 0;
              sub_1BDBFE760();
              sub_1BDBFD7DC();
              swift_bridgeObjectRelease();
              sub_1BDBFD650();
              v41 = v40;
              v42 = v18;
              swift_bridgeObjectRetain();
              sub_1BDBFD7DC();
            }
            else
            {
              v43[0] = 0;
              v43[1] = 0xE000000000000000;
              v43[2] = 0;
              v43[3] = v15;
              v44 = 0;
              swift_bridgeObjectRetain();
              sub_1BDBAD774(v43, v40, v18, (uint64_t)&v41);
              v27 = v41;
              v28 = v42;
              v41 = 0;
              v42 = 0xE000000000000000;
              sub_1BDBFD650();
              sub_1BDBFD7DC();
              v45 = 0;
              sub_1BDBFE760();
              sub_1BDBFD7DC();
              swift_bridgeObjectRelease();
              sub_1BDBFD650();
              v41 = v27;
              v42 = v28;
              swift_bridgeObjectRetain();
              sub_1BDBFD7DC();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v12 = v41;
          v14 = v42;
        }
        v46 = v10;
        v30 = *(_QWORD *)(v10 + 16);
        v29 = *(_QWORD *)(v10 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1BDB224F4(v29 > 1, v30 + 1, 1);
          v10 = v46;
        }
        *(_QWORD *)(v10 + 16) = v30 + 1;
        v31 = v10 + 16 * v30;
        *(_QWORD *)(v31 + 32) = v12;
        *(_QWORD *)(v31 + 40) = v14;
        v11 += 32;
        --v9;
      }
      while (v9);
      a2 = v36;
      sub_1BDB0836C(v36);
      swift_bridgeObjectRelease();
      v3 = MEMORY[0x1E0DEE9D8];
      v2 = v35;
      result = v38;
      v6 = v39;
    }
    else
    {
      v10 = v3;
    }
    v50 = result;
    v33 = *(_QWORD *)(result + 16);
    v32 = *(_QWORD *)(result + 24);
    if (v33 >= v32 >> 1)
    {
      sub_1BDB22510(v32 > 1, v33 + 1, 1);
      result = v50;
    }
    ++v6;
    *(_QWORD *)(result + 16) = v33 + 1;
    *(_QWORD *)(result + 8 * v33 + 32) = v10;
  }
  while (v6 != v2);
  return result;
}

uint64_t sub_1BDB07B04(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  char v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1BDB224F4(0, v2, 0);
  v3 = v24;
  v6 = a1 + 32;
  sub_1BDB0839C(a2 + 32, (uint64_t)v21);
  while (1)
  {
    sub_1BDB0839C((uint64_t)v21, (uint64_t)&v22);
    if ((v23 & 1) != 0)
    {
      v7 = sub_1BDB070A8(v6);
      v9 = v8;
      goto LABEL_10;
    }
    v10 = v22;
    v11 = sub_1BDB070A8(v6);
    v9 = v12;
    if (v10 < 1)
    {
      swift_bridgeObjectRelease();
      v7 = 0;
      v9 = 0xE000000000000000;
      goto LABEL_10;
    }
    v7 = v11;
    if (v10 < sub_1BDBFD7A0())
      break;
LABEL_10:
    v24 = v3;
    v19 = *(_QWORD *)(v3 + 16);
    v18 = *(_QWORD *)(v3 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_1BDB224F4(v18 > 1, v19 + 1, 1);
      v3 = v24;
    }
    *(_QWORD *)(v3 + 16) = v19 + 1;
    v20 = v3 + 16 * v19;
    *(_QWORD *)(v20 + 32) = v7;
    *(_QWORD *)(v20 + 40) = v9;
    v6 += 32;
    if (!--v2)
      return v3;
  }
  swift_bridgeObjectRetain();
  sub_1BDBAEBC4(v10 - 1);
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_ic_ellipsisCharacterString);
  sub_1BDBFD6F8();

  v14 = sub_1BDBFD7A0();
  v15 = sub_1BDBFE0DC();
  v16 = __OFADD__(v14, v15);
  result = v14 + v15;
  if (!v16)
  {
    MEMORY[0x1C3B78D48](result);
    sub_1BDB0842C();
    sub_1BDBFD7C4();
    sub_1BDBFD7C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = 0;
    v9 = 0xE000000000000000;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB07D60(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t *i;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22558(0, v4, 0);
    v5 = v15;
    for (i = (uint64_t *)(a1 + 32); ; ++i)
    {
      v13 = *i;
      swift_bridgeObjectRetain();
      sub_1BDB066D0(&v13, a2, &v14);
      if (v3)
        break;
      v3 = 0;
      swift_bridgeObjectRelease();
      v9 = v14;
      v15 = v5;
      v11 = *(_QWORD *)(v5 + 16);
      v10 = *(_QWORD *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BDB22558(v10 > 1, v11 + 1, 1);
        v5 = v15;
      }
      *(_QWORD *)(v5 + 16) = v11 + 1;
      *(_QWORD *)(v5 + 8 * v11 + 32) = v9;
      if (!--v4)
        return v5;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_1BDB07E78()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF50C920;
  if (!qword_1EF50C920)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50C918);
    v2 = sub_1BDB07EDC();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF50C920);
  }
  return result;
}

unint64_t sub_1BDB07EDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF50C928;
  if (!qword_1EF50C928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50C930);
    v2[0] = MEMORY[0x1E0DEA970];
    v2[1] = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF50C928);
  }
  return result;
}

unint64_t sub_1BDB07F3C()
{
  unint64_t result;

  result = qword_1EF50C938;
  if (!qword_1EF50C938)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableFormat.Formats, &type metadata for TableFormat.Formats);
    atomic_store(result, (unint64_t *)&qword_1EF50C938);
  }
  return result;
}

uint64_t sub_1BDB07F80()
{
  return sub_1BDAE0C94(&qword_1EF50C940, &qword_1EF50C948, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1BDB07FAC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BDB07FD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BDB07FD0()
{
  unint64_t result;

  result = qword_1EF50C950;
  if (!qword_1EF50C950)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableFormat.Formats, &type metadata for TableFormat.Formats);
    atomic_store(result, (unint64_t *)&qword_1EF50C950);
  }
  return result;
}

uint64_t destroy for TableFormat()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TableFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TableFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TableFormat(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TableFormat(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TableFormat(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TableFormat()
{
  return &type metadata for TableFormat;
}

uint64_t storeEnumTagSinglePayload for TableFormat.Formats(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDB0826C + 4 * byte_1BDC19175[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDB082A0 + 4 * byte_1BDC19170[v4]))();
}

uint64_t sub_1BDB082A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB082A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB082B0);
  return result;
}

uint64_t sub_1BDB082BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB082C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDB082C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB082D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TableFormat.Formats()
{
  return &type metadata for TableFormat.Formats;
}

uint64_t dispatch thunk of TableFormattable.tableCellDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_1BDB082F4()
{
  unint64_t result;

  result = qword_1EF50C958;
  if (!qword_1EF50C958)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableFormat.Formats, &type metadata for TableFormat.Formats);
    atomic_store(result, (unint64_t *)&qword_1EF50C958);
  }
  return result;
}

uint64_t sub_1BDB08338(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BDB0836C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BDB0839C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB083E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDB0842C()
{
  unint64_t result;

  result = qword_1EF50CC70;
  if (!qword_1EF50CC70)
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EF50CC70);
  }
  return result;
}

uint64_t sub_1BDB08470()
{
  return swift_getAtPartialKeyPath();
}

uint64_t sub_1BDB084A0()
{
  return swift_getAtPartialKeyPath();
}

uint64_t LinkSuggestion.text.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.systemImageName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.timeStamp.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.noteIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.noteCachedTrimmedTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.isNewNoteSuggestion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t LinkSuggestion.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LinkSuggestion() + 40);
  v4 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for LinkSuggestion()
{
  uint64_t result;

  result = qword_1ED23A388;
  if (!qword_1ED23A388)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LinkSuggestion.init(text:timeStamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  type metadata accessor for LinkSuggestion();
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(_BYTE *)(a5 + 80) = 0;
  result = _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 32) = a3;
  *(_QWORD *)(a5 + 40) = a4;
  return result;
}

void LinkSuggestion.init(note:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unsigned int v36;
  uint64_t v37;

  v4 = sub_1BDBFCAC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v37 - v12;
  type metadata accessor for LinkSuggestion();
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  *(_BYTE *)(a2 + 80) = 0;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v14 = objc_msgSend(a1, sel_titleForLinking);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1BDBFD6F8();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0xE000000000000000;
  }
  *(_QWORD *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v18;
  v19 = objc_msgSend(a1, sel_identifier);
  if (v19)
  {
    v20 = v19;
    v21 = sub_1BDBFD6F8();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  *(_QWORD *)(a2 + 48) = v21;
  *(_QWORD *)(a2 + 56) = v23;
  v24 = objc_msgSend(a1, sel_modificationDate);
  if (v24)
  {
    v25 = v24;
    sub_1BDBFCAA4();

    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, v26, 1, v4);
  sub_1BDADECA8((uint64_t)v11, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
  {
    sub_1BDACDF68((uint64_t)v13);
    v27 = 0;
    v28 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v13, v4);
    sub_1BDACDF68((uint64_t)v13);
    v27 = sub_1BDBFC9CC();
    v28 = v29;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v28;
  v30 = objc_msgSend(a1, sel_trimmedTitle);
  v31 = sub_1BDBFD6F8();
  v33 = v32;

  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 64) = v31;
  *(_QWORD *)(a2 + 72) = v33;
  if (objc_msgSend(a1, sel_isSharedViaICloud))
  {

    v34 = 0x80000001BDC37BA0;
    v35 = 0xD000000000000012;
  }
  else
  {
    v36 = objc_msgSend(a1, sel_isPasswordProtected);

    if (!v36)
      return;
    v34 = 0xE90000000000006CLL;
    v35 = 0x6C69662E6B636F6CLL;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v35;
  *(_QWORD *)(a2 + 24) = v34;
}

double LinkSuggestion.init(url:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  type metadata accessor for LinkSuggestion();
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_BYTE *)(a2 + 80) = 0;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  *(_QWORD *)a2 = sub_1BDBFC8A0();
  *(_QWORD *)(a2 + 8) = v4;
  v5 = sub_1BDBFC948();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = 0x65626F6C67;
  *(_OWORD *)(a2 + 16) = xmmword_1BDC19360;
  return result;
}

double LinkSuggestion.init(textForNewNoteSuggestion:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  type metadata accessor for LinkSuggestion();
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 1.35426987e243;
  *(_OWORD *)(a3 + 16) = xmmword_1BDC19370;
  *(_BYTE *)(a3 + 80) = 1;
  return result;
}

uint64_t LinkSuggestion.hash(into:)()
{
  _QWORD *v0;

  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  if (v0[3])
  {
    sub_1BDBFEA24();
    swift_bridgeObjectRetain();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
    if (v0[5])
      goto LABEL_3;
  }
  else
  {
    sub_1BDBFEA24();
    if (v0[5])
    {
LABEL_3:
      sub_1BDBFEA24();
      swift_bridgeObjectRetain();
      sub_1BDBFD794();
      swift_bridgeObjectRelease();
      if (v0[7])
        goto LABEL_4;
LABEL_8:
      sub_1BDBFEA24();
      if (v0[9])
        goto LABEL_5;
LABEL_9:
      sub_1BDBFEA24();
      return sub_1BDBFEA24();
    }
  }
  sub_1BDBFEA24();
  if (!v0[7])
    goto LABEL_8;
LABEL_4:
  sub_1BDBFEA24();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  if (!v0[9])
    goto LABEL_9;
LABEL_5:
  sub_1BDBFEA24();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA24();
}

void __swiftcall LinkSuggestion.completionSuggestionsItem()(ICAutoCompleteSuggestionsItem *__return_ptr retstr)
{
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  if (*(_QWORD *)(v1 + 24))
  {
    swift_bridgeObjectRetain();
    v2 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v2);

  }
  else
  {
    v18 = 0;
  }
  v3 = LinkSuggestion.displayText.getter();
  v16 = v4;
  v17 = (uint64_t)v3;
  v5 = *(_QWORD *)v1;
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  type metadata accessor for LinkSuggestion();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1BDBFCAEC();
  v11 = v10;
  v12 = *(_BYTE *)(v1 + 80);
  v14 = *(_QWORD *)(v1 + 48);
  v13 = *(_QWORD *)(v1 + 56);
  v15 = objc_allocWithZone((Class)ICAutoCompleteSuggestionsItem);
  swift_bridgeObjectRetain();
  sub_1BDB09084(v17, v16, v5, v6, v7, v8, v9, v11, 0, 0, v12, v18, v14, v13, 0);
}

char *LinkSuggestion.displayText.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  if (*(_BYTE *)(v0 + 80) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
    v3 = *(char **)v0;
    v2 = *(_QWORD *)(v0 + 8);
    *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 64) = sub_1BD942A90();
    *(_QWORD *)(inited + 32) = v3;
    *(_QWORD *)(inited + 40) = v2;
    v4 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v5 = (void *)sub_1BDBFD6C8();
    v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 1);

    v7 = sub_1BDBFD6F8();
    v9 = v8;

    swift_bridgeObjectRetain();
    v10 = sub_1BDB09360(inited, v7, v9);
    swift_bridgeObjectRelease_n();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
    swift_arrayDestroy();
  }
  else
  {
    v10 = *(char **)v0;
    swift_bridgeObjectRetain();
  }
  return v10;
}

void LinkSuggestion.init(autocompleteSuggestionItem:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;

  type metadata accessor for LinkSuggestion();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v4 = objc_msgSend(a1, sel_shortText);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BDBFD6F8();
    v8 = v7;

    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v8;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    v9 = objc_msgSend(a1, sel_rightText);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1BDBFD6F8();
      v13 = v12;

    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    *(_QWORD *)(a2 + 32) = v11;
    *(_QWORD *)(a2 + 40) = v13;
    v14 = objc_msgSend(a1, sel_parentNoteIdentifier);
    if (v14)
    {
      v15 = v14;
      v16 = sub_1BDBFD6F8();
      v18 = v17;

    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    *(_QWORD *)(a2 + 48) = v16;
    *(_QWORD *)(a2 + 56) = v18;
    *(_QWORD *)(a2 + 64) = 0;
    *(_QWORD *)(a2 + 72) = 0;
    v19 = objc_msgSend(a1, sel_isCreationSuggestion);

    *(_BYTE *)(a2 + 80) = v19;
  }
  else
  {
    __break(1u);
  }
}

uint64_t LinkSuggestion.hashValue.getter()
{
  sub_1BDBFEA0C();
  LinkSuggestion.hash(into:)();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB08FC8()
{
  sub_1BDBFEA0C();
  LinkSuggestion.hash(into:)();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB09008()
{
  sub_1BDBFEA0C();
  LinkSuggestion.hash(into:)();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB09040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

id sub_1BDB09084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11, void *a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v25;
  void *v26;
  void *v27;

  v26 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v18 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    if (a6)
      goto LABEL_3;
LABEL_6:
    v19 = 0;
    v20 = a14;
    if (a8)
      goto LABEL_4;
    goto LABEL_7;
  }
  v18 = 0;
  if (!a6)
    goto LABEL_6;
LABEL_3:
  v19 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v20 = a14;
  if (a8)
  {
LABEL_4:
    v21 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  v21 = 0;
LABEL_8:
  if (v20)
  {
    v22 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  LOBYTE(v25) = a11 & 1;
  v23 = objc_msgSend(v27, sel_initWithDisplayText_shortText_rightText_uuidString_isEmptyPlaceholder_isSectionHeader_isCreationSuggestion_iconImage_parentNoteIdentifier_representedObject_, v26, v18, v19, v21, a9 & 1, a10 & 1, v25, a12, v22, a15);

  return v23;
}

uint64_t _s11NotesShared14LinkSuggestionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v4 && (sub_1BDBFE874() & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  if (v5)
  {
    if (!v6)
      return 0;
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v5 == v6;
    if (!v7 && (sub_1BDBFE874() & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 40);
  if (v8)
  {
    if (!v9 || (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v8 != v9) && (sub_1BDBFE874() & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a2 + 56);
  if (v10)
  {
    if (!v11 || (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48) || v10 != v11) && (sub_1BDBFE874() & 1) == 0)
      return 0;
  }
  else if (v11)
  {
    return 0;
  }
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a2 + 72);
  if (!v12)
  {
    if (!v13)
      goto LABEL_36;
    return 0;
  }
  if (!v13 || (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64) || v12 != v13) && (sub_1BDBFE874() & 1) == 0)
    return 0;
LABEL_36:
  if (*(unsigned __int8 *)(a1 + 80) != *(unsigned __int8 *)(a2 + 80))
    return 0;
  type metadata accessor for LinkSuggestion();
  return sub_1BDBFCB04();
}

char *sub_1BDB09360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *result;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v27[3];
  uint64_t v28;

  sub_1BDBFE4D8();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = 8;
  v4[3] = 0;
  v5 = v4 + 3;
  v4[4] = 0;
  v4[5] = 0;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_25:
    v22 = sub_1BDBFE4CC();
    sub_1BDB09BD4();
    v28 = sub_1BDBFCB58();
    __swift_allocate_boxed_opaque_existential_1(v27);
    swift_bridgeObjectRetain();
    sub_1BDBFCB4C();
    v23 = sub_1BDB8F3C4(a2, a3, v27, v22);
    v24 = sub_1BDBFD6F8();
    swift_release();

    return (char *)v24;
  }
  v7 = 0;
  v8 = a1 + 32;
  while (1)
  {
    sub_1BDADED64(v8 + 40 * v7, (uint64_t)v27);
    __swift_project_boxed_opaque_existential_1(v27, v28);
    result = (char *)sub_1BDBFEA9C();
    v10 = *v5;
    v11 = *((_QWORD *)result + 2);
    v12 = __OFADD__(*v5, v11);
    v13 = *v5 + v11;
    if (v12)
      break;
    v14 = result;
    v15 = v4[4];
    if (v15 >= v13)
      goto LABEL_18;
    if (v15 + 0x4000000000000000 < 0)
      goto LABEL_28;
    v16 = (char *)v4[5];
    if (2 * v15 > v13)
      v13 = 2 * v15;
    v4[4] = v13;
    if ((unint64_t)(v13 - 0x1000000000000000) >> 61 != 7)
      goto LABEL_29;
    result = (char *)swift_slowAlloc();
    v4[5] = result;
    if (v16)
    {
      if (result != v16 || result >= &v16[8 * v10])
        memmove(result, v16, 8 * v10);
      sub_1BDBFE4C0();
LABEL_18:
      result = (char *)v4[5];
    }
    if (!result)
      goto LABEL_30;
    v18 = *((_QWORD *)v14 + 2);
    if (v18)
    {
      v19 = (uint64_t *)(v14 + 32);
      v20 = *v5;
      while (1)
      {
        v21 = *v19++;
        *(_QWORD *)&result[8 * v20] = v21;
        v20 = *v5 + 1;
        if (__OFADD__(*v5, 1))
          break;
        *v5 = v20;
        if (!--v18)
          goto LABEL_3;
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v7;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
    if (v7 == v6)
      goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDB09598()
{
  return sub_1BDAC31B0(&qword_1EF50C998, (uint64_t (*)(uint64_t))type metadata accessor for LinkSuggestion, (uint64_t)&protocol conformance descriptor for LinkSuggestion);
}

uint64_t sub_1BDB095C4()
{
  return sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

_QWORD *initializeBufferWithCopyOfBuffer for LinkSuggestion(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v9;
    v10 = *(int *)(a3 + 40);
    v11 = (uint64_t)a2 + v10;
    v12 = a1 + v10;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v13 = sub_1BDBFCB40();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v11, v13);
  }
  return v3;
}

uint64_t destroy for LinkSuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(int *)(a3 + 40);
  v10 = a2 + v9;
  v11 = a1 + v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v12 = sub_1BDBFCB40();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v10, v12);
  return a1;
}

uint64_t assignWithCopy for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = *(int *)(a3 + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 40);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t assignWithTake for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v11 = *(int *)(a3 + 40);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkSuggestion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB09A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BDBFCB40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LinkSuggestion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB09AD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BDBFCB40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BDB09B48()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BDB09BD4()
{
  unint64_t result;

  result = qword_1EF50BBE0;
  if (!qword_1EF50BBE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50BBE0);
  }
  return result;
}

uint64_t NSManagedObjectContext.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BDB09C30()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v1 = v0[5];
  v2 = (void *)v0[6];
  v4 = v0[3];
  v3 = v0[4];
  v5 = (_QWORD *)swift_allocObject();
  v0[7] = (uint64_t)v5;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  v6 = swift_task_alloc();
  v0[8] = v6;
  *(_QWORD *)(v6 + 16) = v1;
  v7 = v2;
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_1BDAF1510;
  return withUnsafeRethrowingContinuation<A>(_:rethrow:)(v0[2], (uint64_t)sub_1BDB09DFC, (uint64_t)v5, (uint64_t)sub_1BDAF17F0, v6, v0[5]);
}

void sub_1BDB09CFC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a5;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a1;
  v12[4] = sub_1BDAF1844;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BDB24AB0;
  v12[3] = &block_descriptor_2;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_performBlock_, v11);
  _Block_release(v11);
}

uint64_t sub_1BDB09DD0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BDB09DFC(uint64_t a1)
{
  uint64_t v1;

  sub_1BDB09CFC(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t NSManagedObjectContext.ic_save(withLogDescription:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v5;

  v5 = v3;
  swift_bridgeObjectRetain();
  LOBYTE(a3) = sub_1BDB09E6C(a3, v5);

  swift_bridgeObjectRelease();
  return a3 & 1;
}

char *sub_1BDB09E6C(uint64_t a1, void *a2)
{
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD v25[4];

  sub_1BDBFE4D8();
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = 8;
  v3[3] = 0;
  v4 = v3 + 3;
  v3[4] = 0;
  v3[5] = 0;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_25:
    v21 = sub_1BDBFE4CC();
    v22 = (void *)sub_1BDBFD6C8();
    v23 = objc_msgSend(a2, sel_ic_saveWithLogDescription_arguments_, v22, v21);
    swift_release();

    return (char *)v23;
  }
  v6 = 0;
  v7 = a1 + 32;
  while (1)
  {
    sub_1BDADED64(v7 + 40 * v6, (uint64_t)v25);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    result = (char *)sub_1BDBFEA9C();
    v9 = *v4;
    v10 = *((_QWORD *)result + 2);
    v11 = __OFADD__(*v4, v10);
    v12 = *v4 + v10;
    if (v11)
      break;
    v13 = result;
    v14 = v3[4];
    if (v14 >= v12)
      goto LABEL_18;
    if (v14 + 0x4000000000000000 < 0)
      goto LABEL_28;
    v15 = (char *)v3[5];
    if (2 * v14 > v12)
      v12 = 2 * v14;
    v3[4] = v12;
    if ((unint64_t)(v12 - 0x1000000000000000) >> 61 != 7)
      goto LABEL_29;
    result = (char *)swift_slowAlloc();
    v3[5] = result;
    if (v15)
    {
      if (result != v15 || result >= &v15[8 * v9])
        memmove(result, v15, 8 * v9);
      sub_1BDBFE4C0();
LABEL_18:
      result = (char *)v3[5];
    }
    if (!result)
      goto LABEL_30;
    v17 = *((_QWORD *)v13 + 2);
    if (v17)
    {
      v18 = (uint64_t *)(v13 + 32);
      v19 = *v4;
      while (1)
      {
        v20 = *v18++;
        *(_QWORD *)&result[8 * v19] = v20;
        v19 = *v4 + 1;
        if (__OFADD__(*v4, 1))
          break;
        *v4 = v19;
        if (!--v17)
          goto LABEL_3;
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v6;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
    if (v6 == v5)
      goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDB0A06C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnDawnE(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);
  char v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C9A8);
  v0 = sub_1BDBFD3F8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BDC17EC0;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E0D12370], v0);
  v6(v5 + v2, *MEMORY[0x1E0D12378], v0);
  v7 = sub_1BDBFD410();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnDawnA(at:)()
{
  return sub_1BDB0A1C0();
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnSydneyB(at:)()
{
  return sub_1BDB0A1C0();
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnSydneyA(at:)()
{
  return sub_1BDB0A1C0();
}

uint64_t sub_1BDB0A1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);
  char v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C9A8);
  v0 = sub_1BDBFD3F8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BDC17EC0;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E0D12370], v0);
  v6(v5 + v2, *MEMORY[0x1E0D12378], v0);
  v7 = sub_1BDBFD410();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnPreSydney(at:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE20);
  return sub_1BDBFD428() & 1;
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaper(at:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE20);
  return sub_1BDBFD41C() & 1;
}

id ICAttachmentSystemPaperModelHelper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ICAttachmentSystemPaperModelHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICAttachmentSystemPaperModelHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ICAttachmentSystemPaperModelHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICAttachmentSystemPaperModelHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s11NotesShared34ICAttachmentSystemPaperModelHelperC016minimumSupporteda10VersionForE02at04baseJ0So07ICNotesJ0V10Foundation3URLV_AHtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t result;

  if (a2 < 7)
  {
    __break(1u);
    goto LABEL_20;
  }
  v2 = a2;
  if ((unint64_t)a2 > 0xF)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  if (a2 == 15)
    return 15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C9A8);
  v3 = sub_1BDBFD3F8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BDC17EC0;
  v8 = v7 + v6;
  v9 = *MEMORY[0x1E0D12370];
  v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 104);
  v10(v7 + v6, v9, v3);
  v11 = v8 + v5;
  v12 = *MEMORY[0x1E0D12378];
  v10(v11, v12, v3);
  LOBYTE(v4) = sub_1BDBFD410();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    return 15;
  if (v2 <= 0xD)
  {
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BDC17EC0;
    v14 = v13 + v6;
    v10(v13 + v6, v9, v3);
    v10(v14 + v5, v12, v3);
    LOBYTE(v14) = sub_1BDBFD410();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      if (v2 <= 0xC)
      {
        v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1BDC17EC0;
        v16 = v15 + v6;
        v10(v15 + v6, v9, v3);
        v10(v16 + v5, v12, v3);
        LOBYTE(v16) = sub_1BDBFD410();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
        {
          if (v2 <= 9)
          {
            v17 = swift_allocObject();
            *(_OWORD *)(v17 + 16) = xmmword_1BDC17EC0;
            v18 = v17 + v6;
            v10(v18, v9, v3);
            v10(v18 + v5, v12, v3);
            v19 = sub_1BDBFD410();
            swift_bridgeObjectRelease();
            if ((v19 & 1) != 0)
            {
              if (v2 <= 8 && (sub_1BDBFD428() & 1) == 0)
                return 9;
            }
            else
            {
              return 10;
            }
          }
        }
        else
        {
          return 13;
        }
      }
    }
    else
    {
      return 14;
    }
  }
  return v2;
}

uint64_t type metadata accessor for ICAttachmentSystemPaperModelHelper()
{
  return objc_opt_self();
}

unint64_t sub_1BDB0A7E8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5100F0);
  v2 = (_QWORD *)sub_1BDBFE598();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BDAC358C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0A908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC60);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC68);
  v6 = sub_1BDBFE598();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v12, (uint64_t)v5, &qword_1EF50CC60);
    result = sub_1BDB6AC34((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1BDBFE508();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_1BD942258(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0AAA4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC80);
  v2 = (_QWORD *)sub_1BDBFE598();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_1BDAC358C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0ABBC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510080);
  v2 = sub_1BDBFE598();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v6, (uint64_t)&v15, &qword_1EF50B410);
    v7 = v15;
    v8 = v16;
    result = sub_1BDAC358C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BD942258(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0ACF0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC38);
  v2 = sub_1BDBFE598();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v6, (uint64_t)v15, (uint64_t *)&unk_1EF50CC40);
    result = sub_1BDB6AC84((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1BD942258(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0AE30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC98);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CCA0);
  v6 = sub_1BDBFE598();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v12, (uint64_t)v5, &qword_1EF50CC98);
    result = sub_1BDB6AB44((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for NoteEditActivityEvent.Parents(0);
    result = sub_1BDB157A0((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0AFBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC88);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC90);
  v6 = sub_1BDBFE598();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v12, (uint64_t)v5, &qword_1EF50CC88);
    result = sub_1BDB6AB44((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for NoteEditActivityEvent.Parents(0);
    result = sub_1BDB157A0((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0B148(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC28);
  v2 = sub_1BDBFE598();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v6, (uint64_t)&v13, &qword_1EF50CC30);
    v7 = v13;
    result = sub_1BDB6ACB4(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BD942258(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0B274(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC18);
  v2 = (_QWORD *)sub_1BDBFE598();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1BDB6ACB4((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0B37C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD18);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE90);
  v6 = sub_1BDBFE598();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v12, (uint64_t)v5, &qword_1ED23AD18);
    result = sub_1BDB6AD34((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1BDBFC948();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0B510(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD20);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE98);
  v6 = sub_1BDBFE598();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v12, (uint64_t)v5, &qword_1ED23AD20);
    result = sub_1BDB6AD34((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1BDBFC948();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_1BDB15740(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0B6B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC08);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC10);
  v6 = sub_1BDBFE598();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v12, (uint64_t)v5, &qword_1EF50CC08);
    result = sub_1BDB6AB9C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1BDBFCB40();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_OWORD *)(v7[7] + 16 * v16) = *(_OWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDB0B844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC00);
  v6 = sub_1BDBFE598();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1BDB157E4(v12, (uint64_t)v5, &qword_1EF50CBF8);
    v14 = *v5;
    result = sub_1BDB6ADCC(*v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v7[6] + 8 * result) = v14;
    v18 = v7[7];
    v19 = sub_1BDBFC948();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v9, v19);
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static ArgumentDecoder.optionPrefix.getter()
{
  return 11565;
}

uint64_t static ArgumentDecoder.escapeCharacter.getter()
{
  return 92;
}

uint64_t static ArgumentDecoder.separatorCharacter.getter()
{
  return 44;
}

uint64_t sub_1BDB0BA00()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ArgumentDecoder();
  v0 = swift_allocObject();
  *(_BYTE *)(v0 + 16) = 0;
  result = swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 0;
  off_1EF50C9E0 = (_UNKNOWN *)v0;
  return result;
}

uint64_t ArgumentDecoder.__allocating_init(usesDefaultValueIfMissing:)(char a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = 0;
  swift_beginAccess();
  *(_BYTE *)(v2 + 16) = a1;
  return v2;
}

uint64_t static ArgumentDecoder.shared.getter()
{
  if (qword_1EF50B178 != -1)
    swift_once();
  return swift_retain();
}

uint64_t ArgumentDecoder.usesDefaultValueIfMissing.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ArgumentDecoder.usesDefaultValueIfMissing.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ArgumentDecoder.usesDefaultValueIfMissing.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ArgumentDecoder.init(usesDefaultValueIfMissing:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = 0;
  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

uint64_t ArgumentDecoder.decode<A>(_:from:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(uint64_t, unint64_t);
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46[3];
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;

  v6 = v5;
  v42 = a4;
  v44 = a3;
  v45 = a1;
  v43 = a5;
  v8 = MEMORY[0x1E0DEE9D8];
  v9 = sub_1BDB0A7E8(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v51 = v8;
  *((_QWORD *)&v51 + 1) = v9;
  v52 = 0;
  v53 = 0;
  LOBYTE(v54) = 0;
  v10 = *(_QWORD *)(a2 + 16);
  v60 = v5;
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v41 = (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))a2;
    v14 = (uint64_t *)(a2 + 40);
    v40 = v9;
    do
    {
      v15 = *v14;
      v46[0] = *(v14 - 1);
      v46[1] = v15;
      swift_bridgeObjectRetain();
      sub_1BDB0C0F8((uint64_t)&v51, v46, (uint64_t)&v47);
      swift_bridgeObjectRelease();
      sub_1BDB0C998(v8, v9, v11, v12, v13);
      v9 = *((_QWORD *)&v47 + 1);
      v8 = v47;
      v11 = v48;
      v12 = v49;
      v13 = v50;
      v51 = v47;
      v52 = v48;
      v53 = v49;
      LOBYTE(v54) = v50;
      v14 += 2;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v60;
  }
  else
  {
    v11 = 0;
    v12 = 0;
    v13 = 0;
  }
  v55 = v8;
  v56 = v9;
  v57 = v11;
  v58 = v12;
  v59 = v13;
  v16 = (_QWORD *)sub_1BDB0C030();
  v18 = v17;
  sub_1BDB0C998(v8, v9, v11, v12, v13);
  v19 = (uint64_t)v45;
  v20 = swift_conformsToProtocol2();
  if (v20)
    v21 = v20;
  else
    v21 = 0;
  if (!v20)
    v19 = 0;
  if (v19)
  {
    if (v16[2])
    {
      v22 = v16[4];
      v23 = v16[5];
      v41 = *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v21 + 24);
      v24 = sub_1BDBFE0AC();
      v45 = &v40;
      v25 = *(_QWORD *)(v24 - 8);
      MEMORY[0x1E0C80A78](v24);
      v27 = (char *)&v40 - v26;
      swift_bridgeObjectRetain();
      v41(v22, v23, v19, v21);
      v28 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v19) != 1)
      {
        v49 = v19;
        v50 = v21;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
        (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 32))(boxed_opaque_existential_1, v27, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BDAE14D4(&v47, (uint64_t)&v51);
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
      v6 = v60;
    }
    swift_beginAccess();
    if ((*(_BYTE *)(v6 + 16) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = *(void (**)(uint64_t, unint64_t))(v21 + 16);
      v53 = v19;
      v54 = v21;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v51);
      v29(v19, v21);
LABEL_19:
      v35 = v53;
      v36 = __swift_project_boxed_opaque_existential_1(&v51, v53);
      v49 = v35;
      v37 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v37, v36, v35);
      castOrFatalError<A>(_:as:)((uint64_t)&v47, v44, v44, v43);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v47);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v51);
    }
    v31 = type metadata accessor for ArgumentDecoder.Decoder();
    v32 = swift_allocObject();
    v39 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v32 + 40) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v32 + 48) = sub_1BDB0A908(v39);
    *(_QWORD *)(v32 + 16) = v16;
    *(_QWORD *)(v32 + 24) = v18;
    *(_BYTE *)(v32 + 32) = 0;
  }
  else
  {
    swift_beginAccess();
    v30 = *(_BYTE *)(v6 + 16);
    v31 = type metadata accessor for ArgumentDecoder.Decoder();
    v32 = swift_allocObject();
    v33 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v32 + 40) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v32 + 48) = sub_1BDB0A908(v33);
    *(_QWORD *)(v32 + 16) = v16;
    *(_QWORD *)(v32 + 24) = v18;
    *(_BYTE *)(v32 + 32) = v30;
  }
  v53 = v31;
  v54 = sub_1BDB0CA24();
  *(_QWORD *)&v51 = v32;
  return sub_1BDBFDCF8();
}

uint64_t ArgumentDecoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ArgumentDecoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BDB0C030()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v6[2];
  uint64_t v7;
  char v8;

  sub_1BDB15788(v0, (uint64_t)v6);
  if (!v8)
  {
    v3 = v6[0];
LABEL_6:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v3;
  }
  if (v8 != 1)
  {
    v3 = v7;
    goto LABEL_6;
  }
  v1 = v6[0];
  v2 = v6[1];
  v3 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BDB6C254(1702195828, 0xE400000000000000, v1, v2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BDB0C0F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  void (*v65)(_QWORD *);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v6 = *(_QWORD **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v8 = *a2;
  v7 = a2[1];
  if (*(_BYTE *)(a1 + 32))
  {
    v10 = *(_QWORD *)(a1 + 16);
    v9 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(a1 + 32) == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_1BDBFD86C() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v70 = v9;
        sub_1BDB6C254(v8, v7, (uint64_t)v6, v5, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *(_QWORD *)a3 = v6;
        *(_QWORD *)(a3 + 8) = v5;
        *(_QWORD *)(a3 + 16) = v10;
        *(_QWORD *)(a3 + 24) = v9;
        *(_BYTE *)(a3 + 32) = 2;
        return result;
      }
      v68 = v10;
      v11 = swift_isUniquelyReferenced_nonNull_native();
      sub_1BDB6C254(1702195828, 0xE400000000000000, (uint64_t)v6, v5, v11);
      v12 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v13 = sub_1BDBFD7A0();
      v14 = sub_1BDB436A4(v13, v8, v7);
      v16 = v15;
      v18 = v17;
      v20 = v19;
      swift_bridgeObjectRelease();
      v70 = v14;
      v71 = v16;
      v72 = v18;
      v73 = v20;
      sub_1BDB0842C();
      swift_bridgeObjectRetain();
      v21 = sub_1BDBFD8A8();
      v23 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v21, v22);
      if (!v3)
      {
        sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v23, v24);
        swift_bridgeObjectRelease();
        sub_1BDBFD740();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = sub_1BDBFD740();
        v27 = v26;
        result = swift_bridgeObjectRelease();
        *(_QWORD *)a3 = v25;
        *(_QWORD *)(a3 + 8) = v27;
        *(_QWORD *)(a3 + 16) = v68;
        *(_QWORD *)(a3 + 24) = v12;
        *(_BYTE *)(a3 + 32) = 1;
        return result;
      }
      goto LABEL_22;
    }
    v74 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain();
    v69 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_1BDBFD86C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v45 = sub_1BDBFD7A0();
      v46 = sub_1BDB436A4(v45, v8, v7);
      v48 = v47;
      v50 = v49;
      v52 = v51;
      swift_bridgeObjectRelease();
      v70 = v46;
      v71 = v48;
      v72 = v50;
      v73 = v52;
      sub_1BDB0842C();
      swift_bridgeObjectRetain();
      v53 = sub_1BDBFD8A8();
      v55 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v53, v54);
      if (!v3)
      {
        sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v55, v56);
        swift_bridgeObjectRelease();
        sub_1BDBFD740();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v57 = sub_1BDBFD740();
        v59 = v58;
        result = swift_bridgeObjectRelease();
        v60 = v74;
        *(_QWORD *)a3 = v57;
        *(_QWORD *)(a3 + 8) = v59;
        *(_QWORD *)(a3 + 16) = v10;
        *(_QWORD *)(a3 + 24) = v60;
        *(_BYTE *)(a3 + 32) = 1;
        return result;
      }
      goto LABEL_22;
    }
    swift_bridgeObjectRetain();
    v65 = sub_1BDB0CA68(&v70, (uint64_t)v6, v5);
    if (*(_QWORD *)(v66 + 8))
    {
      sub_1BDBFD7DC();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
    }
    ((void (*)(unint64_t *, _QWORD))v65)(&v70, 0);
    result = swift_bridgeObjectRelease();
    v67 = v74;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v5;
    *(_QWORD *)(a3 + 16) = v69;
    *(_QWORD *)(a3 + 24) = v67;
    v44 = 2;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_1BDBFD86C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = sub_1BDBFD7A0();
    v30 = sub_1BDB436A4(v29, v8, v7);
    v32 = v31;
    v34 = v33;
    v36 = v35;
    swift_bridgeObjectRelease();
    v70 = v30;
    v71 = v32;
    v72 = v34;
    v73 = v36;
    sub_1BDB0842C();
    swift_bridgeObjectRetain();
    v37 = sub_1BDBFD8A8();
    v39 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v37, v38);
    if (v3)
    {
LABEL_22:
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
      sub_1BDBFE4E4();
      sub_1BDBFD7DC();
      result = sub_1BDBFE52C();
      __break(1u);
      return result;
    }
    sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v39, v40);
    swift_bridgeObjectRelease();
    sub_1BDBFD740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = sub_1BDBFD740();
    v43 = v42;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a3 = v41;
    *(_QWORD *)(a3 + 8) = v43;
    *(_QWORD *)(a3 + 16) = v6;
    *(_QWORD *)(a3 + 24) = v5;
    v44 = 1;
LABEL_21:
    *(_BYTE *)(a3 + 32) = v44;
    return result;
  }
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1BDBCBCC4(0, v6[2] + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v63 = v6[2];
  v62 = v6[3];
  if (v63 >= v62 >> 1)
  {
    result = (uint64_t)sub_1BDBCBCC4((_QWORD *)(v62 > 1), v63 + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v6[2] = v63 + 1;
  v64 = &v6[2 * v63];
  v64[4] = v8;
  v64[5] = v7;
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_1BDB0C998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 1 >= 2)
  {
    if (a5)
      return result;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ArgumentDecoder.Decoder()
{
  return objc_opt_self();
}

unint64_t sub_1BDB0CA24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50C9E8;
  if (!qword_1EF50C9E8)
  {
    v1 = type metadata accessor for ArgumentDecoder.Decoder();
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ArgumentDecoder.Decoder, v1);
    atomic_store(result, (unint64_t *)&qword_1EF50C9E8);
  }
  return result;
}

void (*sub_1BDB0CA68(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1BDB149D8(v6, a2, a3);
  return sub_1BDB0CAD4;
}

void sub_1BDB0CAD4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t ArgumentDecoder.Decoder.usesDefaultValueIfMissing.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ArgumentDecoder.Decoder.usesDefaultValueIfMissing.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ArgumentDecoder.Decoder.usesDefaultValueIfMissing.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ArgumentDecoder.Decoder.codingPath.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t ArgumentDecoder.Decoder.codingPath.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ArgumentDecoder.Decoder.codingPath.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ArgumentDecoder.Decoder.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArgumentDecoder.Decoder.container<A>(keyedBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  v6 = sub_1BDBFE3C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = *(_QWORD *)(v3 + 40);
  if (!*(_QWORD *)(v10 + 16))
  {
    v11 = swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  swift_beginAccess();
  if (*(_BYTE *)(v3 + 32) == 1)
  {
    v11 = sub_1BDB0A7E8(MEMORY[0x1E0DEE9D8]);
    v10 = *(_QWORD *)(v3 + 40);
LABEL_5:
    v18[1] = v3;
    v18[2] = v10;
    v18[3] = v11;
    v13 = type metadata accessor for ArgumentDecoder.KeyedContainer(0, a2, a3, v12);
    swift_retain();
    swift_bridgeObjectRetain();
    MEMORY[0x1C3B7B388](&unk_1BDC19858, v13);
    return sub_1BDBFE694();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v16, v9, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC458], v15);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for ArgumentDecoder.KeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ArgumentDecoder.KeyedContainer);
}

_QWORD *ArgumentDecoder.Decoder.unkeyedContainer()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v4 = sub_1BDB0CF3C(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = sub_1BDB14D6C(v1, v3, v4, v6);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  a1[3] = &type metadata for ArgumentDecoder.UnkeyedContainer;
  a1[4] = sub_1BDB15038();
  result = (_QWORD *)swift_allocObject();
  *a1 = result;
  result[2] = v7;
  result[3] = v9;
  result[4] = v11;
  result[5] = v13;
  return result;
}

uint64_t sub_1BDB0CF3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v14[4];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BDADED64(a1 + 32, (uint64_t)v14);
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    sub_1BDBFEB2C();
    swift_bridgeObjectRetain();
    v2 = sub_1BDBFD8A8();
    v4 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v2, v3);
    sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v4, v5);
    swift_bridgeObjectRelease();
    sub_1BDBFD740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = sub_1BDBFD740();
    v8 = v7;
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v1 + 24);
    if (*(_QWORD *)(v9 + 16) && (v10 = sub_1BDAC358C(v6, v8), (v11 & 1) != 0))
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v10);
      swift_bridgeObjectRetain();
    }
    else
    {
      v12 = 0;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  }
  else if (*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
  {
    v14[0] = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
    sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
    v12 = sub_1BDBFD674();
    swift_bridgeObjectRelease();
  }
  else
  {
    return 0;
  }
  return v12;
}

_QWORD *ArgumentDecoder.Decoder.singleValueContainer()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v4 = sub_1BDB0CF3C(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  a1[3] = &type metadata for ArgumentDecoder.SingleValueContainer;
  a1[4] = sub_1BDB150B0();
  result = (_QWORD *)swift_allocObject();
  *a1 = result;
  result[2] = v1;
  result[3] = v3;
  result[4] = v4;
  result[5] = v6;
  return result;
}

uint64_t ArgumentDecoder.Decoder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ArgumentDecoder.Decoder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BDB0D394()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB0D3D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB0D3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ArgumentDecoder.Decoder.container<A>(keyedBy:)(a1, a2, a3);
}

_QWORD *sub_1BDB0D400@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v5 = sub_1BDB0CF3C(v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = sub_1BDB14D6C(v3, v4, v5, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  a1[3] = &type metadata for ArgumentDecoder.UnkeyedContainer;
  a1[4] = sub_1BDB15038();
  result = (_QWORD *)swift_allocObject();
  *a1 = result;
  result[2] = v8;
  result[3] = v10;
  result[4] = v12;
  result[5] = v14;
  return result;
}

_QWORD *sub_1BDB0D4DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v5 = sub_1BDB0CF3C(v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  a1[3] = &type metadata for ArgumentDecoder.SingleValueContainer;
  a1[4] = sub_1BDB150B0();
  result = (_QWORD *)swift_allocObject();
  *a1 = result;
  result[2] = v3;
  result[3] = v4;
  result[4] = v5;
  result[5] = v7;
  return result;
}

uint64_t sub_1BDB0D594()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBE0);
  sub_1BDAE0C94(&qword_1EF50CBE8, &qword_1EF50CBE0, MEMORY[0x1E0DE9ED0]);
  v0 = sub_1BDBFD8E4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BDB0D634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  swift_bridgeObjectRetain();
  sub_1BDBFEB2C();
  swift_bridgeObjectRetain();
  v5 = sub_1BDBFD8A8();
  v7 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v5, v6);
  sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v7, v8);
  swift_bridgeObjectRelease();
  v9 = sub_1BDBFD740();
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a4 + 16))
  {
    sub_1BDAC358C(v9, v11);
    v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1BDB0D8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t);
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57[3];
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  v60 = a7;
  v51 = a6;
  v48[1] = a3;
  v48[2] = a4;
  v49 = a8;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v48 - v16;
  v18 = *(void (**)(char *))(v12 + 16);
  v53 = v19;
  v18((char *)v48 - v16);
  v20 = (_QWORD *)(a2 + 40);
  swift_beginAccess();
  v21 = *(_QWORD **)(a2 + 40);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 40) = v21;
  v52 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_1BDBCC21C(0, v21[2] + 1, 1, v21);
    *v20 = v21;
  }
  v50 = a9;
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
    *v20 = sub_1BDBCC21C((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
  v25 = v53;
  ((void (*)(char *, char *, uint64_t))v18)(v15, v17, v53);
  sub_1BDB14CF4(v24, (uint64_t)v15, (uint64_t *)(a2 + 40), v25, v60);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v25);
  swift_endAccess();
  v26 = swift_conformsToProtocol2();
  if (v26)
    v27 = v26;
  else
    v27 = 0;
  if (v26)
    v28 = a1;
  else
    v28 = 0;
  if (!v28)
    goto LABEL_17;
  v29 = swift_bridgeObjectRetain();
  v30 = sub_1BDB0CF3C(v29);
  v32 = v31;
  swift_bridgeObjectRelease();
  if (v32)
  {
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v27 + 24);
    v34 = sub_1BDBFE0AC();
    v48[0] = v48;
    v35 = *(_QWORD *)(v34 - 8);
    MEMORY[0x1E0C80A78](v34);
    v37 = (char *)v48 - v36;
    v33(v30, v32, v28, v27);
    v38 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v37, 1, v28) != 1)
    {
      v55 = v28;
      v56 = v27;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v54);
      (*(void (**)(uint64_t *, char *, uint64_t))(v38 + 32))(boxed_opaque_existential_1, v37, v28);
      sub_1BDAE14D4(&v54, (uint64_t)v57);
      v44 = v58;
      v45 = __swift_project_boxed_opaque_existential_1(v57, v58);
      v55 = v44;
      v46 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v54);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v46, v45, v44);
      castOrFatalError<A>(_:as:)((uint64_t)&v54, v51, v51, v49);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v54);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v57);
      return sub_1BDB0DCAC(a2);
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  }
  swift_beginAccess();
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    v39 = *(void (**)(uint64_t, unint64_t))(v27 + 16);
    v58 = v28;
    v59 = v27;
    __swift_allocate_boxed_opaque_existential_1(v57);
    v39(v28, v27);
    v40 = v58;
    v41 = __swift_project_boxed_opaque_existential_1(v57, v58);
    v55 = v40;
    v42 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v54);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v42, v41, v40);
    castOrFatalError<A>(_:as:)((uint64_t)&v54, v51, v51, v49);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v54);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v57);
  }
  else
  {
LABEL_17:
    v58 = type metadata accessor for ArgumentDecoder.Decoder();
    v59 = sub_1BDB0CA24();
    v57[0] = a2;
    swift_retain();
    sub_1BDBFDCF8();
  }
  return sub_1BDB0DCAC(a2);
}

uint64_t sub_1BDB0DCAC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)(a1 + 40);
  swift_beginAccess();
  v3 = *(_QWORD **)(a1 + 40);
  if (!v3[2])
  {
    __break(1u);
LABEL_6:
    result = (uint64_t)sub_1BDBBCF18(v3);
    v3 = (_QWORD *)result;
    v5 = *(_QWORD *)(result + 16);
    if (v5)
      goto LABEL_4;
    goto LABEL_7;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_6;
  v5 = v3[2];
  if (v5)
  {
LABEL_4:
    v6 = v5 - 1;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v3[5 * v5 - 1]);
    v3[2] = v6;
    *v2 = v3;
    return swift_endAccess();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1BDB0DD50()
{
  sub_1BDBFE52C();
  __break(1u);
}

void sub_1BDB0DDA8()
{
  sub_1BDBFE52C();
  __break(1u);
}

void sub_1BDB0DE00()
{
  sub_1BDBFE52C();
  __break(1u);
}

void sub_1BDB0DE58()
{
  sub_1BDBFE52C();
  __break(1u);
}

uint64_t sub_1BDB0DEB0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB0DEB8()
{
  return sub_1BDB0D594();
}

uint64_t sub_1BDB0DEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BDB0D634(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1BDB0DED0()
{
  return 0;
}

uint64_t sub_1BDB0DED8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v6;

  sub_1BDB0D8A0(MEMORY[0x1E0DEAFA0], *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEAFA0], *(_QWORD *)(a2 + 24), (uint64_t)&v6, MEMORY[0x1E0DEAFC0]);
  if (!v3)
    v4 = v6;
  return v4 & 1;
}

uint64_t sub_1BDB0DF34(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = sub_1BDB0D8A0(MEMORY[0x1E0DEA968], *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEA968], *(_QWORD *)(a2 + 24), (uint64_t)&v5, MEMORY[0x1E0DEA9A0]);
  if (!v3)
    return v5;
  return result;
}

double sub_1BDB0DF8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  double result;
  double v5;

  sub_1BDB0D8A0(MEMORY[0x1E0DEB070], *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEB070], *(_QWORD *)(a2 + 24), (uint64_t)&v5, MEMORY[0x1E0DEB0A8]);
  if (!v3)
    return v5;
  return result;
}

float sub_1BDB0DFE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  float result;
  float v5;

  sub_1BDB0D8A0(MEMORY[0x1E0DEB188], *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEB188], *(_QWORD *)(a2 + 24), (uint64_t)&v5, MEMORY[0x1E0DEB1C0]);
  if (!v3)
    return v5;
  return result;
}

uint64_t sub_1BDB0E03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E2A8(a1, a2, a3, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB448]);
}

uint64_t sub_1BDB0E060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E14C(a1, a2, a3, MEMORY[0x1E0DEDA70], MEMORY[0x1E0DEDA90]);
}

uint64_t sub_1BDB0E084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E1C0(a1, a2, a3, MEMORY[0x1E0DEDB58], MEMORY[0x1E0DEDB78]);
}

uint64_t sub_1BDB0E0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E234(a1, a2, a3, MEMORY[0x1E0DEDBC8], MEMORY[0x1E0DEDBF8]);
}

uint64_t sub_1BDB0E0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E2A8(a1, a2, a3, MEMORY[0x1E0DEDC60], MEMORY[0x1E0DEDC90]);
}

uint64_t sub_1BDB0E0F0()
{
  return sub_1BDBFE940();
}

uint64_t sub_1BDB0E104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E2A8(a1, a2, a3, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBC8]);
}

uint64_t sub_1BDB0E128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E14C(a1, a2, a3, MEMORY[0x1E0DEDE70], MEMORY[0x1E0DEDE98]);
}

uint64_t sub_1BDB0E14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  unsigned __int8 v8;

  result = sub_1BDB0D8A0(a4, *v5, v5[1], v5[2], *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), (uint64_t)&v8, a5);
  if (!v6)
    return v8;
  return result;
}

uint64_t sub_1BDB0E19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E1C0(a1, a2, a3, MEMORY[0x1E0DEE068], MEMORY[0x1E0DEE098]);
}

uint64_t sub_1BDB0E1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  unsigned __int16 v8;

  result = sub_1BDB0D8A0(a4, *v5, v5[1], v5[2], *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), (uint64_t)&v8, a5);
  if (!v6)
    return v8;
  return result;
}

uint64_t sub_1BDB0E210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E234(a1, a2, a3, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEE128]);
}

uint64_t sub_1BDB0E234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  unsigned int v8;

  result = sub_1BDB0D8A0(a4, *v5, v5[1], v5[2], *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), (uint64_t)&v8, a5);
  if (!v6)
    return v8;
  return result;
}

uint64_t sub_1BDB0E284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E2A8(a1, a2, a3, MEMORY[0x1E0DEE190], MEMORY[0x1E0DEE1C0]);
}

uint64_t sub_1BDB0E2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  result = sub_1BDB0D8A0(a4, *v5, v5[1], v5[2], *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), (uint64_t)&v8, a5);
  if (!v6)
    return v8;
  return result;
}

uint64_t sub_1BDB0E2F8()
{
  return sub_1BDBFE94C();
}

uint64_t sub_1BDB0E30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t *v5;

  return sub_1BDB0D8A0(a1, *v5, v5[1], v5[2], *(_QWORD *)(a4 + 16), a2, *(_QWORD *)(a4 + 24), a5, a3);
}

uint64_t sub_1BDB0E344()
{
  return sub_1BDBFE8EC();
}

uint64_t sub_1BDB0E358()
{
  return sub_1BDBFE8E0();
}

uint64_t sub_1BDB0E36C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE8F8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB0E38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E51C(a1, a2, a3, MEMORY[0x1E0DED7E8]);
}

uint64_t sub_1BDB0E3A8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE904();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB0E3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E494(a1, a2, a3, MEMORY[0x1E0DED808]);
}

uint64_t sub_1BDB0E3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E4D8(a1, a2, a3, MEMORY[0x1E0DED810]);
}

uint64_t sub_1BDB0E400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E51C(a1, a2, a3, MEMORY[0x1E0DED818]);
}

uint64_t sub_1BDB0E41C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE928();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB0E43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E588(a1, a2, a3, MEMORY[0x1E0DED830]);
}

uint64_t sub_1BDB0E458()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE910();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB0E478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E494(a1, a2, a3, MEMORY[0x1E0DED828]);
}

uint64_t sub_1BDB0E494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_1BDB0E4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E4D8(a1, a2, a3, MEMORY[0x1E0DED838]);
}

uint64_t sub_1BDB0E4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_1BDB0E500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E51C(a1, a2, a3, MEMORY[0x1E0DED840]);
}

uint64_t sub_1BDB0E51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4;

  v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_1BDB0E54C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE934();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB0E56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB0E588(a1, a2, a3, MEMORY[0x1E0DED850]);
}

uint64_t sub_1BDB0E588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = a4();
  if (v4)
    return v6;
  return result;
}

uint64_t sub_1BDB0E5AC()
{
  return sub_1BDBFE91C();
}

void sub_1BDB0E5D4()
{
  sub_1BDB0DD50();
}

void sub_1BDB0E5E4()
{
  sub_1BDB0DDA8();
}

void sub_1BDB0E5F0()
{
  sub_1BDB0DE00();
}

void sub_1BDB0E5FC()
{
  sub_1BDB0DE58();
}

uint64_t sub_1BDB0E608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_1BDBFE3C4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 24);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v0 + 16);
    if (v5 < *(_QWORD *)(v6 + 16))
    {
      v7 = v6 + 16 * v5;
      v9 = *(_QWORD *)(v7 + 32);
      v8 = *(_QWORD *)(v7 + 40);
      v10 = v9 & 0xFFFFFFFFFFFFLL;
      if ((v8 & 0x2000000000000000) != 0)
        v11 = HIBYTE(v8) & 0xF;
      else
        v11 = v10;
      v12 = v11 == 0;
      *(_QWORD *)(v0 + 24) = v5 + 1;
      return v12;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v13 = sub_1BDBFE3D0();
  swift_allocError();
  v15 = v14;
  v16 = (char *)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v15 = MEMORY[0x1E0DEE9B8] + 8;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v16, v4, v1);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DEC460], v13);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v18 = *(_QWORD *)(v0 + 24);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v0 + 24) = v20;
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB0E7AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB1044C(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEA968];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0E99C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      LOBYTE(v3) = sub_1BDB10834(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3 & 1;
      }
LABEL_6:
      v0[3] = v14;
      return v3 & 1;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEAFA0];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0EB84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v11 = *(_QWORD *)(v9 + 32);
      v10 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BDB10C10(v12, v13, v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v15 = v7 + 1;
      if (!v2)
      {
        v0[3] = v15;
        return result;
      }
      goto LABEL_6;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v16 = sub_1BDBFE3D0();
  swift_allocError();
  v18 = v17;
  v19 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v18 = MEMORY[0x1E0DEB070];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v19, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DEC460], v16);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v15 = v20 + 1;
  if (!v21)
  {
LABEL_6:
    v0[3] = v15;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB0ED6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v11 = *(_QWORD *)(v9 + 32);
      v10 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BDB10FF4(v12, v13, v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v15 = v7 + 1;
      if (!v2)
      {
        v0[3] = v15;
        return result;
      }
      goto LABEL_6;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v16 = sub_1BDBFE3D0();
  swift_allocError();
  v18 = v17;
  v19 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v18 = MEMORY[0x1E0DEB188];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v19, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DEC460], v16);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v15 = v20 + 1;
  if (!v21)
  {
LABEL_6:
    v0[3] = v15;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB0EF54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB113D8(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEB418];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0F13C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB117B4(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEDA70];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0F324()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB11C04(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEDB58];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0F50C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB12058(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEDBC8];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0F6F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB124AC(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEDC60];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0F8DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB12888(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEBB98];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0FAC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB12CD8(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEDE70];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0FCAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB1312C(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEE068];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB0FE94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB13580(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEE0F8];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB1007C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = v1;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0[2];
    if (v7 < *(_QWORD *)(v8 + 16))
    {
      v9 = v8 + 16 * v7;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = *v0;
      v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v3 = sub_1BDB139D4(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v15 = sub_1BDBFE3D0();
  swift_allocError();
  v17 = v16;
  v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v17 = MEMORY[0x1E0DEE190];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC460], v15);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20 = v0[3];
  v21 = __OFADD__(v20, 1);
  v14 = v20 + 1;
  if (!v21)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1BDB10264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v7 = sub_1BDBFE3C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3[3];
  if ((v11 & 0x8000000000000000) == 0)
  {
    v12 = v3[2];
    if (v11 < *(_QWORD *)(v12 + 16))
    {
      v13 = v12 + 16 * v11;
      v14 = *(_QWORD *)(v13 + 32);
      v15 = *(_QWORD *)(v13 + 40);
      v16 = *v3;
      v17 = v3[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BDB13E28(a1, v16, v17, v14, v15, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v19 = v11 + 1;
LABEL_5:
      v3[3] = v19;
      return result;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BDBFE3AC();
  v20 = sub_1BDBFE3D0();
  swift_allocError();
  v22 = v21;
  v23 = (char *)v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
  *v22 = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v10, v7);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC460], v20);
  swift_willThrow();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v24 = v3[3];
  v25 = __OFADD__(v24, 1);
  v19 = v24 + 1;
  if (!v25)
    goto LABEL_5;
  __break(1u);
  return result;
}

uint64_t sub_1BDB1044C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t *v35;
  char *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v9 = sub_1BDBFE3C4();
  v47 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEA968];
  result = swift_conformsToProtocol2();
  if (result)
  {
    v13 = result;
    if (a4)
    {
      v37[1] = a2;
      v38 = v9;
      v39 = v4;
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      v15 = sub_1BDBFE0AC();
      v16 = *(_QWORD *)(v15 - 8);
      MEMORY[0x1E0C80A78](v15);
      v18 = (char *)v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      v19 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_bridgeObjectRetain();
        v20 = v40;
        sub_1BDBFE3AC();
        v21 = sub_1BDBFE3D0();
        swift_allocError();
        v23 = v22;
        v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v23 = v11;
        v25 = v47;
        v9 = v38;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v24, v20, v38);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_9:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *v26, v21);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v9);
        return v21;
      }
      v42 = v11;
      v43 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
      sub_1BDAE14D4(&v41, (uint64_t)v44);
      v32 = v45;
      v33 = __swift_project_boxed_opaque_existential_1(v44, v45);
      v42 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v21 = sub_1BDADB4C8((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v20 = v40;
        sub_1BDBFE3AC();
        v21 = sub_1BDBFE3D0();
        swift_allocError();
        v23 = v35;
        v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v23 = v11;
        v25 = v47;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v36, v20, v9);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_9;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v45 = v11;
      v46 = v13;
      __swift_allocate_boxed_opaque_existential_1(v44);
      v27(v11, v13);
      v28 = v45;
      v29 = __swift_project_boxed_opaque_existential_1(v44, v45);
      v42 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v21 = sub_1BDADB4C8((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    }
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB10834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t *v29;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t *v33;
  char *v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v9 = sub_1BDBFE3C4();
  v45 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEAFA0];
  result = swift_conformsToProtocol2();
  if (result)
  {
    v13 = result;
    if (a4)
    {
      v35[1] = a2;
      v36 = v9;
      v37 = v4;
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      v15 = sub_1BDBFE0AC();
      v16 = *(_QWORD *)(v15 - 8);
      MEMORY[0x1E0C80A78](v15);
      v18 = (char *)v35 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      v19 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_bridgeObjectRetain();
        v20 = v38;
        sub_1BDBFE3AC();
        v21 = sub_1BDBFE3D0();
        swift_allocError();
        v23 = v22;
        v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v23 = v11;
        v25 = v45;
        v9 = v36;
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v24, v20, v36);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_9:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *v26, v21);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v9);
        return v21 & 1;
      }
      v40 = v11;
      v41 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v39);
      (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
      sub_1BDAE14D4(&v39, (uint64_t)v42);
      v21 = v43;
      v31 = __swift_project_boxed_opaque_existential_1(v42, v43);
      v40 = v21;
      v32 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v39);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v32, v31, v21);
      LOBYTE(v21) = sub_1BDADB6CC((uint64_t)&v39);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v39);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v20 = v38;
        sub_1BDBFE3AC();
        v21 = sub_1BDBFE3D0();
        swift_allocError();
        v23 = v33;
        v34 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v23 = v11;
        v25 = v45;
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v34, v20, v9);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_9;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v43 = v11;
      v44 = v13;
      __swift_allocate_boxed_opaque_existential_1(v42);
      v27(v11, v13);
      v21 = v43;
      v28 = __swift_project_boxed_opaque_existential_1(v42, v43);
      v40 = v21;
      v29 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v39);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v29, v28, v21);
      LOBYTE(v21) = sub_1BDADB6CC((uint64_t)&v39);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v39);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
    }
    return v21 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB10C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;
  uint64_t v47;

  v9 = sub_1BDBFE3C4();
  v41 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEB070];
  result = swift_conformsToProtocol2();
  if (result)
  {
    v13 = result;
    if (a4)
    {
      v37 = a2;
      v38 = v9;
      v39 = v4;
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      v15 = sub_1BDBFE0AC();
      v16 = *(_QWORD *)(v15 - 8);
      MEMORY[0x1E0C80A78](v15);
      v18 = (char *)&v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      v19 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) != 1)
      {
        v43 = v11;
        v44 = v13;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
        (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
        sub_1BDAE14D4(&v42, (uint64_t)v45);
        v32 = v46;
        v33 = __swift_project_boxed_opaque_existential_1(v45, v46);
        v43 = v32;
        v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
        sub_1BDADB8C0((uint64_t)&v42);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      swift_bridgeObjectRetain();
      v20 = v40;
      sub_1BDBFE3AC();
      v21 = sub_1BDBFE3D0();
      swift_allocError();
      v23 = v22;
      v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
      *v23 = v11;
      v25 = v41;
      v9 = v38;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v24, v20, v38);
      v26 = (unsigned int *)MEMORY[0x1E0DEC450];
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) != 0)
      {
        v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
        v46 = v11;
        v47 = v13;
        __swift_allocate_boxed_opaque_existential_1(v45);
        v27(v11, v13);
        v28 = v46;
        v29 = __swift_project_boxed_opaque_existential_1(v45, v46);
        v43 = v28;
        v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
        sub_1BDADB8C0((uint64_t)&v42);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v20 = v40;
      sub_1BDBFE3AC();
      v21 = sub_1BDBFE3D0();
      swift_allocError();
      v23 = v35;
      v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
      *v23 = v11;
      v25 = v41;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v36, v20, v9);
      v26 = (unsigned int *)MEMORY[0x1E0DEC460];
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *v26, v21);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v20, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDB10FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;
  uint64_t v47;

  v9 = sub_1BDBFE3C4();
  v41 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEB188];
  result = swift_conformsToProtocol2();
  if (result)
  {
    v13 = result;
    if (a4)
    {
      v37 = a2;
      v38 = v9;
      v39 = v4;
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      v15 = sub_1BDBFE0AC();
      v16 = *(_QWORD *)(v15 - 8);
      MEMORY[0x1E0C80A78](v15);
      v18 = (char *)&v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      v19 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) != 1)
      {
        v43 = v11;
        v44 = v13;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
        (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
        sub_1BDAE14D4(&v42, (uint64_t)v45);
        v32 = v46;
        v33 = __swift_project_boxed_opaque_existential_1(v45, v46);
        v43 = v32;
        v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
        sub_1BDADBAB0((uint64_t)&v42);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      swift_bridgeObjectRetain();
      v20 = v40;
      sub_1BDBFE3AC();
      v21 = sub_1BDBFE3D0();
      swift_allocError();
      v23 = v22;
      v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
      *v23 = v11;
      v25 = v41;
      v9 = v38;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v24, v20, v38);
      v26 = (unsigned int *)MEMORY[0x1E0DEC450];
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) != 0)
      {
        v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
        v46 = v11;
        v47 = v13;
        __swift_allocate_boxed_opaque_existential_1(v45);
        v27(v11, v13);
        v28 = v46;
        v29 = __swift_project_boxed_opaque_existential_1(v45, v46);
        v43 = v28;
        v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
        sub_1BDADBAB0((uint64_t)&v42);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v20 = v40;
      sub_1BDBFE3AC();
      v21 = sub_1BDBFE3D0();
      swift_allocError();
      v23 = v35;
      v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
      *v23 = v11;
      v25 = v41;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v36, v20, v9);
      v26 = (unsigned int *)MEMORY[0x1E0DEC460];
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *v26, v21);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v20, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDB113D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t *v35;
  char *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v9 = sub_1BDBFE3C4();
  v47 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEB418];
  result = swift_conformsToProtocol2();
  if (result)
  {
    v13 = result;
    if (a4)
    {
      v37[1] = a2;
      v38 = v9;
      v39 = v4;
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      v15 = sub_1BDBFE0AC();
      v16 = *(_QWORD *)(v15 - 8);
      MEMORY[0x1E0C80A78](v15);
      v18 = (char *)v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      v19 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_bridgeObjectRetain();
        v20 = v40;
        sub_1BDBFE3AC();
        v21 = sub_1BDBFE3D0();
        swift_allocError();
        v23 = v22;
        v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v23 = v11;
        v25 = v47;
        v9 = v38;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v24, v20, v38);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_9:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *v26, v21);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v9);
        return v21;
      }
      v42 = v11;
      v43 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
      sub_1BDAE14D4(&v41, (uint64_t)v44);
      v32 = v45;
      v33 = __swift_project_boxed_opaque_existential_1(v44, v45);
      v42 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v21 = sub_1BDADBCA0((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v20 = v40;
        sub_1BDBFE3AC();
        v21 = sub_1BDBFE3D0();
        swift_allocError();
        v23 = v35;
        v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v23 = v11;
        v25 = v47;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v36, v20, v9);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_9;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v45 = v11;
      v46 = v13;
      __swift_allocate_boxed_opaque_existential_1(v44);
      v27(v11, v13);
      v28 = v45;
      v29 = __swift_project_boxed_opaque_existential_1(v44, v45);
      v42 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v21 = sub_1BDADBCA0((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    }
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB117B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v8 = sub_1BDBFE3C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEDA70];
  v12 = swift_conformsToProtocol2();
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v11;
  else
    v14 = 0;
  if (v14)
  {
    if (a4)
    {
      v40 = v9;
      v41 = v8;
      v42 = v4;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      v16 = sub_1BDBFE0AC();
      v17 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      v20 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v23;
        v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = MEMORY[0x1E0DEDA70];
        v9 = v40;
        v8 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v21, v41);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      v45 = v14;
      v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1BDAE14D4(&v44, (uint64_t)v47);
      v32 = v48;
      v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v22 = sub_1BDADBE90((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v35 = v11;
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v36;
        v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_15;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v48 = v14;
      v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      v28 = v48;
      v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v22 = sub_1BDADBE90((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDB11C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v8 = sub_1BDBFE3C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEDB58];
  v12 = swift_conformsToProtocol2();
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v11;
  else
    v14 = 0;
  if (v14)
  {
    if (a4)
    {
      v40 = v9;
      v41 = v8;
      v42 = v4;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      v16 = sub_1BDBFE0AC();
      v17 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      v20 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v23;
        v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = MEMORY[0x1E0DEDB58];
        v9 = v40;
        v8 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v21, v41);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      v45 = v14;
      v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1BDAE14D4(&v44, (uint64_t)v47);
      v32 = v48;
      v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v22 = sub_1BDADC080((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v35 = v11;
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v36;
        v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_15;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v48 = v14;
      v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      v28 = v48;
      v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v22 = sub_1BDADC080((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDB12058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v8 = sub_1BDBFE3C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEDBC8];
  v12 = swift_conformsToProtocol2();
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v11;
  else
    v14 = 0;
  if (v14)
  {
    if (a4)
    {
      v40 = v9;
      v41 = v8;
      v42 = v4;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      v16 = sub_1BDBFE0AC();
      v17 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      v20 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v23;
        v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = MEMORY[0x1E0DEDBC8];
        v9 = v40;
        v8 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v21, v41);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      v45 = v14;
      v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1BDAE14D4(&v44, (uint64_t)v47);
      v32 = v48;
      v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v22 = sub_1BDADC270((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v35 = v11;
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v36;
        v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_15;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v48 = v14;
      v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      v28 = v48;
      v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v22 = sub_1BDADC270((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDB124AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t *v35;
  char *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v9 = sub_1BDBFE3C4();
  v47 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEDC60];
  result = swift_conformsToProtocol2();
  if (result)
  {
    v13 = result;
    if (a4)
    {
      v37[1] = a2;
      v38 = v9;
      v39 = v4;
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      v15 = sub_1BDBFE0AC();
      v16 = *(_QWORD *)(v15 - 8);
      MEMORY[0x1E0C80A78](v15);
      v18 = (char *)v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      v19 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_bridgeObjectRetain();
        v20 = v40;
        sub_1BDBFE3AC();
        v21 = sub_1BDBFE3D0();
        swift_allocError();
        v23 = v22;
        v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v23 = v11;
        v25 = v47;
        v9 = v38;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v24, v20, v38);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_9:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *v26, v21);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v9);
        return v21;
      }
      v42 = v11;
      v43 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
      sub_1BDAE14D4(&v41, (uint64_t)v44);
      v32 = v45;
      v33 = __swift_project_boxed_opaque_existential_1(v44, v45);
      v42 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v21 = sub_1BDADC460((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v20 = v40;
        sub_1BDBFE3AC();
        v21 = sub_1BDBFE3D0();
        swift_allocError();
        v23 = v35;
        v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v23 = v11;
        v25 = v47;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v36, v20, v9);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_9;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v45 = v11;
      v46 = v13;
      __swift_allocate_boxed_opaque_existential_1(v44);
      v27(v11, v13);
      v28 = v45;
      v29 = __swift_project_boxed_opaque_existential_1(v44, v45);
      v42 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v21 = sub_1BDADC460((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    }
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB12888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v8 = sub_1BDBFE3C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEBB98];
  v12 = swift_conformsToProtocol2();
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v11;
  else
    v14 = 0;
  if (v14)
  {
    if (a4)
    {
      v40 = v9;
      v41 = v8;
      v42 = v4;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      v16 = sub_1BDBFE0AC();
      v17 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      v20 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v23;
        v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = MEMORY[0x1E0DEBB98];
        v9 = v40;
        v8 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v21, v41);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      v45 = v14;
      v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1BDAE14D4(&v44, (uint64_t)v47);
      v32 = v48;
      v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v22 = sub_1BDADC650((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v35 = v11;
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v36;
        v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_15;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v48 = v14;
      v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      v28 = v48;
      v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v22 = sub_1BDADC650((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDB12CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v8 = sub_1BDBFE3C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEDE70];
  v12 = swift_conformsToProtocol2();
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v11;
  else
    v14 = 0;
  if (v14)
  {
    if (a4)
    {
      v40 = v9;
      v41 = v8;
      v42 = v4;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      v16 = sub_1BDBFE0AC();
      v17 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      v20 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v23;
        v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = MEMORY[0x1E0DEDE70];
        v9 = v40;
        v8 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v21, v41);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      v45 = v14;
      v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1BDAE14D4(&v44, (uint64_t)v47);
      v32 = v48;
      v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v22 = sub_1BDADC840((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v35 = v11;
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v36;
        v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_15;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v48 = v14;
      v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      v28 = v48;
      v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v22 = sub_1BDADC840((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDB1312C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v8 = sub_1BDBFE3C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEE068];
  v12 = swift_conformsToProtocol2();
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v11;
  else
    v14 = 0;
  if (v14)
  {
    if (a4)
    {
      v40 = v9;
      v41 = v8;
      v42 = v4;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      v16 = sub_1BDBFE0AC();
      v17 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      v20 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v23;
        v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = MEMORY[0x1E0DEE068];
        v9 = v40;
        v8 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v21, v41);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      v45 = v14;
      v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1BDAE14D4(&v44, (uint64_t)v47);
      v32 = v48;
      v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v22 = sub_1BDADCA30((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v35 = v11;
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v36;
        v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_15;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v48 = v14;
      v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      v28 = v48;
      v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v22 = sub_1BDADCA30((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDB13580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v8 = sub_1BDBFE3C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEE0F8];
  v12 = swift_conformsToProtocol2();
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v11;
  else
    v14 = 0;
  if (v14)
  {
    if (a4)
    {
      v40 = v9;
      v41 = v8;
      v42 = v4;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      v16 = sub_1BDBFE0AC();
      v17 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      v20 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v23;
        v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = MEMORY[0x1E0DEE0F8];
        v9 = v40;
        v8 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v21, v41);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      v45 = v14;
      v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1BDAE14D4(&v44, (uint64_t)v47);
      v32 = v48;
      v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v22 = sub_1BDADCC20((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v35 = v11;
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v36;
        v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_15;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v48 = v14;
      v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      v28 = v48;
      v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v22 = sub_1BDADCC20((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDB139D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  char *v25;
  unsigned int *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v8 = sub_1BDBFE3C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0DEE190];
  v12 = swift_conformsToProtocol2();
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v11;
  else
    v14 = 0;
  if (v14)
  {
    if (a4)
    {
      v40 = v9;
      v41 = v8;
      v42 = v4;
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      v16 = sub_1BDBFE0AC();
      v17 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      v20 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v23;
        v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = MEMORY[0x1E0DEE190];
        v9 = v40;
        v8 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v21, v41);
        v26 = (unsigned int *)MEMORY[0x1E0DEC450];
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      v45 = v14;
      v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1BDAE14D4(&v44, (uint64_t)v47);
      v32 = v48;
      v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v32;
      v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v34, v33, v32);
      v22 = sub_1BDADCE10((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = v50;
        sub_1BDBFE3AC();
        v35 = v11;
        v22 = sub_1BDBFE3D0();
        swift_allocError();
        v24 = v36;
        v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
        *v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        v26 = (unsigned int *)MEMORY[0x1E0DEC460];
        goto LABEL_15;
      }
      v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      v48 = v14;
      v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      v28 = v48;
      v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      v45 = v28;
      v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
      v22 = sub_1BDADCE10((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t sub_1BDB13E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  char *v28;
  unsigned int *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v47 = a7;
  v48 = a6;
  v46 = a3;
  v12 = sub_1BDBFE3C4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v56 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_conformsToProtocol2();
  if (v15)
    v16 = v15;
  else
    v16 = 0;
  if (v15)
    v17 = a1;
  else
    v17 = 0;
  if (v17)
  {
    if (a5)
    {
      v42 = v13;
      v43 = v12;
      v44 = v7;
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24);
      v19 = sub_1BDBFE0AC();
      v45 = &v41;
      v20 = *(_QWORD *)(v19 - 8);
      MEMORY[0x1E0C80A78](v19);
      v22 = (char *)&v41 - v21;
      swift_bridgeObjectRetain();
      v18(a4, a5, v17, v16);
      v23 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v17) != 1)
      {
        v50 = v17;
        v51 = v16;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v49);
        (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 32))(boxed_opaque_existential_1, v22, v17);
        sub_1BDAE14D4(&v49, (uint64_t)&v52);
        v36 = v54;
        v37 = __swift_project_boxed_opaque_existential_1(&v52, v54);
        v50 = v36;
        v38 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v49);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v38, v37, v36);
        castOrFatalError<A>(_:as:)((uint64_t)&v49, v48, v48, v47);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v49);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v52);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      swift_bridgeObjectRetain();
      v24 = v56;
      sub_1BDBFE3AC();
      v25 = sub_1BDBFE3D0();
      swift_allocError();
      v27 = v26;
      v28 = (char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
      *v27 = a1;
      v13 = v42;
      v12 = v43;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v28, v24, v43);
      v29 = (unsigned int *)MEMORY[0x1E0DEC450];
    }
    else
    {
      swift_beginAccess();
      if ((*(_BYTE *)(a2 + 32) & 1) != 0)
      {
        v30 = *(void (**)(uint64_t, uint64_t))(v16 + 16);
        v54 = v17;
        v55 = v16;
        __swift_allocate_boxed_opaque_existential_1(&v52);
        v30(v17, v16);
        v31 = v54;
        v32 = __swift_project_boxed_opaque_existential_1(&v52, v54);
        v50 = v31;
        v33 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v49);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v33, v32, v31);
        castOrFatalError<A>(_:as:)((uint64_t)&v49, v48, v48, v47);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v49);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v52);
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v24 = v56;
      sub_1BDBFE3AC();
      v25 = sub_1BDBFE3D0();
      swift_allocError();
      v27 = v39;
      v40 = (char *)v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0) + 48);
      *v27 = a1;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v40, v24, v12);
      v29 = (unsigned int *)MEMORY[0x1E0DEC460];
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *v29, v25);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v24, v12);
  }
  else
  {
    v52 = 0;
    v53 = 0xE000000000000000;
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    v52 = 0x2065707954;
    v53 = 0xE500000000000000;
    sub_1BDBFEB5C();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    result = sub_1BDBFE52C();
    __break(1u);
  }
  return result;
}

void sub_1BDB142B4()
{
  sub_1BDBFE52C();
  __break(1u);
}

uint64_t sub_1BDB1430C()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

BOOL sub_1BDB1431C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24) >= *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t sub_1BDB14330()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1BDB14338()
{
  return sub_1BDB0E608() & 1;
}

uint64_t sub_1BDB14350()
{
  return sub_1BDB0E99C() & 1;
}

uint64_t sub_1BDB14368()
{
  return sub_1BDB0E7AC();
}

uint64_t sub_1BDB1437C()
{
  return sub_1BDB0EB84();
}

uint64_t sub_1BDB14390()
{
  return sub_1BDB0ED6C();
}

uint64_t sub_1BDB143A4()
{
  return sub_1BDB0EF54();
}

uint64_t sub_1BDB143B8()
{
  return sub_1BDB0F13C();
}

uint64_t sub_1BDB143CC()
{
  return sub_1BDB0F324();
}

uint64_t sub_1BDB143E0()
{
  return sub_1BDB0F50C();
}

uint64_t sub_1BDB143F4()
{
  return sub_1BDB0F6F4();
}

uint64_t sub_1BDB14408()
{
  return sub_1BDBFE808();
}

uint64_t sub_1BDB1441C()
{
  return sub_1BDB0F8DC();
}

uint64_t sub_1BDB14430()
{
  return sub_1BDB0FAC4();
}

uint64_t sub_1BDB14444()
{
  return sub_1BDB0FCAC();
}

uint64_t sub_1BDB14458()
{
  return sub_1BDB0FE94();
}

uint64_t sub_1BDB1446C()
{
  return sub_1BDB1007C();
}

uint64_t sub_1BDB14480()
{
  return sub_1BDBFE814();
}

uint64_t sub_1BDB14494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BDB10264(a1, a2, a3);
}

uint64_t sub_1BDB144A8()
{
  return sub_1BDBFE7B4();
}

uint64_t sub_1BDB144BC()
{
  return sub_1BDBFE7A8();
}

uint64_t sub_1BDB144D0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE7C0();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB144F0(uint64_t a1, uint64_t a2)
{
  return sub_1BDB14680(a1, a2, MEMORY[0x1E0DED2E0]);
}

uint64_t sub_1BDB1450C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE7CC();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB1452C(uint64_t a1, uint64_t a2)
{
  return sub_1BDB145F8(a1, a2, MEMORY[0x1E0DED300]);
}

uint64_t sub_1BDB14548(uint64_t a1, uint64_t a2)
{
  return sub_1BDB1463C(a1, a2, MEMORY[0x1E0DED308]);
}

uint64_t sub_1BDB14564(uint64_t a1, uint64_t a2)
{
  return sub_1BDB14680(a1, a2, MEMORY[0x1E0DED310]);
}

uint64_t sub_1BDB14580()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE7F0();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB145A0(uint64_t a1, uint64_t a2)
{
  return sub_1BDB146EC(a1, a2, MEMORY[0x1E0DED328]);
}

uint64_t sub_1BDB145BC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE7D8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB145DC(uint64_t a1, uint64_t a2)
{
  return sub_1BDB145F8(a1, a2, MEMORY[0x1E0DED320]);
}

uint64_t sub_1BDB145F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_1BDB14620(uint64_t a1, uint64_t a2)
{
  return sub_1BDB1463C(a1, a2, MEMORY[0x1E0DED330]);
}

uint64_t sub_1BDB1463C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_1BDB14664(uint64_t a1, uint64_t a2)
{
  return sub_1BDB14680(a1, a2, MEMORY[0x1E0DED338]);
}

uint64_t sub_1BDB14680(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_1BDB146B0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1BDBFE7FC();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1BDB146D0(uint64_t a1, uint64_t a2)
{
  return sub_1BDB146EC(a1, a2, MEMORY[0x1E0DED348]);
}

uint64_t sub_1BDB146EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (v3)
    return v5;
  return result;
}

uint64_t sub_1BDB14710()
{
  return sub_1BDBFE7E4();
}

void sub_1BDB14738()
{
  sub_1BDB142B4();
}

void sub_1BDB14744()
{
  sub_1BDBFE52C();
  __break(1u);
}

void sub_1BDB1479C()
{
  sub_1BDBFE52C();
  __break(1u);
}

BOOL sub_1BDB147F4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24) == 0;
}

uint64_t sub_1BDB14804()
{
  uint64_t *v0;

  return sub_1BDB10834(*v0, v0[1], v0[2], v0[3]) & 1;
}

uint64_t sub_1BDB14824()
{
  uint64_t *v0;

  return sub_1BDB1044C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB14840()
{
  uint64_t *v0;

  return sub_1BDB10C10(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB1485C()
{
  uint64_t *v0;

  return sub_1BDB10FF4(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB14878()
{
  uint64_t *v0;

  return sub_1BDB113D8(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB14894()
{
  uint64_t *v0;

  return sub_1BDB117B4(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB148B0()
{
  uint64_t *v0;

  return sub_1BDB11C04(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB148CC()
{
  uint64_t *v0;

  return sub_1BDB12058(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB148E8()
{
  uint64_t *v0;

  return sub_1BDB124AC(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB14904()
{
  return sub_1BDBFE898();
}

uint64_t sub_1BDB14918()
{
  uint64_t *v0;

  return sub_1BDB12888(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB14934()
{
  uint64_t *v0;

  return sub_1BDB12CD8(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB14950()
{
  uint64_t *v0;

  return sub_1BDB1312C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB1496C()
{
  uint64_t *v0;

  return sub_1BDB13580(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB14988()
{
  uint64_t *v0;

  return sub_1BDB139D4(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BDB149A4()
{
  return sub_1BDBFE8A4();
}

uint64_t sub_1BDB149B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1BDB13E28(a1, *v3, v3[1], v3[2], v3[3], a2, a3);
}

void (*sub_1BDB149D8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1BDB14C28(v6);
  v6[10] = sub_1BDB14AB8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1BDB14A68;
}

void sub_1BDB14A68(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1BDB14AB8(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x38uLL);
  *a1 = v10;
  v10[3] = a3;
  v10[4] = v5;
  v10[2] = a2;
  v11 = *v5;
  v13 = sub_1BDAC358C(a2, a3);
  *((_BYTE *)v10 + 48) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[5] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(*(_QWORD *)(*v5 + 56) + 16 * v13);
        v20 = *v19;
        v21 = v19[1];
LABEL_12:
        *v10 = v20;
        v10[1] = v21;
        return sub_1BDB14BEC;
      }
LABEL_11:
      v20 = 0;
      v21 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1BDBCD430();
      goto LABEL_7;
    }
    sub_1BDBCEE38(v16, a4 & 1);
    v22 = sub_1BDAC358C(a2, a3);
    if ((v17 & 1) == (v23 & 1))
    {
      v13 = v22;
      v10[5] = v22;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_1BDBFE994();
  __break(1u);
  return result;
}

void sub_1BDB14BEC(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1BDB14C54(*a1, *((_BYTE *)*a1 + 48), (uint64_t *)(*a1)[4], (*a1)[5], (*a1)[2], (*a1)[3]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1BDB14C28(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1BDB14C48;
}

uint64_t sub_1BDB14C48(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1BDB14C54(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;

  v8 = a1[1];
  if (v8)
  {
    v10 = *a1;
    v11 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      v12 = (uint64_t *)(v11[7] + 16 * a4);
      *v12 = v10;
      v12[1] = v8;
    }
    else
    {
      sub_1BDB6C86C(a4, a5, a6, v10, v8, v11);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1BDB6B750(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB14CF4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BDAE14D4(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1BDB14D6C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  if (!a4)
  {
    swift_retain();
LABEL_14:
    swift_release();
    return a1;
  }
  v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_retain();
    goto LABEL_13;
  }
  v6 = (void *)objc_opt_self();
  swift_retain();
  v26 = v6;
  v7 = objc_msgSend(v6, sel_ic_attachmentCharacterString);
  sub_1BDBFD6F8();

  v8 = sub_1BDAC3548();
  v9 = MEMORY[0x1E0DEA968];
  v23 = v8;
  v24 = v8;
  v21 = MEMORY[0x1E0DEA968];
  v22 = v8;
  sub_1BDBFE13C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = sub_1BDBFE124();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v25 = a1;
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1BDB224F4(0, v11, 0);
  v12 = v10 + 40;
  do
  {
    swift_bridgeObjectRetain();
    v13 = objc_msgSend(v26, sel_ic_attachmentCharacterString, v21, v22, v23, v24);
    sub_1BDBFD6F8();

    v23 = v8;
    v24 = v8;
    v21 = v9;
    v22 = v8;
    v14 = sub_1BDBFE13C();
    v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v27 + 16);
    v17 = *(_QWORD *)(v27 + 24);
    if (v18 >= v17 >> 1)
      sub_1BDB224F4(v17 > 1, v18 + 1, 1);
    v12 += 16;
    *(_QWORD *)(v27 + 16) = v18 + 1;
    v19 = v27 + 16 * v18;
    *(_QWORD *)(v19 + 32) = v14;
    *(_QWORD *)(v19 + 40) = v16;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  a1 = v25;
  swift_release();
  return a1;
}

unint64_t sub_1BDB15038()
{
  unint64_t result;

  result = qword_1EF50C9F0;
  if (!qword_1EF50C9F0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC196E8, &type metadata for ArgumentDecoder.UnkeyedContainer);
    atomic_store(result, (unint64_t *)&qword_1EF50C9F0);
  }
  return result;
}

uint64_t sub_1BDB1507C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BDB150B0()
{
  unint64_t result;

  result = qword_1EF50C9F8;
  if (!qword_1EF50C9F8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19630, &type metadata for ArgumentDecoder.SingleValueContainer);
    atomic_store(result, (unint64_t *)&qword_1EF50C9F8);
  }
  return result;
}

uint64_t sub_1BDB150F4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for ArgumentDecoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for ArgumentDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ArgumentDecoder.__allocating_init(usesDefaultValueIfMissing:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for ArgumentDecoder.Decoder()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for ArgumentDecoder.Parameters()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11NotesShared15ArgumentDecoderC10ParametersVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ArgumentDecoder.Parameters(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ArgumentDecoder.Parameters(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.Parameters()
{
  return &type metadata for ArgumentDecoder.Parameters;
}

uint64_t destroy for ArgumentDecoder.SingleValueContainer()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ArgumentDecoder.SingleValueContainer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ArgumentDecoder.SingleValueContainer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArgumentDecoder.SingleValueContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.SingleValueContainer()
{
  return &type metadata for ArgumentDecoder.SingleValueContainer;
}

_QWORD *initializeWithCopy for ArgumentDecoder.UnkeyedContainer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ArgumentDecoder.UnkeyedContainer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for ArgumentDecoder.UnkeyedContainer(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.UnkeyedContainer()
{
  return &type metadata for ArgumentDecoder.UnkeyedContainer;
}

uint64_t _s11NotesShared15ArgumentDecoderC16UnkeyedContainerVwxx_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BDB15530(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BDB1557C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1BDB15604(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20ObjectIDNotificationVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s20ObjectIDNotificationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BDB156D8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1BDB156E0()
{
  swift_bridgeObjectRetain();
  return sub_1BDBFEB38();
}

uint64_t sub_1BDB15740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AEA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB15788(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1BDB157A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB157E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDB15828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 1 >= 2)
  {
    if (a5)
      return result;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ArgumentDecoder.ParametersParsingStates(uint64_t a1)
{
  return sub_1BDB0C998(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for ArgumentDecoder.ParametersParsingStates(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BDB15828(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ArgumentDecoder.ParametersParsingStates(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BDB15828(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BDB0C998(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ArgumentDecoder.ParametersParsingStates(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BDB0C998(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDecoder.ParametersParsingStates(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDecoder.ParametersParsingStates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BDB15A64(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1BDB15A6C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.ParametersParsingStates()
{
  return &type metadata for ArgumentDecoder.ParametersParsingStates;
}

uint64_t sub_1BDB15A88()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

void sub_1BDB15AE4(char a1)
{
  sub_1BDBFEA0C();
  __asm { BR              X10 }
}

uint64_t sub_1BDB15B38()
{
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

void sub_1BDB15BB4(char a1)
{
  sub_1BDBFEA0C();
  __asm { BR              X10 }
}

uint64_t sub_1BDB15C04()
{
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

void sub_1BDB15CA8(uint64_t a1, char a2)
{
  sub_1BDBFEA0C();
  __asm { BR              X10 }
}

uint64_t sub_1BDB15CF8()
{
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

void sub_1BDB15D74(uint64_t a1, char a2)
{
  sub_1BDBFEA0C();
  __asm { BR              X10 }
}

uint64_t sub_1BDB15DC0()
{
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB15E64()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB15EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50CCB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50CCB0);
  if (qword_1ED23A5D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23A330);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1BDB15F54@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RealtimeCollaborationSelectionDocument.Selection.init(from:)(a1, a2);
}

uint64_t RealtimeCollaborationSelectionDocument.Selection.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CCC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB18638();
  sub_1BDBFEAB4();
  if (!v2)
  {
    v19 = 0;
    sub_1BDB1867C();
    sub_1BDBFE670();
    if ((_BYTE)v18)
    {
      v19 = 2;
      if (v18 == 1)
      {
        sub_1BDB186C0();
        sub_1BDBFE670();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v10 = v18;
        v11 = swift_allocObject();
        *(_QWORD *)(v11 + 16) = v10;
        *a2 = v11 | 0x4000000000000000;
      }
      else
      {
        sub_1BDB186C0();
        sub_1BDBFE670();
        v14 = v18;
        v19 = 3;
        sub_1BDB18728();
        sub_1BDBFE670();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v15 = v18;
        v16 = swift_allocObject();
        *(_QWORD *)(v16 + 16) = v14;
        *(_QWORD *)(v16 + 24) = v15;
        *a2 = v16 | 0x8000000000000000;
      }
    }
    else
    {
      v19 = 3;
      sub_1BDB1879C();
      sub_1BDBFE670();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v12 = v18;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v12;
      *a2 = v13;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

void sub_1BDB162D4(_QWORD *a1)
{
  RealtimeCollaborationSelectionDocument.Selection.encode(to:)(a1);
}

void RealtimeCollaborationSelectionDocument.Selection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1BDBFE3E8();
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CCF8);
  MEMORY[0x1E0C80A78](v4);
  v5 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB18638();
  sub_1BDBFEACC();
  __asm { BR              X10 }
}

void sub_1BDB163F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void **)(v0 + 16);
  *(_WORD *)(v2 - 169) = 0;
  sub_1BDB187E0();
  v4 = v3;
  v5 = *(_QWORD *)(v2 - 184);
  v6 = *(_QWORD *)(v2 - 200);
  sub_1BDBFE718();
  if (!v6)
  {
    *(_BYTE *)(v2 - 168) = 1;
    sub_1BDBFE6F4();
    *(_QWORD *)(v2 - 168) = v4;
    *(_BYTE *)(v2 - 169) = 3;
    sub_1BDB188AC();
    sub_1BDBFE718();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v5);

}

uint64_t sub_1BDB16800@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RealtimeCollaborationSelectionDocument.TableSelection.init(from:)(a1, a2);
}

uint64_t RealtimeCollaborationSelectionDocument.TableSelection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[4];
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  char v16;

  v11[3] = a2;
  v12 = sub_1BDBFCB40();
  v3 = *(_QWORD *)(v12 - 8);
  v4 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CD30);
  MEMORY[0x1E0C80A78](v7);
  v8 = a1[3];
  v13 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1BDB188F0();
  v9 = v14;
  sub_1BDBFEAB4();
  if (!v9)
  {
    v14 = v6;
    v11[2] = v3;
    v16 = 0;
    sub_1BDB18934();
    sub_1BDBFE670();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
}

void sub_1BDB169D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CD60);
  *(_BYTE *)(v4 - 65) = 1;
  sub_1BDB18AD4(&qword_1EF50CD68, &qword_1EF50CD48, MEMORY[0x1E0CB09E0], MEMORY[0x1E0DEB3D8]);
  sub_1BDBFE670();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  if (!v2)
  {
    v5 = *(_QWORD *)(v4 - 88);
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    JUMPOUT(0x1BDB16984);
  }
  JUMPOUT(0x1BDB16918);
}

void sub_1BDB16A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CD60);
  *(_BYTE *)(v4 - 65) = 2;
  sub_1BDB18AD4(&qword_1EF50CD68, &qword_1EF50CD48, MEMORY[0x1E0CB09E0], MEMORY[0x1E0DEB3D8]);
  sub_1BDBFE670();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  if (!v2)
  {
    v5 = *(_QWORD *)(v4 - 88);
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    JUMPOUT(0x1BDB16984);
  }
  JUMPOUT(0x1BDB16918);
}

void sub_1BDB16B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CD60);
  *(_BYTE *)(v4 - 65) = 1;
  sub_1BDB18AD4(&qword_1EF50CD68, &qword_1EF50CD48, MEMORY[0x1E0CB09E0], MEMORY[0x1E0DEB3D8]);
  sub_1BDBFE670();
  if (!v2)
  {
    v5 = *(_QWORD *)(v4 - 88);
    *(_BYTE *)(v4 - 65) = 2;
    sub_1BDBFE670();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
    v6 = *(_QWORD *)(v4 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    JUMPOUT(0x1BDB16984);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  JUMPOUT(0x1BDB16918);
}

void sub_1BDB16D6C(_QWORD *a1)
{
  RealtimeCollaborationSelectionDocument.TableSelection.encode(to:)(a1);
}

void RealtimeCollaborationSelectionDocument.TableSelection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[22];

  v2 = v1;
  v12[20] = *MEMORY[0x1E0C80C00];
  v4 = sub_1BDBFE3E8();
  v12[0] = *(_QWORD *)(v4 - 8);
  v12[1] = v4;
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BDBFCB40();
  v6 = *(_QWORD *)(v5 - 8);
  v12[2] = v5;
  v12[3] = v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v12[4] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v12[5] = (char *)v12 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CD70);
  v12[7] = *(_QWORD *)(v10 - 8);
  v12[8] = v10;
  MEMORY[0x1E0C80A78](v10);
  v11 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB188F0();
  sub_1BDBFEACC();
  __asm { BR              X10 }
}

uint64_t sub_1BDB16EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v0 + 16);
  *(_WORD *)(v2 - 177) = 0;
  sub_1BDB18A0C();
  v4 = *(_QWORD *)(v2 - 192);
  v5 = *(_QWORD *)(v2 - 208);
  sub_1BDBFE718();
  if (!v5)
  {
    *(_QWORD *)(v2 - 176) = v3;
    *(_BYTE *)(v2 - 177) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CD60);
    sub_1BDB18AD4(&qword_1EF50CD88, &qword_1ED23A730, MEMORY[0x1E0CB09B8], MEMORY[0x1E0DEB3B8]);
    sub_1BDBFE718();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v1, v4);
}

uint64_t sub_1BDB17450(char *a1, char *a2)
{
  return sub_1BDB52B2C(*a1, *a2);
}

uint64_t sub_1BDB1745C()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB174B4()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB174E0()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB17534@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB19300();
  *a1 = result;
  return result;
}

void sub_1BDB17568(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1BDC19FE8[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1BDB17584()
{
  char *v0;

  return qword_1BDC19FE8[*v0];
}

uint64_t sub_1BDB1759C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB19300();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB175C8()
{
  sub_1BDB18638();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB175F0()
{
  sub_1BDB18638();
  return sub_1BDBFEB50();
}

uint64_t sub_1BDB17618(char *a1, char *a2)
{
  return sub_1BDB52AC8(*a1, *a2);
}

uint64_t sub_1BDB17624()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB1767C()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB176A8()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB176FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB193CC();
  *a1 = result;
  return result;
}

void sub_1BDB17728(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1BDC1A008[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1BDB17744()
{
  sub_1BDB19344();
  return sub_1BDBFD998();
}

uint64_t sub_1BDB177A0()
{
  sub_1BDB19344();
  return sub_1BDBFD950();
}

uint64_t sub_1BDB177EC(char *a1, char *a2)
{
  return sub_1BDB52BF4(*a1, *a2);
}

uint64_t sub_1BDB177F8()
{
  return sub_1BDB15A88();
}

uint64_t sub_1BDB17800()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB1782C()
{
  return sub_1BDB15E64();
}

uint64_t sub_1BDB17834@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB192B8();
  *a1 = result;
  return result;
}

void sub_1BDB17860(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1BDC1A020[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1BDB1787C()
{
  char *v0;

  return qword_1BDC1A020[*v0];
}

uint64_t sub_1BDB17894@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB192B8();
  *a1 = result;
  return result;
}

void sub_1BDB178B8(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1BDB178C4()
{
  sub_1BDB188F0();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB178EC()
{
  sub_1BDB188F0();
  return sub_1BDBFEB50();
}

uint64_t sub_1BDB17914(char *a1, char *a2)
{
  return sub_1BDB52B90(*a1, *a2);
}

uint64_t sub_1BDB17920()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB17978()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB179A4()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB179F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB19300();
  *a1 = result;
  return result;
}

void sub_1BDB17A2C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1BDC1A050[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1BDB17A48()
{
  sub_1BDB19388();
  return sub_1BDBFD998();
}

uint64_t sub_1BDB17AA4()
{
  sub_1BDB19388();
  return sub_1BDBFD950();
}

uint64_t sub_1BDB17AF0(uint64_t a1)
{
  return sub_1BDB17D38(a1, (void (*)(_QWORD))MEMORY[0x1E0CAF670], MEMORY[0x1E0CAF668], &qword_1EF520198);
}

uint64_t sub_1BDB17B0C()
{
  if (qword_1EF50B188 != -1)
    swift_once();
  sub_1BDB18A90();
  return sub_1BDBFC7EC();
}

uint64_t sub_1BDB17D1C(uint64_t a1)
{
  return sub_1BDB17D38(a1, (void (*)(_QWORD))MEMORY[0x1E0CAF608], MEMORY[0x1E0CAF5F8], &qword_1EF5201A0);
}

uint64_t sub_1BDB17D38(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t result;

  a2(0);
  swift_allocObject();
  result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_1BDB17D80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  if (qword_1EF50B190 != -1)
    swift_once();
  sub_1BDB18978();
  sub_1BDBFC7C8();
  result = sub_1BDAEB7EC(a1, a2);
  *a3 = v7;
  return result;
}

void _s11NotesShared38RealtimeCollaborationSelectionDocumentC05TableE0O2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1BDBFCB40();
  v3 = MEMORY[0x1E0C80A78](v2);
  v4 = MEMORY[0x1E0C80A78](v3);
  v5 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X11 }
}

uint64_t sub_1BDB180B4@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v1 >> 61)
    return 0;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v1 + 16);
  swift_retain();
  swift_retain();
  LOBYTE(v2) = sub_1BDB2D370(v2, v3);
  swift_release();
  swift_release();
  return v2 & 1;
}

void _s11NotesShared38RealtimeCollaborationSelectionDocumentC0E0O2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BDB18470@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;

  if (v1 >> 62)
  {
    v4 = 0;
  }
  else
  {
    v2 = *(void **)(a1 + 16);
    v3 = *(_QWORD *)(v1 + 16);
    swift_retain();
    swift_retain();
    v4 = objc_msgSend(v2, sel_isEqual_, v3);
    swift_release();
    swift_release();
  }
  return v4 & 1;
}

unint64_t sub_1BDB18638()
{
  unint64_t result;

  result = qword_1EF50CCD0;
  if (!qword_1EF50CCD0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19F94, &_s9SelectionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50CCD0);
  }
  return result;
}

unint64_t sub_1BDB1867C()
{
  unint64_t result;

  result = qword_1EF50CCD8;
  if (!qword_1EF50CCD8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19F6C, &_s9SelectionO5TypesON);
    atomic_store(result, (unint64_t *)&qword_1EF50CCD8);
  }
  return result;
}

unint64_t sub_1BDB186C0()
{
  unint64_t result;

  result = qword_1EF50CCE0;
  if (!qword_1EF50CCE0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICTTMergeableString.Location, &type metadata for ICTTMergeableString.Location);
    atomic_store(result, (unint64_t *)&qword_1EF50CCE0);
  }
  return result;
}

uint64_t sub_1BDB18704()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_1BDB18728()
{
  unint64_t result;

  result = qword_1EF50CCE8;
  if (!qword_1EF50CCE8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RealtimeCollaborationSelectionDocument.TableSelection, &type metadata for RealtimeCollaborationSelectionDocument.TableSelection);
    atomic_store(result, (unint64_t *)&qword_1EF50CCE8);
  }
  return result;
}

uint64_t sub_1BDB1876C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BDB1879C()
{
  unint64_t result;

  result = qword_1EF50CCF0;
  if (!qword_1EF50CCF0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICTTMergeableString.Selection, &type metadata for ICTTMergeableString.Selection);
    atomic_store(result, (unint64_t *)&qword_1EF50CCF0);
  }
  return result;
}

unint64_t sub_1BDB187E0()
{
  unint64_t result;

  result = qword_1EF50CD10;
  if (!qword_1EF50CD10)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19F44, &_s9SelectionO5TypesON);
    atomic_store(result, (unint64_t *)&qword_1EF50CD10);
  }
  return result;
}

unint64_t sub_1BDB18824()
{
  unint64_t result;

  result = qword_1EF50CD18;
  if (!qword_1EF50CD18)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICTTMergeableString.Location, &type metadata for ICTTMergeableString.Location);
    atomic_store(result, (unint64_t *)&qword_1EF50CD18);
  }
  return result;
}

unint64_t sub_1BDB18868()
{
  unint64_t result;

  result = qword_1EF50CD20;
  if (!qword_1EF50CD20)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RealtimeCollaborationSelectionDocument.TableSelection, &type metadata for RealtimeCollaborationSelectionDocument.TableSelection);
    atomic_store(result, (unint64_t *)&qword_1EF50CD20);
  }
  return result;
}

unint64_t sub_1BDB188AC()
{
  unint64_t result;

  result = qword_1EF50CD28;
  if (!qword_1EF50CD28)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICTTMergeableString.Selection, &type metadata for ICTTMergeableString.Selection);
    atomic_store(result, (unint64_t *)&qword_1EF50CD28);
  }
  return result;
}

unint64_t sub_1BDB188F0()
{
  unint64_t result;

  result = qword_1EF50CD38;
  if (!qword_1EF50CD38)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19EF4, &_s14TableSelectionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50CD38);
  }
  return result;
}

unint64_t sub_1BDB18934()
{
  unint64_t result;

  result = qword_1EF50CD40;
  if (!qword_1EF50CD40)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19ECC, &_s14TableSelectionO5TypesON);
    atomic_store(result, (unint64_t *)&qword_1EF50CD40);
  }
  return result;
}

unint64_t sub_1BDB18978()
{
  unint64_t result;

  result = qword_1EF50CD50;
  if (!qword_1EF50CD50)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RealtimeCollaborationSelectionDocument.Selection, &type metadata for RealtimeCollaborationSelectionDocument.Selection);
    atomic_store(result, (unint64_t *)&qword_1EF50CD50);
  }
  return result;
}

uint64_t sub_1BDB189BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDB189E8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BDB18A0C()
{
  unint64_t result;

  result = qword_1EF50CD78;
  if (!qword_1EF50CD78)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19EA4, &_s14TableSelectionO5TypesON);
    atomic_store(result, (unint64_t *)&qword_1EF50CD78);
  }
  return result;
}

uint64_t sub_1BDB18A50(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BDBFCB40();
    result = MEMORY[0x1C3B7B388](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDB18A90()
{
  unint64_t result;

  result = qword_1EF50CD80;
  if (!qword_1EF50CD80)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RealtimeCollaborationSelectionDocument.Selection, &type metadata for RealtimeCollaborationSelectionDocument.Selection);
    atomic_store(result, (unint64_t *)&qword_1EF50CD80);
  }
  return result;
}

uint64_t sub_1BDB18AD4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50CD60);
    v10 = sub_1BDB18A50(a2, a3);
    result = MEMORY[0x1C3B7B388](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDB18B50(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if ((_DWORD)v1 == 3)
    return (*a1 >> 3) + 3;
  else
    return v1;
}

unint64_t *sub_1BDB18B6C(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 3)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 3);
    v3 = 0xC000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for RealtimeCollaborationSelectionDocument.Selection()
{
  return &type metadata for RealtimeCollaborationSelectionDocument.Selection;
}

_QWORD *_s14TableSelectionOwCP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s14TableSelectionOwxx()
{
  return swift_release();
}

_QWORD *_s14TableSelectionOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s14TableSelectionOwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s14TableSelectionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 124);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s14TableSelectionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7B)
  {
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BDB18D04(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 61;
  if (v1 <= 3)
    return v1;
  else
    return (*a1 >> 3) + 4;
}

_QWORD *sub_1BDB18D20(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1BDB18D30(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 4)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 61;
  }
  else
  {
    v2 = 8 * (a2 - 4);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for RealtimeCollaborationSelectionDocument.TableSelection()
{
  return &type metadata for RealtimeCollaborationSelectionDocument.TableSelection;
}

ValueMetadata *_s14TableSelectionO5TypesOMa()
{
  return &_s14TableSelectionO5TypesON;
}

uint64_t _s14TableSelectionO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14TableSelectionO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BDB18E60 + 4 * byte_1BDC19A27[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BDB18E94 + 4 * byte_1BDC19A22[v4]))();
}

uint64_t sub_1BDB18E94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB18E9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB18EA4);
  return result;
}

uint64_t sub_1BDB18EB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB18EB8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BDB18EBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB18EC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14TableSelectionO10CodingKeysOMa()
{
  return &_s14TableSelectionO10CodingKeysON;
}

uint64_t _s9SelectionO5TypesOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDB18F2C + 4 * byte_1BDC19A31[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDB18F60 + 4 * byte_1BDC19A2C[v4]))();
}

uint64_t sub_1BDB18F60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB18F68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB18F70);
  return result;
}

uint64_t sub_1BDB18F7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB18F84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDB18F88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB18F90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9SelectionO5TypesOMa()
{
  return &_s9SelectionO5TypesON;
}

uint64_t _s14TableSelectionO5TypesOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BDB18FF8 + 4 * byte_1BDC19A3B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BDB1902C + 4 * byte_1BDC19A36[v4]))();
}

uint64_t sub_1BDB1902C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB19034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB1903CLL);
  return result;
}

uint64_t sub_1BDB19048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB19050);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BDB19054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB1905C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9SelectionO10CodingKeysOMa()
{
  return &_s9SelectionO10CodingKeysON;
}

unint64_t sub_1BDB1907C()
{
  unint64_t result;

  result = qword_1EF50CD90;
  if (!qword_1EF50CD90)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19C4C, &_s9SelectionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50CD90);
  }
  return result;
}

unint64_t sub_1BDB190C4()
{
  unint64_t result;

  result = qword_1EF50CD98;
  if (!qword_1EF50CD98)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19CEC, &_s9SelectionO5TypesON);
    atomic_store(result, (unint64_t *)&qword_1EF50CD98);
  }
  return result;
}

unint64_t sub_1BDB1910C()
{
  unint64_t result;

  result = qword_1EF50CDA0;
  if (!qword_1EF50CDA0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19DDC, &_s14TableSelectionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50CDA0);
  }
  return result;
}

unint64_t sub_1BDB19154()
{
  unint64_t result;

  result = qword_1EF50CDA8;
  if (!qword_1EF50CDA8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19E7C, &_s14TableSelectionO5TypesON);
    atomic_store(result, (unint64_t *)&qword_1EF50CDA8);
  }
  return result;
}

unint64_t sub_1BDB1919C()
{
  unint64_t result;

  result = qword_1EF50CDB0;
  if (!qword_1EF50CDB0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19D14, &_s14TableSelectionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50CDB0);
  }
  return result;
}

unint64_t sub_1BDB191E4()
{
  unint64_t result;

  result = qword_1EF50CDB8;
  if (!qword_1EF50CDB8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19D3C, &_s14TableSelectionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50CDB8);
  }
  return result;
}

unint64_t sub_1BDB1922C()
{
  unint64_t result;

  result = qword_1EF50CDC0;
  if (!qword_1EF50CDC0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19B84, &_s9SelectionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50CDC0);
  }
  return result;
}

unint64_t sub_1BDB19274()
{
  unint64_t result;

  result = qword_1EF50CDC8;
  if (!qword_1EF50CDC8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19BAC, &_s9SelectionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50CDC8);
  }
  return result;
}

uint64_t sub_1BDB192B8()
{
  unint64_t v0;

  v0 = sub_1BDBFE5D4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1BDB19300()
{
  unint64_t v0;

  v0 = sub_1BDBFE5D4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1BDB19344()
{
  unint64_t result;

  result = qword_1EF50CDD0;
  if (!qword_1EF50CDD0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19C74, &_s9SelectionO5TypesON);
    atomic_store(result, (unint64_t *)&qword_1EF50CDD0);
  }
  return result;
}

unint64_t sub_1BDB19388()
{
  unint64_t result;

  result = qword_1EF50CDD8;
  if (!qword_1EF50CDD8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC19E04, &_s14TableSelectionO5TypesON);
    atomic_store(result, (unint64_t *)&qword_1EF50CDD8);
  }
  return result;
}

uint64_t sub_1BDB193CC()
{
  unint64_t v0;

  v0 = sub_1BDBFE5D4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t castOrFatalError<A>(_:as:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD v9[4];

  v9[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v9[0] = swift_allocObject();
  sub_1BDADED1C(a1, v9[0] + 16);
  castOrFatalError<A>(_:as:)((uint64_t)v9, a2, a3, a4);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  _WORD v23[8];
  _BYTE v24[32];

  v21 = a2;
  v7 = sub_1BDBFEA78();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BDBFE0AC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - v13;
  sub_1BDAE0BA0(a1, (uint64_t)v24);
  v15 = swift_dynamicCast();
  v16 = *(_QWORD *)(a3 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v15)
  {
    v17(v14, 0, 1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v14, a3);
  }
  else
  {
    v17(v14, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1BDAE0BA0(a1, (uint64_t)v24);
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    strcpy((char *)v23, "Cannot cast ");
    HIBYTE(v23[6]) = 0;
    v23[7] = -5120;
    sub_1BDAE0BA0((uint64_t)v24, (uint64_t)v22);
    sub_1BDBFEA3C();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v10, v7);
    sub_1BDBFD7DC();
    v22[3] = swift_getMetatypeMetadata();
    v22[0] = v21;
    sub_1BDBFEA3C();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v19(v10, v7);
    result = sub_1BDBFE52C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDB194A8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BDB19754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50CDE0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50CDE0);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL static TranscriptPostProcessorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptPostProcessorError.hash(into:)()
{
  return sub_1BDBFEA18();
}

uint64_t TranscriptPostProcessorError.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t static TranscriptPostProcessor.paragraphSpacer.getter()
{
  return 2570;
}

uint64_t sub_1BDB19870(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD **a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v5 = sub_1BDBFD8B4();
  v6 = MEMORY[0x1C3B78D30](v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = *a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_1BDBCBCC4(0, v9[2] + 1, 1, v9);
    *a4 = v9;
  }
  v12 = v9[2];
  v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    v9 = sub_1BDBCBCC4((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
    *a4 = v9;
  }
  v9[2] = v12 + 1;
  v13 = &v9[2 * v12];
  v13[4] = v6;
  v13[5] = v8;
  return 1;
}

uint64_t sub_1BDB1993C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;

  v3 = v2;
  v40 = a2;
  v5 = sub_1BDBFC444();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v10 = *a1;
  if ((v9 & 0x2000000000000000) != 0)
    v11 = HIBYTE(v9) & 0xF;
  else
    v11 = v10 & 0xFFFFFFFFFFFFLL;
  v12 = 7;
  if (((v9 >> 60) & ((v10 & 0x800000000000000) == 0)) != 0)
    v12 = 11;
  v13 = v12 | (v11 << 16);
  swift_bridgeObjectRetain();
  v49 = v13;
  if (!v11)
    goto LABEL_14;
  v13 = v49;
  sub_1BDBFD7AC();
  sub_1BDBFD890();
  v39 = v8;
  v14 = sub_1BDBFD638();
  v3 = v2;
  v8 = v39;
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
    goto LABEL_14;
  v13 = sub_1BDBFD7AC();
  if (v13 < 0x4000)
    goto LABEL_14;
  v38 = 4 * v11;
  while (1)
  {
    swift_bridgeObjectRetain();
    sub_1BDBFD7AC();
    sub_1BDBFD890();
    swift_bridgeObjectRelease();
    v15 = sub_1BDBFD638();
    result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      break;
    v13 = sub_1BDBFD7AC();
    if (v13 < 0x4000)
      goto LABEL_14;
  }
  if (v38 < v13 >> 14)
  {
    __break(1u);
  }
  else
  {
LABEL_14:
    v38 = v10;
    v39 = v3;
    v41 = v10;
    v42 = v9;
    sub_1BDBFC408();
    sub_1BDAC3548();
    v17 = sub_1BDBFE130();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v47 = v17;
    v48 = v19;
    swift_bridgeObjectRetain();
    sub_1BDB19CD4(v17, v19);
    v21 = v20;
    swift_bridgeObjectRelease();
    if (!v21 || (v22 = sub_1BDBFD644(), swift_bridgeObjectRelease(), (v22 & 1) == 0))
      sub_1BDBFD7DC();
    v23 = v47;
    v24 = v48;
    swift_bridgeObjectRetain();
    sub_1BDBAEBC4(1);
    swift_bridgeObjectRelease();
    v25 = sub_1BDBFE0C4();
    v27 = v26;
    swift_bridgeObjectRelease();
    v28 = sub_1BDB436A4(1uLL, v23, v24);
    v30 = v29;
    v32 = v31;
    v34 = v33;
    swift_bridgeObjectRelease();
    v45 = v25;
    v46 = v27;
    v41 = v28;
    v42 = v30;
    v43 = v32;
    v44 = v34;
    sub_1BDB0842C();
    swift_bridgeObjectRetain();
    sub_1BDBFD7C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = v49;
    v42 = v13;
    v43 = v38;
    v44 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CF00);
    sub_1BDAE0C94(&qword_1EF50CF08, &qword_1EF50CF00, MEMORY[0x1E0DECCF8]);
    sub_1BDBFD7C4();
    result = swift_bridgeObjectRelease();
    v35 = v46;
    v36 = v40;
    *v40 = v45;
    v36[1] = v35;
  }
  return result;
}

uint64_t sub_1BDB19CD4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_1BDBFD7AC();
  return sub_1BDBFD890();
}

uint64_t sub_1BDB19D4C(unint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD), void *a3)
{
  return sub_1BDB19FE4(a1, a2, a3);
}

uint64_t TranscriptPostProcessor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TranscriptPostProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BDB19D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CCE180]), sel_initWithUnit_, a4);
  v6 = (void *)sub_1BDBFD6C8();
  objc_msgSend(v5, sel_setString_, v6);

  objc_msgSend(v5, sel_setLanguage_, a3);
  sub_1BDBFDE90();

  return v8;
}

uint64_t sub_1BDB19E80(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v12[2];
  uint64_t v13[2];
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BDB224F4(0, v1, 0);
    v2 = v14;
    v4 = (unint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v12[0] = *(v4 - 1);
      v12[1] = v5;
      sub_1BDB1993C(v12, v13);
      v6 = v13[0];
      v7 = v13[1];
      v14 = v2;
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BDB224F4(v8 > 1, v9 + 1, 1);
        v2 = v14;
      }
      v4 += 2;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      v10 = v2 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDB19F5C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1BDBFD7B8();
    return sub_1BDBFD8B4();
  }
  return result;
}

uint64_t sub_1BDB19FE4(unint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD), void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  char *v58;
  char v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t result;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t *v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  void *v126;
  void *v127;
  id v128;
  id v129;
  void *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t KeyPath;
  char *v137;
  uint64_t v138;
  char *v139;
  void (*v140)(char *, _QWORD *);
  uint64_t *v141;
  unint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  void (*v145)(char *, char *, _QWORD *);
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (**v151)(_QWORD, _QWORD, _QWORD);
  void (**v152)(_QWORD, _QWORD, _QWORD);
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  char v157;
  id v158;
  uint64_t v159;
  void (**v160)(_QWORD, _QWORD, _QWORD);
  uint64_t v161;
  NSObject *v162;
  NSObject *v163;
  os_log_type_t v164;
  uint8_t *v165;
  _QWORD *v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  NSObject *v170;
  os_log_type_t v171;
  uint8_t *v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t *v176;
  uint64_t v177;
  unint64_t v178;
  char *v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  _QWORD *v196;
  uint64_t *v197;
  _QWORD *v198;
  uint64_t v199;
  NSObject *v200;
  os_log_type_t v201;
  uint8_t *v202;
  _BYTE *v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t *v208;
  uint64_t v209;
  unint64_t v210;
  char *v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  unint64_t v219;
  _BYTE *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  NSObject *v224;
  os_log_type_t v225;
  uint8_t *v226;
  const char *v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char isUniquelyReferenced_nonNull_native;
  int64_t v244;
  int64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  int *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD *v259;
  _QWORD *v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  NSObject *v268;
  os_log_type_t v269;
  uint8_t *v270;
  uint64_t v271;
  unint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  unint64_t v278;
  unint64_t v279;
  _QWORD *v280;
  unint64_t v281;
  int64_t v282;
  unint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  unint64_t v289;
  unint64_t v290;
  _QWORD *v291;
  uint64_t v292;
  _BYTE *v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char v300;
  uint64_t v301;
  NSObject *v302;
  os_log_type_t v303;
  uint8_t *v304;
  _BYTE *v305;
  uint64_t v306;
  void (*v307)(uint64_t *, _QWORD);
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  int v311;
  char *v312;
  _QWORD *v313;
  unint64_t v314;
  unint64_t v315;
  uint64_t v316;
  int64_t v317;
  _QWORD *v318;
  uint64_t v319;
  unint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  unint64_t v324;
  unint64_t v325;
  _QWORD *v326;
  char v327;
  uint64_t v328;
  NSObject *v329;
  os_log_type_t v330;
  uint8_t *v331;
  _BYTE *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  char *v345;
  char *v346;
  char *v347;
  void (**v348)(_QWORD, _QWORD, _QWORD);
  uint64_t v349;
  uint64_t v350;
  char *v351;
  char *v352;
  char *v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  _QWORD *v357;
  unint64_t v358;
  _QWORD *v359;
  void (**v360)(_QWORD, _QWORD, _QWORD);
  _QWORD *v361;
  uint64_t *v362;
  _QWORD *v363;
  char *v364;
  uint64_t v365;
  unint64_t v366;
  unint64_t v367;
  unint64_t v368;
  uint64_t v369;
  char *v370;
  _QWORD *v371;
  uint64_t v372;
  int *v373;
  uint64_t v374;
  unint64_t v375;
  uint64_t v376;
  unint64_t v377;
  uint64_t v378;
  unint64_t v379;
  _QWORD *v380;

  v4 = v3;
  v348 = a2;
  v368 = a1;
  v339 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CEB0);
  v6 = MEMORY[0x1E0C80A78](v339);
  v338 = (char *)&v333 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v344 = (uint64_t)&v333 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CEB8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v343 = (char *)&v333 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v333 - v13;
  v371 = (_QWORD *)sub_1BDBFC444();
  v369 = *(v371 - 1);
  MEMORY[0x1E0C80A78](v371);
  v370 = (char *)&v333 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BDBFC78C();
  MEMORY[0x1E0C80A78](v16);
  v362 = (uint64_t *)((char *)&v333 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v361 = (_QWORD *)sub_1BDBFCB40();
  v360 = (void (**)(_QWORD, _QWORD, _QWORD))*(v361 - 1);
  MEMORY[0x1E0C80A78](v361);
  v359 = (char **)((char *)&v333 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v356 = sub_1BDBFC678();
  v354 = *(_QWORD *)(v356 - 8);
  MEMORY[0x1E0C80A78](v356);
  v355 = (char *)&v333 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v357 = (_QWORD *)sub_1BDBFC714();
  v363 = (_QWORD *)*(v357 - 1);
  v20 = MEMORY[0x1E0C80A78](v357);
  v351 = (char *)&v333 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v353 = (char *)&v333 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v352 = (char *)&v333 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v364 = (char *)&v333 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v346 = (char *)&v333 - v29;
  MEMORY[0x1E0C80A78](v28);
  v347 = (char *)&v333 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CEC0);
  v32 = MEMORY[0x1E0C80A78](v31);
  v342 = (uint64_t)&v333 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v365 = (uint64_t)&v333 - v34;
  v373 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  v349 = *((_QWORD *)v373 - 1);
  v35 = MEMORY[0x1E0C80A78](v373);
  v37 = (char *)&v333 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0C80A78](v35);
  v350 = (uint64_t)&v333 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v333 - v41;
  v43 = MEMORY[0x1E0C80A78](v40);
  v340 = (unint64_t)&v333 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v341 = (uint64_t)&v333 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v345 = (char *)&v333 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v51 = (char *)&v333 - v50;
  MEMORY[0x1E0C80A78](v49);
  v53 = (unint64_t)&v333 - v52;
  if (!objc_msgSend(a3, sel_audioTranscriptPostProcessingEnabled))
  {
    if (qword_1EF50B198 != -1)
      swift_once();
    v60 = sub_1BDBFCE34();
    __swift_project_value_buffer(v60, (uint64_t)qword_1EF50CDE0);
    v61 = sub_1BDBFCE1C();
    v62 = sub_1BDBFDECC();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_1BD918000, v61, v62, "Audio transcript post-processing disabled by cloud config.", v63, 2u);
      MEMORY[0x1C3B7B478](v63, -1, -1);
    }

    sub_1BDB1CBCC();
    swift_allocError();
    v59 = 1;
    goto LABEL_13;
  }
  if ((ICInternalSettingsShouldDisableTranscriptPostProcessing() & 1) != 0)
  {
    if (qword_1EF50B198 != -1)
      swift_once();
    v54 = sub_1BDBFCE34();
    __swift_project_value_buffer(v54, (uint64_t)qword_1EF50CDE0);
    v55 = sub_1BDBFCE1C();
    v56 = sub_1BDBFDECC();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      _os_log_impl(&dword_1BD918000, v55, v56, "Audio transcript post-processing disabled by user defaults.", v57, 2u);
      MEMORY[0x1C3B7B478](v57, -1, -1);
    }

    sub_1BDB1CBCC();
    swift_allocError();
    v59 = 2;
    goto LABEL_13;
  }
  v65 = *(_QWORD *)(v368 + 16);
  if (!v65)
  {
    if (qword_1EF50B198 != -1)
      swift_once();
    v101 = sub_1BDBFCE34();
    __swift_project_value_buffer(v101, (uint64_t)qword_1EF50CDE0);
    v102 = sub_1BDBFCE1C();
    v103 = sub_1BDBFDED8();
    if (os_log_type_enabled(v102, v103))
    {
      v104 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v104 = 0;
      _os_log_impl(&dword_1BD918000, v102, v103, "Tried to post-process zero segments.", v104, 2u);
      MEMORY[0x1C3B7B478](v104, -1, -1);
    }

    return MEMORY[0x1E0DEE9D8];
  }
  v336 = v37;
  v333 = v14;
  v334 = v10;
  v335 = v4;
  v366 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
  v358 = v366;
  v66 = v368 + v366;
  v372 = *(_QWORD *)(v349 + 72);
  swift_bridgeObjectRetain();
  v337 = v66;
  v367 = v65;
  v67 = v65;
  do
  {
    sub_1BDB1CC10(v66, v53);
    v68 = *(_QWORD *)(v53 + 8 + v373[8]);
    sub_1BDB1CC54(v53);
    if (v68)
    {
      swift_bridgeObjectRelease();
      sub_1BDB1CBCC();
      swift_allocError();
      v59 = 3;
LABEL_13:
      *v58 = v59;
      swift_willThrow();
      return v53;
    }
    v66 += v372;
    --v67;
  }
  while (v67);
  swift_bridgeObjectRelease();
  if (ICInternalSettingsShouldPostProcessOnlyTranscriptParagraphs())
  {
    if (qword_1EF50B198 != -1)
      swift_once();
    v69 = sub_1BDBFCE34();
    __swift_project_value_buffer(v69, (uint64_t)qword_1EF50CDE0);
    v70 = sub_1BDBFCE1C();
    v71 = sub_1BDBFDECC();
    v72 = os_log_type_enabled(v70, v71);
    v73 = v337;
    if (v72)
    {
      v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v74 = 0;
      _os_log_impl(&dword_1BD918000, v70, v71, "PostProcessOnlyTranscriptParagraphs default was set, so only doing light processing.", v74, 2u);
      MEMORY[0x1C3B7B478](v74, -1, -1);
    }

    v75 = v365;
    sub_1BDB1CC10(v73, v365);
    v371 = *(_QWORD **)(v349 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, int *))v371)(v75, 0, 1, v373);
    swift_bridgeObjectRetain();
    v53 = MEMORY[0x1E0DEE9D8];
    v76 = (unint64_t)v345;
    v77 = v366;
    do
    {
      v366 = v77;
      v78 = v368 + v77;
      sub_1BDAC350C(v75, &qword_1EF50CEC0);
      sub_1BDB1CC10(v78, v75);
      v79 = v75;
      v80 = v373;
      ((void (*)(uint64_t, _QWORD, uint64_t, int *))v371)(v79, 0, 1, v373);
      v81 = (uint64_t *)(v78 + v80[5]);
      v83 = *v81;
      v82 = v81[1];
      v376 = v83;
      v377 = v82;
      v378 = 2570;
      v379 = 0xE200000000000000;
      v374 = 0;
      v375 = 0xE000000000000000;
      v84 = v53;
      sub_1BDAC3548();
      v376 = sub_1BDBFE13C();
      v377 = v85;
      v378 = 46;
      v379 = 0xE100000000000000;
      v374 = 657966;
      v375 = 0xE300000000000000;
      v86 = sub_1BDBFE13C();
      v88 = v87;
      swift_bridgeObjectRelease();
      v89 = *(_QWORD *)(v78 + v80[6]);
      v90 = *(_QWORD *)(v78 + v80[7]);
      v91 = v80[8];
      v92 = v78 + v91;
      v94 = *(_QWORD *)(v78 + v91);
      v93 = *(_QWORD *)(v92 + 8);
      v95 = &v51[v91];
      swift_bridgeObjectRetain();
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      v96 = (uint64_t *)&v51[v80[5]];
      *v96 = v86;
      v96[1] = v88;
      v53 = v84;
      *(_QWORD *)&v51[v80[6]] = v89;
      *(_QWORD *)&v51[v80[7]] = v90;
      *(_QWORD *)v95 = v94;
      *((_QWORD *)v95 + 1) = v93;
      sub_1BDB1CC10((uint64_t)v51, v76);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v53 = sub_1BDBCC35C(0, *(_QWORD *)(v84 + 16) + 1, 1, v84);
      v98 = *(_QWORD *)(v53 + 16);
      v97 = *(_QWORD *)(v53 + 24);
      v75 = v365;
      v99 = v366;
      if (v98 >= v97 >> 1)
        v53 = sub_1BDBCC35C(v97 > 1, v98 + 1, 1, v53);
      v100 = v372;
      v77 = v99 + v372;
      *(_QWORD *)(v53 + 16) = v98 + 1;
      sub_1BDAEA978(v76, v53 + v358 + v98 * v100);
      sub_1BDB1CC54((uint64_t)v51);
      --v367;
    }
    while (v367);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v53 + 16))
    {
      sub_1BDAC350C(v75, &qword_1EF50CEC0);
      return v53;
    }
    v114 = v342;
    sub_1BDB1CE08(v75, v342);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v349 + 48))(v114, 1, v373) == 1)
    {
      sub_1BDAC350C(v75, &qword_1EF50CEC0);
      sub_1BDAC350C(v114, &qword_1EF50CEC0);
      return v53;
    }
    v177 = v341;
    sub_1BDAEA978(v114, v341);
    if (*(_QWORD *)(v53 + 16))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v188 = *(_QWORD *)(v53 + 16);
        if (v188)
          goto LABEL_102;
LABEL_231:
        __break(1u);
        goto LABEL_232;
      }
LABEL_230:
      v53 = sub_1BDBBCF40(v53);
      v188 = *(_QWORD *)(v53 + 16);
      if (!v188)
        goto LABEL_231;
LABEL_102:
      v114 = v372 * (v188 - 1);
      sub_1BDB1CC54(v53 + v358 + v114);
      *(_QWORD *)(v53 + 16) = v188 - 1;
      v76 = v340;
      sub_1BDB1CC10(v177, v340);
      v187 = *(_QWORD *)(v53 + 24);
      if (v188 > v187 >> 1)
LABEL_232:
        v53 = sub_1BDBCC35C(v187 > 1, v188, 1, v53);
      *(_QWORD *)(v53 + 16) = v188;
      sub_1BDAEA978(v76, v53 + v358 + v114);
      sub_1BDB1CC54(v177);
      sub_1BDAC350C(v75, &qword_1EF50CEC0);
      return v53;
    }
LABEL_229:
    __break(1u);
    goto LABEL_230;
  }
  v342 = v9;
  v376 = MEMORY[0x1E0DEE9D8];
  v105 = v367;
  sub_1BDB224F4(0, v367, 0);
  v106 = v376;
  v107 = v337;
  do
  {
    sub_1BDB1CC10(v107, (uint64_t)v42);
    v108 = &v42[v373[5]];
    v109 = *(_QWORD *)v108;
    v110 = *((_QWORD *)v108 + 1);
    swift_bridgeObjectRetain();
    sub_1BDB1CC54((uint64_t)v42);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BDB224F4(0, *(_QWORD *)(v106 + 16) + 1, 1);
      v106 = v376;
    }
    v112 = *(_QWORD *)(v106 + 16);
    v111 = *(_QWORD *)(v106 + 24);
    if (v112 >= v111 >> 1)
    {
      sub_1BDB224F4(v111 > 1, v112 + 1, 1);
      v106 = v376;
    }
    *(_QWORD *)(v106 + 16) = v112 + 1;
    v113 = v106 + 16 * v112;
    *(_QWORD *)(v113 + 32) = v109;
    *(_QWORD *)(v113 + 40) = v110;
    v107 += v372;
    --v105;
  }
  while (v105);
  sub_1BDBFC708();
  swift_bridgeObjectRetain();
  v115 = v337;
  v116 = v367;
  v117 = v357;
  v345 = v42;
  while (2)
  {
    if ((sub_1BDBFDC20() & 1) != 0)
      goto LABEL_49;
    v366 = v106;
    sub_1BDB1CC10(v115, (uint64_t)v42);
    type metadata accessor for TranscriptMetadata(0);
    v120 = swift_allocObject();
    v121 = v359;
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    ((void (**)(uint64_t, _QWORD *, _QWORD *))v360)[4](v120 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id, v121, v361);
    sub_1BDAEA978((uint64_t)v42, v120 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
    v122 = (uint64_t *)(v115 + v373[8]);
    if (v122[1])
    {
      v123 = *v122;
      v124 = qword_1EF50B2F0;
      swift_bridgeObjectRetain();
      if (v124 != -1)
        swift_once();
      v125 = (void *)qword_1EF520230;
      v126 = (void *)sub_1BDBFD6C8();
      if (qword_1EF50B2F8 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D4B0);
      v127 = (void *)sub_1BDBFD9C8();
      v128 = objc_msgSend(v125, sel_ic_contactForHandleString_keysToFetch_, v126, v127);

      v365 = v120;
      if (v128)
      {
        v129 = objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v128, 0);
        if (v129)
        {
          v130 = v129;
          v131 = sub_1BDBFD6F8();

          if (sub_1BDBFD7A0() <= 0)
          {
            v349 = v123;
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            v349 = v131;
          }
        }
        else
        {
          v349 = v123;

        }
      }
      else
      {
        v349 = v123;
      }
      v117 = v357;
      v132 = v355;
      sub_1BDBFC660();
      v133 = sub_1BDBFC66C();
      (*(void (**)(char *, uint64_t))(v354 + 8))(v132, v356);
      v134 = v363;
      v135 = v352;
      if (v133 >= 1)
      {
        sub_1BDBFC690();
        sub_1BDBFC69C();
        ((void (*)(char *, _QWORD *))v134[1])(v135, v117);
      }
      sub_1BDBFC780();
      sub_1BDBFC720();
      KeyPath = swift_getKeyPath();
      v137 = v135;
      MEMORY[0x1E0C80A78](KeyPath);
      swift_getKeyPath();
      v138 = v365;
      v376 = v365;
      sub_1BDB1CDC4();
      swift_retain();
      sub_1BDBFC684();
      sub_1BDBFC69C();
      v139 = v353;
      sub_1BDBFC690();
      v120 = v138;
      sub_1BDBFC69C();
      v140 = (void (*)(char *, _QWORD *))v134[1];
      v140(v139, v117);
      v140(v137, v117);
      v42 = v345;
    }
    v141 = (uint64_t *)(v115 + v373[5]);
    v143 = *v141;
    v142 = v141[1];
    if ((sub_1BDB3D528(*v141, v142) & 1) == 0)
    {
      v376 = v143;
      v377 = v142;
      swift_bridgeObjectRetain();
      sub_1BDBFD7DC();
      if ((sub_1BDBFDC20() & 1) != 0)
        goto LABEL_70;
      goto LABEL_47;
    }
    swift_bridgeObjectRetain();
    if ((sub_1BDBFDC20() & 1) == 0)
    {
LABEL_47:
      sub_1BDBFC780();
      v118 = v351;
      sub_1BDBFC720();
      v119 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v119);
      swift_getKeyPath();
      v376 = v120;
      sub_1BDB1CCC8();
      swift_retain();
      sub_1BDBFC684();
      sub_1BDBFC69C();
      sub_1BDBFDC20();
      swift_release();
      ((void (*)(char *, _QWORD *))v363[1])(v118, v117);
      goto LABEL_48;
    }
LABEL_70:
    swift_release();
    swift_bridgeObjectRelease();
LABEL_48:
    v106 = v366;
LABEL_49:
    v115 += v372;
    if (--v116)
      continue;
    break;
  }
  v366 = v106;
  swift_bridgeObjectRelease();
  v144 = v363;
  v145 = (void (*)(char *, char *, _QWORD *))v363[4];
  v146 = v346;
  v145(v346, v364, v117);
  v147 = v347;
  v145(v347, v146, v117);
  sub_1BDBFC660();
  ((void (*)(char *, _QWORD *))v144[1])(v147, v117);
  sub_1BDB1CD0C();
  v148 = sub_1BDBFD89C();
  v150 = v149;
  v53 = (unint64_t)v348;
  if (v348)
  {
    v151 = v348;
    v361 = v348;
  }
  else
  {
    v152 = (void (**)(_QWORD, _QWORD, _QWORD))*MEMORY[0x1E0CCDEF8];
    v361 = (id)*MEMORY[0x1E0CCDEF8];
    v151 = v152;
  }
  v360 = v151;
  v153 = sub_1BDBFD6F8();
  v76 = v154;
  if (v153 == sub_1BDBFD6F8() && v76 == v155)
  {
    v168 = (id)v53;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v157 = sub_1BDBFE874();
    v158 = (id)v53;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v157 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v159 = qword_1EF50B198;
      v160 = v360;
      if (v159 != -1)
        swift_once();
      v161 = sub_1BDBFCE34();
      __swift_project_value_buffer(v161, (uint64_t)qword_1EF50CDE0);
      v162 = v160;
      v163 = sub_1BDBFCE1C();
      v164 = sub_1BDBFDECC();
      if (os_log_type_enabled(v163, v164))
      {
        v165 = (uint8_t *)swift_slowAlloc();
        v166 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v165 = 138412290;
        v53 = (unint64_t)(v165 + 4);
        sub_1BDBFD6F8();
        v167 = sub_1BDBFD6C8();
        swift_bridgeObjectRelease();
        v376 = v167;
        sub_1BDBFE100();
        *v166 = v167;

        _os_log_impl(&dword_1BD918000, v163, v164, "Resolved language %@ was not supported. Skipping post-processing.", v165, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
        swift_arrayDestroy();
        MEMORY[0x1C3B7B478](v166, -1, -1);
        MEMORY[0x1C3B7B478](v165, -1, -1);
      }
      else
      {

        v163 = v162;
      }

      sub_1BDB1CBCC();
      swift_allocError();
      *v220 = 0;
      swift_willThrow();

      return v53;
    }
  }
  if ((sub_1BDBFDC20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EF50B198 != -1)
      swift_once();
    v169 = sub_1BDBFCE34();
    __swift_project_value_buffer(v169, (uint64_t)qword_1EF50CDE0);
    v170 = sub_1BDBFCE1C();
    v171 = sub_1BDBFDED8();
    if (os_log_type_enabled(v170, v171))
    {
      v172 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v172 = 0;
      _os_log_impl(&dword_1BD918000, v170, v171, "Cancelled after step 1. Aborting.", v172, 2u);
      MEMORY[0x1C3B7B478](v172, -1, -1);
    }

    sub_1BDB1CBCC();
    swift_allocError();
    *v173 = 4;
    swift_willThrow();
    goto LABEL_114;
  }
  v114 = sub_1BDBFD7A0();
  v174 = sub_1BDB19D78(v148, v150, (uint64_t)v361, 1);
  swift_bridgeObjectRelease();
  v75 = *(_QWORD *)(v174 + 16);
  v175 = MEMORY[0x1E0DEE9D8];
  if (v75)
  {
    v368 = v114;
    swift_bridgeObjectRetain();
    v365 = v174;
    v176 = (unint64_t *)(v174 + 40);
    v177 = MEMORY[0x1E0DEE9D8];
    do
    {
      v178 = *v176;
      v376 = *(v176 - 1);
      v377 = v178;
      swift_bridgeObjectRetain();
      v179 = v370;
      sub_1BDBFC408();
      sub_1BDAC3548();
      v180 = sub_1BDBFE130();
      v182 = v181;
      (*(void (**)(char *, _QWORD *))(v369 + 8))(v179, v371);
      v376 = v180;
      v377 = v182;
      swift_bridgeObjectRetain();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v183 = v376;
      v184 = v377;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v177 = (uint64_t)sub_1BDBCBCC4(0, *(_QWORD *)(v177 + 16) + 1, 1, (_QWORD *)v177);
      v76 = *(_QWORD *)(v177 + 16);
      v185 = *(_QWORD *)(v177 + 24);
      if (v76 >= v185 >> 1)
        v177 = (uint64_t)sub_1BDBCBCC4((_QWORD *)(v185 > 1), v76 + 1, 1, (_QWORD *)v177);
      v176 += 2;
      *(_QWORD *)(v177 + 16) = v76 + 1;
      v186 = v177 + 16 * v76;
      *(_QWORD *)(v186 + 32) = v183;
      *(_QWORD *)(v186 + 40) = v184;
      swift_bridgeObjectRelease();
      --v75;
    }
    while (v75);
    v174 = v365;
    swift_bridgeObjectRelease();
    v175 = MEMORY[0x1E0DEE9D8];
    v114 = v368;
  }
  else
  {
    v177 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v177 + 16);
  if (v53)
  {
    v75 = v53 - 1;
    v189 = (_QWORD *)v177;
    swift_bridgeObjectRetain();
    v114 = sub_1BDB19F5C(v114);
    v191 = v190;
    v193 = v192;
    v177 = v194;
    swift_bridgeObjectRelease();
    v174 = MEMORY[0x1C3B78D30](v114, v191, v193, v177);
    v76 = v195;
    swift_bridgeObjectRelease();
    v359 = v189;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_107;
  }
  else
  {
    __break(1u);
  }
  v359 = sub_1BDBBCF2C(v359);
LABEL_107:
  v196 = v359;
  if (v53 > v359[2])
  {
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
    goto LABEL_229;
  }
  v363 = v359 + 4;
  v197 = &v359[2 * v75 + 4];
  *v197 = v174;
  v197[1] = v76;
  v198 = v196;
  swift_bridgeObjectRelease();
  if ((sub_1BDBFDC20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF50B198 != -1)
      swift_once();
    v199 = sub_1BDBFCE34();
    __swift_project_value_buffer(v199, (uint64_t)qword_1EF50CDE0);
    v200 = sub_1BDBFCE1C();
    v201 = sub_1BDBFDED8();
    if (os_log_type_enabled(v200, v201))
    {
      v202 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v202 = 0;
      _os_log_impl(&dword_1BD918000, v200, v201, "Cancelled after step 2. Aborting.", v202, 2u);
      MEMORY[0x1C3B7B478](v202, -1, -1);
    }

    sub_1BDB1CBCC();
    swift_allocError();
    *v203 = 4;
    swift_willThrow();
    swift_bridgeObjectRelease();
LABEL_114:

    return v53;
  }
  v374 = v175;
  v362 = (uint64_t *)v198[2];
  if (v362)
  {
    swift_bridgeObjectRetain_n();
    sub_1BDAC3548();
    v204 = 0;
    do
    {
      v206 = v363[2 * v204 + 1];
      v376 = v363[2 * v204];
      v377 = v206;
      v378 = 8238;
      v379 = 0xE200000000000000;
      swift_bridgeObjectRetain();
      v207 = sub_1BDBFE124();
      v378 = v175;
      v53 = *(_QWORD *)(v207 + 16);
      if (v53)
      {
        v364 = (char *)v207;
        v365 = v206;
        v368 = v204;
        v208 = (unint64_t *)(v207 + 40);
        do
        {
          v209 = *(v208 - 1);
          v210 = *v208;
          v376 = v209;
          v377 = v210;
          swift_bridgeObjectRetain();
          v211 = v370;
          sub_1BDBFC3E4();
          v212 = sub_1BDBFE130();
          v214 = v213;
          (*(void (**)(char *, _QWORD *))(v369 + 8))(v211, v371);
          swift_bridgeObjectRelease();
          v215 = HIBYTE(v214) & 0xF;
          if ((v214 & 0x2000000000000000) == 0)
            v215 = v212 & 0xFFFFFFFFFFFFLL;
          if (v215)
          {
            v216 = v378;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BDB224F4(0, *(_QWORD *)(v216 + 16) + 1, 1);
              v216 = v378;
            }
            v218 = *(_QWORD *)(v216 + 16);
            v217 = *(_QWORD *)(v216 + 24);
            if (v218 >= v217 >> 1)
            {
              sub_1BDB224F4(v217 > 1, v218 + 1, 1);
              v216 = v378;
            }
            *(_QWORD *)(v216 + 16) = v218 + 1;
            v219 = v216 + 16 * v218;
            *(_QWORD *)(v219 + 32) = v209;
            *(_QWORD *)(v219 + 40) = v210;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v208 += 2;
          --v53;
        }
        while (v53);
        swift_bridgeObjectRelease();
        v205 = v378;
        v175 = MEMORY[0x1E0DEE9D8];
        v204 = v368;
      }
      else
      {
        swift_bridgeObjectRelease();
        v205 = v175;
      }
      ++v204;
      sub_1BDBC44D0(v205);
      swift_bridgeObjectRelease();
    }
    while ((uint64_t *)v204 != v362);
    swift_bridgeObjectRelease_n();
  }
  v221 = swift_bridgeObjectRetain();
  v222 = sub_1BDB19E80(v221);
  swift_bridgeObjectRelease();
  if ((sub_1BDBFDC20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EF50B198 != -1)
      swift_once();
    v223 = sub_1BDBFCE34();
    __swift_project_value_buffer(v223, (uint64_t)qword_1EF50CDE0);
    v224 = sub_1BDBFCE1C();
    v225 = sub_1BDBFDED8();
    if (os_log_type_enabled(v224, v225))
    {
      v226 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v226 = 0;
      v227 = "Cancelled after step 3. Aborting.";
      goto LABEL_187;
    }
    goto LABEL_188;
  }
  v376 = v222;
  v228 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  v364 = (char *)sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
  v365 = v228;
  v229 = sub_1BDBFD674();
  v231 = v230;
  swift_bridgeObjectRelease();
  v376 = v229;
  v377 = v231;
  v232 = v370;
  sub_1BDBFC3E4();
  v368 = sub_1BDAC3548();
  v233 = sub_1BDBFE118();
  v369 = *(_QWORD *)(v369 + 8);
  ((void (*)(char *, _QWORD *))v369)(v232, v371);
  swift_bridgeObjectRelease();
  v234 = *(_QWORD *)(v233 + 16);
  v235 = MEMORY[0x1E0DEE9D8];
  if (v234)
  {
    v236 = (uint64_t *)(v233 + 40);
    v237 = v366;
    do
    {
      v53 = *(v236 - 1);
      v241 = *v236;
      v242 = HIBYTE(*v236) & 0xF;
      if ((*v236 & 0x2000000000000000) == 0)
        v242 = v53 & 0xFFFFFFFFFFFFLL;
      if (v242)
      {
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v376 = v235;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BDB224F4(0, *(_QWORD *)(v235 + 16) + 1, 1);
          v237 = v366;
          v235 = v376;
        }
        v239 = *(_QWORD *)(v235 + 16);
        v238 = *(_QWORD *)(v235 + 24);
        if (v239 >= v238 >> 1)
        {
          sub_1BDB224F4(v238 > 1, v239 + 1, 1);
          v237 = v366;
          v235 = v376;
        }
        *(_QWORD *)(v235 + 16) = v239 + 1;
        v240 = v235 + 16 * v239;
        *(_QWORD *)(v240 + 32) = v53;
        *(_QWORD *)(v240 + 40) = v241;
      }
      v236 += 2;
      --v234;
    }
    while (v234);
  }
  else
  {
    v237 = v366;
  }
  swift_bridgeObjectRelease();
  v378 = v235;
  v244 = *(_QWORD *)(v235 + 16);
  v245 = *(_QWORD *)(v237 + 16);
  if (v244 == v245)
  {
    swift_bridgeObjectRelease();
    goto LABEL_154;
  }
  v266 = qword_1EF50B198;
  swift_retain();
  if (v266 != -1)
    swift_once();
  v267 = sub_1BDBFCE34();
  v356 = __swift_project_value_buffer(v267, (uint64_t)qword_1EF50CDE0);
  v268 = sub_1BDBFCE1C();
  v269 = sub_1BDBFDEE4();
  if (os_log_type_enabled(v268, v269))
  {
    v270 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v270 = 0;
    _os_log_impl(&dword_1BD918000, v268, v269, "There was a difference in word count between the initial and post-processed strings. Ideally this shouldn't happen, but sometimes it is unavoidable. Trying to reconcile this with a diff.", v270, 2u);
    MEMORY[0x1C3B7B478](v270, -1, -1);
  }

  if (!v244)
  {
    swift_release();
    v277 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v245)
      goto LABEL_175;
    goto LABEL_191;
  }
  v363 = (_QWORD *)v245;
  v380 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BDB224F4(0, v244, 0);
  v271 = v235 + 40;
  do
  {
    v376 = sub_1BDBFD740();
    v377 = v272;
    swift_bridgeObjectRetain();
    v273 = v370;
    sub_1BDBFC408();
    v274 = sub_1BDBFE130();
    v276 = v275;
    ((void (*)(char *, _QWORD *))v369)(v273, v371);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v277 = v380;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BDB224F4(0, v277[2] + 1, 1);
      v277 = v380;
    }
    v279 = v277[2];
    v278 = v277[3];
    if (v279 >= v278 >> 1)
    {
      sub_1BDB224F4(v278 > 1, v279 + 1, 1);
      v277 = v380;
    }
    v271 += 16;
    v277[2] = v279 + 1;
    v280 = &v277[2 * v279];
    v280[4] = v274;
    v280[5] = v276;
    --v244;
  }
  while (v244);
  swift_release();
  v245 = (int64_t)v363;
  if (!v363)
  {
LABEL_191:
    swift_bridgeObjectRelease();
    v288 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_192;
  }
LABEL_175:
  v380 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BDB224F4(0, v245, 0);
  v281 = v366 + 40;
  do
  {
    v282 = v245;
    v376 = sub_1BDBFD740();
    v377 = v283;
    swift_bridgeObjectRetain();
    v284 = v370;
    sub_1BDBFC408();
    v285 = sub_1BDBFE130();
    v287 = v286;
    ((void (*)(char *, _QWORD *))v369)(v284, v371);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v288 = v380;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BDB224F4(0, v288[2] + 1, 1);
      v288 = v380;
    }
    v290 = v288[2];
    v289 = v288[3];
    if (v290 >= v289 >> 1)
    {
      sub_1BDB224F4(v289 > 1, v290 + 1, 1);
      v288 = v380;
    }
    v281 += 16;
    v288[2] = v290 + 1;
    v291 = &v288[2 * v290];
    v291[4] = v285;
    v291[5] = v287;
    v245 = v282 - 1;
  }
  while (v282 != 1);
  swift_bridgeObjectRelease();
LABEL_192:
  v294 = v339;
  v357 = v288;
  v376 = (uint64_t)v288;
  v380 = v277;
  v295 = v333;
  sub_1BDBFD668();
  swift_bridgeObjectRelease();
  v296 = (uint64_t)v338;
  v297 = v342;
  v364 = *(char **)(v334 + 16);
  ((void (*)(char *, char *, uint64_t))v364)(v338, v295, v342);
  v114 = sub_1BDAE0C94((unint64_t *)&unk_1EF50CEE0, &qword_1EF50CEB8, MEMORY[0x1E0DECE10]);
  sub_1BDBFDDC4();
  *(_QWORD *)(v296 + *(int *)(v294 + 36)) = v376;
  v298 = v344;
  sub_1BDB1CD54(v296, v344);
  v53 = v298 + *(int *)(v294 + 36);
  v299 = *(_QWORD *)v53;
  sub_1BDBFDDE8();
  if (v299 == v376)
  {
LABEL_193:
    sub_1BDAC350C(v298, &qword_1EF50CEB0);
    v300 = sub_1BDBFDC20();
    v301 = v378;
    if ((v300 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v302 = sub_1BDBFCE1C();
      v303 = sub_1BDBFDED8();
      if (os_log_type_enabled(v302, v303))
      {
        v304 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v304 = 0;
        _os_log_impl(&dword_1BD918000, v302, v303, "Cancelled after step 4a. Aborting.", v304, 2u);
        MEMORY[0x1C3B7B478](v304, -1, -1);
      }

      sub_1BDB1CBCC();
      swift_allocError();
      *v305 = 4;
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v334 + 8))(v295, v297);
      goto LABEL_222;
    }
    v317 = *(_QWORD *)(v378 + 16);
    v318 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v317)
    {
      v380 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BDB224F4(0, v317, 0);
      v319 = v301 + 40;
      do
      {
        v376 = sub_1BDBFD740();
        v377 = v320;
        swift_bridgeObjectRetain();
        v321 = v370;
        sub_1BDBFC408();
        v53 = sub_1BDBFE130();
        v323 = v322;
        ((void (*)(char *, _QWORD *))v369)(v321, v371);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v318 = v380;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDB224F4(0, v318[2] + 1, 1);
          v318 = v380;
        }
        v325 = v318[2];
        v324 = v318[3];
        if (v325 >= v324 >> 1)
        {
          sub_1BDB224F4(v324 > 1, v325 + 1, 1);
          v318 = v380;
        }
        v319 += 16;
        v318[2] = v325 + 1;
        v326 = &v318[2 * v325];
        v326[4] = v53;
        v326[5] = v323;
        --v317;
      }
      while (v317);
      swift_bridgeObjectRelease();
      v297 = v342;
    }
    v327 = sub_1BDAFB67C(v318, v357);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v328 = v334;
    if ((v327 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v329 = sub_1BDBFCE1C();
      v330 = sub_1BDBFDEF0();
      if (os_log_type_enabled(v329, v330))
      {
        v331 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v331 = 0;
        _os_log_impl(&dword_1BD918000, v329, v330, "The post-processor encountered a discrepancy where diffing was necessary and attempted to diff, however, the attempt was unsuccessful. This is unexpected.", v331, 2u);
        MEMORY[0x1C3B7B478](v331, -1, -1);
      }

      sub_1BDB1CBCC();
      swift_allocError();
      *v332 = 5;
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v328 + 8))(v333, v297);
      goto LABEL_222;
    }
    (*(void (**)(char *, uint64_t))(v334 + 8))(v333, v297);
LABEL_154:
    v246 = *(_QWORD *)(v378 + 16);
    v247 = v337;
    v370 = (char *)v378;
    if (!v246)
    {
      v53 = MEMORY[0x1E0DEE9D8];
      goto LABEL_183;
    }
    if (v246 > v367)
    {
      __break(1u);
    }
    else
    {
      v248 = (uint64_t *)(v378 + 40);
      v53 = MEMORY[0x1E0DEE9D8];
      v249 = (uint64_t)v336;
      do
      {
        v371 = (_QWORD *)v53;
        v251 = *(v248 - 1);
        v250 = *v248;
        v252 = v373;
        v253 = *(_QWORD *)(v247 + v373[6]);
        v254 = *(_QWORD *)(v247 + v373[7]);
        v255 = v373[8];
        v337 = v247;
        v256 = v247 + v255;
        v258 = *(_QWORD *)(v247 + v255);
        v257 = *(_QWORD *)(v256 + 8);
        v259 = (_QWORD *)(v350 + v255);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
        v260 = (_QWORD *)(v350 + v252[5]);
        *v260 = v251;
        v260[1] = v250;
        v53 = (unint64_t)v371;
        *(_QWORD *)(v350 + v252[6]) = v253;
        *(_QWORD *)(v350 + v252[7]) = v254;
        *v259 = v258;
        v259[1] = v257;
        v261 = v350;
        sub_1BDB1CC10(v350, v249);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v53 = sub_1BDBCC35C(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
        v263 = *(_QWORD *)(v53 + 16);
        v262 = *(_QWORD *)(v53 + 24);
        v264 = v337;
        if (v263 >= v262 >> 1)
          v53 = sub_1BDBCC35C(v262 > 1, v263 + 1, 1, v53);
        v265 = v372;
        v247 = v264 + v372;
        *(_QWORD *)(v53 + 16) = v263 + 1;
        v249 = (uint64_t)v336;
        sub_1BDAEA978((uint64_t)v336, v53 + v358 + v263 * v265);
        sub_1BDB1CC54(v261);
        v248 += 2;
        --v246;
      }
      while (v246);
LABEL_183:
      swift_bridgeObjectRelease();
      if ((sub_1BDBFDC20() & 1) == 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v53;
      }
      swift_bridgeObjectRelease();
      if (qword_1EF50B198 == -1)
      {
LABEL_185:
        v292 = sub_1BDBFCE34();
        __swift_project_value_buffer(v292, (uint64_t)qword_1EF50CDE0);
        v224 = sub_1BDBFCE1C();
        v225 = sub_1BDBFDED8();
        if (os_log_type_enabled(v224, v225))
        {
          v226 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v226 = 0;
          v227 = "Cancelled after step 4. Aborting.";
LABEL_187:
          _os_log_impl(&dword_1BD918000, v224, v225, v227, v226, 2u);
          MEMORY[0x1C3B7B478](v226, -1, -1);
        }
LABEL_188:

        sub_1BDB1CBCC();
        swift_allocError();
        *v293 = 4;
        swift_willThrow();

LABEL_222:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v53;
      }
    }
    swift_once();
    goto LABEL_185;
  }
  v363 = (_QWORD *)v114;
  v362 = (uint64_t *)v53;
  while (2)
  {
    v307 = (void (*)(uint64_t *, _QWORD))sub_1BDBFDE3C();
    v308 = v297;
    v177 = *(_QWORD *)v309;
    v310 = *(_QWORD *)(v309 + 8);
    v76 = *(_QWORD *)(v309 + 16);
    v311 = *(unsigned __int8 *)(v309 + 32);
    v75 = *(unsigned __int8 *)(v309 + 33);
    v366 = *(_QWORD *)(v309 + 24);
    LODWORD(v365) = v311;
    sub_1BDB1CD9C();
    v307(&v376, 0);
    v312 = v343;
    ((void (*)(char *, uint64_t, uint64_t))v364)(v343, v298, v308);
    sub_1BDBFDDF4();
    (*(void (**)(char *, uint64_t))(v334 + 8))(v312, v308);
    if ((_DWORD)v75 != 1)
    {
      if (*(_QWORD *)(v378 + 16) < v177)
        goto LABEL_227;
      v295 = v333;
      if (v177 < 0)
        goto LABEL_228;
      sub_1BDADD410(v177, v177, v310, v76);
      goto LABEL_199;
    }
    v313 = (_QWORD *)v378;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v313 = sub_1BDBBCF2C(v313);
    v314 = v313[2];
    if (v177 >= v314)
      goto LABEL_226;
    v315 = v314 - 1;
    v316 = v314 - 1 - v177;
    if (v316 >= 0)
    {
      memmove(&v313[2 * v177 + 4], &v313[2 * v177 + 6], 16 * v316);
      v313[2] = v315;
      sub_1BDB1CDA4();
      swift_bridgeObjectRelease();
      v378 = (uint64_t)v313;
      v295 = v333;
LABEL_199:
      v53 = (unint64_t)v362;
      v306 = *v362;
      v298 = v344;
      v297 = v342;
      v114 = (uint64_t)v363;
      sub_1BDBFDDE8();
      if (v306 == v376)
        goto LABEL_193;
      continue;
    }
    break;
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

unint64_t sub_1BDB1CA78()
{
  unint64_t result;

  result = qword_1EF50CDF8;
  if (!qword_1EF50CDF8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptPostProcessorError, &type metadata for TranscriptPostProcessorError);
    atomic_store(result, (unint64_t *)&qword_1EF50CDF8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TranscriptPostProcessorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BDB1CB08 + 4 * byte_1BDC1A075[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BDB1CB3C + 4 * byte_1BDC1A070[v4]))();
}

uint64_t sub_1BDB1CB3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB1CB44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB1CB4CLL);
  return result;
}

uint64_t sub_1BDB1CB58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB1CB60);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BDB1CB64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB1CB6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptPostProcessorError()
{
  return &type metadata for TranscriptPostProcessorError;
}

uint64_t type metadata accessor for TranscriptPostProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for TranscriptPostProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static TranscriptPostProcessor.postProcess(rawTranscriptSegments:language:cloudConfiguration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1BDB1CBCC()
{
  unint64_t result;

  result = qword_1EF50CEC8;
  if (!qword_1EF50CEC8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptPostProcessorError, &type metadata for TranscriptPostProcessorError);
    atomic_store(result, (unint64_t *)&qword_1EF50CEC8);
  }
  return result;
}

uint64_t sub_1BDB1CC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB1CC54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDB1CC94()
{
  return 8;
}

uint64_t sub_1BDB1CCA0()
{
  return swift_release();
}

uint64_t sub_1BDB1CCA8(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BDB1CCBC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1BDB1CCC8()
{
  unint64_t result;

  result = qword_1EF50CED0;
  if (!qword_1EF50CED0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptTextAttribute, &type metadata for TranscriptTextAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF50CED0);
  }
  return result;
}

unint64_t sub_1BDB1CD0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50E9A0;
  if (!qword_1EF50E9A0)
  {
    v1 = sub_1BDBFC678();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CAEF28], v1);
    atomic_store(result, &qword_1EF50E9A0);
  }
  return result;
}

uint64_t sub_1BDB1CD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB1CD9C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB1CDA4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB1CDB0()
{
  return 8;
}

unint64_t sub_1BDB1CDC4()
{
  unint64_t result;

  result = qword_1EF50CEF0;
  if (!qword_1EF50CEF0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for SpeakerAttribute, &type metadata for SpeakerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF50CEF0);
  }
  return result;
}

uint64_t sub_1BDB1CE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB1CE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BDB19870(a1, a2, a3, *(_QWORD ***)(v3 + 16));
}

void sub_1BDB1CE68()
{
  id v0;
  void *v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  v1 = (void *)sub_1BDBFD6C8();
  objc_msgSend(v0, sel_setName_, v1);

  qword_1ED23AEB8 = (uint64_t)v0;
}

id sub_1BDB1CEDC()
{
  if (qword_1ED23AEB0 != -1)
    swift_once();
  return (id)qword_1ED23AEB8;
}

id static NSFileCoordinator.fileCoordinationOperationQueue.getter()
{
  if (qword_1ED23AEB0 != -1)
    swift_once();
  return (id)qword_1ED23AEB8;
}

void NSFileCoordinator.coordinateWriting<A>(at:options:accessor:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id aBlock[7];

  v23 = a5;
  v27 = a1;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED23B110);
  v8 = sub_1BDBFEA90();
  v26 = sub_1BDBFE0AC();
  v9 = *(_QWORD *)(v26 - 8);
  v10 = MEMORY[0x1E0C80A78](v26);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - v13;
  v25 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))((char *)&v22 - v13, 1, 1, v8);
  v15 = sub_1BDBFC8D0();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a4;
  v16[3] = v14;
  v16[4] = a2;
  v16[5] = a3;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_1BDB1D368;
  v17[3] = v16;
  aBlock[4] = sub_1BDB1D3A4;
  aBlock[5] = v17;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1BDB1D3C4;
  aBlock[3] = &block_descriptor_3;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v28, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v15, v27, aBlock, v18);
  _Block_release(v18);

  v19 = aBlock[0];
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v15 & 1) != 0)
    __break(1u);
  if (v19)
  {
    v19;
    swift_willThrow();
    v20 = v26;
LABEL_6:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v20);
    swift_release();

    return;
  }
  v20 = v26;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v12, 1, v8) == 1)
  {
    __break(1u);
  }
  else
  {
    v21 = v24;
    sub_1BDB1D470(v8, (uint64_t)aBlock, v23);
    if (v21)
      goto LABEL_6;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v20);
    swift_release();
  }
}

uint64_t sub_1BDB1D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v16 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED23B110);
  v9 = sub_1BDBFEA90();
  v10 = sub_1BDBFE0AC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v15 - v12;
  v17 = a5;
  v18 = a3;
  v19 = a4;
  v20 = a1;
  sub_1BDB420B4((void (*)(_BYTE *))sub_1BDB1DF60, (uint64_t)&v15 - v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v13, 0, 1, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 40))(v16, v13, v10);
}

uint64_t sub_1BDB1D358()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB1D368(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BDB1D244(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_1BDB1D374(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1BDB1D394()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB1D3A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1BDB1D3C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1BDBFC948();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1BDBFC90C();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1BDB1D470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t NSFileCoordinator.withCoordinatedAccess<A>(_:queue:accessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BDB1D528()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  id v6;
  _QWORD *v7;
  char *v9;

  v1 = *(void **)(v0 + 32);
  if (v1)
    v2 = *(id *)(v0 + 32);
  else
    v2 = objc_msgSend((id)objc_opt_self(), sel_ic_fileCoordinationOperationQueue);
  *(_QWORD *)(v0 + 72) = v2;
  v3 = *(_QWORD *)(v0 + 24);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v4;
  v5 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  *(_OWORD *)(v4 + 48) = v5;
  v9 = (char *)&dword_1EF50DC20 + dword_1EF50DC20;
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v7;
  *v7 = v0;
  v7[1] = sub_1BDB1D614;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, void (*)(uint64_t), uint64_t, _QWORD))v9)(*(_QWORD *)(v0 + 16), 0, 0, sub_1BDB1D804, v4, *(_QWORD *)(v0 + 56));
}

uint64_t sub_1BDB1D614()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB1D680()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB1D6B4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDB1D6F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[6];

  sub_1BDB1DEE8();
  v14 = (void *)sub_1BDBFD9C8();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a7;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a3;
  v15[6] = a1;
  v17[4] = sub_1BDB1DF50;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BDB1D950;
  v17[3] = &block_descriptor_21;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a2, sel_coordinateAccessWithIntents_queue_byAccessor_, v14, a4, v16);
  _Block_release(v16);

}

void sub_1BDB1D804(uint64_t a1)
{
  uint64_t v1;

  sub_1BDB1D6F0(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BDB1D814(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  _QWORD v21[2];

  v9 = *(_QWORD *)(a6 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v17 = (char *)v21 - v16;
  if (v13)
  {
    v18 = a1;
    swift_willThrow();
    v21[0] = a1;
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
    return sub_1BDB42050((uint64_t)v21, a5, a6, v19);
  }
  else
  {
    v14(v15);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v17, a6);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
    sub_1BDB42018((uint64_t)v12, a5, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v17, a6);
  }
}

void sub_1BDB1D950(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t NSFileCoordinator.withCoordinatedReading<A>(at:options:queue:accessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BDB1D9C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[7];
  v2 = v0[8];
  v3 = v0[6];
  v4 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAF0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BDC1A240;
  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_1BDBFC8D0();
  v8 = objc_msgSend(v6, sel_readingIntentWithURL_options_, v7, v4);

  *(_QWORD *)(v5 + 32) = v8;
  sub_1BDBFD9F8();
  v0[10] = v5;
  v9 = (_QWORD *)swift_allocObject();
  v0[11] = v9;
  v9[2] = v2;
  v9[3] = v3;
  v9[4] = v1;
  swift_retain();
  v10 = swift_task_alloc();
  v0[12] = v10;
  *(_QWORD *)v10 = v0;
  *(_QWORD *)(v10 + 8) = sub_1BDB1DB18;
  v11 = v0[5];
  v12 = v0[2];
  *(_OWORD *)(v10 + 56) = *((_OWORD *)v0 + 4);
  *(_QWORD *)(v10 + 40) = sub_1BDB1DBD4;
  *(_QWORD *)(v10 + 48) = v9;
  *(_QWORD *)(v10 + 24) = v5;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 16) = v12;
  return swift_task_switch();
}

uint64_t sub_1BDB1DB18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB1DB98()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDB1DBD4(unint64_t a1)
{
  uint64_t v1;

  sub_1BDB1DDE4(a1, *(void (**)(void *))(v1 + 24));
}

uint64_t NSFileCoordinator.withCoordinatedWriting<A>(at:options:queue:accessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BDB1DC14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[7];
  v2 = v0[8];
  v3 = v0[6];
  v4 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAF0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BDC1A240;
  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_1BDBFC8D0();
  v8 = objc_msgSend(v6, sel_writingIntentWithURL_options_, v7, v4);

  *(_QWORD *)(v5 + 32) = v8;
  sub_1BDBFD9F8();
  v0[10] = v5;
  v9 = (_QWORD *)swift_allocObject();
  v0[11] = v9;
  v9[2] = v2;
  v9[3] = v3;
  v9[4] = v1;
  swift_retain();
  v10 = swift_task_alloc();
  v0[12] = v10;
  *(_QWORD *)v10 = v0;
  *(_QWORD *)(v10 + 8) = sub_1BDB1DD64;
  v11 = v0[5];
  v12 = v0[2];
  *(_OWORD *)(v10 + 56) = *((_OWORD *)v0 + 4);
  *(_QWORD *)(v10 + 40) = sub_1BDB1DFA8;
  *(_QWORD *)(v10 + 48) = v9;
  *(_QWORD *)(v10 + 24) = v5;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 16) = v12;
  return swift_task_switch();
}

uint64_t sub_1BDB1DD64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1BDB1DDE4(unint64_t a1, void (*a2)(void *))
{
  uint64_t v4;
  id v5;
  void *v6;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BDBFE574())
    goto LABEL_8;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v5 = (id)MEMORY[0x1C3B79954](0, a1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(a1 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease();
    a2(v6);

    return;
  }
  __break(1u);
}

uint64_t sub_1BDB1DEC4()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BDB1DEE8()
{
  unint64_t result;

  result = qword_1EF50CF28;
  if (!qword_1EF50CF28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50CF28);
  }
  return result;
}

uint64_t sub_1BDB1DF24()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDB1DF50(void *a1)
{
  uint64_t *v1;

  return sub_1BDB1D814(a1, v1[3], v1[4], v1[5], v1[6], v1[2]);
}

uint64_t sub_1BDB1DF60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v1 + 24))(*(_QWORD *)(v1 + 40));
  if (v2)
    *a1 = v2;
  return result;
}

void sub_1BDB1DFA8(unint64_t a1)
{
  sub_1BDB1DBD4(a1);
}

uint64_t sub_1BDB1DFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1BDBFDBC0();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1BDBFDBB4();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1BDAC350C(a1, (uint64_t *)&unk_1ED23A600);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BDBFDADC();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

float AudioWaveformGenerator.Sample.value.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void AudioWaveformGenerator.Sample.value.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

void (*AudioWaveformGenerator.Sample.value.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AudioWaveformGenerator.Sample.isRecorded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t AudioWaveformGenerator.Sample.isRecorded.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

void (*AudioWaveformGenerator.Sample.isRecorded.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void __swiftcall AudioWaveformGenerator.Sample.init(value:isRecorded:)(NotesShared::AudioWaveformGenerator::Sample *__return_ptr retstr, Swift::Float value, Swift::Bool isRecorded)
{
  retstr->value = value;
  retstr->isRecorded = isRecorded;
}

uint64_t sub_1BDB1E13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  swift_getKeyPath();
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  if (!v1)
    return swift_bridgeObjectRetain();
  v2 = *(_QWORD *)(v0 + 32);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1BDBFCBF4();
  swift_release();
  v3 = swift_bridgeObjectRetain();
  sub_1BDBC4620(v3);
  return v2;
}

uint64_t sub_1BDB1E2B8()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1BDB1E33C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 24);
  return result;
}

uint64_t sub_1BDB1E3C8()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBE8();
  return swift_release();
}

uint64_t sub_1BDB1E470()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB1E50C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB1E5B0()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  swift_bridgeObjectRetain();
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BDB1E668(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 32) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB1E6CC()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB1E768@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB1E810()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  swift_bridgeObjectRetain();
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t type metadata accessor for AudioWaveformGenerator(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50CFA0);
}

uint64_t sub_1BDB1E8E8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 40) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t AudioWaveformGenerator.__allocating_init(attachment:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v3;
  sub_1BDBFCC18();
  *(_QWORD *)(v2 + 16) = a1;
  return v2;
}

uint64_t AudioWaveformGenerator.init(attachment:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v3;
  sub_1BDBFCC18();
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void sub_1BDB1E9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t KeyPath;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v19 = v0;
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  swift_release();
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    if (qword_1ED23ADD8 != -1)
      swift_once();
    v5 = sub_1BDBFCE34();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED23ADC0);
    v6 = sub_1BDBFCE1C();
    v7 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1BD918000, v6, v7, "Already started. Not generating waveform again.", v8, 2u);
      MEMORY[0x1C3B7B478](v8, -1, -1);
    }

  }
  else
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(&v18 - 2) = v0;
    *((_BYTE *)&v18 - 8) = 1;
    v19 = v0;
    sub_1BDBFCBE8();
    swift_release();
    v10 = objc_msgSend(*(id *)(v0 + 16), sel_audioModel);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, sel_composedAudioAssetURLs);

      if (v12)
      {
        sub_1BDBFC948();
        v13 = sub_1BDBFD9E0();

        v14 = sub_1BDBFDBC0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
        sub_1BDBFDB60();
        swift_retain();
        v15 = sub_1BDBFDB54();
        v16 = (_QWORD *)swift_allocObject();
        v17 = MEMORY[0x1E0DF06E8];
        v16[2] = v15;
        v16[3] = v17;
        v16[4] = v13;
        v16[5] = v1;
        sub_1BDB1DFBC((uint64_t)v4, (uint64_t)&unk_1EF50CF48, (uint64_t)v16);
        swift_release();
      }
    }
  }
}

void sub_1BDB1ECC8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 24) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1BDB1ECD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[11] = a4;
  v5[12] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CF70);
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2C0);
  v5[16] = v7;
  v5[17] = *(_QWORD *)(v7 - 8);
  v5[18] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2C8);
  v5[19] = v8;
  v5[20] = *(_QWORD *)(v8 - 8);
  v5[21] = swift_task_alloc();
  v9 = sub_1BDBFC948();
  v5[22] = v9;
  v5[23] = *(_QWORD *)(v9 - 8);
  v5[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v5[25] = swift_task_alloc();
  v5[26] = sub_1BDBFDB60();
  v5[27] = sub_1BDBFDB54();
  v5[28] = sub_1BDBFDADC();
  v5[29] = v10;
  return swift_task_switch();
}

uint64_t sub_1BDB1EE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 240) = v2;
  v3 = *(_QWORD *)(v0 + 184);
  if (!v2)
  {
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v26 = *(_QWORD *)(v0 + 200);
    v27 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRetain();
    v25(v26, 1, 1, v27);
    goto LABEL_6;
  }
  *(_QWORD *)(v0 + 248) = OBJC_IVAR____TtC11NotesShared22AudioWaveformGenerator___observationRegistrar;
  v4 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 328) = v4;
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v3 + 72);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_DWORD *)(v0 + 332) = *MEMORY[0x1E0DF0A50];
  *(_QWORD *)(v0 + 264) = v5;
  *(_QWORD *)(v0 + 272) = 0;
  v6 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 176);
  v8 = v1 + ((v4 + 32) & ~(unint64_t)v4);
  swift_bridgeObjectRetain();
  v5(v6, v8, v7);
  v9 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56);
  *(_QWORD *)(v0 + 280) = v9;
  v9(v6, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v7) == 1)
  {
LABEL_6:
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 32);
  v12(v10, *(_QWORD *)(v0 + 200), v11);
  type metadata accessor for AudioWaveformSource(0);
  v13 = swift_allocObject();
  *(_QWORD *)(v0 + 288) = v13;
  *(_BYTE *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer) = 0;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_targetSampleRate) = 0x40E7700000000000;
  *(_DWORD *)(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_samplesPerWaveformSlice) = 1920;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_progressThreshold) = 100;
  result = v12(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url, v10, v11);
  if ((*(_BYTE *)(v13 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = *(unsigned int *)(v0 + 332);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 112);
    *(_BYTE *)(v13 + 16) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104))(v19, v15, v20);
    v22 = v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
    v23 = swift_task_alloc();
    *(_QWORD *)(v23 + 16) = v22;
    *(_QWORD *)(v23 + 24) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE50);
    sub_1BDBFDCC8();
    swift_task_dealloc();
    sub_1BDBFDBF0();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
    *(_QWORD *)(v0 + 296) = sub_1BDBFDB54();
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v24;
    *v24 = v0;
    v24[1] = sub_1BDB1F12C;
    return sub_1BDBFDCBC();
  }
  return result;
}

uint64_t sub_1BDB1F12C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_release();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB1F1A8()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t (*v32)();
  uint64_t result;
  void (*v34)(uint64_t, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = (_QWORD *)(v0 + 48);
      *(_QWORD *)(v0 + 48) = MEMORY[0x1E0DEE9D8];
      sub_1BDB22768(0, v2, 0);
      v4 = 0;
      v5 = *(_QWORD **)(v0 + 48);
      v6 = v5[2];
      v7 = v6;
      do
      {
        v8 = *(_DWORD *)(v1 + 4 * v4 + 32);
        *v3 = v5;
        v9 = v5[3];
        v10 = v6 + v4 + 1;
        if (v6 + v4 >= v9 >> 1)
        {
          sub_1BDB22768(v9 > 1, v6 + v4 + 1, 1);
          v5 = (_QWORD *)*v3;
        }
        ++v4;
        v5[2] = v10;
        v11 = &v5[v7];
        *((_DWORD *)v11 + 8) = v8;
        *((_BYTE *)v11 + 36) = 0;
        ++v7;
      }
      while (v2 != v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v14 = *(_QWORD *)(v0 + 96);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 56) = v14;
    sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
    sub_1BDBFCBF4();
    swift_release();
    *(_QWORD *)(v0 + 64) = v14;
    swift_getKeyPath();
    sub_1BDBFCC0C();
    swift_release();
    swift_beginAccess();
    v15 = v5[2];
    v16 = *(_QWORD **)(v14 + 32);
    v17 = v16[2];
    v18 = v17 + v15;
    if (__OFADD__(v17, v15))
    {
      __break(1u);
      goto LABEL_36;
    }
    v19 = *(_QWORD *)(v0 + 96);
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v19 + 32) = v16;
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v18 <= v16[3] >> 1)
    {
      v21 = v5[2];
      if (v21)
      {
LABEL_15:
        v22 = v16[2];
        if ((v16[3] >> 1) - v22 < (uint64_t)v21)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        v23 = &v16[v22 + 4];
        if (v5 + 4 < &v23[v21] && v23 < &v5[v21 + 4])
          return sub_1BDBFE5A4();
        memcpy(v23, v5 + 4, 8 * v21);
        if (v21 >= v15)
        {
          v25 = v16[2];
          v26 = __OFADD__(v25, v21);
          v27 = v25 + v21;
          if (!v26)
          {
            v16[2] = v27;
LABEL_29:
            v30 = *(_QWORD *)(v0 + 96);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v30 + 32) = v16;
            swift_endAccess();
            *(_QWORD *)(v0 + 80) = v30;
            swift_getKeyPath();
            sub_1BDBFCC00();
            swift_release();
            *(_QWORD *)(v0 + 312) = sub_1BDBFDB54();
            v31 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 320) = v31;
            v32 = sub_1BDB1F7F8;
LABEL_30:
            *v31 = v0;
            v31[1] = v32;
            return sub_1BDBFDCBC();
          }
LABEL_38:
          __break(1u);
          return sub_1BDBFE5A4();
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      v28 = *(_QWORD *)(v0 + 96);
      if (v17 <= v18)
        v29 = v17 + v15;
      else
        v29 = v17;
      v16 = sub_1BDBCC384(isUniquelyReferenced_nonNull_native, v29, 1, v16);
      *(_QWORD *)(v28 + 32) = v16;
      v21 = v5[2];
      if (v21)
        goto LABEL_15;
    }
    if (!v15)
      goto LABEL_29;
    goto LABEL_36;
  }
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 272) + 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  swift_release();
  if (v13 == v12)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 280))(*(_QWORD *)(v0 + 200), 1, 1, *(_QWORD *)(v0 + 176));
LABEL_32:
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 264);
  v35 = *(_QWORD *)(v0 + 272) + 1;
  *(_QWORD *)(v0 + 272) = v35;
  v36 = *(_QWORD *)(v0 + 200);
  v37 = *(_QWORD *)(v0 + 176);
  v38 = *(_QWORD *)(v0 + 184);
  v34(v36, *(_QWORD *)(v0 + 88)+ ((*(unsigned __int8 *)(v0 + 328) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 328))+ *(_QWORD *)(v0 + 256) * v35, v37);
  v39 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56);
  *(_QWORD *)(v0 + 280) = v39;
  v39(v36, 0, 1, v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
    goto LABEL_32;
  v40 = *(_QWORD *)(v0 + 192);
  v41 = *(_QWORD *)(v0 + 176);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 32);
  v42(v40, *(_QWORD *)(v0 + 200), v41);
  type metadata accessor for AudioWaveformSource(0);
  v43 = swift_allocObject();
  *(_QWORD *)(v0 + 288) = v43;
  *(_BYTE *)(v43 + 16) = 0;
  *(_QWORD *)(v43 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer) = 0;
  *(_QWORD *)(v43 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_targetSampleRate) = 0x40E7700000000000;
  *(_DWORD *)(v43 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_samplesPerWaveformSlice) = 1920;
  *(_QWORD *)(v43 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_progressThreshold) = 100;
  result = v42(v43 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url, v40, v41);
  if ((*(_BYTE *)(v43 + 16) & 1) == 0)
  {
    v44 = *(unsigned int *)(v0 + 332);
    v46 = *(_QWORD *)(v0 + 136);
    v45 = *(_QWORD *)(v0 + 144);
    v48 = *(_QWORD *)(v0 + 120);
    v47 = *(_QWORD *)(v0 + 128);
    v49 = *(_QWORD *)(v0 + 104);
    v50 = *(_QWORD *)(v0 + 112);
    *(_BYTE *)(v43 + 16) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 104))(v48, v44, v49);
    v51 = v43 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
    v52 = swift_task_alloc();
    *(_QWORD *)(v52 + 16) = v51;
    *(_QWORD *)(v52 + 24) = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE50);
    sub_1BDBFDCC8();
    swift_task_dealloc();
    sub_1BDBFDBF0();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    *(_QWORD *)(v0 + 296) = sub_1BDBFDB54();
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v31;
    v32 = sub_1BDB1F12C;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB1F7F8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_release();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB1F874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB1F914()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB1F948(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BDAC9D90;
  return sub_1BDB1ECD8(a1, v4, v5, v7, v6);
}

uint64_t AudioWaveformSource.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_targetSampleRate) = 0x40E7700000000000;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_samplesPerWaveformSlice) = 1920;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_progressThreshold) = 100;
  v3 = v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
  v4 = sub_1BDBFC948();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t sub_1BDB1FA6C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  int *v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22768(0, v1, 0);
    v2 = v12;
    v4 = (int *)(a1 + 32);
    v5 = *(_QWORD *)(v12 + 16);
    v6 = 8 * v5;
    do
    {
      v7 = *v4;
      v8 = *(_QWORD *)(v12 + 24);
      v9 = v5 + 1;
      if (v5 >= v8 >> 1)
        sub_1BDB22768(v8 > 1, v5 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9;
      v10 = v12 + v6;
      *(_DWORD *)(v10 + 32) = v7;
      *(_BYTE *)(v10 + 36) = 1;
      v6 += 8;
      ++v4;
      v5 = v9;
      --v1;
    }
    while (v1);
  }
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50CF38, type metadata accessor for AudioWaveformGenerator, (uint64_t)&protocol conformance descriptor for AudioWaveformGenerator);
  sub_1BDBFCBF4();
  swift_release();
  swift_getKeyPath();
  sub_1BDBFCC0C();
  swift_release();
  swift_beginAccess();
  sub_1BDBC4620(v2);
  swift_endAccess();
  swift_getKeyPath();
  sub_1BDBFCC00();
  return swift_release();
}

uint64_t AudioWaveformGenerator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC11NotesShared22AudioWaveformGenerator___observationRegistrar;
  v2 = sub_1BDBFCC24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AudioWaveformGenerator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC11NotesShared22AudioWaveformGenerator___observationRegistrar;
  v2 = sub_1BDBFCC24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t AudioWaveformSource.init(url:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_targetSampleRate) = 0x40E7700000000000;
  *(_DWORD *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_samplesPerWaveformSlice) = 1920;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_progressThreshold) = 100;
  v3 = v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
  v4 = sub_1BDBFC948();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_1BDB1FD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CF70);
  result = MEMORY[0x1E0C80A78](v1);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_BYTE *)(v0 + 16) = 1;
    v5 = (*(uint64_t (**)(char *, _QWORD))(v4 + 104))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DF0A50]);
    MEMORY[0x1E0C80A78](v5);
    *(&v7 - 2) = v6;
    *(&v7 - 1) = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE50);
    return sub_1BDBFDCC8();
  }
  return result;
}

uint64_t sub_1BDB1FE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v23 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D288);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFDB78();
  v14 = sub_1BDBFDBC0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v15 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v4);
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = (v9 + *(unsigned __int8 *)(v5 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v16, v10, v7);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v17, v21, v15);
  *(_QWORD *)(v18 + ((v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23;
  swift_retain();
  sub_1BDB20628((uint64_t)v13, (uint64_t)&unk_1EF50D298, v18);
  swift_release();
  return sub_1BDAC350C((uint64_t)v13, (uint64_t *)&unk_1ED23A600);
}

uint64_t sub_1BDB20070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2A0);
  v6[13] = swift_task_alloc();
  v7 = sub_1BDBFC774();
  v6[14] = v7;
  v6[15] = *(_QWORD *)(v7 - 8);
  v6[16] = swift_task_alloc();
  v8 = sub_1BDBFCE10();
  v6[17] = v8;
  v6[18] = *(_QWORD *)(v8 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D288);
  v6[21] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[22] = v10;
  v6[23] = *(_QWORD *)(v10 + 64);
  v6[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB20160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(uint64_t, uint64_t);

  sub_1BDBFC8F4();
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v0 + 88), v2);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v5 + v4, v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  v7 = (void *)*MEMORY[0x1E0C998E0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C998E0];
  v8 = v7;
  sub_1BDAEDA78(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1BDBFC8AC();
  v10 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  sub_1BDBFC75C();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v14, 1, v10) == 1)
  {
    sub_1BDAC350C(*(_QWORD *)(v0 + 104), &qword_1EF50D2A0);
LABEL_7:
    sub_1BDB21354(*(_QWORD *)(v0 + 80), sub_1BDB248E4, v5);
    goto LABEL_5;
  }
  v15 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 136);
  v16 = *(_QWORD *)(v0 + 144);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v16 + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 104), v17);
  sub_1BDBFCDF8();
  v18 = sub_1BDBFCE04();
  v19 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v19(v15, v17);
  if ((v18 & 1) == 0)
  {
    v19(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
    goto LABEL_7;
  }
  sub_1BDB207B8(*(_QWORD *)(v0 + 80), (void (*)(char *))sub_1BDB248E4, v5);
  v19(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
LABEL_5:
  *(_QWORD *)(v0 + 72) = 0;
  sub_1BDBFDCA4();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB2057C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D288);
  sub_1BDBFDC98();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BDB20628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDB24814(a1, (uint64_t)v8);
  v9 = sub_1BDBFDBC0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BDAC350C((uint64_t)v8, (uint64_t *)&unk_1ED23A600);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1BDBFDADC();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BDBFDBB4();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void sub_1BDB207B8(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  char **v14;
  id v15;
  double v16;
  double v17;
  unint64_t v18;
  char **v19;
  void (*v20)(char *);
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  NSObject *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  BOOL v40;
  int v41;
  char *v42;
  id v43;
  unsigned int v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  void *v50;
  NSObject *v51;
  id v52;
  void (*v53)(char *);
  id v54;
  id v55;
  id v56;
  id v57;
  float **v58;
  float *v59;
  vDSP_Length v60;
  int v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  id v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  _QWORD *v74;
  char *v75;
  id v76;
  void (*v77)(char *);
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  _BOOL4 v81;
  NSObject *v82;
  uint8_t *v83;
  _QWORD *v84;
  id v85;
  id v86;
  void (*v87)(char *);
  char *v88;
  id v89;
  _QWORD v90[2];
  void (*v91)(char *);
  id v92;
  char *v93;
  id v94;
  NSObject *v95;
  id aBlock[5];
  void *v97;
  uint64_t v98;

  v98 = *MEMORY[0x1E0C80C00];
  v7 = sub_1BDBFC948();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a1);
  v11 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  v12 = sub_1BDB223EC((uint64_t)v9);
  if (v3)
    return;
  v13 = v12;
  v90[0] = 0;
  v14 = &selRef_randomObject_;
  v15 = objc_msgSend(v12, sel_processingFormat);
  objc_msgSend(v15, sel_sampleRate);
  v17 = v16;

  v18 = 0x1E0C89000;
  v19 = &selRef_randomObject_;
  v90[1] = a3;
  v91 = a2;
  v20 = a2;
  if (v17 == 48000.0)
  {
    v21 = 0;
    v92 = 0;
    goto LABEL_14;
  }
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AA8]), sel_initStandardFormatWithSampleRate_channels_, 1, 48000.0);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v13, sel_processingFormat);
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89A80]), sel_initFromFormat_toFormat_, v24, v23);

    if (v25)
    {
      objc_msgSend(v25, sel_setSampleRateConverterQuality_, 0x7FFFFFFFFFFFFFFFLL);
      v26 = objc_allocWithZone(MEMORY[0x1E0C89AC0]);
      v92 = v25;
      v27 = v25;
      v21 = objc_msgSend(v26, sel_initWithPCMFormat_frameCapacity_, v23, 1920);

      v18 = 0x1E0C89000;
      goto LABEL_14;
    }

    v18 = 0x1E0C89000uLL;
  }
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v28 = sub_1BDBFCE34();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED23ADC0);
  v29 = v13;
  swift_retain();
  v30 = sub_1BDBFCE1C();
  v31 = sub_1BDBFDEE4();
  v95 = v30;
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v32 = 138412546;
    v34 = objc_msgSend(v29, sel_processingFormat);
    aBlock[0] = v34;
    v19 = &selRef_randomObject_;
    sub_1BDBFE100();
    *v33 = v34;
    v14 = &selRef_randomObject_;

    *(_WORD *)(v32 + 12) = 2048;
    aBlock[0] = (id)0x40E7700000000000;
    sub_1BDBFE100();
    swift_release();
    v35 = v95;
    _os_log_impl(&dword_1BD918000, v95, v31, "AudioWaveformSource: Failed to create AVAudioConverter from %@ to standard format with sample rate: %f; will conti"
      "nue without sample rate conversion",
      (uint8_t *)v32,
      0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v33, -1, -1);
    v36 = v32;
    v18 = 0x1E0C89000;
    MEMORY[0x1C3B7B478](v36, -1, -1);

  }
  else
  {

    swift_release();
  }
  v21 = 0;
  v92 = 0;
  v20 = v91;
LABEL_14:
  v37 = objc_msgSend(v13, v14[324]);
  v38 = objc_msgSend(objc_allocWithZone(*(Class *)(v18 + 2752)), v19[312], v37, 1920);

  if (!v38)
  {
    sub_1BDB2375C();
    swift_allocError();
    *v64 = 1;
    swift_willThrow();

LABEL_45:
    return;
  }
  v39 = objc_msgSend(v13, sel_framePosition);
  if ((uint64_t)v39 >= (uint64_t)objc_msgSend(v13, sel_length))
  {
    v42 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_42:
    if (*((_QWORD *)v42 + 2))
    {
      v20(v42);

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

    }
    goto LABEL_45;
  }
  if (v92)
    v40 = v21 == 0;
  else
    v40 = 1;
  v41 = v40;
  LODWORD(v95) = v41;
  v42 = (char *)MEMORY[0x1E0DEE9D8];
  while ((v95 & 1) != 0)
  {
    aBlock[0] = 0;
    v44 = objc_msgSend(v13, sel_readIntoBuffer_error_, v38, aBlock);
    v45 = aBlock[0];
    if (!v44)
    {
      v65 = aBlock[0];
      swift_bridgeObjectRelease();
      sub_1BDBFC87C();

      swift_willThrow();
      return;
    }
    if (v21)
    {
      v46 = aBlock[0];
      v47 = v21;
    }
    else
    {
      v47 = v38;
      v56 = v45;
    }
LABEL_31:
    v57 = v21;
    v58 = (float **)objc_msgSend(v47, sel_floatChannelData);
    if (v58)
    {
      v59 = *v58;
      v60 = objc_msgSend(v47, sel_frameLength);
      vDSP_vabs(v59, 1, v59, 1, v60);
      LODWORD(aBlock[0]) = 2143289344;
      vDSP_maxv(v59, 1, (float *)aBlock, v60);
      v61 = (int)aBlock[0];
    }
    else
    {
      v61 = 0;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_1BDBCC490(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
    v63 = *((_QWORD *)v42 + 2);
    v62 = *((_QWORD *)v42 + 3);
    if (v63 >= v62 >> 1)
      v42 = sub_1BDBCC490((char *)(v62 > 1), v63 + 1, 1, v42);
    *((_QWORD *)v42 + 2) = v63 + 1;
    *(_DWORD *)&v42[4 * v63 + 32] = v61;
    if (v63 >= 0x64)
    {
      v20(v42);
      swift_bridgeObjectRelease();
      v42 = (char *)MEMORY[0x1E0DEE9D8];
    }

    v43 = objc_msgSend(v13, sel_framePosition);
    if ((uint64_t)v43 >= (uint64_t)objc_msgSend(v13, sel_length))
      goto LABEL_42;
  }
  v93 = v42;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v13;
  *(_QWORD *)(v48 + 24) = v38;
  aBlock[4] = sub_1BDB24650;
  v97 = (void *)v48;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1BDB21300;
  aBlock[3] = &block_descriptor_4;
  v49 = _Block_copy(aBlock);
  v94 = v97;
  v50 = v13;
  v51 = v13;
  v52 = v92;
  v47 = v21;
  v53 = (void (*)(char *))v38;
  swift_release();
  aBlock[0] = 0;
  v54 = objc_msgSend(v52, sel_convertToBuffer_error_withInputFromBlock_, v47, aBlock, v49);
  _Block_release(v49);
  v55 = aBlock[0];
  if (v54 != (id)3)
  {

    v13 = v50;
    v20 = v91;
    v42 = v93;
    goto LABEL_31;
  }
  v91 = v53;
  v92 = v52;
  v94 = v47;
  v95 = v51;
  swift_bridgeObjectRelease();
  v66 = (char *)v55;
  v67 = qword_1ED23ADD8;
  if (v66)
  {
    v93 = v66;
    v68 = v66;
    if (v67 != -1)
      swift_once();
    v69 = sub_1BDBFCE34();
    __swift_project_value_buffer(v69, (uint64_t)qword_1ED23ADC0);
    v70 = v68;
    v71 = sub_1BDBFCE1C();
    v72 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc();
      v74 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v73 = 138412290;
      aBlock[0] = v70;
      v75 = v70;
      sub_1BDBFE100();
      *v74 = v93;

      _os_log_impl(&dword_1BD918000, v71, v72, "AudioWaveformSource: Failed to convert buffer: %@", v73, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v74, -1, -1);
      MEMORY[0x1C3B7B478](v73, -1, -1);
    }
    else
    {

    }
    v87 = v91;
    v86 = v92;

    v88 = v70;
    swift_willThrow();
    v89 = v94;

  }
  else
  {
    v77 = v91;
    v76 = v92;
    if (qword_1ED23ADD8 != -1)
      swift_once();
    v78 = sub_1BDBFCE34();
    __swift_project_value_buffer(v78, (uint64_t)qword_1ED23ADC0);
    v79 = sub_1BDBFCE1C();
    v80 = sub_1BDBFDEE4();
    v81 = os_log_type_enabled(v79, v80);
    v82 = v95;
    if (v81)
    {
      v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v83 = 0;
      _os_log_impl(&dword_1BD918000, v79, v80, "AudioWaveformSource: Failed to convert buffer", v83, 2u);
      MEMORY[0x1C3B7B478](v83, -1, -1);
    }

    sub_1BDB2375C();
    swift_allocError();
    *v84 = 2;
    swift_willThrow();
    v85 = v94;

  }
}

void *sub_1BDB21208(uint64_t a1, _QWORD *a2, id a3, void *a4)
{
  void *v4;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v13[2];

  v4 = a4;
  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v13[0] = 0;
  if (objc_msgSend(a3, sel_readIntoBuffer_frameCount_error_, a4, a1, v13))
  {
    v7 = v13[0];
    v8 = objc_msgSend(a3, sel_framePosition);
    *a2 = 2 * ((uint64_t)v8 >= (uint64_t)objc_msgSend(a3, sel_length));
    v9 = v4;
  }
  else
  {
    v10 = v13[0];
    v11 = (void *)sub_1BDBFC87C();

    swift_willThrow();
    return 0;
  }
  return v4;
}

id sub_1BDB21300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v6 = (void *)v5(a2, a3);
  swift_release();
  return v6;
}

void sub_1BDB21354(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  char *v38;
  id v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint8_t *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  _QWORD *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  _QWORD *v57;
  uint64_t v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  float v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  id v72;
  uint8_t *v73;
  _QWORD *v74;
  id v75;
  _QWORD *v76;
  _QWORD v77[3];
  id v78;
  _QWORD *v79;
  id v80;
  id v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  _QWORD *v89;
  uint8_t *v90;
  uint64_t v91;
  id v92[47];

  v87 = a3;
  v88 = a2;
  v92[45] = *(id *)MEMORY[0x1E0C80C00];
  v86 = sub_1BDBFDF38();
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v85 = (char *)v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BF98);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(inited + 32) = sub_1BDBFD6F8();
  *(_QWORD *)(inited + 40) = v5;
  v6 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 48) = 1;
  sub_1BDB0ABBC(inited);
  v7 = objc_allocWithZone(MEMORY[0x1E0C8B3C0]);
  v8 = (void *)sub_1BDBFC8D0();
  v9 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_initWithURL_options_, v8, v9);

  v11 = objc_msgSend(v10, sel_tracksWithMediaType_, *MEMORY[0x1E0C8A7A0]);
  sub_1BDB23720();
  v12 = sub_1BDBFD9E0();

  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AA8]), sel_initStandardFormatWithSampleRate_channels_, 1, 48000.0);
  if (!v13)
    __break(1u);
  v14 = v13;
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BDC1A250;
  *(_QWORD *)(v15 + 32) = sub_1BDBFD6F8();
  *(_QWORD *)(v15 + 40) = v16;
  v17 = MEMORY[0x1E0DEE0F8];
  *(_QWORD *)(v15 + 72) = MEMORY[0x1E0DEE0F8];
  *(_DWORD *)(v15 + 48) = 1819304813;
  *(_QWORD *)(v15 + 80) = sub_1BDBFD6F8();
  *(_QWORD *)(v15 + 88) = v18;
  objc_msgSend(v14, sel_sampleRate);
  *(_QWORD *)(v15 + 120) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v15 + 96) = v19;
  *(_QWORD *)(v15 + 128) = sub_1BDBFD6F8();
  *(_QWORD *)(v15 + 136) = v20;
  v21 = objc_msgSend(v14, sel_channelCount);
  *(_QWORD *)(v15 + 168) = v17;
  *(_DWORD *)(v15 + 144) = v21;
  *(_QWORD *)(v15 + 176) = sub_1BDBFD6F8();
  *(_QWORD *)(v15 + 184) = v22;
  *(_QWORD *)(v15 + 216) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v15 + 192) = 32;
  *(_QWORD *)(v15 + 224) = sub_1BDBFD6F8();
  *(_QWORD *)(v15 + 232) = v23;
  *(_QWORD *)(v15 + 264) = v6;
  *(_BYTE *)(v15 + 240) = 1;
  sub_1BDB0ABBC(v15);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    v25 = v31 <= 1;
    if (v31 == 1)
      goto LABEL_4;
  }
  else
  {
    v24 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v25 = v24 <= 1;
    if (v24 == 1)
    {
LABEL_4:
      if ((v12 & 0xC000000000000001) != 0)
      {
        v26 = (id)MEMORY[0x1C3B79954](0, v12);
        goto LABEL_7;
      }
      if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v26 = *(id *)(v12 + 32);
LABEL_7:
        v27 = v26;
        swift_bridgeObjectRelease();
        v28 = objc_allocWithZone(MEMORY[0x1E0C8B000]);
        v29 = (void *)sub_1BDBFD5B4();
        swift_bridgeObjectRelease();
        v30 = objc_msgSend(v28, sel_initWithTrack_outputSettings_, v27, v29);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_61;
    }
  }
  if (v25)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED23ADD8 == -1)
    {
LABEL_27:
      v48 = sub_1BDBFCE34();
      __swift_project_value_buffer(v48, (uint64_t)qword_1ED23ADC0);
      v49 = sub_1BDBFCE1C();
      v50 = sub_1BDBFDEE4();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        _os_log_impl(&dword_1BD918000, v49, v50, "AudioWaveformSource: Source asset has no audio tracks", v51, 2u);
        MEMORY[0x1C3B7B478](v51, -1, -1);
      }

      sub_1BDB2375C();
      swift_allocError();
      *v52 = 3;
      swift_willThrow();

      goto LABEL_57;
    }
LABEL_61:
    swift_once();
    goto LABEL_27;
  }
  v32 = objc_allocWithZone(MEMORY[0x1E0C8AFE8]);
  v29 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v27 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v32, sel_initWithAudioTracks_audioSettings_, v29, v27);
LABEL_11:
  v33 = v30;

  v34 = objc_allocWithZone(MEMORY[0x1E0C8AFD0]);
  v92[0] = 0;
  v10 = v10;
  v35 = objc_msgSend(v34, sel_initWithAsset_error_, v10, v92);
  if (!v35)
  {
    v47 = v92[0];
    sub_1BDBFC87C();

    swift_willThrow();
LABEL_50:

    return;
  }
  v36 = v35;
  v37 = v92[0];

  if ((objc_msgSend(v36, sel_canAddOutput_, v33) & 1) == 0)
  {
    if (qword_1ED23ADD8 != -1)
      swift_once();
    v53 = sub_1BDBFCE34();
    __swift_project_value_buffer(v53, (uint64_t)qword_1ED23ADC0);
    v54 = sub_1BDBFCE1C();
    v55 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_1BD918000, v54, v55, "AudioWaveformSource: Can't add AVAssetReaderOutput", v56, 2u);
      MEMORY[0x1C3B7B478](v56, -1, -1);
    }

    sub_1BDB2375C();
    swift_allocError();
    *v57 = 4;
    swift_willThrow();

    goto LABEL_57;
  }
  objc_msgSend(v36, sel_addOutput_, v33);
  if (!objc_msgSend(v36, sel_startReading))
  {
    if (qword_1ED23ADD8 != -1)
      swift_once();
    v58 = sub_1BDBFCE34();
    __swift_project_value_buffer(v58, (uint64_t)qword_1ED23ADC0);
    v59 = v36;
    v60 = sub_1BDBFCE1C();
    v61 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v89 = (_QWORD *)swift_slowAlloc();
      v90 = v62;
      *(_DWORD *)v62 = 138412290;
      v63 = objc_msgSend(v59, sel_error);
      v88 = v59;
      if (v63)
      {
        v64 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v92[0] = v64;
        sub_1BDBFE100();
      }
      else
      {
        v92[0] = 0;
        sub_1BDBFE100();
        v64 = 0;
      }
      v71 = v89;
      *v89 = v64;
      v72 = v88;

      v73 = v90;
      _os_log_impl(&dword_1BD918000, v60, v61, "AudioWaveformSource: AVAssetReader failed to start with error: %@", v90, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
      swift_arrayDestroy();
      v74 = v71;
      v59 = v72;
      MEMORY[0x1C3B7B478](v74, -1, -1);
      MEMORY[0x1C3B7B478](v73, -1, -1);
    }
    else
    {

    }
    v75 = objc_msgSend(v59, sel_error);
    sub_1BDB2375C();
    swift_allocError();
    *v76 = v75;
    swift_willThrow();

LABEL_57:
    return;
  }
  v38 = (char *)MEMORY[0x1E0DEE9D8];
  v92[0] = (id)MEMORY[0x1E0DEE9D8];
  v39 = objc_msgSend(v33, sel_copyNextSampleBuffer);
  if (!v39)
  {
LABEL_40:
    v65 = *(void **)((char *)v89 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer);
    if (v65)
    {
      v66 = v65;
      if (objc_msgSend(v66, sel_frameLength))
      {
        v67 = sub_1BDB24504(v66);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v38 = sub_1BDBCC490(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
        v69 = *((_QWORD *)v38 + 2);
        v68 = *((_QWORD *)v38 + 3);
        if (v69 >= v68 >> 1)
          v38 = sub_1BDBCC490((char *)(v68 > 1), v69 + 1, 1, v38);
        *((_QWORD *)v38 + 2) = v69 + 1;
        *(float *)&v38[4 * v69 + 32] = v67;
        objc_msgSend(v66, sel_setFrameLength_, 0);
      }

      if (!*((_QWORD *)v38 + 2))
        goto LABEL_49;
    }
    else if (!*((_QWORD *)v38 + 2))
    {
      goto LABEL_49;
    }
    v70 = swift_bridgeObjectRetain();
    ((void (*)(uint64_t))v88)(v70);
    swift_bridgeObjectRelease();
LABEL_49:

    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  v40 = v39;
  v83 = (id)*MEMORY[0x1E0C9AE00];
  v82 = MEMORY[0x1E0DEE9C0] + 8;
  while (1)
  {
    v41 = sub_1BDBFDF14();
    if (v41)
      break;

LABEL_18:
    v40 = objc_msgSend(v33, sel_copyNextSampleBuffer);
    if (!v40)
      goto LABEL_40;
  }
  v81 = v10;
  v79 = v77;
  MEMORY[0x1E0C80A78](v41);
  v77[2] = &v77[-6];
  v80 = v14;
  v42 = v89;
  v77[-4] = v14;
  v77[-3] = v42;
  v77[-2] = v92;
  v91 = MEMORY[0x1E0DEE9D8];
  v77[1] = sub_1BDAC31B0(&qword_1EF50C898, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF218], MEMORY[0x1E0DEF228]);
  v78 = v83;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8A0);
  sub_1BDB245D8();
  v44 = v85;
  v43 = v86;
  sub_1BDBFE1B4();
  v45 = v90;
  sub_1BDBFDF08();
  v90 = v45;
  if (!v45)
  {
    (*(void (**)(char *, uint64_t))(v84 + 8))(v44, v43);

    v38 = (char *)v92[0];
    if (*((_QWORD *)v92[0] + 2) < 0x65uLL)
    {

    }
    else
    {
      v46 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t))v88)(v46);
      swift_bridgeObjectRelease_n();

      v38 = (char *)MEMORY[0x1E0DEE9D8];
      v92[0] = (id)MEMORY[0x1E0DEE9D8];
    }
    v14 = v80;
    v10 = v81;
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v44, v43);

  swift_bridgeObjectRelease();
}

void sub_1BDB21F40(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  id v4;
  char *v5;

  v3 = a3;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_bufferListNoCopy_deallocator_, v3, sub_1BDBFD578(), 0);

  if (v4)
  {
    v5 = sub_1BDB21FD4(v4);
    sub_1BDBC4768((uint64_t)v5);

  }
}

char *sub_1BDB21FD4(id a1)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  unsigned int v6;
  char *v7;
  char **v8;
  BOOL v9;
  void *v10;
  id v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unsigned int v22;
  id v23;
  id v24;
  unsigned int *v25;
  int64_t v26;
  unsigned int v27;
  unsigned int v28;
  float **v29;
  float *v30;
  vDSP_Length v31;
  float v32;
  unint64_t v33;
  unint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  float __C;
  uint64_t v40;

  v2 = a1;
  v40 = *MEMORY[0x1E0C80C00];
  v38 = OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer))
  {
    v3 = objc_msgSend(a1, sel_format);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v3, 1920);

    v5 = *(void **)(v37 + v38);
    *(_QWORD *)(v37 + v38) = v4;

  }
  v6 = 0;
  v7 = (char *)MEMORY[0x1E0DEE9D8];
  v8 = &selRef_randomObject_;
  while (v6 < objc_msgSend(v2, v8[268]))
  {
    v10 = *(void **)(v37 + v38);
    if (!v10)
      break;
    if (v6 >= 0xFFFFF880)
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
    }
    v11 = v10;
    v12 = objc_msgSend(v2, v8[268]);
    v13 = v12 - v6;
    if (v12 < v6)
      goto LABEL_32;
    v14 = objc_msgSend(v11, v8[268]);
    v15 = 1920 - v14;
    if (v14 > 0x780)
      goto LABEL_33;
    if (v13 >= v6 + 1920)
      v16 = v6 + 1920;
    else
      v16 = v13;
    if (v15 >= v16)
      v17 = v16;
    else
      v17 = v15;
    v18 = (uint64_t *)objc_msgSend(v11, sel_floatChannelData);
    if (v18)
    {
      v19 = *v18;
      v20 = (uint64_t *)objc_msgSend(v2, sel_floatChannelData);
      if (v20)
      {
        v36 = v7;
        v21 = *v20;
        v22 = objc_msgSend(v11, v8[268]);
        v23 = v2;
        v24 = objc_msgSend(v2, sel_format);
        v25 = (unsigned int *)objc_msgSend(v24, sel_streamDescription);

        v26 = v25[6] * (unint64_t)v17;
        if ((v17 * (unsigned __int128)v25[6]) >> 64 != v26 >> 63)
          goto LABEL_36;
        memcpy((void *)(v19 + 4 * v22), (const void *)(v21 + 4 * v6), v26);
        v2 = v23;
        v7 = v36;
        v8 = &selRef_randomObject_;
      }
    }
    v27 = objc_msgSend(v11, v8[268]);
    if (__CFADD__(v27, (_DWORD)v17))
      goto LABEL_34;
    objc_msgSend(v11, sel_setFrameLength_, v27 + v17);
    v28 = objc_msgSend(v11, v8[268]);
    if (v28 == objc_msgSend(v11, sel_frameCapacity))
    {
      v29 = (float **)objc_msgSend(v11, sel_floatChannelData);
      if (v29)
      {
        v30 = *v29;
        v31 = objc_msgSend(v11, v8[268]);
        vDSP_vabs(v30, 1, v30, 1, v31);
        __C = NAN;
        vDSP_maxv(v30, 1, &__C, v31);
        v32 = __C;
      }
      else
      {
        v32 = 0.0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1BDBCC490(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v8 = &selRef_randomObject_;
      v34 = *((_QWORD *)v7 + 2);
      v33 = *((_QWORD *)v7 + 3);
      if (v34 >= v33 >> 1)
        v7 = sub_1BDBCC490((char *)(v33 > 1), v34 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v34 + 1;
      *(float *)&v7[4 * v34 + 32] = v32;
      objc_msgSend(v11, sel_setFrameLength_, 0);
    }

    v9 = __CFADD__(v6, (_DWORD)v17);
    v6 += v17;
    if (v9)
      goto LABEL_35;
  }
  return v7;
}

uint64_t AudioWaveformSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
  v2 = sub_1BDBFC948();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t AudioWaveformSource.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
  v2 = sub_1BDBFC948();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_1BDB223EC(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v2 = v1;
  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_1BDBFC8D0();
  v13[0] = 0;
  v5 = objc_msgSend(v2, sel_initForReading_error_, v4, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_1BDBFC948();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_1BDBFC87C();

    swift_willThrow();
    v11 = sub_1BDBFC948();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t sub_1BDB224F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB22AA8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB22510(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB22D6C(a1, a2, a3, (_QWORD *)*v3, &qword_1EF50D238, (uint64_t *)&unk_1EF50CC50);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB2253C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB22C10(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB22558(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB22D6C(a1, a2, a3, (_QWORD *)*v3, &qword_1EF50D2D8, &qword_1EF50C930);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22584(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB22D6C(a1, a2, a3, (_QWORD *)*v3, &qword_1EF50D230, &qword_1EF510000);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB225B0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB22EF8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB225CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB230A0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB225E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB24324(a1, a2, a3, (_QWORD *)*v3, &qword_1EF50D2F8, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22614(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB23240(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22630(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB24324(a1, a2, a3, (_QWORD *)*v3, &qword_1EF50D2E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB2265C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB233C8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22678(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB24324(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1EF5100D0, type metadata accessor for NoteEditActivityEvent);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB226A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB235C4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB226C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB237A0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB226DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB23908(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB226F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB23A70(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22714(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB23C14(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB22730(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB23D70(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB2274C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB23EDC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB22768(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BDB24044(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BDB22784(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB1FE7C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BDB2278C()
{
  return type metadata accessor for AudioWaveformGenerator(0);
}

uint64_t sub_1BDB22794()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCC24();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AudioWaveformGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioWaveformGenerator.samples.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of AudioWaveformGenerator.__allocating_init(attachment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of AudioWaveformGenerator.startGenerating()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of AudioWaveformGenerator.appendRecordedSamples(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AudioWaveformGenerator.Sample(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioWaveformGenerator.Sample(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioWaveformGenerator.Sample()
{
  return &type metadata for AudioWaveformGenerator.Sample;
}

uint64_t sub_1BDB2292C()
{
  return type metadata accessor for AudioWaveformSource(0);
}

uint64_t type metadata accessor for AudioWaveformSource(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50D128);
}

uint64_t sub_1BDB22948()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFC948();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AudioWaveformSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioWaveformSource.__allocating_init(url:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of AudioWaveformSource.startGenerating()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1BDB22A08(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB24324(a1, a2, a3, (_QWORD *)*v3, &qword_1EF510100, type metadata accessor for TranscriptViewModelSegment);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22A34(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB2419C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22A50(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB24324(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1EF5100A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22A7C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BDB24324(a1, a2, a3, (_QWORD *)*v3, &qword_1EF50D268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
  *v3 = result;
  return result;
}

uint64_t sub_1BDB22AA8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB22C10(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB22D6C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB22EF8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D240);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8)
      memmove(v10 + 4, a4 + 4, 56 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D248);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB230A0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF510120);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB23240(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50FEC0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510150);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB233C8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D300);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D308) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D308) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB235B0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BDB24324(a1, a2, a3, a4, (uint64_t *)&unk_1EF5100D0, type metadata accessor for NoteEditActivityEvent);
}

uint64_t sub_1BDB235C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

unint64_t sub_1BDB23720()
{
  unint64_t result;

  result = qword_1EF50D250;
  if (!qword_1EF50D250)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50D250);
  }
  return result;
}

unint64_t sub_1BDB2375C()
{
  unint64_t result;

  result = qword_1EF50D258;
  if (!qword_1EF50D258)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1A3B8, &type metadata for AudioWaveformSource.Error);
    atomic_store(result, (unint64_t *)&qword_1EF50D258);
  }
  return result;
}

uint64_t sub_1BDB237A0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B948);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB23908(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB23A70(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D270);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D278);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB23C14(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB23D70(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D260);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB23EDC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB24044(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 8 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB2419C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100B0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D280);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB24324(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

float sub_1BDB24504(void *a1)
{
  float **v2;
  float *v3;
  vDSP_Length v4;
  float __C;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v2 = (float **)objc_msgSend(a1, sel_floatChannelData);
  if (!v2)
    return 0.0;
  v3 = *v2;
  v4 = objc_msgSend(a1, sel_frameLength);
  vDSP_vabs(v3, 1, v3, 1, v4);
  __C = NAN;
  vDSP_maxv(v3, 1, &__C, v4);
  return __C;
}

void sub_1BDB245BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BDB21F40(a1, a2, *(void **)(v2 + 16));
}

unint64_t sub_1BDB245D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50C8A8;
  if (!qword_1EF50C8A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50C8A0);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50C8A8);
  }
  return result;
}

uint64_t sub_1BDB24624()
{
  uint64_t v0;

  return swift_deallocObject();
}

void *sub_1BDB24650(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1BDB21208(a1, a2, *(id *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1BDB24670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1BDBFC948();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D288);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB24744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_1BDBFC948() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D288) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v8;
  v13 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1BDAC9D90;
  return sub_1BDB20070(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_1BDB24814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB2485C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB24880()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D288);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BDB248E4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D288);
  return sub_1BDB2057C(a1);
}

uint64_t sub_1BDB24924()
{
  uint64_t v0;

  return sub_1BDB1E668(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BDB2493C()
{
  uint64_t v0;

  return sub_1BDB1E8E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t getEnumTagSinglePayload for AudioWaveformSource.Error(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 5)
    return (v3 - 4);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AudioWaveformSource.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioWaveformSource.Error()
{
  return &type metadata for AudioWaveformSource.Error;
}

void sub_1BDB24A14()
{
  sub_1BDB1ECC8();
}

uint64_t sub_1BDB24A2C(void (*a1)(void))
{
  a1();
  return swift_continuation_throwingResume();
}

uint64_t sub_1BDB24AB0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1BDB24ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50D310);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50D310);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1BDB24B6C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BackgroundTranscriber()), sel_init);
  qword_1EF50D328 = (uint64_t)result;
  return result;
}

id BackgroundTranscriber.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static BackgroundTranscriber.shared.getter()
{
  if (qword_1EF50B1B0 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_1EF50D328;
}

void static BackgroundTranscriber.shared.setter(uint64_t a1)
{
  void *v2;

  if (qword_1EF50B1B0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1EF50D328;
  qword_1EF50D328 = a1;

}

uint64_t (*static BackgroundTranscriber.shared.modify())()
{
  if (qword_1EF50B1B0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BDB24DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  v2 = *(unsigned __int8 *)(v1 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  swift_release();
  return v2;
}

uint64_t sub_1BDB24E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
  swift_release();
  return v2;
}

uint64_t sub_1BDB24EA0(uint64_t a1, void *a2, void *a3)
{
  NSObject *v6;

  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BDB24F78(a1, a2, a3, sub_1BDB24F58, v6);
  return swift_release_n();
}

uint64_t sub_1BDB24F28()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BDB24F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDB25384(a1, a2, a3, "Added transcription task to queue");
}

void sub_1BDB24F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BDB25384(a1, a2, v2, "Added transcription task to queue");
}

void sub_1BDB24F78(uint64_t a1, void *a2, void *a3, NSObject *a4, NSObject *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject **v18;
  NSObject *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  id v29;
  NSObject *v30;
  _QWORD aBlock[6];

  v30 = a4;
  v10 = sub_1BDBFC948();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v5 + OBJC_IVAR___ICBackgroundTranscriber_workerContext);
  if (v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
    v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    v28 = a5;
    v29 = a2;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v14;
    *(_QWORD *)(v17 + 24) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v15, v13, v10);
    *(_QWORD *)(v17 + v16) = a3;
    v18 = (NSObject **)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8));
    v19 = v28;
    *v18 = v30;
    v18[1] = v19;
    aBlock[4] = sub_1BDB2B95C;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BDB24AB0;
    aBlock[3] = &block_descriptor_44;
    v20 = _Block_copy(aBlock);
    v21 = v14;
    v22 = v29;
    v23 = a3;
    swift_retain();
    swift_release();
    objc_msgSend(v21, sel_performBlock_, v20);
    _Block_release(v20);

  }
  else
  {
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v24 = sub_1BDBFCE34();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EF50D310);
    v30 = sub_1BDBFCE1C();
    v25 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v30, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1BD918000, v30, v25, "no worker context found for background transcription", v26, 2u);
      MEMORY[0x1C3B7B478](v26, -1, -1);
    }

  }
}

uint64_t sub_1BDB25300(uint64_t a1, void *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  BackgroundTranscriber.retranscriptionTask(subattachmentAndMediaInfo:attachmentIdentifier:completion:)(a1, a2, (uint64_t)sub_1BDB254C8, v4);
  return swift_release_n();
}

void sub_1BDB25378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDB25384(a1, a2, a3, "Added retranscription task to queue");
}

void sub_1BDB25384(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  if (a1)
  {
    v7 = a3 + 16;
    swift_beginAccess();
    v8 = MEMORY[0x1C3B7B52C](v7);
    if (v8)
    {
      v9 = (void *)v8;
      sub_1BDAE2080(a1);
      sub_1BDB2A6F4(a1, a2);

    }
    else
    {
      swift_retain();
    }
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v10 = sub_1BDBFCE34();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF50D310);
    v11 = sub_1BDBFCE1C();
    v12 = sub_1BDBFDED8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1BD918000, v11, v12, a4, v13, 2u);
      MEMORY[0x1C3B7B478](v13, -1, -1);
    }
    sub_1BDAE1FE0(a1);

  }
}

void sub_1BDB254C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BDB25384(a1, a2, v2, "Added retranscription task to queue");
}

void BackgroundTranscriber.retranscriptionTask(subattachmentAndMediaInfo:attachmentIdentifier:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *oslog;
  _QWORD aBlock[6];

  v5 = *(void **)(v4 + OBJC_IVAR___ICBackgroundTranscriber_workerContext);
  if (v5)
  {
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = v5;
    v10[3] = a2;
    v10[4] = a1;
    v10[5] = a3;
    v10[6] = a4;
    aBlock[4] = sub_1BDB2A4D0;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BDB24AB0;
    aBlock[3] = &block_descriptor_5;
    v11 = _Block_copy(aBlock);
    v12 = v5;
    v13 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_performBlock_, v11);
    _Block_release(v11);

  }
  else
  {
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v14 = sub_1BDBFCE34();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EF50D310);
    oslog = sub_1BDBFCE1C();
    v15 = sub_1BDBFDEE4();
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1BD918000, oslog, v15, "no worker context found for background transcription", v16, 2u);
      MEMORY[0x1C3B7B478](v16, -1, -1);
    }

  }
}

id BackgroundTranscriber.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  objc_super v12;

  v1 = sub_1BDBFDBC0();
  MEMORY[0x1E0C80A78](v1);
  v2 = OBJC_IVAR___ICBackgroundTranscriber_queue;
  sub_1BDBFCC6C();
  v3 = v0;
  sub_1BDBFDBA8();
  *(_QWORD *)&v0[v2] = sub_1BDBFCC54();
  v4 = OBJC_IVAR___ICBackgroundTranscriber__isTranscribing;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D350);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 20) = 0;
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)&v3[v4] = v5;
  v6 = OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D358);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0xE000000000000000;
  *(_QWORD *)&v3[v6] = v7;
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedContext);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_workerManagedObjectContext);

  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)&v3[OBJC_IVAR___ICBackgroundTranscriber_workerContext] = v10;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for BackgroundTranscriber();
  return objc_msgSendSuper2(&v12, sel_init);
}

id BackgroundTranscriber.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundTranscriber();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BDB259C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_1BDBFDBC0();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB25A20()
{
  uint64_t v0;

  if (qword_1EF50B1B0 != -1)
    swift_once();
  swift_beginAccess();
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber_queue);
  swift_retain();
  sub_1BDBFDBA8();
  sub_1BDBFCC6C();
  sub_1BDAC31B0(&qword_1EF50D438, (uint64_t (*)(uint64_t))MEMORY[0x1E0D63E38], MEMORY[0x1E0D63E48]);
  sub_1BDBFDADC();
  return swift_task_switch();
}

uint64_t sub_1BDB25B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  sub_1BDBFCC60();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDB25B70(void *a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t), NSObject *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  unsigned __int8 v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  id v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  _BOOL4 v42;
  id v43;
  uint8_t *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(void *, uint64_t);
  uint64_t v57;
  id v58;
  void *v59;
  NSObject *v60;
  NSObject *v61;

  v59 = a4;
  v60 = a6;
  v10 = sub_1BDBFC948();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = objc_msgSend(a1, sel_objectWithID_, a2);
  objc_opt_self();
  v14 = (void *)swift_dynamicCastObjCClass();
  if (!v14)
    goto LABEL_13;
  v15 = v14;
  v16 = objc_msgSend(v14, sel_audioModel);
  if (!v16)
    goto LABEL_13;
  v17 = v16;
  v56 = a5;
  v18 = objc_msgSend(v15, sel_identifier);
  if (!v18)
  {

LABEL_13:
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v33 = sub_1BDBFCE34();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EF50D310);
    v61 = sub_1BDBFCE1C();
    v34 = sub_1BDBFDED8();
    if (os_log_type_enabled(v61, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1BD918000, v61, v34, "trying to background transcribe but identifier was nil", v35, 2u);
      MEMORY[0x1C3B7B478](v35, -1, -1);
    }
    goto LABEL_17;
  }
  v19 = v18;
  v58 = v17;
  v55 = sub_1BDBFD6F8();
  v57 = v20;

  sub_1BDBFE01C();
  v21 = (void *)sub_1BDBFE010();
  v22 = objc_msgSend(v21, sel_supportsGeneralASR);

  if ((v22 & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v26 = sub_1BDBFCE34();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EF50D310);
    v27 = sub_1BDBFCE1C();
    v28 = sub_1BDBFDED8();
    v29 = os_log_type_enabled(v27, v28);
    v30 = v58;
    if (v29)
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1BD918000, v27, v28, "tried to transcribe an imported call recording and thankfully failed", v31, 2u);
      MEMORY[0x1C3B7B478](v31, -1, -1);
    }

    objc_msgSend(v15, sel_setNeedsTranscription_, 0);
    v32 = (void *)sub_1BDBFD6C8();
    objc_msgSend(v15, sel_updateChangeCountWithReason_, v32);

    objc_msgSend(a1, sel_ic_save);
LABEL_17:

    return;
  }
  v23 = objc_msgSend(v58, sel_audioDocument);
  if (!v23)
  {
    __break(1u);
LABEL_27:
    __break(1u);
    return;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_isCallRecording);

  if ((v25 & 1) != 0)
    goto LABEL_7;
  v36 = objc_msgSend(v58, sel_audioDocument);
  if (!v36)
    goto LABEL_27;
  v37 = v36;
  v38 = ICTTAudioDocument.transcriptViewModelSegments.getter();

  v39 = *(_QWORD *)(v38 + 16);
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v40 = sub_1BDBFCE34();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EF50D310);
    v60 = sub_1BDBFCE1C();
    v41 = sub_1BDBFDED8();
    v42 = os_log_type_enabled(v60, v41);
    v43 = v58;
    if (v42)
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_1BD918000, v60, v41, "tried to do background transcription on an attachment with a transcript", v44, 2u);
      MEMORY[0x1C3B7B478](v44, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
    v45 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v46 = (v12 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
    v48 = swift_allocObject();
    v49 = v57;
    *(_QWORD *)(v48 + 16) = v55;
    *(_QWORD *)(v48 + 24) = v49;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v48 + v45, v13, v10);
    *(_QWORD *)(v48 + v46) = a1;
    *(_QWORD *)(v48 + v47) = a2;
    v50 = v59;
    *(_QWORD *)(v48 + ((v47 + 15) & 0xFFFFFFFFFFFFFFF8)) = v59;
    v51 = a1;
    v52 = a2;
    v53 = v50;
    v56(&unk_1EF50D448, v48);
    swift_release();

  }
}

uint64_t sub_1BDB260B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[26] = a5;
  v6[27] = a6;
  v6[24] = a3;
  v6[25] = a4;
  v6[22] = a1;
  v6[23] = a2;
  sub_1BDBFC78C();
  v6[28] = swift_task_alloc();
  v7 = sub_1BDBFCB40();
  v6[29] = v7;
  v6[30] = *(_QWORD *)(v7 - 8);
  v6[31] = swift_task_alloc();
  v8 = type metadata accessor for TranscriptViewModelSegment(0);
  v6[32] = v8;
  v6[33] = *(_QWORD *)(v8 - 8);
  v6[34] = swift_task_alloc();
  v9 = sub_1BDBFC678();
  v6[35] = v9;
  v6[36] = *(_QWORD *)(v9 - 8);
  v6[37] = swift_task_alloc();
  v10 = sub_1BDBFC714();
  v6[38] = v10;
  v6[39] = *(_QWORD *)(v10 - 8);
  v6[40] = swift_task_alloc();
  v6[41] = swift_task_alloc();
  v6[42] = swift_task_alloc();
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB261F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (__cdecl *v10)();

  if (qword_1EF50B1B0 != -1)
    swift_once();
  v2 = v0[22];
  v1 = v0[23];
  swift_beginAccess();
  v3 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
  *(_BYTE *)(v3 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
  swift_release();
  v4 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 32));
  v7 = *(_QWORD *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 24) = v6;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 32));
  swift_release();
  swift_task_dealloc();
  v10 = (uint64_t (__cdecl *)())((char *)&dword_1EF50F170 + dword_1EF50F170);
  v8 = (_QWORD *)swift_task_alloc();
  v0[46] = v8;
  *v8 = v0;
  v8[1] = sub_1BDB26344;
  return v10();
}

uint64_t sub_1BDB26344(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 488) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB263A0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 488) == 1)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50F180 + dword_1EF50F180);
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v1;
    *v1 = v0;
    v1[1] = sub_1BDB26460;
    return v6((uint64_t)sub_1BDB27C6C, 0);
  }
  else
  {
    v3 = (void *)qword_1EF50D328;
    *(_QWORD *)(v0 + 392) = qword_1EF50D328;
    v4 = v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v5;
    *v5 = v0;
    v5[1] = sub_1BDB26644;
    return sub_1BDB2A8D0(*(_QWORD *)(v0 + 192));
  }
}

uint64_t sub_1BDB26460()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB264C4()
{
  uint64_t *v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = (void *)qword_1EF50D328;
  v0[49] = qword_1EF50D328;
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[50] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_1BDB26644;
  return sub_1BDB2A8D0(v0[24]);
}

uint64_t sub_1BDB26524()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void *v5;
  uint8_t *v6;
  void *v7;
  id v8;
  _QWORD *v9;

  if (qword_1EF50B1A8 != -1)
    swift_once();
  v1 = sub_1BDBFCE34();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EF50D310);
  v2 = sub_1BDBFCE1C();
  v3 = sub_1BDBFDEE4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = (void *)v0[48];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD918000, v2, v3, "could not download ASR model so ending background transcription", v6, 2u);
    MEMORY[0x1C3B7B478](v6, -1, -1);
  }

  v7 = (void *)qword_1EF50D328;
  v0[49] = qword_1EF50D328;
  v8 = v7;
  v9 = (_QWORD *)swift_task_alloc();
  v0[50] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_1BDB26644;
  return sub_1BDB2A8D0(v0[24]);
}

uint64_t sub_1BDB26644(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 408) = a1;
  *(_QWORD *)(v3 + 416) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1BDB266B8()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  void (*v42)(uint64_t, uint64_t);
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v65[3];

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(void **)(v0 + 416);
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedConfiguration);
  v4 = sub_1BDB19FE4(v1, 0, v3);
  *(_QWORD *)(v0 + 424) = v4;
  if (v2)
  {

    swift_bridgeObjectRelease();
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v5 = sub_1BDBFCE34();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EF50D310);
    swift_bridgeObjectRetain_n();
    v6 = sub_1BDBFCE1C();
    v7 = sub_1BDBFDEE4();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 184);
    if (v8)
    {
      v10 = *(_QWORD *)(v0 + 176);
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v65[0] = v12;
      *(_DWORD *)v11 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 152) = sub_1BDAE53FC(v10, v9, v65);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD918000, v6, v7, "could not background transcribe fragments for attachment: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v12, -1, -1);
      MEMORY[0x1C3B7B478](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v46 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v46 + 32));
    swift_bridgeObjectRelease();
    *(_QWORD *)(v46 + 16) = 0;
    *(_QWORD *)(v46 + 24) = 0xE000000000000000;
    os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 32));
    swift_release();
    v47 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v47 + 20));
    *(_BYTE *)(v47 + 16) = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v47 + 20));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = v4;
  swift_bridgeObjectRelease();

  sub_1BDBFC708();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
    goto LABEL_32;
  v15 = *(_QWORD *)(v0 + 312);
  v58 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 264);
  v62 = *(_QWORD *)(v0 + 256);
  v60 = *(_QWORD *)(v0 + 240);
  v17 = v13 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v18 = *(_QWORD *)(v16 + 72);
  swift_bridgeObjectRetain();
  v61 = v15;
  v59 = v18;
  do
  {
    if ((sub_1BDBFDC20() & 1) == 0)
    {
      v22 = *(_QWORD *)(v0 + 272);
      v23 = *(_QWORD *)(v0 + 248);
      v24 = *(_QWORD *)(v0 + 232);
      sub_1BDB1CC10(v17, v22);
      type metadata accessor for TranscriptMetadata(0);
      v25 = swift_allocObject();
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v25 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id, v23, v24);
      v63 = v25;
      sub_1BDAEA978(v22, v25 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
      if (*(_QWORD *)(v17 + *(int *)(v62 + 32) + 8))
      {
        v26 = qword_1EF50B2F0;
        swift_bridgeObjectRetain();
        if (v26 != -1)
          swift_once();
        v27 = (void *)qword_1EF520230;
        v28 = (void *)sub_1BDBFD6C8();
        if (qword_1EF50B2F8 != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D4B0);
        v29 = (void *)sub_1BDBFD9C8();
        v30 = objc_msgSend(v27, sel_ic_contactForHandleString_keysToFetch_, v28, v29);

        if (v30)
        {
          v31 = objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v30, 0);
          if (v31)
          {
            v32 = v31;
            sub_1BDBFD6F8();

            sub_1BDBFD7A0();
            swift_bridgeObjectRelease();
          }
          else
          {

          }
        }
        v33 = *(_QWORD *)(v0 + 296);
        v34 = *(_QWORD *)(v0 + 280);
        sub_1BDBFC660();
        v35 = sub_1BDBFC66C();
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v33, v34);
        if (v35 >= 1)
        {
          v36 = *(_QWORD *)(v0 + 336);
          v37 = *(_QWORD *)(v0 + 304);
          sub_1BDBFC690();
          sub_1BDBFC69C();
          (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v36, v37);
        }
        v38 = *(_QWORD *)(v0 + 336);
        v39 = *(_QWORD *)(v0 + 328);
        v40 = *(_QWORD *)(v0 + 304);
        sub_1BDBFC780();
        sub_1BDBFC720();
        KeyPath = swift_getKeyPath();
        *(_QWORD *)swift_task_alloc() = KeyPath;
        swift_getKeyPath();
        swift_task_dealloc();
        *(_QWORD *)(v0 + 168) = v63;
        sub_1BDB1CDC4();
        swift_retain();
        sub_1BDBFC684();
        sub_1BDBFC69C();
        sub_1BDBFC690();
        sub_1BDBFC69C();
        v15 = v61;
        v42 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
        v42(v39, v40);
        v42(v38, v40);
      }
      v43 = (uint64_t *)(v17 + *(int *)(v62 + 20));
      v45 = *v43;
      v44 = v43[1];
      if ((sub_1BDB3D528(*v43, v44) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        if ((sub_1BDBFDC20() & 1) != 0)
          goto LABEL_28;
      }
      else
      {
        v65[0] = v45;
        v65[1] = v44;
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
        if ((sub_1BDBFDC20() & 1) != 0)
        {
LABEL_28:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_9;
        }
      }
      v19 = *(_QWORD *)(v0 + 320);
      v20 = *(_QWORD *)(v0 + 304);
      sub_1BDBFC780();
      sub_1BDBFC720();
      v21 = swift_getKeyPath();
      *(_QWORD *)swift_task_alloc() = v21;
      swift_getKeyPath();
      swift_task_dealloc();
      *(_QWORD *)(v0 + 160) = v63;
      sub_1BDB1CCC8();
      swift_retain();
      sub_1BDBFC684();
      sub_1BDBFC69C();
      sub_1BDBFDC20();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v20);
LABEL_9:
      v18 = v59;
    }
    v17 += v18;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
LABEL_32:
  v49 = *(_QWORD *)(v0 + 352);
  v50 = *(_QWORD *)(v0 + 360);
  v51 = *(_QWORD *)(v0 + 304);
  v52 = *(_QWORD *)(v0 + 312);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
  v53(v49, *(_QWORD *)(v0 + 344), v51);
  v53(v50, v49, v51);
  sub_1BDBFC660();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
  sub_1BDAC31B0(&qword_1EF50E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
  v54 = sub_1BDBFD89C();
  v56 = v55;
  *(_QWORD *)(v0 + 432) = v55;
  v64 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50E618 + dword_1EF50E618);
  v57 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 440) = v57;
  *v57 = v0;
  v57[1] = sub_1BDB27234;
  return v64(v54, v56);
}

uint64_t sub_1BDB26F74()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 416);
  if (qword_1EF50B1A8 != -1)
    swift_once();
  v2 = sub_1BDBFCE34();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF50D310);
  swift_bridgeObjectRetain_n();
  v3 = sub_1BDBFCE1C();
  v4 = sub_1BDBFDEE4();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 184);
  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 176);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 152) = sub_1BDAE53FC(v7, v6, &v13);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BD918000, v3, v4, "could not background transcribe fragments for attachment: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v9, -1, -1);
    MEMORY[0x1C3B7B478](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 32));
  swift_release();
  v11 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 20));
  *(_BYTE *)(v11 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 20));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB27234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[56] = a1;
  v4[57] = a2;
  v4[58] = v2;
  swift_task_dealloc();
  if (!v2)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB272AC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;
  id v14;
  id v15;

  if (qword_1EF50B1A8 != -1)
    swift_once();
  v1 = sub_1BDBFCE34();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EF50D310);
  v2 = sub_1BDBFCE1C();
  v3 = sub_1BDBFDECC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1BD918000, v2, v3, "successfully generated transcript in background", v4, 2u);
    MEMORY[0x1C3B7B478](v4, -1, -1);
  }
  v6 = v0[56];
  v5 = v0[57];
  v7 = v0[53];
  v9 = (void *)v0[26];
  v8 = (void *)v0[27];
  v10 = (void *)v0[25];

  v11 = (_QWORD *)swift_allocObject();
  v0[59] = v11;
  v11[2] = v10;
  v11[3] = v9;
  v11[4] = v8;
  v11[5] = v7;
  v11[6] = v6;
  v11[7] = v5;
  v12 = v10;
  v13 = v9;
  v14 = v8;
  v15 = v12;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1BDB273F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 464);
  if (qword_1EF50B1A8 != -1)
    swift_once();
  v2 = sub_1BDBFCE34();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF50D310);
  swift_bridgeObjectRetain_n();
  v3 = sub_1BDBFCE1C();
  v4 = sub_1BDBFDEE4();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 184);
  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 176);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 152) = sub_1BDAE53FC(v7, v6, &v13);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BD918000, v3, v4, "could not background transcribe fragments for attachment: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v9, -1, -1);
    MEMORY[0x1C3B7B478](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 32));
  swift_release();
  v11 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 20));
  *(_BYTE *)(v11 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 20));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB276C0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;

  v1 = v0[59];
  v2 = (void *)v0[25];
  v0[2] = v0;
  v0[3] = sub_1BDB277B0;
  v3 = swift_continuation_init();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_1BDB2BB9C;
  v4[3] = v1;
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v4[4] = v3;
  v5[4] = sub_1BDB2BBFC;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_1BDB24AB0;
  v5[3] = &block_descriptor_62;
  v6 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_performBlock_, v6);
  _Block_release(v6);
  return swift_continuation_await();
}

uint64_t sub_1BDB277B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 480) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {

    swift_release_n();
  }
  return swift_task_switch();
}

void sub_1BDB27834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
  if (!v1)
  {
    swift_release();
    v3 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
    *(_BYTE *)(v3 + 16) = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB27998()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 200);
  swift_willThrow();

  swift_release_n();
  v2 = *(void **)(v0 + 480);
  if (qword_1EF50B1A8 != -1)
    swift_once();
  v3 = sub_1BDBFCE34();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EF50D310);
  swift_bridgeObjectRetain_n();
  v4 = sub_1BDBFCE1C();
  v5 = sub_1BDBFDEE4();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 176);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 152) = sub_1BDAE53FC(v8, v7, &v14);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BD918000, v4, v5, "could not background transcribe fragments for attachment: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v10, -1, -1);
    MEMORY[0x1C3B7B478](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 32));
  swift_release();
  v12 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 20));
  *(_BYTE *)(v12 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 20));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDB27C70(void *a1, uint64_t a2, uint64_t a3, Swift::OpaquePointer a4, uint64_t a5, uint64_t a6)
{
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  ICAttachment *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  unsigned int v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  void *v32;
  uint64_t inited;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v39[16];

  v39[15] = *(id *)MEMORY[0x1E0C80C00];
  v9 = objc_msgSend(a1, sel_objectWithID_, a2);
  objc_opt_self();
  v10 = swift_dynamicCastObjCClass();
  if (!v10)
    goto LABEL_9;
  v11 = (void *)v10;
  v12 = objc_msgSend(a1, sel_objectWithID_, a3);
  objc_opt_self();
  v13 = swift_dynamicCastObjCClass();
  if (!v13
    || (v14 = (ICAttachment *)v13, (v15 = objc_msgSend(v11, sel_audioModel)) == 0))
  {
    v16 = v12;
LABEL_8:

    v9 = v16;
LABEL_9:

    if (qword_1EF50B1A8 != -1)
      swift_once();
    v20 = sub_1BDBFCE34();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EF50D310);
    v21 = sub_1BDBFCE1C();
    v22 = sub_1BDBFDED8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1BD918000, v21, v22, "could not transcribe because we did not find a subattachment", v23, 2u);
      MEMORY[0x1C3B7B478](v23, -1, -1);
    }

    return;
  }
  v16 = v15;
  v17 = objc_msgSend(v11, sel_identifier);
  if (!v17)
  {

    v9 = v12;
    goto LABEL_8;
  }
  v36 = v17;
  v37 = v12;
  objc_msgSend(v11, sel_setNeedsTranscription_, 0);
  v18 = (void *)sub_1BDBFD6C8();
  objc_msgSend(v11, sel_updateChangeCountWithReason_, v18);

  ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:)(a4, v14);
  if (v19)
  {

    return;
  }
  if (a6)
  {
    v24 = (void *)sub_1BDBFD6C8();
    v39[0] = 0;
    v25 = objc_msgSend(v16, sel_saveTopLineSummaryToAttachmentWithSummary_error_, v24, v39);

    if (!v25)
    {
      v35 = v39[0];

      sub_1BDBFC87C();
      swift_willThrow();

      return;
    }
    v26 = v39[0];
  }
  objc_msgSend(a1, sel_ic_save);
  if (qword_1EF50B1A8 != -1)
    swift_once();
  v27 = sub_1BDBFCE34();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EF50D310);
  v28 = sub_1BDBFCE1C();
  v29 = sub_1BDBFDECC();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_1BD918000, v28, v29, "successfully saved transcript in background", v30, 2u);
    MEMORY[0x1C3B7B478](v30, -1, -1);
  }

  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v32 = (void *)sub_1BDBFD6C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D3B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  v39[0] = (id)0xD000000000000012;
  v39[1] = (id)0x80000001BDC384D0;
  sub_1BDBFE298();
  *(_QWORD *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3C0);
  *(Swift::OpaquePointer *)(inited + 72) = a4;
  swift_bridgeObjectRetain();
  sub_1BDB0ACF0(inited);
  v34 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_postNotificationName_object_userInfo_, v32, v36, v34);

}

void sub_1BDB2816C(void *a1, void *a2, uint64_t a3, void (*a4)(void *, _QWORD *))
{
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  id v30;
  id v31;
  uint64_t v32;
  NSObject *v33;

  v33 = objc_msgSend(a1, sel_objectWithID_, a2);
  objc_opt_self();
  v8 = (void *)swift_dynamicCastObjCClass();
  if (!v8)
    goto LABEL_13;
  v9 = v8;
  v10 = objc_msgSend(v8, sel_audioModel);
  if (!v10)
    goto LABEL_13;
  v11 = v10;
  v12 = objc_msgSend(v9, sel_identifier);
  if (!v12)
  {

LABEL_13:
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v26 = sub_1BDBFCE34();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EF50D310);
    v33 = sub_1BDBFCE1C();
    v27 = sub_1BDBFDED8();
    if (os_log_type_enabled(v33, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1BD918000, v33, v27, "did not find attachment to transcribe", v28, 2u);
      MEMORY[0x1C3B7B478](v28, -1, -1);
    }
    goto LABEL_17;
  }
  v13 = v12;
  v32 = sub_1BDBFD6F8();
  v15 = v14;

  sub_1BDBFE01C();
  v16 = (void *)sub_1BDBFE010();
  v17 = objc_msgSend(v16, sel_supportsGeneralASR);

  if ((v17 & 1) == 0)
    goto LABEL_7;
  v18 = objc_msgSend(v11, sel_audioDocument);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, sel_isCallRecording);

    if ((v20 & 1) == 0)
    {
      v29 = (_QWORD *)swift_allocObject();
      v29[2] = v32;
      v29[3] = v15;
      v29[4] = a3;
      v29[5] = a1;
      v29[6] = a2;
      swift_bridgeObjectRetain();
      v30 = a1;
      v31 = a2;
      a4(&unk_1EF50D3A0, v29);
      swift_release();

LABEL_17:
      return;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v21 = sub_1BDBFCE34();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EF50D310);
    v22 = sub_1BDBFCE1C();
    v23 = sub_1BDBFDED8();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1BD918000, v22, v23, "tried to transcribe an imported call recording and thankfully failed", v24, 2u);
      MEMORY[0x1C3B7B478](v24, -1, -1);
    }

    objc_msgSend(v9, sel_setNeedsTranscription_, 0);
    v25 = (void *)sub_1BDBFD6C8();
    objc_msgSend(v9, sel_updateChangeCountWithReason_, v25);

    objc_msgSend(a1, sel_ic_save);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_1BDB284DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[24] = a4;
  v5[25] = a5;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  v6 = sub_1BDBFC948();
  v5[26] = v6;
  v5[27] = *(_QWORD *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D3A8);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB28588()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (__cdecl *v10)();

  if (qword_1EF50B1B0 != -1)
    swift_once();
  v2 = v0[21];
  v1 = v0[22];
  swift_beginAccess();
  v3 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
  *(_BYTE *)(v3 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
  swift_release();
  v4 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 32));
  v7 = *(_QWORD *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 24) = v6;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 32));
  swift_release();
  swift_task_dealloc();
  v10 = (uint64_t (__cdecl *)())((char *)&dword_1EF50F170 + dword_1EF50F170);
  v8 = (_QWORD *)swift_task_alloc();
  v0[33] = v8;
  *v8 = v0;
  v8[1] = sub_1BDB286D8;
  return v10();
}

uint64_t sub_1BDB286D8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 376) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB28734()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  id v27;
  void *v28;
  id v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  char *v39;

  if (*(_BYTE *)(v0 + 376) == 1)
  {
    v38 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50F180 + dword_1EF50F180);
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v1;
    *v1 = v0;
    v1[1] = sub_1BDB28AC8;
    return v38((uint64_t)sub_1BDB27C6C, 0);
  }
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD **)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_BYTE *)(v5 + 32);
  *(_BYTE *)(v0 + 377) = v6;
  v7 = -1;
  v8 = -1 << v6;
  if (-(-1 << v6) < 64)
    v7 = ~(-1 << -(char)v8);
  v9 = v7 & *(_QWORD *)(v5 + 64);
  v10 = (_QWORD *)swift_bridgeObjectRetain();
  if (v9)
  {
    v11 = 0;
    v12 = __clz(__rbit64(v9));
    v13 = (v9 - 1) & v9;
LABEL_7:
    *(_QWORD *)(v0 + 288) = v11;
    *(_QWORD *)(v0 + 296) = v13;
    v15 = *(_QWORD **)(v0 + 248);
    v14 = *(_QWORD **)(v0 + 256);
    v16 = *(_QWORD **)(v0 + 240);
    v39 = *(char **)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 208);
    v18 = *(void **)(v10[6] + 8 * v12);
    *(_QWORD *)(v0 + 304) = v18;
    *v14 = v18;
    v19 = (char *)v14 + *(int *)(v3 + 48);
    v20 = (void (*)(char *, unint64_t, uint64_t))v4[2];
    v20(v19, v10[7] + v4[9] * v12, v17);
    v21 = v3;
    v22 = (char *)v15 + *(int *)(v3 + 48);
    *v15 = v18;
    v23 = (void (*)(char *, char *, uint64_t))v4[4];
    v23(v22, v19, v17);
    v24 = (char *)v16 + *(int *)(v21 + 48);
    v20(v24, (unint64_t)v22, v17);
    v23(v39, v24, v17);
    v25 = (char *)v16 + *(int *)(v21 + 48);
    *v16 = v18;
    v20(v25, (unint64_t)v22, v17);
    v26 = (void (*)(char *, uint64_t))v4[1];
    *(_QWORD *)(v0 + 312) = v26;
    v27 = v18;
    v26(v25, v17);
    v28 = (void *)qword_1EF50D328;
    *(_QWORD *)(v0 + 320) = qword_1EF50D328;
    v29 = v28;
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v30;
    *v30 = v0;
    v30[1] = sub_1BDB28F8C;
    return sub_1BDB2A8D0(*(_QWORD *)(v0 + 224));
  }
  v31 = 63 - v8;
  if ((unint64_t)(63 - v8) > 0x7F)
  {
    v32 = v10[9];
    if (v32)
    {
      v11 = 1;
LABEL_11:
      v13 = (v32 - 1) & v32;
      v12 = __clz(__rbit64(v32)) + (v11 << 6);
      goto LABEL_7;
    }
    if (v31 >= 0xC0)
    {
      v32 = v10[10];
      if (v32)
      {
        v11 = 2;
        goto LABEL_11;
      }
      if (v31 >= 0x100)
      {
        v32 = v10[11];
        if (v32)
        {
          v11 = 3;
          goto LABEL_11;
        }
        if (v31 >= 0x140)
        {
          v32 = v10[12];
          if (v32)
          {
            v11 = 4;
            goto LABEL_11;
          }
          v33 = 0;
          v34 = v31 >> 6;
          if (v34 <= 5)
            v34 = 5;
          v35 = v34 - 5;
          while (v35 != v33)
          {
            v32 = v10[v33++ + 13];
            if (v32)
            {
              v11 = v33 + 4;
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  swift_release();
  v36 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v36 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 16) = 0;
  *(_QWORD *)(v36 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 32));
  swift_release();
  v37 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v37 + 20));
  *(_BYTE *)(v37 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v37 + 20));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB28AC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1BDB28B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  id v27;
  void *v28;
  id v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_BYTE *)(v4 + 32);
  *(_BYTE *)(v0 + 377) = v5;
  v6 = -1;
  v7 = -1 << v5;
  if (-(-1 << v5) < 64)
    v6 = ~(-1 << -(char)v7);
  v8 = v6 & *(_QWORD *)(v4 + 64);
  v9 = (_QWORD *)swift_bridgeObjectRetain();
  if (v8)
  {
    v10 = 0;
    v11 = __clz(__rbit64(v8));
    v12 = (v8 - 1) & v8;
LABEL_5:
    *(_QWORD *)(v0 + 288) = v10;
    *(_QWORD *)(v0 + 296) = v12;
    v14 = *(_QWORD **)(v0 + 248);
    v13 = *(_QWORD **)(v0 + 256);
    v15 = *(_QWORD **)(v0 + 240);
    v16 = *(char **)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 208);
    v18 = *(void **)(v9[6] + 8 * v11);
    *(_QWORD *)(v0 + 304) = v18;
    *v13 = v18;
    v19 = (char *)v13 + *(int *)(v2 + 48);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v20(v19, v9[7] + *(_QWORD *)(v3 + 72) * v11, v17);
    v21 = v3;
    v38 = v3;
    v22 = (char *)v14 + *(int *)(v2 + 48);
    *v14 = v18;
    v23 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v23(v22, v19, v17);
    v24 = (char *)v15 + *(int *)(v2 + 48);
    v20(v24, (unint64_t)v22, v17);
    v23(v16, v24, v17);
    v25 = (char *)v15 + *(int *)(v2 + 48);
    *v15 = v18;
    v20(v25, (unint64_t)v22, v17);
    v26 = *(void (**)(char *, uint64_t))(v38 + 8);
    *(_QWORD *)(v0 + 312) = v26;
    v27 = v18;
    v26(v25, v17);
    v28 = (void *)qword_1EF50D328;
    *(_QWORD *)(v0 + 320) = qword_1EF50D328;
    v29 = v28;
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v30;
    *v30 = v0;
    v30[1] = sub_1BDB28F8C;
    sub_1BDB2A8D0(*(_QWORD *)(v0 + 224));
    return;
  }
  v31 = 63 - v7;
  if ((unint64_t)(63 - v7) > 0x7F)
  {
    v32 = v9[9];
    if (v32)
    {
      v10 = 1;
LABEL_9:
      v12 = (v32 - 1) & v32;
      v11 = __clz(__rbit64(v32)) + (v10 << 6);
      goto LABEL_5;
    }
    if (v31 >= 0xC0)
    {
      v32 = v9[10];
      if (v32)
      {
        v10 = 2;
        goto LABEL_9;
      }
      if (v31 >= 0x100)
      {
        v32 = v9[11];
        if (v32)
        {
          v10 = 3;
          goto LABEL_9;
        }
        if (v31 >= 0x140)
        {
          v32 = v9[12];
          if (v32)
          {
            v10 = 4;
            goto LABEL_9;
          }
          v33 = 0;
          v34 = v31 >> 6;
          if (v34 <= 5)
            v34 = 5;
          v35 = v34 - 5;
          while (v35 != v33)
          {
            v32 = v9[v33++ + 13];
            if (v32)
            {
              v10 = v33 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  swift_release();
  v36 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v36 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 16) = 0;
  *(_QWORD *)(v36 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 32));
  if (!v1)
  {
    swift_release();
    v37 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v37 + 20));
    *(_BYTE *)(v37 + 16) = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v37 + 20));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB28E7C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void *v5;
  uint8_t *v6;

  if (qword_1EF50B1A8 != -1)
    swift_once();
  v1 = sub_1BDBFCE34();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EF50D310);
  v2 = sub_1BDBFCE1C();
  v3 = sub_1BDBFDEE4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 280);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD918000, v2, v3, "could not download ASR model so ending background transcription", v6, 2u);
    MEMORY[0x1C3B7B478](v6, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB28F8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = v1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_1BDB29000()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(void **)(v0 + 344);
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedConfiguration);
  v4 = sub_1BDB19FE4(v1, 0, v3);
  *(_QWORD *)(v0 + 352) = v2;
  v5 = *(void **)(v0 + 304);
  if (v2)
  {
    swift_bridgeObjectRelease();

    v6 = *(_QWORD *)(v0 + 248);
    (*(void (**)(_QWORD, _QWORD))(v0 + 312))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
    sub_1BDAC350C(v6, &qword_1EF50D3A8);
    swift_release();
    if (qword_1EF50B1A8 != -1)
      swift_once();
    v7 = sub_1BDBFCE34();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EF50D310);
    swift_bridgeObjectRetain();
    v8 = v2;
    swift_bridgeObjectRetain();
    v9 = v2;
    v10 = sub_1BDBFCE1C();
    v11 = sub_1BDBFDEE4();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 176);
    if (v12)
    {
      v28 = *(_QWORD *)(v0 + 168);
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v30 = v29;
      *(_DWORD *)v14 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 152) = sub_1BDAE53FC(v28, v13, &v30);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2112;
      v16 = v2;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 160) = v17;
      sub_1BDBFE100();
      *v15 = v17;

      _os_log_impl(&dword_1BD918000, v10, v11, "could not transcribe fragments for attachment: %s %@", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v29, -1, -1);
      MEMORY[0x1C3B7B478](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v26 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v26 + 32));
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 16) = 0;
    *(_QWORD *)(v26 + 24) = 0xE000000000000000;
    os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 32));
    swift_release();
    v27 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 20));
    *(_BYTE *)(v27 + 16) = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 20));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = *(void **)(v0 + 192);
    v18 = *(void **)(v0 + 200);
    swift_bridgeObjectRelease();

    v20 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 360) = v20;
    v20[2] = v19;
    v20[3] = v18;
    v20[4] = v5;
    v20[5] = v4;
    v21 = v5;
    v22 = v19;
    v23 = v18;
    v24 = v22;
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_1BDB29420()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 248);
  (*(void (**)(_QWORD, _QWORD))(v0 + 312))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  sub_1BDAC350C(v2, &qword_1EF50D3A8);
  swift_release();
  if (qword_1EF50B1A8 != -1)
    swift_once();
  v3 = sub_1BDBFCE34();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EF50D310);
  swift_bridgeObjectRetain();
  v4 = v1;
  swift_bridgeObjectRetain();
  v5 = v1;
  v6 = sub_1BDBFCE1C();
  v7 = sub_1BDBFDEE4();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v17 = *(_QWORD *)(v0 + 168);
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 152) = sub_1BDAE53FC(v17, v9, &v19);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    v12 = v1;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 160) = v13;
    sub_1BDBFE100();
    *v11 = v13;

    _os_log_impl(&dword_1BD918000, v6, v7, "could not transcribe fragments for attachment: %s %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v18, -1, -1);
    MEMORY[0x1C3B7B478](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v14 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 32));
  swift_release();
  v15 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + 20));
  *(_BYTE *)(v15 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 20));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB29778()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;

  v1 = v0[45];
  v2 = (void *)v0[24];
  v0[2] = v0;
  v0[3] = sub_1BDB29868;
  v3 = swift_continuation_init();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_1BDB2B72C;
  v4[3] = v1;
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v4[4] = v3;
  v5[4] = sub_1BDB2B76C;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_1BDB24AB0;
  v5[3] = &block_descriptor_23_0;
  v6 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_performBlock_, v6);
  _Block_release(v6);
  return swift_continuation_await();
}

uint64_t sub_1BDB29868()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 368) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {

    swift_release_n();
  }
  return swift_task_switch();
}

void sub_1BDB298EC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  _QWORD *v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  id v25;
  void *v26;
  id v27;
  _QWORD *v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);

  v1(v3, v4);
  sub_1BDAC350C(v2, &qword_1EF50D3A8);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 296);
  if (v6)
  {
    v7 = (v6 - 1) & v6;
    v8 = __clz(__rbit64(v6)) | (v5 << 6);
    v9 = *(_QWORD *)(v0 + 184);
LABEL_3:
    *(_QWORD *)(v0 + 288) = v5;
    *(_QWORD *)(v0 + 296) = v7;
    v11 = *(_QWORD **)(v0 + 248);
    v10 = *(_QWORD **)(v0 + 256);
    v13 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD **)(v0 + 240);
    v14 = *(_QWORD **)(v0 + 216);
    v37 = *(char **)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 208);
    v16 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * v8);
    *(_QWORD *)(v0 + 304) = v16;
    *v10 = v16;
    v17 = (char *)v10 + *(int *)(v13 + 48);
    v18 = (void (*)(char *, unint64_t, uint64_t))v14[2];
    v18(v17, *(_QWORD *)(v9 + 56) + v14[9] * v8, v15);
    v19 = (char *)v11 + *(int *)(v13 + 48);
    *v11 = v16;
    v20 = (void (*)(char *, char *, uint64_t))v14[4];
    v20(v19, v17, v15);
    v21 = (char *)v12 + *(int *)(v13 + 48);
    v18(v21, (unint64_t)v19, v15);
    v20(v37, v21, v15);
    v22 = v12;
    v23 = (char *)v12 + *(int *)(v13 + 48);
    *v22 = v16;
    v18(v23, (unint64_t)v19, v15);
    v24 = (void (*)(char *, uint64_t))v14[1];
    *(_QWORD *)(v0 + 312) = v24;
    v25 = v16;
    v24(v23, v15);
    v26 = (void *)qword_1EF50D328;
    *(_QWORD *)(v0 + 320) = qword_1EF50D328;
    v27 = v26;
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v28;
    *v28 = v0;
    v28[1] = sub_1BDB28F8C;
    sub_1BDB2A8D0(*(_QWORD *)(v0 + 224));
    return;
  }
  v29 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v30 = *(_QWORD *)(v0 + 352);
  v31 = (unint64_t)((1 << *(_BYTE *)(v0 + 377)) + 63) >> 6;
  v9 = *(_QWORD *)(v0 + 184);
  if (v29 < v31)
  {
    v32 = v9 + 64;
    v33 = *(_QWORD *)(v9 + 64 + 8 * v29);
    ++v5;
    if (v33)
    {
LABEL_7:
      v7 = (v33 - 1) & v33;
      v8 = __clz(__rbit64(v33)) + (v5 << 6);
      goto LABEL_3;
    }
    v5 = v29 + 1;
    if (v29 + 1 < v31)
    {
      v33 = *(_QWORD *)(v32 + 8 * v5);
      if (v33)
        goto LABEL_7;
      v5 = v29 + 2;
      if (v29 + 2 < v31)
      {
        v33 = *(_QWORD *)(v32 + 8 * v5);
        if (v33)
          goto LABEL_7;
        v34 = v29 + 3;
        if (v34 < v31)
        {
          v33 = *(_QWORD *)(v32 + 8 * v34);
          if (v33)
          {
            v5 = v34;
            goto LABEL_7;
          }
          while (1)
          {
            v5 = v34 + 1;
            if (__OFADD__(v34, 1))
              goto LABEL_21;
            if (v5 >= v31)
              break;
            v33 = *(_QWORD *)(v32 + 8 * v5);
            ++v34;
            if (v33)
              goto LABEL_7;
          }
        }
      }
    }
  }
  swift_release();
  v35 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v35 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v35 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v35 + 32));
  if (!v30)
  {
    swift_release();
    v36 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v36 + 20));
    *(_BYTE *)(v36 + 16) = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 20));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB29C3C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 304);
  v2 = *(void **)(v0 + 192);
  swift_willThrow();

  swift_release_n();
  v3 = *(void **)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 248);
  (*(void (**)(_QWORD, _QWORD))(v0 + 312))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  sub_1BDAC350C(v4, &qword_1EF50D3A8);
  swift_release();
  if (qword_1EF50B1A8 != -1)
    swift_once();
  v5 = sub_1BDBFCE34();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EF50D310);
  swift_bridgeObjectRetain();
  v6 = v3;
  swift_bridgeObjectRetain();
  v7 = v3;
  v8 = sub_1BDBFCE1C();
  v9 = sub_1BDBFDEE4();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 176);
  if (v10)
  {
    v19 = *(_QWORD *)(v0 + 168);
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 152) = sub_1BDAE53FC(v19, v11, &v21);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    v14 = v3;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 160) = v15;
    sub_1BDBFE100();
    *v13 = v15;

    _os_log_impl(&dword_1BD918000, v8, v9, "could not transcribe fragments for attachment: %s %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v20, -1, -1);
    MEMORY[0x1C3B7B478](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v16 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0xE000000000000000;
  os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 32));
  swift_release();
  v17 = *(_QWORD *)(qword_1EF50D328 + OBJC_IVAR___ICBackgroundTranscriber__isTranscribing);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 20));
  *(_BYTE *)(v17 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 20));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDB29FB0()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1EF50B1A8 != -1)
    swift_once();
  v0 = sub_1BDBFCE34();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF50D310);
  oslog = sub_1BDBFCE1C();
  v1 = sub_1BDBFDED8();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v2 = 134217984;
    sub_1BDBFE100();
    _os_log_impl(&dword_1BD918000, oslog, v1, "Downloading transcription ASR model… {progress: %ld}", v2, 0xCu);
    MEMORY[0x1C3B7B478](v2, -1, -1);
  }

}

void sub_1BDB2A0CC(void *a1, uint64_t a2, uint64_t a3, Swift::OpaquePointer a4)
{
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  ICAttachment *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  uint64_t inited;
  void *v26;
  void *v27;

  v7 = objc_msgSend(a1, sel_objectWithID_, a2);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = objc_msgSend(a1, sel_objectWithID_, a3);
    objc_opt_self();
    v11 = swift_dynamicCastObjCClass();
    if (v11
      && (v12 = (ICAttachment *)v11, (v13 = objc_msgSend(v9, sel_audioModel)) != 0))
    {
      v14 = v13;
      v15 = objc_msgSend(v9, sel_identifier);
      if (v15)
      {
        v27 = v15;
        objc_msgSend(v9, sel_setNeedsTranscription_, 0);
        v16 = (void *)sub_1BDBFD6C8();
        objc_msgSend(v9, sel_updateChangeCountWithReason_, v16);

        v17 = objc_msgSend(v9, sel_attachmentModel);
        objc_msgSend(v17, sel_setMergeableDataDirty_, 1);

        ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:)(a4, v12);
        if (v18)
        {

        }
        else
        {
          objc_msgSend(a1, sel_ic_save);
          if (qword_1EF50B1A8 != -1)
            swift_once();
          v19 = sub_1BDBFCE34();
          __swift_project_value_buffer(v19, (uint64_t)qword_1EF50D310);
          v20 = sub_1BDBFCE1C();
          v21 = sub_1BDBFDED8();
          if (os_log_type_enabled(v20, v21))
          {
            v22 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v22 = 0;
            _os_log_impl(&dword_1BD918000, v20, v21, "successfully saved transcript in background", v22, 2u);
            MEMORY[0x1C3B7B478](v22, -1, -1);
          }

          v23 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
          v24 = (void *)sub_1BDBFD6C8();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D3B8);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
          sub_1BDBFE298();
          *(_QWORD *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3C0);
          *(Swift::OpaquePointer *)(inited + 72) = a4;
          swift_bridgeObjectRetain();
          sub_1BDB0ACF0(inited);
          v26 = (void *)sub_1BDBFD5B4();
          swift_bridgeObjectRelease();
          objc_msgSend(v23, sel_postNotificationName_object_userInfo_, v24, v27, v26);

        }
      }
      else
      {

      }
    }
    else
    {

    }
  }
  else
  {

  }
}

uint64_t sub_1BDB2A494()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BDB2A4D0()
{
  uint64_t v0;

  sub_1BDB2816C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void *, _QWORD *))(v0 + 40));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t type metadata accessor for BackgroundTranscriber()
{
  return objc_opt_self();
}

uint64_t method lookup function for BackgroundTranscriber()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BackgroundTranscriber.isTranscribing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BackgroundTranscriber.currentlyTranscribingAttachment.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BackgroundTranscriber.addFirstTimeTranscriptionTaskToQueue(mediaURL:attachmentIdentifier:subattachmentIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of BackgroundTranscriber.addRetranscriptionTaskToQueue(subattachmentAndMediaInfo:attachmentIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t sub_1BDB2A594()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BDB2A5D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1BDAE2208;
  return sub_1BDB284DC(v2, v3, v4, v5, v6);
}

uint64_t sub_1BDB2A644(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BDB2A6A8;
  return v6(a1);
}

uint64_t sub_1BDB2A6A8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB2A6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFDBC0();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  swift_retain();
  if ((_DWORD)a1 == 1)
  {
    sub_1BDAC350C((uint64_t)v6, (uint64_t *)&unk_1ED23A600);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_1BDBFDBB4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_1BDBFDADC();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_1EF50D420;
  *(_QWORD *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1BDB2A8D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[4] = a1;
  v2 = sub_1BDBFCFB4();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE60);
  v1[8] = swift_task_alloc();
  v1[9] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3D0);
  v1[10] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE68);
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3E0);
  v1[14] = swift_task_alloc();
  v4 = sub_1BDBFC948();
  v1[15] = v4;
  v1[16] = *(_QWORD *)(v4 - 8);
  v1[17] = swift_task_alloc();
  sub_1BDBFCF60();
  v1[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE30);
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3F0);
  v1[20] = swift_task_alloc();
  sub_1BDBFCB58();
  v1[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB2AA7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(unint64_t, _QWORD, uint64_t);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0[20];
  v2 = v0[19];
  v32 = v0[15];
  v33 = v0[17];
  v34 = v0[14];
  v30 = v0[4];
  v31 = v0[16];
  sub_1BDBFCB4C();
  v3 = *MEMORY[0x1E0CD7EE8];
  v4 = sub_1BDBFD068();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v6 = sub_1BDBFCF6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE38);
  v7 = sub_1BDBFCF78();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BDC16BA0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x1E0CD7750], v7);
  sub_1BDAED5A8(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D400);
  v11 = sub_1BDBFD05C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BDC16BA0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E0CD7DE0], v11);
  sub_1BDAED810(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE40);
  v15 = sub_1BDBFCFC0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BDC17ED0;
  v20 = v19 + v18;
  v21 = *(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104);
  v21(v20, *MEMORY[0x1E0CD7838], v15);
  v21(v20 + v17, *MEMORY[0x1E0CD7840], v15);
  v21(v20 + 2 * v17, *MEMORY[0x1E0CD7858], v15);
  sub_1BDB9FDBC(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BDBFCFE4();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7910];
  swift_allocObject();
  v23 = sub_1BDBFCFD8();
  v0[22] = v23;
  sub_1BDBFCF48();
  sub_1BDBFCF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v33, v30, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D410);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BDC16BA0;
  v25 = sub_1BDAC31B0(&qword_1EF50BE48, v22, MEMORY[0x1E0CD7908]);
  *(_QWORD *)(v24 + 32) = v23;
  *(_QWORD *)(v24 + 40) = v25;
  v26 = sub_1BDBFD02C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v34, 1, 1, v26);
  v27 = objc_allocWithZone((Class)sub_1BDBFD020());
  swift_retain();
  objc_msgSend(v27, sel_init);
  v28 = (_QWORD *)swift_task_alloc();
  v0[23] = v28;
  *v28 = v0;
  v28[1] = sub_1BDB2AED0;
  return sub_1BDBFCF3C();
}

uint64_t sub_1BDB2AED0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;

  v3 = (_QWORD *)*v2;
  v3[24] = a1;
  v3[25] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v5 = (_QWORD *)swift_task_alloc();
  v3[26] = v5;
  *v5 = v3;
  v5[1] = sub_1BDB2AF70;
  return sub_1BDBFCF24();
}

uint64_t sub_1BDB2AF70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB2AFD4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = MEMORY[0x1E0DEE9D8];
  sub_1BDBFCFCC();
  v0[28] = swift_getOpaqueTypeConformance2();
  sub_1BDBFDC80();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[29] = v1;
  *v1 = v0;
  v1[1] = sub_1BDB2B0BC;
  return sub_1BDBFDB3C();
}

uint64_t sub_1BDB2B0BC()
{
  uint64_t v0;

  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB2B124()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[8];
  v2 = v0[5];
  v3 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[13], v0[11]);
    v4 = (_QWORD *)swift_task_alloc();
    v0[30] = v4;
    *v4 = v0;
    v4[1] = sub_1BDB2B274;
    return sub_1BDBFCF24();
  }
  else
  {
    v6 = v0[7];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    v7 = _s11NotesShared26TranscriptViewModelSegmentV4from6result9temporarySayACG6Speech11TranscriberC18MultisegmentResultV_SbtFZ_0(v6, 0);
    sub_1BDBC433C(v7);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    swift_getAssociatedConformanceWitness();
    v8 = (_QWORD *)swift_task_alloc();
    v0[29] = v8;
    *v8 = v0;
    v8[1] = sub_1BDB2B0BC;
    return sub_1BDBFDB3C();
  }
}

uint64_t sub_1BDB2B274()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB2B2E0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BDB2B3B4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB2B474()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB2B540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB2B624()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB2B6F0()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BDB2B72C()
{
  uint64_t v0;
  Swift::OpaquePointer v1;

  v1._rawValue = *(void **)(v0 + 40);
  sub_1BDB2A0CC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1);
}

uint64_t sub_1BDB2B748()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB2B76C()
{
  uint64_t v0;

  return sub_1BDB24A2C(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1BDB2B778()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB2B7A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BDAC9D90;
  return sub_1BDB259C0(a1, v4, v5, v7, v6);
}

uint64_t sub_1BDB2B81C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB2B840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDAC9D90;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF50D428 + dword_1EF50D428))(a1, v4);
}

uint64_t sub_1BDB2B8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BDBFC948();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1BDB2B95C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1BDBFC948() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BDB25B70(*(void **)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(void **)(v0 + v3), *(void (**)(void *, uint64_t))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(NSObject **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1BDB2B9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = sub_1BDBFC948();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1BDB2BA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(sub_1BDBFC948() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = v0 + v3;
  v9 = *(_QWORD *)(v0 + v4);
  v10 = *(_QWORD *)(v0 + v5);
  v11 = *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v12;
  *v12 = v1;
  v12[1] = sub_1BDAE2208;
  return sub_1BDB260B4(v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1BDB2BB24()
{
  return 8;
}

uint64_t sub_1BDB2BB30()
{
  return swift_release();
}

uint64_t sub_1BDB2BB38(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BDB2BB4C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BDB2BB58()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BDB2BB9C()
{
  uint64_t v0;
  Swift::OpaquePointer v1;

  v1._rawValue = *(void **)(v0 + 40);
  sub_1BDB27C70(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1BDB2BBC0()
{
  return 8;
}

uint64_t sub_1BDB2BC00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  int isUniquelyReferenced_nonNull_native;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  int64_t v32;

  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 64);
  v32 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v3)
    {
      v3 &= v3 - 1;
    }
    else
    {
      v6 = __OFADD__(v4++, 1);
      if (v6)
        goto LABEL_48;
      if (v4 >= v32)
      {
LABEL_43:
        swift_release();
        return v5;
      }
      v7 = *(_QWORD *)(v31 + 8 * v4);
      if (!v7)
      {
        v8 = v4 + 1;
        if (v4 + 1 >= v32)
          goto LABEL_43;
        v7 = *(_QWORD *)(v31 + 8 * v8);
        if (!v7)
        {
          v8 = v4 + 2;
          if (v4 + 2 >= v32)
            goto LABEL_43;
          v7 = *(_QWORD *)(v31 + 8 * v8);
          if (!v7)
          {
            v8 = v4 + 3;
            if (v4 + 3 >= v32)
              goto LABEL_43;
            v7 = *(_QWORD *)(v31 + 8 * v8);
            if (!v7)
            {
              v8 = v4 + 4;
              if (v4 + 4 >= v32)
                goto LABEL_43;
              v7 = *(_QWORD *)(v31 + 8 * v8);
              if (!v7)
              {
                while (1)
                {
                  v4 = v8 + 1;
                  if (__OFADD__(v8, 1))
                    goto LABEL_49;
                  if (v4 >= v32)
                    goto LABEL_43;
                  v7 = *(_QWORD *)(v31 + 8 * v4);
                  ++v8;
                  if (v7)
                    goto LABEL_20;
                }
              }
            }
          }
        }
        v4 = v8;
      }
LABEL_20:
      v3 = (v7 - 1) & v7;
    }
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BDB2CED0(v9);
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v5 + 16);
    v13 = v12 + v11;
    if (__OFADD__(v12, v11))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v13 <= *(_QWORD *)(v5 + 24) >> 1)
    {
      if (!*(_QWORD *)(v10 + 16))
        goto LABEL_4;
    }
    else
    {
      if (v12 <= v13)
        v15 = v12 + v11;
      else
        v15 = v12;
      v5 = sub_1BDBCC59C(isUniquelyReferenced_nonNull_native, v15, 1, v5);
      if (!*(_QWORD *)(v10 + 16))
      {
LABEL_4:
        if (v11)
          goto LABEL_45;
        goto LABEL_5;
      }
    }
    v16 = *(_QWORD *)(v5 + 16);
    v17 = (*(_QWORD *)(v5 + 24) >> 1) - v16;
    v18 = sub_1BDBFCAC8();
    if (v17 < v11)
      goto LABEL_46;
    v19 = *(_QWORD *)(v18 - 8);
    v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v21 = *(_QWORD *)(v19 + 72);
    v22 = v5 + v20 + v21 * v16;
    v23 = v10 + v20;
    v24 = v21 * v11;
    v25 = v22 + v24;
    v26 = v23 + v24;
    if (v23 < v25 && v22 < v26)
      goto LABEL_50;
    swift_arrayInitWithCopy();
    if (v11)
    {
      v28 = *(_QWORD *)(v5 + 16);
      v6 = __OFADD__(v28, v11);
      v29 = v28 + v11;
      if (v6)
        goto LABEL_47;
      *(_QWORD *)(v5 + 16) = v29;
    }
LABEL_5:
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB2BEEC(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v17 = sub_1BDBFCB40();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    if (!v7)
      return v8;
    v18 = MEMORY[0x1E0DEE9D8];
    result = sub_1BDB22630(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v16 = v2;
    v10 = 0;
    v8 = v18;
    v2 = a1 & 0xC000000000000001;
    while (v7 != v10)
    {
      if (v2)
        v11 = (id)MEMORY[0x1C3B79954](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_replicaID, v16);
      sub_1BDBFCB10();

      v18 = v8;
      v15 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BDB22630(v14 > 1, v15 + 1, 1);
        v8 = v18;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, v6, v17);
      if (v7 == v10)
        return v8;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v7 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB2C0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(unint64_t, char *, uint64_t);
  void (*v25)(unint64_t, char *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;

  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D308);
  v3 = *(_QWORD *)(v37 - 8);
  v4 = MEMORY[0x1E0C80A78](v37);
  v35 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v30 - v6;
  v7 = sub_1BDBFCB40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v30 = v1;
    v40 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22630(0, v11, 0);
    v13 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    v14 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v32 = v14;
    v33 = v8;
    v34 = v10;
    v15 = v31;
    do
    {
      v16 = v37;
      v17 = *(int *)(v37 + 48);
      v18 = &v36[v17];
      v38 = *v13;
      v39 = v11;
      v19 = v7;
      v20 = v8;
      v21 = v13[1];
      v15(&v36[v17], (char *)v13 + v17, v19);
      v22 = (uint64_t)v35;
      v23 = (char *)v35 + *(int *)(v16 + 48);
      *v35 = v38;
      *(_QWORD *)(v22 + 8) = v21;
      v24 = *(void (**)(unint64_t, char *, uint64_t))(v20 + 32);
      v7 = v19;
      v25 = v24;
      v24((unint64_t)v23, v18, v7);
      v15(v10, v23, v7);
      swift_bridgeObjectRetain();
      sub_1BDAC350C(v22, &qword_1EF50D308);
      v12 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDB22630(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v40;
      }
      v27 = *(_QWORD *)(v12 + 16);
      v26 = *(_QWORD *)(v12 + 24);
      v8 = v33;
      v28 = v39;
      if (v27 >= v26 >> 1)
      {
        sub_1BDB22630(v26 > 1, v27 + 1, 1);
        v12 = v40;
      }
      v13 = (uint64_t *)((char *)v13 + v32);
      *(_QWORD *)(v12 + 16) = v27 + 1;
      v10 = v34;
      v25(v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v27, v34, v7);
      v40 = v12;
      v11 = v28 - 1;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_1BDB2C324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _QWORD);
  uint64_t v25;
  unint64_t v26;
  _BYTE v27[32];
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;

  v1 = a1;
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v2 = sub_1BDBFE220();
  else
    v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1BDB226A4(0, v2 & ~(v2 >> 63), 0);
    if (v26)
    {
      result = sub_1BDBFE1D8();
      v5 = 1;
    }
    else
    {
      result = sub_1BDB4A6E0(v1);
      v5 = v6 & 1;
    }
    v28 = result;
    v29 = v4;
    v30 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      v25 = v1;
      do
      {
        while (1)
        {
          v13 = v28;
          v12 = v29;
          v14 = v30;
          sub_1BDB4A46C(v28, v29, v30, v1);
          v16 = v15;
          v17 = objc_msgSend(v15, sel_range);
          v19 = v18;

          v20 = v31;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = sub_1BDB226A4(0, *(_QWORD *)(v20 + 16) + 1, 1);
            v20 = v31;
          }
          v22 = *(_QWORD *)(v20 + 16);
          v21 = *(_QWORD *)(v20 + 24);
          if (v22 >= v21 >> 1)
          {
            result = sub_1BDB226A4(v21 > 1, v22 + 1, 1);
            v20 = v31;
          }
          *(_QWORD *)(v20 + 16) = v22 + 1;
          v23 = v20 + 16 * v22;
          *(_QWORD *)(v23 + 32) = v17;
          *(_QWORD *)(v23 + 40) = v19;
          if (v26)
            break;
          v1 = v25;
          v7 = sub_1BDB4A384(v13, v12, v14, v25);
          v9 = v8;
          v11 = v10;
          sub_1BDB35B90(v13, v12, v14);
          v28 = v7;
          v29 = v9;
          v30 = v11 & 1;
          if (!--v2)
            goto LABEL_20;
        }
        v1 = v25;
        if ((v14 & 1) == 0)
          goto LABEL_23;
        if (sub_1BDBFE1F0())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D598);
        v24 = (void (*)(_BYTE *, _QWORD))sub_1BDBFDD34();
        sub_1BDBFE274();
        v24(v27, 0);
        --v2;
      }
      while (v2);
LABEL_20:
      sub_1BDB35B90(v28, v29, v30);
      return v31;
    }
  }
  return result;
}

void sub_1BDB2C588(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BDB224F4(0, v1, 0);
    v4 = sub_1BDB32948(v2);
    v5 = 0;
    v6 = v2 + 64;
    v24 = v2 + 80;
    v25 = v1;
    v26 = v3;
    v27 = v2 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v2 + 32))
    {
      v9 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(v2 + 36) != v3)
        goto LABEL_24;
      v28 = v5;
      v10 = *(id *)(*(_QWORD *)(v2 + 56) + 8 * v4);
      v11 = v2;
      v12 = objc_msgSend(v10, sel_string);
      v13 = sub_1BDBFD6F8();
      v15 = v14;

      v17 = *(_QWORD *)(v29 + 16);
      v16 = *(_QWORD *)(v29 + 24);
      if (v17 >= v16 >> 1)
        sub_1BDB224F4(v16 > 1, v17 + 1, 1);
      *(_QWORD *)(v29 + 16) = v17 + 1;
      v18 = v29 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      v7 = 1 << *(_BYTE *)(v11 + 32);
      if (v4 >= v7)
        goto LABEL_25;
      v6 = v27;
      v19 = *(_QWORD *)(v27 + 8 * v9);
      if ((v19 & (1 << v4)) == 0)
        goto LABEL_26;
      v2 = v11;
      v3 = v26;
      if (*(_DWORD *)(v11 + 36) != v26)
        goto LABEL_27;
      v20 = v19 & (-2 << (v4 & 0x3F));
      if (v20)
      {
        v7 = __clz(__rbit64(v20)) | v4 & 0xFFFFFFFFFFFFFFC0;
        v8 = v25;
      }
      else
      {
        v21 = v9 + 1;
        v22 = (unint64_t)(v7 + 63) >> 6;
        v8 = v25;
        if (v9 + 1 < v22)
        {
          v23 = *(_QWORD *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_20:
            v7 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v9)
            {
              v23 = *(_QWORD *)(v24 + 8 * v9++);
              if (v23)
              {
                v21 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      v5 = v28 + 1;
      v4 = v7;
      if (v28 + 1 == v8)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1BDB2C7C0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v2 = sub_1BDBFE364();
  swift_getObjectType();
  result = sub_1BDBFE364();
  if (v2 == result)
  {
    v4 = sub_1BDBFE370();
    swift_unknownObjectRelease();
    if ((v4 & 1) != 0)
    {
      result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      sub_1BDBFE514();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDB2C8C8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_1BDBFE1D8();
    v5 = v4;
    v6 = sub_1BDBFE268();
    v8 = MEMORY[0x1C3B797C8](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_1BDB35B90(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_1BDB4A46C(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_1BDB35B90(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_1BDB4A6E0(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static NoteEditActivityEvent.events(for:afterTimestamp:recentTimestamp:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v6 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = objc_msgSend(a1, sel_mergeableString);
  objc_opt_self();
  v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    v11 = (void *)v10;
    *v8 = a1;
    swift_storeEnumTagMultiPayload();
    v12 = a1;
    v13 = _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v11, (uint64_t)v8, a2, a3);

    sub_1BDAE1658((uint64_t)v8, type metadata accessor for NoteEditActivityEvent.Parents);
  }
  else
  {

    return MEMORY[0x1E0DEE9D8];
  }
  return v13;
}

uint64_t type metadata accessor for NoteEditActivityEvent.Parents(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1ED23AA28);
}

uint64_t sub_1BDB2CAF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t (*v18)(uint64_t);
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void **v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;

  v2 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (void **)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v42 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v42 - v10;
  v12 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v51 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v44 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v45 = v6;
  v18 = type metadata accessor for NoteEditActivityEvent.Parents;
  v48 = v2;
  v49 = v3;
  v46 = a1;
  v47 = v11;
  if (v15)
    goto LABEL_7;
LABEL_8:
  v21 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v21 < v51)
    {
      v22 = *(_QWORD *)(v50 + 8 * v21);
      ++v17;
      if (v22)
        goto LABEL_23;
      v17 = v21 + 1;
      if (v21 + 1 >= v51)
        goto LABEL_33;
      v22 = *(_QWORD *)(v50 + 8 * v17);
      if (v22)
        goto LABEL_23;
      v17 = v21 + 2;
      if (v21 + 2 >= v51)
        goto LABEL_33;
      v22 = *(_QWORD *)(v50 + 8 * v17);
      if (v22)
        goto LABEL_23;
      v17 = v21 + 3;
      if (v21 + 3 >= v51)
        goto LABEL_33;
      v22 = *(_QWORD *)(v50 + 8 * v17);
      if (v22)
      {
LABEL_23:
        v15 = (v22 - 1) & v22;
        for (i = __clz(__rbit64(v22)) + (v17 << 6); ; i = v19 | (v17 << 6))
        {
          sub_1BDAE1544(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, (uint64_t)v11, v18);
          sub_1BDAFE158((uint64_t)v11, (uint64_t)v9, v18);
          sub_1BDAE1544((uint64_t)v9, (uint64_t)v6, v18);
          if (swift_getEnumCaseMultiPayload() != 1)
            break;
          v24 = v17;
          v25 = v18;
          v26 = *v6;
          v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
          v28 = (char *)v6 + *(int *)(v27 + 48);
          v29 = (char *)v6 + *(int *)(v27 + 64);
          v30 = sub_1BDBFCB40();
          v31 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8);
          v31(v29, v30);
          v31(v28, v30);
          v32 = v26;
          v33 = objc_msgSend(v32, sel_identifier);
          if (!v33)
          {

            v6 = v45;
            v3 = v49;
            v11 = v47;
            v18 = v25;
            v17 = v24;
            a1 = v46;
LABEL_6:
            result = sub_1BDAE1658((uint64_t)v9, v18);
            if (!v15)
              goto LABEL_8;
            goto LABEL_7;
          }
          v34 = v33;
          v35 = sub_1BDBFD6F8();
          v43 = v36;

          v18 = v25;
          sub_1BDAE1658((uint64_t)v9, v25);
          v37 = v44;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1BDBCBCC4(0, v37[2] + 1, 1, v37);
            v37 = (_QWORD *)result;
          }
          v17 = v24;
          v39 = v37[2];
          v38 = v37[3];
          if (v39 >= v38 >> 1)
          {
            result = (uint64_t)sub_1BDBCBCC4((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
            v37 = (_QWORD *)result;
          }
          v37[2] = v39 + 1;
          v44 = v37;
          v40 = &v37[2 * v39];
          v41 = v43;
          v40[4] = v35;
          v40[5] = v41;
          v6 = v45;
          a1 = v46;
          v3 = v49;
          v11 = v47;
          if (!v15)
            goto LABEL_8;
LABEL_7:
          v19 = __clz(__rbit64(v15));
          v15 &= v15 - 1;
        }
        sub_1BDAE1658((uint64_t)v6, v18);
        goto LABEL_6;
      }
      v23 = v21 + 4;
      if (v23 < v51)
      {
        v22 = *(_QWORD *)(v50 + 8 * v23);
        if (v22)
        {
          v17 = v23;
          goto LABEL_23;
        }
        while (1)
        {
          v17 = v23 + 1;
          if (__OFADD__(v23, 1))
            goto LABEL_35;
          if (v17 >= v51)
            break;
          v22 = *(_QWORD *)(v50 + 8 * v17);
          ++v23;
          if (v22)
            goto LABEL_23;
        }
      }
    }
LABEL_33:
    swift_release();
    return (uint64_t)v44;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1BDB2CED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BDBFCAC8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v38 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v35 - v9;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BDBFE1E4();
    sub_1BD942914(0, (unint64_t *)&qword_1EF510130);
    sub_1BDB35B38();
    result = sub_1BDBFDD40();
    a1 = v45;
    v42 = v46;
    v11 = v47;
    v12 = v48;
    v13 = v49;
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 56);
    v42 = a1 + 56;
    v11 = ~v14;
    v16 = -v14;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v13 = v17 & v15;
    result = swift_bridgeObjectRetain();
    v12 = 0;
  }
  v37 = v11;
  v41 = (unint64_t)(v11 + 64) >> 6;
  v39 = MEMORY[0x1E0DEE9D8];
  v40 = MEMORY[0x1E0DEE9B0] + 8;
  v43 = a1;
LABEL_8:
  v18 = v12;
  v19 = v13;
  if (a1 < 0)
  {
    do
    {
      v21 = sub_1BDBFE250();
      if (!v21)
        goto LABEL_42;
      v44 = v21;
      sub_1BD942914(0, (unint64_t *)&qword_1EF510130);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v22 = v50;
      swift_unknownObjectRelease();
      v12 = v18;
      v13 = v19;
      if (!v22)
        goto LABEL_42;
LABEL_31:
      v26 = objc_msgSend(v22, sel_timestamp);
      if (v26)
      {
        v27 = v26;
        sub_1BDBFCAA4();

        v28 = 0;
      }
      else
      {
        v28 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v28, 1, v5);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v29 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v30 = v36;
        v29(v36, v4, v5);
        v29(v38, v30, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v39 = sub_1BDBCC59C(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
        v32 = *(_QWORD *)(v39 + 16);
        v31 = *(_QWORD *)(v39 + 24);
        if (v32 >= v31 >> 1)
          v39 = sub_1BDBCC59C(v31 > 1, v32 + 1, 1, v39);
        v33 = v38;
        v34 = v39;
        *(_QWORD *)(v39 + 16) = v32 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(v34+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v32, v33, v5);
        a1 = v43;
        goto LABEL_8;
      }
      result = sub_1BDAC350C((uint64_t)v4, &qword_1ED239CD8);
      v18 = v12;
      v19 = v13;
      a1 = v43;
    }
    while (v43 < 0);
  }
  if (v19)
  {
    v13 = (v19 - 1) & v19;
    v20 = __clz(__rbit64(v19)) | (v18 << 6);
    v12 = v18;
    goto LABEL_30;
  }
  v23 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    if (v23 < v41)
    {
      v24 = *(_QWORD *)(v42 + 8 * v23);
      v12 = v18 + 1;
      if (v24)
        goto LABEL_29;
      v12 = v18 + 2;
      if (v18 + 2 >= v41)
        goto LABEL_42;
      v24 = *(_QWORD *)(v42 + 8 * v12);
      if (v24)
        goto LABEL_29;
      v12 = v18 + 3;
      if (v18 + 3 >= v41)
        goto LABEL_42;
      v24 = *(_QWORD *)(v42 + 8 * v12);
      if (v24)
        goto LABEL_29;
      v12 = v18 + 4;
      if (v18 + 4 >= v41)
        goto LABEL_42;
      v24 = *(_QWORD *)(v42 + 8 * v12);
      if (v24)
      {
LABEL_29:
        v13 = (v24 - 1) & v24;
        v20 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_30:
        v22 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v20);
        if (v22)
          goto LABEL_31;
        goto LABEL_42;
      }
      v12 = v18 + 5;
      if (v18 + 5 < v41)
      {
        v24 = *(_QWORD *)(v42 + 8 * v12);
        if (!v24)
        {
          v25 = v18 + 6;
          while (v41 != v25)
          {
            v24 = *(_QWORD *)(v42 + 8 * v25++);
            if (v24)
            {
              v12 = v25 - 1;
              a1 = v43;
              goto LABEL_29;
            }
          }
          goto LABEL_42;
        }
        goto LABEL_29;
      }
    }
LABEL_42:
    sub_1BDAE1514();
    return v39;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB2D370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1BDBFCB40();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    v27 = sub_1BDBFD614();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1BDAC31B0(&qword_1ED23AD28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v31 = sub_1BDBFD6BC();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

void sub_1BDB2D6E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      sub_1BDBFE244();
      return;
    }
    v6 = v5;
    v7 = a2;
    goto LABEL_13;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = a1;
LABEL_13:
    sub_1BDB31E40(v6, v7);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v27 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  sub_1BD942914(0, (unint64_t *)&qword_1EF510130);
  v11 = 0;
  v28 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_39;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v15 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v28)
        return;
      v16 = *(_QWORD *)(v27 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v28)
          return;
        v16 = *(_QWORD *)(v27 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v28)
            return;
          v16 = *(_QWORD *)(v27 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_38:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_39:
    v18 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v19 = sub_1BDBFE064();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_46;
    v29 = v11;
    v22 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
    v23 = sub_1BDBFE070();

    if ((v23 & 1) == 0)
    {
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
        v26 = sub_1BDBFE070();

        if ((v26 & 1) != 0)
          goto LABEL_20;
      }
LABEL_46:

      return;
    }
LABEL_20:

    v11 = v29;
  }
  v17 = v15 + 4;
  if (v17 >= v28)
    return;
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_38;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_38;
  }
LABEL_49:
  __break(1u);
}

uint64_t NoteEditActivityEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t NoteEditActivityEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

void (*NoteEditActivityEvent.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.timeInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v2 = type metadata accessor for NoteEditActivityEvent(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v25 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  v13 = sub_1BDBFCAC8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v25 - v18;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BDB2BC00(v20);
  swift_bridgeObjectRelease();
  sub_1BDB2DD24(v21, v12);
  v26 = v1;
  sub_1BDAE1544(v1, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v22(v12, 1, v13) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v6, v13);
    sub_1BDAE1658((uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
    sub_1BDAC350C((uint64_t)v12, &qword_1ED239CD8);
  }
  else
  {
    sub_1BDAE1658((uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
  }
  sub_1BDB2E00C(v21, v10);
  swift_bridgeObjectRelease();
  v23 = v25;
  sub_1BDAE1544(v26, v25, type metadata accessor for NoteEditActivityEvent);
  if (v22(v10, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v23, v13);
    sub_1BDAE1658(v23, type metadata accessor for NoteEditActivityEvent);
    sub_1BDAC350C((uint64_t)v10, &qword_1ED239CD8);
  }
  else
  {
    sub_1BDAE1658(v23, type metadata accessor for NoteEditActivityEvent);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v10, v13);
  }
  return sub_1BDBFC45C();
}

uint64_t sub_1BDB2DD24@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_1BDBFCAC8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v34(v9, a1 + v31, v10);
  v32 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1BDAC350C((uint64_t)v9, &qword_1ED239CD8);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v30 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain();
  v21 = v17 - 1;
  if (v21)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v32 + v33 + v31;
    while (1)
    {
      v34(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      sub_1BDAC31B0((unint64_t *)&unk_1EF50FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v27 = sub_1BDBFD680();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1BDAC350C((uint64_t)v7, &qword_1ED239CD8);
  v22 = v30;
  v20(v30, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t sub_1BDB2E00C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_1BDBFCAC8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v34(v9, a1 + v31, v10);
  v32 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1BDAC350C((uint64_t)v9, &qword_1ED239CD8);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v30 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain();
  v21 = v17 - 1;
  if (v21)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v32 + v33 + v31;
    while (1)
    {
      v34(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      sub_1BDAC31B0((unint64_t *)&unk_1EF50FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v27 = sub_1BDBFD680();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1BDAC350C((uint64_t)v7, &qword_1ED239CD8);
  v22 = v30;
  v20(v30, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t NoteEditActivityEvent.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NoteEditActivityEvent.object.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = v1 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 20);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_QWORD *)(v5 + 16) = v4;
  return result;
}

void (*NoteEditActivityEvent.object.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for NoteEditActivityEvent(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.participant.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 NoteEditActivityEvent.participant.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

void (*NoteEditActivityEvent.participant.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for NoteEditActivityEvent(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.associatedAttachmentIds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for NoteEditActivityEvent(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BDB2CAF8(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1BDAF3D3C(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BDB2E4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t result;
  char v23;
  BOOL v24;
  uint64_t v25;
  char *v26;

  v26 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - v9;
  v11 = sub_1BDBFCAC8();
  v12 = *(_QWORD **)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v25 - v16;
  sub_1BDACDF20(a1, (uint64_t)v10);
  v18 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v12[6];
  if (v18((uint64_t)v10, 1, v11) == 1)
  {
    sub_1BDAC350C(a2, &qword_1ED239CD8);
    sub_1BDAC350C((uint64_t)v10, &qword_1ED239CD8);
LABEL_8:
    v24 = v18(a1, 1, v11) == 1;
    result = sub_1BDAC350C(a1, &qword_1ED239CD8);
    v23 = 2 * v24;
    goto LABEL_9;
  }
  v19 = (void (*)(char *, char *, uint64_t))v12[4];
  v19(v17, v10, v11);
  sub_1BDACDF20(a2, (uint64_t)v8);
  if (v18((uint64_t)v8, 1, v11) == 1)
  {
    sub_1BDBFCA14();
    sub_1BDAC350C((uint64_t)v8, &qword_1ED239CD8);
  }
  else
  {
    v19(v15, v8, v11);
  }
  v20 = sub_1BDBFCA80();
  sub_1BDAC350C(a2, &qword_1ED239CD8);
  v21 = (void (*)(char *, uint64_t))v12[1];
  v21(v15, v11);
  v21(v17, v11);
  if ((v20 & 1) == 0)
    goto LABEL_8;
  result = sub_1BDAC350C(a1, &qword_1ED239CD8);
  v23 = 1;
LABEL_9:
  *v26 = v23;
  return result;
}

NotesShared::NoteEditActivityEvent::Kinds_optional __swiftcall NoteEditActivityEvent.Kinds.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NotesShared::NoteEditActivityEvent::Kinds_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BDBFE5D4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NoteEditActivityEvent.Kinds.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746E65636572;
  if (*v0 != 1)
    v1 = 0x726568746FLL;
  if (*v0)
    return v1;
  else
    return 0x746C7561666564;
}

uint64_t sub_1BDB2E7B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BDB53118(*a1, *a2);
}

uint64_t sub_1BDB2E7C4()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB2E85C()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB2E8D0()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

NotesShared::NoteEditActivityEvent::Kinds_optional sub_1BDB2E964(Swift::String *a1)
{
  return NoteEditActivityEvent.Kinds.init(rawValue:)(*a1);
}

void sub_1BDB2E970(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x746E65636572;
  if (v2 != 1)
  {
    v5 = 0x726568746FLL;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x746C7561666564;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t NoteEditActivityEvent.kind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NoteEditActivityEvent(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NoteEditActivityEvent.kind.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for NoteEditActivityEvent(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

void (*NoteEditActivityEvent.kind.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for NoteEditActivityEvent(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void NoteEditActivityEvent.Parents.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v1 = v0;
  v2 = sub_1BDBFCB40();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  v9 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (void **)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BDAE1544(v1, (uint64_t)v11, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v14 = *v11;
  if (EnumCaseMultiPayload == 1)
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
    v16 = (char *)v11 + *(int *)(v15 + 48);
    v17 = (char *)v11 + *(int *)(v15 + 64);
    v18 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v18(v8, v16, v2);
    v18(v6, v17, v2);
    sub_1BDBFEA18();
    sub_1BDBFE07C();
    sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    sub_1BDBFD620();
    sub_1BDBFD620();

    v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v6, v2);
    v19(v8, v2);
  }
  else
  {
    sub_1BDBFEA18();
    sub_1BDBFE07C();

  }
}

uint64_t NoteEditActivityEvent.Parents.hashValue.getter()
{
  return sub_1BDB2F7F4((void (*)(_BYTE *))NoteEditActivityEvent.Parents.hash(into:));
}

uint64_t sub_1BDB2EC2C(uint64_t a1, uint64_t a2)
{
  return sub_1BDB2F844(a1, a2, (void (*)(_BYTE *))NoteEditActivityEvent.Parents.hash(into:));
}

uint64_t sub_1BDB2EC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB2F894(a1, a2, a3, (void (*)(_BYTE *))NoteEditActivityEvent.Parents.hash(into:));
}

uint64_t NoteEditActivityEvent.strings.getter()
{
  type metadata accessor for NoteEditActivityEvent(0);
  return swift_bridgeObjectRetain();
}

uint64_t NoteEditActivityEvent.strings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

void (*NoteEditActivityEvent.strings.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for NoteEditActivityEvent(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.edits.getter()
{
  type metadata accessor for NoteEditActivityEvent(0);
  return swift_bridgeObjectRetain();
}

uint64_t NoteEditActivityEvent.edits.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

void (*NoteEditActivityEvent.edits.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for NoteEditActivityEvent(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.substrings.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for NoteEditActivityEvent(0);
  v7 = v0;
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BDB349D8(v1, (uint64_t (*)(char *, uint64_t))sub_1BDB349D0, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BDB34C6C(v3, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

char *sub_1BDB2EDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *result;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;
  id v20;

  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BDB2C8C8(a2);
  swift_bridgeObjectRelease();
  if (!v6)
    return 0;
  v7 = sub_1BDB2C324(a2);
  result = (char *)objc_msgSend(v6, sel_range);
  v9 = result;
  v11 = v10;
  v12 = *(_QWORD *)(v7 + 16);
  if (!v12)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 32));
    if (*(_QWORD *)(v16 + 16))
    {
      v17 = sub_1BDB6AB44(a1);
      if ((v18 & 1) != 0)
      {
        v19 = *(id *)(*(_QWORD *)(v16 + 56) + 8 * v17);
        v20 = objc_msgSend(v19, sel_attributedSubstringFromRange_, v9, v11);

        return (char *)v20;
      }
    }

    return 0;
  }
  v13 = (_QWORD *)(v7 + 40);
  while (1)
  {
    v14 = &v9[v11];
    if (__OFADD__(v9, v11))
      break;
    v15 = *(v13 - 1);
    if (__OFADD__(v15, *v13))
      goto LABEL_19;
    if ((uint64_t)v14 <= v15 + *v13)
      v14 = (char *)(v15 + *v13);
    if ((uint64_t)v9 >= v15)
      v9 = (char *)*(v13 - 1);
    v11 = v14 - v9;
    if (__OFSUB__(v14, v9))
      goto LABEL_20;
    v13 += 2;
    if (!--v12)
      goto LABEL_12;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1BDB2EF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int v32;
  _BOOL8 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int64_t v47;

  v4 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D570);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v45 = (char *)&v40 - v11;
  v47 = 0;
  v43 = a1;
  v14 = *(_QWORD *)(a1 + 64);
  v13 = a1 + 64;
  v12 = v14;
  v15 = 1 << *(_BYTE *)(v13 - 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v12;
  v41 = v13;
  v42 = (unint64_t)(v15 + 63) >> 6;
  v40 = v42 - 1;
  v18 = &qword_1EF50D578;
  v19 = (uint64_t)v46;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v47 << 6);
LABEL_8:
      v22 = v43;
      sub_1BDAE1544(*(_QWORD *)(v43 + 48) + *(_QWORD *)(v44 + 72) * v21, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent.Parents);
      v23 = *(_QWORD *)(v22 + 56);
      v24 = __swift_instantiateConcreteTypeFromMangledName(v18);
      *(_QWORD *)&v9[*(int *)(v24 + 48)] = *(_QWORD *)(v23 + 8 * v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 0, 1, v24);
      swift_bridgeObjectRetain();
      v25 = (uint64_t)v45;
      goto LABEL_30;
    }
    v26 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    v25 = (uint64_t)v45;
    if (v26 < v42)
    {
      v27 = *(_QWORD *)(v41 + 8 * v26);
      if (v27)
        goto LABEL_12;
      v28 = v47 + 2;
      ++v47;
      if (v26 + 1 < v42)
      {
        v27 = *(_QWORD *)(v41 + 8 * v28);
        if (v27)
          goto LABEL_15;
        v47 = v26 + 1;
        if (v26 + 2 < v42)
        {
          v27 = *(_QWORD *)(v41 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          v47 = v26 + 2;
          if (v26 + 3 < v42)
          {
            v27 = *(_QWORD *)(v41 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_12;
            }
            v28 = v26 + 4;
            v47 = v26 + 3;
            if (v26 + 4 < v42)
              break;
          }
        }
      }
    }
LABEL_29:
    v29 = __swift_instantiateConcreteTypeFromMangledName(v18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 1, 1, v29);
    v17 = 0;
LABEL_30:
    sub_1BDB35FB0((uint64_t)v9, v25, &qword_1EF50D570);
    v30 = v18;
    v31 = __swift_instantiateConcreteTypeFromMangledName(v18);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v25, 1, v31);
    v33 = v32 == 1;
    if (v32 == 1)
      return v33;
    v34 = *(int *)(v31 + 48);
    sub_1BDAFE158(v25, v19, type metadata accessor for NoteEditActivityEvent.Parents);
    v35 = *(_QWORD *)(v25 + v34);
    sub_1BDB6AB44(v19);
    LOBYTE(v34) = v36;
    sub_1BDAE1658(v19, type metadata accessor for NoteEditActivityEvent.Parents);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v37 = swift_bridgeObjectRetain();
    sub_1BDB2D6E0(v37, v35);
    v39 = v38;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v18 = v30;
    if ((v39 & 1) == 0)
      return v33;
  }
  v27 = *(_QWORD *)(v41 + 8 * v28);
  if (v27)
  {
LABEL_15:
    v26 = v28;
LABEL_12:
    v17 = (v27 - 1) & v27;
    v21 = __clz(__rbit64(v27)) + (v26 << 6);
    v47 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v42)
    {
      v47 = v40;
      goto LABEL_29;
    }
    v27 = *(_QWORD *)(v41 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t NoteEditActivityEvent.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BDBFD620();
  v3 = type metadata accessor for NoteEditActivityEvent(0);
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 36));
  swift_bridgeObjectRetain();
  sub_1BDB31F90(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t NoteEditActivityEvent.customMirror.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35[16];
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v34 = a1;
  v33 = sub_1BDBFEA60();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C978);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for NoteEditActivityEvent(0);
  MEMORY[0x1E0C80A78](v7);
  sub_1BDAE1544(v1, (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BF98);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BDC1A250;
  *(_QWORD *)(v10 + 32) = 0x6D617473656D6974;
  *(_QWORD *)(v10 + 40) = 0xE900000000000070;
  v11 = sub_1BDBFCAC8();
  *(_QWORD *)(v10 + 72) = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_1, v1, v11);
  *(_QWORD *)(v10 + 80) = 0x7463656A626FLL;
  *(_QWORD *)(v10 + 88) = 0xE600000000000000;
  v13 = v1 + v7[5];
  v14 = *(_QWORD *)(v13 + 8);
  v15 = *(_QWORD *)(v13 + 16);
  *(_BYTE *)(v10 + 96) = *(_BYTE *)v13;
  *(_QWORD *)(v10 + 104) = v14;
  *(_QWORD *)(v10 + 112) = v15;
  *(_QWORD *)(v10 + 120) = &type metadata for ActivityEventObject;
  *(_QWORD *)(v10 + 128) = 0x7069636974726170;
  *(_QWORD *)(v10 + 136) = 0xEB00000000746E61;
  v16 = (uint64_t *)(v1 + v7[6]);
  v17 = *v16;
  v18 = v16[1];
  v20 = v16[2];
  v19 = v16[3];
  *(_QWORD *)(v10 + 168) = &type metadata for ActivityEventParticipant;
  v21 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v10 + 144) = v21;
  v21[2] = v17;
  v21[3] = v18;
  v21[4] = v20;
  v21[5] = v19;
  *(_QWORD *)(v10 + 176) = 1684957547;
  *(_QWORD *)(v10 + 184) = 0xE400000000000000;
  *(_BYTE *)(v10 + 192) = *(_BYTE *)(v2 + v7[7]);
  *(_QWORD *)(v10 + 216) = &type metadata for NoteEditActivityEvent.Kinds;
  *(_QWORD *)(v10 + 224) = 0x7374786574;
  *(_QWORD *)(v10 + 232) = 0xE500000000000000;
  v22 = *(_QWORD *)(v2 + v7[9]);
  v36 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1BDB349D8(v22, (uint64_t (*)(char *, uint64_t))sub_1BDB35FF4, (uint64_t)v35);
  swift_bridgeObjectRelease();
  v24 = swift_bridgeObjectRetain();
  v25 = sub_1BDB34C6C(v24, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDB2C588(v25);
  v27 = v26;
  swift_bridgeObjectRelease();
  v37 = v27;
  swift_bridgeObjectRetain();
  sub_1BDB3095C(&v37);
  swift_bridgeObjectRelease();
  v28 = v37;
  *(_QWORD *)(v10 + 264) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  *(_QWORD *)(v10 + 240) = v28;
  v29 = sub_1BDBFEA48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v32, *MEMORY[0x1E0DEDFE8], v33);
  return sub_1BDBFEA84();
}

uint64_t NoteEditActivityEvent.hashValue.getter()
{
  return sub_1BDB2F7F4((void (*)(_BYTE *))NoteEditActivityEvent.hash(into:));
}

uint64_t sub_1BDB2F7F4(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_1BDBFEA0C();
  a1(v3);
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB2F838(uint64_t a1, uint64_t a2)
{
  return sub_1BDB2F844(a1, a2, (void (*)(_BYTE *))NoteEditActivityEvent.hash(into:));
}

uint64_t sub_1BDB2F844(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_1BDBFEA0C();
  a3(v5);
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB2F888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB2F894(a1, a2, a3, (void (*)(_BYTE *))NoteEditActivityEvent.hash(into:));
}

uint64_t sub_1BDB2F894(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_1BDBFEA0C();
  a4(v6);
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB2F8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BDB2CAF8(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1BDAF3D3C(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BDB2F940(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  _QWORD aBlock[6];

  v37 = a7;
  v38 = a8;
  v39 = a5;
  v40 = a6;
  v36 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - v13;
  v34 = (uint64_t)&v34 - v13;
  v15 = sub_1BDBFCB40();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = objc_msgSend(a4, sel_table);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v36, v15);
  sub_1BDACDF20(v37, (uint64_t)v14);
  sub_1BDACDF20(v38, (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = (v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(unsigned __int8 *)(v10 + 80);
  v23 = (v22 + v21 + 8) & ~v22;
  v24 = (v11 + v22 + v23) & ~v22;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v19, v18, v15);
  v27 = v39;
  v26 = v40;
  *(_QWORD *)(v25 + v20) = v39;
  *(_QWORD *)(v25 + v21) = v26;
  sub_1BDB35FB0(v34, v25 + v23, &qword_1ED239CD8);
  sub_1BDB35FB0(v35, v25 + v24, &qword_1ED239CD8);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_1BDB35E44;
  *(_QWORD *)(v28 + 24) = v25;
  aBlock[4] = sub_1BDB35FFC;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB2FD98;
  aBlock[3] = &block_descriptor_17_0;
  v29 = _Block_copy(aBlock);
  v30 = a4;
  v31 = v27;
  swift_retain();
  swift_release();
  v32 = v41;
  objc_msgSend(v41, sel_enumerateRowsWithBlock_, v29);

  _Block_release(v29);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v29 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1BDB2FBF4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;

  v15 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_QWORD *)((char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = objc_msgSend(a4, sel_table);
  v33 = a5;
  v19 = (void *)sub_1BDBFCAF8();
  v20 = (void *)sub_1BDBFCAF8();
  v21 = objc_msgSend(v18, sel_mergeableStringForColumnID_rowID_, v19, v20);

  if (v21)
  {
    v32 = a9;
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
    v23 = (char *)v17 + *(int *)(v22 + 48);
    v24 = (char *)v17 + *(int *)(v22 + 64);
    *v17 = a6;
    v25 = sub_1BDBFCB40();
    v31[1] = a7;
    v26 = v25;
    v27 = a8;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v28(v23, v33, v25);
    v28(v24, a1, v26);
    swift_storeEnumTagMultiPayload();
    v29 = a6;
    v30 = _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v21, (uint64_t)v17, v27, v32);
    sub_1BDBC3E7C(v30);

    sub_1BDAE1658((uint64_t)v17, type metadata accessor for NoteEditActivityEvent.Parents);
  }
}

uint64_t sub_1BDB2FD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v7 = sub_1BDBFCB40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(a1 + 32);
  sub_1BDBFCB10();
  v11(v10, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_1BDB2FE4C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  id v41;
  id v42;
  void (*v43)(char *, uint64_t);
  id v44;
  void *v45;
  unsigned int v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  char v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  id v62;
  void *v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  int v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char v77;
  char *v78;
  char v79;
  void (*v80)(char *, uint64_t);
  id result;
  void *v82;
  id v83;
  uint64_t v84;
  id v85;
  id v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t inited;
  id v105;
  unint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  uint64_t *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  int v140;
  unsigned __int8 v141;

  v120 = a8;
  v140 = a7;
  v130 = a6;
  v131 = a9;
  v128 = a5;
  v132 = a4;
  v133 = a3;
  v135 = sub_1BDBFCAC8();
  v138 = *(_QWORD *)(v135 - 8);
  v14 = MEMORY[0x1E0C80A78](v135);
  v125 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v124 = (char *)&v119 - v17;
  MEMORY[0x1E0C80A78](v16);
  v129 = (char *)&v119 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v123 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v122 = (char *)&v119 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v121 = (uint64_t)&v119 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v127 = (char *)&v119 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v126 = (uint64_t)&v119 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v119 - v31;
  MEMORY[0x1E0C80A78](v30);
  v134 = (uint64_t)&v119 - v33;
  v34 = sub_1BDBFCB40();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v119 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v119 - v39;
  v41 = *a1;
  v42 = objc_msgSend(*a1, sel_replicaID);
  sub_1BDBFCB10();

  LOBYTE(a2) = sub_1BDAD2350((uint64_t)v40, a2);
  v43 = *(void (**)(char *, uint64_t))(v35 + 8);
  v137 = v34;
  *(_QWORD *)&v136 = v43;
  v43(v40, v34);
  if ((a2 & 1) != 0
    || (v44 = objc_msgSend(v41, sel_replicaID),
        sub_1BDBFCB10(),
        v44,
        v45 = (void *)sub_1BDBFCAF8(),
        ((void (*)(char *, uint64_t))v136)(v40, v137),
        v46 = objc_msgSend(v133, sel_trustsTimestampsFromReplicaID_, v45),
        v45,
        v46))
  {
    v47 = objc_msgSend(v41, sel_timestamp);
    v48 = v41;
    if (v47)
    {
      v49 = v47;
      sub_1BDBFCAA4();

      v50 = 0;
    }
    else
    {
      v50 = 1;
    }
    v51 = v135;
    v52 = v132;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v138 + 56))(v32, v50, 1, v135);
    v53 = (uint64_t)v32;
    v54 = v134;
    sub_1BDB35FB0(v53, v134, &qword_1ED239CD8);
  }
  else
  {
    v54 = v134;
    v51 = v135;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56))(v134, 1, 1, v135);
    v48 = v41;
    v52 = v132;
  }
  v55 = objc_msgSend(v48, sel_replicaID);
  sub_1BDBFCB10();

  if (*(_QWORD *)(v52 + 16) && (v56 = sub_1BDB6AB9C((uint64_t)v38), (v57 & 1) != 0))
  {
    v58 = (uint64_t *)(*(_QWORD *)(v52 + 56) + 16 * v56);
    v59 = (char *)v58[1];
    v132 = *v58;
    v133 = v48;
    swift_bridgeObjectRetain();
    ((void (*)(char *, uint64_t))v136)(v38, v137);
  }
  else
  {
    v60 = v137;
    v61 = (void (*)(char *, uint64_t))v136;
    ((void (*)(char *, uint64_t))v136)(v38, v137);
    v62 = objc_msgSend(v48, sel_replicaID);
    sub_1BDBFCB10();

    v63 = (void *)sub_1BDBFCAF8();
    v61(v40, v60);
    v64 = objc_msgSend(v133, sel_userIDForReplicaID_, v63);

    if (!v64)
    {
      sub_1BDAC350C(v54, &qword_1ED239CD8);
LABEL_27:
      v90 = type metadata accessor for NoteEditActivityEvent(0);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v131, 1, 1, v90);
    }
    v133 = v48;
    v132 = sub_1BDBFD6F8();
    v59 = v65;

  }
  v66 = v126;
  sub_1BDACDF20(v128, v126);
  v67 = v138;
  v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
  v69 = v68(v66, 1, v51);
  v70 = (uint64_t)v127;
  if (v69 == 1)
  {
    sub_1BDAC350C(v66, &qword_1ED239CD8);
  }
  else
  {
    v71 = v66;
    v72 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 32);
    v72(v129, v71, v51);
    sub_1BDACDF20(v54, v70);
    if (v68(v70, 1, v51) == 1)
    {
      v73 = v124;
      sub_1BDBFC9C0();
      sub_1BDAC350C(v70, &qword_1ED239CD8);
    }
    else
    {
      v74 = v70;
      v75 = v124;
      v72(v124, v74, v51);
      v73 = v75;
    }
    v76 = v129;
    v77 = sub_1BDBFCA80();
    v78 = v73;
    v79 = v77;
    v80 = *(void (**)(char *, uint64_t))(v67 + 8);
    v80(v78, v51);
    v80(v76, v51);
    if ((v79 & 1) == 0)
    {
LABEL_26:
      sub_1BDAC350C(v54, &qword_1ED239CD8);
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  result = objc_msgSend(v130, sel_attributedString);
  if (!result)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  v82 = result;
  v83 = objc_msgSend(v133, sel_range);
  v85 = objc_msgSend(v82, sel_attributedSubstringFromRange_, v83, v84);

  v86 = objc_msgSend(v85, sel_string);
  if (!v86)
  {
    sub_1BDBFD6F8();
    v86 = (id)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  v87 = objc_msgSend(v86, sel_ic_containsNonWhitespaceCharacters);

  if (!v87)
    goto LABEL_26;
  v129 = v59;
  v88 = v121;
  sub_1BDACDF20(v54, v121);
  v89 = v135;
  if (v68(v88, 1, v135) == 1)
  {
    sub_1BDBFC9C0();
    sub_1BDAC350C(v88, &qword_1ED239CD8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v125, v88, v89);
  }
  v91 = (uint64_t)v123;
  v92 = (uint64_t)v122;
  swift_bridgeObjectRetain();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  ((void (*)(char *, uint64_t))v136)(v40, v137);
  swift_bridgeObjectRelease();
  sub_1BDACDF20(v134, v92);
  sub_1BDACDF20(a11, v91);
  sub_1BDB2E4DC(v92, v91, (char *)&v141);
  LODWORD(v137) = v141;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5C0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC98);
  v94 = *(unsigned __int8 *)(*(_QWORD *)(v93 - 8) + 80);
  v95 = (v94 + 32) & ~v94;
  v96 = swift_allocObject();
  v136 = xmmword_1BDC16BA0;
  *(_OWORD *)(v96 + 16) = xmmword_1BDC16BA0;
  sub_1BDAE1544(a12, v96 + v95, type metadata accessor for NoteEditActivityEvent.Parents);
  result = objc_msgSend(v130, sel_attributedString);
  if (!result)
    goto LABEL_38;
  v97 = v140 & 1;
  *(_QWORD *)(v96 + v95 + *(int *)(v93 + 48)) = result;
  v98 = sub_1BDB0AE30(v96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5C8);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC88);
  v100 = *(unsigned __int8 *)(*(_QWORD *)(v99 - 8) + 80);
  v101 = (v100 + 32) & ~v100;
  v102 = swift_allocObject();
  *(_OWORD *)(v102 + 16) = v136;
  v103 = v102 + v101;
  sub_1BDAE1544(a12, v102 + v101, type metadata accessor for NoteEditActivityEvent.Parents);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC1A240;
  v105 = v133;
  *(_QWORD *)(inited + 32) = v133;
  v139 = inited;
  sub_1BDBFD9F8();
  v106 = v139;
  if (v139 >> 62)
  {
    v111 = v105;
    swift_bridgeObjectRetain();
    v112 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v112)
      goto LABEL_32;
LABEL_34:
    v110 = MEMORY[0x1E0DEE9E8];
    goto LABEL_35;
  }
  v107 = *(_QWORD *)((v139 & 0xFFFFFFFFFFFFF8) + 0x10);
  v108 = v105;
  if (!v107)
    goto LABEL_34;
LABEL_32:
  sub_1BDAEDCA4(v106);
  v110 = v109;
LABEL_35:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v103 + *(int *)(v99 + 48)) = v110;
  v113 = sub_1BDB0AFBC(v102);
  sub_1BDAC350C(v134, &qword_1ED239CD8);
  v114 = v131;
  (*(void (**)(uint64_t, char *, uint64_t))(v138 + 32))(v131, v125, v135);
  v115 = (int *)type metadata accessor for NoteEditActivityEvent(0);
  v116 = v114 + v115[5];
  *(_BYTE *)v116 = v97;
  *(_QWORD *)(v116 + 8) = v120;
  *(_QWORD *)(v116 + 16) = a10;
  v117 = (uint64_t *)(v114 + v115[6]);
  v118 = v129;
  *v117 = v132;
  v117[1] = (uint64_t)v118;
  v117[2] = 0;
  v117[3] = 0;
  *(_BYTE *)(v114 + v115[7]) = v137;
  *(_QWORD *)(v114 + v115[8]) = v98;
  *(_QWORD *)(v114 + v115[9]) = v113;
  return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v115 - 1) + 56))(v114, 0, 1, v115);
}

BOOL ICNote.hasRecentExternalEdits.getter()
{
  void *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = ICCloudSyncingObject.editActivityEvents.getter();
  v2 = v0;
  v3 = sub_1BDB34138((uint64_t)v1, v2);
  swift_bridgeObjectRelease();

  v4 = v2;
  v5 = sub_1BDB344B4(v3, v4);
  swift_bridgeObjectRelease();

  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  return v6 != 0;
}

uint64_t sub_1BDB3095C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BDBBCFA4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BDB309C4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BDB309C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1BDBFE748();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1BDB310AC(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1BDB31178((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1BDBBCF04((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BDBFDA4C();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1BDBFE874();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1BDBFE874()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BDBBCAF8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1BDBBCAF8((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1BDB31178((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1BDBFE874() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1BDBFE520();
  __break(1u);
  return result;
}

uint64_t sub_1BDB310AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1BDBFE874(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDB31178(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1BDBFE874() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1BDBFE874() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1BDBBCE5C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

void sub_1BDB31410(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  id v61;

  v56 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BDBFCB40();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v57 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v55 = (char *)&v44 - v14;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5D0);
  MEMORY[0x1E0C80A78](v53);
  v52 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = v16;
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_22:
    sub_1BDAC350C((uint64_t)v9, &qword_1ED23AD30);
LABEL_23:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return;
  }
  v17 = 0;
  v58 = (uint64_t *)(a2 + 40);
  v48 = a2;
  v49 = a1;
  v50 = v10;
  v46 = v9;
  v47 = v11;
  while (1)
  {
    if (v17 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      sub_1BDBFE994();
      __break(1u);
      goto LABEL_30;
    }
    v18 = *(_QWORD *)(v11 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)) + v18 * v17, v10);
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      goto LABEL_22;
    v45 = v19;
    v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v20(v55, v9, v10);
    v21 = *(_QWORD *)(a2 + 16);
    if (v17 == v21)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v55, v10);
      goto LABEL_23;
    }
    if (v17 >= v21)
      goto LABEL_26;
    v23 = *(v58 - 1);
    v22 = *v58;
    v24 = v52;
    v25 = &v52[*(int *)(v53 + 48)];
    v20(v52, v55, v10);
    v54 = v23;
    *(_QWORD *)v25 = v23;
    *((_QWORD *)v25 + 1) = v22;
    v26 = (uint64_t)v57;
    v20(v57, v24, v10);
    v27 = (_QWORD *)*v56;
    swift_bridgeObjectRetain();
    v29 = sub_1BDB6AB9C(v26);
    v30 = v27[2];
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
      goto LABEL_27;
    v33 = v28;
    if (v27[3] < v32)
      break;
    if ((a3 & 1) != 0)
    {
      if ((v28 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      sub_1BDBCCE08();
      if ((v33 & 1) != 0)
        goto LABEL_18;
    }
LABEL_14:
    v36 = (uint64_t)v57;
    v37 = (_QWORD *)*v56;
    *(_QWORD *)(*v56 + 8 * (v29 >> 6) + 64) |= 1 << v29;
    v10 = v50;
    v20((char *)(v37[6] + v29 * v18), (char *)v36, v50);
    v38 = (_QWORD *)(v37[7] + 16 * v29);
    *v38 = v54;
    v38[1] = v22;
    v39 = v37[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_28;
    ++v17;
    v37[2] = v41;
    v58 += 2;
    a3 = 1;
    a2 = v48;
    a1 = v49;
    v9 = v46;
    v11 = v47;
    if (v51 == v17)
    {
      v45(v46, 1, 1, v10);
      goto LABEL_22;
    }
  }
  sub_1BDBCE468(v32, a3 & 1);
  v34 = sub_1BDB6AB9C((uint64_t)v57);
  if ((v33 & 1) != (v35 & 1))
    goto LABEL_29;
  v29 = v34;
  if ((v33 & 1) == 0)
    goto LABEL_14;
LABEL_18:
  v42 = (void *)swift_allocError();
  swift_willThrow();
  v61 = v42;
  v43 = v42;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v57, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_30:
  v59 = 0;
  v60 = 0xE000000000000000;
  sub_1BDBFE304();
  sub_1BDBFD7DC();
  sub_1BDBFE4E4();
  sub_1BDBFD7DC();
  sub_1BDBFE52C();
  __break(1u);
}

void sub_1BDB31918(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  id v64;

  v52[0] = type metadata accessor for NoteEditActivityEvent.Parents(0);
  v8 = *(_QWORD *)(v52[0] - 8);
  MEMORY[0x1E0C80A78](v52[0]);
  v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D588);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = -1 << *(_BYTE *)(a1 + 32);
  v15 = ~v14;
  v16 = *(_QWORD *)(a1 + 64);
  v17 = -v14;
  v56 = a1;
  v57 = a1 + 64;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v58 = v15;
  v59 = 0;
  v60 = v18 & v16;
  v61 = a2;
  v62 = 0;
  v63 = 0;
  swift_bridgeObjectRetain();
  v52[2] = a2;
  swift_bridgeObjectRetain();
  sub_1BDB32568((uint64_t)v13);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v13, 1, v19) == 1)
    goto LABEL_5;
  v53 = v8;
  v20 = *(int *)(v19 + 48);
  sub_1BDAFE158((uint64_t)v13, (uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
  v21 = *(void **)&v13[v20];
  v22 = (_QWORD *)*a4;
  v24 = sub_1BDB6AB44((uint64_t)v10);
  v25 = v22[2];
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
    goto LABEL_26;
  v28 = v23;
  if (v22[3] >= v27)
  {
    if ((a3 & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_1BDBCD5E8();
      if ((v28 & 1) != 0)
        goto LABEL_13;
    }
LABEL_16:
    v33 = (_QWORD *)*a4;
    *(_QWORD *)(*a4 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v34 = v33[6];
    v53 = *(_QWORD *)(v53 + 72);
    sub_1BDAFE158((uint64_t)v10, v34 + v53 * v24, type metadata accessor for NoteEditActivityEvent.Parents);
    *(_QWORD *)(v33[7] + 8 * v24) = v21;
    v35 = v33[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v33[2] = v37;
    sub_1BDB32568((uint64_t)v13);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC98);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v13, 1, v38) == 1)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BDAE1514();
      swift_bridgeObjectRelease();
      return;
    }
    while (1)
    {
      v39 = *(int *)(v38 + 48);
      sub_1BDAFE158((uint64_t)v13, (uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
      v21 = *(void **)&v13[v39];
      v40 = (_QWORD *)*a4;
      v42 = sub_1BDB6AB44((uint64_t)v10);
      v43 = v40[2];
      v44 = (v41 & 1) == 0;
      v45 = v43 + v44;
      if (__OFADD__(v43, v44))
        break;
      v46 = v41;
      if (v40[3] < v45)
      {
        sub_1BDBCF15C(v45, 1);
        v47 = sub_1BDB6AB44((uint64_t)v10);
        if ((v46 & 1) != (v48 & 1))
          goto LABEL_28;
        v42 = v47;
      }
      if ((v46 & 1) != 0)
        goto LABEL_13;
      v49 = (_QWORD *)*a4;
      *(_QWORD *)(*a4 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      sub_1BDAFE158((uint64_t)v10, v49[6] + v53 * v42, type metadata accessor for NoteEditActivityEvent.Parents);
      *(_QWORD *)(v49[7] + 8 * v42) = v21;
      v50 = v49[2];
      v36 = __OFADD__(v50, 1);
      v51 = v50 + 1;
      if (v36)
        goto LABEL_27;
      v49[2] = v51;
      sub_1BDB32568((uint64_t)v13);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC98);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v13, 1, v38) == 1)
        goto LABEL_5;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_1BDBCF15C(v27, a3 & 1);
  v29 = sub_1BDB6AB44((uint64_t)v10);
  if ((v28 & 1) != (v30 & 1))
  {
LABEL_28:
    sub_1BDBFE994();
    __break(1u);
    goto LABEL_29;
  }
  v24 = v29;
  if ((v28 & 1) == 0)
    goto LABEL_16;
LABEL_13:
  v31 = (void *)swift_allocError();
  swift_willThrow();
  v64 = v31;
  v32 = v31;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDAE1658((uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
    sub_1BDAE1514();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_29:
  v54 = 0;
  v55 = 0xE000000000000000;
  sub_1BDBFE304();
  sub_1BDBFD7DC();
  sub_1BDBFE4E4();
  sub_1BDBFD7DC();
  sub_1BDBFE52C();
  __break(1u);
}

void sub_1BDB31E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_1BDBFE220())
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = sub_1BDBFE25C();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1BDB31F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[4];
  uint64_t v43;

  v4 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D570);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v36 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v38 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v39 = (unint64_t)(v14 + 63) >> 6;
  v37 = v39 - 1;
  v41 = a2;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v19 = 0;
  if (!v16)
    goto LABEL_6;
LABEL_4:
  v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v21 = v20 | (v19 << 6);
LABEL_5:
  v22 = v41;
  sub_1BDAE1544(*(_QWORD *)(v41 + 48) + *(_QWORD *)(v40 + 72) * v21, (uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
  v23 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v21);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D578);
  *(_QWORD *)&v10[*(int *)(v24 + 48)] = v23;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 0, 1, v24);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1BDB35FB0((uint64_t)v10, (uint64_t)v12, &qword_1EF50D570);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D578);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v12, 1, v30) == 1)
    {
      swift_release();
      return sub_1BDBFEA18();
    }
    v31 = *(int *)(v30 + 48);
    sub_1BDAFE158((uint64_t)v12, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent.Parents);
    v32 = *(_QWORD *)&v12[v31];
    v33 = *(_QWORD *)(a1 + 64);
    v34 = *(_OWORD *)(a1 + 16);
    v42[0] = *(_OWORD *)a1;
    v42[1] = v34;
    v35 = *(_OWORD *)(a1 + 48);
    v42[2] = *(_OWORD *)(a1 + 32);
    v42[3] = v35;
    v43 = v33;
    NoteEditActivityEvent.Parents.hash(into:)();
    sub_1BDAE1658((uint64_t)v6, type metadata accessor for NoteEditActivityEvent.Parents);
    sub_1BDB322F8((uint64_t)v42, v32);
    swift_bridgeObjectRelease();
    result = sub_1BDBFEA30();
    v18 ^= result;
    if (v16)
      goto LABEL_4;
LABEL_6:
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v39)
    {
      v26 = *(_QWORD *)(v38 + 8 * v25);
      if (v26)
        goto LABEL_9;
      v27 = v19 + 2;
      ++v19;
      if (v25 + 1 < v39)
      {
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (v26)
        {
          ++v25;
LABEL_9:
          v16 = (v26 - 1) & v26;
          v21 = __clz(__rbit64(v26)) + (v25 << 6);
          v19 = v25;
          goto LABEL_5;
        }
        v28 = v25 + 2;
        v19 = v25 + 1;
        if (v25 + 2 < v39)
          break;
      }
    }
LABEL_21:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D578);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v10, 1, 1, v29);
    v16 = 0;
  }
  v26 = *(_QWORD *)(v38 + 8 * v28);
  if (v26)
  {
    v25 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v25 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v25 >= v39)
    {
      v19 = v37;
      goto LABEL_21;
    }
    v26 = *(_QWORD *)(v38 + 8 * v25);
    ++v28;
    if (v26)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1BDB322F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;

  sub_1BDBFEA30();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BDBFE1E4();
    sub_1BD942914(0, (unint64_t *)&qword_1EF510130);
    sub_1BDB35B38();
    sub_1BDBFDD40();
    a2 = v21;
    v3 = v22;
    v4 = v23;
    v5 = v24;
    v6 = v25;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v3 = a2 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v10 = 0;
  v11 = (unint64_t)(v4 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_1BDBFE250())
      goto LABEL_26;
    sub_1BD942914(0, (unint64_t *)&qword_1EF510130);
    swift_dynamicCast();
    v15 = v20;
    if (!v20)
      goto LABEL_26;
    v14 = v5;
    v12 = v6;
LABEL_10:
    v17 = sub_1BDBFE064();

    v10 ^= v17;
    v5 = v14;
    v6 = v12;
  }
  if (v6)
  {
    v12 = (v6 - 1) & v6;
    v13 = __clz(__rbit64(v6)) | (v5 << 6);
    v14 = v5;
LABEL_9:
    v15 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v13);
    v20 = v15;
    v16 = v15;
    if (!v15)
      goto LABEL_26;
    goto LABEL_10;
  }
  v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v11)
      goto LABEL_26;
    v18 = *(_QWORD *)(v3 + 8 * v14);
    if (!v18)
    {
      v14 = v5 + 2;
      if (v5 + 2 >= v11)
        goto LABEL_26;
      v18 = *(_QWORD *)(v3 + 8 * v14);
      if (!v18)
      {
        v19 = v5 + 3;
        while (v11 != v19)
        {
          v18 = *(_QWORD *)(v3 + 8 * v19++);
          if (v18)
          {
            v14 = v19 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1BDAE1514();
        sub_1BDBFEA18();
        return;
      }
    }
LABEL_22:
    v12 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

id sub_1BDB32568@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D590);
  MEMORY[0x1E0C80A78](v3);
  v5 = (unint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + 56) == 1)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC98);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
  v12 = *v1;
  v13 = v1[1];
  v14 = v1[2];
  v15 = v1[3];
  v16 = v1[4];
  v31 = a1;
  if (v16)
  {
    v17 = (v16 - 1) & v16;
    v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_5:
    sub_1BDAE1544(*(_QWORD *)(v12 + 48) + *(_QWORD *)(v7 + 72) * v18, v5, type metadata accessor for NoteEditActivityEvent.Parents);
    v19 = 0;
    goto LABEL_6;
  }
  v21 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  v22 = (unint64_t)(v14 + 64) >> 6;
  if (v21 >= v22)
  {
    v17 = 0;
    v19 = 1;
    goto LABEL_6;
  }
  v23 = *(_QWORD *)(v13 + 8 * v21);
  if (v23)
  {
LABEL_15:
    v17 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v21 << 6);
    v15 = v21;
    goto LABEL_5;
  }
  v24 = v15 + 2;
  if (v15 + 2 >= v22)
    goto LABEL_31;
  v23 = *(_QWORD *)(v13 + 8 * v24);
  if (v23)
  {
LABEL_19:
    v21 = v24;
    goto LABEL_15;
  }
  if (v15 + 3 >= v22)
    goto LABEL_32;
  v23 = *(_QWORD *)(v13 + 8 * (v15 + 3));
  if (v23)
  {
    v21 = v15 + 3;
    goto LABEL_15;
  }
  v24 = v15 + 4;
  if (v15 + 4 < v22)
  {
    v23 = *(_QWORD *)(v13 + 8 * v24);
    if (v23)
      goto LABEL_19;
    v21 = v15 + 5;
    if (v15 + 5 < v22)
    {
      v23 = *(_QWORD *)(v13 + 8 * v21);
      if (v23)
        goto LABEL_15;
      v21 = v22 - 1;
      v25 = v15 + 6;
      while (v22 != v25)
      {
        v23 = *(_QWORD *)(v13 + 8 * v25++);
        if (v23)
        {
          v21 = v25 - 1;
          goto LABEL_15;
        }
      }
LABEL_31:
      v17 = 0;
      v19 = 1;
      v15 = v21;
      goto LABEL_6;
    }
LABEL_32:
    v17 = 0;
    v19 = 1;
    v15 = v24;
    goto LABEL_6;
  }
  v17 = 0;
  v19 = 1;
  v15 += 3;
LABEL_6:
  (*(void (**)(unint64_t, uint64_t, uint64_t, unint64_t))(v7 + 56))(v5, v19, 1, v6);
  *v1 = v12;
  v1[1] = v13;
  v1[2] = v14;
  v1[3] = v15;
  v1[4] = v17;
  if ((*(unsigned int (**)(unint64_t, uint64_t, unint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1BDAC350C(v5, &qword_1EF50D590);
    v14 = v31;
LABEL_11:
    *((_BYTE *)v1 + 56) = 1;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC98);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  }
  result = (id)sub_1BDAFE158(v5, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent.Parents);
  v6 = v1[5];
  v5 = v1[6];
  v14 = v31;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1BDBFE574();
    result = (id)swift_bridgeObjectRelease();
    if (v5 == v26)
      goto LABEL_10;
  }
  else if (v5 == *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    sub_1BDAE1658((uint64_t)v9, type metadata accessor for NoteEditActivityEvent.Parents);
    goto LABEL_11;
  }
  if ((v6 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      result = *(id *)(v6 + 8 * v5 + 32);
      goto LABEL_39;
    }
    __break(1u);
    goto LABEL_46;
  }
LABEL_43:
  result = (id)MEMORY[0x1C3B79954](v5, v6);
LABEL_39:
  v27 = result;
  if (__OFADD__(v5, 1))
  {
LABEL_46:
    __break(1u);
    return result;
  }
  v1[6] = v5 + 1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC98);
  v29 = *(int *)(v28 + 48);
  sub_1BDAFE158((uint64_t)v9, v14, type metadata accessor for NoteEditActivityEvent.Parents);
  *(_QWORD *)(v14 + v29) = v27;
  return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 0, 1, v28);
}

uint64_t sub_1BDB32948(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t _s11NotesShared21NoteEditActivityEventV7ParentsO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void **v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  char *v44;
  char v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  void *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  void *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v55;
  char *v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;

  v61 = (char *)a1;
  v62 = (char *)a2;
  v2 = sub_1BDBFCB40();
  v3 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  v60 = v3;
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v55 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v55 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v55 - v13;
  v15 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (void **)((char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v20 = (void **)((char *)&v55 - v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5A0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (void **)&v24[*(int *)(v22 + 48)];
  sub_1BDAE1544((uint64_t)v61, (uint64_t)v24, type metadata accessor for NoteEditActivityEvent.Parents);
  sub_1BDAE1544((uint64_t)v62, (uint64_t)v25, type metadata accessor for NoteEditActivityEvent.Parents);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BDAE1544((uint64_t)v24, (uint64_t)v20, type metadata accessor for NoteEditActivityEvent.Parents);
    v48 = *v20;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v51 = *v25;
      sub_1BD942914(0, (unint64_t *)&qword_1ED23B120);
      v45 = sub_1BDBFE070();

      goto LABEL_11;
    }

    goto LABEL_9;
  }
  v58 = v6;
  v26 = v60;
  v61 = v9;
  v62 = v12;
  sub_1BDAE1544((uint64_t)v24, (uint64_t)v18, type metadata accessor for NoteEditActivityEvent.Parents);
  v27 = *v18;
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
  v29 = *(int *)(v28 + 48);
  v30 = (char *)v18 + v29;
  v31 = *(int *)(v28 + 64);
  v32 = (char *)v18 + v31;
  if (swift_getEnumCaseMultiPayload() != 1)
  {

    v49 = *(void (**)(char *, uint64_t))(v26 + 8);
    v50 = v59;
    v49(v32, v59);
    v49(v30, v50);
LABEL_9:
    sub_1BDAC350C((uint64_t)v24, &qword_1EF50D5A0);
LABEL_15:
    v45 = 0;
    return v45 & 1;
  }
  v33 = *v25;
  v56 = v14;
  v57 = v33;
  v34 = (char *)v25 + v29;
  v35 = (char *)v25 + v31;
  v36 = v26;
  v37 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v38 = v14;
  v39 = v59;
  v37(v38, v30, v59);
  v40 = (uint64_t)v62;
  v37(v62, v32, v39);
  v41 = (uint64_t)v61;
  v37(v61, v34, v39);
  v42 = v58;
  v37(v58, v35, v39);
  sub_1BD942914(0, (unint64_t *)&qword_1ED23B120);
  v43 = v57;
  LOBYTE(v34) = sub_1BDBFE070();

  if ((v34 & 1) == 0)
  {
    v52 = *(void (**)(char *, uint64_t))(v36 + 8);
    v52(v42, v39);
    v52((char *)v41, v39);
    v52((char *)v40, v39);
    v53 = v56;
LABEL_14:
    v52(v53, v39);
    sub_1BDAE1658((uint64_t)v24, type metadata accessor for NoteEditActivityEvent.Parents);
    goto LABEL_15;
  }
  v44 = v56;
  if ((sub_1BDBFCB04() & 1) == 0)
  {
    v52 = *(void (**)(char *, uint64_t))(v36 + 8);
    v52(v42, v39);
    v52((char *)v41, v39);
    v52((char *)v40, v39);
    v53 = v44;
    goto LABEL_14;
  }
  v45 = sub_1BDBFCB04();
  v46 = v42;
  v47 = *(void (**)(char *, uint64_t))(v36 + 8);
  v47(v46, v39);
  v47((char *)v41, v39);
  v47((char *)v40, v39);
  v47(v44, v39);
LABEL_11:
  sub_1BDAE1658((uint64_t)v24, type metadata accessor for NoteEditActivityEvent.Parents);
  return v45 & 1;
}

uint64_t _s11NotesShared21NoteEditActivityEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  _BYTE v47[4];
  int v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;

  v4 = type metadata accessor for NoteEditActivityEvent(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v5);
  v53 = &v47[-v9];
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v47[-v11];
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = &v47[-v14];
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = &v47[-v17];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v47[-v19];
  v21 = sub_1BDBFCA98();
  sub_1BDAE1544(a1, (uint64_t)v20, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1544(a2, (uint64_t)v18, type metadata accessor for NoteEditActivityEvent);
  if ((v21 & 1) == 0)
    goto LABEL_26;
  v51 = v7;
  v52 = v4;
  v22 = *(int *)(v4 + 20);
  v23 = v20[v22];
  v24 = *(_QWORD *)&v20[v22 + 8];
  v25 = *(_QWORD *)&v20[v22 + 16];
  v26 = &v18[v22];
  v27 = *((_QWORD *)v26 + 2);
  if (v23)
    v28 = 1702129518;
  else
    v28 = 0x7265646C6F66;
  if (v23)
    v29 = 0xE400000000000000;
  else
    v29 = 0xE600000000000000;
  if (*v26)
    v30 = 1702129518;
  else
    v30 = 0x7265646C6F66;
  if (*v26)
    v31 = 0xE400000000000000;
  else
    v31 = 0xE600000000000000;
  v32 = v28 == v30 && v29 == v31;
  v49 = *((_QWORD *)v26 + 1);
  v50 = v24;
  if (v32)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
LABEL_21:
    if (v50 == v49 && v25 == v27)
    {
      swift_bridgeObjectRelease_n();
      v7 = v51;
      v35 = v52;
    }
    else
    {
      v34 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v51;
      v35 = v52;
      if ((v34 & 1) == 0)
        goto LABEL_26;
    }
    sub_1BDAE1658((uint64_t)v18, type metadata accessor for NoteEditActivityEvent);
    sub_1BDAE1658((uint64_t)v20, type metadata accessor for NoteEditActivityEvent);
    sub_1BDAE1544(a1, (uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
    sub_1BDAE1544(a2, (uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
    v39 = *(int *)(v35 + 24);
    v40 = *(_QWORD *)&v15[v39];
    v41 = *(_QWORD *)&v15[v39 + 8];
    v42 = &v12[v39];
    if (v40 == *v42 && v41 == v42[1])
    {
      sub_1BDAE1658((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      sub_1BDAE1658((uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
      v43 = a1;
      v37 = v53;
      sub_1BDAE1544(v43, (uint64_t)v53, type metadata accessor for NoteEditActivityEvent);
      sub_1BDAE1544(a2, (uint64_t)v7, type metadata accessor for NoteEditActivityEvent);
    }
    else
    {
      v44 = sub_1BDBFE874();
      sub_1BDAE1658((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      sub_1BDAE1658((uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
      v45 = a1;
      v37 = v53;
      sub_1BDAE1544(v45, (uint64_t)v53, type metadata accessor for NoteEditActivityEvent);
      sub_1BDAE1544(a2, (uint64_t)v7, type metadata accessor for NoteEditActivityEvent);
      v38 = 0;
      if ((v44 & 1) == 0)
        goto LABEL_33;
    }
    v38 = sub_1BDB2EF40(*(_QWORD *)&v37[*(int *)(v52 + 36)], *(_QWORD *)&v7[*(int *)(v52 + 36)]);
    goto LABEL_33;
  }
  v48 = sub_1BDBFE874();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
    goto LABEL_21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v51;
LABEL_26:
  sub_1BDAE1658((uint64_t)v18, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1658((uint64_t)v20, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1544(a1, (uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1544(a2, (uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1658((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1658((uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
  v36 = a1;
  v37 = v53;
  sub_1BDAE1544(v36, (uint64_t)v53, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1544(a2, (uint64_t)v7, type metadata accessor for NoteEditActivityEvent);
  v38 = 0;
LABEL_33:
  sub_1BDAE1658((uint64_t)v37, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1658((uint64_t)v7, type metadata accessor for NoteEditActivityEvent);
  return v38 & 1;
}

id sub_1BDB33218(unint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  id result;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return (id)MEMORY[0x1E0DEE9D8];
  }
LABEL_12:
  swift_bridgeObjectRetain();
  v5 = sub_1BDBFE574();
  if (!v5)
    goto LABEL_13;
LABEL_3:
  for (i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1C3B79954](i - 4, a1);
    else
      v7 = *(id *)(a1 + 8 * i);
    v8 = v7;
    v9 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    result = objc_msgSend(a3, sel_attributedString);
    if (!result)
      break;
    v11 = result;
    v12 = objc_msgSend(a2, sel_editsByAddingCheckmarkEditsToEdit_inAttributedString_, v8, result);

    sub_1BD942914(0, (unint64_t *)&qword_1EF510130);
    v13 = sub_1BDBFD9E0();

    sub_1BDBC3CF8(v13);
    if (v9 == v5)
    {
      swift_bridgeObjectRelease();
      return (id)v15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB333A8(uint64_t a1, void *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BDB224F4(0, v2, 0);
    v3 = v18;
    v5 = *(_QWORD *)(sub_1BDBFCB40() - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = (void *)sub_1BDBFCAF8();
      v9 = objc_msgSend(a2, sel_userIDForReplicaID_, v8);

      v10 = sub_1BDBFD6F8();
      v12 = v11;

      v14 = *(_QWORD *)(v18 + 16);
      v13 = *(_QWORD *)(v18 + 24);
      if (v14 >= v13 >> 1)
        sub_1BDB224F4(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v18 + 16) = v14 + 1;
      v15 = v18 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      v6 += v7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  uint64_t (*v31)(_QWORD);
  int EnumCaseMultiPayload;
  void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  id v37;
  void (*v38)(char *, uint64_t);
  ICCloudSyncingObject *v39;
  id v40;
  id v41;
  unint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  ICCloudSyncingObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t, uint64_t);
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  void *v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t result;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  ICCloudSyncingObject *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148[2];
  uint64_t v149;

  v130 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v142 = (char *)&v120 - v11;
  v12 = sub_1BDBFCB40();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v143 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v135 = (char *)&v120 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v145 = (char *)&v120 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v140 = (char *)&v120 - v21;
  MEMORY[0x1E0C80A78](v20);
  v139 = (char *)&v120 - v22;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D308);
  v132 = *(_QWORD *)(v138 - 8);
  v23 = MEMORY[0x1E0C80A78](v138);
  v133 = (uint64_t)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v137 = (uint64_t *)((char *)&v120 - v26);
  MEMORY[0x1E0C80A78](v25);
  v144 = (uint64_t *)((char *)&v120 - v27);
  v28 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (void **)((char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131 = a2;
  sub_1BDAE1544(a2, (uint64_t)v30, v31);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v33 = *v30;
  if (EnumCaseMultiPayload == 1)
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
    v35 = (char *)v30 + *(int *)(v34 + 48);
    v36 = (char *)v30 + *(int *)(v34 + 64);
    v37 = objc_msgSend(v33, sel_note);

    v38 = *(void (**)(char *, uint64_t))(v13 + 8);
    v38(v36, v12);
    v38(v35, v12);
    v33 = v37;
    if (!v37)
      return MEMORY[0x1E0DEE9D8];
  }
  v39 = v33;
  ActivityEventObject.init(cloudSyncingObject:)(v39);
  if (!v149)
  {

    return MEMORY[0x1E0DEE9D8];
  }
  v126 = v149;
  v147 = v12;
  v127 = a4;
  v125 = v148[1];
  v124 = v148[0];
  v40 = objc_msgSend(objc_allocWithZone((Class)ICTTTextEditGrouper), sel_initWithNote_, v39);
  v41 = objc_msgSend(a1, sel_edits);
  sub_1BD942914(0, (unint64_t *)&qword_1EF510130);
  v42 = sub_1BDBFD9E0();

  v43 = v40;
  v44 = a1;
  v45 = sub_1BDB33218(v42, v43, v44);
  swift_bridgeObjectRelease();
  v123 = v43;

  v121 = (uint64_t)v44;
  v122 = (unint64_t)v45;
  v148[0] = sub_1BDB2BEEC((unint64_t)v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5A8);
  sub_1BDB35F24();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v46 = sub_1BDBFD8C0();
  swift_bridgeObjectRelease();
  v47 = v39;
  v141 = v46;
  v48 = sub_1BDB333A8(v46, v47);
  v128 = 0;
  v129 = v47;

  v148[0] = MEMORY[0x1E0DEE9D8];
  v49 = *(_QWORD *)(v48 + 16);
  swift_bridgeObjectRetain();
  v50 = (uint64_t)v142;
  v136 = v48;
  v146 = v10;
  if (v49)
  {
    v51 = 0;
    v52 = (uint64_t *)(v48 + 40);
    do
    {
      if (v51 >= *(_QWORD *)(v48 + 16))
        goto LABEL_65;
      v53 = *(_QWORD *)(v141 + 16);
      if (v51 == v53)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v50, 1, 1, v147);
LABEL_25:
        sub_1BDAC350C(v50, &qword_1ED23AD30);
        swift_bridgeObjectRelease();
        v10 = v146;
        goto LABEL_26;
      }
      if (v51 >= v53)
        goto LABEL_66;
      v54 = *(v52 - 1);
      v55 = *v52;
      v56 = v147;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(v50, v141+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v51, v147);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v50, 0, 1, v56);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v50, 1, v56) == 1)
        goto LABEL_25;
      v57 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
      v58 = v139;
      v57(v139, v50, v56);
      v59 = (uint64_t)v137;
      v60 = (char *)v137 + *(int *)(v138 + 48);
      *v137 = v54;
      *(_QWORD *)(v59 + 8) = v55;
      v57(v60, (uint64_t)v58, v56);
      v61 = v144;
      sub_1BDB35FB0(v59, (uint64_t)v144, &qword_1EF50D308);
      v62 = *v61;
      v63 = v61[1];
      v64 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v65 = objc_msgSend(v64, sel_CR_unknown);
      v66 = v140;
      sub_1BDBFCB10();

      v67 = sub_1BDBFCAEC();
      v69 = v68;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v66, v56);
      if (v62 == v67 && v63 == v69)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v70 = sub_1BDBFE874();
        swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
        {
          sub_1BDB35FB0((uint64_t)v144, v133, &qword_1EF50D308);
          v71 = v148[0];
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v10 = v146;
          v48 = v136;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1BDB2265C(0, *(_QWORD *)(v71 + 16) + 1, 1);
            v71 = v148[0];
          }
          v74 = *(_QWORD *)(v71 + 16);
          v73 = *(_QWORD *)(v71 + 24);
          if (v74 >= v73 >> 1)
          {
            sub_1BDB2265C(v73 > 1, v74 + 1, 1);
            v71 = v148[0];
          }
          *(_QWORD *)(v71 + 16) = v74 + 1;
          sub_1BDB35FB0(v133, v71+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(_QWORD *)(v132 + 72) * v74, &qword_1EF50D308);
          v50 = (uint64_t)v142;
          goto LABEL_8;
        }
      }
      sub_1BDAC350C((uint64_t)v144, &qword_1EF50D308);
      v10 = v146;
      v50 = (uint64_t)v142;
      v48 = v136;
LABEL_8:
      ++v51;
      v52 += 2;
    }
    while (v49 != v51);
  }
  swift_bridgeObjectRelease();
LABEL_26:
  swift_bridgeObjectRelease();
  v76 = v128;
  v77 = sub_1BDB2C0B8(v148[0]);
  swift_release();
  v148[0] = MEMORY[0x1E0DEE9D8];
  v144 = (uint64_t *)v77;
  if (v49)
  {
    v142 = v76;
    v78 = objc_opt_self();
    v79 = v48;
    v80 = (void *)v78;
    v81 = (uint64_t *)(v79 + 40);
    do
    {
      v83 = *(v81 - 1);
      v82 = *v81;
      swift_bridgeObjectRetain();
      v84 = objc_msgSend(v80, sel_CR_unknown);
      v85 = v145;
      sub_1BDBFCB10();

      v86 = sub_1BDBFCAEC();
      v88 = v87;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v85, v147);
      if (v83 == v86 && v82 == v88)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v89 = sub_1BDBFE874();
        swift_bridgeObjectRelease();
        if ((v89 & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v90 = v148[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BDB224F4(0, *(_QWORD *)(v90 + 16) + 1, 1);
            v90 = v148[0];
          }
          v92 = *(_QWORD *)(v90 + 16);
          v91 = *(_QWORD *)(v90 + 24);
          if (v92 >= v91 >> 1)
          {
            sub_1BDB224F4(v91 > 1, v92 + 1, 1);
            v90 = v148[0];
          }
          *(_QWORD *)(v90 + 16) = v92 + 1;
          v93 = v90 + 16 * v92;
          *(_QWORD *)(v93 + 32) = v83;
          *(_QWORD *)(v93 + 40) = v82;
          v10 = v146;
        }
      }
      v81 += 2;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease();
    v94 = v148[0];
    v77 = (uint64_t)v144;
    v76 = v142;
  }
  else
  {
    swift_bridgeObjectRelease();
    v94 = MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(v94 + 16) >= *(_QWORD *)(v77 + 16))
    v95 = *(_QWORD *)(v77 + 16);
  else
    v95 = *(_QWORD *)(v94 + 16);
  v96 = v147;
  if (v95)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5B8);
    v97 = sub_1BDBFE598();
  }
  else
  {
    v97 = MEMORY[0x1E0DEE9E0];
  }
  v98 = v135;
  v148[0] = v97;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1BDB31410(v77, v94, 1, v148);
  if (v76)
    goto LABEL_67;
  v141 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  v140 = (char *)v148[0];
  v148[0] = MEMORY[0x1E0DEE9D8];
  v99 = *(char **)(v77 + 16);
  v145 = v129;
  v142 = v99;
  if (!v99)
  {
    v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
LABEL_61:
    v103(v10, 1, 1, v96);
LABEL_62:
    swift_bridgeObjectRelease();
    sub_1BDAC350C((uint64_t)v10, &qword_1ED23AD30);
    v112 = v145;

    v113 = sub_1BDAF3B6C(v148[0]);
    v114 = swift_release();
    MEMORY[0x1E0C80A78](v114);
    v115 = v123;
    *(&v120 - 10) = v113;
    *(&v120 - 9) = (uint64_t)v115;
    v116 = v130;
    *(&v120 - 8) = (uint64_t)v140;
    *(&v120 - 7) = v116;
    *(&v120 - 6) = v121;
    *((_BYTE *)&v120 - 40) = v124 & 1;
    v117 = v126;
    *(&v120 - 4) = v125;
    *(&v120 - 3) = v117;
    v118 = v131;
    *(&v120 - 2) = v127;
    *(&v120 - 1) = v118;
    v75 = sub_1BDB57A78((void (*)(id *))sub_1BDB35F70, (uint64_t)(&v120 - 12), v122);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    swift_bridgeObjectRelease();
    return v75;
  }
  v100 = 0;
  v134 = v13;
  while ((unint64_t)v100 < *(_QWORD *)(v77 + 16))
  {
    v101 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v102 = *(_QWORD *)(v13 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v10, v77 + v101 + v102 * (_QWORD)v100, v96);
    v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v103(v10, 0, 1, v96);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v96) == 1)
      goto LABEL_62;
    v104 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v104(v98, v10, v96);
    v105 = v98;
    v106 = (void *)sub_1BDBFCAF8();
    v107 = objc_msgSend(v145, sel_trustsTimestampsFromReplicaID_, v106);

    if (v107)
    {
      v104(v143, v105, v96);
      v108 = v148[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDB22630(0, *(_QWORD *)(v108 + 16) + 1, 1);
        v108 = v148[0];
      }
      v10 = v146;
      v110 = *(_QWORD *)(v108 + 16);
      v109 = *(_QWORD *)(v108 + 24);
      v13 = v134;
      if (v110 >= v109 >> 1)
      {
        sub_1BDB22630(v109 > 1, v110 + 1, 1);
        v108 = v148[0];
      }
      *(_QWORD *)(v108 + 16) = v110 + 1;
      v111 = v108 + v101 + v110 * v102;
      v96 = v147;
      v104((char *)v111, v143, v147);
      v148[0] = v108;
      v98 = v135;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v105, v96);
      v98 = v105;
      v10 = v146;
    }
    ++v100;
    v77 = (uint64_t)v144;
    if (v142 == v100)
      goto LABEL_61;
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BDB34138(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  _QWORD v40[2];
  unint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v42 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v40 - v13;
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)v40 - v15;
  v16 = type metadata accessor for NoteEditActivityEvent(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v46 = (uint64_t)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v40 - v20;
  result = MEMORY[0x1E0DEE9D8];
  v49 = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v43 = *(_QWORD *)(v19 + 72);
    v44 = v7;
    v40[1] = v2;
    v41 = v24;
    v25 = a1 + v24;
    v45 = a2;
    v47 = v14;
    v26 = a2;
    while (1)
    {
      sub_1BDAE1544(v25, (uint64_t)v21, type metadata accessor for NoteEditActivityEvent);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v48, v21, v8);
      v28 = objc_msgSend(v26, sel_lastActivityRecentUpdatesViewedDate);
      if (!v28)
        break;
      v29 = v28;
      v30 = v42;
      sub_1BDBFCAA4();

      v31 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v32 = v30;
      v14 = v47;
      v31(v7, v32, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
        goto LABEL_9;
      v31(v14, v7, v8);
LABEL_10:
      v33 = v48;
      v34 = sub_1BDBFCA80();
      v35 = *(void (**)(char *, uint64_t))(v9 + 8);
      v35(v14, v8);
      v35(v33, v8);
      if ((v34 & 1) != 0)
      {
        sub_1BDAFE158((uint64_t)v21, v46, type metadata accessor for NoteEditActivityEvent);
        v36 = v49;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v27 = v43;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BDB22678(0, *(_QWORD *)(v36 + 16) + 1, 1);
          v36 = v49;
        }
        v39 = *(_QWORD *)(v36 + 16);
        v38 = *(_QWORD *)(v36 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_1BDB22678(v38 > 1, v39 + 1, 1);
          v36 = v49;
        }
        *(_QWORD *)(v36 + 16) = v39 + 1;
        sub_1BDAFE158(v46, v36 + v41 + v39 * v27, type metadata accessor for NoteEditActivityEvent);
        v26 = v45;
        v14 = v47;
      }
      else
      {
        sub_1BDAE1658((uint64_t)v21, type metadata accessor for NoteEditActivityEvent);
        v26 = v45;
        v27 = v43;
      }
      v25 += v27;
      --v23;
      v7 = v44;
      if (!v23)
        return v49;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_9:
    sub_1BDBFC9C0();
    sub_1BDAC350C((uint64_t)v7, &qword_1ED239CD8);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1BDB344B4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v34 = type metadata accessor for NoteEditActivityEvent(0);
  v4 = MEMORY[0x1E0C80A78](v34);
  v36 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v31 - v7;
  result = MEMORY[0x1E0DEE9D8];
  v37 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = *(unsigned __int8 *)(v6 + 80);
    v12 = *(_QWORD *)(v6 + 72);
    v31 = v2;
    v32 = (v11 + 32) & ~v11;
    v13 = a1 + v32;
    v14 = type metadata accessor for NoteEditActivityEvent;
    v33 = (char *)&v31 - v7;
    while (1)
    {
      sub_1BDAE1544(v13, (uint64_t)v8, v14);
      v15 = &v8[*(int *)(v34 + 24)];
      v17 = *(_QWORD *)v15;
      v16 = *((_QWORD *)v15 + 1);
      swift_bridgeObjectRetain();
      v18 = objc_msgSend(v35, sel_cloudAccount);
      if (!v18)
        break;
      v19 = v18;
      v20 = v12;
      v21 = v14;
      v22 = objc_msgSend(v18, sel_userRecordName);

      v23 = sub_1BDBFD6F8();
      v25 = v24;

      if (v17 == v23 && v16 == v25)
      {
        swift_bridgeObjectRelease_n();
        v14 = v21;
        v12 = v20;
        v8 = v33;
      }
      else
      {
        v27 = sub_1BDBFE874();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = v21;
        v12 = v20;
        v8 = v33;
        if ((v27 & 1) == 0)
          goto LABEL_14;
      }
      sub_1BDAE1658((uint64_t)v8, v14);
LABEL_5:
      v13 += v12;
      if (!--v10)
        return v37;
    }
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1BDAFE158((uint64_t)v8, v36, v14);
    v28 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BDB22678(0, *(_QWORD *)(v28 + 16) + 1, 1);
      v28 = v37;
    }
    v30 = *(_QWORD *)(v28 + 16);
    v29 = *(_QWORD *)(v28 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_1BDB22678(v29 > 1, v30 + 1, 1);
      v28 = v37;
    }
    *(_QWORD *)(v28 + 16) = v30 + 1;
    sub_1BDAFE158(v36, v28 + v32 + v30 * v12, v14);
    goto LABEL_5;
  }
  return result;
}

uint64_t _s11NotesShared21NoteEditActivityEventV6events3for14afterTimestamp06recentJ0SayACGSo12ICAttachmentC_10Foundation4DateVSgANtFZ_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v28;
  _QWORD aBlock[6];
  uint64_t v31;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&aBlock[-1] - v11;
  v13 = objc_msgSend(a1, sel_attachmentModel);
  objc_opt_self();
  v14 = swift_dynamicCastObjCClass();
  if (!v14)
  {

    return MEMORY[0x1E0DEE9D8];
  }
  v15 = (void *)v14;
  v31 = MEMORY[0x1E0DEE9D8];
  v16 = v13;
  v17 = objc_msgSend(v15, sel_table);
  sub_1BDACDF20(a2, (uint64_t)v12);
  sub_1BDACDF20(a3, (uint64_t)v10);
  v18 = *(unsigned __int8 *)(v7 + 80);
  v19 = (v18 + 40) & ~v18;
  v20 = (v8 + v18 + v19) & ~v18;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v15;
  v21[3] = a1;
  v21[4] = &v31;
  sub_1BDB35FB0((uint64_t)v12, (uint64_t)v21 + v19, &qword_1ED239CD8);
  sub_1BDB35FB0((uint64_t)v10, (uint64_t)v21 + v20, &qword_1ED239CD8);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1BDB35C78;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = sub_1BDB1D3A4;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB2FD98;
  aBlock[3] = &block_descriptor_6;
  v23 = _Block_copy(aBlock);
  v24 = v16;
  v25 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_enumerateColumnsWithBlock_, v23);

  _Block_release(v23);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v28 = v31;
    swift_release();
    return v28;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NoteEditActivityEvent(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50D528);
}

char *sub_1BDB349D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BDB2EDE4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BDB349D8(uint64_t a1, uint64_t (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D578);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v25 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  while (v11)
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v15 = v14 | (v13 << 6);
LABEL_22:
    v19 = *(_QWORD *)(a1 + 48);
    v20 = type metadata accessor for NoteEditActivityEvent.Parents(0);
    sub_1BDAE1544(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v15, (uint64_t)v7, type metadata accessor for NoteEditActivityEvent.Parents);
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v15);
    *(_QWORD *)&v7[*(int *)(v5 + 48)] = v21;
    swift_bridgeObjectRetain();
    v22 = a2(v7, v21);
    result = sub_1BDAC350C((uint64_t)v7, &qword_1EF50D578);
    if (v22)
    {
      MEMORY[0x1C3B78F88](result);
      if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BDBFDA1C();
      sub_1BDBFDA64();
      result = sub_1BDBFD9F8();
    }
  }
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v16 >= v25)
    goto LABEL_26;
  v17 = *(_QWORD *)(v24 + 8 * v16);
  ++v13;
  if (v17)
    goto LABEL_21;
  v13 = v16 + 1;
  if (v16 + 1 >= v25)
    goto LABEL_26;
  v17 = *(_QWORD *)(v24 + 8 * v13);
  if (v17)
    goto LABEL_21;
  v13 = v16 + 2;
  if (v16 + 2 >= v25)
    goto LABEL_26;
  v17 = *(_QWORD *)(v24 + 8 * v13);
  if (v17)
    goto LABEL_21;
  v13 = v16 + 3;
  if (v16 + 3 >= v25)
    goto LABEL_26;
  v17 = *(_QWORD *)(v24 + 8 * v13);
  if (v17)
  {
LABEL_21:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_22;
  }
  v18 = v16 + 4;
  if (v18 >= v25)
  {
LABEL_26:
    swift_release();
    return v27;
  }
  v17 = *(_QWORD *)(v24 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v25)
      goto LABEL_26;
    v17 = *(_QWORD *)(v24 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BDB34C6C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 >= v3)
    v4 = v3;
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CCA0);
    v5 = sub_1BDBFE598();
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9E0];
  }
  v8 = v5;
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  sub_1BDB31918(v6, a2, 1, &v8);
  return v8;
}

uint64_t sub_1BDB34D60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BDB34D90()
{
  unint64_t result;

  result = qword_1EF50D4B8;
  if (!qword_1EF50D4B8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NoteEditActivityEvent.Kinds, &type metadata for NoteEditActivityEvent.Kinds);
    atomic_store(result, (unint64_t *)&qword_1EF50D4B8);
  }
  return result;
}

uint64_t sub_1BDB34DD4()
{
  return sub_1BDAC31B0(&qword_1EF50D4C0, type metadata accessor for NoteEditActivityEvent.Parents, (uint64_t)&protocol conformance descriptor for NoteEditActivityEvent.Parents);
}

uint64_t sub_1BDB34E00()
{
  return sub_1BDAC31B0(&qword_1EF50D4C8, type metadata accessor for NoteEditActivityEvent, (uint64_t)&protocol conformance descriptor for NoteEditActivityEvent);
}

_QWORD *initializeBufferWithCopyOfBuffer for NoteEditActivityEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BDBFCAC8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v17 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NoteEditActivityEvent(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NoteEditActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NoteEditActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = *(_QWORD *)(v12 + 16);
  v11[3] = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NoteEditActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = (_OWORD *)(a1 + v8);
  v12 = (_OWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for NoteEditActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  v13[2] = *(_QWORD *)(v14 + 16);
  v13[3] = v16;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoteEditActivityEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB35314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BDBFCAC8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NoteEditActivityEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB353A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1BDB3541C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCAC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NoteEditActivityEvent.Kinds(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDB354FC + 4 * byte_1BDC1A4E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDB35530 + 4 * byte_1BDC1A4E0[v4]))();
}

uint64_t sub_1BDB35530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB35538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB35540);
  return result;
}

uint64_t sub_1BDB3554C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB35554);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDB35558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB35560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NoteEditActivityEvent.Kinds()
{
  return &type metadata for NoteEditActivityEvent.Kinds;
}

char *initializeBufferWithCopyOfBuffer for NoteEditActivityEvent.Parents(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v15[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = *a2;
    *(_QWORD *)a1 = *a2;
    v8 = v7;
    if (EnumCaseMultiPayload == 1)
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
      v10 = *(int *)(v9 + 48);
      v11 = &a1[v10];
      v12 = (char *)a2 + v10;
      v13 = sub_1BDBFCB40();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      v14(&a1[*(int *)(v9 + 64)], (char *)a2 + *(int *)(v9 + 64), v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for NoteEditActivityEvent.Parents(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();

  if (EnumCaseMultiPayload == 1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
    v4 = (char *)a1 + *(int *)(v3 + 48);
    v5 = sub_1BDBFCB40();
    v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v6(v4, v5);
    v6((char *)a1 + *(int *)(v3 + 64), v5);
  }
}

void **initializeWithCopy for NoteEditActivityEvent.Parents(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *a2;
  *a1 = *a2;
  v6 = v5;
  if (EnumCaseMultiPayload == 1)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
    v8 = *(int *)(v7 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BDBFCB40();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12((char *)a1 + *(int *)(v7 + 64), (char *)a2 + *(int *)(v7 + 64), v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for NoteEditActivityEvent.Parents(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BDAE1658((uint64_t)a1, type metadata accessor for NoteEditActivityEvent.Parents);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = *a2;
    *a1 = *a2;
    v6 = v5;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BDBFCB40();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(v9, v10, v11);
      v12((char *)a1 + *(int *)(v7 + 64), (char *)a2 + *(int *)(v7 + 64), v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for NoteEditActivityEvent.Parents(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
    v7 = *(int *)(v6 + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1BDBFCB40();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    v11(&a1[*(int *)(v6 + 64)], &a2[*(int *)(v6 + 64)], v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for NoteEditActivityEvent.Parents(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BDAE1658((uint64_t)a1, type metadata accessor for NoteEditActivityEvent.Parents);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
      v7 = *(int *)(v6 + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_1BDBFCB40();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v11(&a1[*(int *)(v6 + 64)], &a2[*(int *)(v6 + 64)], v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BDB35AA8()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = MEMORY[0x1E0DE9D10] + 64;
  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1BDB35B38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50D580;
  if (!qword_1EF50D580)
  {
    v1 = sub_1BD942914(255, (unint64_t *)&qword_1EF510130);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50D580);
  }
  return result;
}

uint64_t sub_1BDB35B90(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BDB35B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v2 + v3) & ~v2;

  v5 = v0 + v3;
  v6 = sub_1BDBFCAC8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  if (!v8(v0 + v4, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v4, v6);
  return swift_deallocObject();
}

uint64_t sub_1BDB35C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  return sub_1BDB2F940(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), v3 + ((v8 + 40) & ~v8), v3 + ((*(_QWORD *)(v7 + 64) + v8 + ((v8 + 40) & ~v8)) & ~v8));
}

uint64_t sub_1BDB35CEC()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1BDB35D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(unint64_t, uint64_t, uint64_t);

  v1 = sub_1BDBFCB40();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6;
  v8 = (*(_QWORD *)(v5 + 64) + v6 + v7) & ~v6;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v9 = sub_1BDBFCAC8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v0 + v7, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v7, v9);
  if (!v11(v0 + v8, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v8, v9);
  return swift_deallocObject();
}

void sub_1BDB35E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *(_QWORD *)(sub_1BDBFCB40() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  sub_1BDB2FBF4(a1, a2, a3, *(void **)(v3 + 16), v3 + v8, *(void **)(v3 + v9), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), v3 + ((v11 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11), v3 + ((*(_QWORD *)(v10 + 64) + v11 + ((v11 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)) & ~v11));
}

uint64_t sub_1BDB35F14()
{
  return swift_deallocObject();
}

unint64_t sub_1BDB35F24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50D5B0;
  if (!qword_1EF50D5B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50D5A8);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50D5B0);
  }
  return result;
}

id sub_1BDB35F70@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BDB2FE4C(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1BDB35FB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDB36004(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22510(0, v1, 0);
    v2 = v9;
    v4 = (_QWORD *)(a1 + 48);
    do
    {
      v5 = sub_1BDB39604(*(v4 - 2), *(v4 - 1), v4);
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      if (v7 >= v6 >> 1)
        sub_1BDB22510(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      v4 += 7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDB360D4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22510(0, v1, 0);
    v2 = v15;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v7 = v4[1];
      v8 = v4[2];
      v9 = v4[3];
      v10 = v4[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BDB38FD8(v5, v6, v7, v8, v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_1BDB22510(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v15 + 16) = v13 + 1;
      *(_QWORD *)(v15 + 8 * v13 + 32) = v11;
      v4 += 6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDB361F8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BDB224F4(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1BDB224F4(v7 > 1, v8 + 1, 1);
      v4 += 6;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDB362CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)&v32 = (*(uint64_t (**)(void))(a2 + 16))();
  v26 = a1;
  v27 = a2;
  v5 = sub_1BDBFDAAC();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D248);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  v8 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v5);
  v9 = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDB3A9E0, (uint64_t)v25, v5, v6, v7, v8, MEMORY[0x1E0DEDB38], (uint64_t)&v28);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    v36 = MEMORY[0x1E0DEE9D8];
    v12 = *(_QWORD *)(v9 + 16);
    if (v12)
    {
      v13 = 0;
      v14 = v9 + 32;
      while (v13 < *(_QWORD *)(v9 + 16))
      {
        sub_1BDB3A9FC(v14, (uint64_t)&v32);
        v15 = *((_QWORD *)&v34 + 1);
        v16 = v35;
        __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16) & 1) != 0)
        {
          result = sub_1BDAC350C((uint64_t)&v32, &qword_1EF50D248);
        }
        else
        {
          v28 = v32;
          v29 = v33;
          v30 = v34;
          v31 = v35;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
            result = sub_1BDB225B0(0, *(_QWORD *)(v11 + 16) + 1, 1);
          v11 = v36;
          v18 = *(_QWORD *)(v36 + 16);
          v17 = *(_QWORD *)(v36 + 24);
          if (v18 >= v17 >> 1)
          {
            result = sub_1BDB225B0(v17 > 1, v18 + 1, 1);
            v11 = v36;
          }
          *(_QWORD *)(v11 + 16) = v18 + 1;
          v19 = v11 + 56 * v18;
          *(_OWORD *)(v19 + 32) = v28;
          *(_OWORD *)(v19 + 48) = v29;
          *(_OWORD *)(v19 + 64) = v30;
          *(_QWORD *)(v19 + 80) = v31;
        }
        ++v13;
        v14 += 56;
        if (v12 == v13)
          goto LABEL_13;
      }
      __break(1u);
      goto LABEL_23;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v11 + 16))
    {
      swift_release();
      return 0;
    }
    v20 = sub_1BDB36004(v11);
    swift_release();
    *(_QWORD *)&v28 = 0;
    *((_QWORD *)&v28 + 1) = 0xE000000000000000;
    *(_QWORD *)&v32 = 0;
    *((_QWORD *)&v32 + 1) = 0xE000000000000000;
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    v36 = 1;
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    v28 = v32;
    sub_1BDBFD7DC();
    *(_QWORD *)&v32 = 0;
    *((_QWORD *)&v32 + 1) = 0xE000000000000000;
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    v36 = 0;
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    v21 = sub_1BDBC3374(v20);
    result = swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = v21 + 32;
      v24 = *(_QWORD *)(*(_QWORD *)(v21 + 32) + 16);
      while (*(_QWORD *)(*(_QWORD *)v23 + 16) == v24)
      {
        v23 += 8;
        if (!--v22)
          goto LABEL_21;
      }
LABEL_23:
      __break(1u);
      return result;
    }
    v24 = 0;
LABEL_21:
    v32 = v24;
    *(_QWORD *)&v33 = v21;
    BYTE8(v33) = 0;
    *(_QWORD *)&v34 = 64;
    BYTE8(v34) = 0;
    sub_1BDB057FC();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v28;
  }
  return result;
}

uint64_t sub_1BDB3671C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  Commands.defaultCommand()(a1, a2, v24);
  if (!v3)
  {
    v6 = v25;
    v7 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v8 & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
      v12 = v25;
      v13 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
    }
    v14 = v25;
    v15 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    v16 = sub_1BDB38D74(v14, v15);
    v18 = HIBYTE(v17) & 0xF;
    if ((v17 & 0x2000000000000000) == 0)
      v18 = v16 & 0xFFFFFFFFFFFFLL;
    if (v18)
    {
      sub_1BDBFE304();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v27 = 0;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v27 = 1;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 32))(a1);
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v27 = 0;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      v19 = v25;
      v20 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BDBFE304();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v27 = 0;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v27 = 1;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 32))(a1);
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v27 = 0;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      v21 = v25;
      v22 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v27 = 2;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v27 = 0;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
    }
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v2 = 0;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
  }
  return v2;
}

uint64_t sub_1BDB36EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
  v5 = v4(a1, v3);
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v3);
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    v4(a1, v3);
  }
  else
  {
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v3);
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
  }
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BDB3723C()
{
  sub_1BDBFE304();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  _sSS11NotesSharedE11typeSummary7forNameS2S_tFZ_0();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  _sSS11NotesSharedE11typeSummary7forNameS2S_tFZ_0();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDB393EC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  _sSS11NotesSharedE11typeSummary7forNameS2S_tFZ_0();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDB393EC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return 0;
}

uint64_t sub_1BDB38A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t (*v12)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>);
  uint64_t v13;
  uint64_t v16[4];

  v3 = v2;
  v6 = sub_1BDBFEA78();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[3] = a1;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  sub_1BDBFEA3C();
  v11 = sub_1BDBFEA6C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v12 = sub_1BDB38B64(v3, a1, a2);
  sub_1BDB3984C(v11, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _OWORD *))v12);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510010);
  v13 = sub_1BDBFDA28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t (*sub_1BDB38B64(uint64_t a1, uint64_t a2, uint64_t a3))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_1BDB3A574;
}

uint64_t sub_1BDB38C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _BYTE v8[32];
  _QWORD v9[2];
  _BYTE v10[32];
  uint64_t v11[6];

  v9[0] = a1;
  v9[1] = a2;
  sub_1BDAE0BA0(a3, (uint64_t)v10);
  sub_1BDAE0BA0((uint64_t)v10, (uint64_t)v8);
  swift_bridgeObjectRetain();
  sub_1BDB3A590(a1, a2, (uint64_t)v8, v11);
  sub_1BDAC350C((uint64_t)v9, &qword_1EF50D5E0);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
  return sub_1BDB3A488((uint64_t)v11, a4);
}

uint64_t sub_1BDB38CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1BDB38A18(a1, a2);
  sub_1BDB361F8(v2);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDB3A4D0();
  v3 = sub_1BDBFD674();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BDB38D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1BDB38A18(a1, a2);
  v3 = sub_1BDB360D4(v2);
  swift_bridgeObjectRelease();
  sub_1BDBFE304();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  v4 = sub_1BDBC3374(v3);
  result = swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = v4 + 32;
    while (*(_QWORD *)(*(_QWORD *)v7 + 16) == *(_QWORD *)(*(_QWORD *)(v4 + 32) + 16))
    {
      v7 += 8;
      if (!--v6)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    sub_1BDB057FC();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1BDB38FD8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;

  sub_1BDBFD7DC();
  if (a6)
  {
    sub_1BDAC3548();
    v9 = sub_1BDBFE124();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v20 = MEMORY[0x1E0DEE9D8];
      sub_1BDB224F4(0, v10, 0);
      v11 = v9 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        v13 = *(_QWORD *)(v20 + 16);
        v12 = *(_QWORD *)(v20 + 24);
        if (v13 >= v12 >> 1)
          sub_1BDB224F4(v12 > 1, v13 + 1, 1);
        v11 += 16;
        *(_QWORD *)(v20 + 16) = v13 + 1;
        v14 = v20 + 16 * v13;
        *(_QWORD *)(v14 + 32) = 0x2020202020202020;
        *(_QWORD *)(v14 + 40) = 0xE800000000000000;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
    sub_1BDB3A4D0();
    sub_1BDBFD674();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v16 + 32) = 538976288;
    *(_QWORD *)(v16 + 40) = 0xE400000000000000;
    *(_QWORD *)(v16 + 48) = 0;
    *(_QWORD *)(v16 + 56) = 0xE000000000000000;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
    v15 = swift_allocObject();
    v16 = v15;
    *(_OWORD *)(v15 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v15 + 32) = 538976288;
    *(_QWORD *)(v15 + 40) = 0xE400000000000000;
    if (a4)
      v17 = a3;
    else
      v17 = 0;
    v18 = 0xE000000000000000;
    if (a4)
      v18 = a4;
    *(_QWORD *)(v15 + 48) = v17;
    *(_QWORD *)(v15 + 56) = v18;
    swift_bridgeObjectRetain();
  }
  return v16;
}

uint64_t AnyCommand.argumentSummary(for:name:includingType:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD v7[6];

  sub_1BDB3A0D0(a1, a2, a3, a4, v7);
  return sub_1BDB3A488((uint64_t)v7, a5);
}

uint64_t sub_1BDB393EC()
{
  uint64_t v1;

  v1 = _sSS11NotesSharedE11typeSummary7forNameS2S_tFZ_0();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BDB39570@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;

  v9 = a4 + 2;
  *a4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 32))(a1);
  a4[1] = v10;
  result = (uint64_t)Commands.defaultCommand()(a1, a2, v9);
  if (v4)
  {
    result = swift_bridgeObjectRelease();
    *a3 = v4;
  }
  return result;
}

uint64_t sub_1BDB39604(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD740();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  v4 = a3[3];
  v5 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v4);
  sub_1BDB38CE4(v4, v5);
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BDC17EC0;
  *(_QWORD *)(v6 + 32) = 538976288;
  *(_QWORD *)(v6 + 40) = 0xE400000000000000;
  v7 = a3[3];
  v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  *(_QWORD *)(v6 + 48) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  *(_QWORD *)(v6 + 56) = v9;
  return v6;
}

_QWORD *sub_1BDB3984C(uint64_t a1, void (*a2)(_QWORD *__return_ptr, _QWORD, _QWORD, _OWORD *))
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  __int128 v17;
  _OWORD v18[2];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD v22[6];
  _BYTE v23[8];
  uint64_t v24;
  uint64_t v25;

  swift_retain();
  sub_1BDBFE4B4();
  swift_release();
  sub_1BDBFE5BC();
  if (*((_QWORD *)&v21 + 1))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v17 = v19;
      v18[0] = v20;
      v18[1] = v21;
      a2(v22, v19, *((_QWORD *)&v19 + 1), v18);
      if (v2)
        break;
      v7 = v22[0];
      v6 = v22[1];
      v8 = v22[2];
      v9 = v22[3];
      v11 = v22[4];
      v10 = v22[5];
      sub_1BDAC350C((uint64_t)&v17, &qword_1EF50D5E0);
      sub_1BDB3A488((uint64_t)v22, (uint64_t)v23);
      if (v24)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v25 = v10;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v3 = sub_1BDBCBA80(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1BDBCBA80((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v4 = &v3[6 * v14];
        v4[4] = v7;
        v4[5] = v6;
        v4[6] = v8;
        v4[7] = v9;
        v5 = v25;
        v4[8] = v11;
        v4[9] = v5;
      }
      sub_1BDBFE5BC();
      if (!*((_QWORD *)&v21 + 1))
        goto LABEL_13;
    }
    sub_1BDAC350C((uint64_t)&v17, &qword_1EF50D5E0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
LABEL_13:
  swift_release();
  return v3;
}

uint64_t sub_1BDB39A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v6 = *(uint64_t (**)(void))(a2 + 24);
  v7 = *(_QWORD *)(v6() + 16);
  swift_bridgeObjectRelease();
  if (v7)
  {
    ((void (*)(uint64_t, uint64_t))v6)(a1, a2);
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
    sub_1BDB3A4D0();
    sub_1BDBFD674();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDBFE304();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(uint64_t))(a2 + 8))(a1);
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  }
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  a3[2] = result;
  a3[3] = v9;
  a3[4] = 0;
  a3[5] = 0;
  return result;
}

uint64_t sub_1BDB3A0D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11) & 1) != 0)
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    result = 0;
    v16 = 0;
  }
  else
  {
    if ((a4 & 1) != 0)
    {
      v17 = a1[3];
      v18 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 72))(a2, a3, v17, v18);
    }
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v12 = 0xE000000000000000;
    v19 = a1[3];
    v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
    v14 = v21;
    v22 = a1[3];
    v23 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
  }
  *a5 = 0;
  a5[1] = v12;
  a5[2] = v13;
  a5[3] = v14;
  a5[4] = result;
  a5[5] = v16;
  return result;
}

uint64_t sub_1BDB3A488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDB3A4D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50B860;
  if (!qword_1EF50B860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EF50CC50);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50B860);
  }
  return result;
}

uint64_t sub_1BDB3A51C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1BDB3A574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1BDB38C20(a1, a2, a3, a4);
}

uint64_t sub_1BDB3A590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  _BYTE v41[32];
  _QWORD v42[2];
  _BYTE v43[32];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = a1;
  v42[0] = a1;
  v42[1] = a2;
  sub_1BDAE0BA0(a3, (uint64_t)v43);
  sub_1BDAE0BA0((uint64_t)v43, (uint64_t)v41);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5E8);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5F0);
    if (swift_dynamicCast())
    {
      sub_1BDAE14D4(&v40, (uint64_t)v37);
      if (a2)
      {
        v44 = v5;
        v45 = a2;
        swift_bridgeObjectRetain();
        v13 = sub_1BDBFD8A8();
        v15 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v13, v14);
        sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v15, v16);
        swift_bridgeObjectRelease();
        v17 = sub_1BDBFD740();
        v19 = v18;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = sub_1BDB436A4(1uLL, v17, v19);
        v22 = v21;
        v24 = v23;
        v26 = v25;
        swift_bridgeObjectRelease();
        v5 = MEMORY[0x1C3B78D30](v20, v22, v24, v26);
        v10 = v27;
        swift_bridgeObjectRelease();
      }
      else
      {
        v10 = 0;
      }
      v28 = v38;
      v29 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      if (v31)
      {
        v32 = v30;
        v33 = v31;
        swift_bridgeObjectRelease();
        v5 = v32;
        v10 = v33;
LABEL_12:
        v44 = v5;
        v45 = v10;
        v34 = sub_1BDBFD8A8();
        sub_1BDB3A0D0(v37, v34, v35, 1, &v44);
        v7 = v44;
        v8 = v45;
        v9 = v46;
        v10 = v47;
        v11 = v48;
        v12 = v49;
        swift_bridgeObjectRelease();
        sub_1BDAC350C((uint64_t)v42, &qword_1EF50D5E0);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
        goto LABEL_13;
      }
      if (v10)
        goto LABEL_12;
      sub_1BDAC350C((uint64_t)v42, &qword_1EF50D5E0);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
      v7 = 0;
      v8 = 0;
      v9 = 0;
    }
    else
    {
      sub_1BDAC350C((uint64_t)v42, &qword_1EF50D5E0);
      v7 = 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
    }
    v11 = 0;
    v12 = 0;
    goto LABEL_13;
  }
  sub_1BDB39A04(v40, *((uint64_t *)&v40 + 1), &v44);
  v7 = v44;
  v8 = v45;
  v9 = v46;
  v10 = v47;
  v11 = v48;
  v12 = v49;
  sub_1BDAC350C((uint64_t)v42, &qword_1EF50D5E0);
LABEL_13:
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v41);
  *a4 = v7;
  a4[1] = v8;
  a4[2] = v9;
  a4[3] = v10;
  a4[4] = v11;
  a4[5] = v12;
  return result;
}

uint64_t sub_1BDB3A9E0@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BDB39570(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_1BDB3A9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB3AA44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  __int128 v19;
  __int128 v20;

  v4 = sub_1BDBFC4A4();
  if (!v4)
  {
    v19 = 0u;
    v20 = 0u;
LABEL_13:
    sub_1BDB3B1EC((uint64_t)&v19);
    goto LABEL_14;
  }
  v5 = v4;
  sub_1BDBFD6F8();
  sub_1BDBFE298();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1BDB6AC84((uint64_t)v18), (v7 & 1) != 0))
  {
    sub_1BDAE0BA0(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BDB3B22C((uint64_t)v18);
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D610);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    v13 = sub_1BDBFC4B0();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
    goto LABEL_15;
  }
  v8 = v18[0];
  v9 = sub_1BDBFC4A4();
  if (!v9)
  {
    v17 = sub_1BDBFC4B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
    v19 = 0u;
    v20 = 0u;
LABEL_22:
    swift_bridgeObjectRelease();
    result = sub_1BDB3B1EC((uint64_t)&v19);
    goto LABEL_15;
  }
  v10 = v9;
  sub_1BDBFD6F8();
  sub_1BDBFE298();
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_1BDB6AC84((uint64_t)v18), (v12 & 1) != 0))
  {
    sub_1BDAE0BA0(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  v15 = sub_1BDBFC4B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  sub_1BDB3B22C((uint64_t)v18);
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_22;
  sub_1BDB3B260();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v16 = v18[0];
    *a2 = v8;
    a2[1] = v16;
    return result;
  }
  result = swift_bridgeObjectRelease();
LABEL_15:
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t ICCloudConfiguration.Snapshot.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return static ICCloudConfiguration.overridableValue<A>(for:in:defaults:)(a1, *(_QWORD *)(v2 + 8), a2);
}

uint64_t ICCloudConfiguration.waitForConfigurationChange(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = sub_1BDBFC4B0();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D600);
  v3[13] = swift_task_alloc();
  v5 = sub_1BDBFDF8C();
  v3[14] = v5;
  v3[15] = *(_QWORD *)(v5 - 8);
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB3AD64()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BDBFDFA4();

  sub_1BDBFDF80();
  *(_QWORD *)(v0 + 136) = sub_1BDB3B07C();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v2;
  *v2 = v0;
  v2[1] = sub_1BDB3AE24;
  return sub_1BDBFDB30();
}

uint64_t sub_1BDB3AE24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 152) = v0;
  return swift_task_switch();
}

uint64_t sub_1BDB3AE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  void *v7;
  char v8;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  sub_1BDB3AA44(v4, (_QWORD *)(v0 + 16));
  v5 = *(_QWORD *)(v0 + 16);
  if (!v5)
    goto LABEL_5;
  v6 = *(uint64_t (**)(uint64_t))(v0 + 56);
  v7 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v7;
  v8 = v6(v0 + 32);
  sub_1BDB3B0C4(v5, v7);
  if ((v8 & 1) != 0)
  {
LABEL_4:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
LABEL_5:
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v10;
    *v10 = v0;
    v10[1] = sub_1BDB3B018;
    return sub_1BDBFDB30();
  }
}

uint64_t sub_1BDB3AFB8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1BDB3B018()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 152) = v0;
  return swift_task_switch();
}

unint64_t sub_1BDB3B07C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50D608;
  if (!qword_1EF50D608)
  {
    v1 = sub_1BDBFDF8C();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CB1EE8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50D608);
  }
  return result;
}

void sub_1BDB3B0C4(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_bridgeObjectRelease();

  }
}

_QWORD *_s8SnapshotVwCP(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void _s8SnapshotVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s8SnapshotVwca(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t _s8SnapshotVwta(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ICCloudConfiguration.Snapshot()
{
  return &type metadata for ICCloudConfiguration.Snapshot;
}

uint64_t sub_1BDB3B1EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDB3B22C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

unint64_t sub_1BDB3B260()
{
  unint64_t result;

  result = qword_1EF50D618;
  if (!qword_1EF50D618)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50D618);
  }
  return result;
}

uint64_t TranscriptViewModelSegment.init(text:timestamp:duration:speaker:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  int *v14;
  _QWORD *v15;
  uint64_t result;
  _QWORD *v17;

  v14 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  v15 = (_QWORD *)(a5 + v14[8]);
  result = _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v17 = (_QWORD *)(a5 + v14[5]);
  *v17 = a1;
  v17[1] = a2;
  *(double *)(a5 + v14[6]) = a6;
  *(double *)(a5 + v14[7]) = a7;
  *v15 = a3;
  v15[1] = a4;
  return result;
}

uint64_t type metadata accessor for TranscriptViewModelSegment(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50D798);
}

uint64_t static TranscriptViewModelSegment.transcriptStringFromSegments(segments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t KeyPath;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v4 = sub_1BDBFC78C();
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BDBFC678();
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  MEMORY[0x1E0C80A78](v6);
  v60 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFCB40();
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  MEMORY[0x1E0C80A78](v8);
  v65 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TranscriptViewModelSegment(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v64 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BDBFC714();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v54 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v59 = (char *)&v53 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v58 = (char *)&v53 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v53 - v21;
  sub_1BDBFC708();
  v71 = a1;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v53 = a2;
    v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v25 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain();
    v69 = v22;
    v56 = v13;
    v57 = v10;
    v55 = v14;
    v63 = v25;
    while (1)
    {
      if ((sub_1BDBFDC20() & 1) != 0)
        goto LABEL_5;
      v29 = v71 + v24;
      v30 = v64;
      sub_1BDB1CC10(v71 + v24, v64);
      type metadata accessor for TranscriptMetadata(0);
      v31 = swift_allocObject();
      v32 = v65;
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v31 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id, v32, v67);
      sub_1BDAEA978(v30, v31 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
      v33 = (uint64_t *)(v29 + *(int *)(v10 + 32));
      if (v33[1])
      {
        v34 = *v33;
        v35 = qword_1EF50B2F0;
        swift_bridgeObjectRetain();
        if (v35 != -1)
          swift_once();
        v36 = (void *)qword_1EF520230;
        v37 = (void *)sub_1BDBFD6C8();
        if (qword_1EF50B2F8 != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D4B0);
        v38 = (void *)sub_1BDBFD9C8();
        v39 = objc_msgSend(v36, sel_ic_contactForHandleString_keysToFetch_, v37, v38);

        v70 = v34;
        if (v39)
        {
          v40 = objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v39, 0);
          if (v40)
          {
            v41 = v40;
            v42 = sub_1BDBFD6F8();

            if (sub_1BDBFD7A0() <= 0)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
              v70 = v42;
            }
            v22 = v69;
          }
          else
          {

          }
        }
        v43 = v60;
        sub_1BDBFC660();
        v44 = sub_1BDBFC66C();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v62);
        v14 = v55;
        v13 = v56;
        v45 = v58;
        if (v44 >= 1)
        {
          sub_1BDBFC690();
          sub_1BDBFC69C();
          (*(void (**)(char *, uint64_t))(v14 + 8))(v45, v13);
        }
        sub_1BDBFC780();
        sub_1BDBFC720();
        KeyPath = swift_getKeyPath();
        *(&v53 - 2) = MEMORY[0x1E0C80A78](KeyPath);
        swift_getKeyPath();
        v72 = v31;
        sub_1BDB1CDC4();
        swift_retain();
        sub_1BDBFC684();
        sub_1BDBFC69C();
        v47 = v59;
        sub_1BDBFC690();
        sub_1BDBFC69C();
        v48 = *(void (**)(char *, uint64_t))(v14 + 8);
        v48(v47, v13);
        v48(v45, v13);
        v10 = v57;
      }
      v49 = (uint64_t *)(v71 + v24 + *(int *)(v10 + 20));
      v51 = *v49;
      v50 = v49[1];
      if ((sub_1BDB3D528(*v49, v50) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        if ((sub_1BDBFDC20() & 1) != 0)
          goto LABEL_27;
      }
      else
      {
        v72 = v51;
        v73 = v50;
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
        if ((sub_1BDBFDC20() & 1) != 0)
        {
LABEL_27:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      sub_1BDBFC780();
      v26 = v54;
      sub_1BDBFC720();
      v27 = swift_getKeyPath();
      *(&v53 - 2) = MEMORY[0x1E0C80A78](v27);
      swift_getKeyPath();
      v72 = v31;
      sub_1BDB1CCC8();
      swift_retain();
      sub_1BDBFC684();
      sub_1BDBFC69C();
      sub_1BDBFDC20();
      swift_release();
      v28 = v26;
      v22 = v69;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v13);
LABEL_4:
      v25 = v63;
LABEL_5:
      v24 += v25;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        a2 = v53;
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v22, v13);
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v22, v13);
}

BOOL static TranscriptionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptionError.hash(into:)()
{
  return sub_1BDBFEA18();
}

uint64_t TranscriptionError.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB3BA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50D620);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50D620);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static SpeakerAttribute.name.getter()
{
  return 0x4C72656B61657053;
}

uint64_t sub_1BDB3BB04()
{
  return 0x4C72656B61657053;
}

uint64_t static TranscriptTextAttribute.name.getter()
{
  return 0x697263736E617254;
}

uint64_t sub_1BDB3BB54()
{
  return 0x697263736E617254;
}

void sub_1BDB3BB80()
{
  sub_1BDB41D5C();
  JUMPOUT(0x1C3B77BB4);
}

void sub_1BDB3BBB8()
{
  sub_1BDB41D5C();
  JUMPOUT(0x1C3B77BC0);
}

uint64_t sub_1BDB3BBF0()
{
  return sub_1BDBFC864();
}

uint64_t AttributedString.ic_transcriptionRangeMatching<A>(activeSegmentID:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (**v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;

  v48 = a3;
  v52 = a2;
  v54 = a1;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D658);
  v53 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D660);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1BDBFC6CC();
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)&v41 - v13;
  v14 = sub_1BDBFC6D8();
  v43 = *(_QWORD *)(v14 - 8);
  v44 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a4;
  v50 = a5;
  v17 = sub_1BDBFC6C0();
  v51 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v41 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D668);
  MEMORY[0x1E0C80A78](v20);
  v22 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BDBFCB40();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v30;
  sub_1BDB157E4(v52, (uint64_t)v25, &qword_1ED23AD30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v31) == 1)
  {
    sub_1BDAC350C((uint64_t)v25, &qword_1ED23AD30);
    v53[7](v54, 1, 1, v55);
    return 0;
  }
  v33 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v52 = v31;
  v33(v29, v25, v31);
  v34 = v53[7];
  v53 = v22;
  v42 = v34;
  v34((uint64_t)v22, 1, 1, v55);
  sub_1BDBFC6F0();
  v35 = v45;
  sub_1BDBFC6E4();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v44);
  v36 = v47;
  MEMORY[0x1C3B77C74](v47);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v36);
  sub_1BDBFC6B4();
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D678);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v11, 1, v37) == 1)
  {
LABEL_4:
    (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v17);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v52);
    v32 = 0;
    v38 = (uint64_t)v53;
    goto LABEL_12;
  }
  while (1)
  {
    v32 = *v11;
    sub_1BDB35FB0((uint64_t)v11 + *(int *)(v37 + 48), (uint64_t)v8, &qword_1EF50D658);
    if (v32)
      break;
    sub_1BDAC350C((uint64_t)v8, &qword_1EF50D658);
LABEL_7:
    sub_1BDBFC6B4();
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D678);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v11, 1, v37) == 1)
      goto LABEL_4;
  }
  swift_retain();
  v39 = sub_1BDBFCB04();
  swift_release();
  if ((v39 & 1) == 0)
  {
    sub_1BDAC350C((uint64_t)v8, &qword_1EF50D658);
    swift_release();
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v17);
  v38 = (uint64_t)v53;
  sub_1BDAC350C((uint64_t)v53, (uint64_t *)&unk_1EF50D668);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v52);
  sub_1BDB35FB0((uint64_t)v8, v38, &qword_1EF50D658);
  v42(v38, 0, 1, v55);
LABEL_12:
  sub_1BDB35FB0(v38, v54, (uint64_t *)&unk_1EF50D668);
  return v32;
}

uint64_t AttributedString.ic_transcriptionNSRangeMatching<A>(activeSegmentID:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v28 = a4;
  v26 = sub_1BDBFC714();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D658);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v23 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D668);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v23 - v19;
  v21 = AttributedString.ic_transcriptionRangeMatching<A>(activeSegmentID:of:)((uint64_t)&v23 - v19, a1, a2, v27, v28);
  sub_1BDB157E4((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_1EF50D668);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8) == 1)
  {
    sub_1BDAC350C((uint64_t)v20, (uint64_t *)&unk_1EF50D668);
    swift_release();
    v21 = 0;
    v20 = v18;
  }
  else
  {
    sub_1BDB35FB0((uint64_t)v18, (uint64_t)v14, &qword_1EF50D658);
    sub_1BDB157E4((uint64_t)v14, (uint64_t)v12, &qword_1EF50D658);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v25, v4, v26);
    sub_1BDAE0C94(&qword_1EF50D680, &qword_1EF50D658, MEMORY[0x1E0DEB8A8]);
    sub_1BDAC31B0(&qword_1EF50D688, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
    sub_1BDBFE094();
    sub_1BDAC350C((uint64_t)v14, &qword_1EF50D658);
  }
  sub_1BDAC350C((uint64_t)v20, (uint64_t *)&unk_1EF50D668);
  return v21;
}

uint64_t TranscriptViewModelSegment.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TranscriptViewModelSegment.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptViewModelSegment.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

void (*TranscriptViewModelSegment.text.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for TranscriptViewModelSegment(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

double TranscriptViewModelSegment.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 24));
}

uint64_t TranscriptViewModelSegment.timestamp.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TranscriptViewModelSegment(0);
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

void (*TranscriptViewModelSegment.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for TranscriptViewModelSegment(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

double TranscriptViewModelSegment.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 28));
}

uint64_t TranscriptViewModelSegment.duration.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TranscriptViewModelSegment(0);
  *(double *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (*TranscriptViewModelSegment.duration.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for TranscriptViewModelSegment(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t TranscriptViewModelSegment.speaker.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptViewModelSegment.speaker.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

void (*TranscriptViewModelSegment.speaker.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for TranscriptViewModelSegment(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t static TranscriptViewModelSegment.from(jsonData:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1BDBFC390();
  swift_allocObject();
  sub_1BDBFC384();
  v2 = type metadata accessor for TranscriptViewModelSegment(0);
  sub_1BDAC31B0((unint64_t *)&unk_1EF50D690, type metadata accessor for TranscriptViewModelSegment, (uint64_t)&protocol conformance descriptor for TranscriptViewModelSegment);
  sub_1BDBFC378();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_1BDB3C874@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21[3];

  v2 = sub_1BDBFC678();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10];
  MEMORY[0x1E0C80A78](v2);
  v4 = sub_1BDBFC714();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  sub_1BDBFD044();
  sub_1BDBFC660();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BDAC31B0(&qword_1EF50E9A0, v3, MEMORY[0x1E0CAEF28]);
  v8 = sub_1BDBFD89C();
  v10 = v9;
  MEMORY[0x1C3B78568](&v20);
  v11 = sub_1BDBFE040();
  v13 = v12;
  MEMORY[0x1C3B78568](v21, v11);
  sub_1BDBFE040();
  v15 = v14;
  v16 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  v17 = (_QWORD *)(a1 + v16[8]);
  result = _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v19 = (uint64_t *)(a1 + v16[5]);
  *v19 = v8;
  v19[1] = v10;
  *(_QWORD *)(a1 + v16[6]) = v13;
  *(_QWORD *)(a1 + v16[7]) = v15;
  *v17 = 0;
  v17[1] = 0;
  return result;
}

uint64_t sub_1BDB3CA0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[3];
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  v44 = a4;
  v39 = a3;
  v38 = a2;
  v5 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = MEMORY[0x1E0C80A78](v5);
  v41 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - v9;
  v40 = sub_1BDBFC444();
  v11 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BDBFC678();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1BDBFC7BC();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1BDBFC714();
  v42 = *(_QWORD *)(v16 - 8);
  v43 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BDB35FB0(a1, (uint64_t)v47, (uint64_t *)&unk_1EF50DA70);
  if ((v48 & 1) == 0)
  {
    v37 = v6;
    v49 = v47[0];
    v50 = v47[1];
    v51 = v47[2];
    sub_1BDBFE040();
    v21 = v20;
    sub_1BDBFDE84();
    sub_1BDBFE040();
    v23 = v22 - v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D658);
    sub_1BDAE0C94(&qword_1EF50D680, &qword_1EF50D658, MEMORY[0x1E0DEB8A8]);
    sub_1BDBFC72C();
    sub_1BDBFC744();
    sub_1BDBFC660();
    sub_1BDAC31B0(&qword_1EF50E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
    v45 = sub_1BDBFD89C();
    v46 = v24;
    sub_1BDBFC3E4();
    sub_1BDAC3548();
    v25 = sub_1BDBFE130();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v40);
    swift_bridgeObjectRelease();
    v28 = &v10[v5[8]];
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    v29 = (uint64_t *)&v10[v5[5]];
    *v29 = v25;
    v29[1] = v27;
    *(double *)&v10[v5[6]] = v21;
    *(double *)&v10[v5[7]] = v23;
    *(_QWORD *)v28 = 0;
    *((_QWORD *)v28 + 1) = 0;
    v30 = v41;
    sub_1BDB1CC10((uint64_t)v10, v41);
    v31 = v44;
    v32 = *v44;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v31 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v32 = sub_1BDBCC35C(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
      *v31 = v32;
    }
    v35 = *(_QWORD *)(v32 + 16);
    v34 = *(_QWORD *)(v32 + 24);
    if (v35 >= v34 >> 1)
    {
      v32 = sub_1BDBCC35C(v34 > 1, v35 + 1, 1, v32);
      *v31 = v32;
    }
    *(_QWORD *)(v32 + 16) = v35 + 1;
    sub_1BDAEA978(v30, v32+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v35);
    sub_1BDAE1658((uint64_t)v10, type metadata accessor for TranscriptViewModelSegment);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v18, v43);
  }
  return result;
}

uint64_t static TranscriptViewModelSegment.from(jsonString:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_1BDBFD728();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFD71C();
  v6 = sub_1BDBFD704();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    v9 = type metadata accessor for TranscriptViewModelSegment(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    static TranscriptViewModelSegment.from(jsonData:)(a1);
    return sub_1BDB40600(v6, v8);
  }
}

uint64_t TranscriptViewModelSegment.debugDescription.getter()
{
  sub_1BDBFE304();
  sub_1BDBFD7DC();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1EF50D6A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  type metadata accessor for TranscriptViewModelSegment(0);
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFDCEC();
  sub_1BDBFD7DC();
  sub_1BDBFDCEC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t TranscriptViewModelSegment.hash(into:)()
{
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BDBFD620();
}

uint64_t TranscriptViewModelSegment.json.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v0 = sub_1BDBFD728();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1BDBFC3A8();
  MEMORY[0x1E0C80A78](v1);
  sub_1BDBFC3D8();
  swift_allocObject();
  sub_1BDBFC3CC();
  sub_1BDBFC39C();
  sub_1BDBFC3B4();
  type metadata accessor for TranscriptViewModelSegment(0);
  sub_1BDAC31B0(&qword_1EF50D6B0, type metadata accessor for TranscriptViewModelSegment, (uint64_t)&protocol conformance descriptor for TranscriptViewModelSegment);
  v2 = sub_1BDBFC3C0();
  v4 = v3;
  sub_1BDBFD71C();
  v5 = sub_1BDBFD710();
  sub_1BDAEB7EC(v2, v4);
  swift_release();
  return v5;
}

uint64_t TranscriptViewModelSegment.speakerLabelOrHandle.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 32));
  v2 = *v1;
  if (v1[1])
  {
    swift_bridgeObjectRetain();
    v3 = _s11NotesShared33AudioTranscriptionContactsUtilityV015speakerNameFromE06handleSSSgSS_tFZ_0();
    if (v4)
    {
      v5 = v3;
      if (sub_1BDBFD7A0() > 0)
        v2 = v5;
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

uint64_t TranscriptMetadata.__allocating_init(segment:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDAEA978(a1, v2 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
  return v2;
}

uint64_t sub_1BDB3D4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB3D6A4(a1, a2, a3, &qword_1EF50DA80);
}

uint64_t sub_1BDB3D4F8(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EF50DA80);
}

uint64_t sub_1BDB3D504()
{
  sub_1BDB1CDC4();
  return sub_1BDBFC864();
}

uint64_t sub_1BDB3D528(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unint64_t v5;
  int v7;
  int v8;
  BOOL v9;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BDBFD7AC();
      result = sub_1BDBFD890();
      if (!((v5 & 0x2000000000000000) != 0 ? HIBYTE(v5) & 0xF : result & 0xFFFFFFFFFFFFLL))
        break;
      if ((v5 & 0x1000000000000000) != 0)
      {
        v7 = sub_1BDBFE2F8();
      }
      else
      {
        if ((v5 & 0x2000000000000000) == 0 && (result & 0x1000000000000000) == 0)
          sub_1BDBFE418();
        v7 = sub_1BDBFE424();
      }
      v8 = v7;
      swift_bridgeObjectRelease();
      if ((v8 - 14) <= 0xFFFFFFFB && (v8 - 8232) >= 2 && v8 != 133)
      {
        v9 = ((sub_1BDBFD7AC() ^ v3) & 0xFFFFFFFFFFFFC000) == 0;
        return !v9;
      }
      if (v3 < 0x4000)
        goto LABEL_21;
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    v9 = v2 == 0;
    return !v9;
  }
  return result;
}

uint64_t sub_1BDB3D698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB3D6A4(a1, a2, a3, &qword_1EF50DA88);
}

uint64_t sub_1BDB3D6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_1BDBFD6BC() & 1;
}

uint64_t sub_1BDB3D6F8(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EF50DA88);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_1BDBFD62C();
}

uint64_t sub_1BDB3D744()
{
  sub_1BDB1CCC8();
  return sub_1BDBFC864();
}

uint64_t sub_1BDB3D76C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDB3D790 + 4 * byte_1BDC1A7E0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1BDB3D790()
{
  return 1954047348;
}

uint64_t sub_1BDB3D7A0()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1BDB3D7BC()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1BDB3D7D4()
{
  return 0x72656B61657073;
}

uint64_t sub_1BDB3D7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDB3FF6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDB3D810(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1BDB3D81C()
{
  sub_1BDB40614();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB3D844()
{
  sub_1BDB40614();
  return sub_1BDBFEB50();
}

uint64_t TranscriptViewModelSegment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D6B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB40614();
  sub_1BDBFEACC();
  v8[15] = 0;
  sub_1BDBFCB40();
  sub_1BDAC31B0(&qword_1ED23A730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1BDBFE718();
  if (!v1)
  {
    type metadata accessor for TranscriptViewModelSegment(0);
    v8[14] = 1;
    sub_1BDBFE6E8();
    v8[13] = 2;
    sub_1BDBFE700();
    v8[12] = 3;
    sub_1BDBFE700();
    v8[11] = 4;
    sub_1BDBFE6C4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TranscriptViewModelSegment.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t TranscriptViewModelSegment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v27 = a2;
  v28 = sub_1BDBFCB40();
  v3 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D6D0);
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v11[*(int *)(v9 + 32)];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v32 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB40614();
  v30 = v7;
  v13 = v33;
  sub_1BDBFEAB4();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v5;
    v38 = 0;
    sub_1BDAC31B0(&qword_1EF50CD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v15 = v28;
    sub_1BDBFE670();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v29, v15);
    v37 = 1;
    v16 = sub_1BDBFE640();
    v17 = (uint64_t *)&v11[v8[5]];
    *v17 = v16;
    v17[1] = v18;
    v36 = 2;
    sub_1BDBFE658();
    *(_QWORD *)&v11[v8[6]] = v19;
    v35 = 3;
    sub_1BDBFE658();
    *(_QWORD *)&v11[v8[7]] = v20;
    v34 = 4;
    v21 = sub_1BDBFE604();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v31);
    v24 = (uint64_t *)v32;
    swift_bridgeObjectRelease();
    *v24 = v21;
    v24[1] = v23;
    sub_1BDB1CC10((uint64_t)v11, v27);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return sub_1BDAE1658((uint64_t)v11, type metadata accessor for TranscriptViewModelSegment);
  }
}

uint64_t sub_1BDB3DDEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptViewModelSegment.init(from:)(a1, a2);
}

uint64_t sub_1BDB3DE00(_QWORD *a1)
{
  return TranscriptViewModelSegment.encode(to:)(a1);
}

uint64_t sub_1BDB3DE14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1BDB3DE54()
{
  sub_1BDBFEA0C();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB3DEC0()
{
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BDBFD620();
}

uint64_t sub_1BDB3DF18()
{
  sub_1BDBFEA0C();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

BOOL static SummarizationState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SummarizationState.hash(into:)()
{
  return sub_1BDBFEA18();
}

uint64_t static RecordingState.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  v3 = *a2;
  v4 = *a1 >> 62;
  if (!(_DWORD)v4)
  {
    if (!(v3 >> 62))
    {
      v7 = *(void **)(v2 + 16);
      v8 = *(void **)(v3 + 16);
      sub_1BDB40690();
      sub_1BDB40658(v3);
      sub_1BDB40658(v2);
      v9 = v7;
      v10 = v8;
      v6 = sub_1BDBFE070();

      goto LABEL_7;
    }
    goto LABEL_14;
  }
  if ((_DWORD)v4 != 1)
  {
    if (v2 == 0x8000000000000000)
    {
      if (v3 != 0x8000000000000000)
        goto LABEL_14;
      sub_1BDB40674(0x8000000000000000);
      v11 = 0x8000000000000000;
    }
    else
    {
      if (v3 != 0x8000000000000008)
        goto LABEL_14;
      sub_1BDB40674(0x8000000000000008);
      v11 = 0x8000000000000008;
    }
    sub_1BDB40674(v11);
    v6 = 1;
    return v6 & 1;
  }
  if (v3 >> 62 != 1)
  {
LABEL_14:
    sub_1BDB40658(*a2);
    sub_1BDB40658(v2);
    sub_1BDB40674(v2);
    sub_1BDB40674(v3);
    v6 = 0;
    return v6 & 1;
  }
  v5 = *(_QWORD *)(v2 + 16);
  v13 = *(_QWORD *)(v3 + 16);
  v14 = v5;
  sub_1BDB40658(v3);
  sub_1BDB40658(v2);
  v6 = static RecordingState.== infix(_:_:)(&v14, &v13);
LABEL_7:
  sub_1BDB40674(v2);
  sub_1BDB40674(v3);
  return v6 & 1;
}

void TranscriptionModelState.localizedTitle.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDB3E160()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  return v3;
}

void TranscriptionModelState.localizedMessage.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDB3E308()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v0, sel_userInterfaceIdiom);

  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_1BDBFD6C8();
  v3 = objc_msgSend(v1, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v2, 0, 0, 1);

  v4 = sub_1BDBFD6F8();
  return v4;
}

uint64_t TranscriptionModelState.action.getter()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  if (*v0)
    return 0;
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1BDBFD6C8();
  v4 = objc_msgSend(v2, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v3, 0, 0, 1);

  v1 = sub_1BDBFD6F8();
  return v1;
}

BOOL TranscriptionModelState.isIntermediate.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  return v1 == 1 || v1 == 4;
}

uint64_t TranscriptionModelState.systemImageName.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(_QWORD, _QWORD))((char *)sub_1BDB3E874 + 4 * byte_1BDC1A7EB[*v0]))(0, 0);
}

unint64_t sub_1BDB3E874()
{
  return 0xD000000000000011;
}

unint64_t sub_1BDB3E890()
{
  return 0xD000000000000015;
}

NotesShared::TranscriptionModelState_optional __swiftcall TranscriptionModelState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NotesShared::TranscriptionModelState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BDBFE5D4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TranscriptionModelState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDB3E950 + 4 * byte_1BDC1A7F1[*v0]))(0x676E69646E6570, 0xE700000000000000);
}

uint64_t sub_1BDB3E950()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_1BDB3E970()
{
  return 0x656E696C66666FLL;
}

uint64_t sub_1BDB3E984()
{
  return 0x64656C696166;
}

uint64_t sub_1BDB3E998()
{
  return 0x697263736E617274;
}

uint64_t sub_1BDB3E9B8()
{
  return 0x7974706D65;
}

void sub_1BDB3E9CC(char *a1)
{
  sub_1BDB52C58(*a1);
}

void sub_1BDB3E9D8()
{
  char *v0;

  sub_1BDB15BB4(*v0);
}

void sub_1BDB3E9E0()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDB3EA1C()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

void sub_1BDB3EAAC(uint64_t a1)
{
  char *v1;

  sub_1BDB15D74(a1, *v1);
}

NotesShared::TranscriptionModelState_optional sub_1BDB3EAB4(Swift::String *a1)
{
  return TranscriptionModelState.init(rawValue:)(*a1);
}

uint64_t sub_1BDB3EAC0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BDB3EAF0 + 4 * byte_1BDC1A7FD[*v0]))();
}

void sub_1BDB3EAF0(_QWORD *a1@<X8>)
{
  *a1 = 0x64616F6C6E776F64;
  a1[1] = 0xEB00000000676E69;
}

void sub_1BDB3EB14(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656E696C66666FLL;
  a1[1] = v1;
}

void sub_1BDB3EB2C(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

void sub_1BDB3EB44(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "transcribing");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BDB3EB68(_QWORD *a1@<X8>)
{
  *a1 = 0x7974706D65;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1BDB3EB80()
{
  uint64_t result;

  result = sub_1BDBFD6C8();
  qword_1EF50D638 = result;
  return result;
}

id static NSAttributedStringKey.ic_transcriptSpeakerLabel.getter()
{
  return sub_1BDB3EC70(&qword_1EF50B1C0, (id *)&qword_1EF50D638);
}

uint64_t sub_1BDB3EBD0()
{
  uint64_t result;

  result = sub_1BDBFD6C8();
  qword_1EF50D640 = result;
  return result;
}

id static NSAttributedStringKey.ic_transcriptText.getter()
{
  return sub_1BDB3EC70(&qword_1EF50B1C8, (id *)&qword_1EF50D640);
}

uint64_t sub_1BDB3EC20()
{
  uint64_t result;

  result = sub_1BDBFD6C8();
  qword_1EF50D648 = result;
  return result;
}

id static NSAttributedStringKey.ic_transcriptActiveSegment.getter()
{
  return sub_1BDB3EC70(&qword_1EF50B1D0, (id *)&qword_1EF50D648);
}

id sub_1BDB3EC70(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t TranscriptMetadata.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
  v4 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TranscriptMetadata.segment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BDB1CC10(v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment, a1);
}

uint64_t TranscriptMetadata.init(segment:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = sub_1BDBFCB40();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id, v6, v3);
  sub_1BDAEA978(a1, v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
  return v1;
}

uint64_t TranscriptMetadata.debugDescription.getter()
{
  sub_1BDBFE304();
  sub_1BDBFD7DC();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1EF50D6A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  type metadata accessor for TranscriptViewModelSegment(0);
  sub_1BDBFE4E4();
  return 0;
}

uint64_t TranscriptMetadata.hash(into:)()
{
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  return sub_1BDBFD620();
}

uint64_t static TranscriptMetadata.== infix(_:_:)()
{
  return sub_1BDBFCB04();
}

uint64_t sub_1BDB3EF54()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E656D676573;
  else
    return 25705;
}

uint64_t sub_1BDB3EF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDB3FE94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDB3EFA8()
{
  sub_1BDB406CC();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB3EFD0()
{
  sub_1BDB406CC();
  return sub_1BDBFEB50();
}

uint64_t TranscriptMetadata.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
  v2 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1BDAE1658(v0 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment, type metadata accessor for TranscriptViewModelSegment);
  return v0;
}

uint64_t TranscriptMetadata.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
  v2 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1BDAE1658(v0 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment, type metadata accessor for TranscriptViewModelSegment);
  return swift_deallocClassInstance();
}

uint64_t TranscriptMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D6D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB406CC();
  sub_1BDBFEACC();
  v8[15] = 0;
  sub_1BDBFCB40();
  sub_1BDAC31B0(&qword_1ED23A730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1BDBFE718();
  if (!v1)
  {
    v8[14] = 1;
    type metadata accessor for TranscriptViewModelSegment(0);
    sub_1BDAC31B0(&qword_1EF50D6B0, type metadata accessor for TranscriptViewModelSegment, (uint64_t)&protocol conformance descriptor for TranscriptViewModelSegment);
    sub_1BDBFE718();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TranscriptMetadata.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t TranscriptMetadata.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  TranscriptMetadata.init(from:)(a1);
  return v2;
}

uint64_t *TranscriptMetadata.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void (*v11)(void);
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;

  v19 = *v1;
  v14 = type metadata accessor for TranscriptViewModelSegment(0);
  MEMORY[0x1E0C80A78](v14);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BDBFCB40();
  v5 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v16 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D6E8);
  v7 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB406CC();
  v10 = v18;
  sub_1BDBFEAB4();
  if (v10)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21 = 0;
    sub_1BDAC31B0(&qword_1EF50CD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1BDBFE670();
    v13[1] = v5;
    v11 = *(void (**)(void))(v5 + 32);
    v18 = (char *)v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
    v11();
    v20 = 1;
    sub_1BDAC31B0((unint64_t *)&unk_1EF50D690, type metadata accessor for TranscriptViewModelSegment, (uint64_t)&protocol conformance descriptor for TranscriptViewModelSegment);
    sub_1BDBFE670();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
    sub_1BDAEA978((uint64_t)v4, (uint64_t)v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v1;
}

uint64_t *sub_1BDB3F5D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = TranscriptMetadata.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BDB3F624(_QWORD *a1)
{
  return TranscriptMetadata.encode(to:)(a1);
}

uint64_t sub_1BDB3F644@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
  v4 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BDB3F68C()
{
  return TranscriptMetadata.debugDescription.getter();
}

uint64_t sub_1BDB3F6AC()
{
  sub_1BDBFEA0C();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB3F750()
{
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  return sub_1BDBFD620();
}

uint64_t sub_1BDB3F7E4()
{
  sub_1BDBFEA0C();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB3F884()
{
  return sub_1BDBFCB04();
}

double TranscriptPauseTextAttachment.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11NotesShared29TranscriptPauseTextAttachment_duration);
}

id TranscriptPauseTextAttachment.__allocating_init(duration:)(double a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(double *)&v3[OBJC_IVAR____TtC11NotesShared29TranscriptPauseTextAttachment_duration] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_initWithData_ofType_, 0, 0);
}

id TranscriptPauseTextAttachment.init(duration:)(double a1)
{
  char *v1;
  objc_super v3;

  *(double *)&v1[OBJC_IVAR____TtC11NotesShared29TranscriptPauseTextAttachment_duration] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for TranscriptPauseTextAttachment();
  return objc_msgSendSuper2(&v3, sel_initWithData_ofType_, 0, 0);
}

id TranscriptPauseTextAttachment.__allocating_init(data:ofType:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  void *v6;
  void *v7;
  id v10;

  if (a2 >> 60 != 15)
  {
    v6 = (void *)sub_1BDBFC978();
    sub_1BDB40600(a1, a2);
    if (a4)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = 0;
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v7 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
LABEL_6:
  v10 = objc_msgSend(objc_allocWithZone(v4), sel_initWithData_ofType_, v6, v7);

  return v10;
}

void TranscriptPauseTextAttachment.init(data:ofType:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TranscriptPauseTextAttachment.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptPauseTextAttachment();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BDB3FB08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptPauseTextAttachment();
  result = sub_1BDBFE340();
  *a1 = result;
  return result;
}

uint64_t _s11NotesShared26TranscriptViewModelSegmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;

  if ((sub_1BDBFCB04() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_1BDBFE874(), result = 0, (v10 & 1) != 0))
  {
    if (*(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6]) && *(double *)(a1 + v4[7]) == *(double *)(a2 + v4[7]))
    {
      v12 = v4[8];
      v13 = (_QWORD *)(a1 + v12);
      v14 = *(_QWORD *)(a1 + v12 + 8);
      v15 = (_QWORD *)(a2 + v12);
      v16 = v15[1];
      if (v14)
      {
        if (v16)
        {
          v17 = *v13 == *v15 && v14 == v16;
          if (v17 || (sub_1BDBFE874() & 1) != 0)
            return 1;
        }
      }
      else if (!v16)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BDB3FC28(uint64_t a1, void (*a2)(_BYTE *, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, char *);
  _BYTE v22[52];
  uint64_t v23;

  v21 = a2;
  v23 = a3;
  v18 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DA48);
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DA50);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50DA30);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DA58);
  v20 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v18, v9);
  sub_1BDAE0C94(&qword_1EF50DA60, (uint64_t *)&unk_1EF50DA30, MEMORY[0x1E0CAF108]);
  sub_1BDBFD8CC();
  sub_1BDAE0C94(&qword_1EF50DA68, &qword_1EF50DA58, MEMORY[0x1E0CAF0E8]);
  sub_1BDBFE0F4();
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  while (v16(v8, 1, v3) != 1)
  {
    sub_1BDB35FB0((uint64_t)v8, (uint64_t)v5, &qword_1EF50DA48);
    sub_1BDB35FB0((uint64_t)v5, (uint64_t)v22, (uint64_t *)&unk_1EF50DA70);
    v21(v22, &v5[*(int *)(v3 + 48)]);
    sub_1BDAC350C((uint64_t)v5, &qword_1EF50DA48);
    sub_1BDBFE0F4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v15, v13);
}

uint64_t sub_1BDB3FE94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656D676573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BDB3FF6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656B61657073 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t type metadata accessor for TranscriptMetadata(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50D930);
}

uint64_t sub_1BDB40180()
{
  sub_1BDB1CCC8();
  return sub_1BDBFC864();
}

uint64_t sub_1BDB401A4()
{
  return 8;
}

uint64_t sub_1BDB401B0()
{
  return swift_release();
}

uint64_t sub_1BDB401B8(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BDB401C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB3D6A4(a1, a2, a3, &qword_1EF50DA88) & 1;
}

uint64_t sub_1BDB401E4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EF50DA88);
}

_QWORD *sub_1BDB401F0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BDB401FC()
{
  sub_1BDB1CDC4();
  return sub_1BDBFC864();
}

uint64_t sub_1BDB40220()
{
  return 8;
}

uint64_t sub_1BDB4022C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB3D6A4(a1, a2, a3, &qword_1EF50DA80) & 1;
}

uint64_t sub_1BDB4024C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EF50DA80);
}

uint64_t _s11NotesShared26TranscriptViewModelSegmentV4from6result9temporarySayACG6Speech11TranscriberC18MultisegmentResultV_SbtFZ_0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50DA30);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFC6D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E9D0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BDBFC714();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v18 = sub_1BDBFCFA8();
    MEMORY[0x1E0C80A78](v18);
    *(&v28 - 2) = a1;
    v19 = sub_1BDB83E24((void (*)(uint64_t))sub_1BDB41DA8, (uint64_t)(&v28 - 4), v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_1BDBFCF90();
    if (*(_QWORD *)(v20 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v13, v20 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v21, 1, v14);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1BDAC350C((uint64_t)v13, &qword_1EF50E9D0);
      if (qword_1EF50B1B8 != -1)
        swift_once();
      v22 = sub_1BDBFCE34();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EF50D620);
      v23 = sub_1BDBFCE1C();
      v24 = sub_1BDBFDEE4();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_1BD918000, v23, v24, "got an empty result", v25, 2u);
        MEMORY[0x1C3B7B478](v25, -1, -1);
      }

      return MEMORY[0x1E0DEE9D8];
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
      v31 = MEMORY[0x1E0DEE9D8];
      sub_1BDBFC6F0();
      sub_1BDBFD038();
      sub_1BDAC31B0(&qword_1EF50DA40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7CB0], MEMORY[0x1E0CD7CA8]);
      sub_1BDBFC6E4();
      v26 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      MEMORY[0x1E0C80A78](v26);
      *(&v28 - 2) = (uint64_t)v17;
      *(&v28 - 1) = (uint64_t)&v31;
      sub_1BDB3FC28((uint64_t)v6, (void (*)(_BYTE *, char *))sub_1BDB41DA0, (uint64_t)(&v28 - 4));
      (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return v31;
    }
  }
  return v19;
}

uint64_t sub_1BDB40600(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BDAEB7EC(a1, a2);
  return a1;
}

unint64_t sub_1BDB40614()
{
  unint64_t result;

  result = qword_1EF50D6C0;
  if (!qword_1EF50D6C0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1B32C, &type metadata for TranscriptViewModelSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50D6C0);
  }
  return result;
}

unint64_t sub_1BDB40658(unint64_t result)
{
  if ((result >> 62) <= 1)
    return swift_retain();
  return result;
}

unint64_t sub_1BDB40674(unint64_t result)
{
  if ((result >> 62) <= 1)
    return swift_release();
  return result;
}

unint64_t sub_1BDB40690()
{
  unint64_t result;

  result = qword_1ED23B120;
  if (!qword_1ED23B120)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED23B120);
  }
  return result;
}

unint64_t sub_1BDB406CC()
{
  unint64_t result;

  result = qword_1EF50D6E0;
  if (!qword_1EF50D6E0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1B2DC, &type metadata for TranscriptMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50D6E0);
  }
  return result;
}

uint64_t type metadata accessor for TranscriptPauseTextAttachment()
{
  return objc_opt_self();
}

unint64_t sub_1BDB40734()
{
  unint64_t result;

  result = qword_1EF50D6F8;
  if (!qword_1EF50D6F8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptionError, &type metadata for TranscriptionError);
    atomic_store(result, (unint64_t *)&qword_1EF50D6F8);
  }
  return result;
}

uint64_t sub_1BDB40778()
{
  return sub_1BDAC31B0(&qword_1EF50D700, type metadata accessor for TranscriptMetadata, (uint64_t)&protocol conformance descriptor for TranscriptMetadata);
}

unint64_t sub_1BDB407A8()
{
  unint64_t result;

  result = qword_1EF50D708;
  if (!qword_1EF50D708)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptionTextAttributes, &type metadata for TranscriptionTextAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF50D708);
  }
  return result;
}

unint64_t sub_1BDB407F0()
{
  unint64_t result;

  result = qword_1EF50D710;
  if (!qword_1EF50D710)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptionTextAttributes, &type metadata for TranscriptionTextAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF50D710);
  }
  return result;
}

uint64_t sub_1BDB40834()
{
  return sub_1BDAC31B0(&qword_1EF50D718, type metadata accessor for TranscriptViewModelSegment, (uint64_t)&protocol conformance descriptor for TranscriptViewModelSegment);
}

unint64_t sub_1BDB40864()
{
  unint64_t result;

  result = qword_1EF50D720;
  if (!qword_1EF50D720)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptionState, &type metadata for TranscriptionState);
    atomic_store(result, (unint64_t *)&qword_1EF50D720);
  }
  return result;
}

unint64_t sub_1BDB408AC()
{
  unint64_t result;

  result = qword_1EF50D728;
  if (!qword_1EF50D728)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for SummarizationState, &type metadata for SummarizationState);
    atomic_store(result, (unint64_t *)&qword_1EF50D728);
  }
  return result;
}

unint64_t sub_1BDB408F4()
{
  unint64_t result;

  result = qword_1EF50D730;
  if (!qword_1EF50D730)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptionModelState, &type metadata for TranscriptionModelState);
    atomic_store(result, (unint64_t *)&qword_1EF50D730);
  }
  return result;
}

uint64_t sub_1BDB40938()
{
  return sub_1BDAC31B0(&qword_1EF50D738, type metadata accessor for TranscriptMetadata, (uint64_t)&protocol conformance descriptor for TranscriptMetadata);
}

uint64_t sub_1BDB40964()
{
  return MEMORY[0x1E0DEA528];
}

uint64_t getEnumTagSinglePayload for TranscriptionError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1BDB40A4C + 4 * byte_1BDC1A808[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1BDB40A80 + 4 * byte_1BDC1A803[v4]))();
}

uint64_t sub_1BDB40A80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB40A88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB40A90);
  return result;
}

uint64_t sub_1BDB40A9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB40AA4);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1BDB40AA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB40AB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionError()
{
  return &type metadata for TranscriptionError;
}

ValueMetadata *type metadata accessor for SpeakerAttribute()
{
  return &type metadata for SpeakerAttribute;
}

ValueMetadata *type metadata accessor for TranscriptTextAttribute()
{
  return &type metadata for TranscriptTextAttribute;
}

ValueMetadata *type metadata accessor for TranscriptionTextAttributes()
{
  return &type metadata for TranscriptionTextAttributes;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptViewModelSegment(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BDBFCB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TranscriptViewModelSegment(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v10 = a3[8];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptViewModelSegment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB40E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptViewModelSegment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB40F14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BDBFCB40();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BDB40F90()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionState()
{
  return &type metadata for TranscriptionState;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptionUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1BDBFCFB4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for TranscriptionUpdate(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1BDBFCFB4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for TranscriptionUpdate(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BDBFCFB4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for TranscriptionUpdate(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BDAE1658((uint64_t)a1, type metadata accessor for TranscriptionUpdate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BDBFCFB4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for TranscriptionUpdate(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50D850);
}

void *initializeWithTake for TranscriptionUpdate(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BDBFCFB4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TranscriptionUpdate(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BDAE1658((uint64_t)a1, type metadata accessor for TranscriptionUpdate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BDBFCFB4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BDB413A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCFB4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationState()
{
  return &type metadata for SummarizationState;
}

uint64_t *initializeBufferWithCopyOfBuffer for SummarizationUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1BDBFC714();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t destroy for SummarizationUpdate(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFC714();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for SummarizationUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFC714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SummarizationUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFC714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SummarizationUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFC714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SummarizationUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFC714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummarizationUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFC714();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SummarizationUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BDBFC714();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t type metadata accessor for SummarizationUpdate(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1EF50D8F8);
}

uint64_t sub_1BDB41678(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = sub_1BDBFC714();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for RecordingState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BDB40658(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for RecordingState(unint64_t *a1)
{
  return sub_1BDB40674(*a1);
}

unint64_t *assignWithCopy for RecordingState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BDB40658(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BDB40674(v4);
  return a1;
}

unint64_t *assignWithTake for RecordingState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BDB40674(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordingState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RecordingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BDB41820(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

unint64_t *sub_1BDB4183C(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for RecordingState()
{
  return &type metadata for RecordingState;
}

uint64_t storeEnumTagSinglePayload for TranscriptionModelState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BDB418C4 + 4 * byte_1BDC1A812[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BDB418F8 + 4 * byte_1BDC1A80D[v4]))();
}

uint64_t sub_1BDB418F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB41900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB41908);
  return result;
}

uint64_t sub_1BDB41914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB4191CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BDB41920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB41928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionModelState()
{
  return &type metadata for TranscriptionModelState;
}

uint64_t sub_1BDB41944()
{
  return type metadata accessor for TranscriptMetadata(0);
}

uint64_t sub_1BDB4194C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptViewModelSegment(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TranscriptMetadata()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TranscriptMetadata.__allocating_init(segment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of TranscriptMetadata.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for TranscriptPauseTextAttachment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TranscriptPauseTextAttachment.__allocating_init(duration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t _s11NotesShared18TranscriptionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDB41A60 + 4 * byte_1BDC1A81C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDB41A94 + 4 * byte_1BDC1A817[v4]))();
}

uint64_t sub_1BDB41A94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB41A9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB41AA4);
  return result;
}

uint64_t sub_1BDB41AB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB41AB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDB41ABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB41AC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptMetadata.CodingKeys()
{
  return &type metadata for TranscriptMetadata.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for TranscriptViewModelSegment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BDB41B2C + 4 * byte_1BDC1A826[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BDB41B60 + 4 * byte_1BDC1A821[v4]))();
}

uint64_t sub_1BDB41B60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB41B68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB41B70);
  return result;
}

uint64_t sub_1BDB41B7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB41B84);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BDB41B88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB41B90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewModelSegment.CodingKeys()
{
  return &type metadata for TranscriptViewModelSegment.CodingKeys;
}

unint64_t sub_1BDB41BB0()
{
  unint64_t result;

  result = qword_1EF50D9F0;
  if (!qword_1EF50D9F0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1B1FC, &type metadata for TranscriptViewModelSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50D9F0);
  }
  return result;
}

unint64_t sub_1BDB41BF8()
{
  unint64_t result;

  result = qword_1EF50D9F8;
  if (!qword_1EF50D9F8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1B2B4, &type metadata for TranscriptMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50D9F8);
  }
  return result;
}

unint64_t sub_1BDB41C40()
{
  unint64_t result;

  result = qword_1EF50DA00;
  if (!qword_1EF50DA00)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1B224, &type metadata for TranscriptMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50DA00);
  }
  return result;
}

unint64_t sub_1BDB41C88()
{
  unint64_t result;

  result = qword_1EF50DA08;
  if (!qword_1EF50DA08)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1B24C, &type metadata for TranscriptMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50DA08);
  }
  return result;
}

unint64_t sub_1BDB41CD0()
{
  unint64_t result;

  result = qword_1EF50DA10;
  if (!qword_1EF50DA10)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1B16C, &type metadata for TranscriptViewModelSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50DA10);
  }
  return result;
}

unint64_t sub_1BDB41D18()
{
  unint64_t result;

  result = qword_1EF50DA18;
  if (!qword_1EF50DA18)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1B194, &type metadata for TranscriptViewModelSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50DA18);
  }
  return result;
}

unint64_t sub_1BDB41D5C()
{
  unint64_t result;

  result = qword_1EF50DA20;
  if (!qword_1EF50DA20)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptionTextAttributes, &type metadata for TranscriptionTextAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF50DA20);
  }
  return result;
}

uint64_t sub_1BDB41DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BDB3CA0C(a1, a2, *(_QWORD *)(v2 + 16), *(unint64_t **)(v2 + 24));
}

uint64_t sub_1BDB41DA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDB3C874(a1);
}

id ICTTTextEditGroup.init(edits:latestTimestamp:userID:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a5;
  v26 = a6;
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDB41FDC();
  v15 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v27 = a2;
  sub_1BDACDF20(a2, (uint64_t)v14);
  v16 = sub_1BDBFCAC8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1)
  {
    v18 = (void *)sub_1BDBFCA74();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  if (!a4)
  {
    v19 = objc_msgSend((id)objc_opt_self(), sel_CR_unknown);
    sub_1BDBFCB10();

    sub_1BDBFCAEC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v20 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v21 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v20, sel_initWithEdits_latestTimestamp_userID_range_, v15, v18, v21, v25, v26);

  sub_1BDACDF68(v27);
  return v22;
}

unint64_t sub_1BDB41FDC()
{
  unint64_t result;

  result = qword_1EF510130;
  if (!qword_1EF510130)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF510130);
  }
  return result;
}

uint64_t sub_1BDB42018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(*(_QWORD *)(*(_QWORD *)(a2 + 64) + 40), a1);
  return swift_continuation_throwingResume();
}

uint64_t sub_1BDB42050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v6, a1, a4);
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1BDB420B4@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  MEMORY[0x1E0C80A78](a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1BDBFEA90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t ICLegacyContext.fetch<A>(_:)()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_managedObjectContext);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1BDBFE004();

  }
  else
  {
    type metadata accessor for ICError(0);
    v3 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BF98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(inited + 32) = sub_1BDBFD6F8();
    *(_QWORD *)(inited + 40) = v6;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0xD00000000000002ALL;
    *(_QWORD *)(inited + 56) = 0x80000001BDC38D90;
    sub_1BDB0ABBC(inited);
    sub_1BDAF5B44();
    sub_1BDBFC858();
    swift_willThrow();
  }
  return v3;
}

uint64_t ICLegacyContext.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BDB4231C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[3];
  v6 = (_QWORD *)swift_allocObject();
  v0[8] = (uint64_t)v6;
  v6[2] = v4;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v5;
  v6[6] = v3;
  v7 = swift_task_alloc();
  v0[9] = v7;
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v2;
  swift_unknownObjectRetain();
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_1BDB423F4;
  return withUnsafeRethrowingContinuation<A>(_:rethrow:)(v0[2], (uint64_t)sub_1BDB425B8, (uint64_t)v6, (uint64_t)sub_1BDB426FC, v7, v0[6]);
}

uint64_t sub_1BDB423F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB42474()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDB424B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  _QWORD v14[6];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a1;
  v14[4] = sub_1BDB42BB4;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BDB24AB0;
  v14[3] = &block_descriptor_14;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_performBlock_, v13);
  _Block_release(v13);
}

uint64_t sub_1BDB4258C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BDB425B8(uint64_t a1)
{
  uint64_t v1;

  sub_1BDB424B0(a1, *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BDB425C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(void);
  uint64_t v12;
  char *v13;
  _QWORD v15[2];

  v7 = *(_QWORD *)(a5 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void (*)(void))MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v15 - v12;
  v11();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, a5);
  (*(void (**)(_QWORD, char *, uint64_t))(v7 + 32))(*(_QWORD *)(*(_QWORD *)(a3 + 64) + 40), v10, a5);
  swift_continuation_throwingResume();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a5);
}

id sub_1BDB426FC(void *a1)
{
  return sub_1BDAF17F0(a1);
}

uint64_t ICLegacyContext.performAndWait<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD v6[4];
  _BYTE v7[16];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  v11 = a2;
  v6[2] = a3;
  v6[3] = a4;
  return sub_1BDB42778((uint64_t)sub_1BDB42758, (uint64_t)v7, (void (*)(_QWORD))sub_1BDB426FC, (uint64_t)v6, a3, a4, a5);
}

uint64_t sub_1BDB42758()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1BDB42778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t result;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[8];

  v25 = a3;
  v28 = a5;
  v29 = a2;
  v24 = a4;
  v27 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED23B110);
  v9 = sub_1BDBFEA90();
  v10 = sub_1BDBFE0AC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v24 - v15;
  v17 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))((char *)&v24 - v15, 1, 1, v9);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v28;
  v18[3] = a6;
  v18[4] = v16;
  v18[5] = a1;
  v18[6] = v29;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BDB42B24;
  *(_QWORD *)(v19 + 24) = v18;
  aBlock[4] = sub_1BDB42B40;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDBC55F0;
  aBlock[3] = &block_descriptor_7;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend((id)aBlock[7], sel_performBlockAndWait_, v20, v24, v25);
  _Block_release(v20);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v20 & 1) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v9);
  if ((_DWORD)result == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v22 = v26;
  sub_1BDB1D470(v9, (uint64_t)aBlock, v27);
  if (v22)
  {
    v23 = (void *)aBlock[0];
    v25(aBlock[0]);

  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return swift_release();
}

uint64_t sub_1BDB42A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v16 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED23B110);
  v9 = sub_1BDBFEA90();
  v10 = sub_1BDBFE0AC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v15 - v12;
  v17 = a4;
  v18 = a5;
  v19 = a2;
  v20 = a3;
  sub_1BDB420B4((void (*)(_BYTE *))sub_1BDB42B60, (uint64_t)&v15 - v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v13, 0, 1, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 40))(v16, v13, v10);
}

uint64_t sub_1BDB42B14()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB42B24()
{
  return sub_1BDB42BC0(sub_1BDB42A00);
}

uint64_t sub_1BDB42B30()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB42B40()
{
  uint64_t v0;

  return sub_1BDBC55D0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1BDB42B60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 32))();
  if (v2)
    *a1 = v2;
  return result;
}

uint64_t sub_1BDB42B90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB42BB4()
{
  return sub_1BDB42BC0(sub_1BDB425C8);
}

uint64_t sub_1BDB42BC0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t StringProtocol.converting(from:to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = *(unsigned __int8 *)MEMORY[0x1E0C80A78](a1);
  v35 = *v4;
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  v6 = sub_1BDBFD8A8();
  v8 = v7;
  if (v3)
  {
    if (v3 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BDBAEBC4(1);
      swift_bridgeObjectRelease();
      v9 = sub_1BDBFE0B8();
      v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v12 = sub_1BDB436A4(1uLL, v6, v8);
      v14 = v13;
      v16 = v15;
      v18 = v17;
      swift_bridgeObjectRelease();
      v33 = v9;
      v34 = v11;
      v29 = v12;
      v30 = v14;
      v31 = v16;
      v32 = v18;
      sub_1BDB0842C();
      swift_bridgeObjectRetain();
      sub_1BDBFD7C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v33;
      v8 = v34;
    }
    else
    {
      v19 = objc_allocWithZone((Class)type metadata accessor for CustomReplacementRegularExpression());
      v20 = sub_1BDBC1F94(0xD000000000000012, 0x80000001BDC38DC0, (uint64_t)sub_1BDB42F60, 0, 0);
      swift_bridgeObjectRetain();
      v21 = sub_1BDBFD7A0();
      swift_bridgeObjectRelease();
      v29 = v6;
      v30 = v8;
      swift_bridgeObjectRetain();
      sub_1BDBFD8A8();
      v22 = (void *)sub_1BDBFD6C8();
      swift_bridgeObjectRelease();
      v23 = (void *)sub_1BDBFD6C8();
      v24 = objc_msgSend(v20, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v22, 0, 0, v21, v23);

      v6 = sub_1BDBFD6F8();
      v26 = v25;
      swift_bridgeObjectRelease();

      v8 = v26;
    }
  }
  v27 = sub_1BDB430B8(v6, v8);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1BDB42F60(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v1 = *a1;
  v2 = a1[4];
  if (*(_QWORD *)(v2 + 16) != 2)
  {
    swift_bridgeObjectRetain();
    return v1;
  }
  result = sub_1BDBFD8B4();
  if (*(_QWORD *)(v2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1BDBFD8B4();
    sub_1BDBFE0C4();
    swift_bridgeObjectRelease();
    v4 = sub_1BDBFD7A0();
    v5 = sub_1BDBFE0DC();
    v6 = __OFADD__(v4, v5);
    result = v4 + v5;
    if (!v6)
    {
      MEMORY[0x1C3B78D48](result);
      sub_1BDB0842C();
      sub_1BDBFD7C4();
      sub_1BDBFD7C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB430B8(uint64_t a1, unint64_t a2)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1;
  if (*v2)
  {
    if (*v2 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BDBAEBC4(1);
      swift_bridgeObjectRelease();
      v5 = sub_1BDBFE0C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BDB436A4(1uLL, v4, a2);
      swift_bridgeObjectRelease();
      sub_1BDB0842C();
      swift_bridgeObjectRetain();
      sub_1BDBFD7C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      v6 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, a1, a2);
      sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v6, v7);
      swift_bridgeObjectRelease();
      v4 = sub_1BDBFD740();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t String.Cases.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static String.Cases.allCases.getter()
{
  return &unk_1E76D1A80;
}

uint64_t String.Cases.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D61437265707075;
  if (*v0 != 1)
    v1 = 0x736143626162656BLL;
  if (*v0)
    return v1;
  else
    return 0x6D61437265776F6CLL;
}

uint64_t sub_1BDB43434(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BDB5289C(*a1, *a2);
}

uint64_t sub_1BDB43440()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB434EC()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB43574()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB4361C@<X0>(char *a1@<X8>)
{
  return String.Cases.init(rawValue:)(a1);
}

void sub_1BDB43628(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = 0xEE00657361436C65;
  v3 = *v1;
  v4 = 0x6D61437265707075;
  v5 = 0xE900000000000065;
  if (v3 == 1)
    v5 = 0xEE00657361436C65;
  else
    v4 = 0x736143626162656BLL;
  v6 = v3 == 0;
  if (*v1)
    v7 = v4;
  else
    v7 = 0x6D61437265776F6CLL;
  if (!v6)
    v2 = v5;
  *a1 = v7;
  a1[1] = v2;
}

void sub_1BDB43694(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E76D18C8;
}

unint64_t sub_1BDB436A4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1BDBFD7B8();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1BDBFD8B4();
  }
  __break(1u);
  return result;
}

unint64_t sub_1BDB43744()
{
  unint64_t result;

  result = qword_1EF50DA98;
  if (!qword_1EF50DA98)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for String.Cases, &type metadata for String.Cases);
    atomic_store(result, (unint64_t *)&qword_1EF50DA98);
  }
  return result;
}

unint64_t sub_1BDB4378C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50DAA0;
  if (!qword_1EF50DAA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50DAA8);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50DAA0);
  }
  return result;
}

uint64_t _s5CasesOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDB43824 + 4 * byte_1BDC1B381[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDB43858 + 4 * byte_1BDC1B37C[v4]))();
}

uint64_t sub_1BDB43858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB43860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB43868);
  return result;
}

uint64_t sub_1BDB43874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB4387CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDB43880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB43888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for String.Cases()
{
  return &type metadata for String.Cases;
}

uint64_t NotificationSource.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1BDB438BC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = **(_QWORD ***)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_1BDB43938;
  v2[2] = *(_QWORD *)(v0 + 16);
  v2[3] = v1;
  v3 = *MEMORY[0x1E0DEEDD8];
  v2[4] = *v1;
  v2[5] = v3;
  return swift_task_switch();
}

uint64_t sub_1BDB43938()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB43980(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = *MEMORY[0x1E0DEEDD8];
  v2[4] = *v1;
  v2[5] = v3;
  return swift_task_switch();
}

uint64_t sub_1BDB439AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[6] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  sub_1BDBFE0AC();
  *v4 = v0;
  v4[1] = sub_1BDB43A68;
  return sub_1BDBFE880();
}

uint64_t sub_1BDB43A68()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB43AC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BDB2A6A8;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_1BDB43B24()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BDB43BA8;
  return sub_1BDBFDB48();
}

uint64_t sub_1BDB43BA8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id NotificationSource.makeAsyncIterator()@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

void sub_1BDB43C04(void **a1@<X8>)
{
  id *v1;

  NotificationSource.makeAsyncIterator()(a1);

}

uint64_t sub_1BDB43C1C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_1BDBFE0AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  v11 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x1E0C80A78](v8);
  v14 = *v3;
  if (!*((_BYTE *)v3 + 8))
  {
    v18 = *v3;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    sub_1BDBFDAAC();
    result = sub_1BDBFDA7C();
    *v3 = v18;
LABEL_7:
    *((_BYTE *)v3 + 8) = 0;
    return result;
  }
  if (*((_BYTE *)v3 + 8) == 1)
  {
    *v3 = 0;
    *((_BYTE *)v3 + 8) = 2;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, a1, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v5);
    (*(void (**)(_QWORD, char *, uint64_t))(v7 + 32))(*(_QWORD *)(*(_QWORD *)(v14 + 64) + 40), v10, v6);
    return swift_continuation_resume();
  }
  if (!v14)
  {
    sub_1BDACC958(v5, v5);
    swift_allocObject();
    v15 = sub_1BDBFDA04();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v16, a1, v5);
    result = v15;
    sub_1BDACAA68();
    *v3 = v15;
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1BDB43DE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_1BDBFE0AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x1E0C80A78](v8);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  if (*((_BYTE *)v3 + 8))
  {
    if (*((_BYTE *)v3 + 8) == 2)
    {
      if (v15)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v5);
        (*(void (**)(_QWORD, char *, uint64_t))(v7 + 32))(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 40), v10, v6);
        return swift_continuation_resume();
      }
      else
      {
        *v3 = a1;
        *((_BYTE *)v3 + 8) = 1;
      }
    }
    else
    {
      result = sub_1BDBFE52C();
      __break(1u);
    }
  }
  else
  {
    v21 = a1;
    v23 = v15;
    v16 = sub_1BDBFDAAC();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF58], v16);
    sub_1BDBFDE54();
    v17 = v23;
    v22 = v23;
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v16);
    if ((sub_1BDBFDE24() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v17 = 0;
      v18 = 2;
    }
    else
    {
      v18 = 0;
    }
    v19 = v21;
    *v3 = v17;
    *((_BYTE *)v3 + 8) = v18;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v10, v14, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v5);
    (*(void (**)(_QWORD, char *, uint64_t))(v7 + 32))(*(_QWORD *)(*(_QWORD *)(v19 + 64) + 40), v10, v6);
    swift_continuation_resume();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v5);
  }
  return result;
}

uint64_t sub_1BDB44024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1BDBFE0AC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - v5;
  v7 = *(_QWORD *)v1;
  v8 = *(unsigned __int8 *)(v1 + 8);
  if ((_DWORD)v8 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v6, v8, 1, v2);
    (*(void (**)(_QWORD, char *, uint64_t))(v4 + 32))(*(_QWORD *)(*(_QWORD *)(v7 + 64) + 40), v6, v3);
    result = swift_continuation_resume();
  }
  else
  {
    result = sub_1BD943A60(*(_QWORD *)v1, v8);
  }
  *(_QWORD *)v1 = 1;
  *(_BYTE *)(v1 + 8) = 2;
  return result;
}

void sub_1BDB440F0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  objc_class *ObjectType;
  void *v17;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v17 = v0;
  v1 = &v0[qword_1EF50DAB0];
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  v3 = v2 + 56;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v13 >= v7)
      goto LABEL_21;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_21;
      v14 = *(_QWORD *)(v3 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v7)
          goto LABEL_21;
        v14 = *(_QWORD *)(v3 + 8 * v8);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v6 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    v11 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10);
    v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    objc_msgSend(v12, sel__removeObserver_, v11);

  }
  v15 = v13 + 3;
  if (v15 >= v7)
  {
LABEL_21:
    swift_release();
    v18.receiver = v17;
    v18.super_class = ObjectType;
    objc_msgSendSuper2(&v18, sel_dealloc);
    return;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v7)
      goto LABEL_21;
    v14 = *(_QWORD *)(v3 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
}

void sub_1BDB442B8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BDB440F0();
}

uint64_t sub_1BDB442DC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1BDB44328(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v4 = sub_1BDBFE0AC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v18 - v10;
  (*(void (**)(uint64_t))((char *)v1 + qword_1EF50DAD8))(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  v13 = *(_QWORD *)((char *)v1 + qword_1EF50DAE0);
  v16 = type metadata accessor for NotificationSource.Observer.State(0, v3, v14, v15);
  v17 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(_QWORD *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v17);
  sub_1BDB43C1C((uint64_t)v11, v16);
  os_unfair_lock_unlock(v17);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
}

uint64_t sub_1BDB444BC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v2 = sub_1BDBFC4B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC48C();
  v6 = a1;
  sub_1BDB44328((uint64_t)v5);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BDB44558(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = *MEMORY[0x1E0DEEDD8];
  v2[4] = *a2;
  v2[5] = v3;
  return swift_task_switch();
}

uint64_t sub_1BDB44584()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[6] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF50DAF8
                                                                                    + dword_1EF50DAF8);
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  v4 = sub_1BDBFE0AC();
  *v3 = v0;
  v3[1] = sub_1BDB44630;
  return v6(v0[2], 0, 0, (uint64_t)sub_1BDB47378, v2, v4);
}

uint64_t sub_1BDB44630()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1BDB44684(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v5 = *(_QWORD *)((char *)a2 + qword_1EF50DAE0);
  v6 = type metadata accessor for NotificationSource.Observer.State(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x50), a3, a4);
  v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  sub_1BDB43DE4(a1, v6);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_1BDB4471C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a1;
  v6[11] = a4;
  if (a2)
  {
    swift_getObjectType();
    sub_1BDBFDADC();
  }
  return swift_task_switch();
}

uint64_t sub_1BDB44784()
{
  _QWORD *v0;
  void (*v1)(void);
  google::protobuf::io::ZeroCopyOutputStream *v2;

  v1 = (void (*)(void))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_1BDB447F8;
  v2 = (google::protobuf::io::ZeroCopyOutputStream *)swift_continuation_init();
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v2);
  v1();
  return swift_continuation_await();
}

uint64_t sub_1BDB447F8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  return (*(uint64_t (**)(void))(*v0 + 8))();
}

void sub_1BDB44838(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v4 = *(_QWORD *)((char *)a1 + qword_1EF50DAE0);
  v5 = type metadata accessor for NotificationSource.Observer.State(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x50), a3, a4);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1BDB44024(v5);
  os_unfair_lock_unlock(v6);
}

void sub_1BDB448C8()
{
  sub_1BDB472CC();
}

uint64_t sub_1BDB448E4(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1BDB18A50((unint64_t *)&qword_1ED23AB60, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v30 = a2;
  v11 = sub_1BDBFD614();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v26 = v2;
    v27 = a1;
    v28 = ~v12;
    v16 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v29 = v16;
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 16);
    while (1)
    {
      v19 = v14;
      v20 = v18;
      v18(v9, *(_QWORD *)(v14 + 48) + v17 * v13, v6);
      sub_1BDB18A50(&qword_1ED23AD28, MEMORY[0x1E0CB09D0]);
      v21 = sub_1BDBFD6BC();
      v22 = *(void (**)(char *, uint64_t))(v29 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v13 = (v13 + 1) & v28;
      v14 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v26;
        a1 = v27;
        v7 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v30, v6);
    v20(v27, *(_QWORD *)(*v26 + 48) + v17 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v30;
    v18(v9, v30, v6);
    v31 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BDB454DC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1BDB44B38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1BDBFEA0C();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  v8 = sub_1BDBFEA30();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1BDBFE874() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1BDBFE874() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BDB456D0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BDB44CE4(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BDBFE22C();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BDAF52F4();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BDBFE220();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BDB45278(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BDB4981C(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BDB4545C((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BDBFE064();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BDAF52F4();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BDBFE070();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BDBFE070();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BDB45868((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

void sub_1BDB44F60(uint64_t a1, char a2)
{
  sub_1BDBFEA0C();
  __asm { BR              X10 }
}

uint64_t sub_1BDB44FD0()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  v2 = sub_1BDBFEA30() & ~(-1 << *(_BYTE *)(v1 + 32));
  if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v5;
  *v5 = 0x8000000000000000;
  sub_1BDB459DC(v0, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v6 = (_BYTE)v0;
  return result;
}

uint64_t sub_1BDB45278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BC78);
    v2 = sub_1BDBFE2C8();
    v15 = v2;
    sub_1BDBFE1E4();
    if (sub_1BDBFE250())
    {
      sub_1BDAF52F4();
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1BDB4981C(v9 + 1);
          v2 = v15;
        }
        result = sub_1BDBFE064();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BDBFE250());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

unint64_t sub_1BDB4545C(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BDBFE064();
  result = sub_1BDBFE1CC();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1BDB454DC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1BDB491E8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1BDB45D28();
      goto LABEL_12;
    }
    sub_1BDB465C8();
  }
  v12 = *v3;
  sub_1BDB18A50((unint64_t *)&qword_1ED23AB60, MEMORY[0x1E0CB09C8]);
  v13 = sub_1BDBFD614();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1BDB18A50(&qword_1ED23AD28, MEMORY[0x1E0CB09D0]);
      v18 = sub_1BDBFD6BC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1BDBFE988();
  __break(1u);
  return result;
}

uint64_t sub_1BDB456D0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1BDB49540();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1BDB45F4C();
      goto LABEL_22;
    }
    sub_1BDB468E8();
  }
  v11 = *v4;
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  result = sub_1BDBFEA30();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1BDBFE874(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1BDBFE988();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1BDBFE874();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1BDB45868(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BDB4981C(v6 + 1);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BDB46290();
      goto LABEL_14;
    }
    sub_1BDB46B94();
  }
  v8 = *v3;
  v9 = sub_1BDBFE064();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BDAF52F4();
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1BDBFE070();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1BDBFE988();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1BDBFE070();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

void *sub_1BDB459DC(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BDB49AC0();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1BDB46E0C();
LABEL_8:
      sub_1BDBFEA0C();
      __asm { BR              X10 }
    }
    result = sub_1BDB46438();
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1BDB45CDCLL);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

void *sub_1BDB45D28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_1BDBFCB40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE80);
  v6 = *v0;
  v7 = sub_1BDBFE2B0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1BDB45F4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCB8);
  v2 = *v0;
  v3 = sub_1BDBFE2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDB460FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A638);
  v2 = *v0;
  v3 = sub_1BDBFE2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BDB46290()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BC78);
  v2 = *v0;
  v3 = sub_1BDBFE2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDB46438()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A940);
  v2 = *v0;
  v3 = sub_1BDBFE2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDB465C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_1BDBFCB40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE80);
  v7 = sub_1BDBFE2BC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_1BDB18A50((unint64_t *)&qword_1ED23AB60, MEMORY[0x1E0CB09C8]);
    result = sub_1BDBFD614();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BDB468E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCB8);
  v3 = sub_1BDBFE2BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1BDBFEA0C();
    swift_bridgeObjectRetain();
    sub_1BDBFD794();
    result = sub_1BDBFEA30();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BDB46B94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BC78);
  v3 = sub_1BDBFE2BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_1BDBFE064();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BDB46E0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A940);
  v3 = sub_1BDBFE2BC();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v13 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v13 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v13 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v13 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1BDB47130);
              }
              if (v9 >= v13)
                break;
              v8 = *(_QWORD *)(v2 + 56 + 8 * v9);
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v7);
        sub_1BDBFEA0C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_1BDB47140()
{
  return MEMORY[0x1E0DEDD18];
}

void sub_1BDB4714C()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t type metadata accessor for NotificationSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NotificationSource);
}

uint64_t type metadata accessor for NotificationSource.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NotificationSource.Iterator);
}

uint64_t sub_1BDB47174(uint64_t a1)
{
  return sub_1BD943A60(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1BDB47184(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BD943A50(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BD943A60(v5, v6);
  return a1;
}

uint64_t sub_1BDB471D4(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BD943A60(v4, v5);
  return a1;
}

uint64_t sub_1BDB47210(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_1BDB47258(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BDB4729C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BDB472B4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void sub_1BDB472CC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BDB472F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *(_QWORD **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDAC9D90;
  v5[2] = a1;
  v5[3] = v4;
  v6 = *MEMORY[0x1E0DEEDD8];
  v5[4] = *v4;
  v5[5] = v6;
  return swift_task_switch();
}

void sub_1BDB47370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BDB44838(*(_QWORD **)(v4 + 16), a2, a3, a4);
}

void sub_1BDB47378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BDB44684(a1, *(_QWORD **)(v4 + 16), a3, a4);
}

uint64_t sub_1BDB47380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50DB00);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50DB00);
  if (qword_1EF50B000 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50C060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id ICModernObjectProvider.context.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t ICModernObjectProvider.__allocating_init(context:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ICModernObjectProvider.init(context:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void ICModernObjectProvider.object(for:)(uint64_t a1)
{
  __asm { BR              X9 }
}

id sub_1BDB474AC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  id result;
  id v30;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _DWORD *v35;
  id v36;
  id v37;

  v27 = *(_QWORD *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  v37 = 0;
  v28 = objc_msgSend(a1, sel_existingObjectWithID_error_, v27, &v37);
  v36 = v37;
  if (v28)
  {
    *(_QWORD *)(v24 + 24) = sub_1BD942914(0, &qword_1EF50DB18);
    *(_QWORD *)v24 = v28;
    return v36;
  }
  else
  {
    v30 = v37;
    v31 = (void *)sub_1BDBFC87C();

    swift_willThrow();
    if (qword_1EF50B1D8 != -1)
      swift_once();
    v32 = sub_1BDBFCE34();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EF50DB00);
    swift_retain_n();
    v33 = sub_1BDBFCE1C();
    v34 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (_DWORD *)swift_slowAlloc();
      swift_slowAlloc();
      *v35 = 138412290;
      __asm { BR              X10 }
    }

    result = (id)swift_release_n();
    *(_OWORD *)v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
  }
  return result;
}

uint64_t ICModernObjectProvider.performAndWait(task:)()
{
  return sub_1BDBFDFF8();
}

uint64_t ICModernObjectProvider.performAndWait<A>(task:)()
{
  return sub_1BDBFDFF8();
}

uint64_t ICModernObjectProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ICModernObjectProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1BDB477F8(uint64_t a1)
{
  ICModernObjectProvider.object(for:)(a1);
}

uint64_t sub_1BDB4781C()
{
  return sub_1BDBFDFF8();
}

void ICObjectReferences<>.init(object:recursivelyIncludeChildren:forPagesHandoff:)(void *a1@<X0>, char a2@<W1>, char a3@<W2>, unint64_t *a4@<X8>)
{
  void *v8;
  unint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  objc_opt_self();
  v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    ICObjectReferences<>.init(account:recursivelyIncludeChildren:)(v8, a2 & 1, &v24);
    v9 = v24;
  }
  else
  {
    objc_opt_self();
    v10 = (void *)swift_dynamicCastObjCClass();
    if (v10)
    {
      ICObjectReferences<>.init(folder:recursivelyIncludeChildren:)(v10, a2 & 1, (uint64_t *)&v24);
      v9 = v24;
    }
    else
    {
      objc_opt_self();
      v11 = (void *)swift_dynamicCastObjCClass();
      if (v11)
      {
        ICObjectReferences<>.init(note:recursivelyIncludeChildren:forPagesHandoff:)(v11, a2 & 1, a3 & 1, &v24);
        v9 = v24;
      }
      else
      {
        objc_opt_self();
        v12 = (void *)swift_dynamicCastObjCClass();
        if (v12)
        {
          ICObjectReferences<>.init(attachment:recursivelyIncludeChildren:)(v12, a2 & 1, &v24);
          v9 = v24;
        }
        else
        {
          if (qword_1EF50B1D8 != -1)
            swift_once();
          v13 = sub_1BDBFCE34();
          __swift_project_value_buffer(v13, (uint64_t)qword_1EF50DB00);
          v14 = a1;
          v15 = sub_1BDBFCE1C();
          v16 = sub_1BDBFDEF0();
          if (os_log_type_enabled(v15, v16))
          {
            v17 = (uint8_t *)swift_slowAlloc();
            v18 = swift_slowAlloc();
            v24 = v18;
            *(_DWORD *)v17 = 136315138;
            v19 = objc_msgSend(v14, sel_identifier);
            if (v19)
            {
              v20 = v19;
              v21 = sub_1BDBFD6F8();
              v23 = v22;

            }
            else
            {
              v23 = 0xA300000000000000;
              v21 = 9732322;
            }
            sub_1BDAE53FC(v21, v23, (uint64_t *)&v24);
            sub_1BDBFE100();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BD918000, v15, v16, "Cannot create reference for object {identifier: %s}", v17, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3B7B478](v18, -1, -1);
            MEMORY[0x1C3B7B478](v17, -1, -1);

          }
          else
          {

          }
          v9 = 0xF000000000000007;
        }
      }
    }
  }
  *a4 = v9;
}

void ICObjectReferences<>.init(account:recursivelyIncludeChildren:)(void *a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t inited;
  unint64_t v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  if ((a2 & 1) == 0)
  {
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = objc_msgSend(a1, sel_objectID);
    v18 = objc_msgSend(a1, sel_name);
    v19 = sub_1BDBFD6F8();
    v21 = v20;

    v17[3] = v19;
    v17[4] = v21;

    v17[5] = MEMORY[0x1E0DEE9D8];
LABEL_17:
    *a3 = v17;
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC1A240;
  *(_QWORD *)(inited + 32) = objc_msgSend(a1, sel_defaultFolder);
  sub_1BDBFD9F8();
  v6 = inited;
  v7 = objc_msgSend(a1, sel_visibleSubFolders);
  sub_1BD942914(0, &qword_1EF50DB20);
  v8 = sub_1BDBFD9E0();

  v27 = v6;
  sub_1BDBC48AC(v8);
  v9 = v6;
  if (!(v6 >> 62))
  {
    v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = objc_msgSend(a1, sel_objectID);
    v22 = objc_msgSend(a1, sel_name);
    v23 = sub_1BDBFD6F8();
    v25 = v24;

    v17[3] = v23;
    v17[4] = v25;
    v17[5] = v12;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1BDBFE574();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_15;
LABEL_4:
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1BDB22A34(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    v12 = v27;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1C3B79954](v11, v9);
      else
        v13 = *(id *)(v9 + 8 * v11 + 32);
      ICObjectReferences<>.init(folder:recursivelyIncludeChildren:)(v13, 1, &v26);
      v14 = v26;
      v27 = v12;
      v16 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BDB22A34(v15 > 1, v16 + 1, 1);
        v12 = v27;
      }
      ++v11;
      *(_QWORD *)(v12 + 16) = v16 + 1;
      *(_QWORD *)(v12 + 8 * v16 + 32) = v14;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  __break(1u);
}

void ICObjectReferences<>.init(folder:recursivelyIncludeChildren:)(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;

  if ((a2 & 1) == 0)
  {
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = objc_msgSend(a1, sel_objectID);
    v14 = objc_msgSend(a1, sel_title);
    v15 = sub_1BDBFD6F8();
    v17 = v16;

    *(_QWORD *)(v13 + 24) = v15;
    *(_QWORD *)(v13 + 32) = v17;

    v18 = MEMORY[0x1E0DEE9D8];
LABEL_46:
    *(_QWORD *)(v13 + 40) = v18;
    *a3 = v13 | 0x4000000000000000;
    return;
  }
  v4 = objc_msgSend(a1, sel_visibleSubFolders);
  sub_1BD942914(0, &qword_1EF50DB20);
  v5 = sub_1BDBFD9E0();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_15;
LABEL_4:
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1BDB22A34(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_48;
  }
  v7 = 0;
  v8 = v40;
  do
  {
    if ((v5 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x1C3B79954](v7, v5);
    else
      v9 = *(id *)(v5 + 8 * v7 + 32);
    ICObjectReferences<>.init(folder:recursivelyIncludeChildren:)(&v39, v9, 1);
    v10 = v39;
    v40 = v8;
    v12 = *(_QWORD *)(v8 + 16);
    v11 = *(_QWORD *)(v8 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_1BDB22A34(v11 > 1, v12 + 1, 1);
      v8 = v40;
    }
    ++v7;
    *(_QWORD *)(v8 + 16) = v12 + 1;
    *(_QWORD *)(v8 + 8 * v12 + 32) = v10;
  }
  while (v6 != v7);
  swift_bridgeObjectRelease();
LABEL_16:
  v19 = objc_msgSend(a1, sel_visibleNotes);
  sub_1BD942914(0, &qword_1EF50DB28);
  v20 = sub_1BDBFD9E0();

  v40 = MEMORY[0x1E0DEE9D8];
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v21)
    {
LABEL_18:
      if (v21 >= 1)
      {
        for (i = 0; i != v21; ++i)
        {
          if ((v20 & 0xC000000000000001) != 0)
            v23 = (id)MEMORY[0x1C3B79954](i, v20);
          else
            v23 = *(id *)(v20 + 8 * i + 32);
          v24 = v23;
          if ((objc_msgSend(v23, sel_isEmpty) & 1) != 0)
          {

          }
          else
          {
            sub_1BDBFE448();
            sub_1BDBFE478();
            sub_1BDBFE484();
            sub_1BDBFE454();
          }
        }
        swift_bridgeObjectRelease();
        v25 = v40;
        if ((v40 & 0x8000000000000000) != 0)
          goto LABEL_44;
        goto LABEL_31;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v21)
      goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  v25 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_44;
LABEL_31:
  if ((v25 & 0x4000000000000000) == 0)
  {
    v26 = *(_QWORD *)(v25 + 16);
    swift_retain();
    if (!v26)
    {
LABEL_45:
      swift_release_n();
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = objc_msgSend(a1, sel_objectID);
      v33 = objc_msgSend(a1, sel_title);
      v34 = sub_1BDBFD6F8();
      v36 = v35;

      *(_QWORD *)(v13 + 24) = v34;
      *(_QWORD *)(v13 + 32) = v36;
      v40 = v8;
      swift_bridgeObjectRetain();
      v37 = swift_bridgeObjectRetain();
      sub_1BDBC4A74(v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v18 = v40;
      goto LABEL_46;
    }
    goto LABEL_33;
  }
LABEL_44:
  swift_retain();
  v26 = sub_1BDBFE574();
  if (!v26)
    goto LABEL_45;
LABEL_33:
  if (v26 >= 1)
  {
    v27 = 0;
    v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v25 & 0xC000000000000001) != 0)
        v29 = (id)MEMORY[0x1C3B79954](v27, v25);
      else
        v29 = *(id *)(v25 + 8 * v27 + 32);
      ICObjectReferences<>.init(note:recursivelyIncludeChildren:forPagesHandoff:)(v29, 1, 0, &v40);
      v30 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_1BDBCC5B0(0, v28[2] + 1, 1, v28);
      v32 = v28[2];
      v31 = v28[3];
      if (v32 >= v31 >> 1)
        v28 = sub_1BDBCC5B0((_QWORD *)(v31 > 1), v32 + 1, 1, v28);
      ++v27;
      v28[2] = v32 + 1;
      v28[v32 + 4] = v30;
    }
    while (v26 != v27);
    goto LABEL_45;
  }
LABEL_49:
  __break(1u);
}

void ICObjectReferences<>.init(note:recursivelyIncludeChildren:forPagesHandoff:)(id a1@<X0>, char a2@<W1>, char a3@<W2>, unint64_t *a4@<X8>)
{
  char **v4;
  char **v5;
  id v6;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char v39;
  char v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  void *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void (*v51)(unint64_t *, _QWORD);
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t *v59;
  unint64_t v60[4];
  id v61;
  char **v62;
  char v63;
  uint64_t v64;

  v6 = a1;
  if ((a2 & 1) == 0 || objc_msgSend(a1, sel_isPasswordProtected) && (a3 & 1) == 0)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = objc_msgSend(v6, sel_objectID);
    v10 = v6;
    v11 = objc_msgSend(v6, sel_title);
    if (v11)
    {
      v12 = v11;
      v13 = sub_1BDBFD6F8();
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    *(_QWORD *)(v9 + 24) = v13;
    *(_QWORD *)(v9 + 32) = v15;

    v16 = MEMORY[0x1E0DEE9D8];
LABEL_59:
    *(_QWORD *)(v9 + 40) = v16;
    *a4 = v9 | 0x8000000000000000;
    return;
  }
  v17 = objc_msgSend(v6, sel_attachments);
  if (!v17)
  {
    v34 = 0;
    goto LABEL_54;
  }
  v18 = (unint64_t)v17;
  v58 = v6;
  v59 = a4;
  sub_1BD942914(0, (unint64_t *)&qword_1EF50FED0);
  sub_1BDB4A7EC((unint64_t *)&qword_1EF50B958, (unint64_t *)&qword_1EF50FED0, (uint64_t)off_1E76C59A8, MEMORY[0x1E0DEFCF8]);
  v19 = sub_1BDBFDD10();

  if ((v19 & 0xC000000000000001) == 0)
  {
    v20 = sub_1BDB49E28(v19, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1BDB4A15C);
    v35 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0)
    {
LABEL_33:
      v36 = sub_1BDBFE220();
      if (v36)
      {
LABEL_34:
        v64 = MEMORY[0x1E0DEE9D8];
        sub_1BDB22A34(0, v36 & ~(v36 >> 63), 0);
        if (v35)
        {
          v37 = (void *)sub_1BDBFE1D8();
          v39 = 1;
        }
        else
        {
          v37 = (void *)sub_1BDB4A6E4(v20);
          v39 = v40 & 1;
        }
        v61 = v37;
        v62 = (char **)v38;
        v63 = v39;
        if (v36 < 0)
        {
          __break(1u);
        }
        else
        {
          while (1)
          {
LABEL_43:
            v5 = (char **)v61;
            v4 = v62;
            LOBYTE(v18) = v63;
            sub_1BDB4A480((uint64_t)v61, (uint64_t)v62, v63, v20, (unint64_t *)&qword_1EF50FED0);
            ICObjectReferences<>.init(attachment:recursivelyIncludeChildren:)(v46, 1, v60);
            v47 = v60[0];
            v48 = v64;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BDB22A34(0, *(_QWORD *)(v48 + 16) + 1, 1);
              v48 = v64;
            }
            v50 = *(_QWORD *)(v48 + 16);
            v49 = *(_QWORD *)(v48 + 24);
            if (v50 >= v49 >> 1)
            {
              sub_1BDB22A34(v49 > 1, v50 + 1, 1);
              v48 = v64;
            }
            *(_QWORD *)(v48 + 16) = v50 + 1;
            *(_QWORD *)(v48 + 8 * v50 + 32) = v47;
            if (!v35)
              break;
            if ((v18 & 1) == 0)
              goto LABEL_60;
            if (sub_1BDBFE1F0())
              swift_isUniquelyReferenced_nonNull_native();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DB30);
            v51 = (void (*)(unint64_t *, _QWORD))sub_1BDBFDD34();
            sub_1BDBFE274();
            v51(v60, 0);
            if (!--v36)
              goto LABEL_52;
          }
        }
        v41 = (void *)sub_1BDB4A388((int64_t)v5, (int)v4, v18, v20);
        v43 = v42;
        v45 = v44;
        sub_1BDB35B90((uint64_t)v5, (uint64_t)v4, v18);
        v61 = v41;
        v62 = (char **)v43;
        v63 = v45 & 1;
        if (--v36)
          goto LABEL_43;
LABEL_52:
        sub_1BDB35B90((uint64_t)v61, (uint64_t)v62, v63);
        swift_release();
        v34 = v64;
        goto LABEL_53;
      }
LABEL_38:
      swift_release();
      v34 = MEMORY[0x1E0DEE9D8];
LABEL_53:
      v6 = v58;
      a4 = v59;
LABEL_54:
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = objc_msgSend(v6, sel_objectID);
      v52 = v6;
      v53 = objc_msgSend(v6, sel_title);
      if (v53)
      {
        v54 = v53;
        v55 = sub_1BDBFD6F8();
        v57 = v56;

      }
      else
      {
        v55 = 0;
        v57 = 0;
      }
      *(_QWORD *)(v9 + 24) = v55;
      *(_QWORD *)(v9 + 32) = v57;

      v16 = MEMORY[0x1E0DEE9D8];
      if (v34)
        v16 = v34;
      goto LABEL_59;
    }
LABEL_37:
    v36 = *(_QWORD *)(v20 + 16);
    if (v36)
      goto LABEL_34;
    goto LABEL_38;
  }
  v20 = MEMORY[0x1E0DEE9E8];
  v60[0] = MEMORY[0x1E0DEE9E8];
  sub_1BDBFE1E4();
  v21 = sub_1BDBFE250();
  if (!v21)
  {
LABEL_32:
    swift_release();
    v35 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0)
      goto LABEL_33;
    goto LABEL_37;
  }
  v4 = &selRef_isShowFolderURL_options_;
  v5 = &selRef_numberWithInteger_;
  while (1)
  {
    v64 = v21;
    swift_dynamicCast();
    LOBYTE(v18) = (_BYTE)v61;
    if ((objc_msgSend(v61, sel_needsInitialFetchFromCloud) & 1) == 0
      && (objc_msgSend(v61, sel_markedForDeletion) & 1) == 0)
    {
      v18 = (unint64_t)objc_msgSend(v61, sel_parentAttachment);

      if (!v18)
        break;
    }

LABEL_16:
    v21 = sub_1BDBFE250();
    if (!v21)
    {
      v20 = v60[0];
      goto LABEL_32;
    }
  }
  v22 = v61;
  v18 = v60[0];
  v23 = *(_QWORD *)(v60[0] + 16);
  if (*(_QWORD *)(v60[0] + 24) <= v23)
  {
    sub_1BDB49828(v23 + 1, &qword_1EF50BCC0);
    v18 = v60[0];
  }
  v24 = sub_1BDBFE064();
  v25 = v18 + 56;
  v26 = -1 << *(_BYTE *)(v18 + 32);
  v27 = v24 & ~v26;
  v28 = v27 >> 6;
  if (((-1 << v27) & ~*(_QWORD *)(v18 + 56 + 8 * (v27 >> 6))) != 0)
  {
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v18 + 56 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v29) = v22;
    ++*(_QWORD *)(v18 + 16);
    goto LABEL_16;
  }
  v30 = 0;
  v31 = (unint64_t)(63 - v26) >> 6;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    v32 = v28 == v31;
    if (v28 == v31)
      v28 = 0;
    v30 |= v32;
    v33 = *(_QWORD *)(v25 + 8 * v28);
    if (v33 != -1)
    {
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

void ICObjectReferences<>.init(attachment:recursivelyIncludeChildren:)(void *a1@<X0>, char a2@<W1>, unint64_t *a3@<X8>)
{
  char **v3;
  int64_t v4;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char v35;
  char v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(_QWORD *, _QWORD);
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  _QWORD v55[4];
  id v56;
  char **v57;
  char v58;
  uint64_t v59;

  if ((a2 & 1) == 0)
  {
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = objc_msgSend(a1, sel_objectID);
    v25 = objc_msgSend(a1, sel_title);
    if (v25)
    {
      v26 = v25;
      v27 = sub_1BDBFD6F8();
      v29 = v28;

    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    *(_QWORD *)(v24 + 24) = v27;
    *(_QWORD *)(v24 + 32) = v29;
    *(_BYTE *)(v24 + 40) = 0;

    *(_QWORD *)(v24 + 48) = MEMORY[0x1E0DEE9D8];
    goto LABEL_57;
  }
  v7 = (char *)objc_msgSend(a1, sel_subAttachments);
  if (!v7)
  {
    v30 = 0;
LABEL_51:
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = objc_msgSend(a1, sel_objectID);
    v47 = objc_msgSend(a1, sel_title);
    if (v47)
    {
      v48 = v47;
      v49 = sub_1BDBFD6F8();
      v51 = v50;

    }
    else
    {
      v49 = 0;
      v51 = 0;
    }
    *(_QWORD *)(v24 + 24) = v49;
    *(_QWORD *)(v24 + 32) = v51;

    v52 = MEMORY[0x1E0DEE9D8];
    if (v30)
      v52 = v30;
    *(_QWORD *)(v24 + 48) = v52;
    *(_BYTE *)(v24 + 40) = 0;
LABEL_57:
    *a3 = v24 | 0xC000000000000000;
    return;
  }
  v8 = v7;
  v53 = a3;
  sub_1BD942914(0, (unint64_t *)&qword_1EF50FED0);
  sub_1BDB4A7EC((unint64_t *)&qword_1EF50B958, (unint64_t *)&qword_1EF50FED0, (uint64_t)off_1E76C59A8, MEMORY[0x1E0DEFCF8]);
  v9 = sub_1BDBFDD10();

  if ((v9 & 0xC000000000000001) == 0)
  {
    v10 = sub_1BDB49E28(v9, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1BDB49F90);
    v31 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) != 0)
    {
LABEL_30:
      v32 = sub_1BDBFE220();
      if (v32)
      {
LABEL_31:
        v59 = MEMORY[0x1E0DEE9D8];
        sub_1BDB22A34(0, v32 & ~(v32 >> 63), 0);
        if (v31)
        {
          v33 = (void *)sub_1BDBFE1D8();
          v35 = 1;
        }
        else
        {
          v33 = (void *)sub_1BDB4A6E4(v10);
          v35 = v36 & 1;
        }
        v56 = v33;
        v57 = (char **)v34;
        v58 = v35;
        if (v32 < 0)
        {
          __break(1u);
        }
        else
        {
          while (1)
          {
LABEL_40:
            v4 = (int64_t)v56;
            v3 = v57;
            LOBYTE(v8) = v58;
            sub_1BDB4A480((uint64_t)v56, (uint64_t)v57, v58, v10, (unint64_t *)&qword_1EF50FED0);
            ICObjectReferences<>.init(attachment:recursivelyIncludeChildren:)(v55);
            v42 = v55[0];
            v43 = v59;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BDB22A34(0, *(_QWORD *)(v43 + 16) + 1, 1);
              v43 = v59;
            }
            v45 = *(_QWORD *)(v43 + 16);
            v44 = *(_QWORD *)(v43 + 24);
            if (v45 >= v44 >> 1)
            {
              sub_1BDB22A34(v44 > 1, v45 + 1, 1);
              v43 = v59;
            }
            *(_QWORD *)(v43 + 16) = v45 + 1;
            *(_QWORD *)(v43 + 8 * v45 + 32) = v42;
            if (!v31)
              break;
            if ((v8 & 1) == 0)
              goto LABEL_58;
            if (sub_1BDBFE1F0())
              swift_isUniquelyReferenced_nonNull_native();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DB30);
            v46 = (void (*)(_QWORD *, _QWORD))sub_1BDBFDD34();
            sub_1BDBFE274();
            v46(v55, 0);
            if (!--v32)
              goto LABEL_49;
          }
        }
        v37 = (void *)sub_1BDB4A388(v4, (int)v3, (char)v8, v10);
        v39 = v38;
        v41 = v40;
        sub_1BDB35B90(v4, (uint64_t)v3, (char)v8);
        v56 = v37;
        v57 = (char **)v39;
        v58 = v41 & 1;
        if (--v32)
          goto LABEL_40;
LABEL_49:
        sub_1BDB35B90((uint64_t)v56, (uint64_t)v57, v58);
        swift_release();
        v30 = v59;
        goto LABEL_50;
      }
LABEL_35:
      swift_release();
      v30 = MEMORY[0x1E0DEE9D8];
LABEL_50:
      a3 = v53;
      goto LABEL_51;
    }
LABEL_34:
    v32 = *(_QWORD *)(v10 + 16);
    if (v32)
      goto LABEL_31;
    goto LABEL_35;
  }
  v10 = MEMORY[0x1E0DEE9E8];
  v55[0] = MEMORY[0x1E0DEE9E8];
  sub_1BDBFE1E4();
  v11 = sub_1BDBFE250();
  if (!v11)
  {
LABEL_29:
    swift_release();
    v31 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) != 0)
      goto LABEL_30;
    goto LABEL_34;
  }
  v3 = &selRef_isShowFolderURL_options_;
  v4 = -1;
  while (1)
  {
    v59 = v11;
    swift_dynamicCast();
    LOBYTE(v8) = (_BYTE)v56;
    if ((objc_msgSend(v56, sel_needsInitialFetchFromCloud) & 1) == 0
      && (objc_msgSend(v56, sel_markedForDeletion) & 1) == 0)
    {
      break;
    }

LABEL_7:
    v11 = sub_1BDBFE250();
    if (!v11)
    {
      v10 = v55[0];
      goto LABEL_29;
    }
  }
  v12 = v56;
  v8 = (char *)v55[0];
  v13 = *(_QWORD *)(v55[0] + 16);
  if (*(_QWORD *)(v55[0] + 24) <= v13)
  {
    sub_1BDB49828(v13 + 1, &qword_1EF50BCC0);
    v8 = (char *)v55[0];
  }
  v14 = sub_1BDBFE064();
  v15 = v8 + 56;
  v16 = -1 << v8[32];
  v17 = v14 & ~v16;
  v18 = v17 >> 6;
  if (((-1 << v17) & ~*(_QWORD *)&v8[8 * (v17 >> 6) + 56]) != 0)
  {
    v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)&v8[8 * (v17 >> 6) + 56])) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_22:
    *(_QWORD *)&v15[(v19 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v19;
    *(_QWORD *)(*((_QWORD *)v8 + 6) + 8 * v19) = v12;
    ++*((_QWORD *)v8 + 2);
    goto LABEL_7;
  }
  v20 = 0;
  v21 = (unint64_t)(63 - v16) >> 6;
  while (++v18 != v21 || (v20 & 1) == 0)
  {
    v22 = v18 == v21;
    if (v18 == v21)
      v18 = 0;
    v20 |= v22;
    v23 = *(_QWORD *)&v15[8 * v18];
    if (v23 != -1)
    {
      v19 = __clz(__rbit64(~v23)) + (v18 << 6);
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_58:
  __break(1u);
}

uint64_t ICObjectReferences<>.recursivelyAddingChildren(using:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D280);
  return sub_1BDBFDFF8();
}

void sub_1BDB48F50(void *a1@<X1>, unint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  unint64_t v9[4];
  void *v10;

  v10 = a1;
  ICModernObjectProvider.object(for:)((uint64_t)&v10);
  if (v9[3])
  {
    sub_1BD942914(0, (unint64_t *)&qword_1EF50DC10);
    if ((swift_dynamicCast() & 1) != 0)
    {
      ICObjectReferences<>.init(object:recursivelyIncludeChildren:forPagesHandoff:)(v10, 1, 0, v9);
      v4 = v9[0];
      if ((~v9[0] & 0xF000000000000007) == 0)
      {
        swift_retain();
        v4 = (unint64_t)a1;
      }
      *a2 = v4;
      return;
    }
  }
  else
  {
    sub_1BDB3B1EC((uint64_t)v9);
  }
  if (qword_1EF50B1D8 != -1)
    swift_once();
  v5 = sub_1BDBFCE34();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EF50DB00);
  swift_retain_n();
  v6 = sub_1BDBFCE1C();
  v7 = sub_1BDBFDEE4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v8 = 138412290;
    __asm { BR              X10 }
  }

  swift_release_n();
  *a2 = (unint64_t)a1;
  swift_retain();
}

uint64_t sub_1BDB491C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1BDB491E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_1BDBFCB40();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE80);
  v6 = sub_1BDBFE2BC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v0;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v36 + 72);
      v23 = *(_QWORD *)(v5 + 48) + v22 * v17;
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v23, v2);
      sub_1BDB4A894();
      result = sub_1BDBFD614();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v22, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_1BDB49540()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCB8);
  v3 = sub_1BDBFE2BC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1BDBFEA0C();
      sub_1BDBFD794();
      result = sub_1BDBFEA30();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BDB4981C(uint64_t a1)
{
  return sub_1BDB49828(a1, &qword_1EF50BC78);
}

uint64_t sub_1BDB49828(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1BDBFE2BC();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1BDBFE064();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1BDB49AC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A940);
  v3 = sub_1BDBFE2BC();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v15 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x1BDB49E18);
              }
              if (v10 >= v7)
                break;
              v9 = v15[v10];
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_1BDBFEA0C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v13 = 1 << *(_BYTE *)(v2 + 32);
  if (v13 > 63)
    bzero(v15, ((unint64_t)(v13 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v15 = -1 << v13;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_1BDB49E28(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x1C3B7B478](v9, -1, -1);
  }
  return v8;
}

void sub_1BDB49F90(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  unsigned __int8 v16;
  uint64_t v19;

  v19 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_18:
    v15 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    if (objc_msgSend(v15, sel_needsInitialFetchFromCloud))
    {

    }
    else
    {
      v16 = objc_msgSend(v15, sel_markedForDeletion);

      if ((v16 & 1) == 0)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        v12 = __OFADD__(v19++, 1);
        if (v12)
          goto LABEL_30;
      }
    }
  }
  v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v9)
    goto LABEL_27;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_17:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_18;
  }
  v14 = v4 + 1;
  if (v4 + 1 >= v9)
    goto LABEL_27;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v4 + 2;
  if (v4 + 2 >= v9)
    goto LABEL_27;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v4 + 3;
  if (v4 + 3 >= v9)
  {
LABEL_27:
    swift_retain();
    sub_1BDBD73E8(a1, a2, v19, a3);
    return;
  }
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      goto LABEL_27;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1BDB4A15C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  id v17;
  uint64_t v20;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
LABEL_4:
  v20 = v4;
  while (v9)
  {
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v12 = v11 | (v5 << 6);
LABEL_22:
    v16 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    if (!objc_msgSend(v16, sel_needsInitialFetchFromCloud)
      && (objc_msgSend(v16, sel_markedForDeletion) & 1) == 0)
    {
      v17 = objc_msgSend(v16, sel_parentAttachment);

      v16 = v17;
      if (!v17)
      {
        *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        v4 = v20 + 1;
        if (!__OFADD__(v20, 1))
          goto LABEL_4;
        __break(1u);
LABEL_28:
        swift_retain();
        sub_1BDBD73E8(a1, a2, v20, a3);
        return;
      }
    }

  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v10)
    goto LABEL_28;
  v14 = *(_QWORD *)(v6 + 8 * v13);
  ++v5;
  if (v14)
    goto LABEL_21;
  v5 = v13 + 1;
  if (v13 + 1 >= v10)
    goto LABEL_28;
  v14 = *(_QWORD *)(v6 + 8 * v5);
  if (v14)
    goto LABEL_21;
  v5 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_28;
  v14 = *(_QWORD *)(v6 + 8 * v5);
  if (v14)
  {
LABEL_21:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
    goto LABEL_22;
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    goto LABEL_28;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      goto LABEL_28;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

int64_t sub_1BDB4A388(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1BDB4A46C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1BDB4A480(a1, a2, a3, a4, (unint64_t *)&qword_1EF510130);
}

void sub_1BDB4A480(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1BDBFE208() == *(_DWORD *)(a4 + 36))
      {
        sub_1BDBFE214();
        sub_1BD942914(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1BDBFE064();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_1BDBFE070();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_1BDBFE070();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1C3B79804](a1, a2, v8);
  sub_1BD942914(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1BDB4A6E4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BDB4A76C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BDB4A7A0(unint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1BDB48F50(*(void **)(v1 + 24), a1);
}

uint64_t sub_1BDB4A7B8()
{
  return sub_1BDB4A7EC(&qword_1EF50DB38, (unint64_t *)&qword_1EF50FF20, 0x1E0C97B90, MEMORY[0x1E0CB2120]);
}

uint64_t sub_1BDB4A7EC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1BD942914(255, a2);
    result = MEMORY[0x1C3B7B388](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDB4A82C()
{
  return sub_1BDB4A7EC(&qword_1EF50D390, (unint64_t *)&qword_1EF50FF20, 0x1E0C97B90, MEMORY[0x1E0DEFCF8]);
}

uint64_t type metadata accessor for ICModernObjectProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ICModernObjectProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ICModernObjectProvider.__allocating_init(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1BDB4A894()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23AB60;
  if (!qword_1ED23AB60)
  {
    v1 = sub_1BDBFCB40();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23AB60);
  }
  return result;
}

uint64_t sub_1BDB4A8DC()
{
  return sub_1BDB491C8();
}

uint64_t withUnsafeRethrowingContinuation<A>(_:rethrow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v11;
  char *v13;

  v6[3] = a4;
  v6[4] = a5;
  v6[2] = a1;
  v13 = (char *)&dword_1EF50DC20 + dword_1EF50DC20;
  v11 = (_QWORD *)swift_task_alloc();
  v6[5] = v11;
  *v11 = v6;
  v11[1] = sub_1BDB4A988;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))v13)(a1, 0, 0, a2, a3, a6);
}

uint64_t sub_1BDB4A988()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB4A9F4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  (*(void (**)(void *))(v0 + 24))(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB4AA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_1BDBFDADC();
  }
  return swift_task_switch();
}

uint64_t sub_1BDB4AABC()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_1BDB4AB18;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_1BDB4AB18()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t withCheckedRethrowingContinuation<A>(_:rethrow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v11;
  char *v13;

  v6[3] = a4;
  v6[4] = a5;
  v6[2] = a1;
  v13 = (char *)&dword_1EF50DC30 + dword_1EF50DC30;
  v11 = (_QWORD *)swift_task_alloc();
  v6[5] = v11;
  *v11 = v6;
  v11[1] = sub_1BDB4AC1C;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))v13)(a1, 0, 0, 0xD00000000000002DLL, 0x80000001BDC38ED0, a2, a3, a6);
}

uint64_t sub_1BDB4AC1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB4AC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (__isPlatformVersionAtLeast(2, 18, 0, 0))
  {
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 24) = v17;
    *v17 = v8;
    v17[1] = sub_1BDB4C2A4;
    return sub_1BDBFE958();
  }
  else
  {
    v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF50DD10 + dword_1EF50DD10);
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 16) = v19;
    *v19 = v8;
    v19[1] = sub_1BDAE2208;
    return v20(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_1BDB4ADC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BDAC9D90;
  return _TaskGroupProtocol.waitForResults()(a1, a2, a3);
}

uint64_t _TaskGroupProtocol.waitForResults()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = swift_getAssociatedTypeWitness();
  v4[7] = swift_task_alloc();
  v4[8] = *(_QWORD *)(a2 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB4AEBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = v0[3];
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0[8] + 16))(v0[9], v0[5], v2);
  swift_getAssociatedConformanceWitness();
  sub_1BDBFDE60();
  v3 = swift_task_alloc();
  v0[10] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[11] = v4;
  *v4 = v0;
  v4[1] = sub_1BDB4AF8C;
  return sub_1BDBFDC8C();
}

uint64_t sub_1BDB4AF8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*v1 + 64);
  v2 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 24);
  v5 = *v1;
  *(_QWORD *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1BDB4B048()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB4B088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[6] = AssociatedTypeWitness;
  v4[7] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB4B100()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 16))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BDBFDE48();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB4B1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1BDAE2208;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF50DC40 + dword_1EF50DC40))(a1, a2, v7, v6);
}

uint64_t sub_1BDB4B230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BDAE2208;
  return _TaskGroupProtocol.waitForResults()(a1, a2, a3);
}

uint64_t sub_1BDB4B298()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BDB2A6A8;
  return sub_1BDBFDB24();
}

uint64_t sub_1BDB4B2FC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BDB4C2A8;
  return sub_1BDBFDB18();
}

uint64_t ThrowingTaskGroup.waitForAll(cancelOnFirstError:)(char a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v2;
  *(_BYTE *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 32) = a2[2];
  v5 = sub_1BDBFE0AC();
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  v6 = a2[3];
  *(_QWORD *)(v3 + 64) = v6;
  *(_QWORD *)(v3 + 72) = a2[4];
  v7 = sub_1BDBFDC68();
  *(_QWORD *)(v3 + 80) = v7;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  *(_QWORD *)(v3 + 104) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  *(_QWORD *)(v3 + 120) = swift_task_alloc();
  *(_QWORD *)(v3 + 128) = swift_task_alloc();
  *(_QWORD *)(v3 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB4B478()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 168) == 1)
  {
    sub_1BDBFDC2C();
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v1;
    *v1 = v0;
    v1[1] = sub_1BDB4B54C;
    return sub_1BDBFDC5C();
  }
  else
  {
    v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EF50DC58 + dword_1EF50DC58);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v3;
    *v3 = v0;
    v3[1] = sub_1BDB4B728;
    return v4(0, 0, *(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1BDB4B54C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB4B5B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 48))(v1, 1) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(v1, *(_QWORD *)(v0 + 40));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v3;
    *v3 = v0;
    v3[1] = sub_1BDB4B6C4;
    return sub_1BDBFDC5C();
  }
}

uint64_t sub_1BDB4B6C4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB4B728()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB4B7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v7(v2, v1, v6);
  v7(v3, v2, v6);
  sub_1BDBFDC74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v6);
  v8 = sub_1BDBFE844();
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 64);
  if (v8)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 64));
  }
  else
  {
    swift_allocError();
    v7(v11, v9, v10);
  }
  v12 = *(_QWORD *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 64);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB4B938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(_QWORD *)(a3 + 16);
  v6 = sub_1BDBFE0AC();
  v4[7] = v6;
  v4[8] = *(_QWORD *)(v6 - 8);
  v4[9] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    v7 = sub_1BDBFDADC();
    v9 = v8;
  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v4[10] = v7;
  v4[11] = v9;
  return swift_task_switch();
}

uint64_t sub_1BDB4B9E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v1 + 32);
  if ((sub_1BDBFDC50() & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 112) = 0;
    v4 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50DD00 + dword_1EF50DD00);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v3;
    *v3 = v0;
    v3[1] = sub_1BDB4BA90;
    return v4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1BDB4BA90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB4BAF0()
{
  uint64_t v0;
  void *v1;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 128);
  if (*(_QWORD *)(v0 + 112))
  {

    v1 = *(void **)(v0 + 112);
  }
  if ((sub_1BDBFDC50() & 1) != 0)
  {
    if (v1)
      swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 112) = v1;
    v4 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50DD00 + dword_1EF50DD00);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v3;
    *v3 = v0;
    v3[1] = sub_1BDB4BA90;
    return v4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1BDB4BBC0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 48))(v1, 1);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v1, *(_QWORD *)(v0 + 56));
  if (v2 != 1)
    goto LABEL_7;
  v3 = *(_QWORD *)(v0 + 112);
  if ((sub_1BDBFDC50() & 1) == 0)
  {
    *(_QWORD *)(v0 + 112) = v3;
LABEL_7:
    v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50DD00 + dword_1EF50DD00);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v5;
    *v5 = v0;
    v5[1] = sub_1BDB4BA90;
    return v6(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16));
  }
  if (v3)
    swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDB4BCB4()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t sub_1BDB4BCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB4BCEC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for TaskGroup<A>, MEMORY[0x1E0DF0680]);
}

uint64_t sub_1BDB4BCD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDB4BCEC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for ThrowingTaskGroup<A, B>, MEMORY[0x1E0DF09C0]);
}

uint64_t sub_1BDB4BCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1C3B7B388](a4);
  result = MEMORY[0x1C3B7B388](a5, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BDB4BD34()
{
  return MEMORY[0x1E0DEDB38];
}

uint64_t sub_1BDB4BD40()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BDAE2208;
  return sub_1BDBFDC44();
}

uint64_t sub_1BDB4BDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_1BDB4BE24;
  return sub_1BDBFDC38();
}

uint64_t sub_1BDB4BE24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 16) = v0;
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t dispatch thunk of _TaskGroupProtocol.waitForResults()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BDAC9D90;
  return v9(a1, a2, a3);
}

uint64_t sub_1BDB4BEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a1;
  v8[11] = a4;
  if (a2)
  {
    swift_getObjectType();
    sub_1BDBFDADC();
  }
  return swift_task_switch();
}

uint64_t sub_1BDB4BF68()
{
  _QWORD *v0;
  void (*v1)(char *);
  uint64_t v2;

  v1 = (void (*)(char *))v0[13];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_1BDB4C2AC;
  v2 = swift_continuation_init();
  sub_1BDB4BFE4(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_1BDB4BFE4(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED23B110);
  v3 = sub_1BDBFDB0C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - v5;
  swift_bridgeObjectRetain();
  sub_1BDBFDAE8();
  a2(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BDB4C0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  if (__isPlatformVersionAtLeast(2, 18, 0, 0))
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 24) = v5;
    *v5 = v2;
    v5[1] = sub_1BDB4C1C8;
    return sub_1BDBFDC38();
  }
  else
  {
    v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50DD08 + dword_1EF50DD08);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 16) = v7;
    *v7 = v2;
    v7[1] = sub_1BDAC9D90;
    return v8(a1, a2);
  }
}

uint64_t sub_1BDB4C1C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB4C210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v2;
  if (a2)
  {
    swift_getObjectType();
    sub_1BDBFDADC();
  }
  return swift_task_switch();
}

uint64_t sub_1BDB4C280()
{
  return swift_taskGroup_wait_next_throwing();
}

uint64_t sub_1BDB4C298()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB4C2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50DD18);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50DD18);
  if (qword_1EF50B130 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50C3A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id ICQueryResultsController.managedObjectContext.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___ICQueryResultsControllerObjC_managedObjectContext);
}

id ICQueryResultsController.query.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___ICQueryResultsControllerObjC_query);
  swift_beginAccess();
  return *v1;
}

void ICQueryResultsController.query.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___ICQueryResultsControllerObjC_query);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*ICQueryResultsController.query.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id ICQueryResultsController.fetchRequest.getter()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  objc_msgSend(v2, sel_setResultType_, 1);
  swift_beginAccess();
  swift_beginAccess();
  ICQueryType.predicate.getter();
  v4 = v3;
  objc_msgSend(v2, sel_setPredicate_, v3);

  return v2;
}

id ICQueryResultsController.__allocating_init(managedObjectContext:query:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___ICQueryResultsControllerObjC_managedObjectContext] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___ICQueryResultsControllerObjC_query] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ICQueryResultsController.init(managedObjectContext:query:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR___ICQueryResultsControllerObjC_managedObjectContext] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___ICQueryResultsControllerObjC_query] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t ICQueryResultsController.performFetch()()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  objc_msgSend(v2, sel_setResultType_, 1);
  swift_beginAccess();
  swift_beginAccess();
  ICQueryType.predicate.getter();
  v4 = v3;
  objc_msgSend(v2, sel_setPredicate_, v3);

  sub_1BD942914(0, (unint64_t *)&qword_1EF50FF20);
  v5 = sub_1BDBFE004();

  v6 = sub_1BDAF3DD0(v5);
  swift_bridgeObjectRelease();
  return v6;
}

id ICQueryResultsController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ICQueryResultsController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ICQueryResultsController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ICQueryResultsController()
{
  return objc_opt_self();
}

uint64_t method lookup function for ICQueryResultsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ICQueryResultsController.__allocating_init(managedObjectContext:query:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1BDB4CBD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50D390;
  if (!qword_1EF50D390)
  {
    v1 = sub_1BD942914(255, (unint64_t *)&qword_1EF50FF20);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, &qword_1EF50D390);
  }
  return result;
}

NotesShared::FolderID __swiftcall FolderID.init(contextType:managedIdentifier:)(NotesShared::ManagedEntityContextType_optional contextType, Swift::String managedIdentifier)
{
  uint64_t v2;
  NotesShared::FolderID result;

  *(_BYTE *)v2 = *(_BYTE *)contextType.value;
  *(Swift::String *)(v2 + 8) = managedIdentifier;
  result.managedIdentifier = managedIdentifier;
  result.contextType = contextType;
  return result;
}

uint64_t static FolderID.uriTypeName.getter()
{
  return 0x7265646C6F66;
}

void FolderID.contextType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *FolderID.contextType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void (*FolderID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FolderID.managedIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FolderID.managedIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

void (*FolderID.managedIdentifier.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FolderID.init(url:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - v12;
  v14 = (void *)objc_opt_self();
  v15 = (void *)sub_1BDBFC8D0();
  v16 = objc_msgSend(v14, sel_objectIDURIRepresentationForFolderMentionedInLegacyShowFolderURL_, v15);

  if (v16)
  {
    sub_1BDBFC90C();

    v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v6, v11, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v17(v13, v6, v7);
      v18 = sub_1BDBFC8A0();
      v20 = v19;
      v21 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v21(a1, v7);
      result = ((uint64_t (*)(char *, uint64_t))v21)(v13, v7);
      *a2 = 2;
      a2[1] = v18;
      a2[2] = v20;
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  result = sub_1BDACDBAC((uint64_t)v6);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  return result;
}

uint64_t FolderID.hash(into:)()
{
  _BYTE *v0;

  if (*v0 == 2)
  {
    sub_1BDBFEA24();
  }
  else
  {
    sub_1BDBFEA24();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t FolderID.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1BDBFEA0C();
  sub_1BDBFEA24();
  if (v1 != 2)
  {
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

void sub_1BDB4D050(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1BDB4D05C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

_BYTE *sub_1BDB4D088@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_BYTE *)a4 = *result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_1BDB4D09C()
{
  return 0x7265646C6F66;
}

uint64_t sub_1BDB4D0B0()
{
  unsigned __int8 *v0;

  return sub_1BDBAB2C4(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2));
}

uint64_t sub_1BDB4D0BC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAC1E8C(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2), (uint64_t)v3);
  v4 = sub_1BDBFC948();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BDACDBAC((uint64_t)v3);
    return 0;
  }
  else
  {
    v6 = sub_1BDBFC8A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

uint64_t sub_1BDB4D1A0()
{
  _BYTE *v0;

  if (*v0 == 2)
  {
    sub_1BDBFEA24();
  }
  else
  {
    sub_1BDBFEA24();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB4D250()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1BDBFEA0C();
  sub_1BDBFEA24();
  if (v1 != 2)
  {
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t _s11NotesShared8FolderIDV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  if (v2 == 2)
  {
    if (v5 == 2)
      goto LABEL_25;
    return 0;
  }
  if (v5 == 2)
    return 0;
  if ((v2 & 1) != 0)
    v9 = 1819112552;
  else
    v9 = 0x6E7265646F6DLL;
  if ((v2 & 1) != 0)
    v10 = 0xE400000000000000;
  else
    v10 = 0xE600000000000000;
  if ((v5 & 1) != 0)
    v11 = 1819112552;
  else
    v11 = 0x6E7265646F6DLL;
  if ((v5 & 1) != 0)
    v12 = 0xE400000000000000;
  else
    v12 = 0xE600000000000000;
  if (v9 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v14 & 1) == 0)
      return result;
  }
LABEL_25:
  if (v3 == v6 && v4 == v7)
    return 1;
  else
    return sub_1BDBFE874();
}

unint64_t sub_1BDB4D42C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BDB4D458();
  result = sub_1BDB4D49C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BDB4D458()
{
  unint64_t result;

  result = qword_1EF50DD70;
  if (!qword_1EF50DD70)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FolderID, &type metadata for FolderID);
    atomic_store(result, (unint64_t *)&qword_1EF50DD70);
  }
  return result;
}

unint64_t sub_1BDB4D49C()
{
  unint64_t result;

  result = qword_1EF50DD78;
  if (!qword_1EF50DD78)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FolderID, &type metadata for FolderID);
    atomic_store(result, (unint64_t *)&qword_1EF50DD78);
  }
  return result;
}

unint64_t sub_1BDB4D4E0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BDB4D514();
  a1[2] = sub_1BDB4D558();
  result = sub_1BDB4D59C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BDB4D514()
{
  unint64_t result;

  result = qword_1EF50DD80;
  if (!qword_1EF50DD80)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FolderID, &type metadata for FolderID);
    atomic_store(result, (unint64_t *)&qword_1EF50DD80);
  }
  return result;
}

unint64_t sub_1BDB4D558()
{
  unint64_t result;

  result = qword_1EF50DD88;
  if (!qword_1EF50DD88)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FolderID, &type metadata for FolderID);
    atomic_store(result, (unint64_t *)&qword_1EF50DD88);
  }
  return result;
}

unint64_t sub_1BDB4D59C()
{
  unint64_t result;

  result = qword_1EF50DD90;
  if (!qword_1EF50DD90)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FolderID, &type metadata for FolderID);
    atomic_store(result, (unint64_t *)&qword_1EF50DD90);
  }
  return result;
}

unint64_t sub_1BDB4D5E4()
{
  unint64_t result;

  result = qword_1ED23A288;
  if (!qword_1ED23A288)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FolderID, &type metadata for FolderID);
    atomic_store(result, (unint64_t *)&qword_1ED23A288);
  }
  return result;
}

uint64_t destroy for ActivityEventObject()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s11NotesShared19ActivityEventObjectVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityEventObject(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ActivityEventObject(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEventObject(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityEventObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FolderID()
{
  return &type metadata for FolderID;
}

uint64_t NotesServiceAPIAsyncClient.__allocating_init(codeService:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t NotesServiceAPI.PingOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1BDB4D838(a1, &qword_1EF50DD98);
}

uint64_t NotesServiceAPI.PingOperation.init(request:)(uint64_t a1)
{
  return sub_1BDB4D90C(a1, &qword_1EF50DD98);
}

void NotesServiceAPI.PingOperation.__allocating_init(functionName:request:)()
{
  sub_1BDB4DAC0();
}

void NotesServiceAPI.PingOperation.init(functionName:request:)()
{
  sub_1BDB4DAC0();
}

uint64_t NotesServiceAPI.SendMentionNotificationV2Operation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1BDB4D838(a1, &qword_1EF50DDA0);
}

uint64_t sub_1BDB4D838(uint64_t a1, uint64_t *a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(v2);
  sub_1BDB157E4(a1, (uint64_t)v7, a2);
  v9 = sub_1BDBFCC3C();
  sub_1BDAC350C(a1, a2);
  return v9;
}

uint64_t NotesServiceAPI.SendMentionNotificationV2Operation.init(request:)(uint64_t a1)
{
  return sub_1BDB4D90C(a1, &qword_1EF50DDA0);
}

uint64_t sub_1BDB4D90C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v4);
  sub_1BDB157E4(a1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  v6 = sub_1BDBFCC3C();
  sub_1BDAC350C(a1, a2);
  return v6;
}

void NotesServiceAPI.SendMentionNotificationV2Operation.__allocating_init(functionName:request:)()
{
  sub_1BDB4DAC0();
}

void NotesServiceAPI.SendMentionNotificationV2Operation.init(functionName:request:)()
{
  sub_1BDB4DAC0();
}

uint64_t NotesServiceAPI.DidCompleteInstallOrUpdateOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1BDB4D838(a1, &qword_1ED23A268);
}

uint64_t NotesServiceAPI.DidCompleteInstallOrUpdateOperation.init(request:)(uint64_t a1)
{
  return sub_1BDB4D90C(a1, &qword_1ED23A268);
}

void NotesServiceAPI.DidCompleteInstallOrUpdateOperation.__allocating_init(functionName:request:)()
{
  sub_1BDB4DAC0();
}

void NotesServiceAPI.DidCompleteInstallOrUpdateOperation.init(functionName:request:)()
{
  sub_1BDB4DAC0();
}

uint64_t NotesServiceAPI.RunGarbageCollectorOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1BDB4D838(a1, &qword_1EF50DDA8);
}

uint64_t NotesServiceAPI.RunGarbageCollectorOperation.init(request:)(uint64_t a1)
{
  return sub_1BDB4D90C(a1, &qword_1EF50DDA8);
}

void NotesServiceAPI.RunGarbageCollectorOperation.__allocating_init(functionName:request:)()
{
  sub_1BDB4DAC0();
}

void sub_1BDB4DAC0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void NotesServiceAPI.RunGarbageCollectorOperation.init(functionName:request:)()
{
  sub_1BDB4DAC0();
}

uint64_t NotesServiceAPIAsync.ping(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = type metadata accessor for PingRequest(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s11NotesShared11PingRequestVACycfC_0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(v10, a1, a2, a3, a4);
  return sub_1BDAE1658((uint64_t)v10, type metadata accessor for PingRequest);
}

uint64_t NotesServiceAPIAsync.sendMentionNotificationV2(recipientUserID:senderName:noteTitle:mentionSnippet:shareRecordName:shareOwnerUserID:noteRecordName:inlineAttachmentRecordName:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t (*v26)(uint64_t);
  _OWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v31 = a8;
  v30 = a7;
  v29 = a6;
  v33 = a14;
  v32 = a15;
  v34 = a16;
  v28[2] = a11;
  v28[1] = a10;
  v28[0] = a9;
  v22 = type metadata accessor for MentionNotificationRequestV2(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1;
  v36 = a2;
  v37 = a3;
  v38 = a4;
  v39 = a5;
  v40 = v29;
  v41 = v30;
  v42 = v31;
  v43 = a9;
  v44 = a10;
  v45 = a11;
  v46 = a12;
  v47 = a13;
  v26 = v25;
  sub_1BDAC31B0(&qword_1EF50DDB0, v25, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
  sub_1BDBFCD80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a17 + 16))(v24, v33, v32, v34, a17);
  return sub_1BDAE1658((uint64_t)v24, v26);
}

uint64_t sub_1BDB4DD60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  _QWORD *v22;

  v22 = (_QWORD *)result;
  if (a3)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *v22 = a2;
    v22[1] = a3;
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v22[2] = a4;
    v22[3] = a5;
  }
  if (a7)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v22[4] = a6;
    v22[5] = a7;
  }
  if (a9)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v22[6] = a8;
    v22[7] = a9;
  }
  if (a11)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v22[8] = a10;
    v22[9] = a11;
  }
  if (a13)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v22[10] = a12;
    v22[11] = a13;
  }
  if (a15)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v22[12] = a14;
    v22[13] = a15;
  }
  if (a17)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v22[14] = a16;
    v22[15] = a17;
  }
  return result;
}

uint64_t NotesServiceAPIAsync.didCompleteInstallOrUpdate(previousBuildNumber:previousVersion:currentBuildNumber:currentVersion:platformName:continuationToken:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t updated;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t (*v24)(uint64_t);
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v28 = a7;
  v29 = a8;
  v27 = a6;
  v30 = a13;
  v31 = a12;
  v32 = a14;
  v26 = a9;
  updated = type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  MEMORY[0x1E0C80A78](updated);
  v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  v34 = a2;
  v35 = a3;
  v36 = a4;
  v37 = a5;
  v38 = v27;
  v39 = v28;
  v40 = v29;
  v41 = a9;
  v42 = a10;
  v43 = a11;
  v24 = v23;
  sub_1BDAC31B0(&qword_1ED23A248, v23, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
  sub_1BDBFCD80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a15 + 24))(v22, v31, v30, v32, a15);
  return sub_1BDAE1658((uint64_t)v22, v24);
}

uint64_t sub_1BDB4E018(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  _QWORD *v18;
  uint64_t v21;
  unint64_t v22;

  v18 = (_QWORD *)result;
  if (a3)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *v18 = a2;
    v18[1] = a3;
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v18[2] = a4;
    v18[3] = a5;
  }
  if (a7)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v18[4] = a6;
    v18[5] = a7;
  }
  if (a9)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v18[6] = a8;
    v18[7] = a9;
  }
  if (a11)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v18[8] = a10;
    v18[9] = a11;
  }
  if (a13 >> 60 != 15)
  {
    v21 = v18[10];
    v22 = v18[11];
    sub_1BDB4EB54(a12, a13);
    result = sub_1BDAEB7EC(v21, v22);
    v18[10] = a12;
    v18[11] = a13;
  }
  return result;
}

uint64_t NotesServiceAPIAsync.runGarbageCollector(continuationToken:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;

  v12 = type metadata accessor for RunGarbageCollectorRequest(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = a1;
  v18 = a2;
  sub_1BDAC31B0(&qword_1EF50DDB8, type metadata accessor for RunGarbageCollectorRequest, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
  sub_1BDBFCD80();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 32))(v14, a3, a4, a5, a6);
  return sub_1BDAE1658((uint64_t)v14, type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t *sub_1BDB4E24C(uint64_t *result, uint64_t a2, unint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  if (a3 >> 60 != 15)
  {
    v5 = result;
    v6 = *result;
    v7 = result[1];
    sub_1BDB4EB54(a2, a3);
    result = (uint64_t *)sub_1BDAEB7EC(v6, v7);
    *v5 = a2;
    v5[1] = a3;
  }
  return result;
}

uint64_t NotesServiceAPIAsyncClient.init(codeService:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1BDB4E2C0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BDB4DD60(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17]);
}

uint64_t sub_1BDB4E30C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB4E018(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t *sub_1BDB4E34C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BDB4E24C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BDB4E364(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DD98);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  sub_1BDAE1544(a1, (uint64_t)&v12 - v6, type metadata accessor for PingRequest);
  v8 = type metadata accessor for PingRequest(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  v9 = objc_allocWithZone((Class)type metadata accessor for NotesServiceAPI.PingOperation(0));
  sub_1BDB157E4((uint64_t)v7, (uint64_t)v5, &qword_1EF50DD98);
  v10 = (void *)sub_1BDBFCC3C();
  sub_1BDAC350C((uint64_t)v7, &qword_1EF50DD98);
  v11 = v10;
  swift_retain();
  sub_1BDBFCC30();

  sub_1BDBFDEA8();
}

uint64_t type metadata accessor for NotesServiceAPI.PingOperation(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1EF50DDC0);
}

void sub_1BDB4E4C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DDA0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  sub_1BDAE1544(a1, (uint64_t)&v12 - v6, type metadata accessor for MentionNotificationRequestV2);
  v8 = type metadata accessor for MentionNotificationRequestV2(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  v9 = objc_allocWithZone((Class)type metadata accessor for NotesServiceAPI.SendMentionNotificationV2Operation(0));
  sub_1BDB157E4((uint64_t)v7, (uint64_t)v5, &qword_1EF50DDA0);
  v10 = (void *)sub_1BDBFCC3C();
  sub_1BDAC350C((uint64_t)v7, &qword_1EF50DDA0);
  v11 = v10;
  swift_retain();
  sub_1BDBFCC30();

  sub_1BDBFDEA8();
}

uint64_t type metadata accessor for NotesServiceAPI.SendMentionNotificationV2Operation(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1EF50DE10);
}

void sub_1BDB4E630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t updated;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A268);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  sub_1BDAE1544(a1, (uint64_t)&v12 - v6, type metadata accessor for DidCompleteInstallOrUpdateRequest);
  updated = type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(v7, 0, 1, updated);
  v9 = objc_allocWithZone((Class)type metadata accessor for NotesServiceAPI.DidCompleteInstallOrUpdateOperation(0));
  sub_1BDB157E4((uint64_t)v7, (uint64_t)v5, &qword_1ED23A268);
  v10 = (void *)sub_1BDBFCC3C();
  sub_1BDAC350C((uint64_t)v7, &qword_1ED23A268);
  v11 = v10;
  swift_retain();
  sub_1BDBFCC30();

  sub_1BDBFDEA8();
}

uint64_t type metadata accessor for NotesServiceAPI.DidCompleteInstallOrUpdateOperation(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1ED23A238);
}

void sub_1BDB4E79C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DDA8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  sub_1BDAE1544(a1, (uint64_t)&v12 - v6, type metadata accessor for RunGarbageCollectorRequest);
  v8 = type metadata accessor for RunGarbageCollectorRequest(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  v9 = objc_allocWithZone((Class)type metadata accessor for NotesServiceAPI.RunGarbageCollectorOperation(0));
  sub_1BDB157E4((uint64_t)v7, (uint64_t)v5, &qword_1EF50DDA8);
  v10 = (void *)sub_1BDBFCC3C();
  sub_1BDAC350C((uint64_t)v7, &qword_1EF50DDA8);
  v11 = v10;
  swift_retain();
  sub_1BDBFCC30();

  sub_1BDBFDEA8();
}

uint64_t type metadata accessor for NotesServiceAPI.RunGarbageCollectorOperation(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1EF50DE78);
}

uint64_t NotesServiceAPIAsyncClient.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t NotesServiceAPIAsyncClient.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1BDB4E948(uint64_t a1)
{
  sub_1BDB4E364(a1);
}

void sub_1BDB4E968(uint64_t a1)
{
  sub_1BDB4E4C4(a1);
}

void sub_1BDB4E988(uint64_t a1)
{
  sub_1BDB4E630(a1);
}

void sub_1BDB4E9A8(uint64_t a1)
{
  sub_1BDB4E79C(a1);
}

ValueMetadata *type metadata accessor for NotesServiceAPI()
{
  return &type metadata for NotesServiceAPI;
}

uint64_t sub_1BDB4E9D8()
{
  return sub_1BDB4EA74();
}

uint64_t method lookup function for NotesServiceAPI.PingOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotesServiceAPI.PingOperation.__allocating_init(request:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for NotesServiceAPI.PingOperation))();
}

uint64_t sub_1BDB4EA00()
{
  return type metadata accessor for NotesServiceAPI.PingOperation(0);
}

uint64_t sub_1BDB4EA08()
{
  return sub_1BDB4EA74();
}

uint64_t method lookup function for NotesServiceAPI.SendMentionNotificationV2Operation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotesServiceAPI.SendMentionNotificationV2Operation.__allocating_init(request:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for NotesServiceAPI.SendMentionNotificationV2Operation))();
}

uint64_t sub_1BDB4EA30()
{
  return type metadata accessor for NotesServiceAPI.SendMentionNotificationV2Operation(0);
}

uint64_t sub_1BDB4EA38()
{
  return sub_1BDB4EA74();
}

uint64_t method lookup function for NotesServiceAPI.DidCompleteInstallOrUpdateOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotesServiceAPI.DidCompleteInstallOrUpdateOperation.__allocating_init(request:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for NotesServiceAPI.DidCompleteInstallOrUpdateOperation))();
}

uint64_t sub_1BDB4EA60()
{
  return type metadata accessor for NotesServiceAPI.DidCompleteInstallOrUpdateOperation(0);
}

uint64_t sub_1BDB4EA68()
{
  return sub_1BDB4EA74();
}

uint64_t sub_1BDB4EA74()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for NotesServiceAPI.RunGarbageCollectorOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotesServiceAPI.RunGarbageCollectorOperation.__allocating_init(request:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for NotesServiceAPI.RunGarbageCollectorOperation))();
}

uint64_t sub_1BDB4EAC8()
{
  return type metadata accessor for NotesServiceAPI.RunGarbageCollectorOperation(0);
}

uint64_t dispatch thunk of NotesServiceAPIAsync.ping(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of NotesServiceAPIAsync.sendMentionNotificationV2(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of NotesServiceAPIAsync.didCompleteInstallOrUpdate(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of NotesServiceAPIAsync.runGarbageCollector(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t type metadata accessor for NotesServiceAPIAsyncClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for NotesServiceAPIAsyncClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.__allocating_init(codeService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.ping(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.sendMentionNotificationV2(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.didCompleteInstallOrUpdate(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.runGarbageCollector(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_1BDB4EB54(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

id sub_1BDB4EB98()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR___ICDeviceManagementRestrictionsManager____lazy_storage___connection;
  v2 = *(void **)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager____lazy_storage___connection);
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_1BDB4F424(v4);
  }
  sub_1BDB4F434(v2);
  return v3;
}

id sub_1BDB4EC90()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)ICDeviceManagementRestrictionsManager), sel_init);
  result = objc_msgSend(v0, sel_registerObserver);
  qword_1ED23B070 = (uint64_t)v0;
  return result;
}

void __swiftcall ICDeviceManagementRestrictionsManager.init()(ICDeviceManagementRestrictionsManager *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id static ICDeviceManagementRestrictionsManager.shared.getter()
{
  if (qword_1ED23AEE8 != -1)
    swift_once();
  return (id)qword_1ED23B070;
}

Swift::Void __swiftcall ICDeviceManagementRestrictionsManager.registerObserver()()
{
  void *v0;
  id v1;
  void *v2;

  v1 = sub_1BDB4EB98();
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_registerObserver_, v0);

  }
  objc_msgSend(v0, sel_updateRestrictions);
}

Swift::Void __swiftcall ICDeviceManagementRestrictionsManager.updateRestrictions()()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v1 = sub_1BDB4EB98();
  if (v1)
  {
    v2 = v1;
    v3 = (uint64_t)objc_msgSend(v1, sel_isMathPaperSolvingAllowed);

  }
  else
  {
    v3 = 1;
  }
  objc_msgSend(v0, sel_setIsMathPaperSolvingAllowed_, v3);
  v4 = sub_1BDB4EB98();
  if (v4)
  {
    v5 = v4;
    v6 = (uint64_t)objc_msgSend(v4, sel_isKeyboardMathSolvingAllowed);

  }
  else
  {
    v6 = 1;
  }
  objc_msgSend(v0, sel_setIsKeyboardMathSolvingAllowed_, v6);
}

uint64_t ICDeviceManagementRestrictionsManager.isMathPaperSolvingAllowed.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
  swift_beginAccess();
  return *v1;
}

uint64_t ICDeviceManagementRestrictionsManager.isKeyboardMathSolvingAllowed.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
  swift_beginAccess();
  return *v1;
}

void sub_1BDB4F020(char *a1, uint64_t a2, char a3, _QWORD *a4, const char *a5)
{
  char *v9;
  char v10;
  char *v11;

  v9 = &a1[*a4];
  swift_beginAccess();
  v10 = *v9;
  *v9 = a3;
  v11 = a1;
  sub_1BDB4F0A0(v10, a4, a5);

}

void sub_1BDB4F0A0(char a1, _QWORD *a2, const char *a3)
{
  char *v3;
  int v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v5 = a1 & 1;
  v6 = &v3[*a2];
  swift_beginAccess();
  if (*v6 != v5)
  {
    if (qword_1ED23AB70 != -1)
      swift_once();
    v7 = sub_1BDBFCE34();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED23ADE0);
    v8 = v3;
    v9 = sub_1BDBFCE1C();
    v10 = sub_1BDBFDED8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v11 = 67109120;
      sub_1BDBFE100();

      _os_log_impl(&dword_1BD918000, v9, v10, a3, v11, 8u);
      MEMORY[0x1C3B7B478](v11, -1, -1);
    }
    else
    {

      v9 = v8;
    }

  }
}

id ICDeviceManagementRestrictionsManager.init()()
{
  uint64_t v0;
  objc_super v2;

  *(_QWORD *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager____lazy_storage___connection) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed) = 1;
  v2.super_class = (Class)ICDeviceManagementRestrictionsManager;
  return objc_msgSendSuper2(&v2, sel_init);
}

id ICDeviceManagementRestrictionsManager.profileConnectionDidReceiveEffectiveSettingsChangedNotification(_:userInfo:)()
{
  void *v0;

  return objc_msgSend(v0, sel_updateRestrictions);
}

char *keypath_get_selector_isMathPaperSolvingAllowed()
{
  return sel_isMathPaperSolvingAllowed;
}

id sub_1BDB4F2CC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isMathPaperSolvingAllowed);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1BDB4F2FC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsMathPaperSolvingAllowed_, *a1);
}

char *keypath_get_selector_isKeyboardMathSolvingAllowed()
{
  return sel_isKeyboardMathSolvingAllowed;
}

id sub_1BDB4F31C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isKeyboardMathSolvingAllowed);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1BDB4F34C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsKeyboardMathSolvingAllowed_, *a1);
}

unint64_t type metadata accessor for ICDeviceManagementRestrictionsManager()
{
  unint64_t result;

  result = qword_1EF50DEE8;
  if (!qword_1EF50DEE8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50DEE8);
  }
  return result;
}

void sub_1BDB4F424(id a1)
{
  if (a1 != (id)1)

}

id sub_1BDB4F434(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void String.height(_:_:)(void *a1, double a2)
{
  void *v4;
  uint64_t inited;
  void *v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  CGRect v18;

  v4 = (void *)sub_1BDBFD6C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DF50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  v6 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = sub_1BDB4F578();
  *(_QWORD *)(inited + 40) = a1;
  v7 = v6;
  v8 = a1;
  sub_1BDB0B148(inited);
  type metadata accessor for Key(0);
  sub_1BDB4F5B4();
  v9 = (void *)sub_1BDBFD5B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_boundingRectWithSize_options_attributes_context_, 3, v9, 0, a2, 1.79769313e308);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18.origin.x = v11;
  v18.origin.y = v13;
  v18.size.width = v15;
  v18.size.height = v17;
  CGRectGetHeight(v18);
}

unint64_t sub_1BDB4F578()
{
  unint64_t result;

  result = qword_1EF50DF58;
  if (!qword_1EF50DF58)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50DF58);
  }
  return result;
}

unint64_t sub_1BDB4F5B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50B3D8;
  if (!qword_1EF50B3D8)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1C3B7B388](&unk_1BDC1721C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF50B3D8);
  }
  return result;
}

uint64_t sub_1BDB4F600(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

Swift::Bool __swiftcall UnkeyedDecodingContainer.skip(count:)(Swift::Int count)
{
  Swift::Int v1;
  BOOL v2;
  uint64_t v3;

  if (count < 1)
  {
LABEL_11:
    __break(1u);
  }
  else
  {
    v1 = count;
    if ((sub_1BDBFE79C() & 1) != 0)
    {
      v2 = 0;
    }
    else
    {
      sub_1BDB4F73C();
      LOBYTE(count) = sub_1BDBFE790();
      v2 = v1 == 1;
      v3 = 1;
      while (!v2)
      {
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_11;
        }
        if ((sub_1BDBFE79C() & 1) != 0)
          break;
        v2 = v3 + 1 == v1;
        LOBYTE(count) = sub_1BDBFE790();
        ++v3;
      }
    }
    LOBYTE(count) = v2;
  }
  return count;
}

unint64_t sub_1BDB4F73C()
{
  unint64_t result;

  result = qword_1EF50DF60;
  if (!qword_1EF50DF60)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for _IgnoredDecodable, &type metadata for _IgnoredDecodable);
    atomic_store(result, (unint64_t *)&qword_1EF50DF60);
  }
  return result;
}

ValueMetadata *type metadata accessor for _IgnoredDecodable()
{
  return &type metadata for _IgnoredDecodable;
}

uint64_t sub_1BDB4F790(uint64_t a1)
{
  char v2;
  void *v4;
  _BYTE v5[24];
  uint64_t v6;

  swift_getObjectType();
  sub_1BDADED1C(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1BDB3B1EC((uint64_t)v5);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v2 = 0;
    return v2 & 1;
  }
  v2 = sub_1BDBFD6BC();

  return v2 & 1;
}

uint64_t sub_1BDB4F874(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  char v6;
  _OWORD v8[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    v5 = a1;
  }
  v6 = sub_1BDB4F790((uint64_t)v8);

  sub_1BDB3B1EC((uint64_t)v8);
  return v6 & 1;
}

void sub_1BDB4F8E8()
{
  sub_1BDB4FEE4();
}

uint64_t sub_1BDB4F90C(_OWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BD942258(a1, (_OWORD *)(v2 + 16));
  return v2;
}

uint64_t sub_1BDB4F94C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocClassInstance();
}

void Cache.__allocating_init(name:)()
{
  swift_allocObject();
  Cache.init(name:)();
}

uint64_t sub_1BDB4F9A8()
{
  uint64_t v0;

  return v0;
}

void sub_1BDB4F9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a4 + a3 - 24);
  v7 = sub_1BDBFE0AC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - v10;
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v14 - v13, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  Cache.subscript.setter((uint64_t)v11);
}

void Cache.subscript.modify(_QWORD *a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *v1;
  v5 = sub_1BDBFE0AC();
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  v8 = *(_QWORD *)(v4 + 80);
  v3[5] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v3[7] = malloc(v10);
  v3[8] = malloc(v10);
  (*(void (**)(void))(v9 + 16))();
  Cache.subscript.getter();
}

void (*sub_1BDB4FB50())(uint64_t a1, char a2)
{
  return sub_1BDB4FB74;
}

void sub_1BDB4FB74(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v5 = v2[5];
    v6 = v2[6];
    v7 = v2[3];
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v2[2] + 16))(v7, v2[4], v2[1]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v4, v5);
    Cache.subscript.setter(v7);
  }
  Cache.subscript.setter(v2[4]);
}

void Cache.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x1E0C80A78](a1);
  v1 = sub_1BDBFE0AC();
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  Cache.subscript.getter();
}

uint64_t sub_1BDB4FD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v2) == 1)
  {
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
    v10 = *(_QWORD *)(v7 - 88);
    (*(void (**)(uint64_t))(v7 - 112))(v9);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(v0, *(_QWORD *)(v7 - 96), *(_QWORD *)(v7 - 104));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v10, v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v2);
    Cache.subscript.setter(v6);
  }
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v8 + 32))(*(_QWORD *)(v7 - 88), v5, v2);
}

uint64_t Cache.name.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  v2 = sub_1BDBFD6F8();

  return v2;
}

Swift::Void __swiftcall Cache.removeAll()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_removeAllObjects);
}

uint64_t Cache.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Cache.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1BDB4FE88()
{
  Cache.subscript.getter();
}

uint64_t sub_1BDB4FEB0()
{
  return 24;
}

__n128 sub_1BDB4FEBC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for Cache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Cache.__allocating_init(name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1BDB4FEE4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void *v25;
  void *v26;
  uint64_t v28;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v28 - v16;
  v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v19 = v18;
  if (a1)
  {
    v20 = (void *)sub_1BDBFDD04();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v18, sel_setAllowedUserIDs_, v20);

  if (a2)
  {
    v21 = (void *)sub_1BDBFDD04();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v18, sel_setAllowedAttachmentIDs_, v21);

  objc_msgSend(v18, sel_setAllowsMissingTimestamps_, a3 & 1);
  objc_msgSend(v18, sel_setAllowsMissingUsers_, a4 & 1);
  sub_1BDACDF20(a5, (uint64_t)v17);
  v22 = sub_1BDBFCAC8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = 0;
  if (v24(v17, 1, v22) != 1)
  {
    v25 = (void *)sub_1BDBFCA74();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v22);
  }
  objc_msgSend(v18, sel_setFromDate_, v25);

  sub_1BDACDF20(a6, (uint64_t)v15);
  if (v24(v15, 1, v22) == 1)
  {
    v26 = 0;
  }
  else
  {
    v26 = (void *)sub_1BDBFCA74();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v22);
  }
  objc_msgSend(v18, sel_setToDate_, v26);

  sub_1BDACDF68(a6);
  sub_1BDACDF68(a5);
  return v18;
}

_QWORD *sub_1BDB5017C(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1BDBFE574())
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B79954](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_identifier);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1BDBFD6F8();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1BDBCBCC4(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1BDBCBCC4((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BDB50310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  _QWORD v19[4];
  uint64_t v20;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v20 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    ObjectType = swift_getObjectType();
    v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a3 + 64);
    v9 = (uint64_t *)(a1 + 56);
    do
    {
      v10 = *(v9 - 1);
      v11 = *v9;
      v12 = *(v9 - 2);
      v19[0] = *(v9 - 3);
      v19[1] = v12;
      v19[2] = v10;
      v19[3] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = a3;
      v14 = v8(v19, ObjectType, a3);
      swift_bridgeObjectRelease();
      v15 = swift_bridgeObjectRelease();
      if (v14)
      {
        MEMORY[0x1C3B78F88](v15);
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BDBFDA1C();
        sub_1BDBFDA64();
        sub_1BDBFD9F8();
      }
      v9 += 4;
      --v7;
      a3 = v13;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v16 = v20;
  }
  else
  {
    swift_unknownObjectRetain();
    v16 = MEMORY[0x1E0DEE9D8];
  }
  swift_unknownObjectRelease();
  swift_release();
  return v16;
}

void __swiftcall ICTTTextEditFilter.init(mentions:)(ICTTTextEditFilter *__return_ptr retstr, Swift::OpaquePointer mentions)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v15[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v15[-v7];
  v9 = sub_1BDB516CC((unint64_t)mentions._rawValue, (SEL *)&selRef_isMentionAttachment);
  swift_bridgeObjectRelease();
  v10 = sub_1BDB516CC(v9, (SEL *)&selRef_isVisible);
  swift_bridgeObjectRelease();
  v11 = sub_1BDB5017C(v10);
  swift_bridgeObjectRelease();
  v12 = sub_1BDAF3D3C((uint64_t)v11);
  swift_bridgeObjectRelease();
  v13 = sub_1BDBFCAC8();
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v8, 1, 1, v13);
  v14(v6, 1, 1, v13);
  ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(0, v12, 1, 1, (uint64_t)v8, (uint64_t)v6);
}

id ICTTTextEditFilter.init(editEvent:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t inited;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_1BDBFC480();
  v26 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v24 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v24 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  v15 = type metadata accessor for NoteEditActivityEvent(0);
  v16 = (_QWORD *)(a1 + *(int *)(v15 + 24));
  v17 = v16[1];
  *(_QWORD *)(inited + 32) = *v16;
  *(_QWORD *)(inited + 40) = v17;
  swift_bridgeObjectRetain();
  v25 = sub_1BDAED408(inited);
  swift_setDeallocating();
  v18 = 1;
  swift_arrayDestroy();
  if (!*(_BYTE *)(a1 + *(int *)(v15 + 28)) || *(_BYTE *)(a1 + *(int *)(v15 + 28)) == 1)
    v18 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  NoteEditActivityEvent.timeInterval.getter((uint64_t)v7);
  sub_1BDBFC474();
  v19 = *(void (**)(char *, uint64_t))(v26 + 8);
  v19(v7, v2);
  v20 = sub_1BDBFCAC8();
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v13, 0, 1, v20);
  NoteEditActivityEvent.timeInterval.getter((uint64_t)v5);
  sub_1BDBFC450();
  v19(v5, v2);
  v21(v11, 0, 1, v20);
  v22 = ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(v25, 0, v18 & 1, 0, (uint64_t)v13, (uint64_t)v11);
  sub_1BDAE1658(a1, type metadata accessor for NoteEditActivityEvent);
  return v22;
}

void ICTTTextEditFilter.init(persistedEvent:resolver:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PersistedActivityEvent();
  sub_1BDAE1544(a1 + *(int *)(v7 + 28), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  v8 = (char *)sub_1BDB50994 + 4 * byte_1BDC1BAF0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB50994()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1BDAE1658(v0, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1BDB50A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  sub_1BDAE1658(v0, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
  v2 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  JUMPOUT(0x1BDB50A3CLL);
}

void sub_1BDB50A9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = *v1;
  swift_unknownObjectRetain();
  v7 = sub_1BDB50310(v6, v2, v5);
  swift_bridgeObjectRelease();
  v8 = sub_1BDB516CC(v7, (SEL *)&selRef_isMentionAttachment);
  swift_bridgeObjectRelease();
  v9 = sub_1BDB516CC(v8, (SEL *)&selRef_isVisible);
  swift_bridgeObjectRelease();
  v10 = sub_1BDB5017C(v9);
  swift_bridgeObjectRelease();
  v11 = sub_1BDAF3D3C((uint64_t)v10);
  swift_bridgeObjectRelease();
  v12 = sub_1BDBFCAC8();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v4, 1, 1, v12);
  v13(v3, 1, 1, v12);
  ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(0, v11, 1, 1, v4, v3);
  swift_unknownObjectRelease();
  sub_1BDAE1658(v0, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
  JUMPOUT(0x1BDB50A40);
}

void sub_1BDB50BA0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1BDAE1658(v0, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
  JUMPOUT(0x1BDB50A3CLL);
}

uint64_t ICTTTextEditFilter.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  v10 = type metadata accessor for ICTTTextEditFilter.Model();
  v11 = a2 + *(int *)(v10 + 32);
  v12 = sub_1BDBFCAC8();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v14 = a2 + *(int *)(v10 + 36);
  v13(v14, 1, 1, v12);
  v15 = objc_msgSend(a1, sel_allowedUserIDs);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1BDBFDD10();

  }
  else
  {
    v17 = 0;
  }
  *(_QWORD *)a2 = v17;
  v18 = objc_msgSend(a1, sel_allowedAttachmentIDs);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1BDBFDD10();

  }
  else
  {
    v20 = 0;
  }
  *(_QWORD *)(a2 + 8) = v20;
  *(_BYTE *)(a2 + 16) = objc_msgSend(a1, sel_allowsMissingTimestamps);
  *(_BYTE *)(a2 + 17) = objc_msgSend(a1, sel_allowsMissingUsers);
  v21 = objc_msgSend(a1, sel_fromDate);
  if (v21)
  {
    v22 = v21;
    sub_1BDBFCAA4();

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  v24 = 1;
  v13((uint64_t)v9, v23, 1, v12);
  sub_1BDB5186C((uint64_t)v9, v11);
  v25 = objc_msgSend(a1, sel_toDate);
  if (v25)
  {
    v26 = v25;
    sub_1BDBFCAA4();

    v24 = 0;
  }

  v13((uint64_t)v7, v24, 1, v12);
  return sub_1BDB5186C((uint64_t)v7, v14);
}

id ICTTTextEditFilter.Model.filter.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - v5;
  sub_1BDB518B4();
  v7 = *(_QWORD *)(v0 + 8);
  v8 = *(_BYTE *)(v0 + 16);
  v9 = *(_BYTE *)(v0 + 17);
  v10 = type metadata accessor for ICTTTextEditFilter.Model();
  sub_1BDACDF20(v0 + *(int *)(v10 + 32), (uint64_t)v6);
  sub_1BDACDF20(v0 + *(int *)(v10 + 36), (uint64_t)v4);
  swift_bridgeObjectRetain();
  v11 = swift_bridgeObjectRetain();
  return ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(v11, v7, v8, v9, (uint64_t)v6, (uint64_t)v4);
}

uint64_t sub_1BDB50F10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDB50F50 + 4 * byte_1BDC1BAF9[a1]))(0x556465776F6C6C61, 0xEE00734449726573);
}

unint64_t sub_1BDB50F50()
{
  return 0xD000000000000014;
}

unint64_t sub_1BDB50F8C()
{
  return 0xD000000000000012;
}

uint64_t sub_1BDB50FA8()
{
  return 0x657461446D6F7266;
}

uint64_t sub_1BDB50FC0()
{
  return 0x657461446F74;
}

uint64_t sub_1BDB50FD4()
{
  unsigned __int8 *v0;

  return sub_1BDB50F10(*v0);
}

uint64_t sub_1BDB50FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDB525F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDB51000()
{
  sub_1BDB518F0();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB51028()
{
  sub_1BDB518F0();
  return sub_1BDBFEB50();
}

uint64_t ICTTTextEditFilter.Model.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DF68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB518F0();
  sub_1BDBFEACC();
  v12 = *v3;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DF78);
  sub_1BDB51934(&qword_1EF50DF80, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  sub_1BDBFE6DC();
  if (!v2)
  {
    v12 = v3[1];
    v11 = 1;
    sub_1BDBFE6DC();
    LOBYTE(v12) = 2;
    sub_1BDBFE6F4();
    LOBYTE(v12) = 3;
    sub_1BDBFE6F4();
    type metadata accessor for ICTTTextEditFilter.Model();
    LOBYTE(v12) = 4;
    sub_1BDBFCAC8();
    sub_1BDB51994(&qword_1EF50BE98, MEMORY[0x1E0CB0890]);
    sub_1BDBFE6DC();
    LOBYTE(v12) = 5;
    sub_1BDBFE6DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ICTTTextEditFilter.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v32 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v30 - v6;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DF88);
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ICTTTextEditFilter.Model();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v14[*(int *)(v12 + 32)];
  v16 = sub_1BDBFCAC8();
  v17 = *(void (**)(void))(*(_QWORD *)(v16 - 8) + 56);
  v36 = (uint64_t)v15;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v15, 1, 1, v16);
  v35 = &v14[*(int *)(v11 + 36)];
  v17();
  v18 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1BDB518F0();
  v19 = v37;
  sub_1BDBFEAB4();
  if (v19)
  {
    v20 = v36;
    v21 = (uint64_t)v35;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDACDF68(v20);
    return sub_1BDACDF68(v21);
  }
  else
  {
    v37 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50DF78);
    v38 = 0;
    sub_1BDB51934(&qword_1EF50DF90, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1BDBFE628();
    *(_QWORD *)v14 = v39;
    v38 = 1;
    sub_1BDBFE628();
    *((_QWORD *)v14 + 1) = v39;
    LOBYTE(v39) = 2;
    v22 = sub_1BDBFE64C();
    v23 = v36;
    v14[16] = v22 & 1;
    LOBYTE(v39) = 3;
    v14[17] = sub_1BDBFE64C() & 1;
    LOBYTE(v39) = 4;
    v24 = sub_1BDB51994(&qword_1EF50BEC0, MEMORY[0x1E0CB08C0]);
    v25 = (uint64_t)v37;
    v30[1] = v24;
    sub_1BDBFE628();
    sub_1BDB5186C(v25, v23);
    LOBYTE(v39) = 5;
    v26 = (uint64_t)v32;
    v27 = v33;
    sub_1BDBFE628();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
    v28 = (uint64_t)v34;
    sub_1BDB5186C(v26, (uint64_t)v35);
    sub_1BDAE1544((uint64_t)v14, v31, (uint64_t (*)(_QWORD))type metadata accessor for ICTTTextEditFilter.Model);
    __swift_destroy_boxed_opaque_existential_0Tm(v28);
    return sub_1BDAE1658((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ICTTTextEditFilter.Model);
  }
}

uint64_t sub_1BDB516A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ICTTTextEditFilter.Model.init(from:)(a1, a2);
}

uint64_t sub_1BDB516B8(_QWORD *a1)
{
  return ICTTTextEditFilter.Model.encode(to:)(a1);
}

uint64_t sub_1BDB516CC(unint64_t a1, SEL *a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v10 = v4;
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x1C3B79954](v5, a1);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        if (objc_msgSend(v6, *a2))
        {
          sub_1BDBFE448();
          sub_1BDBFE478();
          sub_1BDBFE484();
          sub_1BDBFE454();
          v4 = v10;
        }
        else
        {

        }
        ++v5;
        if (v8 == v4)
          return v11;
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v4 = sub_1BDBFE574();
      if (!v4)
        return MEMORY[0x1E0DEE9D8];
    }
    v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for ICTTTextEditFilter.Model()
{
  uint64_t result;

  result = qword_1EF50DFF0;
  if (!qword_1EF50DFF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BDB5186C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDB518B4()
{
  unint64_t result;

  result = qword_1EF50B850;
  if (!qword_1EF50B850)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50B850);
  }
  return result;
}

unint64_t sub_1BDB518F0()
{
  unint64_t result;

  result = qword_1EF50DF70;
  if (!qword_1EF50DF70)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1BC64, &_s5ModelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50DF70);
  }
  return result;
}

uint64_t sub_1BDB51934(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50DF78);
    v8 = a2;
    result = MEMORY[0x1C3B7B388](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDB51994(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BDBFCAC8();
    result = MEMORY[0x1C3B7B388](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s5ModelVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = *(int *)(a3 + 32);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_1BDBFCAC8();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 36);
    v16 = (void *)(v7 + v15);
    v17 = (char *)a2 + v15;
    if (v13(v17, 1, v11))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t _s5ModelVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1BDBFCAC8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 36);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

uint64_t _s5ModelVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = *(int *)(a3 + 32);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BDBFCAC8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 36);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t _s5ModelVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BDBFCAC8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 36);
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t _s5ModelVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BDBFCAC8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 36);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t _s5ModelVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BDBFCAC8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 36);
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t _s5ModelVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB522C0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v9);
  }
}

uint64_t _s5ModelVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BDB52358(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

void sub_1BDB523D0()
{
  unint64_t v0;

  sub_1BD943D00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s5ModelV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BDB5249C + 4 * byte_1BDC1BB04[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BDB524D0 + 4 * byte_1BDC1BAFF[v4]))();
}

uint64_t sub_1BDB524D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB524D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB524E0);
  return result;
}

uint64_t sub_1BDB524EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB524F4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BDB524F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB52500(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5ModelV10CodingKeysOMa()
{
  return &_s5ModelV10CodingKeysON;
}

unint64_t sub_1BDB52520()
{
  unint64_t result;

  result = qword_1EF50E038;
  if (!qword_1EF50E038)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1BC3C, &_s5ModelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E038);
  }
  return result;
}

unint64_t sub_1BDB52568()
{
  unint64_t result;

  result = qword_1EF50E040;
  if (!qword_1EF50E040)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1BBAC, &_s5ModelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E040);
  }
  return result;
}

unint64_t sub_1BDB525B0()
{
  unint64_t result;

  result = qword_1EF50E048;
  if (!qword_1EF50E048)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1BBD4, &_s5ModelV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E048);
  }
  return result;
}

uint64_t sub_1BDB525F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x556465776F6C6C61 && a2 == 0xEE00734449726573;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BDC39430 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BDC39450 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BDC39470 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657461446D6F7266 && a2 == 0xE800000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657461446F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BDB52878()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDB5289C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE00657361436C65;
  v3 = 0x6D61437265776F6CLL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6D61437265707075;
    else
      v5 = 0x736143626162656BLL;
    if (v4 == 1)
      v6 = 0xEE00657361436C65;
    else
      v6 = 0xE900000000000065;
    v7 = a2;
    if (!a2)
      goto LABEL_14;
  }
  else
  {
    v5 = 0x6D61437265776F6CLL;
    v6 = 0xEE00657361436C65;
    v7 = a2;
    if (!a2)
      goto LABEL_14;
  }
  if (v7 == 1)
    v3 = 0x6D61437265707075;
  else
    v3 = 0x736143626162656BLL;
  if (v7 != 1)
    v2 = 0xE900000000000065;
LABEL_14:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BDB529C4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1819112552;
  else
    v3 = 0x6E7265646F6DLL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1819112552;
  else
    v5 = 0x6E7265646F6DLL;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BDB52A5C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 7103859;
  else
    v2 = 6580594;
  if ((a2 & 1) != 0)
    v3 = 7103859;
  else
    v3 = 6580594;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1BDBFE874();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1BDB52AC8(char a1, char a2)
{
  char v2;

  if (qword_1BDC1BFF0[a1] == qword_1BDC1BFF0[a2])
    v2 = 1;
  else
    v2 = sub_1BDBFE874();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1BDB52B2C(char a1, char a2)
{
  char v2;

  if (qword_1BDC1C008[a1] == qword_1BDC1C008[a2])
    v2 = 1;
  else
    v2 = sub_1BDBFE874();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1BDB52B90(char a1, char a2)
{
  char v2;

  if (qword_1BDC1C028[a1] == qword_1BDC1C028[a2])
    v2 = 1;
  else
    v2 = sub_1BDBFE874();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1BDB52BF4(char a1, char a2)
{
  char v2;

  if (qword_1BDC1C048[a1] == qword_1BDC1C048[a2])
    v2 = 1;
  else
    v2 = sub_1BDBFE874();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

void sub_1BDB52C58(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BDB52CA8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BDB52D40 + 4 * byte_1BDC1BCC6[a2]))(0x64616F6C6E776F64);
}

uint64_t sub_1BDB52D40(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64616F6C6E776F64 && v1 == 0xEB00000000676E69)
    v2 = 1;
  else
    v2 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BDB52E28(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1702129518;
  else
    v3 = 0x7265646C6F66;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1702129518;
  else
    v5 = 0x7265646C6F66;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1BDB52EC0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BDB52F08(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BDB52FDC + 4 * byte_1BDC1BCD5[a2]))(1702260589);
}

uint64_t sub_1BDB52FDC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1702260589 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BDB53118(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x746E65636572;
    else
      v3 = 0x726568746FLL;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x746E65636572;
      else
        v6 = 0x726568746FLL;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x746C7561666564;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x746C7561666564)
  {
LABEL_21:
    v8 = sub_1BDBFE874();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1BDB53220(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BDB5326C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BDB532D8 + 4 * byte_1BDC1BCE2[a2]))(0x6C61636F6CLL);
}

uint64_t sub_1BDB532D8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61636F6CLL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BDB5338C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xE900000000000044;
  v3 = 0x455454414D524F46;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x4E49414C50;
    else
      v5 = 1313821514;
    if (v4 == 1)
      v6 = 0xE500000000000000;
    else
      v6 = 0xE400000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x455454414D524F46;
  v6 = 0xE900000000000044;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x4E49414C50;
    else
      v3 = 1313821514;
    if (v7 == 1)
      v2 = 0xE500000000000000;
    else
      v2 = 0xE400000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t static ActivityEventObject.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)a1 == 0;
  if (*(_BYTE *)a1)
    v7 = 1702129518;
  else
    v7 = 0x7265646C6F66;
  if (v6)
    v8 = 0xE600000000000000;
  else
    v8 = 0xE400000000000000;
  if (*(_BYTE *)a2)
    v9 = 1702129518;
  else
    v9 = 0x7265646C6F66;
  if (*(_BYTE *)a2)
    v10 = 0xE400000000000000;
  else
    v10 = 0xE600000000000000;
  if (v7 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n();
    if (v2 != v4)
      return sub_1BDBFE874();
  }
  else
  {
    v12 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
    if (v2 != v4)
      return sub_1BDBFE874();
  }
  if (v3 != v5)
    return sub_1BDBFE874();
  return 1;
}

NotesShared::ActivityEventObject_optional __swiftcall ActivityEventObject.init(cloudSyncingObject:)(ICCloudSyncingObject *cloudSyncingObject)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NotesShared::ActivityEventObject::Types v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  ICCloudSyncingObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  const char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  NotesShared::ActivityEventObject_optional result;

  v3 = v1;
  v4 = sub_1BDBFCB40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (!v8)
  {
    objc_opt_self();
    if (!swift_dynamicCastObjCClass())
    {
      if (qword_1EF50B1F0 != -1)
        swift_once();
      v26 = sub_1BDBFCE34();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EF50E050);
      v19 = cloudSyncingObject;
      v20 = sub_1BDBFCE1C();
      v21 = sub_1BDBFDED8();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v22 = 138412290;
        v27 = -[ICCloudSyncingObject objectID](v19, sel_objectID);
        v29 = v27;
        sub_1BDBFE100();
        *v23 = v27;

        v25 = "Object type is not supported — returning nil {objectID: %@}";
        goto LABEL_17;
      }
LABEL_18:

      goto LABEL_19;
    }
  }
  v9 = -[ICCloudSyncingObject identifier](cloudSyncingObject, sel_identifier);
  if (!v9)
  {
LABEL_9:
    if (qword_1EF50B1F0 != -1)
      swift_once();
    v18 = sub_1BDBFCE34();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EF50E050);
    v19 = cloudSyncingObject;
    v20 = sub_1BDBFCE1C();
    v21 = sub_1BDBFDED8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v24 = -[ICCloudSyncingObject objectID](v19, sel_objectID);
      v29 = v24;
      sub_1BDBFE100();
      *v23 = v24;

      v25 = "Object must have an identifier — returning nil {objectID: %@}";
LABEL_17:
      _os_log_impl(&dword_1BD918000, v20, v21, v25, v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v23, -1, -1);
      MEMORY[0x1C3B7B478](v22, -1, -1);

LABEL_19:
      *v3 = 0;
      v3[1] = 0;
      v3[2] = 0;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  v10 = v9;
  v11 = sub_1BDBFD6F8();
  v13 = v12;

  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = v11 & 0xFFFFFFFFFFFFLL;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  v15 = swift_bridgeObjectRelease();
  *v3 = v8 == 0;
  v3[1] = v11;
  v3[2] = v13;
LABEL_20:
  result.value.recordName._object = v17;
  result.value.recordName._countAndFlagsBits = v16;
  result.value.type = v15;
  return result;
}

uint64_t sub_1BDB53928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50E050);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50E050);
  if (qword_1ED23B0E8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23AEF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

NotesShared::ActivityEventObject::Types_optional __swiftcall ActivityEventObject.Types.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NotesShared::ActivityEventObject::Types_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BDBFE5D4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ActivityEventObject.Types.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1702129518;
  else
    return 0x7265646C6F66;
}

uint64_t sub_1BDB53A48(char *a1, char *a2)
{
  return sub_1BDB52E28(*a1, *a2);
}

uint64_t sub_1BDB53A54()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB53AC8()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB53B18()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

NotesShared::ActivityEventObject::Types_optional sub_1BDB53B88(Swift::String *a1)
{
  return ActivityEventObject.Types.init(rawValue:)(*a1);
}

void sub_1BDB53B94(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1702129518;
  if (!*v1)
    v2 = 0x7265646C6F66;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BDB53BC8()
{
  sub_1BDB54968();
  return sub_1BDBFD998();
}

uint64_t sub_1BDB53C24()
{
  sub_1BDB54968();
  return sub_1BDBFD950();
}

void ActivityEventObject.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ActivityEventObject.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void (*ActivityEventObject.type.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ActivityEventObject.recordName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityEventObject.recordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

void (*ActivityEventObject.recordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

NotesShared::ActivityEventObject __swiftcall ActivityEventObject.init(type:recordName:)(NotesShared::ActivityEventObject::Types type, Swift::String recordName)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  NotesShared::ActivityEventObject::Types v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NotesShared::ActivityEventObject result;

  object = recordName._object;
  countAndFlagsBits = recordName._countAndFlagsBits;
  v5 = (char *)type;
  v6 = v2;
  v7 = sub_1BDBFCB40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v5;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = swift_bridgeObjectRelease();
  *(_BYTE *)v6 = v11;
  *(_QWORD *)(v6 + 8) = countAndFlagsBits;
  *(_QWORD *)(v6 + 16) = object;
  result.recordName._object = v14;
  result.recordName._countAndFlagsBits = v13;
  result.type = v12;
  return result;
}

uint64_t ActivityEventObject.hash(into:)()
{
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB53E3C()
{
  _BYTE *v0;

  if (*v0)
    return 0x614E64726F636572;
  else
    return 1701869940;
}

uint64_t sub_1BDB53E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDB5487C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDB53E98()
{
  sub_1BDB54558();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB53EC0()
{
  sub_1BDB54558();
  return sub_1BDBFEB50();
}

uint64_t ActivityEventObject.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E068);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v11[0] = *((_QWORD *)v1 + 2);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB54558();
  sub_1BDBFEACC();
  v14 = v8;
  v13 = 0;
  sub_1BDB5459C();
  sub_1BDBFE718();
  if (!v2)
  {
    v12 = 1;
    sub_1BDBFE6E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ActivityEventObject.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t ActivityEventObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  char v21;
  unsigned __int8 v22;

  v18 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E080);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB54558();
  sub_1BDBFEAB4();
  if (!v2)
  {
    v12 = v18;
    v21 = 0;
    sub_1BDB545E0();
    sub_1BDBFE670();
    v19 = v22;
    v20 = 1;
    v14 = sub_1BDBFE640();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v14;
    *(_QWORD *)(v12 + 16) = v16;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB542A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityEventObject.init(from:)(a1, a2);
}

uint64_t sub_1BDB542BC(_QWORD *a1)
{
  return ActivityEventObject.encode(to:)(a1);
}

uint64_t sub_1BDB542D0()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB54360()
{
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFD794();
}

uint64_t sub_1BDB543D0()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB5445C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_1BDB52E28(*(_BYTE *)a1, *(_BYTE *)a2) & 1) == 0)
    return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  else
    return sub_1BDBFE874();
}

NotesShared::ActivityEventObject::Types_optional __swiftcall ActivityEventObject.Types.init(cloudSyncingObject:)(ICCloudSyncingObject *cloudSyncingObject)
{
  char *v1;
  char *v3;
  NotesShared::ActivityEventObject::Types_optional result;
  char v5;
  uint64_t v6;

  v3 = v1;
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {

    v5 = 0;
  }
  else
  {
    objc_opt_self();
    v6 = swift_dynamicCastObjCClass();

    if (v6)
      v5 = 1;
    else
      v5 = 2;
  }
  *v3 = v5;
  return result;
}

unint64_t sub_1BDB54558()
{
  unint64_t result;

  result = qword_1EF50E070;
  if (!qword_1EF50E070)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1BF98, &type metadata for ActivityEventObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E070);
  }
  return result;
}

unint64_t sub_1BDB5459C()
{
  unint64_t result;

  result = qword_1EF50E078;
  if (!qword_1EF50E078)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventObject.Types, &type metadata for ActivityEventObject.Types);
    atomic_store(result, (unint64_t *)&qword_1EF50E078);
  }
  return result;
}

unint64_t sub_1BDB545E0()
{
  unint64_t result;

  result = qword_1EF50E088;
  if (!qword_1EF50E088)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventObject.Types, &type metadata for ActivityEventObject.Types);
    atomic_store(result, (unint64_t *)&qword_1EF50E088);
  }
  return result;
}

unint64_t sub_1BDB54628()
{
  unint64_t result;

  result = qword_1EF50E090;
  if (!qword_1EF50E090)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventObject.Types, &type metadata for ActivityEventObject.Types);
    atomic_store(result, (unint64_t *)&qword_1EF50E090);
  }
  return result;
}

unint64_t sub_1BDB54670()
{
  unint64_t result;

  result = qword_1ED23AA20;
  if (!qword_1ED23AA20)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventObject, &type metadata for ActivityEventObject);
    atomic_store(result, (unint64_t *)&qword_1ED23AA20);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventObject()
{
  return &type metadata for ActivityEventObject;
}

ValueMetadata *type metadata accessor for ActivityEventObject.Types()
{
  return &type metadata for ActivityEventObject.Types;
}

uint64_t _s11NotesShared19ActivityEventObjectV5TypesOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDB54724 + 4 * byte_1BDC1BCEB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDB54758 + 4 * byte_1BDC1BCE6[v4]))();
}

uint64_t sub_1BDB54758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB54760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB54768);
  return result;
}

uint64_t sub_1BDB54774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB5477CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDB54780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB54788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventObject.CodingKeys()
{
  return &type metadata for ActivityEventObject.CodingKeys;
}

unint64_t sub_1BDB547A8()
{
  unint64_t result;

  result = qword_1EF50E098;
  if (!qword_1EF50E098)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1BF70, &type metadata for ActivityEventObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E098);
  }
  return result;
}

unint64_t sub_1BDB547F0()
{
  unint64_t result;

  result = qword_1EF50E0A0;
  if (!qword_1EF50E0A0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1BEE0, &type metadata for ActivityEventObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E0A0);
  }
  return result;
}

unint64_t sub_1BDB54838()
{
  unint64_t result;

  result = qword_1EF50E0A8;
  if (!qword_1EF50E0A8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1BF08, &type metadata for ActivityEventObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E0A8);
  }
  return result;
}

uint64_t sub_1BDB5487C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E64726F636572 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BDB54968()
{
  unint64_t result;

  result = qword_1EF50E0B0;
  if (!qword_1EF50E0B0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventObject.Types, &type metadata for ActivityEventObject.Types);
    atomic_store(result, (unint64_t *)&qword_1EF50E0B0);
  }
  return result;
}

uint64_t RetryingLazy.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  result = type metadata accessor for RetryingLazy(0, a3, v8, v9);
  v11 = (_QWORD *)(a4 + *(int *)(result + 28));
  *v11 = a1;
  v11[1] = a2;
  return result;
}

uint64_t type metadata accessor for RetryingLazy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RetryingLazy);
}

uint64_t RetryingLazy.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = sub_1BDBFE0AC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14((char *)&v18 - v12, v3, v7);
  v15 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v6) == 1)
  {
    v16 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    (*(void (**)(uint64_t))(v3 + *(int *)(a1 + 28)))(v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v3, v11, v7);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(a2, v3, v7);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v13, v6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v6);
  }
}

uint64_t sub_1BDB54B6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFE0AC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BDB54BE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if ((v7 & 0x1000F8) != 0 || ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v11 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    v12 = v11[1];
    v13 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v13 = *v11;
    v13[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1BDB54CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return swift_release();
}

char *sub_1BDB54D5C(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = (unint64_t)&a1[v11];
  v13 = (uint64_t *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v13;
  v14 = v13[1];
  v16 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
  *v16 = v15;
  v16[1] = v14;
  swift_retain();
  return a1;
}

void *sub_1BDB54E24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1BDB54F40(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  *(_OWORD *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v10 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1BDB55004(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  *(_OWORD *)(((unint64_t)a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v11 + 7) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BDB55118(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v13;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (!a2)
    return 0;
  if (v7 < a2)
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    __asm { BR              X16 }
  }
  if (v6 < 0x7FFFFFFF)
  {
    v14 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    if (v14 >= 0xFFFFFFFF)
      LODWORD(v14) = -1;
    return (v14 + 1);
  }
  else
  {
    v13 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v13 >= 2)
      return v13 - 1;
    else
      return 0;
  }
}

void sub_1BDB55250(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (v10 < a3)
  {
    v12 = a3 - v10;
    if ((((_DWORD)v11 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v13 = v12 + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v6 = v14;
    else
      v6 = 0;
  }
  if (a2 > v10)
  {
    if ((((_DWORD)v11 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v15 = ~v10 + a2;
      bzero(a1, ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1BDB55348@<X0>(unsigned int a1@<W1>, size_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t result;

  v12[v13] = 0;
  if (a1)
  {
    if (v10 < 0x7FFFFFFF)
    {
      v15 = (_QWORD *)((unint64_t)&v12[a2 + 7] & 0xFFFFFFFFFFFFFFF8);
      if ((a1 & 0x80000000) != 0)
      {
        *v15 = a1 ^ 0x80000000;
        v15[1] = 0;
      }
      else
      {
        *v15 = a1 - 1;
      }
    }
    else if (v10 >= a1)
    {
      return (*(uint64_t (**)(_BYTE *, _QWORD))(v11 + 56))(v12, a1 + 1);
    }
    else if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v14 = a2;
      else
        v14 = 4;
      bzero(v12, a2);
      __asm { BR              X10 }
    }
  }
  return result;
}

void sub_1BDB55444()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1BDB55454()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1BDB5545C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void AccountID.Authority.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;

  if (objc_msgSend(a1, sel_isLocalAccount))
  {
    swift_unknownObjectRelease();
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v6 = objc_msgSend(a1, sel_emailAddress);
    if (v6)
    {
      v7 = v6;
      v4 = sub_1BDBFD6F8();
      v5 = v8;
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
      v4 = 0;
      v5 = 0xE000000000000000;
    }
  }
  *a2 = v4;
  a2[1] = v5;
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  if (objc_msgSend(a1, sel_isLocalAccount))
  {

    v4 = 0;
    v5 = 0;
  }
  else
  {
    v6 = objc_msgSend(a1, sel_userRecordName);
    v4 = sub_1BDBFD6F8();
    v5 = v7;

  }
  *a2 = v4;
  a2[1] = v5;
}

__n128 AccountID.init(authority:contextType:)@<Q0>(__n128 *a1@<X0>, unsigned __int8 *a2@<X1>, __n128 *a3@<X8>)
{
  unsigned __int8 v3;
  __n128 result;

  v3 = *a2;
  result = *a1;
  *a3 = *a1;
  a3[1].n128_u8[0] = v3;
  return result;
}

uint64_t AccountID.Authority.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  if (objc_msgSend(a1, sel_isLocalAccount))
  {
    result = swift_unknownObjectRelease();
    v5 = 0;
    v6 = 0;
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_emailAddressForAccount_, a1);
    v5 = sub_1BDBFD6F8();
    v6 = v8;

    result = swift_unknownObjectRelease();
  }
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t static AccountID.uriTypeName.getter()
{
  return 0x746E756F636361;
}

uint64_t AccountID.authority.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AccountID.authority.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

void (*AccountID.authority.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void AccountID.contextType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *AccountID.contextType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

void (*AccountID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AccountID.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_1BDBFEA18();
    swift_bridgeObjectRetain();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BDBFEA18();
  }
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t AccountID.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB557B8()
{
  return 0x746E756F636361;
}

uint64_t sub_1BDB557D4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_1BDBFEA18();
    swift_bridgeObjectRetain();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BDBFEA18();
  }
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB55884()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t AccountID.description.getter()
{
  return AccountID.entityIdentifierString.getter();
}

uint64_t AccountID.entityIdentifierString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 8))
  {
    v3 = sub_1BDBFD6F8();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
  }
  else
  {
    sub_1BDBFE304();
    v1 = sub_1BDBFD6F8();
    swift_bridgeObjectRelease();
    v3 = v1;
    sub_1BDBFD7DC();
    sub_1BDBFD6F8();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1BDB55B68()
{
  return AccountID.entityIdentifierString.getter();
}

unint64_t AccountID.debugDescription.getter()
{
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD74C();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD74C();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t static AccountID.entityIdentifier(for:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  char v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t *, _QWORD);
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  void (*v99)(char *, unint64_t, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  void (*v105)(uint64_t *, _QWORD);
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *);
  void (*v117)(char *, uint64_t, uint64_t);
  void (*v118)(char *, uint64_t);
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v145 = a1;
  v130 = sub_1BDBFC444();
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v128 = (char *)&v115 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_1BDBFC4E0();
  v132 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v131 = (char *)&v115 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E0B8);
  MEMORY[0x1E0C80A78](v3);
  v124 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BDBFD0E0();
  v134 = *(void (**)(char *, uint64_t))(v5 - 8);
  v135 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v126 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v133 = (char *)&v115 - v8;
  v138 = sub_1BDBFD080();
  v9 = *(_QWORD *)(v138 - 8);
  v10 = MEMORY[0x1E0C80A78](v138);
  v137 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v136 = (char *)&v115 - v12;
  v140 = sub_1BDBFD08C();
  v13 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v139 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v141 = (uint64_t)&v115 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BDBFD0F8();
  v143 = *(_QWORD *)(v23 - 8);
  v144 = v23;
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v142 = (char *)&v115 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B150);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BDBFC5B8();
  v32 = MEMORY[0x1E0C80A78](v31);
  v127 = (char *)&v115 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v115 - v34;
  v37 = v36;
  v39 = v38;
  sub_1BDBFC594();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v30, 1, v37) == 1)
  {
    result = sub_1BDAC350C((uint64_t)v30, &qword_1ED23B150);
LABEL_10:
    v43 = 0;
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v30, v37);
  sub_1BDBFC57C();
  v41 = v39;
  v43 = v42;
  v44 = v35;
  if (!v42)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v35, v37);
LABEL_11:
    v59 = 0;
    v60 = 1;
LABEL_12:
    v61 = v145;
    *v145 = v43;
    v61[1] = v60;
    *((_BYTE *)v61 + 16) = v59;
    return result;
  }
  v122 = v41;
  v123 = v37;
  v45 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v46 = ICIsNotesURLScheme(v45);

  if ((v46 & 1) == 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v44, v123);
    goto LABEL_10;
  }
  v121 = v44;
  sub_1BDBFC534();
  v47 = v142;
  sub_1BDBFD104();
  v48 = sub_1BDBFD098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v22, 1, 1, v48);
  sub_1BDBFD0B0();
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v26, v47, v144);
  v49 = v139;
  sub_1BDBFD074();
  v50 = v140;
  v119 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v119(v18, v49, v140);
  v51 = sub_1BDAC31B0(&qword_1ED23B0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0], MEMORY[0x1E0DF00B8]);
  v52 = v136;
  sub_1BDBFDDC4();
  v118 = *(void (**)(char *, uint64_t))(v13 + 8);
  v118(v49, v50);
  v53 = v138;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[*(int *)(v15 + 36)], v52, v138);
  v54 = v141;
  sub_1BDACEA88((uint64_t)v18, v141);
  v55 = v54 + *(int *)(v15 + 36);
  v117 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v117(v52, v55, v53);
  v56 = v137;
  v120 = v51;
  sub_1BDBFDDE8();
  sub_1BDAC31B0(&qword_1ED23AF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0090], MEMORY[0x1E0DF0098]);
  LOBYTE(v47) = sub_1BDBFD6BC();
  v57 = *(void (**)(char *, uint64_t))(v9 + 8);
  v57(v56, v53);
  v57(v52, v53);
  if ((v47 & 1) != 0)
    goto LABEL_6;
  v62 = v54;
  v63 = v140;
  v64 = (void (*)(uint64_t *, _QWORD))sub_1BDBFDE3C();
  v66 = v133;
  v65 = v134;
  v67 = v135;
  v116 = (void (*)(char *))*((_QWORD *)v134 + 2);
  v116(v133);
  v64(&v148, 0);
  v68 = v139;
  v119(v139, (char *)v62, v63);
  sub_1BDBFDDF4();
  v118(v68, v63);
  v69 = sub_1BDBFD0D4();
  v71 = v70;
  v72 = (void (*)(char *, uint64_t))*((_QWORD *)v65 + 1);
  v72(v66, v67);
  if (v69 == 0x746E756F636361 && v71 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v73 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    v54 = v141;
    if ((v73 & 1) == 0)
    {
LABEL_6:
      v58 = v54;
LABEL_7:
      sub_1BDAC350C(v58, &qword_1ED23AF10);
      (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
      result = (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v121, v123);
      goto LABEL_10;
    }
  }
  v74 = sub_1BDBFC51C();
  if (!v75)
  {
    v134 = v72;
    v86 = v136;
    v87 = v138;
    v117(v136, v55, v138);
    v88 = v137;
    v90 = v140;
    v89 = v141;
    sub_1BDBFDDE8();
    v91 = sub_1BDBFD6BC();
    v57(v88, v87);
    v57(v86, v87);
    if ((v91 & 1) == 0)
    {
      v105 = (void (*)(uint64_t *, _QWORD))sub_1BDBFDE3C();
      v106 = v126;
      v107 = v135;
      v116(v126);
      v105(&v148, 0);
      v108 = v139;
      v119(v139, (char *)v89, v90);
      sub_1BDBFDDF4();
      v118(v108, v90);
      v43 = sub_1BDBFD0D4();
      v60 = v109;
      sub_1BDAC350C(v89, &qword_1ED23AF10);
      (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
      (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
      result = ((uint64_t (*)(char *, uint64_t))v134)(v106, v107);
      v59 = 0;
      goto LABEL_12;
    }
    v58 = v89;
    goto LABEL_7;
  }
  v148 = v74;
  v149 = v75;
  v146 = sub_1BDBFD6F8();
  v147 = v76;
  sub_1BDAC3548();
  v77 = sub_1BDBFE154();
  swift_bridgeObjectRelease();
  if (!v77)
  {
    swift_bridgeObjectRelease();
    v92 = v121;
    v93 = sub_1BDBFC504();
    v94 = v123;
    v95 = v141;
    if (v93)
    {
      v96 = *(_QWORD *)(v93 + 16);
      if (v96)
      {
        v97 = v93 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
        v98 = *(_QWORD *)(v132 + 72);
        v99 = *(void (**)(char *, unint64_t, uint64_t))(v132 + 16);
        swift_bridgeObjectRetain();
        v100 = v125;
        v101 = v131;
        while (1)
        {
          v99(v101, v97, v100);
          if (sub_1BDBFC4C8() == 1701869940 && v102 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            goto LABEL_36;
          }
          v103 = sub_1BDBFE874();
          swift_bridgeObjectRelease();
          if ((v103 & 1) != 0)
            break;
          v101 = v131;
          (*(void (**)(char *, uint64_t))(v132 + 8))(v131, v100);
          v97 += v98;
          if (!--v96)
          {
            swift_bridgeObjectRelease();
            v104 = 1;
            v94 = v123;
            v92 = v121;
            v95 = v141;
            goto LABEL_33;
          }
        }
        v101 = v131;
LABEL_36:
        swift_bridgeObjectRelease();
        v110 = v132;
        v111 = (uint64_t)v124;
        (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v124, v101, v100);
        v104 = 0;
        v94 = v123;
        v92 = v121;
        v95 = v141;
      }
      else
      {
        v104 = 1;
        v100 = v125;
LABEL_33:
        v110 = v132;
        v111 = (uint64_t)v124;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v111, v104, 1, v100);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v111, 1, v100) == 1)
      {
        sub_1BDAC350C(v111, &qword_1EF50E0B8);
      }
      else
      {
        sub_1BDBFC4D4();
        v113 = v112;
        (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, v100);
        if (v113)
        {
          swift_bridgeObjectRetain();
          v114 = sub_1BDBFE5D4();
          swift_bridgeObjectRelease();
          if (v114)
          {
            if (v114 != 1)
              goto LABEL_43;
            v59 = 1;
          }
          else
          {
            v59 = 0;
          }
          sub_1BDAC350C(v95, &qword_1ED23AF10);
          (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
          (*(void (**)(char *, uint64_t))(v122 + 8))(v92, v94);
          result = swift_bridgeObjectRelease();
          v43 = 0;
          v60 = 0;
          goto LABEL_12;
        }
      }
    }
LABEL_43:
    sub_1BDAC350C(v95, &qword_1ED23AF10);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v92, v94);
    result = swift_bridgeObjectRelease();
    v43 = 0;
    v60 = 0;
    v59 = 0;
    goto LABEL_12;
  }
  v78 = v127;
  sub_1BDBFC5AC();
  sub_1BDBFC528();
  v79 = v121;
  sub_1BDBFC54C();
  sub_1BDBFC558();
  sub_1BDBFC564();
  sub_1BDBFC570();
  result = sub_1BDBFC5A0();
  if (v80)
  {
    v148 = result;
    v149 = v80;
    v81 = v128;
    sub_1BDBFC3F0();
    v43 = sub_1BDBFE130();
    v60 = v82;
    (*(void (**)(char *, uint64_t))(v129 + 8))(v81, v130);
    swift_bridgeObjectRelease();
    v83 = *(void (**)(char *, uint64_t))(v122 + 8);
    v84 = v78;
    v85 = v123;
    v83(v84, v123);
    sub_1BDAC350C(v141, &qword_1ED23AF10);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
    result = ((uint64_t (*)(char *, uint64_t))v83)(v79, v85);
    v59 = 1;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t AccountID.Authority.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (v0[1])
    v1 = *v0;
  else
    v1 = sub_1BDBFD6F8();
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t AccountID.Authority.debugDescription.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = 0xD000000000000019;
  if (*(_QWORD *)(v0 + 8))
  {
    swift_bridgeObjectRetain();
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    sub_1BDBFD74C();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    return 0xD00000000000001BLL;
  }
  return v1;
}

uint64_t AccountID.Authority.hash(into:)()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_1BDBFEA18();
  sub_1BDBFEA18();
  return sub_1BDBFD794();
}

uint64_t AccountID.Authority.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  if (v1)
    sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB56BF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  if (v1)
    sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB56C64()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_1BDBFEA18();
  sub_1BDBFEA18();
  return sub_1BDBFD794();
}

uint64_t sub_1BDB56CC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  if (v1)
    sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB56D30()
{
  uint64_t *v0;
  uint64_t v1;

  if (v0[1])
    v1 = *v0;
  else
    v1 = sub_1BDBFD6F8();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s11NotesShared9AccountIDV9AuthorityO2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_1BDBFE874();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t _s11NotesShared9AccountIDV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (!v3)
  {
    if (!v5)
    {
      swift_bridgeObjectRelease_n();
LABEL_12:
      if (v4)
        v9 = 1819112552;
      else
        v9 = 0x6E7265646F6DLL;
      if (v4)
        v10 = 0xE400000000000000;
      else
        v10 = 0xE600000000000000;
      if (v6)
        v11 = 1819112552;
      else
        v11 = 0x6E7265646F6DLL;
      if (v6)
        v12 = 0xE400000000000000;
      else
        v12 = 0xE600000000000000;
      if (v9 == v11 && v10 == v12)
        v8 = 1;
      else
        v8 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
    }
LABEL_10:
    v8 = 0;
    return v8 & 1;
  }
  if (!v5)
    goto LABEL_10;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v5)
    goto LABEL_12;
  v8 = 0;
  if ((sub_1BDBFE874() & 1) != 0)
    goto LABEL_12;
  return v8 & 1;
}

unint64_t sub_1BDB56F64(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BDB56F98();
  a1[2] = sub_1BDB56FDC();
  result = sub_1BDB57020();
  a1[3] = result;
  return result;
}

unint64_t sub_1BDB56F98()
{
  unint64_t result;

  result = qword_1EF50E0C0;
  if (!qword_1EF50E0C0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AccountID, &type metadata for AccountID);
    atomic_store(result, (unint64_t *)&qword_1EF50E0C0);
  }
  return result;
}

unint64_t sub_1BDB56FDC()
{
  unint64_t result;

  result = qword_1EF50E0C8;
  if (!qword_1EF50E0C8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AccountID, &type metadata for AccountID);
    atomic_store(result, (unint64_t *)&qword_1EF50E0C8);
  }
  return result;
}

unint64_t sub_1BDB57020()
{
  unint64_t result;

  result = qword_1EF50E0D0;
  if (!qword_1EF50E0D0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AccountID, &type metadata for AccountID);
    atomic_store(result, (unint64_t *)&qword_1EF50E0D0);
  }
  return result;
}

unint64_t sub_1BDB57068()
{
  unint64_t result;

  result = qword_1EF50E0D8;
  if (!qword_1EF50E0D8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AccountID, &type metadata for AccountID);
    atomic_store(result, (unint64_t *)&qword_1EF50E0D8);
  }
  return result;
}

unint64_t sub_1BDB570B0()
{
  unint64_t result;

  result = qword_1EF50E0E0;
  if (!qword_1EF50E0E0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AccountID.Authority, &type metadata for AccountID.Authority);
    atomic_store(result, (unint64_t *)&qword_1EF50E0E0);
  }
  return result;
}

uint64_t sub_1BDB570F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountID(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AccountID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountID(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountID()
{
  return &type metadata for AccountID;
}

uint64_t getEnumTagSinglePayload for AccountID.Authority(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AccountID.Authority(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1BDB57334(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BDB5734C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountID.Authority()
{
  return &type metadata for AccountID.Authority;
}

uint64_t static GroupSessionProvider<>.sharedGroupSessionProvider(for:share:container:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v11;

  v6 = type metadata accessor for EditNoteActivity();
  MEMORY[0x1E0C80A78](v6);
  sub_1BDB57458(a1, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E0E8);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v8 = a2;
  v9 = a3;
  return sub_1BDBFCC78();
}

uint64_t sub_1BDB57458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static GroupSessionProvider<>.personalGroupSessionProvider(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for EditNoteActivity();
  MEMORY[0x1E0C80A78](v2);
  sub_1BDB57458(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A910);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return sub_1BDBFCC84();
}

NotesShared::NoteID __swiftcall NoteID.init(contextType:managedIdentifier:)(NotesShared::ManagedEntityContextType_optional contextType, Swift::String managedIdentifier)
{
  uint64_t v2;
  NotesShared::NoteID result;

  *(_BYTE *)v2 = *(_BYTE *)contextType.value;
  *(Swift::String *)(v2 + 8) = managedIdentifier;
  result.managedIdentifier = managedIdentifier;
  result.contextType = contextType;
  return result;
}

uint64_t static NoteID.uriTypeName.getter()
{
  return 1702129518;
}

void NoteID.contextType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *NoteID.contextType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void (*NoteID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteID.managedIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NoteID.managedIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

void (*NoteID.managedIdentifier.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteID.hash(into:)()
{
  _BYTE *v0;

  if (*v0 == 2)
  {
    sub_1BDBFEA24();
  }
  else
  {
    sub_1BDBFEA24();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t NoteID.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1BDBFEA0C();
  sub_1BDBFEA24();
  if (v1 != 2)
  {
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB5776C()
{
  return 1702129518;
}

uint64_t sub_1BDB5777C()
{
  unsigned __int8 *v0;

  return sub_1BDBAB2E8(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2));
}

uint64_t sub_1BDB57788()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAC246C(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2), (uint64_t)v3);
  v4 = sub_1BDBFC948();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BDACDBAC((uint64_t)v3);
    return 0;
  }
  else
  {
    v6 = sub_1BDBFC8A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

unint64_t sub_1BDB5786C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BDB57898();
  result = sub_1BDB578DC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BDB57898()
{
  unint64_t result;

  result = qword_1EF50E0F0;
  if (!qword_1EF50E0F0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NoteID, &type metadata for NoteID);
    atomic_store(result, (unint64_t *)&qword_1EF50E0F0);
  }
  return result;
}

unint64_t sub_1BDB578DC()
{
  unint64_t result;

  result = qword_1EF50E0F8;
  if (!qword_1EF50E0F8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NoteID, &type metadata for NoteID);
    atomic_store(result, (unint64_t *)&qword_1EF50E0F8);
  }
  return result;
}

unint64_t sub_1BDB57920(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BDB57954();
  a1[2] = sub_1BDB57998();
  result = sub_1BDB579DC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BDB57954()
{
  unint64_t result;

  result = qword_1EF50E100;
  if (!qword_1EF50E100)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NoteID, &type metadata for NoteID);
    atomic_store(result, (unint64_t *)&qword_1EF50E100);
  }
  return result;
}

unint64_t sub_1BDB57998()
{
  unint64_t result;

  result = qword_1EF50E108;
  if (!qword_1EF50E108)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NoteID, &type metadata for NoteID);
    atomic_store(result, (unint64_t *)&qword_1EF50E108);
  }
  return result;
}

unint64_t sub_1BDB579DC()
{
  unint64_t result;

  result = qword_1EF50E110;
  if (!qword_1EF50E110)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NoteID, &type metadata for NoteID);
    atomic_store(result, (unint64_t *)&qword_1EF50E110);
  }
  return result;
}

unint64_t sub_1BDB57A24()
{
  unint64_t result;

  result = qword_1ED239D80;
  if (!qword_1ED239D80)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NoteID, &type metadata for NoteID);
    atomic_store(result, (unint64_t *)&qword_1ED239D80);
  }
  return result;
}

ValueMetadata *type metadata accessor for NoteID()
{
  return &type metadata for NoteID;
}

unint64_t sub_1BDB57A78(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(id *);
  uint64_t v28;
  id v29;

  v27 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E320);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for NoteEditActivityEvent(0);
  v28 = *(_QWORD *)(v26 - 8);
  v8 = MEMORY[0x1E0C80A78](v26);
  v25 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v23 = (uint64_t)&v21 - v10;
  if (a3 >> 62)
    goto LABEL_20;
  v11 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; v11 = sub_1BDBFE574())
  {
    v12 = MEMORY[0x1E0DEE9D8];
    v24 = a3 & 0xC000000000000001;
    v13 = 4;
    v22 = a3;
    while (1)
    {
      v14 = v24 ? (id)MEMORY[0x1C3B79954](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      v15 = v14;
      v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      v29 = v14;
      v27(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v7, 1, v26) == 1)
      {
        sub_1BDAC350C((uint64_t)v7, &qword_1EF50E320);
      }
      else
      {
        v17 = v23;
        sub_1BDAFE158((uint64_t)v7, v23, type metadata accessor for NoteEditActivityEvent);
        sub_1BDAFE158(v17, v25, type metadata accessor for NoteEditActivityEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1BDBCBDD0(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
        v19 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v19 >= v18 >> 1)
          v12 = sub_1BDBCBDD0(v18 > 1, v19 + 1, 1, v12);
        *(_QWORD *)(v12 + 16) = v19 + 1;
        sub_1BDAFE158(v25, v12+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v19, type metadata accessor for NoteEditActivityEvent);
        a3 = v22;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1BDB57D4C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  void (*v44)(char *);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a1;
  v45 = a2;
  v4 = sub_1BDBFC948();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v34 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v43 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - v15;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v34 = a3;
    v35 = v18;
    v19 = a3 + v18;
    v20 = *(_QWORD *)(v5 + 72);
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v46 = MEMORY[0x1E0DEE9D8];
    v36 = v5;
    v39 = v20;
    v40 = v11;
    while (1)
    {
      v42(v16, v19, v4);
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v38(v16, 0, 1, v4);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v23(v16, 1, v4) == 1)
        break;
      v47 = v19;
      v24 = v17;
      v25 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v25(v11, v16, v4);
      v26 = (uint64_t)v43;
      v27 = v48;
      v44(v11);
      if (v27)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v46;
      }
      v48 = 0;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      if (v23((char *)v26, 1, v4) == 1)
      {
        sub_1BDAC350C(v26, &qword_1ED23B1B0);
        v21 = v39;
        v11 = v40;
        v22 = v24;
      }
      else
      {
        v28 = v37;
        v25(v37, (char *)v26, v4);
        v25(v41, v28, v4);
        v22 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v46 = sub_1BDBCC6D8(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
        v11 = v40;
        v30 = *(_QWORD *)(v46 + 16);
        v29 = *(_QWORD *)(v46 + 24);
        if (v30 >= v29 >> 1)
          v46 = sub_1BDBCC6D8(v29 > 1, v30 + 1, 1, v46);
        v31 = v46;
        *(_QWORD *)(v46 + 16) = v30 + 1;
        v21 = v39;
        v25((char *)(v31 + v35 + v30 * v39), v41, v4);
        v5 = v36;
      }
      v19 = v47 + v21;
      v17 = v22 - 1;
      if (!v17)
      {
        v38(v16, 1, 1, v4);
        break;
      }
    }
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v46 = MEMORY[0x1E0DEE9D8];
    v32(v16, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_1BDB580E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[40];

  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    sub_1BDAC350C(a1, &qword_1ED23AEA8);
    sub_1BDB6B48C(a2, (uint64_t)v9);
    v7 = sub_1BDBFC948();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_1BDAC350C((uint64_t)v9, &qword_1ED23AEA8);
  }
  else
  {
    sub_1BDB35FB0(a1, (uint64_t)v9, &qword_1ED23AEA0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BDB6C3C8((uint64_t)v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_1BDBFC948();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
}

uint64_t sub_1BDB581D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1ED23B130);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23B130);
  if (qword_1ED23B0E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23B078);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t sub_1BDB58260()
{
  uint64_t inited;
  void *v1;
  id v2;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E218);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  v1 = (void *)*MEMORY[0x1E0CD0E90];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CD0E90];
  sub_1BD942914(0, &qword_1ED23A628);
  v2 = v1;
  *(_QWORD *)(inited + 40) = sub_1BDBFE058();
  result = sub_1BDB0B274(inited);
  qword_1EF50E118 = result;
  return result;
}

uint64_t SystemPaperDocumentError.init(rawValue:)()
{
  return 0;
}

unint64_t static SystemPaperDocumentError._nsErrorDomain.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1BDB58328()
{
  sub_1BDBFEA0C();
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB58388()
{
  sub_1BDB65EAC();
  return sub_1BDBFC63C();
}

_QWORD *sub_1BDB583C0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 0;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1BDB583D8()
{
  sub_1BDB65EAC();
  return sub_1BDBFC654();
}

uint64_t sub_1BDB58400()
{
  sub_1BDB65EAC();
  return sub_1BDBFC648();
}

unint64_t sub_1BDB58428()
{
  return 0xD000000000000024;
}

uint64_t sub_1BDB58444()
{
  sub_1BDB65EAC();
  return sub_1BDBFC630();
}

uint64_t SystemPaperSyncArchive.databaseArchive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___ICSystemPaperSyncArchive_databaseArchive;
  v4 = sub_1BDBFC948();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SystemPaperSyncArchive.assetArchives.getter()
{
  return swift_bridgeObjectRetain();
}

id SystemPaperSyncArchive.__allocating_init(databaseArchive:assetArchives:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___ICSystemPaperSyncArchive_databaseArchive];
  v7 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(_QWORD *)&v5[OBJC_IVAR___ICSystemPaperSyncArchive_assetArchives] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id SystemPaperSyncArchive.init(databaseArchive:assetArchives:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v5 = &v2[OBJC_IVAR___ICSystemPaperSyncArchive_databaseArchive];
  v6 = sub_1BDBFC948();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  *(_QWORD *)&v2[OBJC_IVAR___ICSystemPaperSyncArchive_assetArchives] = a2;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for SystemPaperSyncArchive();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for SystemPaperSyncArchive()
{
  uint64_t result;

  result = qword_1EF50E1F0;
  if (!qword_1EF50E1F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BDB58828()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  v0 = sub_1BDBFC948();
  sub_1BDB66044(&qword_1ED23AB00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  v1 = swift_bridgeObjectRetain();
  MEMORY[0x1C3B78FB8](v1, v0);
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x6573616261746144;
}

void SystemPaperSyncArchive.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SystemPaperSyncArchive.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemPaperSyncArchive();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *static ICSystemPaperDocument.paperFastPath.getter()
{
  void *v0;

  swift_beginAccess();
  v0 = off_1ED23A2C0;
  sub_1BDAE2080((uint64_t)off_1ED23A2C0);
  return v0;
}

uint64_t static ICSystemPaperDocument.paperFastPath.setter(void *a1, uint64_t a2)
{
  void *v4;

  swift_beginAccess();
  v4 = off_1ED23A2C0;
  off_1ED23A2C0 = a1;
  qword_1ED23A2C8 = a2;
  return sub_1BDAE1FE0((uint64_t)v4);
}

uint64_t (*static ICSystemPaperDocument.paperFastPath.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static ICSystemPaperDocument.activePaper(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v4)(uint64_t);
  uint64_t v6;

  swift_beginAccess();
  v4 = (void (*)(uint64_t))off_1ED23A2C0;
  if (off_1ED23A2C0)
  {
    swift_retain();
    v4(a1);
    return sub_1BDAE1FE0((uint64_t)v4);
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
}

id ICSystemPaperDocument.attachment.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment);
}

id ICSystemPaperDocument.coherenceContext.getter()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), sel_managedObjectContext);
  if (result)
  {
    v2 = result;
    MEMORY[0x1E0C80A78](result);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AE30);
    sub_1BDBFDFF8();

    return (id)v3;
  }
  return result;
}

void sub_1BDB58D34(char *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  unsigned int v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  void *v30;
  void *v31;
  uint64_t *v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFC948();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&a1[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  v13 = objc_msgSend(v12, sel_note);
  if (!v13)
    goto LABEL_4;
  v14 = v13;
  if ((objc_msgSend(v13, sel_isPasswordProtectedAndLocked) & 1) != 0)
  {

LABEL_4:
    v15 = 0;
    goto LABEL_5;
  }
  v37 = a2;
  v16 = objc_msgSend(v12, sel_attachmentModel);
  objc_opt_self();
  v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    v18 = (void *)v17;
    v35 = v16;
    v36 = v2;
    v19 = objc_msgSend((id)objc_opt_self(), sel_sharedContext);
    if (v19
      && (v20 = v19, v21 = objc_msgSend(v19, sel_hasContextOptions_, 721457), v20, v21)
      && objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    {
      v22 = objc_msgSend(v18, sel_paperCoherenceContextURL);
      sub_1BDBFC90C();

      if ((objc_msgSend(v14, sel_isPasswordProtected) & 1) != 0)
      {
        *(_QWORD *)&v40 = ObjectType;
        *((_QWORD *)&v40 + 1) = sub_1BDB66044(&qword_1EF50E130, v23, (uint64_t (*)(uint64_t))type metadata accessor for ICSystemPaperDocument, (uint64_t)&protocol conformance descriptor for ICSystemPaperDocument);
        v24 = a1;
      }
      else
      {
        a1 = 0;
        v39 = 0u;
        v40 = 0u;
      }
      v31 = v36;
      v32 = v37;
      v33 = v35;
      v38 = a1;
      sub_1BDBFD554();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      v34 = sub_1BDBFD530();
      if (v31)
      {

        sub_1BDAC350C((uint64_t)v7, &qword_1ED23B1B0);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        sub_1BDAC350C((uint64_t)&v38, &qword_1ED23B128);
        v15 = 0;
      }
      else
      {
        v15 = v34;

        sub_1BDAC350C((uint64_t)v7, &qword_1ED23B1B0);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        sub_1BDAC350C((uint64_t)&v38, &qword_1ED23B128);
      }
      a2 = v32;
    }
    else
    {
      if ((objc_msgSend(v14, sel_isPasswordProtected) & 1) != 0)
      {
        *(_QWORD *)&v40 = ObjectType;
        *((_QWORD *)&v40 + 1) = sub_1BDB66044(&qword_1EF50E130, v25, (uint64_t (*)(uint64_t))type metadata accessor for ICSystemPaperDocument, (uint64_t)&protocol conformance descriptor for ICSystemPaperDocument);
        v26 = a1;
      }
      else
      {
        a1 = 0;
        v39 = 0u;
        v40 = 0u;
      }
      v29 = v37;
      v30 = v35;
      v38 = a1;
      sub_1BDBFD554();
      v15 = MEMORY[0x1C3B78AF0](1, &v38);

      sub_1BDAC350C((uint64_t)&v38, &qword_1ED23B128);
      a2 = v29;
    }
  }
  else
  {

    if ((objc_msgSend(v14, sel_isPasswordProtected) & 1) != 0)
    {
      *(_QWORD *)&v40 = ObjectType;
      *((_QWORD *)&v40 + 1) = sub_1BDB66044(&qword_1EF50E130, v27, (uint64_t (*)(uint64_t))type metadata accessor for ICSystemPaperDocument, (uint64_t)&protocol conformance descriptor for ICSystemPaperDocument);
      v28 = a1;
    }
    else
    {
      a1 = 0;
      v39 = 0u;
      v40 = 0u;
    }
    a2 = v37;
    v38 = a1;
    sub_1BDBFD554();
    v15 = MEMORY[0x1C3B78AF0](1, &v38);

    sub_1BDAC350C((uint64_t)&v38, &qword_1ED23B128);
  }
LABEL_5:
  *a2 = v15;
}

void sub_1BDB5916C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1BDB58D34(*(char **)(v1 + 16), a1);
}

id ICSystemPaperDocument.__allocating_init(paperAttachment:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ICSystemPaperDocument.init(paperAttachment:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t ICSystemPaperDocument.paper(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDB592D8(a1, &qword_1ED23AB78, &qword_1ED23AE28, &qword_1ED23AE20, (void (*)(uint64_t, char *))sub_1BDB59C1C, a2);
}

uint64_t sub_1BDB592AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDB592D8(a1, &qword_1ED23AB78, &qword_1ED23AE28, &qword_1ED23AE20, (void (*)(uint64_t, char *))sub_1BDB59C1C, a2);
}

uint64_t sub_1BDB592D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X4>, void (*a5)(uint64_t, char *)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  int *v29;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  id v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v42;
  uint64_t *v43;
  void (*v44)(uint64_t, char *);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v43 = a4;
  v44 = a5;
  v48 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD10);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1BDBFC948();
  v49 = *(_QWORD *)(v51 - 8);
  v13 = MEMORY[0x1E0C80A78](v51);
  v45 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v50 = (char *)v39 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v17 = MEMORY[0x1E0C80A78](v16);
  v42 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v39 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v39 - v22;
  v24 = objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), sel_managedObjectContext);
  v25 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  if (!v24)
    return v26(a6, 1, 1, v25);
  v46 = v23;
  v47 = a6;
  v27 = a2;
  v41 = v26;
  v28 = v26((uint64_t)v23, 1, 1, v25);
  MEMORY[0x1E0C80A78](v28);
  v39[-2] = v6;
  sub_1BDBFDFF8();
  v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD08);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v29 - 1) + 48))(v12, 1, v29) == 1)
  {

    sub_1BDAC350C((uint64_t)v12, &qword_1ED23AD10);
    v38 = (uint64_t)v46;
    v37 = v47;
  }
  else
  {
    v31 = &v12[v29[12]];
    v32 = v12[v29[16]];
    v33 = *(_QWORD *)v31;
    v39[2] = *((_QWORD *)v31 + 1);
    v40 = v24;
    v34 = *(_QWORD *)&v12[v29[20]];
    v39[0] = v33;
    v39[1] = v34;
    v35 = v50;
    v36 = v49;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v50, v12, v51);
    if ((v32 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(v43);
      sub_1BDBFD458();
      a2 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v51);
      v38 = (uint64_t)v46;
      sub_1BDAC350C((uint64_t)v46, v27);
      v41((uint64_t)v21, 0, 1, v25);
    }
    else
    {
      if (qword_1ED23AD68 != -1)
        swift_once();
      v21 = v42;
      v44(v48, v35);
      a2 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v51);
      v38 = (uint64_t)v46;
      sub_1BDAC350C((uint64_t)v46, v27);
    }
    sub_1BDB35FB0((uint64_t)v21, v38, a2);
    v37 = v47;
  }
  return sub_1BDB35FB0(v38, v37, a2);
}

uint64_t ICSystemPaperDocument.paperDocument(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDB592D8(a1, &qword_1EF50E150, &qword_1EF50E158, &qword_1EF50E318, (void (*)(uint64_t, char *))sub_1BDB59DF0, a2);
}

uint64_t sub_1BDB59A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  int *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment);
  v4 = objc_msgSend(v3, sel_paperBundleModel);
  if (!v4)
    goto LABEL_7;
  v5 = v4;
  v6 = objc_msgSend(v3, sel_note);
  if (!v6)
  {
    v7 = v5;
    goto LABEL_6;
  }
  v7 = v6;
  if ((objc_msgSend(v6, sel_isPasswordProtectedAndLocked) & 1) != 0)
  {

LABEL_6:
LABEL_7:
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD08);
  v20 = (uint64_t *)(a2 + v10[12]);
  v21 = v10[16];
  v22 = (uint64_t *)(a2 + v10[20]);
  v11 = objc_msgSend(v5, sel_paperBundleURL);
  sub_1BDBFC90C();

  v12 = objc_msgSend(v7, sel_loggingDescription);
  v13 = sub_1BDBFD6F8();
  v15 = v14;

  *v20 = v13;
  v20[1] = v15;
  *(_BYTE *)(a2 + v21) = objc_msgSend(v3, sel_isPasswordProtected);
  v16 = objc_msgSend(v3, sel_loggingDescription);
  v17 = sub_1BDBFD6F8();
  v19 = v18;

  *v22 = v17;
  v22[1] = v19;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v10 - 1) + 56))(a2, 0, 1, v10);
}

void sub_1BDB59C1C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  uint64_t *v13;
  os_unfair_lock_s *v14;
  NSObject *v15;
  void *v16;
  _QWORD aBlock[6];
  uint64_t v18;

  v5 = v3;
  v18 = a3;
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v12 = *(os_unfair_lock_s **)(v5 + 16);
  v13 = (uint64_t *)&v12[4];
  v14 = v12 + 8;
  os_unfair_lock_lock(v12 + 8);
  sub_1BDB59FFC(v13, a2, v5, a1, (uint64_t)v11, (uint64_t)&unk_1E76D6F08, sub_1BDB66118, (uint64_t)&block_descriptor_57);
  if (!v4)
  {
    os_unfair_lock_unlock(v14);
    v15 = *(NSObject **)(v5 + 24);
    aBlock[4] = google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BDBC55F0;
    aBlock[3] = &block_descriptor_51;
    v16 = _Block_copy(aBlock);
    swift_release();
    dispatch_sync(v15, v16);
    _Block_release(v16);
    if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
    {
      os_unfair_lock_lock(v14);
      sub_1BDB5A5D4(v13, a2, (uint64_t)v11, &qword_1ED23AE28, v18);
      os_unfair_lock_unlock(v14);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    __break(1u);
  }
  os_unfair_lock_unlock(v14);
  __break(1u);
}

void sub_1BDB59DF0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  uint64_t *v13;
  os_unfair_lock_s *v14;
  NSObject *v15;
  void *v16;
  _QWORD aBlock[6];
  uint64_t v18;

  v5 = v3;
  v18 = a3;
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v12 = *(os_unfair_lock_s **)(v5 + 16);
  v13 = (uint64_t *)&v12[4];
  v14 = v12 + 8;
  os_unfair_lock_lock(v12 + 8);
  sub_1BDB59FFC(v13, a2, v5, a1, (uint64_t)v11, (uint64_t)&unk_1E76D6E90, sub_1BDB65FFC, (uint64_t)&block_descriptor_47);
  if (!v4)
  {
    os_unfair_lock_unlock(v14);
    v15 = *(NSObject **)(v5 + 24);
    aBlock[4] = google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BDBC55F0;
    aBlock[3] = &block_descriptor_41;
    v16 = _Block_copy(aBlock);
    swift_release();
    dispatch_sync(v15, v16);
    _Block_release(v16);
    if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
    {
      os_unfair_lock_lock(v14);
      sub_1BDB5A5D4(v13, a2, (uint64_t)v11, &qword_1EF50E158, v18);
      os_unfair_lock_unlock(v14);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    __break(1u);
  }
  os_unfair_lock_unlock(v14);
  __break(1u);
}

uint64_t sub_1BDB59FC4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ICSystemPaperDocument.PaperBundleReader();
  v0 = swift_allocObject();
  result = sub_1BDB5A990();
  qword_1ED23D098 = v0;
  return result;
}

uint64_t sub_1BDB59FFC(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  char *v33;
  uint64_t v34;
  const void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v43[2];
  uint64_t v44;
  void *v45;
  char *v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD aBlock[7];
  uint64_t v61;

  v45 = a7;
  v44 = a6;
  v55 = a5;
  v47 = a4;
  v12 = sub_1BDBFCB40();
  v56 = *(_QWORD *)(v12 - 8);
  v57 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v54 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v53 = (uint64_t)v43 - v15;
  v16 = sub_1BDBFD1D0();
  v51 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  MEMORY[0x1E0C80A78](v16);
  v48 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BDBFD23C();
  v49 = *(_QWORD *)(v18 - 8);
  v50 = v18;
  MEMORY[0x1E0C80A78](v18);
  v46 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BDBFC948();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a1;
  v25 = *(_QWORD *)(*a1 + 16);
  v58 = a2;
  if (v25 && (v26 = sub_1BDB6AD34(a2), (v27 & 1) != 0))
  {
    v61 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v26);
    if (!*(_QWORD *)(swift_bridgeObjectRetain() + 16))
      goto LABEL_6;
  }
  else
  {
    v61 = MEMORY[0x1E0DEE9E8];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9E8] + 16))
    {
LABEL_6:
      v43[1] = *(_QWORD *)(a3 + 24);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v58, v20);
      v28 = (*(unsigned __int8 *)(v21 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v29 = swift_allocObject();
      v44 = a8;
      v30 = v47;
      *(_QWORD *)(v29 + 16) = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v29 + v28, v23, v20);
      *(_QWORD *)(v29 + ((v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
      aBlock[4] = v45;
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BDB24AB0;
      aBlock[3] = v44;
      v45 = _Block_copy(aBlock);
      v31 = v30;
      swift_retain();
      v32 = v46;
      sub_1BDBFD200();
      v59 = MEMORY[0x1E0DEE9D8];
      sub_1BDB66044(&qword_1ED23AE18, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE40);
      sub_1BDAE0C94((unint64_t *)&qword_1ED23AE48, &qword_1ED23AE40, MEMORY[0x1E0DEAF38]);
      v33 = v48;
      v34 = v52;
      sub_1BDBFE1B4();
      v35 = v45;
      MEMORY[0x1C3B79528](0, v32, v33, v45);
      _Block_release(v35);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v34);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v50);
      swift_release();
    }
  }
  v36 = v56;
  v37 = v54;
  v38 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v55, v57);
  v39 = v53;
  sub_1BDB448E4(v53, v37);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v58, v20);
  v40 = v61;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_1BDB6C53C(v40, (uint64_t)v23, isUniquelyReferenced_nonNull_native);
  *a1 = aBlock[0];
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
}

uint64_t sub_1BDB5A41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  os_unfair_lock_s *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  _QWORD v12[4];
  uint64_t v13[4];
  char v14;

  __swift_instantiateConcreteTypeFromMangledName(a4);
  v13[3] = __swift_instantiateConcreteTypeFromMangledName(a5);
  __swift_allocate_boxed_opaque_existential_1(v13);
  sub_1BDBFD458();
  v14 = 0;
  sub_1BDB35FB0((uint64_t)v13, (uint64_t)v12, &qword_1ED23AEA0);
  sub_1BDB35FB0((uint64_t)v12, (uint64_t)v13, &qword_1ED23AEA0);
  v8 = *(os_unfair_lock_s **)(a3 + 16);
  v9 = (uint64_t)&v8[4];
  v10 = v8 + 8;
  os_unfair_lock_lock(v8 + 8);
  sub_1BDB5A524(v9, a2, (uint64_t)v13);
  os_unfair_lock_unlock(v10);
  return sub_1BDAC350C((uint64_t)v13, &qword_1ED23AEA0);
}

uint64_t sub_1BDB5A524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[40];

  v5 = sub_1BDBFC948();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t))(v8 + 16))(v7, a2);
  sub_1BDB157E4(a3, (uint64_t)v11, &qword_1ED23AEA0);
  return sub_1BDB580E0((uint64_t)v11, (uint64_t)v7);
}

uint64_t sub_1BDB5A5D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30;
  _OWORD v31[2];
  unsigned __int8 v32;
  _OWORD v33[2];
  char v34;
  _OWORD v35[2];
  char v36;
  uint64_t v37;

  v28 = a4;
  v29 = a5;
  v8 = sub_1BDBFC948();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[1];
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_1BDB6AD34(a2), (v17 & 1) != 0))
  {
    sub_1BDB157E4(*(_QWORD *)(v15 + 56) + 40 * v16, (uint64_t)v35, &qword_1ED23AEA0);
  }
  else
  {
    memset(v35, 0, sizeof(v35));
    v36 = -1;
  }
  v18 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    v19 = sub_1BDB6AD34(a2);
    if ((v20 & 1) != 0)
    {
      *(_QWORD *)&v31[0] = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
      swift_bridgeObjectRetain();
      sub_1BDB649D0(a3, (uint64_t)v14);
      sub_1BDAC350C((uint64_t)v14, &qword_1ED23AD30);
      v21 = *(_QWORD *)&v31[0];
      if (*(_QWORD *)(*(_QWORD *)&v31[0] + 16))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v33[0] = *a1;
        *a1 = 0x8000000000000000;
        sub_1BDB6C53C(v21, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
        *a1 = *(_QWORD *)&v33[0];
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1BDB6B58C(a2);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
        memset(v33, 0, sizeof(v33));
        v34 = -1;
        sub_1BDB580E0((uint64_t)v33, (uint64_t)v11);
      }
    }
  }
  sub_1BDB157E4((uint64_t)v35, (uint64_t)v31, &qword_1ED23AEA8);
  if (v32 == 255)
  {
    sub_1BDAC350C((uint64_t)v35, &qword_1ED23AEA8);
    sub_1BDAC350C((uint64_t)v31, &qword_1ED23AEA8);
    v24 = __swift_instantiateConcreteTypeFromMangledName(v28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v29, 1, 1, v24);
  }
  else
  {
    sub_1BDB35FB0((uint64_t)v31, (uint64_t)v33, &qword_1ED23AEA0);
    sub_1BDB157E4((uint64_t)v33, (uint64_t)v31, &qword_1ED23AEA0);
    if ((v32 & 1) != 0)
    {
      v37 = *(_QWORD *)&v31[0];
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
      swift_willThrowTypedImpl();
      sub_1BDAC350C((uint64_t)v33, &qword_1ED23AEA0);
      return sub_1BDAC350C((uint64_t)v35, &qword_1ED23AEA8);
    }
    else
    {
      sub_1BD942258(v31, &v30);
      sub_1BDAC350C((uint64_t)v33, &qword_1ED23AEA0);
      sub_1BDAC350C((uint64_t)v35, &qword_1ED23AEA8);
      v25 = __swift_instantiateConcreteTypeFromMangledName(v28);
      v26 = v29;
      v27 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v26, v27 ^ 1u, 1, v25);
    }
  }
}

uint64_t sub_1BDB5A964()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1BDB5A990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v12[0] = sub_1BDBFDF50();
  v1 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BDBFDF44();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1BDBFD23C();
  MEMORY[0x1E0C80A78](v6);
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = sub_1BDB0B37C(MEMORY[0x1E0DEE9D8]);
  v9 = sub_1BDB0B510(v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE88);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v0 + 16) = v10;
  sub_1BD942914(0, (unint64_t *)&qword_1ED23AE78);
  sub_1BDBFD200();
  v12[1] = v7;
  sub_1BDB66044(&qword_1ED23AE70, 255, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE58);
  sub_1BDAE0C94(&qword_1ED23AE60, &qword_1ED23AE58, MEMORY[0x1E0DEAF38]);
  sub_1BDBFE1B4();
  (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v12[0]);
  *(_QWORD *)(v0 + 24) = sub_1BDBFDF68();
  return v0;
}

id ICSystemPaperDocument.archiveBundleForSync()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, char *, unint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  void *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, unint64_t);
  uint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void (*v44)(char *, char *, unint64_t);
  uint64_t v45;
  unint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint8_t *v50;
  void (*v51)(char *, char *, unint64_t);
  const char *v52;
  _QWORD *v53;
  unint64_t v54;
  unsigned int (*v55)(char *, uint64_t, unint64_t);
  uint64_t v56;
  unint64_t v57;
  _BOOL4 v58;
  id v59;
  _QWORD *v60;
  id v61;
  void (*v63)(char *, char *, unint64_t);
  uint64_t v64;
  id v65;
  NSObject *v66;
  uint64_t v67;
  unint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint8_t *v72;
  void (*v73)(char *, char *, unint64_t);
  void (*v74)(char *, char *, unint64_t);
  char *v75;
  void (*v76)(char *, char *, unint64_t);
  unint64_t v77;
  unint64_t v78;
  id v79;
  char *v80;
  void (*v81)(char *, char *, unint64_t);
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  void (**v89)(_QWORD, _QWORD);
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  uint64_t v93;
  void *v94;
  NSObject *v95;
  NSObject *v96;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  id v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  NSObject *v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  NSObject *v111;
  void (**v112)(_QWORD, _QWORD);
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  _BOOL4 v119;
  uint8_t *v120;
  void (*v121)(char *, char *, unint64_t);
  void (*v122)(char *, char *, unint64_t);
  char *v123;
  uint64_t v124;
  unint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  int v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void (*v138)(char *, char *, unint64_t);
  id v139;
  void (*v140)(char *, unint64_t);
  char *v141;
  _QWORD *v142;
  char *v143;
  char *v144;
  void (*v145)(char *, char *, unint64_t);
  uint64_t v146;
  objc_class *v147;
  char *v148;
  void (*v149)(char *, unint64_t);
  uint64_t v150;
  char *v151;
  id v152;
  void (*v153)(char *, char *, unint64_t);
  char *v154;
  char *v155;
  void (**v156)(_QWORD, _QWORD);
  _QWORD *v157;
  void (*v158)(char *, char *, unint64_t);
  char *v159;
  unint64_t v160;
  NSObject *v161;
  char *v162;
  char *v163;
  id v164;
  void (*v165)(char *, uint64_t, uint64_t, uint64_t);
  char *v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  objc_super v170;
  uint64_t v171;
  uint64_t v172;
  void (*aBlock)(char *, char *, unint64_t);
  unint64_t v174;
  uint64_t (*v175)(uint64_t);
  void *v176;
  uint64_t (*v177)(uint64_t);
  uint64_t v178;
  uint64_t v179;

  v179 = *MEMORY[0x1E0C80C00];
  v157 = (_QWORD *)sub_1BDBFCB40();
  v156 = (void (**)(_QWORD, _QWORD))*(v157 - 1);
  MEMORY[0x1E0C80A78](v157);
  v155 = (char *)&v150 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1BDBFC948();
  v3 = *(void (**)(char *, char *, unint64_t))(v2 - 8);
  v4 = *((_QWORD *)v3 + 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v159 = (char *)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v154 = (char *)&v150 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v162 = (char *)&v150 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v150 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v158 = (void (*)(char *, char *, unint64_t))((char *)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x1E0C80A78](v13);
  v163 = (char *)&v150 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v150 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v150 - v20;
  v165 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v3 + 7);
  v165((char *)&v150 - v20, 1, 1, v2);
  v171 = MEMORY[0x1E0DEE9D8];
  v22 = *(void **)(v0 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment);
  v23 = objc_msgSend(v22, sel_ic_loggingIdentifier);
  v167 = sub_1BDBFD6F8();
  v168 = v24;

  v25 = objc_msgSend(v22, sel_paperBundleModel);
  if (!v25)
  {
    if (qword_1ED23B148 != -1)
      swift_once();
    v39 = sub_1BDBFCE34();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED23B130);
    v40 = v168;
    swift_bridgeObjectRetain();
    v41 = sub_1BDBFCE1C();
    v42 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = (void (*)(char *, char *, unint64_t))swift_slowAlloc();
      aBlock = v44;
      *(_DWORD *)v43 = 136315138;
      swift_bridgeObjectRetain();
      v172 = sub_1BDAE53FC(v167, v40, (uint64_t *)&aBlock);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD918000, v41, v42, "Cannot archive paper bundle %s because attachment model is missing", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v44, -1, -1);
      MEMORY[0x1C3B7B478](v43, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1BDB5C138();
    swift_allocError();
    *v53 = 0;
    swift_willThrow();
    goto LABEL_26;
  }
  v26 = v25;
  v166 = v21;
  v152 = (id)objc_opt_self();
  v27 = objc_msgSend(v152, sel_defaultManager);
  v164 = v26;
  v28 = objc_msgSend(v26, sel_paperBundleURL);
  sub_1BDBFC90C();

  sub_1BDBFC918();
  v153 = v3;
  v29 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v3 + 1);
  v151 = v11;
  v160 = v2;
  v30 = v2;
  v31 = v29;
  ((void (*)(char *, uint64_t))v29)(v11, v30);
  v32 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  LODWORD(v26) = objc_msgSend(v27, sel_fileExistsAtPath_, v32);

  if (!(_DWORD)v26)
  {
    if (qword_1ED23B148 != -1)
      swift_once();
    v45 = sub_1BDBFCE34();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED23B130);
    v46 = v168;
    swift_bridgeObjectRetain();
    v47 = sub_1BDBFCE1C();
    v48 = sub_1BDBFDEE4();
    v49 = os_log_type_enabled(v47, v48);
    v21 = v166;
    if (v49)
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = (void (*)(char *, char *, unint64_t))swift_slowAlloc();
      aBlock = v51;
      *(_DWORD *)v50 = 136315138;
      swift_bridgeObjectRetain();
      v172 = sub_1BDAE53FC(v167, v46, (uint64_t *)&aBlock);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      v52 = "Cannot archive paper bundle %s because the paper bundle does not exist";
LABEL_23:
      _os_log_impl(&dword_1BD918000, v47, v48, v52, v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v51, -1, -1);
      MEMORY[0x1C3B7B478](v50, -1, -1);

LABEL_25:
      v59 = v164;
      sub_1BDB5C138();
      swift_allocError();
      *v60 = 0;
      swift_willThrow();

LABEL_26:
      v61 = 0;
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BDAC350C((uint64_t)v21, &qword_1ED23B1B0);
      sub_1BDAE1FE0((uint64_t)v61);
      return v61;
    }
LABEL_24:

    swift_bridgeObjectRelease_n();
    goto LABEL_25;
  }
  v33 = objc_msgSend(v22, sel_cloudAccount);
  if (!v33)
  {
    v165(v19, 1, 1, v160);
LABEL_19:
    sub_1BDAC350C((uint64_t)v19, &qword_1ED23B1B0);
    if (qword_1ED23B148 != -1)
      swift_once();
    v56 = sub_1BDBFCE34();
    __swift_project_value_buffer(v56, (uint64_t)qword_1ED23B130);
    v57 = v168;
    swift_bridgeObjectRetain();
    v47 = sub_1BDBFCE1C();
    v48 = sub_1BDBFDEE4();
    v58 = os_log_type_enabled(v47, v48);
    v21 = v166;
    if (v58)
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = (void (*)(char *, char *, unint64_t))swift_slowAlloc();
      aBlock = v51;
      *(_DWORD *)v50 = 136315138;
      swift_bridgeObjectRetain();
      v172 = sub_1BDAE53FC(v167, v57, (uint64_t *)&aBlock);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      v52 = "Cannot archive paper bundle %s because we cannot determine an appropriate temporary directory";
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, sel_temporaryDirectoryURL);

  if (v35)
  {
    v36 = (uint64_t)v163;
    sub_1BDBFC90C();

    v37 = 0;
    v38 = v153;
  }
  else
  {
    v37 = 1;
    v38 = v153;
    v36 = (uint64_t)v163;
  }
  v54 = v160;
  v165((char *)v36, v37, 1, v160);
  sub_1BDB35FB0(v36, (uint64_t)v19, &qword_1ED23B1B0);
  v55 = (unsigned int (*)(char *, uint64_t, unint64_t))*((_QWORD *)v38 + 6);
  if (v55(v19, 1, v54) == 1)
    goto LABEL_19;
  v63 = (void (*)(char *, char *, unint64_t))*((_QWORD *)v38 + 4);
  v64 = (uint64_t)v162;
  v63(v162, v19, v54);
  v65 = objc_msgSend(v152, sel_defaultManager);
  v66 = v161;
  NSFileManager.createDirectory(at:withIntermediateDirectories:)(v64, 1);
  if (v66)
  {

    if (qword_1ED23B148 != -1)
      swift_once();
    v67 = sub_1BDBFCE34();
    __swift_project_value_buffer(v67, (uint64_t)qword_1ED23B130);
    v68 = v168;
    swift_bridgeObjectRetain();
    v69 = sub_1BDBFCE1C();
    v70 = sub_1BDBFDEE4();
    v71 = os_log_type_enabled(v69, v70);
    v21 = v166;
    if (v71)
    {
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = (void (*)(char *, char *, unint64_t))swift_slowAlloc();
      aBlock = v73;
      v165 = v31;
      *(_DWORD *)v72 = 136315138;
      swift_bridgeObjectRetain();
      v172 = sub_1BDAE53FC(v167, v68, (uint64_t *)&aBlock);
      v64 = (uint64_t)v162;
      v31 = v165;
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD918000, v69, v70, "Cannot archive paper bundle %s because we cannot create a temporary directory", v72, 0xCu);
      swift_arrayDestroy();
      v74 = v73;
      v54 = v160;
      MEMORY[0x1C3B7B478](v74, -1, -1);
      MEMORY[0x1C3B7B478](v72, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1BDB5C138();
    swift_allocError();
    *v114 = 0;
    swift_willThrow();

    ((void (*)(uint64_t, unint64_t))v31)(v64, v54);
    v61 = 0;
    goto LABEL_27;
  }
  v152 = v55;

  aBlock = 0;
  v174 = 0xE000000000000000;
  v75 = v155;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v76 = (void (*)(char *, char *, unint64_t))sub_1BDBFCAEC();
  v78 = v77;
  ((void (**)(char *, _QWORD *))v156)[1](v75, v157);
  swift_bridgeObjectRelease();
  aBlock = v76;
  v174 = v78;
  sub_1BDBFD7DC();
  v157 = aBlock;
  v156 = (void (**)(_QWORD, _QWORD))v174;
  v163 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_init);
  v79 = objc_msgSend(v164, sel_paperBundleURL);
  v80 = v151;
  sub_1BDBFC90C();

  v161 = sub_1BDBFC8D0();
  v165 = v31;
  ((void (*)(char *, unint64_t))v31)(v80, v54);
  v81 = v153;
  v155 = (char *)*((_QWORD *)v153 + 2);
  ((void (*)(char *, uint64_t, unint64_t))v155)(v80, v64, v54);
  v82 = (*((unsigned __int8 *)v81 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v81 + 80);
  v83 = (v4 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
  v84 = (v83 + 23) & 0xFFFFFFFFFFFFFFF8;
  v85 = (v84 + 15) & 0xFFFFFFFFFFFFFFF8;
  v86 = (v85 + 23) & 0xFFFFFFFFFFFFFFF8;
  v87 = swift_allocObject();
  v153 = v63;
  v63((char *)(v87 + v82), v80, v160);
  v88 = (_QWORD *)(v87 + v83);
  v89 = v156;
  *v88 = v157;
  v88[1] = v89;
  v90 = v167;
  *(_QWORD *)(v87 + v84) = v166;
  v91 = (uint64_t *)(v87 + v85);
  v92 = v168;
  *v91 = v90;
  v91[1] = v92;
  *(_QWORD *)(v87 + v86) = &v171;
  v93 = swift_allocObject();
  *(_QWORD *)(v93 + 16) = sub_1BDB646B0;
  *(_QWORD *)(v93 + 24) = v87;
  v177 = sub_1BDB6473C;
  v178 = v93;
  aBlock = (void (*)(char *, char *, unint64_t))MEMORY[0x1E0C809B0];
  v174 = 1107296256;
  v175 = sub_1BDB1D3C4;
  v176 = &block_descriptor_8;
  v94 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v95 = v161;
  objc_msgSend(v163, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v161, 0, &aBlock, v94);
  _Block_release(v94);

  v96 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_56:
    swift_once();
    goto LABEL_37;
  }
  v86 = v160;
  v94 = v159;
  v63 = v158;
  if (!v96)
    goto LABEL_42;
  v98 = qword_1ED23B148;
  isEscapingClosureAtFileLocation = v96;
  if (v98 != -1)
    goto LABEL_56;
LABEL_37:
  v99 = sub_1BDBFCE34();
  __swift_project_value_buffer(v99, (uint64_t)qword_1ED23B130);
  v100 = v168;
  swift_bridgeObjectRetain_n();
  v101 = (id)isEscapingClosureAtFileLocation;
  v102 = sub_1BDBFCE1C();
  v103 = sub_1BDBFDEE4();
  v161 = v102;
  LODWORD(v157) = v103;
  if (os_log_type_enabled(v102, v103))
  {
    v104 = swift_slowAlloc();
    v156 = (void (**)(_QWORD, _QWORD))swift_slowAlloc();
    aBlock = (void (*)(char *, char *, unint64_t))v156;
    *(_DWORD *)v104 = 136315394;
    v105 = v96;
    swift_bridgeObjectRetain();
    v172 = sub_1BDAE53FC(v167, v100, (uint64_t *)&aBlock);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v104 + 12) = 2080;
    v106 = objc_msgSend(v101, sel_localizedDescription, v104 + 14);
    v107 = sub_1BDBFD6F8();
    v109 = v108;

    v110 = v107;
    v96 = v105;
    v63 = v158;
    v172 = sub_1BDAE53FC(v110, v109, (uint64_t *)&aBlock);
    sub_1BDBFE100();

    v86 = v160;
    swift_bridgeObjectRelease();
    v111 = v161;
    _os_log_impl(&dword_1BD918000, v161, (os_log_type_t)v157, "Failed to archive paper bundle %s to disk for sync due to file coordination error: %s", (uint8_t *)v104, 0x16u);
    v112 = v156;
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v112, -1, -1);
    v113 = v104;
    v94 = v159;
    MEMORY[0x1C3B7B478](v113, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_42:
  sub_1BDB157E4((uint64_t)v166, (uint64_t)v63, &qword_1ED23B1B0);
  if (((unsigned int (*)(_QWORD, uint64_t, unint64_t))v152)(v63, 1, v86) == 1)
  {
    sub_1BDAC350C((uint64_t)v63, &qword_1ED23B1B0);
    if (qword_1ED23B148 != -1)
      swift_once();
    v115 = sub_1BDBFCE34();
    __swift_project_value_buffer(v115, (uint64_t)qword_1ED23B130);
    v116 = v168;
    swift_bridgeObjectRetain();
    v117 = sub_1BDBFCE1C();
    v118 = sub_1BDBFDEE4();
    v119 = os_log_type_enabled(v117, v118);
    v21 = v166;
    if (v119)
    {
      v161 = v96;
      v120 = (uint8_t *)swift_slowAlloc();
      v121 = (void (*)(char *, char *, unint64_t))swift_slowAlloc();
      aBlock = v121;
      *(_DWORD *)v120 = 136315138;
      swift_bridgeObjectRetain();
      v172 = sub_1BDAE53FC(v167, v116, (uint64_t *)&aBlock);
      v96 = v161;
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD918000, v117, v118, "No database archive was produced when archiving a paper bundle %s for sync", v120, 0xCu);
      swift_arrayDestroy();
      v122 = v121;
      v86 = v160;
      MEMORY[0x1C3B7B478](v122, -1, -1);
      MEMORY[0x1C3B7B478](v120, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v139 = v164;
    v140 = (void (*)(char *, unint64_t))v165;
    v141 = v162;
    sub_1BDB5C138();
    swift_allocError();
    *v142 = 0;
    swift_willThrow();

    v140(v141, v86);
    v61 = sub_1BDB646B0;
    goto LABEL_27;
  }
  v161 = v96;
  v123 = v154;
  v153(v154, (char *)v63, v86);
  if (qword_1ED23B148 != -1)
    swift_once();
  v124 = sub_1BDBFCE34();
  __swift_project_value_buffer(v124, (uint64_t)qword_1ED23B130);
  ((void (*)(void *, char *, unint64_t))v155)(v94, v123, v86);
  v125 = v168;
  swift_bridgeObjectRetain();
  v126 = sub_1BDBFCE1C();
  v127 = sub_1BDBFDED8();
  v128 = v127;
  if (os_log_type_enabled(v126, v127))
  {
    v129 = swift_slowAlloc();
    v158 = (void (*)(char *, char *, unint64_t))swift_slowAlloc();
    aBlock = v158;
    *(_DWORD *)v129 = 136315650;
    LODWORD(v157) = v128;
    swift_bridgeObjectRetain();
    v172 = sub_1BDAE53FC(v167, v125, (uint64_t *)&aBlock);
    v130 = v86;
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v129 + 12) = 2080;
    sub_1BDB66044(&qword_1ED23AB00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v131 = v159;
    v132 = sub_1BDBFE760();
    v172 = sub_1BDAE53FC(v132, v133, (uint64_t *)&aBlock);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    ((void (*)(char *, unint64_t))v165)(v131, v86);
    *(_WORD *)(v129 + 22) = 2080;
    swift_beginAccess();
    v134 = swift_bridgeObjectRetain();
    v135 = MEMORY[0x1C3B78FB8](v134, v86);
    v137 = v136;
    swift_bridgeObjectRelease();
    v169 = sub_1BDAE53FC(v135, v137, (uint64_t *)&aBlock);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD918000, v126, (os_log_type_t)v157, "Successfully archived paper bundle %s:\nDatabase: %s\nAssets: %s", (uint8_t *)v129, 0x20u);
    v138 = v158;
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v138, -1, -1);
    MEMORY[0x1C3B7B478](v129, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    ((void (*)(void *, unint64_t))v165)(v94, v86);

    v130 = v86;
  }
  v143 = v151;
  v144 = v154;
  v145 = (void (*)(char *, char *, unint64_t))v155;
  ((void (*)(char *, char *, unint64_t))v155)(v151, v154, v130);
  swift_beginAccess();
  v146 = v171;
  v147 = (objc_class *)type metadata accessor for SystemPaperSyncArchive();
  v148 = (char *)objc_allocWithZone(v147);
  v145(&v148[OBJC_IVAR___ICSystemPaperSyncArchive_databaseArchive], v143, v130);
  *(_QWORD *)&v148[OBJC_IVAR___ICSystemPaperSyncArchive_assetArchives] = v146;
  v170.receiver = v148;
  v170.super_class = v147;
  swift_bridgeObjectRetain();
  v61 = objc_msgSendSuper2(&v170, sel_init);
  v149 = (void (*)(char *, unint64_t))v165;
  ((void (*)(char *, unint64_t))v165)(v143, v130);

  v149(v144, v130);
  v149(v162, v130);

  swift_bridgeObjectRelease();
  sub_1BDAC350C((uint64_t)v166, &qword_1ED23B1B0);
  swift_release();
  return v61;
}

unint64_t sub_1BDB5C138()
{
  unint64_t result;

  result = qword_1EF50E128;
  if (!qword_1EF50E128)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for SystemPaperDocumentError, &type metadata for SystemPaperDocumentError);
    atomic_store(result, (unint64_t *)&qword_1EF50E128);
  }
  return result;
}

void sub_1BDB5C17C(uint64_t a1, char *a2, char *a3, char *a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  void *v30;
  void *v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  id v51;
  void *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  unint64_t v55;
  id v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  id v77[4];

  v70 = a8;
  v71 = a6;
  v73 = a7;
  v74 = a2;
  v65 = a5;
  v77[2] = *(id *)MEMORY[0x1E0C80C00];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1BDBFC948();
  v14 = *(_QWORD *)(v72 - 8);
  v15 = MEMORY[0x1E0C80A78](v72);
  v67 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v64 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v64 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v64 - v23;
  v66 = a1;
  sub_1BDBFC8DC();
  sub_1BDBFC8C4();
  v68 = a3;
  v69 = a4;
  v77[0] = a3;
  v77[1] = a4;
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFC8DC();
  swift_bridgeObjectRelease();
  sub_1BDBFC8E8();
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v64 = v19;
  v26 = v19;
  v27 = v72;
  v75 = v25;
  v25(v26, v72);
  v28 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v28(v13, v24, v27);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v29(v13, 0, 1, v27);
  v30 = (void *)sub_1BDBFC8D0();
  v31 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v27) != 1)
  {
    v31 = (void *)sub_1BDBFC8D0();
    v75(v13, v27);
  }
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D64198]), sel_initWithDestinationURL_baseURL_, v30, v31);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100A0);
  v33 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BDC16BA0;
  v28((char *)(v34 + v33), v24, v27);
  v35 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v77[0] = 0;
  LODWORD(v33) = objc_msgSend(v32, sel_writeURLs_error_, v35, v77);

  if ((_DWORD)v33)
  {
    v36 = v77[0];
    v37 = v75;
    v75(v24, v27);

    v38 = v65;
    sub_1BDAC350C(v65, &qword_1ED23B1B0);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v38, v22, v27);
    v29((char *)v38, 0, 1, v27);
    v39 = v64;
    sub_1BDBFC8DC();
    v40 = v67;
    sub_1BDBFC8E8();
    v37(v39, v27);
    v41 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v42 = (void *)sub_1BDBFDEB4();

    if (!v42
      || (v43 = objc_msgSend(v42, sel_allObjects),
          v44 = sub_1BDBFD9E0(),
          v43,
          v45 = sub_1BDB5C998(v44),
          v46 = swift_bridgeObjectRelease(),
          !v45))
    {
      v46 = swift_bridgeObjectRelease();
      v45 = MEMORY[0x1E0DEE9D8];
    }
    MEMORY[0x1E0C80A78](v46);
    v47 = v68;
    *(&v64 - 6) = v74;
    *(&v64 - 5) = v47;
    v48 = v71;
    *(&v64 - 4) = v69;
    *(&v64 - 3) = (char *)v48;
    *(&v64 - 2) = v49;
    v50 = sub_1BDB57D4C((void (*)(char *))sub_1BDB65FC0, (uint64_t)(&v64 - 8), v45);
    swift_bridgeObjectRelease();
    sub_1BDBC4BF0(v50);

    v75(v40, v27);
  }
  else
  {
    v51 = v77[0];
    v52 = (void *)sub_1BDBFC87C();

    swift_willThrow();
    v53 = v75;
    v75(v22, v27);
    v53(v24, v27);
    if (qword_1ED23B148 != -1)
      swift_once();
    v54 = sub_1BDBFCE34();
    __swift_project_value_buffer(v54, (uint64_t)qword_1ED23B130);
    v55 = v73;
    swift_bridgeObjectRetain();
    v56 = v52;
    swift_bridgeObjectRetain();
    v57 = v52;
    v58 = sub_1BDBFCE1C();
    v59 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = swift_slowAlloc();
      v61 = (void *)swift_slowAlloc();
      v77[0] = v61;
      *(_DWORD *)v60 = 136315394;
      swift_bridgeObjectRetain();
      v76 = sub_1BDAE53FC(v71, v55, (uint64_t *)v77);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 12) = 2080;
      swift_getErrorValue();
      v62 = sub_1BDBFE9B8();
      v76 = sub_1BDAE53FC(v62, v63, (uint64_t *)v77);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD918000, v58, v59, "Failed archiving the database directory for paper bundle %s: %s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v61, -1, -1);
      MEMORY[0x1C3B7B478](v60, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t static ICSystemPaperDocument.databaseDirectory(at:)()
{
  return sub_1BDBFC8DC();
}

uint64_t static ICSystemPaperDocument.assetsDirectory(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BDBFC948();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC8DC();
  sub_1BDBFC8E8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BDB5C998(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  int v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _BYTE v25[32];
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1BDB22A50(0, v12, 0);
  if (!v12)
    return v26;
  v13 = a1 + 32;
  v23 = v9;
  v24 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    sub_1BDAE0BA0(v13, (uint64_t)v25);
    v14 = swift_dynamicCast();
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if (!v14)
      break;
    v15(v4, 0, 1, v5);
    v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v11, v4, v5);
    v16(v9, v11, v5);
    v17 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BDB22A50(0, *(_QWORD *)(v17 + 16) + 1, 1);
      v17 = v26;
    }
    v19 = *(_QWORD *)(v17 + 16);
    v18 = *(_QWORD *)(v17 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_1BDB22A50(v18 > 1, v19 + 1, 1);
      v17 = v26;
    }
    *(_QWORD *)(v17 + 16) = v19 + 1;
    v20 = v17
        + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
        + *(_QWORD *)(v6 + 72) * v19;
    v9 = v23;
    v16((char *)v20, v23, v5);
    v26 = v17;
    v13 += 32;
    if (!--v12)
      return v17;
  }
  v15(v4, 1, 1, v5);
  swift_release();
  sub_1BDAC350C((uint64_t)v4, &qword_1ED23B1B0);
  return 0;
}

uint64_t sub_1BDB5CBE0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  void *v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  unsigned int v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  unint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53[3];

  v48 = a6;
  v46 = a5;
  v49 = a3;
  v50 = a2;
  v51 = a7;
  v53[2] = *(id *)MEMORY[0x1E0C80C00];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BDBFC948();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v46 - v17;
  sub_1BDBFC8C4();
  v53[0] = v49;
  v53[1] = a4;
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFC8DC();
  swift_bridgeObjectRelease();
  sub_1BDBFC8E8();
  v49 = *(void **)(v13 + 8);
  ((void (*)(char *, uint64_t))v49)(v16, v12);
  v19 = a1;
  sub_1BDBFC900();
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
  v20(v11, 0, 1, v12);
  v50 = v18;
  v21 = (void *)sub_1BDBFC8D0();
  v22 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    v22 = (void *)sub_1BDBFC8D0();
    ((void (*)(char *, uint64_t))v49)(v11, v12);
  }
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D64198]), sel_initWithDestinationURL_baseURL_, v21, v22);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100A0);
  v24 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BDC16BA0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v25 + v24, v19, v12);
  v26 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v53[0] = 0;
  v27 = objc_msgSend(v23, sel_writeURLs_error_, v26, v53);

  if (v27)
  {
    v28 = v53[0];

    v29 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v51, v50, v12);
    v30 = 0;
  }
  else
  {
    v47 = v20;
    v31 = v53[0];
    v32 = v12;
    v33 = (void *)sub_1BDBFC87C();

    swift_willThrow();
    v34 = v32;
    ((void (*)(char *, uint64_t))v49)(v50, v32);
    if (qword_1ED23B148 != -1)
      swift_once();
    v35 = sub_1BDBFCE34();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED23B130);
    v36 = v48;
    swift_bridgeObjectRetain();
    v37 = v33;
    swift_bridgeObjectRetain();
    v38 = v33;
    v39 = sub_1BDBFCE1C();
    v40 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v42 = (void *)swift_slowAlloc();
      v53[0] = v42;
      *(_DWORD *)v41 = 136315394;
      swift_bridgeObjectRetain();
      v52 = sub_1BDAE53FC(v46, v36, (uint64_t *)v53);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 12) = 2080;
      swift_getErrorValue();
      v43 = sub_1BDBFE9B8();
      v52 = sub_1BDAE53FC(v43, v44, (uint64_t *)v53);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD918000, v39, v40, "Failed archiving a paper bundle %s asset: %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v42, -1, -1);
      MEMORY[0x1C3B7B478](v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v30 = 1;
    v29 = v51;
    v12 = v34;
    v20 = v47;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v29, v30, 1, v12);
}

void ICSystemPaperDocument.writeNewVersionFromSyncArchive(_:)(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  _QWORD *v43;
  os_log_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  char *v49;
  void (*v50)(uint64_t, char *, uint64_t);
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  id v53;
  void *v54;
  id v55;
  char *v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  void (*v62)(char *, char *);
  void *v63;
  id v64;
  void *v65;
  char *v66;
  unint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  void *v71;
  void *v72;
  void *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  unint64_t v77;
  void *v78;
  _QWORD *v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  char *v83;
  uint8_t *v84;
  unint64_t v85;
  void *v86;
  _QWORD *v87;
  char *v88;
  id v89;
  void *v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  unsigned int v96;
  id v97;
  char *v98;
  _QWORD *v99;
  void (*v100)(char *, uint64_t);
  id v101;
  void *v102;
  id v103;
  unint64_t v104;
  id v105;
  NSObject *v106;
  os_log_type_t v107;
  unint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  unint64_t v112;
  id v113;
  void *v114;
  char *v115;
  char *v116;
  NSObject *v117;
  Class isa;
  uint64_t v119;
  char *v120;
  __int128 v121;
  char *v122;
  id v123;
  id v124;
  void *v125;
  void *v126;
  id v127;
  id v128;
  id v129;
  void *v130;
  unsigned int v131;
  id v132;
  void *v133;
  id v134;
  void *v135;
  unint64_t v136;
  id v137;
  id v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  _QWORD *v146;
  char *v147;
  void (*v148)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v149;
  char *v150;
  unint64_t v151;
  char *v152;
  unint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  unint64_t v156;
  _QWORD *v157;
  void *v158;
  id v159;
  id v160;
  unint64_t v161;
  id v162;
  NSObject *v163;
  os_log_type_t v164;
  int v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  NSObject *v171;
  char *v172;
  char *v173;
  char *v174;
  void (*v175)(char *, char *);
  os_log_t v176;
  _QWORD *v177;
  __int128 v178;
  _QWORD *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  unint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  unsigned int (*v191)(uint64_t, uint64_t, uint64_t);
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  NSObject *v197;
  void (*v198)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v199;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v3 = (_QWORD *)sub_1BDBFCB40();
  v187 = *(v3 - 1);
  MEMORY[0x1E0C80A78](v3);
  v186 = (char *)&v176 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v188 = (char *)&v176 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v190 = (char *)&v176 - v9;
  MEMORY[0x1E0C80A78](v8);
  v196 = (char *)&v176 - v10;
  v11 = sub_1BDBFC948();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v184 = (char *)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v189 = (char *)&v176 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v181 = (char *)&v176 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v185 = (char *)&v176 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v176 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v194 = (char *)&v176 - v25;
  v180 = v26;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v176 - v27;
  v198 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                   + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment);
  v29 = objc_msgSend(v198, sel_ic_loggingIdentifier);
  v30 = sub_1BDBFD6F8();
  v32 = v31;

  if (qword_1ED23B148 != -1)
    swift_once();
  v33 = sub_1BDBFCE34();
  v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED23B130);
  swift_bridgeObjectRetain_n();
  v35 = a1;
  v197 = v34;
  v36 = sub_1BDBFCE1C();
  v37 = sub_1BDBFDED8();
  LODWORD(v191) = v37;
  v38 = os_log_type_enabled(v36, v37);
  v193 = v28;
  v192 = v30;
  v182 = v35;
  if (v38)
  {
    v39 = swift_slowAlloc();
    v179 = v3;
    v40 = v35;
    v41 = v39;
    v177 = (_QWORD *)swift_slowAlloc();
    *(_QWORD *)&v178 = swift_slowAlloc();
    aBlock[0] = (id)v178;
    *(_DWORD *)v41 = 136315394;
    v195 = v12;
    swift_bridgeObjectRetain();
    v199 = sub_1BDAE53FC(v30, v32, (uint64_t *)aBlock);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v41 + 12) = 2112;
    v176 = v36;
    v199 = (uint64_t)v40;
    v42 = v40;
    v12 = v195;
    sub_1BDBFE100();
    v43 = v177;
    *v177 = v40;
    v3 = v179;

    v44 = v176;
    _os_log_impl(&dword_1BD918000, v176, (os_log_type_t)v191, "Writing new version of paper bundle %s from archive: %@", (uint8_t *)v41, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v43, -1, -1);
    v45 = v178;
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v45, -1, -1);
    MEMORY[0x1C3B7B478](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v46 = objc_msgSend(v198, sel_paperBundleURL);
  v47 = (uint64_t)v196;
  if (!v46)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v196, 1, 1, v11);
    goto LABEL_14;
  }
  v48 = v46;
  v49 = v194;
  sub_1BDBFC90C();

  v50 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v50(v47, v49, v11);
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v51(v47, 0, 1, v11);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v52(v47, 1, v11) == 1)
  {
LABEL_14:
    sub_1BDAC350C(v47, &qword_1ED23B1B0);
    swift_bridgeObjectRetain();
    v74 = sub_1BDBFCE1C();
    v75 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = v32;
      v78 = (void *)swift_slowAlloc();
      aBlock[0] = v78;
      *(_DWORD *)v76 = 136315138;
      swift_bridgeObjectRetain();
      v199 = sub_1BDAE53FC(v192, v77, (uint64_t *)aBlock);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD918000, v74, v75, "Cannot write new paper bundle %s version because attachment paper bundle url is nil", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v78, -1, -1);
      MEMORY[0x1C3B7B478](v76, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1BDB5C138();
    swift_allocError();
    *v79 = 0;
    swift_willThrow();
    return;
  }
  v191 = v52;
  v195 = v12;
  v50((uint64_t)v193, (char *)v47, v11);
  v53 = objc_msgSend(v198, sel_cloudAccount);
  if (!v53)
  {
    v60 = (uint64_t)v190;
    v51((uint64_t)v190, 1, 1, v11);
    goto LABEL_19;
  }
  v54 = v53;
  v196 = (char *)v50;
  v55 = objc_msgSend(v53, sel_systemPaperTemporaryDirectoryURL);

  v198 = v51;
  v56 = v194;
  sub_1BDBFC90C();

  v57 = v186;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(char *, _QWORD *))(v187 + 8))(v57, v3);
  v58 = v185;
  sub_1BDBFC8DC();
  swift_bridgeObjectRelease();
  v59 = *(void (**)(char *, uint64_t))(v195 + 8);
  v59(v56, v11);
  v60 = (uint64_t)v190;
  sub_1BDBFC8E8();
  v61 = v58;
  v62 = (void (*)(char *, char *))v59;
  v59(v61, v11);
  v198(v60, 0, 1, v11);
  if (v191(v60, 1, v11) == 1)
  {
LABEL_19:
    sub_1BDAC350C(v60, &qword_1ED23B1B0);
    swift_bridgeObjectRetain();
    v80 = sub_1BDBFCE1C();
    v81 = sub_1BDBFDEE4();
    v82 = os_log_type_enabled(v80, v81);
    v83 = v193;
    if (v82)
    {
      v84 = (uint8_t *)swift_slowAlloc();
      v85 = v32;
      v86 = (void *)swift_slowAlloc();
      aBlock[0] = v86;
      *(_DWORD *)v84 = 136315138;
      swift_bridgeObjectRetain();
      v199 = sub_1BDAE53FC(v192, v85, (uint64_t *)aBlock);
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD918000, v80, v81, "Cannot write new paper bundle %s version because we cannot determine an appropriate temporary bundle", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v86, -1, -1);
      MEMORY[0x1C3B7B478](v84, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1BDB5C138();
    swift_allocError();
    *v87 = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v195 + 8))(v83, v11);
    return;
  }
  v187 = v32;
  ((void (*)(char *, uint64_t, uint64_t))v196)(v23, v60, v11);
  v63 = (void *)objc_opt_self();
  v64 = objc_msgSend(v63, sel_defaultManager);
  v65 = v183;
  NSFileManager.createDirectory(at:withIntermediateDirectories:)((uint64_t)v23, 1);
  v66 = v193;
  v186 = (char *)v59;
  if (v65)
  {

    v67 = v187;
    swift_bridgeObjectRetain();
    v68 = sub_1BDBFCE1C();
    v69 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v68, v69))
    {
      v181 = v23;
      v70 = (uint8_t *)swift_slowAlloc();
      v71 = (void *)swift_slowAlloc();
      v190 = (char *)v11;
      v72 = v71;
      aBlock[0] = v71;
      *(_DWORD *)v70 = 136315138;
      swift_bridgeObjectRetain();
      v199 = sub_1BDAE53FC(v192, v67, (uint64_t *)aBlock);
      v23 = v181;
      sub_1BDBFE100();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD918000, v68, v69, "Cannot write new paper bundle %s version because we cannot create a temporary bundle", v70, 0xCu);
      swift_arrayDestroy();
      v73 = v72;
      v11 = (uint64_t)v190;
      MEMORY[0x1C3B7B478](v73, -1, -1);
      MEMORY[0x1C3B7B478](v70, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1BDB5C138();
    swift_allocError();
    *v99 = 0;
    swift_willThrow();

    v100 = (void (*)(char *, uint64_t))v186;
    ((void (*)(char *, uint64_t))v186)(v23, v11);
    v100(v66, v11);
  }
  else
  {
    v179 = v63;
    v190 = (char *)v11;

    v88 = v181;
    sub_1BDBFC8DC();
    v89 = objc_allocWithZone(MEMORY[0x1E0D64190]);
    v90 = (void *)sub_1BDBFC8D0();
    v91 = (void *)sub_1BDBFC8D0();
    v92 = objc_msgSend(v89, sel_initWithSourceURL_destinationURL_, v90, v91);

    objc_msgSend(v92, sel_setOverwrite_, 1);
    objc_msgSend(v92, sel_setSkipsInvisibleHeaders_, 1);
    objc_msgSend(v92, sel_setWritesTemporaryFilesInsideDestination_, 0);
    aBlock[0] = 0;
    if (objc_msgSend(v92, sel_unarchiveResultURLs_error_, 0, aBlock))
    {
      v93 = aBlock[0];
      v94 = objc_msgSend(v179, sel_defaultManager);
      v95 = (void *)sub_1BDBFC8D0();
      aBlock[0] = 0;
      v96 = objc_msgSend(v94, sel_removeItemAtURL_error_, v95, aBlock);

      if (v96)
      {
        v97 = aBlock[0];
        v98 = v190;
        v62(v88, v190);

      }
      else
      {
        v113 = aBlock[0];
        v114 = (void *)sub_1BDBFC87C();

        swift_willThrow();
        v98 = v190;
        v62(v88, v190);
      }
      v115 = v184;
      v116 = v194;
      v181 = v23;
      sub_1BDBFC8DC();
      sub_1BDBFC8E8();
      v62(v116, v98);
      v117 = *(NSObject **)&v182[OBJC_IVAR___ICSystemPaperSyncArchive_assetArchives];
      isa = v117[2].isa;
      v119 = v195;
      v176 = v117;
      if (isa)
      {
        v120 = (char *)v117
             + ((*(unsigned __int8 *)(v195 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80));
        v183 = *(char **)(v195 + 72);
        v185 = *(char **)(v195 + 16);
        swift_bridgeObjectRetain();
        *(_QWORD *)&v121 = 136315394;
        v178 = v121;
        v177 = (_QWORD *)(MEMORY[0x1E0DEE9B8] + 8);
        v122 = v188;
        while (1)
        {
          ((void (*)(char *, char *, char *))v185)(v122, v120, v98);
          v198((uint64_t)v122, 0, 1, (uint64_t)v98);
          if (v191((uint64_t)v122, 1, (uint64_t)v98) == 1)
            break;
          ((void (*)(char *, char *, char *))v196)(v115, v122, v98);
          v124 = objc_allocWithZone(MEMORY[0x1E0D64190]);
          v125 = (void *)sub_1BDBFC8D0();
          v126 = (void *)sub_1BDBFC8D0();
          v127 = objc_msgSend(v124, sel_initWithSourceURL_destinationURL_, v125, v126, v176, v177);

          objc_msgSend(v127, sel_setOverwrite_, 1);
          objc_msgSend(v127, sel_setSkipsInvisibleHeaders_, 1);
          objc_msgSend(v127, sel_setWritesTemporaryFilesInsideDestination_, 0);
          aBlock[0] = 0;
          if (objc_msgSend(v127, sel_unarchiveResultURLs_error_, 0, aBlock))
          {
            v128 = aBlock[0];
            v129 = objc_msgSend(v179, sel_defaultManager);
            v130 = (void *)sub_1BDBFC8D0();
            aBlock[0] = 0;
            v131 = objc_msgSend(v129, sel_removeItemAtURL_error_, v130, aBlock);

            if (v131)
            {
              v123 = aBlock[0];
              v98 = v190;
              v62(v115, v190);

            }
            else
            {
              v132 = aBlock[0];
              v133 = (void *)sub_1BDBFC87C();

              swift_willThrow();
              v98 = v190;
              v62(v115, v190);
            }
          }
          else
          {
            v134 = aBlock[0];
            v135 = (void *)sub_1BDBFC87C();

            swift_willThrow();
            v136 = v187;
            swift_bridgeObjectRetain();
            v137 = v135;
            swift_bridgeObjectRetain();
            v138 = v135;
            v139 = sub_1BDBFCE1C();
            v140 = sub_1BDBFDEE4();
            if (os_log_type_enabled(v139, v140))
            {
              v141 = swift_slowAlloc();
              v182 = (char *)swift_slowAlloc();
              aBlock[0] = v182;
              *(_DWORD *)v141 = v178;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v141 + 4) = sub_1BDAE53FC(v192, v136, (uint64_t *)aBlock);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v141 + 12) = 2080;
              swift_getErrorValue();
              v142 = sub_1BDBFE9B8();
              *(_QWORD *)(v141 + 14) = sub_1BDAE53FC(v142, v143, (uint64_t *)aBlock);
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_1BD918000, v139, v140, "Failed to write new paper bundle %s asset version: %s", (uint8_t *)v141, 0x16u);
              v144 = v182;
              swift_arrayDestroy();
              MEMORY[0x1C3B7B478](v144, -1, -1);
              v145 = v141;
              v62 = (void (*)(char *, char *))v186;
              MEMORY[0x1C3B7B478](v145, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }

            v115 = v184;
            v98 = v190;
            v62(v184, v190);
          }
          v122 = v188;
          v120 = &v183[(_QWORD)v120];
          isa = (Class)((char *)isa - 1);
          v119 = v195;
          if (!isa)
            goto LABEL_46;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v122 = v188;
LABEL_46:
        v198((uint64_t)v122, 1, 1, (uint64_t)v98);
      }
      swift_bridgeObjectRelease();
      v148 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_init);
      v149 = (void *)sub_1BDBFC8D0();
      v150 = v194;
      (*(void (**)(char *, char *, char *))(v119 + 16))(v194, v181, v98);
      v151 = (*(unsigned __int8 *)(v119 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
      v152 = v98;
      v153 = (v180 + v151 + 7) & 0xFFFFFFFFFFFFFFF8;
      v154 = swift_allocObject();
      ((void (*)(unint64_t, char *, char *))v196)(v154 + v151, v150, v152);
      v155 = (_QWORD *)(v154 + v153);
      v156 = v187;
      *v155 = v192;
      v155[1] = v156;
      v157 = (_QWORD *)swift_allocObject();
      v157[2] = sub_1BDB647D4;
      v157[3] = v154;
      aBlock[4] = sub_1BDB661FC;
      aBlock[5] = v157;
      aBlock[0] = (id)MEMORY[0x1E0C809B0];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_1BDB1D3C4;
      aBlock[3] = &block_descriptor_13_0;
      v158 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      v198 = v148;
      objc_msgSend(v148, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v149, 0, aBlock, v158);
      _Block_release(v158);

      v159 = aBlock[0];
      LOBYTE(v156) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v156 & 1) != 0)
        __break(1u);
      if (v159)
      {
        v160 = v159;
        v161 = v187;
        swift_bridgeObjectRetain();
        v162 = v160;
        v163 = sub_1BDBFCE1C();
        v164 = sub_1BDBFDEE4();
        v165 = v164;
        v197 = v163;
        if (os_log_type_enabled(v163, v164))
        {
          v166 = swift_slowAlloc();
          v196 = (char *)swift_slowAlloc();
          aBlock[0] = v196;
          *(_DWORD *)v166 = 136315394;
          LODWORD(v195) = v165;
          swift_bridgeObjectRetain();
          v199 = sub_1BDAE53FC(v192, v161, (uint64_t *)aBlock);
          sub_1BDBFE100();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v166 + 12) = 2080;
          v194 = (char *)(v166 + 14);
          v167 = objc_msgSend(v162, sel_localizedDescription);
          v168 = sub_1BDBFD6F8();
          v170 = v169;

          v199 = sub_1BDAE53FC(v168, v170, (uint64_t *)aBlock);
          sub_1BDBFE100();

          swift_bridgeObjectRelease();
          v171 = v197;
          _os_log_impl(&dword_1BD918000, v197, (os_log_type_t)v195, "Failed to archive paper bundle %s to disk for sync due to file coordination error: %s", (uint8_t *)v166, 0x16u);
          v172 = v196;
          swift_arrayDestroy();
          MEMORY[0x1C3B7B478](v172, -1, -1);
          MEMORY[0x1C3B7B478](v166, -1, -1);

        }
        else
        {
          swift_bridgeObjectRelease_n();

        }
        v174 = v190;
        v175 = (void (*)(char *, char *))v186;
        ((void (*)(char *, char *))v186)(v189, v190);
        v175(v181, v174);
        v175(v193, v174);
      }
      else
      {
        swift_bridgeObjectRelease();

        v173 = v190;
        v62(v189, v190);
        v62(v181, v173);
        v62(v193, v173);
      }
      swift_release();

    }
    else
    {
      v101 = aBlock[0];
      v102 = (void *)sub_1BDBFC87C();

      swift_willThrow();
      v62(v88, v190);
      v103 = v102;
      v104 = v187;
      swift_bridgeObjectRetain();
      v105 = v102;
      v106 = sub_1BDBFCE1C();
      v107 = sub_1BDBFDEE4();
      if (os_log_type_enabled(v106, v107))
      {
        v108 = v104;
        v109 = swift_slowAlloc();
        v110 = (void *)swift_slowAlloc();
        aBlock[0] = v110;
        *(_DWORD *)v109 = 136315394;
        swift_bridgeObjectRetain();
        v199 = sub_1BDAE53FC(v192, v108, (uint64_t *)aBlock);
        v181 = v23;
        sub_1BDBFE100();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v109 + 12) = 2080;
        swift_getErrorValue();
        v111 = sub_1BDBFE9B8();
        v199 = sub_1BDAE53FC(v111, v112, (uint64_t *)aBlock);
        v23 = v181;
        v62 = (void (*)(char *, char *))v186;
        sub_1BDBFE100();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BD918000, v106, v107, "Cannot write new paper bundle %s version we failed to extract the database: %s", (uint8_t *)v109, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B7B478](v110, -1, -1);
        MEMORY[0x1C3B7B478](v109, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      sub_1BDB5C138();
      swift_allocError();
      *v146 = 0;
      swift_willThrow();

      v147 = v190;
      v62(v23, v190);
      v62(v66, v147);
    }
  }
}

void sub_1BDB5EAB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  unsigned int v15;
  void (*v16)(char *, uint64_t, uint64_t);
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void (**v22)(char *, id);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void (*v27)(char *, id);
  void *v28;
  void *v29;
  unsigned int v30;
  id v31;
  char **v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  unsigned int v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  unsigned int v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  _QWORD v69[2];
  uint64_t v70;
  unint64_t v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77[2];

  v70 = a3;
  v71 = a4;
  v72 = 0;
  v77[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1BDBFC948();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v73 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v69 - v10;
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_defaultManager);
  sub_1BDBFC918();
  v14 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v74 = a1;
  v75 = v6;
  v16(v11, a1, v6);
  if (!v15)
  {
    v22 = (void (**)(char *, id))(v7 + 8);
    v32 = &selRef_containsSharedNotesOrSharedDescendantFolders_;
    v33 = v75;
    v34 = v72;
LABEL_8:
    v27 = *v22;
    (*v22)(v11, (id)v33);
    goto LABEL_9;
  }
  v69[1] = a2;
  v17 = objc_msgSend(v12, sel_defaultManager);
  v18 = (void *)sub_1BDBFC8D0();
  type metadata accessor for URLResourceKey(0);
  v19 = (void *)sub_1BDBFD9C8();
  v77[0] = 0;
  v20 = objc_msgSend(v17, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v18, v19, 0, v77);

  v21 = v77[0];
  v22 = (void (**)(char *, id))(v7 + 8);
  if (!v20)
  {
    v35 = v77[0];
    v36 = (void *)sub_1BDBFC87C();

    swift_willThrow();
    v34 = 0;
    v32 = &selRef_containsSharedNotesOrSharedDescendantFolders_;
    v33 = v75;
    goto LABEL_8;
  }
  v23 = v75;
  v24 = sub_1BDBFD9E0();
  v25 = v21;

  v26 = *(_QWORD *)(v24 + 16);
  swift_bridgeObjectRelease();
  v27 = *v22;
  (*v22)(v11, (id)v23);
  if (!v26)
  {
    v32 = &selRef_containsSharedNotesOrSharedDescendantFolders_;
    v34 = v72;
LABEL_9:
    v37 = objc_msgSend(v12, v32[248]);
    v38 = (uint64_t)v73;
    sub_1BDBFC900();
    NSFileManager.createDirectory(at:withIntermediateDirectories:)(v38, 1);
    if (v34)
    {

      v27((char *)v38, (id)v75);
    }
    else
    {
      v27((char *)v38, (id)v75);

    }
    v39 = objc_msgSend(v12, v32[248]);
    v40 = (void *)sub_1BDBFC8D0();
    v77[0] = 0;
    v41 = objc_msgSend(v39, sel_removeItemAtURL_error_, v40, v77);

    if (v41)
    {
      v42 = v77[0];
    }
    else
    {
      v43 = v77[0];
      v44 = (void *)sub_1BDBFC87C();

      swift_willThrow();
    }
    v45 = objc_msgSend(v12, v32[248]);
    v46 = (void *)sub_1BDBFC8D0();
    v47 = (void *)sub_1BDBFC8D0();
    v77[0] = 0;
    v48 = objc_msgSend(v45, sel_moveItemAtURL_toURL_error_, v46, v47, v77);

    v49 = v77[0];
    if (v48)
    {
      v50 = v77[0];
      return;
    }
    goto LABEL_21;
  }
  v28 = (void *)objc_opt_self();
  v29 = (void *)sub_1BDBFC8D0();
  v77[0] = 0;
  v30 = objc_msgSend(v28, sel_removeOtherVersionsOfItemAtURL_error_, v29, v77);

  if (v30)
  {
    v31 = v77[0];
  }
  else
  {
    v51 = v77[0];
    v52 = (void *)sub_1BDBFC87C();

    swift_willThrow();
  }
  v53 = (void *)sub_1BDBFC8D0();
  v54 = (void *)sub_1BDBFC8D0();
  v77[0] = 0;
  v55 = objc_msgSend(v28, sel_ic_addVersionOfItemAtURL_withContentsOfURL_options_error_, v53, v54, 1, v77);

  v49 = v77[0];
  if (v55)
  {
    v56 = v77[0];

    return;
  }
LABEL_21:
  v75 = (uint64_t)v49;
  v57 = v49;
  v58 = (void *)sub_1BDBFC87C();

  swift_willThrow();
  v59 = v71;
  if (qword_1ED23B148 != -1)
    swift_once();
  v60 = sub_1BDBFCE34();
  __swift_project_value_buffer(v60, (uint64_t)qword_1ED23B130);
  swift_bridgeObjectRetain();
  v61 = v58;
  swift_bridgeObjectRetain();
  v62 = v58;
  v63 = sub_1BDBFCE1C();
  v64 = sub_1BDBFDEE4();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = swift_slowAlloc();
    v66 = (void *)swift_slowAlloc();
    v77[0] = v66;
    *(_DWORD *)v65 = 136315394;
    swift_bridgeObjectRetain();
    v76 = sub_1BDAE53FC(v70, v59, (uint64_t *)v77);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v65 + 12) = 2080;
    swift_getErrorValue();
    v67 = sub_1BDBFE9B8();
    v76 = sub_1BDAE53FC(v67, v68, (uint64_t *)v77);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BD918000, v63, v64, "Failed to write new paper bundle %s version: %s", (uint8_t *)v65, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v66, -1, -1);
    MEMORY[0x1C3B7B478](v65, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void ICSystemPaperDocument.copyAndArchivePaperBundle(to:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint8_t *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  id v37;
  id v38;
  void *v39;
  unsigned int v40;
  int v41;
  char *v42;
  id v43;
  id v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  id v59;
  uint8_t *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  id v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t *v69;
  id v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  void (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  unint64_t v81;
  uint64_t v82;
  void *v83;
  unsigned int v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  id v97;
  void (*v98)(char *, uint64_t);
  id v99;
  id v100;
  void *v101;
  unsigned int v102;
  id v103;
  id v104;
  void *v105;
  void (*v106)(char *, uint64_t);
  unsigned int (*v107)(char *, uint64_t, uint64_t);
  void (*v108)(char *, _QWORD, uint64_t, uint64_t);
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  id v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t ObjectType;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint8_t *v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  id v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;

  v3 = v1;
  v131 = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v5 = sub_1BDBFCB40();
  v118 = *(_QWORD *)(v5 - 8);
  v119 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v115 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v107 - v11;
  v13 = sub_1BDBFC948();
  v124 = *(uint8_t **)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v113 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v117 = (char *)&v107 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v114 = (char *)&v107 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v120 = (char *)&v107 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v107 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v107 - v25;
  v27 = *(void **)&v3[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  v28 = objc_msgSend(v27, sel_paperBundleModel);
  if (!v28)
  {
    if (qword_1ED23B148 != -1)
      swift_once();
    v51 = sub_1BDBFCE34();
    __swift_project_value_buffer(v51, (uint64_t)qword_1ED23B130);
    v52 = sub_1BDBFCE1C();
    v53 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_1BD918000, v52, v53, "Cannot archive paper bundle because attachment model is missing", v54, 2u);
      MEMORY[0x1C3B7B478](v54, -1, -1);
    }

    return;
  }
  v112 = v26;
  v122 = v13;
  v123 = v28;
  v121 = v2;
  v111 = (id)objc_opt_self();
  v29 = objc_msgSend(v111, sel_defaultManager);
  v110 = a1;
  v30 = (void *)sub_1BDBFC8D0();
  v31 = objc_msgSend(v29, sel_ic_temporaryDirectoryAppropriateForDestination_, v30);

  if (!v31)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v124 + 7))(v12, 1, 1, v122);
    goto LABEL_14;
  }
  sub_1BDBFC90C();

  v32 = v124;
  v33 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v124 + 4);
  v34 = v122;
  v33(v12, v24, v122);
  v108 = (void (*)(char *, _QWORD, uint64_t, uint64_t))*((_QWORD *)v32 + 7);
  v108(v12, 0, 1, v34);
  v35 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v32 + 6);
  if (v35(v12, 1, v34) == 1)
  {
LABEL_14:
    sub_1BDAC350C((uint64_t)v12, &qword_1ED23B1B0);
    if (qword_1ED23B148 != -1)
      swift_once();
    v55 = sub_1BDBFCE34();
    __swift_project_value_buffer(v55, (uint64_t)qword_1ED23B130);
    v56 = sub_1BDBFCE1C();
    v57 = sub_1BDBFDEE4();
    v58 = os_log_type_enabled(v56, v57);
    v59 = v123;
    if (v58)
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_1BD918000, v56, v57, "Cannot archive paper bundle because we cannot create a temporary directory", v60, 2u);
      MEMORY[0x1C3B7B478](v60, -1, -1);
    }

    return;
  }
  v107 = v35;
  v36 = v112;
  v33(v112, v12, v34);
  v37 = objc_msgSend(v111, sel_defaultManager);
  v38 = objc_msgSend(v123, sel_paperBundleURL);
  sub_1BDBFC90C();

  sub_1BDBFC918();
  v109 = (void (*)(char *, uint64_t))*((_QWORD *)v32 + 1);
  v109(v24, v34);
  v39 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v37, sel_fileExistsAtPath_, v39);

  if (v40)
  {
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    sub_1BDBFCAEC();
    (*(void (**)(char *, uint64_t))(v118 + 8))(v7, v119);
    sub_1BDBFC8DC();
    swift_bridgeObjectRelease();
    v41 = (unsigned __int16)objc_msgSend(v27, sel_attachmentType);
    v42 = v36;
    if ((v41 - 14) >= 2)
    {
      v48 = v122;
      v43 = v123;
      v49 = v107;
      if (v41 != 13)
      {
        sub_1BDBFE52C();
        __break(1u);
        return;
      }
      v70 = objc_msgSend(v123, sel_paperBundleURL);
      v45 = (uint64_t)v114;
      sub_1BDBFC90C();

      if (objc_msgSend(v27, sel_isPasswordProtected))
      {
        *(_QWORD *)&v130 = ObjectType;
        *((_QWORD *)&v130 + 1) = sub_1BDB66044(&qword_1EF50E130, v71, (uint64_t (*)(uint64_t))type metadata accessor for ICSystemPaperDocument, (uint64_t)&protocol conformance descriptor for ICSystemPaperDocument);
        v72 = v3;
      }
      else
      {
        v3 = 0;
        v129 = 0u;
        v130 = 0u;
      }
      v68 = (uint64_t)v120;
      v127 = 0;
      v128 = v3;
      v125 = 0u;
      v126 = 0u;
      v69 = &qword_1ED23AE20;
    }
    else
    {
      v43 = v123;
      v44 = objc_msgSend(v123, sel_paperBundleURL);
      v45 = (uint64_t)v117;
      sub_1BDBFC90C();

      v46 = objc_msgSend(v27, sel_isPasswordProtected);
      v48 = v122;
      v49 = v107;
      if (v46)
      {
        *(_QWORD *)&v130 = ObjectType;
        *((_QWORD *)&v130 + 1) = sub_1BDB66044(&qword_1EF50E130, v47, (uint64_t (*)(uint64_t))type metadata accessor for ICSystemPaperDocument, (uint64_t)&protocol conformance descriptor for ICSystemPaperDocument);
        v50 = v3;
      }
      else
      {
        v3 = 0;
        v129 = 0u;
        v130 = 0u;
      }
      v68 = (uint64_t)v120;
      v127 = 0;
      v128 = v3;
      v125 = 0u;
      v126 = 0u;
      v69 = &qword_1EF50E318;
    }
    v73 = v121;
    sub_1BDB5FF90(v45, (uint64_t)&v128, v68, (uint64_t)&v125, v69);
    if (v73)
    {

      sub_1BDAC350C((uint64_t)&v125, &qword_1ED23B128);
      v74 = (void (*)(uint64_t, uint64_t))v109;
      v109((char *)v45, v48);
      v74(v68, v48);
      v74((uint64_t)v42, v48);
      sub_1BDAC350C((uint64_t)&v128, &qword_1ED23B128);
    }
    else
    {
      sub_1BDAC350C((uint64_t)&v125, &qword_1ED23B128);
      v109((char *)v45, v48);
      sub_1BDAC350C((uint64_t)&v128, &qword_1ED23B128);
      v75 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v124 + 2);
      v76 = v115;
      v75(v115, v68, v48);
      v108(v76, 0, 1, v48);
      v77 = v110;
      v78 = (void *)sub_1BDBFC8D0();
      if (v49(v76, 1, v48) == 1)
      {
        v79 = 0;
      }
      else
      {
        v79 = (void *)sub_1BDBFC8D0();
        v109(v76, v48);
      }
      v80 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D64198]), sel_initWithDestinationURL_baseURL_, v78, v79);

      objc_msgSend(v80, sel_setUsesCompression_, 1);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100A0);
      v81 = (v124[80] + 32) & ~(unint64_t)v124[80];
      v82 = swift_allocObject();
      *(_OWORD *)(v82 + 16) = xmmword_1BDC16BA0;
      v75((char *)(v82 + v81), v68, v48);
      v83 = (void *)sub_1BDBFD9C8();
      swift_bridgeObjectRelease();
      v128 = 0;
      v84 = objc_msgSend(v80, sel_writeURLs_error_, v83, &v128);

      if (v84)
      {
        v85 = qword_1ED23B148;
        v86 = v128;
        if (v85 != -1)
          swift_once();
        v87 = sub_1BDBFCE34();
        __swift_project_value_buffer(v87, (uint64_t)qword_1ED23B130);
        v88 = v113;
        v89 = v77;
        v90 = v122;
        v75(v113, v89, v122);
        v91 = sub_1BDBFCE1C();
        v92 = sub_1BDBFDED8();
        if (os_log_type_enabled(v91, v92))
        {
          v93 = (uint8_t *)swift_slowAlloc();
          v94 = (void *)swift_slowAlloc();
          v128 = v94;
          *(_DWORD *)v93 = 136315138;
          v124 = v93 + 4;
          sub_1BDB66044(&qword_1ED23AB00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
          v95 = sub_1BDBFE760();
          *(_QWORD *)&v125 = sub_1BDAE53FC(v95, v96, (uint64_t *)&v128);
          v68 = (uint64_t)v120;
          sub_1BDBFE100();
          swift_bridgeObjectRelease();
          v109(v113, v90);
          _os_log_impl(&dword_1BD918000, v91, v92, "Successfully archived paper bundle to %s", v93, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B7B478](v94, -1, -1);
          MEMORY[0x1C3B7B478](v93, -1, -1);
        }
        else
        {
          v109(v88, v90);
        }

        v99 = v123;
        v100 = objc_msgSend(v111, sel_defaultManager);
        v101 = (void *)sub_1BDBFC8D0();
        v128 = 0;
        v102 = objc_msgSend(v100, sel_removeItemAtURL_error_, v101, &v128);

        if (v102)
        {
          v103 = v128;

        }
        else
        {
          v104 = v128;
          v105 = (void *)sub_1BDBFC87C();

          swift_willThrow();
        }
        v106 = v109;
        v109((char *)v68, v90);
        v106(v112, v90);
      }
      else
      {
        v97 = v128;
        sub_1BDBFC87C();

        swift_willThrow();
        v98 = v109;
        v109((char *)v68, v48);
        v98(v112, v48);
      }
    }
  }
  else
  {
    if (qword_1ED23B148 != -1)
      swift_once();
    v61 = sub_1BDBFCE34();
    __swift_project_value_buffer(v61, (uint64_t)qword_1ED23B130);
    v62 = sub_1BDBFCE1C();
    v63 = sub_1BDBFDEE4();
    v64 = os_log_type_enabled(v62, v63);
    v65 = v122;
    v66 = v123;
    if (v64)
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v67 = 0;
      _os_log_impl(&dword_1BD918000, v62, v63, "Cannot archive paper bundle because the paper bundle does not exist", v67, 2u);
      MEMORY[0x1C3B7B478](v67, -1, -1);
    }

    v109(v112, v65);
  }
}

void sub_1BDB5FF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  _QWORD v31[2];
  uint64_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a5;
  v33 = a1;
  v8 = sub_1BDBFC948();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_sharedState);
  objc_msgSend(v13, sel_beginBlockingDeauthentication);

  sub_1BDBFD554();
  v14 = (void *)MEMORY[0x1C3B78AF0](1, a2);
  v15 = (void *)MEMORY[0x1C3B78AF0](1, a4);
  __swift_instantiateConcreteTypeFromMangledName(v32);
  v16 = v34;
  sub_1BDBFD44C();
  if (v16)
  {

    v17 = objc_msgSend(v12, sel_sharedState);
  }
  else
  {
    v33 = 0;
    v34 = v12;
    if (qword_1ED23B148 != -1)
      swift_once();
    v18 = sub_1BDBFCE34();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED23B130);
    v19 = v9;
    v20 = v11;
    v21 = v11;
    v22 = v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v21, a3, v8);
    v23 = sub_1BDBFCE1C();
    v24 = sub_1BDBFDED8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v31[0] = v20;
      v27 = v26;
      v36 = v26;
      v32 = (uint64_t *)v19;
      *(_DWORD *)v25 = 136315138;
      v31[1] = v25 + 4;
      sub_1BDB66044(&qword_1ED23AB00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v28 = sub_1BDBFE760();
      v35 = sub_1BDAE53FC(v28, v29, &v36);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      ((void (*)(_QWORD, uint64_t))v32[1])(v31[0], v22);
      _os_log_impl(&dword_1BD918000, v23, v24, "Wrote copied PaperKit bundle to: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v27, -1, -1);
      MEMORY[0x1C3B7B478](v25, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v22);
    }

    v17 = objc_msgSend(v34, sel_sharedState);
  }
  v30 = v17;
  objc_msgSend(v30, sel_endBlockingDeauthentication);

}

void ICSystemPaperDocument.restorePaperBundle(from:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  id v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  id v62;
  int v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  id v74;
  void *v75;
  unsigned int v76;
  id v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  char *v84;
  char *v85;
  uint64_t ObjectType;
  id v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  char *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;

  v102 = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v2 = (_QWORD *)sub_1BDBFCB40();
  v91 = *(v2 - 1);
  v92 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFC948();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v89 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v85 = (char *)&v81 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v88 = (char *)&v81 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v93 = (char *)&v81 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v81 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v81 - v21;
  v87 = v0;
  v23 = *(void **)&v0[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  v24 = objc_msgSend(v23, sel_paperBundleModel);
  if (!v24)
  {
    if (qword_1ED23B148 != -1)
      swift_once();
    v51 = sub_1BDBFCE34();
    __swift_project_value_buffer(v51, (uint64_t)qword_1ED23B130);
    v52 = sub_1BDBFCE1C();
    v53 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_1BD918000, v52, v53, "Cannot restore paper bundle because attachment model is missing", v54, 2u);
      MEMORY[0x1C3B7B478](v54, -1, -1);
    }

    return;
  }
  v83 = v23;
  v84 = v22;
  v94 = v24;
  v95 = v8;
  v90 = v1;
  v82 = (id)objc_opt_self();
  v25 = objc_msgSend(v82, sel_defaultManager);
  v26 = (void *)sub_1BDBFC8D0();
  v27 = objc_msgSend(v25, sel_ic_temporaryDirectoryAppropriateForDestination_, v26);

  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v95);
    goto LABEL_15;
  }
  sub_1BDBFC90C();

  v28 = v9;
  v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v30 = v95;
  v29(v7, v20, v95);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v30) == 1)
  {
LABEL_15:
    sub_1BDAC350C((uint64_t)v7, &qword_1ED23B1B0);
    if (qword_1ED23B148 != -1)
      swift_once();
    v55 = sub_1BDBFCE34();
    __swift_project_value_buffer(v55, (uint64_t)qword_1ED23B130);
    v56 = sub_1BDBFCE1C();
    v57 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_1BD918000, v56, v57, "Cannot archive paper bundle because we cannot create a temporary directory", v58, 2u);
      MEMORY[0x1C3B7B478](v58, -1, -1);
    }

    return;
  }
  v31 = v84;
  v29(v84, v7, v30);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  v32 = v30;
  (*(void (**)(char *, id))(v91 + 8))(v4, v92);
  v33 = (uint64_t)v93;
  sub_1BDBFC8DC();
  swift_bridgeObjectRelease();
  v34 = objc_allocWithZone(MEMORY[0x1E0D64190]);
  v35 = (void *)sub_1BDBFC8D0();
  v36 = (void *)sub_1BDBFC8D0();
  v37 = objc_msgSend(v34, sel_initWithSourceURL_destinationURL_, v35, v36);

  objc_msgSend(v37, sel_setWritesTemporaryFilesInsideDestination_, 0);
  objc_msgSend(v37, sel_setOverwrite_, 1);
  objc_msgSend(v37, sel_setSkipsInvisibleHeaders_, 1);
  *(_QWORD *)&v99 = 0;
  if (!objc_msgSend(v37, sel_unarchiveResultURLs_error_, 0, &v99))
  {
    v59 = (id)v99;
    sub_1BDBFC87C();

    swift_willThrow();
    v60 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v60(v33, v32);
    v60((uint64_t)v31, v32);
    return;
  }
  v92 = v37;
  v38 = qword_1ED23B148;
  v39 = (id)v99;
  if (v38 != -1)
    swift_once();
  v40 = sub_1BDBFCE34();
  __swift_project_value_buffer(v40, (uint64_t)qword_1ED23B130);
  v41 = v88;
  v42 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v88, v33, v95);
  v43 = sub_1BDBFCE1C();
  v44 = sub_1BDBFDED8();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    *(_QWORD *)&v99 = v46;
    *(_DWORD *)v45 = 136315138;
    sub_1BDB66044(&qword_1ED23AB00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v47 = sub_1BDBFE760();
    v96 = sub_1BDAE53FC(v47, v48, (uint64_t *)&v99);
    v42 = v95;
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    v49 = *(void (**)(char *, uint64_t))(v28 + 8);
    v49(v41, v42);
    _os_log_impl(&dword_1BD918000, v43, v44, "Unarchived paper bundle to temporary directory: %s", v45, 0xCu);
    swift_arrayDestroy();
    v50 = v46;
    v33 = (uint64_t)v93;
    MEMORY[0x1C3B7B478](v50, -1, -1);
    MEMORY[0x1C3B7B478](v45, -1, -1);
  }
  else
  {
    v49 = *(void (**)(char *, uint64_t))(v28 + 8);
    v49(v41, v42);
  }

  v61 = (uint64_t)v89;
  v62 = v83;
  v63 = (unsigned __int16)objc_msgSend(v83, sel_attachmentType);
  if ((v63 - 14) >= 2)
  {
    if (v63 != 13)
    {
      sub_1BDBFE52C();
      __break(1u);
      return;
    }
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
    v69 = objc_msgSend(v94, sel_paperBundleURL);
    v61 = (uint64_t)v85;
    sub_1BDBFC90C();

    if (objc_msgSend(v83, sel_isPasswordProtected))
    {
      *(_QWORD *)&v98 = ObjectType;
      *((_QWORD *)&v98 + 1) = sub_1BDB66044(&qword_1EF50E130, v70, (uint64_t (*)(uint64_t))type metadata accessor for ICSystemPaperDocument, (uint64_t)&protocol conformance descriptor for ICSystemPaperDocument);
      v71 = (uint64_t)v87;
      v72 = v87;
    }
    else
    {
      v71 = 0;
      v97 = 0u;
      v98 = 0u;
    }
    v96 = v71;
    v68 = &qword_1ED23AE20;
  }
  else
  {
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
    v64 = objc_msgSend(v94, sel_paperBundleURL);
    sub_1BDBFC90C();

    if (objc_msgSend(v62, sel_isPasswordProtected))
    {
      *(_QWORD *)&v98 = ObjectType;
      *((_QWORD *)&v98 + 1) = sub_1BDB66044(&qword_1EF50E130, v65, (uint64_t (*)(uint64_t))type metadata accessor for ICSystemPaperDocument, (uint64_t)&protocol conformance descriptor for ICSystemPaperDocument);
      v66 = (uint64_t)v87;
      v67 = v87;
    }
    else
    {
      v66 = 0;
      v97 = 0u;
      v98 = 0u;
    }
    v96 = v66;
    v68 = &qword_1EF50E318;
  }
  v73 = v90;
  sub_1BDB5FF90(v33, (uint64_t)&v99, v61, (uint64_t)&v96, v68);
  if (v73)
  {

    v49((char *)v61, v42);
    sub_1BDAC350C((uint64_t)&v99, &qword_1ED23B128);
    v49((char *)v33, v42);
    v49(v84, v42);
    sub_1BDAC350C((uint64_t)&v96, &qword_1ED23B128);
  }
  else
  {
    v49((char *)v61, v42);
    sub_1BDAC350C((uint64_t)&v99, &qword_1ED23B128);
    sub_1BDAC350C((uint64_t)&v96, &qword_1ED23B128);
    v74 = objc_msgSend(v82, sel_defaultManager);
    v75 = (void *)sub_1BDBFC8D0();
    *(_QWORD *)&v99 = 0;
    v76 = objc_msgSend(v74, sel_removeItemAtURL_error_, v75, &v99);

    if (v76)
    {
      v77 = (id)v99;

    }
    else
    {
      v78 = (id)v99;
      v79 = (void *)sub_1BDBFC87C();

      swift_willThrow();
    }
    v80 = v95;
    v49((char *)v33, v95);
    v49(v84, v80);
  }
}

uint64_t sub_1BDB60D9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v7 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC90C();
  v11 = a1;
  a5(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  return 1;
}

void static ICSystemPaperDocument.writePaperBundle<A>(_:model:url:)()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_sharedState);
  objc_msgSend(v1, sel_beginBlockingDeauthentication);

  sub_1BDBFD47C();
  sub_1BDBFD464();
  v2 = objc_msgSend(v0, sel_sharedState);
  objc_msgSend(v2, sel_endBlockingDeauthentication);

}

uint64_t ICSystemPaperDocument.encrypt(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1BDB66A7C(*(void **)(v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment));
  sub_1BDB4EB54(a1, a2);
  return a1;
}

NSObject *ICSystemPaperDocument.decrypt(_:)(NSObject *a1, unint64_t a2)
{
  uint64_t v2;

  return static ICEncryptionDelegateSupport.decrypt(attachment:data:)(*(void **)(v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), a1, a2);
}

uint64_t ICSystemPaperDocument.encrypt(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return static ICEncryptionDelegateSupport.encrypt(attachment:url:)(*(void **)(v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), a1, a2);
}

void ICSystemPaperDocument.updateGraphDestinations(usingInlineAttachmentIdentifierMap:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void *v44;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AB78);
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BDBFC948();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v43 = (char *)&v38 - v17;
  v18 = *(void **)&v3[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  v19 = objc_msgSend(v18, sel_managedObjectContext);
  if (v19)
  {
    v20 = v19;
    v40 = a1;
    v41 = v13;
    MEMORY[0x1E0C80A78](v19);
    v39 = v3;
    *(&v38 - 2) = (uint64_t)v3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AE30);
    sub_1BDBFDFF8();

    v21 = v44;
    if (v44)
    {
      v22 = objc_msgSend(v18, sel_paperBundleModel);
      if (v22)
      {
        v23 = v22;
        v24 = objc_msgSend(v22, sel_paperBundleURL);

        sub_1BDBFC90C();
        v25 = v41;
        v26 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
        v26(v11, v16, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v12) != 1)
        {
          v27 = v43;
          v26(v43, v11, v12);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE20);
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE28);
          v29 = (uint64_t)v42;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v42, 1, 1, v28);
          v30 = v27;
          v31 = MEMORY[0x1C3B78A0C](v21, v29, v27);
          sub_1BDAC350C(v29, &qword_1ED23AB78);
          v32 = (_QWORD *)swift_allocObject();
          v32[2] = a2;
          v32[3] = a3;
          v33 = v39;
          v34 = v40;
          v32[4] = v39;
          v32[5] = v34;
          v32[6] = v31;
          sub_1BDAE2080((uint64_t)a2);
          v35 = v33;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1BDBFD470();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v12);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v11, 1, 1, v12);
      }

      sub_1BDAC350C((uint64_t)v11, &qword_1ED23B1B0);
    }
  }
  if (a2)
  {
    sub_1BDB5C138();
    v36 = (void *)swift_allocError();
    *v37 = 0;
    a2();

  }
}

void sub_1BDB6161C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(void);
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD v27[2];
  void (*v28)(void);

  v27[1] = a6;
  v28 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AB78);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE28);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v27 - v18;
  sub_1BDB157E4(a1, (uint64_t)v12, &qword_1ED23AB78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BDAC350C((uint64_t)v12, &qword_1ED23AB78);
    v20 = v28;
    if (v28)
    {
      sub_1BDB5C138();
      v21 = (void *)swift_allocError();
      *v22 = 0;
      v20();

    }
  }
  else
  {
    v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    MEMORY[0x1E0C80A78](v23);
    v27[-2] = a4;
    v27[-1] = a5;
    sub_1BDBFD4B8();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    v24 = swift_allocObject();
    v25 = (uint64_t)v28;
    *(_QWORD *)(v24 + 16) = v28;
    *(_QWORD *)(v24 + 24) = a3;
    sub_1BDAE2080(v25);
    sub_1BDBFD404();
    swift_release();
    v26 = *(void (**)(char *, uint64_t))(v14 + 8);
    v26(v17, v13);
    v26(v19, v13);
  }
}

uint64_t sub_1BDB61858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(_QWORD, _QWORD, _QWORD);
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, _QWORD);
  void (*v42)(_BYTE *, _QWORD);
  void (*v43)(_BYTE *, _QWORD);
  void (*v44)(_BYTE *, _QWORD);
  char *v45;
  uint64_t v46;
  unsigned int (*v47)(_QWORD, _QWORD, _QWORD);
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[32];
  _BYTE v70[40];
  uint64_t v71;

  v57 = a2;
  v58 = a3;
  v62 = a1;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2B0);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v54 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1BDBFD308();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v51 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2B8);
  MEMORY[0x1E0C80A78](v5);
  v68 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2C0);
  v7 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2C8);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2D0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2D8);
  v66 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1BDBFD284();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D65428];
  v18 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2E0);
  v46 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDB66044((unint64_t *)&qword_1EF50E188, 255, v17, MEMORY[0x1E0D65410]);
  sub_1BDBFD4D0();
  sub_1BDBFD260();
  v24 = v20;
  v25 = v60;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v65);
  sub_1BDBFD38C();
  v26 = v61;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v16, v14);
  v65 = (uint64_t)v23;
  v66 = v21;
  sub_1BDBFD3B0();
  v27 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v25 + 48);
  if (v27(v13, 1, v26) != 1)
  {
    v63 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v29 = v59;
    v49 = v7;
    v48 = v13;
    v47 = v27;
    v63(v59, v13, v26);
    while (1)
    {
      v30 = v68;
      sub_1BDBFD3EC();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v30, 1, v67) == 1)
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v26);
        sub_1BDAC350C(v68, &qword_1EF50E2B8);
      }
      else
      {
        v31 = v50;
        v32 = v67;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v50, v68, v67);
        v33 = v51;
        v34 = v62;
        sub_1BDBFD4A0();
        v35 = v54;
        sub_1BDBFD2FC();
        v36 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v33, v53);
        MEMORY[0x1E0C80A78](v36);
        v37 = v57;
        *(&v46 - 4) = v34;
        *(&v46 - 3) = v37;
        *(&v46 - 2) = v58;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2E8);
        v38 = v56;
        v39 = v64;
        v40 = sub_1BDBFD398();
        v64 = v39;
        (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v38);
        v41 = (void (*)(_BYTE *, _QWORD))sub_1BDBFD494();
        v42 = (void (*)(_BYTE *, _QWORD))sub_1BDBFD2F0();
        sub_1BDBFD3BC();
        v42(v69, 0);
        v41(v70, 0);
        v71 = v40;
        v43 = (void (*)(_BYTE *, _QWORD))sub_1BDBFD494();
        v44 = (void (*)(_BYTE *, _QWORD))sub_1BDBFD2F0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2F0);
        sub_1BDAE0C94(&qword_1EF50E2F8, &qword_1EF50E2F0, MEMORY[0x1E0DEAF38]);
        v7 = v49;
        v26 = v61;
        sub_1BDBFD3A4();
        v44(v69, 0);
        v27 = v47;
        v43(v70, 0);
        v45 = v31;
        v29 = v59;
        v25 = v60;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v45, v32);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v26);
        v13 = v48;
        swift_bridgeObjectRelease();
      }
      sub_1BDBFD3B0();
      if (v27(v13, 1, v26) == 1)
        break;
      v63(v29, v13, v26);
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v65, v66);
}

uint64_t sub_1BDB61E6C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E300);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BDBFD368();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v15 - v11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2E8);
  sub_1BDBFD4A0();
  sub_1BDB61FFC(a1, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v13 = sub_1BDBFD56C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  sub_1BDB66044(&qword_1EF50E308, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D65870], MEMORY[0x1E0D65868]);
  return sub_1BDBFD488();
}

uint64_t sub_1BDB61FFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[2];

  v12[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E310);
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1BDBFCB40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1BDBFD344();
  v8 = sub_1BDBFD350();
  if (*(_QWORD *)(a1 + 16) && (sub_1BDAC358C(v8, v9), (v10 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    sub_1BDBFCAEC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1BDBFD35C();
  return sub_1BDBFD338();
}

Swift::Void __swiftcall ICSystemPaperDocument.removeStrokesFromStyleInventory()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  char *v31;
  int v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t *v35;
  void (*v36)(char *, char *, uint8_t *);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint8_t *);
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (**v49)@<X0>(unsigned int (*)(uint64_t, uint64_t, uint64_t)@<X0>, uint64_t@<X8>);
  BOOL (**v50)(uint64_t);
  uint64_t (**v51)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint8_t *);
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint8_t *v85;
  uint64_t v86;
  char *v87;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E138);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E140);
  v81 = *(_QWORD *)(v5 - 8);
  v82 = v5;
  MEMORY[0x1E0C80A78](v5);
  v79 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E148);
  MEMORY[0x1E0C80A78](v83);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E150);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158);
  v84 = *(_QWORD *)(v12 - 8);
  v85 = (uint8_t *)v12;
  v13 = *(_QWORD *)(v84 + 64);
  v14 = MEMORY[0x1E0C80A78](v12);
  v78 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v80 = (char *)&v68 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E160);
  MEMORY[0x1E0C80A78](v16);
  v73 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1BDBFD284();
  v18 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E168);
  v74 = *(_QWORD *)(v21 - 8);
  v75 = v21;
  MEMORY[0x1E0C80A78](v21);
  v70 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AB78);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE28);
  v76 = *(_QWORD *)(v26 - 8);
  v77 = (void (*)(char *, char *, uint8_t *))v26;
  MEMORY[0x1E0C80A78](v26);
  v72 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void **)&v0[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  v29 = objc_msgSend(v28, sel_managedObjectContext);
  if (v29)
  {
    v30 = v29;
    v68 = v8;
    v69 = v4;
    MEMORY[0x1E0C80A78](v29);
    *(&v68 - 2) = v1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AE30);
    sub_1BDBFDFF8();

    v31 = v87;
    if (v87)
    {
      v32 = (unsigned __int16)objc_msgSend(v28, sel_attachmentType);
      if ((v32 - 14) < 2)
      {
        sub_1BDB592D8((uint64_t)v31, &qword_1EF50E150, &qword_1EF50E158, &qword_1EF50E318, (void (*)(uint64_t, char *))sub_1BDB59DF0, (uint64_t)v11);
        v34 = v84;
        v33 = v85;
        if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v84 + 48))(v11, 1, v85) != 1)
        {
          v77 = *(void (**)(char *, char *, uint8_t *))(v34 + 32);
          v38 = (uint64_t)v80;
          v77(v80, v11, v33);
          swift_getKeyPath();
          sub_1BDB66044(&qword_1EF50E170, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D656B8], MEMORY[0x1E0D656A0]);
          v39 = v79;
          sub_1BDBFD4F4();
          swift_release();
          v40 = v81;
          v41 = (uint64_t)v69;
          v42 = v39;
          v43 = v82;
          (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v69, v42, v82);
          v44 = *(void (**)(char *, uint64_t, uint8_t *))(v34 + 16);
          v79 = v31;
          v45 = v78;
          v44(v78, v38, v33);
          v46 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
          v47 = swift_allocObject();
          v77((char *)(v47 + v46), v45, v33);
          v48 = (uint64_t)v68;
          (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v68, v41, v43);
          v49 = (uint64_t (**)@<X0>(unsigned int (*)(uint64_t, uint64_t, uint64_t)@<X0>, uint64_t@<X8>))(v48 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E178) + 44));
          *v49 = sub_1BDB65A8C;
          v49[1] = (uint64_t (*)@<X0>(unsigned int (*)(uint64_t, uint64_t, uint64_t)@<X0>, uint64_t@<X8>))v47;
          v50 = (BOOL (**)(uint64_t))(v48
                                              + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E180)
                                                       + 36));
          *v50 = sub_1BDB648C8;
          v50[1] = 0;
          v51 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v48 + *(int *)(v83 + 44));
          *v51 = sub_1BDB64910;
          v51[1] = 0;
          sub_1BDAC350C(v41, &qword_1EF50E138);
          sub_1BDB651C4(v38, v48);

          sub_1BDAC350C(v48, &qword_1EF50E148);
          (*(void (**)(uint64_t, uint8_t *))(v34 + 8))(v38, v33);
          return;
        }

        v35 = &qword_1EF50E150;
        goto LABEL_16;
      }
      if (v32 == 13)
      {
        sub_1BDB592D8((uint64_t)v31, &qword_1ED23AB78, &qword_1ED23AE28, &qword_1ED23AE20, (void (*)(uint64_t, char *))sub_1BDB59C1C, (uint64_t)v25);
        v37 = v76;
        v36 = v77;
        if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v76 + 48))(v25, 1, v77) == 1)
        {

          sub_1BDAC350C((uint64_t)v25, &qword_1ED23AB78);
          return;
        }
        v62 = (uint64_t)v72;
        (*(void (**)(void))(v37 + 32))();
        sub_1BDB66044((unint64_t *)&qword_1EF50E188, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D65428], MEMORY[0x1E0D65410]);
        sub_1BDBFD50C();
        v11 = v73;
        sub_1BDBFD26C();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v71);
        v64 = v74;
        v63 = v75;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v11, 1, v75) == 1)
        {
          (*(void (**)(uint64_t, void (*)(char *, char *, uint8_t *)))(v37 + 8))(v62, v36);

          v35 = &qword_1EF50E160;
LABEL_16:
          sub_1BDAC350C((uint64_t)v11, v35);
          return;
        }
        v65 = v70;
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v70, v11, v63);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E190);
        v66 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
        v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = xmmword_1BDC16BA0;
        (*(void (**)(unint64_t, char *, uint64_t))(v64 + 16))(v67 + v66, v65, v63);
        sub_1BDB64E94(v62, v67);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v63);
        (*(void (**)(uint64_t, void (*)(char *, char *, uint8_t *)))(v37 + 8))(v62, v36);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED23B148 != -1)
          swift_once();
        v52 = sub_1BDBFCE34();
        __swift_project_value_buffer(v52, (uint64_t)qword_1ED23B130);
        v53 = v1;
        v54 = sub_1BDBFCE1C();
        v55 = sub_1BDBFDEE4();
        if (os_log_type_enabled(v54, v55))
        {
          v56 = (uint8_t *)swift_slowAlloc();
          v57 = swift_slowAlloc();
          v87 = (char *)v57;
          *(_DWORD *)v56 = 136315138;
          v85 = v56 + 4;
          v58 = objc_msgSend(v28, sel_shortLoggingDescription);
          v59 = sub_1BDBFD6F8();
          v61 = v60;

          v86 = sub_1BDAE53FC(v59, v61, (uint64_t *)&v87);
          sub_1BDBFE100();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD918000, v54, v55, "Can't remove strokes from style inventory - unsupported attachment type: %s", v56, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B7B478](v57, -1, -1);
          MEMORY[0x1C3B7B478](v56, -1, -1);

        }
        else
        {

        }
      }
    }
  }
}

uint64_t sub_1BDB62AF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E140);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1BDBFD2CC();
}

uint64_t sub_1BDB62B78@<X0>(unsigned int (*a1)(uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;

  v104 = a2;
  v102 = a3;
  v4 = sub_1BDBFD284();
  v92 = *(_QWORD *)(v4 - 8);
  v93 = v4;
  MEMORY[0x1E0C80A78](v4);
  v91 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E278);
  MEMORY[0x1E0C80A78](v6);
  v97 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFD380();
  v95 = *(_QWORD *)(v8 - 8);
  v96 = v8;
  MEMORY[0x1E0C80A78](v8);
  v94 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E280);
  MEMORY[0x1E0C80A78](v10);
  v100 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158);
  v105 = *(_QWORD *)(v108 - 8);
  v12 = MEMORY[0x1E0C80A78](v108);
  v99 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v106 = (char *)&v86 - v14;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E288);
  v109 = *(_QWORD *)(v107 - 8);
  v15 = MEMORY[0x1E0C80A78](v107);
  v98 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v110 = (char *)&v86 - v17;
  v18 = sub_1BDBFD29C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E290);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E160);
  v26 = MEMORY[0x1E0C80A78](v25);
  v101 = (uint64_t)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v86 - v28;
  v103 = a1;
  sub_1BDBFD3C8();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E298);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v24, 1, v30) == 1)
  {
    sub_1BDAC350C((uint64_t)v24, &qword_1EF50E290);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E168);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v29, 1, 1, v32);
    v34 = v107;
    v33 = v108;
    v35 = v105;
    v36 = v106;
    v37 = v110;
    v38 = v104;
  }
  else
  {
    sub_1BDBFD2E4();
    sub_1BDB66044(&qword_1EF50E228, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D656B8], MEMORY[0x1E0D656A8]);
    v38 = v104;
    sub_1BDBFD4AC();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v30);
    sub_1BDBFD290();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v34 = v107;
    v33 = v108;
    v35 = v105;
    v36 = v106;
    v37 = v110;
  }
  v39 = v29;
  v40 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  v40(v37, (char *)v103, v34);
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v41(v36, v38, v33);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E168);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
  if (v44((uint64_t)v39, 1, v42) == 1)
  {
    v87 = v42;
    v103 = v44;
    v88 = v41;
    v89 = v40;
    v104 = v43;
    v45 = (uint64_t)v100;
    sub_1BDBFD3D4();
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2A0);
    v47 = *(_QWORD *)(v46 - 8);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46);
    v90 = (uint64_t)v39;
    if (v48 == 1)
    {
      sub_1BDAC350C(v45, &qword_1EF50E280);
      v49 = v104;
      v50 = v101;
      v51 = v87;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v101, 1, 1, v87);
      v52 = v107;
      v53 = v108;
      v54 = v106;
      v55 = v110;
      v56 = v98;
      v57 = v99;
      v58 = (void (*)(char *, char *, uint64_t))v88;
    }
    else
    {
      sub_1BDBFD2E4();
      sub_1BDB66044(&qword_1EF50E228, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D656B8], MEMORY[0x1E0D656A8]);
      v61 = v94;
      v54 = v106;
      sub_1BDBFD4AC();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
      v50 = v101;
      sub_1BDBFD374();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v61, v96);
      v52 = v107;
      v53 = v108;
      v55 = v110;
      v56 = v98;
      v57 = v99;
      v49 = v104;
      v58 = (void (*)(char *, char *, uint64_t))v88;
      v51 = v87;
    }
    v89(v98, v110, v107);
    v58(v57, v54, v53);
    if (v103(v50, 1, v51) == 1)
    {
      v62 = (uint64_t)v97;
      sub_1BDBFD3E0();
      v63 = v56;
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E2A8);
      v65 = *(_QWORD *)(v64 - 8);
      v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v62, 1, v64);
      v67 = v102;
      v68 = v90;
      if (v66 == 1)
      {
        v69 = *(void (**)(char *, uint64_t))(v105 + 8);
        v70 = v57;
        v71 = v108;
        v69(v70, v108);
        v72 = *(void (**)(char *, uint64_t))(v109 + 8);
        v73 = v107;
        v72(v63, v107);
        v69(v106, v71);
        v72(v110, v73);
        sub_1BDAC350C(v62, &qword_1EF50E278);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v67, 1, 1, v51);
      }
      else
      {
        sub_1BDBFD2E4();
        sub_1BDB66044(&qword_1EF50E228, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D656B8], MEMORY[0x1E0D656A8]);
        v80 = v57;
        v81 = v91;
        sub_1BDBFD4AC();
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v62, v64);
        sub_1BDBFD26C();
        (*(void (**)(char *, uint64_t))(v92 + 8))(v81, v93);
        v82 = *(void (**)(char *, uint64_t))(v105 + 8);
        v83 = v108;
        v82(v80, v108);
        v84 = *(void (**)(char *, uint64_t))(v109 + 8);
        v85 = v107;
        v84(v63, v107);
        v82(v106, v83);
        v84(v110, v85);
      }
      sub_1BDAC350C(v101, &qword_1EF50E160);
    }
    else
    {
      v74 = v56;
      v75 = *(void (**)(char *, uint64_t))(v105 + 8);
      v75(v57, v53);
      v76 = v49;
      v77 = v52;
      v78 = *(void (**)(char *, uint64_t))(v109 + 8);
      v78(v74, v77);
      v75(v54, v53);
      v78(v55, v77);
      v79 = v102;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32))(v102, v50, v51);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(v79, 0, 1, v51);
      v68 = v90;
    }
    return sub_1BDAC350C(v68, &qword_1EF50E160);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v33);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v34);
    v59 = v102;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v102, v39, v42);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v59, 0, 1, v42);
  }
}

uint64_t ICSystemPaperDocument.toFallbackPDFData()()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  dispatch_semaphore_t v34;
  NSObject *v35;
  id v36;
  uint64_t v37;
  void *v38;
  void **v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  char *v45;
  dispatch_semaphore_t v46;
  void **v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void *v50;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E150);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v46 - v13;
  v15 = objc_msgSend(*(id *)((char *)&v0->isa + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), sel_managedObjectContext);
  if (!v15)
    goto LABEL_8;
  v16 = v15;
  v49 = v14;
  MEMORY[0x1E0C80A78](v15);
  *(&v46 - 2) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AE30);
  sub_1BDBFDFF8();

  v17 = v50;
  if (!v50)
  {
LABEL_8:
    if (qword_1ED23B148 != -1)
      swift_once();
    v22 = sub_1BDBFCE34();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED23B130);
    v19 = sub_1BDBFCE1C();
    v23 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v19, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1BD918000, v19, v23, "ICSystemPaperDocument.toFallbackPDFData: Failed to create coherence context.", v24, 2u);
      MEMORY[0x1C3B7B478](v24, -1, -1);
    }
    goto LABEL_12;
  }
  sub_1BDB592D8((uint64_t)v50, &qword_1EF50E150, &qword_1EF50E158, &qword_1EF50E318, (void (*)(uint64_t, char *))sub_1BDB59DF0, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BDAC350C((uint64_t)v7, &qword_1EF50E150);
    if (qword_1ED23B148 != -1)
      swift_once();
    v18 = sub_1BDBFCE34();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED23B130);
    v19 = sub_1BDBFCE1C();
    v20 = sub_1BDBFDEE4();
    if (!os_log_type_enabled(v19, v20))
    {

      return 0;
    }
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1BD918000, v19, v20, "ICSystemPaperDocument.toFallbackPDFData: Failed to create paper document.", v21, 2u);
    MEMORY[0x1C3B7B478](v21, -1, -1);

LABEL_12:
    return 0;
  }
  v48 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v27 = v49;
  v48(v49, v7, v8);
  v46 = dispatch_semaphore_create(0);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0;
  v47 = (void **)(v28 + 16);
  sub_1BDBFDB78();
  v29 = sub_1BDBFDBC0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 0, 1, v29);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v27, v8);
  v30 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v31 = (v10 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject();
  *((_QWORD *)v33 + 2) = 0;
  *((_QWORD *)v33 + 3) = 0;
  *((_QWORD *)v33 + 4) = v28;
  v48(&v33[v30], v12, v8);
  *(_QWORD *)&v33[v31] = v17;
  v34 = v46;
  *(_QWORD *)&v33[v32] = v46;
  v48 = (void (*)(char *, char *, uint64_t))v28;
  swift_retain();
  v35 = v34;
  v36 = v17;
  sub_1BDAEE400((uint64_t)v4, (uint64_t)&unk_1EF50E1A0, (uint64_t)v33);
  swift_release();
  v37 = sub_1BDBFDFC8();
  v38 = (void *)MEMORY[0x1C3B7A920](v37);
  v39 = v47;
  swift_beginAccess();
  v40 = *v39;
  if (*v39)
  {
    v41 = qword_1EF50B200;
    v42 = v40;
    if (v41 != -1)
      swift_once();
    sub_1BDB63C44(qword_1EF50E118);
    v43 = (void *)sub_1BDBFD5B4();
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(v42, sel_dataRepresentationWithOptions_, v43);

    v45 = v49;
    if (v44)
    {
      v25 = sub_1BDBFC990();

    }
    else
    {
      v25 = 0;
    }
  }
  else
  {
    v25 = 0;
    v45 = v49;
  }
  objc_autoreleasePoolPop(v38);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v45, v8);
  swift_release();
  return v25;
}

uint64_t sub_1BDB639B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E220);
  v7[9] = swift_task_alloc();
  v8 = sub_1BDBFD2E4();
  v7[10] = v8;
  v7[11] = *(_QWORD *)(v8 - 8);
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB63A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158);
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D656B8];
  sub_1BDB66044(&qword_1EF50E170, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D656B8], MEMORY[0x1E0D656A0]);
  sub_1BDBFD50C();
  v3 = sub_1BDBFD2A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v4;
  sub_1BDB66044(&qword_1EF50E228, 255, v2, MEMORY[0x1E0D656A8]);
  *v4 = v0;
  v4[1] = sub_1BDB63B3C;
  return sub_1BDBFD2D8();
}

uint64_t sub_1BDB63B3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc();
  sub_1BDAC350C(v5, &qword_1EF50E220);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

uint64_t sub_1BDB63BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  v3 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v1;

  sub_1BDBFDFD4();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB63C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC38);
    v2 = sub_1BDBFE598();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(v3 + 63) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_26;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v28)
      goto LABEL_35;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v28)
        goto LABEL_35;
      v14 = *(_QWORD *)(v27 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v28)
          goto LABEL_35;
        v14 = *(_QWORD *)(v27 + 8 * v8);
        if (!v14)
          break;
      }
    }
LABEL_25:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_26:
    v16 = 8 * v12;
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + v16);
    *(_QWORD *)&v37[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v16);
    v17 = *(void **)&v37[0];
    type metadata accessor for PDFDocumentWriteOption(0);
    v19 = v17;
    v18;
    swift_dynamicCast();
    sub_1BD942914(0, &qword_1ED23A628);
    swift_dynamicCast();
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1BD942258(&v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1BD942258(v36, v37);
    sub_1BD942258(v37, &v33);
    result = sub_1BDBFE280();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1BD942258(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v28)
  {
LABEL_35:
    swift_release();
    swift_release();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v28)
      goto LABEL_35;
    v14 = *(_QWORD *)(v27 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_25;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1BDB63FD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t result;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int64_t v41;
  uint64_t v42;
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t i;
  _QWORD v47[5];
  __int128 v48;
  __int128 v49[2];
  __int128 v50[3];

  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E208);
  v2 = MEMORY[0x1E0C80A78](v44);
  v4 = (uint64_t *)((char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v39 - v5);
  v45 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E210);
    v7 = (_QWORD *)sub_1BDBFE598();
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v8 = *(_QWORD *)(v45 + 64);
  v42 = v45 + 64;
  v9 = -1 << *(_BYTE *)(v45 + 32);
  if (-v9 < 64)
    v10 = ~(-1 << -(char)v9);
  else
    v10 = -1;
  v11 = v10 & v8;
  v39 = -1 << *(_BYTE *)(v45 + 32);
  v41 = (unint64_t)(63 - v9) >> 6;
  v43 = (__int128 *)v47;
  v40 = v7 + 8;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v11)
    goto LABEL_10;
LABEL_11:
  v17 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v17 >= v41)
    goto LABEL_32;
  v18 = *(_QWORD *)(v42 + 8 * v17);
  v19 = i + 1;
  if (!v18)
  {
    v19 = i + 2;
    if (i + 2 >= v41)
      goto LABEL_32;
    v18 = *(_QWORD *)(v42 + 8 * v19);
    if (!v18)
    {
      v19 = i + 3;
      if (i + 3 >= v41)
        goto LABEL_32;
      v18 = *(_QWORD *)(v42 + 8 * v19);
      if (!v18)
      {
        v19 = i + 4;
        if (i + 4 >= v41)
          goto LABEL_32;
        v18 = *(_QWORD *)(v42 + 8 * v19);
        if (!v18)
        {
          v20 = i + 5;
          if (i + 5 < v41)
          {
            v18 = *(_QWORD *)(v42 + 8 * v20);
            if (v18)
            {
              v19 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v19 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_36;
              if (v19 >= v41)
                break;
              v18 = *(_QWORD *)(v42 + 8 * v19);
              ++v20;
              if (v18)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1BDAE1514();
          return (unint64_t)v7;
        }
      }
    }
  }
LABEL_26:
  v11 = (v18 - 1) & v18;
  v16 = __clz(__rbit64(v18)) + (v19 << 6);
  for (i = v19; ; v16 = v15 | (i << 6))
  {
    v21 = *(_QWORD *)(v45 + 56);
    v22 = (uint64_t *)(*(_QWORD *)(v45 + 48) + 16 * v16);
    v23 = *v22;
    v24 = v22[1];
    v25 = type metadata accessor for PersistedActivityEvent();
    v26 = v21 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v16;
    v27 = v44;
    sub_1BDB65EF0(v26, (uint64_t)v6 + *(int *)(v44 + 48));
    *v6 = v23;
    v6[1] = v24;
    sub_1BDB35FB0((uint64_t)v6, (uint64_t)v4, &qword_1EF50E208);
    v28 = (uint64_t)v4 + *(int *)(v27 + 48);
    v30 = *v4;
    v29 = v4[1];
    v47[3] = v25;
    v47[4] = &protocol witness table for PersistedActivityEvent;
    v31 = v43;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v43);
    sub_1BDAFE158(v28, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    sub_1BDAE14D4(v31, (uint64_t)v49);
    sub_1BDAE14D4(v49, (uint64_t)v50);
    sub_1BDAE14D4(v50, (uint64_t)&v48);
    swift_bridgeObjectRetain();
    result = sub_1BDAC358C(v30, v29);
    v33 = result;
    if ((v34 & 1) != 0)
    {
      v13 = (uint64_t *)(v7[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v13 = v30;
      v13[1] = v29;
      v14 = v7[7] + 40 * v33;
      __swift_destroy_boxed_opaque_existential_0Tm(v14);
      result = sub_1BDAE14D4(&v48, v14);
      if (!v11)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v7[2] >= v7[3])
      break;
    *(_QWORD *)((char *)v40 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v35 = (uint64_t *)(v7[6] + 16 * result);
    *v35 = v30;
    v35[1] = v29;
    result = sub_1BDAE14D4(&v48, v7[7] + 40 * result);
    v36 = v7[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_34;
    v7[2] = v38;
    if (!v11)
      goto LABEL_11;
LABEL_10:
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id ICSystemPaperDocument.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ICSystemPaperDocument.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ICSystemPaperDocument.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BDB6452C(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;

  sub_1BDB66A7C(*(void **)(*v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment));
  sub_1BDB4EB54(a1, a2);
  return a1;
}

NSObject *sub_1BDB645C8(NSObject *a1, unint64_t a2)
{
  _QWORD *v2;

  return static ICEncryptionDelegateSupport.decrypt(attachment:data:)(*(void **)(*v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), a1, a2);
}

uint64_t sub_1BDB645F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;

  return static ICEncryptionDelegateSupport.encrypt(attachment:url:)(*(void **)(*v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), a1, a2);
}

uint64_t sub_1BDB6460C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BDBFC948();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BDB646B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1BDBFC948() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BDB5C17C(a1, (char *)(v1 + v4), *(char **)(v1 + v5), *(char **)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BDB6472C()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB6473C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB1D374(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_1BDB6475C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BDBFC948();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BDB647D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(sub_1BDBFC948() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1BDB5EAB8(a1, v1 + v4, *(_QWORD *)v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_1BDB64828()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for ICSystemPaperDocument()
{
  return objc_opt_self();
}

void sub_1BDB64858(void *a1)
{
  uint64_t v1;

  sub_1BDB66A2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t sub_1BDB64874()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BDB648B8(uint64_t a1)
{
  uint64_t v1;

  sub_1BDB6161C(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

BOOL sub_1BDB648C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E168);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2) != 1;
}

uint64_t sub_1BDB64910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E160);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDB157E4(a1, (uint64_t)v6, &qword_1EF50E160);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E168);
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  __break(1u);
  return result;
}

uint64_t sub_1BDB649D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1BDB66044((unint64_t *)&qword_1ED23AB60, 255, v11, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1BDBFD614();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1BDB66044(&qword_1ED23AD28, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v19 = sub_1BDBFD6BC();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BDB45D28();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1BDB64C14(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1BDB64C14(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_1BDBFCB40();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_1BDBFE1C0();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_1BDB66044((unint64_t *)&qword_1ED23AB60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v16 = sub_1BDBFD614();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

uint64_t sub_1BDB64E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  id v17;
  void *v18;
  id v19;
  _QWORD v21[2];
  uint64_t v22[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v25[5];

  v21[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E230);
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E168);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E160);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E238);
  v25[3] = v11;
  v25[4] = sub_1BDAE0C94(&qword_1EF50E240, &qword_1EF50E238, MEMORY[0x1E0DEAF38]);
  v25[0] = a2;
  v12 = __swift_project_boxed_opaque_existential_1(v25, v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
  *boxed_opaque_existential_1 = *v14;
  boxed_opaque_existential_1[1] = 0;
  swift_bridgeObjectRetain();
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, AssociatedTypeWitness);
    sub_1BDBFE0F4();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE28);
    sub_1BDAE0C94((unint64_t *)&qword_1EF50E248, &qword_1EF50E168, MEMORY[0x1E0D12878]);
    sub_1BDBFD4C4();
    v17 = objc_allocWithZone((Class)sub_1BDBFD32C());
    v18 = (void *)sub_1BDBFD320();
    v19 = objc_msgSend(v18, sel_strokes);
    if (!v19)
    {
      sub_1BDBFD584();
      sub_1BDBFD9E0();
      v19 = (id)sub_1BDBFD9C8();
      swift_bridgeObjectRelease();
    }
    objc_msgSend((id)objc_opt_self(), sel_removeStrokesFromStyleInventory_, v19);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
}

uint64_t sub_1BDB651C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v45[3];
  uint64_t v46;
  uint64_t v47;

  v41 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E230);
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E168);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E160);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E140);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v35 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E178);
  MEMORY[0x1E0C80A78](v39);
  v33 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E180);
  MEMORY[0x1E0C80A78](v37);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E148);
  v46 = v34;
  v47 = sub_1BDAE0C94(&qword_1EF50E250, &qword_1EF50E148, MEMORY[0x1E0DEC858]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
  sub_1BDB157E4(a2, (uint64_t)boxed_opaque_existential_1, &qword_1EF50E148);
  v16 = __swift_project_boxed_opaque_existential_1(v45, v46);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = __swift_allocate_boxed_opaque_existential_1(v42);
  v32 = v14;
  sub_1BDB35FB0((uint64_t)v18, (uint64_t)v14, &qword_1EF50E180);
  v21 = (uint64_t)v14;
  v22 = v33;
  sub_1BDB35FB0(v21, v33, &qword_1EF50E178);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v35, v22, v38);
  sub_1BDAE0C94(&qword_1EF50E258, &qword_1EF50E140, MEMORY[0x1E0D11DC0]);
  sub_1BDBFD8CC();
  v23 = *(int *)(v39 + 44);
  *(_OWORD *)((char *)v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E260) + 44)) = *(_OWORD *)(v22 + v23);
  v24 = *(int *)(v37 + 36);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E268);
  *(_OWORD *)((char *)v20 + *(int *)(v25 + 36)) = *(_OWORD *)&v32[v24];
  v26 = *(int *)(v34 + 44);
  *(_OWORD *)((char *)v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E270) + 44)) = *(_OWORD *)&v18[v26];
  v40 = v4;
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, AssociatedTypeWitness);
    sub_1BDBFE0F4();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158);
    sub_1BDAE0C94((unint64_t *)&qword_1EF50E248, &qword_1EF50E168, MEMORY[0x1E0D12878]);
    sub_1BDBFD4C4();
    v27 = objc_allocWithZone((Class)sub_1BDBFD32C());
    v28 = (void *)sub_1BDBFD320();
    v29 = objc_msgSend(v28, sel_strokes);
    if (!v29)
    {
      sub_1BDBFD584();
      sub_1BDBFD9E0();
      v29 = (id)sub_1BDBFD9C8();
      v4 = v40;
      swift_bridgeObjectRelease();
    }
    objc_msgSend((id)objc_opt_self(), sel_removeStrokesFromStyleInventory_, v29);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
}

void _s11NotesShared21ICSystemPaperDocumentC12closeContext3forySo6ICNoteC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  v12 = objc_msgSend(a1, sel_paperCoherenceContextURL);
  if (v12)
  {
    v13 = v12;
    sub_1BDBFC90C();

    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v4, v9, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v14(v11, v4, v5);
      sub_1BDBFD554();
      v15 = sub_1BDBFD53C();
      if (v15)
      {
        v16 = (void *)v15;
        sub_1BDBFD548();

      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_1BDAC350C((uint64_t)v4, &qword_1ED23B1B0);
  if (qword_1ED23B148 != -1)
    swift_once();
  v17 = sub_1BDBFCE34();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED23B130);
  v18 = a1;
  v19 = sub_1BDBFCE1C();
  v20 = sub_1BDBFDEE4();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v28 = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = objc_msgSend(v18, sel_loggingDescription);
    v24 = sub_1BDBFD6F8();
    v26 = v25;

    v27 = sub_1BDAE53FC(v24, v26, &v28);
    sub_1BDBFE100();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD918000, v19, v20, "No paperCoherenceContextURL available {attachment: %s}", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v22, -1, -1);
    MEMORY[0x1C3B7B478](v21, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1BDB65A04()
{
  return sub_1BDBFD2C0();
}

uint64_t sub_1BDB65A28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BDB65A8C@<X0>(unsigned int (*a1)(uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158) - 8) + 80);
  return sub_1BDB62B78(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1BDB65ADC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BDB65B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1BDB65BAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = *(_QWORD *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1BDAC9D90;
  return sub_1BDB639B8(a1, v7, v8, v9, v10, v11, v12);
}

unint64_t sub_1BDB65C78()
{
  unint64_t result;

  result = qword_1EF50E1A8;
  if (!qword_1EF50E1A8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for SystemPaperDocumentError, &type metadata for SystemPaperDocumentError);
    atomic_store(result, (unint64_t *)&qword_1EF50E1A8);
  }
  return result;
}

unint64_t sub_1BDB65CC0()
{
  unint64_t result;

  result = qword_1EF50E1B0;
  if (!qword_1EF50E1B0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for SystemPaperDocumentError, &type metadata for SystemPaperDocumentError);
    atomic_store(result, (unint64_t *)&qword_1EF50E1B0);
  }
  return result;
}

unint64_t sub_1BDB65D08()
{
  unint64_t result;

  result = qword_1EF50E1B8;
  if (!qword_1EF50E1B8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for SystemPaperDocumentError, &type metadata for SystemPaperDocumentError);
    atomic_store(result, (unint64_t *)&qword_1EF50E1B8);
  }
  return result;
}

unint64_t sub_1BDB65D50()
{
  unint64_t result;

  result = qword_1EF50E1C0;
  if (!qword_1EF50E1C0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for SystemPaperDocumentError, &type metadata for SystemPaperDocumentError);
    atomic_store(result, (unint64_t *)&qword_1EF50E1C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemPaperDocumentError()
{
  return &type metadata for SystemPaperDocumentError;
}

uint64_t sub_1BDB65DA8()
{
  return type metadata accessor for SystemPaperSyncArchive();
}

uint64_t sub_1BDB65DB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFC948();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SystemPaperSyncArchive()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemPaperSyncArchive.__allocating_init(databaseArchive:assetArchives:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for ICSystemPaperDocument()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ICSystemPaperDocument.__allocating_init(paperAttachment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for ICSystemPaperDocument.PaperBundleReader()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ICSystemPaperDocument.PaperBundleReader.State()
{
  return &type metadata for ICSystemPaperDocument.PaperBundleReader.State;
}

uint64_t sub_1BDB65E80()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BDB65EA4(uint64_t a1)
{
  uint64_t v1;

  sub_1BDB8FFF8(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BDB65EAC()
{
  unint64_t result;

  result = qword_1EF50E200;
  if (!qword_1EF50E200)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for SystemPaperDocumentError, &type metadata for SystemPaperDocumentError);
    atomic_store(result, (unint64_t *)&qword_1EF50E200);
  }
  return result;
}

uint64_t sub_1BDB65EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersistedActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB65F34(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB61858(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BDB65F4C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB65F78()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(0);
  return result;
}

uint64_t sub_1BDB65FA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BDB61E6C(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1BDB65FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BDB5CBE0(a1, *(char **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1BDB65FE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BDB59A40(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1BDB65FFC()
{
  return sub_1BDB6612C(&qword_1EF50E318, &qword_1EF50E158);
}

uint64_t __swift_deallocate_boxed_opaque_existential_0(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1C3B7B478);
  return result;
}

uint64_t sub_1BDB66044(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1C3B7B388](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_43Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BDBFC948();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB66118()
{
  return sub_1BDB6612C(&qword_1ED23AE20, &qword_1ED23AE28);
}

uint64_t sub_1BDB6612C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1BDBFC948() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1BDB5A41C(*(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a1, a2);
}

void sub_1BDB66194(uint64_t *a1@<X8>)
{
  sub_1BDB5916C(a1);
}

uint64_t sub_1BDB661A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDB65FE0(a1);
}

void sub_1BDB661E8(void *a1)
{
  sub_1BDB64858(a1);
}

void __swiftcall ICQuery.filterSelection(_:accountObjectID:)(ICFilterSelection *__return_ptr retstr, NSManagedObjectContext _, NSManagedObjectID accountObjectID)
{
  ICFilterSelection *v5;

  swift_beginAccess();
  swift_retain();
  ICQueryType.filterSelection(managedObjectContext:accountObjectID:)(v5, _, accountObjectID);
  swift_release();
}

void __swiftcall ICQuery.tagSelection(_:)(ICTagSelection *__return_ptr retstr, NSManagedObjectContext_optional a2)
{
  objc_class *isa;
  ICTagSelection *v3;
  NSManagedObjectContext_optional v4;

  isa = a2.value.super.isa;
  swift_beginAccess();
  swift_retain();
  v4.value.super.isa = isa;
  ICQueryType.tagSelection(managedObjectContext:)(v3, v4);
  swift_release();
}

uint64_t static ICEncryptionDelegateSupport.encrypt(attachment:data:)(void *a1, uint64_t a2, unint64_t a3)
{
  sub_1BDB66A7C(a1);
  sub_1BDB4EB54(a2, a3);
  return a2;
}

NSObject *static ICEncryptionDelegateSupport.decrypt(attachment:data:)(void *a1, NSObject *a2, unint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE *v17;

  if ((objc_msgSend(a1, sel_ic_isDeallocating) & 1) == 0)
  {
    v6 = objc_msgSend(a1, sel_managedObjectContext);
    if (v6)
    {
      v7 = v6;
      if ((objc_msgSend(v6, sel_ic_isDeallocating) & 1) != 0
        || (v8 = objc_msgSend(v7, sel_persistentStoreCoordinator)) == 0)
      {
        v9 = v7;
      }
      else
      {
        v9 = v8;
        v10 = objc_msgSend(v8, sel_persistentStores);
        sub_1BDB67A3C();
        v11 = sub_1BDBFD9E0();

        if (v11 >> 62)
        {
          swift_bridgeObjectRetain();
          v12 = sub_1BDBFE574();
          swift_bridgeObjectRelease();
        }
        else
        {
          v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v13 = swift_bridgeObjectRelease();
        if (v12)
        {
          MEMORY[0x1E0C80A78](v13);
          sub_1BDB66A7C(a1);

          sub_1BDB4EB54((uint64_t)a2, a3);
          return a2;
        }

      }
    }
  }
  if (qword_1EF50B210 != -1)
    swift_once();
  v14 = sub_1BDBFCE34();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EF50E328);
  a2 = sub_1BDBFCE1C();
  v15 = sub_1BDBFDEE4();
  if (os_log_type_enabled(a2, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1BD918000, a2, v15, "Failed decrypting because attachment is transitioning", v16, 2u);
    MEMORY[0x1C3B7B478](v16, -1, -1);
  }

  sub_1BDB66CEC();
  swift_allocError();
  *v17 = 0;
  swift_willThrow();
  sub_1BDB40600(0, 0xF000000000000000);
  return a2;
}

uint64_t static ICEncryptionDelegateSupport.encrypt(attachment:url:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE v17[16];
  uint64_t v18;
  _BYTE *v19;

  v6 = sub_1BDBFC948();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v17[-v14];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&v17[-v14], 1, 1, v6);
  v18 = a2;
  v19 = v15;
  sub_1BDB66A7C(a1);
  sub_1BDB67ABC((uint64_t)v15, (uint64_t)v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a3, v9, v6);
    sub_1BDACDBAC((uint64_t)v13);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a3, v13, v6);
  }
  return sub_1BDACDBAC((uint64_t)v15);
}

uint64_t sub_1BDB66930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50E328);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50E328);
  if (qword_1EF50B030 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50C0C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1BDB669C0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedContext);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_workerManagedObjectContext);

  }
  else
  {
    v2 = 0;
  }
  qword_1EF50E340 = (uint64_t)v2;
}

void sub_1BDB66A2C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1BDB66D30(a1, a2, a3, a4, (SEL *)&selRef_encryptSidecarData_, "Failed encrypting sidecar data for PaperKit attachment: %s");
}

void sub_1BDB66A50(void *a1)
{
  uint64_t v1;

  sub_1BDB66D30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t **)(v1 + 32), (SEL *)&selRef_encryptSidecarData_, "Failed encrypting sidecar data for PaperKit attachment: %s");
}

void sub_1BDB66A7C(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;

  if ((objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0
    && (v2 = objc_msgSend(a1, sel_managedObjectContext)) != 0
    && (v3 = v2, v4 = objc_msgSend(v2, sel_concurrencyType), v3, v4 == (id)2))
  {
    v5 = objc_msgSend(a1, sel_managedObjectContext);
    if (v5)
    {
      v6 = v5;
      MEMORY[0x1E0C80A78](v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE20);
      sub_1BDBFDFF8();

    }
  }
  else
  {
    v7 = objc_msgSend(a1, sel_managedObjectContext);
    if (v7)
    {
      v8 = v7;
      MEMORY[0x1E0C80A78](v7);
      sub_1BDBFDFF8();

    }
  }
}

unint64_t sub_1BDB66CEC()
{
  unint64_t result;

  result = qword_1EF50E348;
  if (!qword_1EF50E348)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1C70C, &type metadata for ICEncryptionDelegateSupport.Error);
    atomic_store(result, (unint64_t *)&qword_1EF50E348);
  }
  return result;
}

void sub_1BDB66D30(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, SEL *a5, char *a6)
{
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *format;
  uint64_t v30;

  if (objc_msgSend(a1, sel_isAuthenticated))
  {
    v10 = objc_msgSend(a1, sel_cryptoStrategy);
    if (v10
      && (v11 = v10,
          v12 = (void *)sub_1BDBFC978(),
          v13 = objc_msgSend(v11, *a5, v12),
          v12,
          swift_unknownObjectRelease(),
          v13))
    {
      v14 = sub_1BDBFC990();
      v16 = v15;

      v17 = *a4;
      v18 = a4[1];
      *a4 = v14;
      a4[1] = v16;
      sub_1BDB40600(v17, v18);
    }
    else
    {
      if (qword_1EF50B210 != -1)
        swift_once();
      v19 = sub_1BDBFCE34();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EF50E328);
      v20 = a1;
      v21 = sub_1BDBFCE1C();
      v22 = sub_1BDBFDEE4();
      if (os_log_type_enabled(v21, v22))
      {
        format = a6;
        v23 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v30 = v28;
        *(_DWORD *)v23 = 136315138;
        v24 = objc_msgSend(v20, sel_loggingDescription);
        v25 = sub_1BDBFD6F8();
        v27 = v26;

        sub_1BDAE53FC(v25, v27, &v30);
        sub_1BDBFE100();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD918000, v21, v22, format, v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B7B478](v28, -1, -1);
        MEMORY[0x1C3B7B478](v23, -1, -1);

      }
      else
      {

      }
    }
  }
}

void sub_1BDB66FAC(void *a1, uint64_t a2, uint8_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  id v39;
  void *v40;
  void (*v41)(uint8_t *, char *, uint64_t);
  void *v42;
  void *v43;
  unsigned int v44;
  uint8_t *v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, char *, uint64_t);
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  id v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  char *v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;

  v73 = a3;
  v74 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v68 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v68 - v12;
  v14 = sub_1BDBFC948();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v68 - v20;
  MEMORY[0x1E0C80A78](v19);
  v76 = (char *)&v68 - v22;
  if (!objc_msgSend(a1, sel_isAuthenticated))
    return;
  v72 = v21;
  v23 = objc_msgSend(a1, sel_cloudAccount);
  v75 = v3;
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    v8 = v13;
LABEL_16:
    sub_1BDACDBAC((uint64_t)v8);
    if (qword_1EF50B210 != -1)
      swift_once();
    v46 = sub_1BDBFCE34();
    __swift_project_value_buffer(v46, (uint64_t)qword_1EF50E328);
    v47 = a1;
    v48 = sub_1BDBFCE1C();
    v49 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v78 = v51;
      *(_DWORD *)v50 = 136315138;
      v76 = (char *)(v50 + 4);
      v52 = objc_msgSend(v47, sel_loggingDescription);
      v53 = sub_1BDBFD6F8();
      v55 = v54;

      v77 = sub_1BDAE53FC(v53, v55, &v78);
      sub_1BDBFE100();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, v48, v49, "Failed creating temporary file for encrypting sidecar file for PaperKit attachment: %s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v51, -1, -1);
      MEMORY[0x1C3B7B478](v50, -1, -1);

    }
    else
    {

    }
    return;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_temporaryDirectoryURL);

  if (v25)
  {
    sub_1BDBFC90C();

    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v26(v11, 0, 1, v14);
  }
  else
  {
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v26(v11, 1, 1, v14);
  }
  sub_1BDAC75A0((uint64_t)v11, (uint64_t)v13);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v27(v13, 1, v14) == 1)
  {
    v8 = v13;
    goto LABEL_16;
  }
  v71 = v26;
  v68 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v69 = v27;
  v68(v76, v13, v14);
  v70 = (id)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BDC17EC0;
  *(_QWORD *)(v28 + 32) = sub_1BDBFC918();
  *(_QWORD *)(v28 + 40) = v29;
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3A28]), sel_init);
  v31 = objc_msgSend(v30, sel_UUIDString);

  v32 = sub_1BDBFD6F8();
  v34 = v33;

  *(_QWORD *)(v28 + 48) = v32;
  *(_QWORD *)(v28 + 56) = v34;
  v35 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v70, sel_fileURLWithPathComponents_, v35);

  if (!v36)
  {
    v71(v8, 1, 1, v14);
    goto LABEL_15;
  }
  sub_1BDBFC90C();

  v37 = v68;
  v68(v8, v18, v14);
  v71(v8, 0, 1, v14);
  if (v69(v8, 1, v14) == 1)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v76, v14);
    goto LABEL_16;
  }
  v38 = v72;
  v37(v72, v8, v14);
  v39 = objc_msgSend(a1, sel_cryptoStrategy);
  if (!v39)
    goto LABEL_22;
  v40 = v39;
  v41 = (void (*)(uint8_t *, char *, uint64_t))v37;
  v42 = (void *)sub_1BDBFC8D0();
  v43 = (void *)sub_1BDBFC8D0();
  v44 = objc_msgSend(v40, sel_encryptSidecarFileFromURL_toURL_, v42, v43);
  swift_unknownObjectRelease();

  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v76, v14);
    v45 = v73;
    sub_1BDACDBAC((uint64_t)v73);
    v41(v45, v38, v14);
    v71((char *)v45, 0, 1, v14);
  }
  else
  {
LABEL_22:
    if (qword_1EF50B210 != -1)
      swift_once();
    v56 = sub_1BDBFCE34();
    __swift_project_value_buffer(v56, (uint64_t)qword_1EF50E328);
    v57 = a1;
    v58 = sub_1BDBFCE1C();
    v59 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      v78 = v74;
      v73 = v60;
      *(_DWORD *)v60 = 136315138;
      v71 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v60 + 4);
      v61 = objc_msgSend(v57, sel_loggingDescription);
      v62 = sub_1BDBFD6F8();
      v64 = v63;

      v77 = sub_1BDAE53FC(v62, v64, &v78);
      sub_1BDBFE100();

      swift_bridgeObjectRelease();
      v65 = v73;
      _os_log_impl(&dword_1BD918000, v58, v59, "Failed encrypting sidecar file for PaperKit attachment: %s", v73, 0xCu);
      v66 = v74;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v66, -1, -1);
      MEMORY[0x1C3B7B478](v65, -1, -1);

      v67 = *(void (**)(char *, uint64_t))(v15 + 8);
      v67(v72, v14);
    }
    else
    {

      v67 = *(void (**)(char *, uint64_t))(v15 + 8);
      v67(v38, v14);
    }
    v67(v76, v14);
  }
}

void sub_1BDB67760(void *a1@<X0>, void **a2@<X1>, _BYTE *a3@<X8>)
{
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  uint64_t v19;

  if (objc_msgSend(a1, sel_ic_obtainPermanentObjectIDIfNecessary))
  {
    v6 = objc_msgSend(a1, sel_objectID);
    v7 = *a2;
    *a2 = v6;

  }
  else
  {
    if (qword_1EF50B210 != -1)
      swift_once();
    v8 = sub_1BDBFCE34();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EF50E328);
    v9 = a1;
    v10 = sub_1BDBFCE1C();
    v11 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v19 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = objc_msgSend(v9, sel_loggingDescription);
      v15 = sub_1BDBFD6F8();
      v18 = a3;
      v17 = v16;

      sub_1BDAE53FC(v15, v17, &v19);
      sub_1BDBFE100();

      a3 = v18;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, v10, v11, "Cannot obtain permanent object ID for PaperKit attachment: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v13, -1, -1);
      MEMORY[0x1C3B7B478](v12, -1, -1);

    }
    else
    {

    }
  }
  *a3 = 0;
}

void sub_1BDB67988(uint64_t a1, void (*a2)(void))
{
  id v4;
  void *v5;

  if (qword_1EF50B218 != -1)
    swift_once();
  if (qword_1EF50E340)
  {
    v4 = objc_msgSend((id)qword_1EF50E340, sel_objectWithID_, a1);
    if (v4)
    {
      v5 = v4;
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
        a2();

    }
  }
}

unint64_t sub_1BDB67A3C()
{
  unint64_t result;

  result = qword_1EF50E350;
  if (!qword_1EF50E350)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50E350);
  }
  return result;
}

void sub_1BDB67A78(void *a1)
{
  uint64_t v1;

  sub_1BDB66D30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t **)(v1 + 32), (SEL *)&selRef_decryptSidecarData_, "Failed decrypting sidecar data for PaperKit attachment: %s");
}

void sub_1BDB67AA4(void *a1)
{
  uint64_t v1;

  sub_1BDB66FAC(a1, *(_QWORD *)(v1 + 16), *(uint8_t **)(v1 + 24));
}

uint64_t sub_1BDB67ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ICEncryptionDelegateSupport()
{
  return &type metadata for ICEncryptionDelegateSupport;
}

uint64_t storeEnumTagSinglePayload for ICEncryptionDelegateSupport.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDB67B60 + 4 * byte_1BDC1C675[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDB67B94 + 4 * asc_1BDC1C670[v4]))();
}

uint64_t sub_1BDB67B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB67B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB67BA4);
  return result;
}

uint64_t sub_1BDB67BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB67BB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDB67BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB67BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICEncryptionDelegateSupport.Error()
{
  return &type metadata for ICEncryptionDelegateSupport.Error;
}

unint64_t sub_1BDB67BE4()
{
  unint64_t result;

  result = qword_1EF50E358;
  if (!qword_1EF50E358)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1C6E4, &type metadata for ICEncryptionDelegateSupport.Error);
    atomic_store(result, (unint64_t *)&qword_1EF50E358);
  }
  return result;
}

uint64_t sub_1BDB67C28()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

void sub_1BDB67C50()
{
  uint64_t v0;

  sub_1BDB67988(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1BDB67C6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = 0;
  return result;
}

void sub_1BDB67C98(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1BDB67760(*(void **)(v1 + 16), *(void ***)(v1 + 24), a1);
}

void static MessageChunking.encodeAndChunk(_:size:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BDB67CC4(a1, a2, a3);
}

void sub_1BDB67CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[16];

  v10[12] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510090);
  v10[9] = *(_QWORD *)(v5 - 8);
  v10[10] = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v10[15] = (char *)v10 - v7;
  v8 = sub_1BDBFCB40();
  v10[7] = *(_QWORD *)(v8 - 8);
  v10[8] = v8;
  MEMORY[0x1E0C80A78](v8);
  v10[11] = (char *)v10 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1BDB680B8);
}

void sub_1BDB680EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[10];
  uint64_t v14;
  uint64_t v15;

  v15 = a1;
  v14 = type metadata accessor for MessageChunking.Message(0, a5, a6, a7);
  v13[8] = *(_QWORD *)(v14 - 8);
  v9 = MEMORY[0x1E0C80A78](v14);
  v13[5] = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1BDBFCB40();
  v13[6] = *(_QWORD *)(v11 - 8);
  v13[7] = v11;
  MEMORY[0x1E0C80A78](v11);
  v13[9] = (char *)v13 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1BDB68484);
}

uint64_t static MessageChunking.encodeAndChunk<A>(_:size:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  sub_1BDBFC804();
  swift_allocObject();
  sub_1BDBFC7F8();
  v10 = sub_1BDBFC7EC();
  if (!v5)
  {
    v12 = v10;
    v13 = v11;
    sub_1BDB680EC(v10, v11, a2, a3, a3, a4, a5);
    a5 = v14;
    sub_1BDAEB7EC(v12, v13);
  }
  swift_release();
  return a5;
}

uint64_t sub_1BDB68598()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1BDBFE5D4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1BDB685E8(char a1)
{
  if ((a1 & 1) != 0)
    return 1953653104;
  else
    return 1886220131;
}

BOOL sub_1BDB68608()
{
  uint64_t v0;

  v0 = sub_1BDBFE5D4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_1BDB6864C()
{
  unint64_t v0;

  v0 = sub_1BDBFE5D4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1BDB68698(char a1)
{
  return qword_1BDC1CD00[a1];
}

uint64_t sub_1BDB686B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CB68, a3);
  return sub_1BDBFE8D4();
}

uint64_t sub_1BDB68704(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CB68, a1);
  return sub_1BDBFD974();
}

uint64_t sub_1BDB68750()
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CB68);
  return sub_1BDBFD98C();
}

uint64_t sub_1BDB687A0()
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CB68);
  return sub_1BDBFD980();
}

uint64_t sub_1BDB687F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB68598();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB6881C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_1BDB685E8(*v1);
  *a1 = result;
  a1[1] = 0xE400000000000000;
  return result;
}

uint64_t sub_1BDB68848()
{
  char *v0;

  return sub_1BDB685E8(*v0);
}

uint64_t sub_1BDB68864@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB68598();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB68888@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDAEBAC8();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB688B8(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CC08, a1);
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB688EC(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CC08, a1);
  return sub_1BDBFEB50();
}

uint64_t sub_1BDB68920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CA78, a3);
  return sub_1BDBFE8D4();
}

uint64_t sub_1BDB68974(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CA78, a1);
  return sub_1BDBFD974();
}

uint64_t sub_1BDB689C0()
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CA78);
  return sub_1BDBFD98C();
}

uint64_t sub_1BDB68A10()
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CA78);
  return sub_1BDBFD980();
}

BOOL sub_1BDB68A60@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1BDB68608();
  *a1 = result;
  return result;
}

void sub_1BDB68A94(_QWORD *a1@<X8>)
{
  *a1 = 7562605;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1BDB68AA8()
{
  return 7562605;
}

BOOL sub_1BDB68AB8@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1BDB68608();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB68AE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB006B8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BDB68B18(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CC58, a1);
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB68B4C(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CC58, a1);
  return sub_1BDBFEB50();
}

uint64_t sub_1BDB68B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1C988, a3);
  return sub_1BDBFE8D4();
}

uint64_t sub_1BDB68BD4(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1C988, a1);
  return sub_1BDBFD974();
}

uint64_t sub_1BDB68C20()
{
  MEMORY[0x1C3B7B388](&unk_1BDC1C988);
  return sub_1BDBFD98C();
}

uint64_t sub_1BDB68C70()
{
  MEMORY[0x1C3B7B388](&unk_1BDC1C988);
  return sub_1BDBFD980();
}

uint64_t sub_1BDB68CC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB6864C();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB68CEC@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_1BDB68698(*v1);
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

uint64_t sub_1BDB68D18()
{
  char *v0;

  return sub_1BDB68698(*v0);
}

uint64_t sub_1BDB68D34@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB68694();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB68D58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDB6DA78();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB68D88(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CCA8, a1);
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB68DBC(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC1CCA8, a1);
  return sub_1BDBFEB50();
}

uint64_t static MessageChunking.Message.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char *v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v64 = a1;
  v65 = a2;
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MessageChunking.Message(0, a3, a4, a5);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (uint64_t *)((char *)&v56 - v17);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v63 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v20 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v22 = (char *)&v56 - v21;
  v23 = (uint64_t *)((char *)&v56 + *(int *)(v20 + 48) - v21);
  v62 = v13;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24((char *)&v56 - v21, v64, v12);
  v24((char *)v23, v65, v12);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v24((char *)v18, (uint64_t)v22, v12);
    v47 = *v18;
    v48 = v18[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v49 = *v23;
      v50 = v23[1];
      sub_1BDB6CED0(v47, v48);
      v55 = v51;
      sub_1BDAEB7EC(v49, v50);
      sub_1BDAEB7EC(v47, v48);
LABEL_14:
      v41 = v62;
      goto LABEL_15;
    }
    sub_1BDAEB7EC(v47, v48);
LABEL_11:
    v55 = 0;
    v41 = v63;
    v12 = TupleTypeMetadata2;
    goto LABEL_15;
  }
  v64 = v9;
  v65 = v8;
  v61 = v11;
  v24(v16, (uint64_t)v22, v12);
  v25 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
  v26 = v25[12];
  v27 = *(_QWORD *)&v16[v26];
  v28 = v25[16];
  v59 = *(_QWORD *)&v16[v28];
  v60 = v27;
  v29 = v25[20];
  v31 = *(_QWORD *)&v16[v29];
  v30 = *(_QWORD *)&v16[v29 + 8];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BDAEB7EC(v31, v30);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v16, v65);
    goto LABEL_11;
  }
  v63 = v30;
  v57 = *(uint64_t *)((char *)v23 + v26);
  v58 = v31;
  v56 = *(uint64_t *)((char *)v23 + v28);
  v32 = *(uint64_t *)((char *)v23 + v29);
  v33 = *(uint64_t *)((char *)v23 + v29 + 8);
  v35 = v64;
  v34 = v65;
  v36 = v61;
  (*(void (**)(char *, uint64_t *, uint64_t))(v64 + 32))(v61, v23, v65);
  v37 = sub_1BDBFCB04();
  v38 = *(void (**)(char *, uint64_t))(v35 + 8);
  v38(v16, v34);
  if ((v37 & 1) == 0 || (v39 = v32, v60 != v57))
  {
    v38(v36, v34);
    sub_1BDAEB7EC(v32, v33);
    sub_1BDAEB7EC(v58, v63);
    v55 = 0;
    goto LABEL_14;
  }
  v40 = v58;
  v41 = v62;
  v42 = v33;
  v43 = v39;
  if (v59 == v56)
  {
    v44 = v63;
    sub_1BDB6CED0(v58, v63);
    v45 = v42;
    v55 = v46;
    sub_1BDAEB7EC(v43, v45);
    sub_1BDAEB7EC(v40, v44);
    v38(v36, v34);
  }
  else
  {
    v53 = v36;
    v54 = v63;
    v38(v53, v34);
    sub_1BDAEB7EC(v39, v42);
    sub_1BDAEB7EC(v40, v54);
    v55 = 0;
  }
LABEL_15:
  (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v12);
  return v55 & 1;
}

uint64_t type metadata accessor for MessageChunking.Message(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageChunking.Message);
}

uint64_t MessageChunking.Message.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;

  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = type metadata accessor for MessageChunking.Message.PartialCodingKeys(255, v4, v5, v6);
  v45 = MEMORY[0x1C3B7B388](&unk_1BDC1CCA8, v7);
  v46 = v7;
  v55 = sub_1BDBFE730();
  v39 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v54 = (char *)&v38 - v8;
  v50 = sub_1BDBFCB40();
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v49 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MessageChunking.Message.CompleteCodingKeys(255, v4, v5, v6);
  v41 = MEMORY[0x1C3B7B388](&unk_1BDC1CC58, v10);
  v42 = v10;
  v44 = sub_1BDBFE730();
  v40 = *(_QWORD *)(v44 - 8);
  v11 = MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v38 - v12;
  v13 = *(a2 - 1);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for MessageChunking.Message.CodingKeys(255, v4, v5, v6);
  MEMORY[0x1C3B7B388](&unk_1BDC1CC08, v16);
  v51 = sub_1BDBFE730();
  v47 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v18 = (char *)&v38 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBFEACC();
  (*(void (**)(uint64_t *, uint64_t, _QWORD *))(v13 + 16))(v15, v53, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
    v53 = *(uint64_t *)((char *)v15 + *(int *)(v19 + 48));
    v20 = (uint64_t *)((char *)v15 + *(int *)(v19 + 80));
    v22 = *v20;
    v21 = v20[1];
    (*(void (**)(char *, uint64_t *, uint64_t))(v48 + 32))(v49, v15, v50);
    LOBYTE(v56) = 1;
    v23 = v51;
    sub_1BDBFE6AC();
    LOBYTE(v56) = 0;
    sub_1BDAC31B0(&qword_1ED23A730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    v24 = v52;
    sub_1BDBFE718();
    if (v24)
    {
      sub_1BDAEB7EC(v22, v21);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v54, v55);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v18, v23);
    }
    LOBYTE(v56) = 1;
    sub_1BDBFE70C();
    LOBYTE(v56) = 2;
    sub_1BDBFE70C();
    v56 = v22;
    v57 = v21;
    v32 = v21;
    v58 = 3;
    sub_1BDB6D16C();
    sub_1BDBFE718();
    v34 = v49;
    v33 = v50;
    v35 = v48;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v54, v55);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v33);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v23);
    v36 = v22;
    v37 = v32;
  }
  else
  {
    v26 = v40;
    v27 = *v15;
    v28 = v15[1];
    LOBYTE(v56) = 0;
    v29 = v43;
    v30 = v51;
    sub_1BDBFE6AC();
    v56 = v27;
    v57 = v28;
    sub_1BDB6D16C();
    v31 = v44;
    sub_1BDBFE718();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v31);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v30);
    v36 = v27;
    v37 = v28;
  }
  return sub_1BDAEB7EC(v36, v37);
}

uint64_t MessageChunking.Message.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  __int128 v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _QWORD *v80;

  v80 = a1;
  v71 = a5;
  v8 = type metadata accessor for MessageChunking.Message.PartialCodingKeys(255, a2, a3, a4);
  v67 = MEMORY[0x1C3B7B388](&unk_1BDC1CCA8, v8);
  v68 = v8;
  v63 = sub_1BDBFE688();
  v60 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v69 = (char *)&v56 - v9;
  v10 = type metadata accessor for MessageChunking.Message.CompleteCodingKeys(255, a2, a3, a4);
  v64 = MEMORY[0x1C3B7B388](&unk_1BDC1CC58, v10);
  v65 = v10;
  v62 = sub_1BDBFE688();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v66 = (char *)&v56 - v11;
  v12 = type metadata accessor for MessageChunking.Message.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1C3B7B388](&unk_1BDC1CC08, v12);
  v13 = sub_1BDBFE688();
  v73 = *(_QWORD *)(v13 - 8);
  v74 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v56 - v14;
  v72 = type metadata accessor for MessageChunking.Message(0, a2, a3, a4);
  v70 = *(_QWORD *)(v72 - 8);
  v16 = MEMORY[0x1E0C80A78](v72);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v56 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v56 - v22;
  __swift_project_boxed_opaque_existential_1(v80, v80[3]);
  v24 = v75;
  sub_1BDBFEAB4();
  if (!v24)
  {
    v57 = v21;
    v59 = v18;
    v58 = v23;
    v75 = 0;
    v25 = v74;
    v26 = v15;
    *(_QWORD *)&v76 = sub_1BDBFE67C();
    v27 = sub_1BDBFDAAC();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v27);
    *(_QWORD *)&v78 = sub_1BDBFE1A8();
    *((_QWORD *)&v78 + 1) = v28;
    *(_QWORD *)&v79 = v29;
    *((_QWORD *)&v79 + 1) = v30;
    v31 = sub_1BDBFE19C();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEBF88], v31);
    sub_1BDBFDE00();
    v32 = v76;
    if (v76 != 2)
    {
      v56 = v78;
      v76 = v78;
      v77 = v79;
      if ((sub_1BDBFDE24() & 1) != 0)
      {
        if ((v32 & 1) != 0)
        {
          LOBYTE(v76) = 1;
          v41 = v75;
          sub_1BDBFE5EC();
          v42 = v70;
          v36 = v71;
          if (v41)
            goto LABEL_8;
          sub_1BDBFCB40();
          LOBYTE(v76) = 0;
          sub_1BDAC31B0(&qword_1EF50CD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
          v45 = v63;
          sub_1BDBFE670();
          LOBYTE(v76) = 1;
          v75 = sub_1BDBFE664();
          v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
          *(_QWORD *)&v59[*(int *)(v50 + 48)] = v75;
          LOBYTE(v76) = 2;
          v51 = sub_1BDBFE664();
          v52 = *(int *)(v50 + 64);
          v53 = v59;
          *(_QWORD *)&v59[v52] = v51;
          LOBYTE(v76) = 3;
          sub_1BDB6D1B0();
          v54 = v69;
          sub_1BDBFE670();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v54, v45);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v73 + 8))(v15, v25);
          v47 = v72;
          swift_storeEnumTagMultiPayload();
          v48 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
          v55 = v53;
          v49 = v58;
          v48(v58, v55, v47);
        }
        else
        {
          LOBYTE(v76) = 0;
          v33 = v66;
          v34 = v75;
          sub_1BDBFE5EC();
          v35 = v70;
          v36 = v71;
          if (v34)
            goto LABEL_8;
          sub_1BDB6D1B0();
          v43 = v62;
          sub_1BDBFE670();
          v44 = v73;
          (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v43);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v25);
          v46 = v57;
          *(_OWORD *)v57 = v76;
          v47 = v72;
          swift_storeEnumTagMultiPayload();
          v48 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
          v49 = v58;
          v48(v58, v46, v47);
        }
        v48(v36, v49, v47);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v80);
      }
    }
    v37 = sub_1BDBFE3D0();
    swift_allocError();
    v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0);
    *v39 = v72;
    sub_1BDBFE5F8();
    sub_1BDBFE3AC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x1E0DEC450], v37);
    swift_willThrow();
LABEL_8:
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v15, v25);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v80);
}

uint64_t sub_1BDB69E40@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return MessageChunking.Message.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1BDB69E60(_QWORD *a1, _QWORD *a2)
{
  return MessageChunking.Message.encode(to:)(a1, a2);
}

uint64_t sub_1BDB69E74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static MessageChunking.Message.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

unint64_t MessageChunking.UnsafeAppendingAccumulator.init()@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_1BDB0B6B0(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

uint64_t MessageChunking.UnsafeAppendingAccumulator.process<A>(incoming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  int *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;

  v51 = a5;
  v9 = sub_1BDBFCB40();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v45 - v14;
  v16 = type metadata accessor for MessageChunking.Message(0, a2, a3, a4);
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v45 - v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v45 - v17, a1, v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = a3;
    v48 = a2;
    v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
    v46 = *(uint64_t *)((char *)v18 + v20[12]);
    v21 = (uint64_t *)((char *)v18 + v20[20]);
    v23 = *v21;
    v22 = v21[1];
    v49 = *(uint64_t *)((char *)v18 + v20[16]);
    v50 = v22;
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v15, v18, v9);
    v24 = v52;
    v25 = *v52;
    v26 = *(_QWORD *)(*v52 + 16);
    v47 = v10;
    v27 = (uint64_t)v15;
    if (v26 && (v28 = sub_1BDB6AB9C((uint64_t)v15), (v29 & 1) != 0))
    {
      v30 = (uint64_t *)(*(_QWORD *)(v25 + 56) + 16 * v28);
      v31 = *v30;
      v32 = v30[1];
      sub_1BDB4EB54(*v30, v32);
    }
    else
    {
      v31 = 0;
      v32 = 0xC000000000000000;
    }
    *(_QWORD *)&v54 = v31;
    *((_QWORD *)&v54 + 1) = v32;
    sub_1BDB4EB54(v31, v32);
    v38 = v50;
    sub_1BDB4EB54(v23, v50);
    sub_1BDB6CAA0(v23, v38);
    sub_1BDAEB7EC(v23, v38);
    result = sub_1BDAEB7EC(v31, v32);
    if (__OFSUB__(v49, 1))
    {
      __break(1u);
    }
    else
    {
      v39 = v54;
      if (v46 == v49 - 1)
      {
        v49 = v9;
        sub_1BDB6B664(v27, &v54);
        sub_1BDB40600(v54, *((unint64_t *)&v54 + 1));
        *(_QWORD *)&v54 = *v24;
        v40 = sub_1BDBFE0AC();
        v55 = v45;
        swift_bridgeObjectRetain();
        v41 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEE9A0], v40, &v55);
        sub_1BDB6A29C(v39, *((unint64_t *)&v39 + 1), v40, v41, v51);
        sub_1BDAEB7EC(v23, v50);
        sub_1BDAEB7EC(v39, *((unint64_t *)&v39 + 1));
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v27, v49);
      }
      else
      {
        v42 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v13, v27, v9);
        sub_1BDB4EB54(v39, *((unint64_t *)&v39 + 1));
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v54 = *v24;
        *v24 = 0x8000000000000000;
        sub_1BDB6C698(v39, *((uint64_t *)&v39 + 1), (uint64_t)v13, isUniquelyReferenced_nonNull_native);
        *v24 = v54;
        swift_bridgeObjectRelease();
        v44 = *(void (**)(char *, uint64_t))(v42 + 8);
        v44(v13, v9);
        sub_1BDAEB7EC(v23, v50);
        sub_1BDAEB7EC(v39, *((unint64_t *)&v39 + 1));
        v44((char *)v27, v9);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v51, 1, 1);
      }
    }
  }
  else
  {
    v33 = *v18;
    v34 = v18[1];
    v35 = sub_1BDBFE0AC();
    v53 = a3;
    swift_bridgeObjectRetain();
    v36 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEE9A0], v35, &v53);
    sub_1BDB6A29C(v33, v34, v35, v36, v51);
    swift_bridgeObjectRelease();
    return sub_1BDAEB7EC(v33, v34);
  }
  return result;
}

uint64_t sub_1BDB6A29C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  _QWORD v20[4];
  uint64_t v21;

  v20[1] = a4;
  v21 = a5;
  v8 = sub_1BDBFE0AC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - v11;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[2] = a1;
  v20[3] = a2;
  sub_1BDB4EB54(a1, a2);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    v17(v12, 0, 1, a3);
    v18 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v18(v15, v12, a3);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v21, v15, a3);
  }
  else
  {
    v17(v12, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    sub_1BDBFC7E0();
    swift_allocObject();
    sub_1BDBFC7D4();
    sub_1BDBFC7C8();
    return swift_release();
  }
}

void MessageChunking.Message.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v2 = v1;
  v4 = sub_1BDBFCB40();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
    v13 = *(_QWORD *)&v10[v12[12]];
    v14 = *(_QWORD *)&v10[v12[16]];
    v15 = *(_QWORD *)&v10[v12[20] + 8];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    strcpy((char *)v19, ".partial(t=");
    HIDWORD(v19[1]) = -352321536;
    v18 = *(_QWORD *)(a1 + 16);
    swift_getMetatypeMetadata();
    sub_1BDBFD734();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDAC31B0((unint64_t *)&qword_1EF50D6A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    if (!__OFADD__(v13, 1))
    {
      v18 = v13 + 1;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      v18 = v14;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      __asm { BR              X11 }
    }
    __break(1u);
    JUMPOUT(0x1BDB6A87CLL);
  }
  v16 = *((_QWORD *)v10 + 1);
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v19, ".complete(t=");
  BYTE5(v19[1]) = 0;
  HIWORD(v19[1]) = -5120;
  v18 = *(_QWORD *)(a1 + 16);
  swift_getMetatypeMetadata();
  sub_1BDBFD734();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  __asm { BR              X11 }
}

uint64_t static MessageChunking.Message<>.messageIdentifier.getter()
{
  return sub_1BDBFCCE4();
}

uint64_t sub_1BDB6A8D0()
{
  return static MessageChunking.Message<>.messageIdentifier.getter();
}

void sub_1BDB6A8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BDB6A93C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1BDB6AB20);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

unint64_t sub_1BDB6AB44(uint64_t a1)
{
  uint64_t v2;

  sub_1BDBFEA0C();
  NoteEditActivityEvent.Parents.hash(into:)();
  v2 = sub_1BDBFEA30();
  return sub_1BDB6ADFC(a1, v2);
}

unint64_t sub_1BDB6AB9C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1BDBFCB40();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_1BDBFD614();
  return sub_1BDB6B254(a1, v3, v2, &qword_1ED23AD28, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1BDB6AC34(uint64_t a1)
{
  uint64_t v2;

  sub_1BDBFE508();
  v2 = sub_1BDBFD614();
  return sub_1BDB6AEF4(a1, v2);
}

unint64_t sub_1BDB6AC84(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFE280();
  return sub_1BDB6B01C(a1, v2);
}

unint64_t sub_1BDB6ACB4(uint64_t a1)
{
  uint64_t v2;

  sub_1BDBFD6F8();
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  v2 = sub_1BDBFEA30();
  swift_bridgeObjectRelease();
  return sub_1BDB6B0E0(a1, v2);
}

unint64_t sub_1BDB6AD34(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1BDBFC948();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BDAC31B0(&qword_1ED23ACF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  v3 = sub_1BDBFD614();
  return sub_1BDB6B254(a1, v3, v2, &qword_1ED23AD00, MEMORY[0x1E0CB0028]);
}

unint64_t sub_1BDB6ADCC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFE064();
  return sub_1BDB6B384(a1, v2);
}

unint64_t sub_1BDB6ADFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v5 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BDB6DB8C(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      v13 = _s11NotesShared21NoteEditActivityEventV7ParentsO2eeoiySbAE_AEtFZ_0((uint64_t)v8, a1);
      sub_1BDB6DBD0((uint64_t)v8);
      if ((v13 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1BDB6AEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1BDBFE508();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_1BDBFD6BC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1BDB6B01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1BDB6DA80(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1C3B79858](v9, a1);
      sub_1BDB3B22C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1BDB6B0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1BDBFD6F8();
    v8 = v7;
    if (v6 == sub_1BDBFD6F8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1BDBFD6F8();
          v15 = v14;
          if (v13 == sub_1BDBFD6F8() && v15 == v16)
            break;
          v18 = sub_1BDBFE874();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

