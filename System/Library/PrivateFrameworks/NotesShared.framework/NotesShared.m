id getCKRecordClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCKRecordClass_softClass;
  v7 = getCKRecordClass_softClass;
  if (!getCKRecordClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCKRecordClass_block_invoke;
    v3[3] = &unk_1E76C77A8;
    v3[4] = &v4;
    __getCKRecordClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1BD91BD2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_6(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_10(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_8_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x26u);
}

void sub_1BD91E370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD91EA20(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void ICQueryType.predicate.getter()
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ICQueryType.DateRange(0);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

id sub_1BD91F7A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    *(_QWORD *)(v1 - 88) = MEMORY[0x1E0DEE9D8];
    sub_1BDBFE46C();
    v4 = (uint64_t *)(v2 + 32);
    do
    {
      v5 = *v4++;
      *(_QWORD *)(v1 - 96) = v5;
      ICQueryType.predicate.getter();
      sub_1BDBFE448();
      sub_1BDBFE478();
      sub_1BDBFE484();
      sub_1BDBFE454();
      --v3;
    }
    while (v3);
  }
  sub_1BD942914(0, &qword_1ED23A610);
  v6 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v6);

  return v7;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t *a1)
{
  int v2;
  uint64_t i;
  uint64_t v4;
  uint64_t result;

  v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (i = 0; i < v2; ++i)
    {
      v4 = *(_QWORD *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
        v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  result = *a1;
  if (*a1)
    JUMPOUT(0x1C3B7A830);
  return result;
}

void topotext::AttributeRun::~AttributeRun(void **this, uint64_t a2, uint64_t a3)
{
  topotext::AttributeRun::~AttributeRun(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

{
  *this = &off_1E76CC3D0;
  topotext::AttributeRun::SharedDtor((topotext::AttributeRun *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

uint64_t topotext::String::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  int v12;
  uint64_t v13;
  int32x2_t v14;
  uint64_t v15;
  int32x2_t v16;
  int32x2_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  _BYTE *v33;
  int v34;
  uint64_t v35;
  int32x2_t v36;
  topotext::AttributeRun *v37;
  int32x2_t v38;
  int32x2_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  int32x2_t v49;
  int32x2_t *v50;
  int32x2_t v51;
  int32x2_t v52;
  char *v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE v62[32];
  _QWORD v63[2];
  unsigned int v64;

  google::protobuf::io::StringOutputStream::StringOutputStream(v63, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v62, (google::protobuf::io::ZeroCopyOutputStream *)v63);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && *v5 >= 1)
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
LABEL_6:
      switch(v7 >> 3)
      {
        case 2u:
          if ((_DWORD)v7 != 18)
            goto LABEL_28;
          this[4].i32[0] |= 1u;
          if (!google::protobuf::internal::empty_string_)
            __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
          v9 = (std::string *)this[5];
          if (v9 == (std::string *)google::protobuf::internal::empty_string_)
          {
            v9 = (std::string *)operator new();
            v9->__r_.__value_.__r.__words[0] = 0;
            v9->__r_.__value_.__l.__size_ = 0;
            v9->__r_.__value_.__r.__words[2] = 0;
            this[5] = (int32x2_t)v9;
          }
          if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
            goto LABEL_103;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 26)
            continue;
          break;
        case 3u:
          if ((_DWORD)v7 != 26)
            goto LABEL_28;
          goto LABEL_33;
        case 4u:
          if ((_DWORD)v7 == 34)
            goto LABEL_51;
          goto LABEL_28;
        case 5u:
          if ((_DWORD)v7 == 42)
            goto LABEL_65;
          goto LABEL_28;
        case 6u:
          if ((_DWORD)v7 == 50)
            goto LABEL_83;
LABEL_28:
          if ((_DWORD)v7 && (v7 & 7) != 4)
            goto LABEL_30;
          goto LABEL_104;
        default:
          goto LABEL_15;
      }
      while (1)
      {
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_33:
        v12 = this[7].i32[1];
        v13 = this[7].i32[0];
        if ((int)v13 >= v12)
        {
          if (v12 == this[8].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[6], v12 + 1);
          v15 = operator new();
          *(_QWORD *)v15 = &off_1E76CC268;
          *(_QWORD *)(v15 + 64) = 0;
          *(_QWORD *)(v15 + 72) = 0;
          *(_OWORD *)(v15 + 8) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *(_OWORD *)(v15 + 40) = 0u;
          *(_QWORD *)(v15 + 53) = 0;
          v16 = this[6];
          v17 = this[7];
          this[7] = vadd_s32(v17, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v16 + 8 * v17.i32[0]) = v15;
        }
        else
        {
          v14 = this[6];
          this[7].i32[0] = v13 + 1;
          v15 = *(_QWORD *)(*(_QWORD *)&v14 + 8 * v13);
        }
        v64 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v64))
            break;
        }
        else
        {
          v64 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          break;
        v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v64);
        if (!topotext::Substring::MergePartialFromCodedStream((topotext::Substring *)v15, a2)
          || !*((_BYTE *)a2 + 36))
        {
          break;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2))
          goto LABEL_2;
        v25 = *v10;
        if (v25 != 26)
        {
          if (v25 != 34)
            goto LABEL_2;
          *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_51:
          this[4].i32[0] |= 4u;
          v26 = (uint64_t)this[9];
          if (!v26)
          {
            v26 = operator new();
            *(_QWORD *)v26 = &off_1E76CC178;
            *(_OWORD *)(v26 + 8) = 0u;
            *(_OWORD *)(v26 + 24) = 0u;
            *(_OWORD *)(v26 + 40) = 0u;
            *(_DWORD *)(v26 + 56) = 0;
            this[9] = (int32x2_t)v26;
          }
          v64 = 0;
          v27 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v64))
              break;
          }
          else
          {
            v64 = *v27;
            *((_QWORD *)a2 + 1) = v27 + 1;
          }
          v28 = *((_DWORD *)a2 + 14);
          v29 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v28 + 1;
          if (v28 < v29)
          {
            v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v64);
            if (topotext::VectorTimestamp::MergePartialFromCodedStream((int32x2_t *)v26, a2))
            {
              if (*((_BYTE *)a2 + 36))
              {
                google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v30);
                v31 = *((_DWORD *)a2 + 14);
                v23 = __OFSUB__(v31, 1);
                v32 = v31 - 1;
                if (v32 < 0 == v23)
                  *((_DWORD *)a2 + 14) = v32;
                v33 = (_BYTE *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 != 42)
                  goto LABEL_2;
                while (1)
                {
                  *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_65:
                  v34 = this[11].i32[1];
                  v35 = this[11].i32[0];
                  if ((int)v35 >= v34)
                  {
                    if (v34 == this[12].i32[0])
                      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[10], v34 + 1);
                    v37 = google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New();
                    v38 = this[10];
                    v39 = this[11];
                    this[11] = vadd_s32(v39, (int32x2_t)0x100000001);
                    *(_QWORD *)(*(_QWORD *)&v38 + 8 * v39.i32[0]) = v37;
                  }
                  else
                  {
                    v36 = this[10];
                    this[11].i32[0] = v35 + 1;
                    v37 = *(topotext::AttributeRun **)(*(_QWORD *)&v36 + 8 * v35);
                  }
                  v64 = 0;
                  v40 = (char *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 < 0)
                  {
                    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v64))
                      goto LABEL_103;
                  }
                  else
                  {
                    v64 = *v40;
                    *((_QWORD *)a2 + 1) = v40 + 1;
                  }
                  v41 = *((_DWORD *)a2 + 14);
                  v42 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v41 + 1;
                  if (v41 >= v42)
                    break;
                  v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v64);
                  if (!topotext::AttributeRun::MergePartialFromCodedStream(v37, a2)
                    || !*((_BYTE *)a2 + 36))
                  {
                    break;
                  }
                  google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v43);
                  v44 = *((_DWORD *)a2 + 14);
                  v23 = __OFSUB__(v44, 1);
                  v45 = v44 - 1;
                  if (v45 < 0 == v23)
                    *((_DWORD *)a2 + 14) = v45;
                  v33 = (_BYTE *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v33 >= *((_QWORD *)a2 + 2))
                    goto LABEL_2;
                  v46 = *v33;
                  if (v46 != 42)
                  {
                    if (v46 != 50)
                      goto LABEL_2;
                    while (1)
                    {
                      *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_83:
                      v47 = this[14].i32[1];
                      v48 = this[14].i32[0];
                      if ((int)v48 >= v47)
                      {
                        if (v47 == this[15].i32[0])
                          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[13], v47 + 1);
                        v50 = (int32x2_t *)google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
                        v51 = this[13];
                        v52 = this[14];
                        this[14] = vadd_s32(v52, (int32x2_t)0x100000001);
                        *(_QWORD *)(*(_QWORD *)&v51 + 8 * v52.i32[0]) = v50;
                      }
                      else
                      {
                        v49 = this[13];
                        this[14].i32[0] = v48 + 1;
                        v50 = *(int32x2_t **)(*(_QWORD *)&v49 + 8 * v48);
                      }
                      v64 = 0;
                      v53 = (char *)*((_QWORD *)a2 + 1);
                      if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 < 0)
                      {
                        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v64))
                          goto LABEL_103;
                      }
                      else
                      {
                        v64 = *v53;
                        *((_QWORD *)a2 + 1) = v53 + 1;
                      }
                      v54 = *((_DWORD *)a2 + 14);
                      v55 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v54 + 1;
                      if (v54 >= v55)
                        goto LABEL_103;
                      v56 = google::protobuf::io::CodedInputStream::PushLimit(a2, v64);
                      if (!topotext::Attachment::MergePartialFromCodedStream(v50, a2)
                        || !*((_BYTE *)a2 + 36))
                      {
                        goto LABEL_103;
                      }
                      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v56);
                      v57 = *((_DWORD *)a2 + 14);
                      v23 = __OFSUB__(v57, 1);
                      v58 = v57 - 1;
                      if (v58 < 0 == v23)
                        *((_DWORD *)a2 + 14) = v58;
                      v33 = (_BYTE *)*((_QWORD *)a2 + 1);
                      v59 = (_BYTE *)*((_QWORD *)a2 + 2);
                      if (v33 >= v59 || *v33 != 50)
                      {
                        if (v33 == v59 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          v60 = 1;
                          *((_BYTE *)a2 + 36) = 1;
                          goto LABEL_105;
                        }
                        goto LABEL_2;
                      }
                    }
                  }
                }
              }
            }
          }
          break;
        }
      }
LABEL_103:
      v60 = 0;
      goto LABEL_105;
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) != 0)
      goto LABEL_6;
LABEL_15:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      break;
LABEL_30:
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v62, v4))goto LABEL_103;
  }
LABEL_104:
  v60 = 1;
LABEL_105:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v62);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v63);
  return v60;
}

void sub_1BD921824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

topotext::AttributeRun *google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New()
{
  topotext::AttributeRun *v0;

  v0 = (topotext::AttributeRun *)operator new();
  topotext::AttributeRun::AttributeRun(v0);
  return v0;
}

void sub_1BD921894(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4042973B72);
  _Unwind_Resume(a1);
}

topotext::AttributeRun *topotext::AttributeRun::AttributeRun(topotext::AttributeRun *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC3D0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::AttributeRun::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9218FC(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

double topotext::AttributeRun::SharedCtor(topotext::AttributeRun *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD v7[2];
  char v8;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v7[0] = &off_1E76C9A40;
    v7[1] = google::protobuf::internal::InitEmptyString;
    v8 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v7);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v7);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_DWORD *)this + 20) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *((_DWORD *)this + 17) = 0;
  *((_QWORD *)this + 9) = v5;
  *((_DWORD *)this + 8) = 0;
  *(_OWORD *)((char *)this + 84) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_QWORD *)((char *)this + 116) = 0;
  return result;
}

void sub_1BD9219C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Color::MergePartialFromCodedStream(topotext::Color *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  _BYTE *v9;
  BOOL v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v15[32];
  _QWORD v16[2];
  unsigned int v17;

  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_12:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
LABEL_39:
        v13 = 1;
        goto LABEL_40;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))
      {
LABEL_38:
        v13 = 0;
        goto LABEL_40;
      }
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 13)
          goto LABEL_29;
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 8) |= 1u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_19:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_24:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 12) = v17;
        *((_DWORD *)this + 8) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_33:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 13) = v17;
        *((_DWORD *)this + 8) |= 8u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v13 = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 2u:
        if ((_DWORD)v7 == 21)
          goto LABEL_19;
        goto LABEL_29;
      case 3u:
        if ((_DWORD)v7 == 29)
          goto LABEL_24;
        goto LABEL_29;
      case 4u:
        if ((_DWORD)v7 == 37)
          goto LABEL_33;
LABEL_29:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_31;
        goto LABEL_39;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_40:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1BD921C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  unsigned int *v3;
  _BOOL8 result;
  char __dst[4];

  v3 = (unsigned int *)*((_QWORD *)this + 1);
  if (((*((_DWORD *)this + 4) - (_DWORD)v3) & 0xFFFFFFFC) != 0)
  {
    *((_QWORD *)this + 1) = v3 + 1;
  }
  else
  {
    v3 = (unsigned int *)__dst;
    result = google::protobuf::io::CodedInputStream::ReadRaw(this, __dst, 4);
    if (!result)
      return result;
  }
  *a2 = *v3;
  return 1;
}

uint64_t topotext::Font::MergePartialFromCodedStream(topotext::Font *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  std::string *v10;
  _BYTE *v11;
  BOOL v12;
  unint64_t v13;
  _BYTE *v14;
  char *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  _BYTE v19[32];
  _QWORD v20[2];
  unsigned int v21;

  google::protobuf::io::StringOutputStream::StringOutputStream(v20, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19, (google::protobuf::io::ZeroCopyOutputStream *)v20);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_17;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      v9 = v7 >> 3;
      if (v7 >> 3 == 3)
      {
        if ((_DWORD)v7 == 24)
        {
          v15 = (char *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          goto LABEL_34;
        }
LABEL_29:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_43;
        goto LABEL_31;
      }
      if (v9 == 2)
      {
        if ((_DWORD)v7 == 21)
          goto LABEL_24;
        goto LABEL_29;
      }
      if (v9 == 1)
        break;
LABEL_17:
      if ((_DWORD)v7)
        v12 = (v7 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
LABEL_43:
        v17 = 1;
        goto LABEL_45;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v19, v4))goto LABEL_44;
    }
    if ((_DWORD)v7 != 10)
      goto LABEL_29;
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v10 = (std::string *)*((_QWORD *)this + 5);
    if (v10 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v10 = (std::string *)operator new();
      v10->__r_.__value_.__r.__words[0] = 0;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 5) = v10;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v10))
      break;
    v11 = (_BYTE *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 < *((_QWORD *)a2 + 2) && *v11 == 21)
    {
      *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_24:
      v21 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v21))
        break;
      *((_DWORD *)this + 12) = v21;
      *((_DWORD *)this + 8) |= 2u;
      v14 = (_BYTE *)*((_QWORD *)a2 + 1);
      v13 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v14 < v13 && *v14 == 24)
      {
        v15 = v14 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_34:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 13))break;
          v16 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 13) = *v15;
          v16 = (unsigned __int8 *)(v15 + 1);
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 8) |= 4u;
        if (v16 == (unsigned __int8 *)v13 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          v17 = 1;
          *((_BYTE *)a2 + 36) = 1;
          goto LABEL_45;
        }
      }
    }
  }
LABEL_44:
  v17 = 0;
LABEL_45:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v20);
  return v17;
}

void sub_1BD921F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::ParagraphStyle::MergePartialFromCodedStream(topotext::ParagraphStyle *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  BOOL v12;
  int v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  int v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  topotext::Todo *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  BOOL v38;
  int v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  std::string *v44;
  uint64_t v45;
  _BYTE v47[32];
  _QWORD v48[2];
  unsigned int v49;

  google::protobuf::io::StringOutputStream::StringOutputStream(v48, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v47, (google::protobuf::io::ZeroCopyOutputStream *)v48);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_11:
      if ((_DWORD)v7)
        v12 = (v7 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
LABEL_119:
        v45 = 1;
        goto LABEL_120;
      }
LABEL_34:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v47, v4))goto LABEL_118;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 8)
          goto LABEL_32;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_118;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 >= v9 || *v11 != 16)
          continue;
        v20 = v11 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_42:
        v49 = 0;
        if ((unint64_t)v20 >= v9 || *v20 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49) & 1) == 0)
            goto LABEL_118;
          v24 = v49;
        }
        else
        {
          v24 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        if (v24 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v47, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v47, v24);
        }
        else
        {
          *((_DWORD *)this + 8) |= 2u;
          *((_DWORD *)this + 11) = v24;
        }
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v25 >= v14 || *v25 != 24)
          continue;
        v15 = v25 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_53:
        v49 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49) & 1) == 0)
            goto LABEL_118;
          v26 = v49;
        }
        else
        {
          v26 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        if (v26 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v47, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v47, v26);
        }
        else
        {
          *((_DWORD *)this + 8) |= 4u;
          *((_DWORD *)this + 12) = v26;
        }
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v27 >= v16 || *v27 != 32)
          continue;
        v17 = v27 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_64:
        v49 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))
            goto LABEL_118;
          v28 = v49;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v17;
          v29 = v17 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 13) = v28;
        v13 = *((_DWORD *)this + 8) | 8;
        *((_DWORD *)this + 8) = v13;
        if ((unint64_t)v29 >= v16 || *v29 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_72:
        *((_DWORD *)this + 8) = v13 | 0x10;
        v30 = (topotext::Todo *)*((_QWORD *)this + 7);
        if (!v30)
        {
          v30 = (topotext::Todo *)operator new();
          topotext::Todo::Todo(v30, v31, v32);
          *((_QWORD *)this + 7) = v30;
        }
        v49 = 0;
        v33 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))
            goto LABEL_118;
        }
        else
        {
          v49 = *v33;
          *((_QWORD *)a2 + 1) = v33 + 1;
        }
        v34 = *((_DWORD *)a2 + 14);
        v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35)
          goto LABEL_118;
        v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v49);
        if (!topotext::Todo::MergePartialFromCodedStream(v30, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_118;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v36);
        v37 = *((_DWORD *)a2 + 14);
        v38 = __OFSUB__(v37, 1);
        v39 = v37 - 1;
        if (v39 < 0 == v38)
          *((_DWORD *)a2 + 14) = v39;
        v40 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v40 >= v18 || *v40 != 48)
          continue;
        v21 = v40 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_86:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 16))goto LABEL_118;
          v41 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 16) = *v21;
          v41 = v21 + 1;
          *((_QWORD *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v41 >= v18 || *v41 != 56)
          continue;
        v22 = v41 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_94:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 17))goto LABEL_118;
          v42 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 17) = *v22;
          v42 = v22 + 1;
          *((_QWORD *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 8) |= 0x40u;
        if ((unint64_t)v42 >= v18 || *v42 != 64)
          continue;
        v19 = v42 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_102:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 20))goto LABEL_118;
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 20) = *v19;
          v43 = v19 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        v23 = *((_DWORD *)this + 8) | 0x80;
        *((_DWORD *)this + 8) = v23;
        if ((unint64_t)v43 >= v18 || *v43 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v43 + 1;
        goto LABEL_110;
      case 2u:
        if ((_DWORD)v7 != 16)
          goto LABEL_32;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      case 3u:
        if ((_DWORD)v7 != 24)
          goto LABEL_32;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_53;
      case 4u:
        if ((_DWORD)v7 != 32)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_64;
      case 5u:
        if ((_DWORD)v7 != 42)
          goto LABEL_32;
        v13 = *((_DWORD *)this + 8);
        goto LABEL_72;
      case 6u:
        if ((_DWORD)v7 != 48)
          goto LABEL_32;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_86;
      case 7u:
        if ((_DWORD)v7 != 56)
          goto LABEL_32;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_94;
      case 8u:
        if ((_DWORD)v7 != 64)
          goto LABEL_32;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_102;
      case 9u:
        if ((_DWORD)v7 != 74)
        {
LABEL_32:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
            goto LABEL_119;
          goto LABEL_34;
        }
        v23 = *((_DWORD *)this + 8);
LABEL_110:
        *((_DWORD *)this + 8) = v23 | 0x100;
        if (!google::protobuf::internal::empty_string_)
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v44 = (std::string *)*((_QWORD *)this + 9);
        if (v44 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v44 = (std::string *)operator new();
          v44->__r_.__value_.__r.__words[0] = 0;
          v44->__r_.__value_.__l.__size_ = 0;
          v44->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 9) = v44;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v44))
        {
LABEL_118:
          v45 = 0;
          goto LABEL_120;
        }
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v45 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_120:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v47);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v48);
        return v45;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1BD922618(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C40417120EDLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::MergePartialFromCodedStream(topotext::AttributeRun *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  int v21;
  char *v22;
  int v23;
  unint64_t v24;
  char *v25;
  topotext::ParagraphStyle *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  BOOL v34;
  int v35;
  _BYTE *v36;
  topotext::Font *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  unsigned int v50;
  _BYTE *v51;
  std::string *v52;
  _BYTE *v53;
  uint64_t v54;
  char *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  _BYTE *v61;
  unsigned int v62;
  _BYTE *v63;
  topotext::AttachmentInfo *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  _BYTE *v73;
  _BYTE *v74;
  _BYTE *v75;
  topotext::AttachmentInfo *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  unsigned int *v87;
  unsigned int *v88;
  _BYTE v89[32];
  _QWORD v90[2];
  unsigned int v91;

  google::protobuf::io::StringOutputStream::StringOutputStream(v90, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v89, (google::protobuf::io::ZeroCopyOutputStream *)v90);
  v87 = (unsigned int *)((char *)this + 48);
  v88 = (unsigned int *)((char *)this + 52);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_12;
LABEL_6:
      if ((_DWORD)v7)
        v9 = (v7 & 7) == 4;
      else
        v9 = 1;
      if (v9)
      {
LABEL_189:
        v85 = 1;
        goto LABEL_190;
      }
LABEL_44:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v89, v4))goto LABEL_188;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_12:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 8)
          goto LABEL_42;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v87))
            goto LABEL_188;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v87 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        v21 = *((_DWORD *)this + 8) | 1;
        *((_DWORD *)this + 8) = v21;
        if ((unint64_t)v12 >= v10 || *v12 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_51:
        *((_DWORD *)this + 8) = v21 | 2;
        v26 = (topotext::ParagraphStyle *)*((_QWORD *)this + 5);
        if (!v26)
        {
          v26 = (topotext::ParagraphStyle *)operator new();
          topotext::ParagraphStyle::ParagraphStyle(v26, v27, v28);
          *((_QWORD *)this + 5) = v26;
        }
        v91 = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))
            goto LABEL_188;
        }
        else
        {
          v91 = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          goto LABEL_188;
        v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v91);
        if (!topotext::ParagraphStyle::MergePartialFromCodedStream(v26, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_188;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v32);
        v33 = *((_DWORD *)a2 + 14);
        v34 = __OFSUB__(v33, 1);
        v35 = v33 - 1;
        if (v35 < 0 == v34)
          *((_DWORD *)a2 + 14) = v35;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_65:
        *((_DWORD *)this + 8) |= 4u;
        v37 = (topotext::Font *)*((_QWORD *)this + 7);
        if (!v37)
        {
          v37 = (topotext::Font *)operator new();
          topotext::Font::Font(v37, v38, v39);
          *((_QWORD *)this + 7) = v37;
        }
        v91 = 0;
        v40 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))
            goto LABEL_188;
        }
        else
        {
          v91 = *v40;
          *((_QWORD *)a2 + 1) = v40 + 1;
        }
        v41 = *((_DWORD *)a2 + 14);
        v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42)
          goto LABEL_188;
        v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v91);
        if (!topotext::Font::MergePartialFromCodedStream(v37, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_188;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v43);
        v44 = *((_DWORD *)a2 + 14);
        v34 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v34)
          *((_DWORD *)a2 + 14) = v45;
        v46 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v46 >= v14 || *v46 != 40)
          continue;
        v20 = v46 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_79:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88))
            goto LABEL_188;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v88 = *v20;
          v47 = v20 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 8) |= 8u;
        if ((unint64_t)v47 >= v14 || *v47 != 48)
          continue;
        v15 = v47 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_87:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 16))goto LABEL_188;
          v48 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 16) = *v15;
          v48 = v15 + 1;
          *((_QWORD *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 8) |= 0x10u;
        if ((unint64_t)v48 >= v14 || *v48 != 56)
          continue;
        v18 = v48 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_95:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 17))goto LABEL_188;
          v49 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 17) = *v18;
          v49 = v18 + 1;
          *((_QWORD *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v49 >= v14 || *v49 != 64)
          continue;
        v22 = v49 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_103:
        v91 = 0;
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))
            goto LABEL_188;
          v50 = v91;
          v51 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v50 = *v22;
          v51 = v22 + 1;
          *((_QWORD *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 20) = v50;
        v23 = *((_DWORD *)this + 8) | 0x40;
        *((_DWORD *)this + 8) = v23;
        if ((unint64_t)v51 >= v14 || *v51 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v51 + 1;
LABEL_111:
        *((_DWORD *)this + 8) = v23 | 0x80;
        if (!google::protobuf::internal::empty_string_)
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v52 = (std::string *)*((_QWORD *)this + 9);
        if (v52 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v52 = (std::string *)operator new();
          v52->__r_.__value_.__r.__words[0] = 0;
          v52->__r_.__value_.__l.__size_ = 0;
          v52->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 9) = v52;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v52))
          goto LABEL_188;
        v53 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v53 + 1;
LABEL_118:
        *((_DWORD *)this + 8) |= 0x100u;
        v54 = *((_QWORD *)this + 11);
        if (!v54)
        {
          v54 = operator new();
          *(_QWORD *)v54 = &off_1E76CC808;
          *(_OWORD *)(v54 + 8) = 0u;
          *(_OWORD *)(v54 + 24) = 0u;
          *(_OWORD *)(v54 + 40) = 0u;
          *((_QWORD *)this + 11) = v54;
        }
        v91 = 0;
        v55 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))
            goto LABEL_188;
        }
        else
        {
          v91 = *v55;
          *((_QWORD *)a2 + 1) = v55 + 1;
        }
        v56 = *((_DWORD *)a2 + 14);
        v57 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v56 + 1;
        if (v56 >= v57)
          goto LABEL_188;
        v58 = google::protobuf::io::CodedInputStream::PushLimit(a2, v91);
        if (!topotext::Color::MergePartialFromCodedStream((topotext::Color *)v54, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_188;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v58);
        v59 = *((_DWORD *)a2 + 14);
        v34 = __OFSUB__(v59, 1);
        v60 = v59 - 1;
        if (v60 < 0 == v34)
          *((_DWORD *)a2 + 14) = v60;
        v61 = (_BYTE *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v61 >= v24 || *v61 != 88)
          continue;
        v25 = v61 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_132:
        v91 = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91) & 1) == 0)
            goto LABEL_188;
          v62 = v91;
        }
        else
        {
          v62 = *v25;
          *((_QWORD *)a2 + 1) = v25 + 1;
        }
        if (v62 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v89, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v89, v62);
        }
        else
        {
          *((_DWORD *)this + 8) |= 0x200u;
          *((_DWORD *)this + 21) = v62;
        }
        v63 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v63 >= *((_QWORD *)a2 + 2) || *v63 != 98)
          continue;
        *((_QWORD *)a2 + 1) = v63 + 1;
LABEL_143:
        *((_DWORD *)this + 8) |= 0x400u;
        v64 = (topotext::AttachmentInfo *)*((_QWORD *)this + 12);
        if (!v64)
        {
          v64 = (topotext::AttachmentInfo *)operator new();
          topotext::AttachmentInfo::AttachmentInfo(v64, v65, v66);
          *((_QWORD *)this + 12) = v64;
        }
        v91 = 0;
        v67 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))
            goto LABEL_188;
        }
        else
        {
          v91 = *v67;
          *((_QWORD *)a2 + 1) = v67 + 1;
        }
        v68 = *((_DWORD *)a2 + 14);
        v69 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v68 + 1;
        if (v68 >= v69)
          goto LABEL_188;
        v70 = google::protobuf::io::CodedInputStream::PushLimit(a2, v91);
        if (!topotext::AttachmentInfo::MergePartialFromCodedStream(v64, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_188;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v70);
        v71 = *((_DWORD *)a2 + 14);
        v34 = __OFSUB__(v71, 1);
        v72 = v71 - 1;
        if (v72 < 0 == v34)
          *((_DWORD *)a2 + 14) = v72;
        v73 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v73 >= v16 || *v73 != 104)
          continue;
        v19 = v73 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_157:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 13))goto LABEL_188;
          v74 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_QWORD *)this + 13) = *v19;
          v74 = v19 + 1;
          *((_QWORD *)a2 + 1) = v74;
        }
        *((_DWORD *)this + 8) |= 0x800u;
        if ((unint64_t)v74 >= v16 || *v74 != 112)
          continue;
        v17 = v74 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_165:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 30))goto LABEL_188;
          v75 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 30) = *v17;
          v75 = v17 + 1;
          *((_QWORD *)a2 + 1) = v75;
        }
        v13 = *((_DWORD *)this + 8) | 0x1000;
        *((_DWORD *)this + 8) = v13;
        if ((unint64_t)v75 >= v16 || *v75 != 122)
          continue;
        *((_QWORD *)a2 + 1) = v75 + 1;
        goto LABEL_173;
      case 2u:
        if ((_DWORD)v7 != 18)
          goto LABEL_42;
        v21 = *((_DWORD *)this + 8);
        goto LABEL_51;
      case 3u:
        if ((_DWORD)v7 == 26)
          goto LABEL_65;
        goto LABEL_42;
      case 5u:
        if ((_DWORD)v7 != 40)
          goto LABEL_42;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 6u:
        if ((_DWORD)v7 != 48)
          goto LABEL_42;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_87;
      case 7u:
        if ((_DWORD)v7 != 56)
          goto LABEL_42;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      case 8u:
        if ((_DWORD)v7 != 64)
          goto LABEL_42;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_103;
      case 9u:
        if ((_DWORD)v7 != 74)
          goto LABEL_42;
        v23 = *((_DWORD *)this + 8);
        goto LABEL_111;
      case 0xAu:
        if ((_DWORD)v7 != 82)
          goto LABEL_42;
        goto LABEL_118;
      case 0xBu:
        if ((_DWORD)v7 != 88)
          goto LABEL_42;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
        goto LABEL_132;
      case 0xCu:
        if ((_DWORD)v7 == 98)
          goto LABEL_143;
        goto LABEL_42;
      case 0xDu:
        if ((_DWORD)v7 != 104)
          goto LABEL_42;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_157;
      case 0xEu:
        if ((_DWORD)v7 != 112)
          goto LABEL_42;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_165;
      case 0xFu:
        if ((_DWORD)v7 != 122)
        {
LABEL_42:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
            goto LABEL_189;
          goto LABEL_44;
        }
        v13 = *((_DWORD *)this + 8);
LABEL_173:
        *((_DWORD *)this + 8) = v13 | 0x2000;
        v76 = (topotext::AttachmentInfo *)*((_QWORD *)this + 14);
        if (!v76)
        {
          v76 = (topotext::AttachmentInfo *)operator new();
          topotext::AttachmentInfo::AttachmentInfo(v76, v77, v78);
          *((_QWORD *)this + 14) = v76;
        }
        v91 = 0;
        v79 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v79 >= *((_QWORD *)a2 + 2) || *v79 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v91))
            goto LABEL_188;
        }
        else
        {
          v91 = *v79;
          *((_QWORD *)a2 + 1) = v79 + 1;
        }
        v80 = *((_DWORD *)a2 + 14);
        v81 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v80 + 1;
        if (v80 >= v81
          || (v82 = google::protobuf::io::CodedInputStream::PushLimit(a2, v91),
              !topotext::AttachmentInfo::MergePartialFromCodedStream(v76, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_188:
          v85 = 0;
          goto LABEL_190;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v82);
        v83 = *((_DWORD *)a2 + 14);
        v34 = __OFSUB__(v83, 1);
        v84 = v83 - 1;
        if (v84 < 0 == v34)
          *((_DWORD *)a2 + 14) = v84;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v85 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_190:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v89);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v90);
        return v85;
      default:
        goto LABEL_6;
    }
  }
}

void sub_1BD923124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v4, 0x10B3C40F489674BLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::PushLimit(google::protobuf::io::CodedInputStream *this, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  int v11;

  v2 = *((_DWORD *)this + 6);
  v3 = *((_QWORD *)this + 2);
  v4 = *((unsigned int *)this + 10);
  v5 = *((int *)this + 11);
  v6 = v2 - v5 + *((_DWORD *)this + 2) - v3;
  v7 = (v6 ^ 0x7FFFFFFF) < a2 || a2 < 0;
  v8 = v6 + a2;
  if (v7)
    v8 = 0x7FFFFFFF;
  if ((int)v4 < v8)
    v8 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = v8;
  v9 = v3 + v5;
  *((_QWORD *)this + 2) = v9;
  if (*((_DWORD *)this + 12) < v8)
    v8 = *((_DWORD *)this + 12);
  v10 = __OFSUB__(v2, v8);
  v11 = v2 - v8;
  if ((v11 < 0) ^ v10 | (v11 == 0))
    v11 = 0;
  else
    *((_QWORD *)this + 2) = v9 - v11;
  *((_DWORD *)this + 11) = v11;
  return v4;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
  if (*((int *)this + 4) >= 1)
    (*(void (**)(void))(**(_QWORD **)this + 24))();
}

void google::protobuf::io::StringOutputStream::BackUp(google::protobuf::io::StringOutputStream *this, int a2)
{
  std::string *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  std::string *v8;
  char v9;
  std::string v10[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 188);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)this + 1);
  LODWORD(v6) = *(char *)(v5 + 23);
  if ((v6 & 0x80000000) != 0)
    v7 = *(_QWORD *)(v5 + 8);
  else
    v7 = *(unsigned __int8 *)(v5 + 23);
  if (v7 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 189);
    v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (target_->size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    v5 = *((_QWORD *)this + 1);
    LOBYTE(v6) = *(_BYTE *)(v5 + 23);
  }
  if ((v6 & 0x80) != 0)
    v6 = *(_QWORD *)(v5 + 8);
  else
    v6 = v6;
  std::string::resize((std::string *)v5, v6 - a2, 0);
}

void sub_1BD923344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::io::StringOutputStream::StringOutputStream(_QWORD *result, uint64_t a2)
{
  *result = &off_1E76C72D0;
  result[1] = a2;
  return result;
}

google::protobuf::io::CodedOutputStream *google::protobuf::io::CodedOutputStream::CodedOutputStream(google::protobuf::io::CodedOutputStream *this, google::protobuf::io::ZeroCopyOutputStream *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = a2;
  *((_WORD *)this + 12) = 0;
  google::protobuf::io::CodedOutputStream::Refresh(this);
  *((_BYTE *)this + 24) = 0;
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::Refresh(google::protobuf::io::CodedOutputStream *this)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v4 = 0;
  result = (*(uint64_t (**)(_QWORD, uint64_t *, char *))(**(_QWORD **)this + 16))(*(_QWORD *)this, &v4, (char *)this + 16);
  if ((_DWORD)result)
  {
    v3 = v4;
    *((_DWORD *)this + 5) += *((_DWORD *)this + 4);
  }
  else
  {
    v3 = 0;
    *((_DWORD *)this + 4) = 0;
    *((_BYTE *)this + 24) = 1;
  }
  *((_QWORD *)this + 1) = v3;
  return result;
}

uint64_t google::protobuf::io::StringOutputStream::Next(google::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  std::string::size_type v8;
  uint64_t v9;
  uint64_t v10;
  std::string *v11;
  std::string *v12;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;
  std::string v18[2];

  v6 = *((_QWORD *)this + 1);
  if (*(char *)(v6 + 23) < 0)
  {
    v9 = *(_QWORD *)(v6 + 8);
    v7 = (int)v9;
    v8 = (*(_QWORD *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if ((int)v9 < v8)
      goto LABEL_11;
    v10 = *(_QWORD *)(v6 + 8);
    if ((int)v9 >= 0x40000000)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 170);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "Cannot allocate buffer larger than kint32max for ");
      v12 = google::protobuf::internal::LogMessage::operator<<(v11, "StringOutputStream.");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v12);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
      return 0;
    }
  }
  else
  {
    v7 = *(unsigned __int8 *)(v6 + 23);
    if (*(unsigned __int8 *)(v6 + 23) < 0x16u)
    {
      v8 = 22;
      LODWORD(v9) = *(unsigned __int8 *)(v6 + 23);
      goto LABEL_11;
    }
    LODWORD(v10) = *(unsigned __int8 *)(v6 + 23);
    LODWORD(v9) = v10;
  }
  v14 = 2 * v10;
  if (v14 <= 16)
    v8 = 16;
  else
    v8 = v14;
LABEL_11:
  std::string::resize((std::string *)v6, v8, 0);
  v15 = (uint64_t *)*((_QWORD *)this + 1);
  if (*((char *)v15 + 23) < 0)
  {
    if (!v15[1])
    {
LABEL_16:
      v15 = 0;
      goto LABEL_17;
    }
    v15 = (uint64_t *)*v15;
  }
  else if (!*((_BYTE *)v15 + 23))
  {
    goto LABEL_16;
  }
LABEL_17:
  *a2 = (char *)v15 + v7;
  v16 = *((_QWORD *)this + 1);
  if (*(char *)(v16 + 23) < 0)
    v16 = *(_QWORD *)(v16 + 8);
  else
    LODWORD(v16) = *(unsigned __int8 *)(v16 + 23);
  *a3 = v16 - v9;
  return 1;
}

void sub_1BD923568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::PopLimit(uint64_t this, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  BOOL v6;
  int v7;

  *(_DWORD *)(this + 40) = a2;
  v2 = *(_DWORD *)(this + 48);
  v3 = *(_QWORD *)(this + 16) + *(int *)(this + 44);
  *(_QWORD *)(this + 16) = v3;
  if (v2 >= a2)
    v4 = a2;
  else
    v4 = v2;
  v5 = *(_DWORD *)(this + 24);
  v6 = __OFSUB__(v5, v4);
  v7 = v5 - v4;
  if ((v7 < 0) ^ v6 | (v7 == 0))
    v7 = 0;
  else
    *(_QWORD *)(this + 16) = v3 - v7;
  *(_DWORD *)(this + 44) = v7;
  *(_BYTE *)(this + 36) = 0;
  return this;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v1;
  char *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v2 = (char *)*((_QWORD *)this + 1);
  v1 = *((_QWORD *)this + 2);
  v3 = v1 - (_DWORD)v2;
  if ((int)v1 - (int)v2 > 9)
    goto LABEL_4;
  if (v3 >= 1)
  {
    if ((*(char *)(v1 - 1) & 0x80000000) == 0)
    {
LABEL_4:
      v4 = (uint64_t)(v2 + 1);
      v5 = *v2;
      if (*v2 < 0)
      {
        v5 = v5 + (v2[1] << 7) - 128;
        if (v2[1] < 0)
        {
          v5 = v5 + (v2[2] << 14) - 0x4000;
          if (v2[2] < 0)
          {
            v5 = v5 + (v2[3] << 21) - 0x200000;
            if (v2[3] < 0)
            {
              v10 = v2[4];
              v5 = (v5 + (v10 << 28) - 0x10000000);
              if (v10 < 0)
              {
                v11 = 0;
                while (v2[v11 + 5] < 0)
                {
                  v9 = 0;
                  if ((_DWORD)++v11 == 5)
                    return v9;
                }
                v4 = (uint64_t)&v2[v11 + 6];
              }
              else
              {
                v4 = (uint64_t)(v2 + 5);
              }
            }
            else
            {
              v4 = (uint64_t)(v2 + 4);
            }
          }
          else
          {
            v4 = (uint64_t)(v2 + 3);
          }
        }
        else
        {
          v4 = (uint64_t)(v2 + 2);
        }
      }
      *((_QWORD *)this + 1) = v4;
      return v5;
    }
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v3)
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  v7 = *((_DWORD *)this + 11);
  v8 = *((_DWORD *)this + 6);
  if (v7 <= 0 && v8 != *((_DWORD *)this + 10))
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  if (v8 - v7 >= *((_DWORD *)this + 12))
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  v9 = 0;
  *((_BYTE *)this + 36) = 1;
  return v9;
}

void topotext::AttributeRun::SharedDtor(topotext::AttributeRun *this, uint64_t a2, uint64_t a3)
{
  topotext::AttributeRun *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 9);
  if (v4)
    v5 = v4 == google::protobuf::internal::empty_string_;
  else
    v5 = 1;
  if (!v5)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (topotext::AttributeRun *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::AttributeRun *)topotext::AttributeRun::default_instance_ != v3)
  {
    v6 = *((_QWORD *)v3 + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)v3 + 7);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)v3 + 11);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)v3 + 12);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = *((_QWORD *)v3 + 14);
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  }
}

void topotext::protobuf_AddDesc_topotext_2eproto(topotext *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = topotext::protobuf_AddDesc_topotext_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &off_1E76C9A40;
    v2[1] = topotext::protobuf_AddDesc_topotext_2eproto_impl;
    v3 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&topotext::protobuf_AddDesc_topotext_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1BD923830(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::ParagraphStyle::~ParagraphStyle(void **this, uint64_t a2, uint64_t a3)
{
  topotext::ParagraphStyle::~ParagraphStyle(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

{
  *this = &off_1E76CC4C0;
  topotext::ParagraphStyle::SharedDtor((topotext::ParagraphStyle *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void topotext::ParagraphStyle::SharedDtor(topotext::ParagraphStyle *this, uint64_t a2, uint64_t a3)
{
  topotext::ParagraphStyle *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 9);
  if (v4)
    v5 = v4 == google::protobuf::internal::empty_string_;
  else
    v5 = 1;
  if (!v5)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (topotext::ParagraphStyle *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::ParagraphStyle *)topotext::ParagraphStyle::default_instance_ != v3)
  {
    v6 = *((_QWORD *)v3 + 7);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
}

BOOL google::protobuf::internal::WireFormatLite::ReadString(uint64_t a1, std::string *this)
{
  unint64_t v4;
  char *v5;
  std::string::size_type v6;
  unsigned __int8 *v7;
  int v8;
  _BOOL8 result;
  unsigned int v10;

  v10 = 0;
  v5 = *(char **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v5 < v4 && (*v5 & 0x80000000) == 0)
  {
    v6 = *v5;
    v10 = *v5;
    v7 = (unsigned __int8 *)(v5 + 1);
    *(_QWORD *)(a1 + 8) = v7;
    goto LABEL_7;
  }
  v8 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a1, &v10);
  result = 0;
  if (v8)
  {
    v6 = v10;
    if ((v10 & 0x80000000) == 0)
    {
      v7 = *(unsigned __int8 **)(a1 + 8);
      v4 = *(_QWORD *)(a1 + 16);
LABEL_7:
      if ((int)v6 > (int)v4 - (int)v7)
        return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)a1, this, v6);
      std::string::resize(this, v6, 0);
      if (!(_DWORD)v6)
        return 1;
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      {
        if (!this->__r_.__value_.__l.__size_)
        {
LABEL_15:
          this = 0;
          goto LABEL_16;
        }
        this = (std::string *)this->__r_.__value_.__r.__words[0];
      }
      else if (!*((_BYTE *)&this->__r_.__value_.__s + 23))
      {
        goto LABEL_15;
      }
LABEL_16:
      memcpy(this, *(const void **)(a1 + 8), v6);
      *(_QWORD *)(a1 + 8) += v6;
      return 1;
    }
  }
  return result;
}

topotext::Font *topotext::Font::Font(topotext::Font *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC448;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::Font::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD923A84(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Font::SharedCtor(topotext::Font *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v5[2];
  char v6;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v5[0] = &off_1E76C9A40;
    v5[1] = google::protobuf::internal::InitEmptyString;
    v6 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD923B30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::Font::~Font(void **this, uint64_t a2, uint64_t a3)
{
  topotext::Font::~Font(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

{
  *this = &off_1E76CC448;
  topotext::VectorTimestamp_Clock::SharedDtor((topotext::VectorTimestamp_Clock *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void topotext::VectorTimestamp_Clock::SharedDtor(topotext::VectorTimestamp_Clock *this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = v3 == google::protobuf::internal::empty_string_;
  else
    v4 = 1;
  if (!v4)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    this = (topotext::VectorTimestamp_Clock *)MEMORY[0x1C3B7A848](v3, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::Color::~Color(void **this)
{
  topotext::Color::~Color(this);
  JUMPOUT(0x1C3B7A848);
}

{
  *this = &off_1E76CC808;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

int *google::protobuf::internal::RepeatedPtrFieldBase::Reserve(int *this, int a2)
{
  int v2;
  int *v3;
  const void *v4;
  int v5;

  v2 = this[4];
  if (v2 < a2)
  {
    v3 = this;
    v4 = *(const void **)this;
    v5 = 2 * v2;
    if (v5 <= a2)
      v5 = a2;
    if (v5 <= 4)
      v5 = 4;
    this[4] = v5;
    this = (int *)operator new[]();
    *(_QWORD *)v3 = this;
    if (v4)
    {
      memcpy(this, v4, 8 * v3[3]);
      JUMPOUT(0x1C3B7A830);
    }
  }
  return this;
}

uint64_t topotext::Substring::MergePartialFromCodedStream(topotext::Substring *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  uint64_t v9;
  char *v10;
  BOOL v11;
  unint64_t v12;
  char *v13;
  int v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  char *v33;
  std::string::size_type v34;
  char *v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  int v40;
  _BYTE *v41;
  unint64_t v42;
  int v43;
  std::string *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v49[32];
  _QWORD v50[2];
  unsigned int v51;
  char v52;
  std::string v53[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v50, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v49, (google::protobuf::io::ZeroCopyOutputStream *)v50);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
      {
LABEL_13:
        if ((_DWORD)v7)
          v11 = (v7 & 7) == 4;
        else
          v11 = 1;
        if (v11)
          goto LABEL_97;
        goto LABEL_29;
      }
    }
    else
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
    }
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 10)
          goto LABEL_27;
        *((_DWORD *)this + 8) |= 1u;
        v9 = *((_QWORD *)this + 5);
        if (!v9)
        {
          v9 = operator new();
          *(_QWORD *)v9 = &off_1E76CC1F0;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(_QWORD *)(v9 + 40) = 0;
          *((_QWORD *)this + 5) = v9;
        }
        LODWORD(v53[0].__r_.__value_.__l.__data_) = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v53))
            goto LABEL_96;
        }
        else
        {
          LODWORD(v53[0].__r_.__value_.__l.__data_) = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        v18 = *((_DWORD *)a2 + 14);
        v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19)
          goto LABEL_96;
        v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, (int)v53[0].__r_.__value_.__l.__data_);
        if (!topotext::CharID::MergePartialFromCodedStream((topotext::CharID *)v9, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_96;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v12 || *v24 != 16)
          continue;
        v13 = v24 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_43:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 14))goto LABEL_96;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 14) = *v13;
          v25 = v13 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        v14 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v14;
        if ((unint64_t)v25 >= v12 || *v25 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_51:
        *((_DWORD *)this + 8) = v14 | 4;
        v26 = *((_QWORD *)this + 6);
        if (!v26)
        {
          v26 = operator new();
          *(_QWORD *)v26 = &off_1E76CC1F0;
          *(_OWORD *)(v26 + 8) = 0u;
          *(_OWORD *)(v26 + 24) = 0u;
          *(_QWORD *)(v26 + 40) = 0;
          *((_QWORD *)this + 6) = v26;
        }
        LODWORD(v53[0].__r_.__value_.__l.__data_) = 0;
        v27 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v53))
            goto LABEL_96;
        }
        else
        {
          LODWORD(v53[0].__r_.__value_.__l.__data_) = *v27;
          *((_QWORD *)a2 + 1) = v27 + 1;
        }
        v28 = *((_DWORD *)a2 + 14);
        v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29)
          goto LABEL_96;
        v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, (int)v53[0].__r_.__value_.__l.__data_);
        if (!topotext::CharID::MergePartialFromCodedStream((topotext::CharID *)v26, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_96;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v30);
        v31 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v31, 1);
        v32 = v31 - 1;
        if (v32 < 0 == v22)
          *((_DWORD *)a2 + 14) = v32;
        v33 = (char *)*((_QWORD *)a2 + 1);
        v15 = (char *)*((_QWORD *)a2 + 2);
        if (v33 >= v15 || *v33 != 32)
          continue;
        v16 = v33 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_65:
        v53[0].__r_.__value_.__r.__words[0] = 0;
        if (v16 >= v15 || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v53))
            goto LABEL_96;
          v34 = v53[0].__r_.__value_.__r.__words[0];
          v35 = (char *)*((_QWORD *)a2 + 1);
          v15 = (char *)*((_QWORD *)a2 + 2);
        }
        else
        {
          v34 = *v16;
          v35 = v16 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_BYTE *)this + 60) = v34 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v35 < v15 && *v35 == 40)
          goto LABEL_72;
        continue;
      case 2u:
        if ((_DWORD)v7 != 16)
          goto LABEL_27;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_43;
      case 3u:
        if ((_DWORD)v7 != 26)
          goto LABEL_27;
        v14 = *((_DWORD *)this + 8);
        goto LABEL_51;
      case 4u:
        if ((_DWORD)v7 != 32)
          goto LABEL_27;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = (char *)*((_QWORD *)a2 + 2);
        goto LABEL_65;
      case 5u:
        if ((_DWORD)v7 != 40)
        {
          if ((_DWORD)v7 == 42)
          {
            if (!google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (_DWORD *)this + 16))goto LABEL_96;
            goto LABEL_90;
          }
LABEL_27:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
          {
LABEL_97:
            v47 = 1;
            goto LABEL_98;
          }
LABEL_29:
          if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v49, v4))goto LABEL_96;
          continue;
        }
        v17 = (char *)*((_QWORD *)a2 + 1);
        v15 = (char *)*((_QWORD *)a2 + 2);
        while (1)
        {
          v51 = 0;
          if (v17 >= v15 || *v17 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))
            {
LABEL_96:
              v47 = 0;
              goto LABEL_98;
            }
          }
          else
          {
            v51 = *v17;
            *((_QWORD *)a2 + 1) = v17 + 1;
          }
          v36 = *((_DWORD *)this + 18);
          if (v36 == *((_DWORD *)this + 19))
          {
            google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)this + 16, v36 + 1);
            v36 = *((_DWORD *)this + 18);
          }
          v37 = v51;
          v38 = *((_QWORD *)this + 8);
          *((_DWORD *)this + 18) = v36 + 1;
          *(_DWORD *)(v38 + 4 * v36) = v37;
          v39 = *((_DWORD *)this + 19) - *((_DWORD *)this + 18);
          if (v39 >= 1)
          {
            v40 = v39 + 1;
            do
            {
              v41 = (_BYTE *)*((_QWORD *)a2 + 1);
              v42 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v41 >= v42 || *v41 != 40)
                break;
              *((_QWORD *)a2 + 1) = v41 + 1;
              if ((unint64_t)(v41 + 1) >= v42 || (char)v41[1] < 0)
              {
                if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))
                  goto LABEL_96;
              }
              else
              {
                v51 = v41[1];
                *((_QWORD *)a2 + 1) = v41 + 2;
              }
              v43 = *((_DWORD *)this + 18);
              if (v43 >= *((_DWORD *)this + 19))
              {
                google::protobuf::internal::LogMessage::LogMessage((uint64_t)v53, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 642);
                v44 = google::protobuf::internal::LogMessage::operator<<(v53, "CHECK failed: (size()) < (Capacity()): ");
                google::protobuf::internal::LogFinisher::operator=((uint64_t)&v52, (google::protobuf::internal::LogMessage *)v44);
                google::protobuf::internal::LogMessage::~LogMessage((void **)&v53[0].__r_.__value_.__l.__data_);
                v43 = *((_DWORD *)this + 18);
              }
              v45 = v51;
              v46 = *((_QWORD *)this + 8);
              *((_DWORD *)this + 18) = v43 + 1;
              *(_DWORD *)(v46 + 4 * v43) = v45;
              --v40;
            }
            while (v40 > 1);
          }
LABEL_90:
          v35 = (char *)*((_QWORD *)a2 + 1);
          v15 = (char *)*((_QWORD *)a2 + 2);
          if (v35 >= v15 || *v35 != 40)
            break;
LABEL_72:
          v17 = v35 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        if (v35 != v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        v47 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_98:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v49);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v50);
        return v47;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1BD92430C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::CharID::MergePartialFromCodedStream(topotext::CharID *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  BOOL v12;
  char *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  _BYTE v17[32];
  _QWORD v18[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_12;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
        break;
      if (v7 >> 3 == 1)
      {
        if ((_DWORD)v7 != 8)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_38;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v13 = v11 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if ((_DWORD)v7)
          v12 = (v7 & 7) == 4;
        else
          v12 = 1;
        if (v12)
        {
LABEL_37:
          v15 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_38;
      }
    }
    if ((_DWORD)v7 != 16)
    {
LABEL_19:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_37;
      goto LABEL_16;
    }
    v13 = (char *)*((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
LABEL_28:
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      *((_DWORD *)this + 11) = *v13;
      v14 = (unsigned __int8 *)(v13 + 1);
      *((_QWORD *)a2 + 1) = v14;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11))
      break;
    v14 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
LABEL_33:
    *((_DWORD *)this + 8) |= 2u;
    if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v15 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  v15 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1BD92454C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  unint64_t v3;
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v11;

  v4 = (char *)*((_QWORD *)this + 1);
  v3 = *((_QWORD *)this + 2);
  if ((int)v3 - (int)v4 <= 9 && (v3 <= (unint64_t)v4 || *(char *)(v3 - 1) < 0))
  {
    v11 = 0;
    v7 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v11);
    if ((_DWORD)v7)
      *a2 = v11;
  }
  else
  {
    v5 = (uint64_t)(v4 + 1);
    v6 = *v4;
    if (*v4 < 0)
    {
      v6 = v6 + (v4[1] << 7) - 128;
      if (v4[1] < 0)
      {
        v6 = v6 + (v4[2] << 14) - 0x4000;
        if (v4[2] < 0)
        {
          v6 = v6 + (v4[3] << 21) - 0x200000;
          if (v4[3] < 0)
          {
            v8 = v4[4];
            v6 = v6 + (v8 << 28) - 0x10000000;
            if (v8 < 0)
            {
              v9 = 0;
              while (v4[v9 + 5] < 0)
              {
                v7 = 0;
                if ((_DWORD)++v9 == 5)
                  return v7;
              }
              v5 = (uint64_t)&v4[v9 + 6];
            }
            else
            {
              v5 = (uint64_t)(v4 + 5);
            }
          }
          else
          {
            v5 = (uint64_t)(v4 + 4);
          }
        }
        else
        {
          v5 = (uint64_t)(v4 + 3);
        }
      }
      else
      {
        v5 = (uint64_t)(v4 + 2);
      }
    }
    *a2 = v6;
    *((_QWORD *)this + 1) = v5;
    return 1;
  }
  return v7;
}

_DWORD *google::protobuf::RepeatedField<unsigned int>::Reserve(_DWORD *result, int a2)
{
  int v2;
  _DWORD *v3;
  const void *v4;
  int v5;

  v2 = result[3];
  if (v2 < a2)
  {
    v3 = result;
    v4 = *(const void **)result;
    v5 = 2 * v2;
    if (v5 <= a2)
      v5 = a2;
    if (v5 <= 4)
      v5 = 4;
    result[3] = v5;
    result = (_DWORD *)operator new[]();
    *(_QWORD *)v3 = result;
    if (v4)
    {
      memcpy(result, v4, 4 * (int)v3[2]);
      JUMPOUT(0x1C3B7A830);
    }
  }
  return result;
}

void versioned_document::Version::SharedCtor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_6("GetEmptyStringAlreadyInited", "generated_message_util.h", a3, "empty_string_ != NULL");
}

void sub_1BD924DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  void *v34;
  void *v35;
  uint64_t v36;

  TopoSubstring::~TopoSubstring((TopoSubstring *)&a12);
  _Block_object_dispose(&a29, 8);

  _Block_object_dispose((const void *)(v36 - 176), 8);
  _Unwind_Resume(a1);
}

BOOL hasLoop(TopoSubstring *a1)
{
  uint64_t v2;
  _BOOL8 v3;
  _QWORD v5[5];
  _QWORD v6[5];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v2 = MEMORY[0x1E0C809B0];
  v10 = 0;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = ___Z7hasLoopP13TopoSubstring_block_invoke;
  v6[3] = &unk_1E76C8D80;
  v6[4] = &v7;
  traverseUnordered((uint64_t)a1, v6);
  v5[0] = v2;
  v5[1] = 3221225472;
  v5[2] = ___Z7hasLoopP13TopoSubstring_block_invoke_2;
  v5[3] = &unk_1E76C8DA8;
  v5[4] = &v7;
  traverseIterative((uint64_t)a1, v5);
  v3 = v8[3] != 0;
  _Block_object_dispose(&v7, 8);
  return v3;
}

void sub_1BD9250A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD925BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  void *v37;
  void *v38;
  uint64_t v39;

  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a19);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a25);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a31);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a37);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(v39 - 176);

  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::find<TopoID>(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int8x8_t v6;
  unint64_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t **v11;
  uint64_t *i;
  unint64_t v13;

  v4 = *((unsigned int *)a2 + 2);
  v5 = objc_msgSend((id)*a2, "hash");
  v6 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v6)
    return 0;
  v7 = v5 ^ v4;
  v8 = (uint8x8_t)vcnt_s8(v6);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v10 = v7;
    if (v7 >= *(_QWORD *)&v6)
      v10 = v7 % *(_QWORD *)&v6;
  }
  else
  {
    v10 = (*(_QWORD *)&v6 - 1) & v7;
  }
  v11 = *(uint64_t ***)(*a1 + 8 * v10);
  if (!v11)
    return 0;
  for (i = *v11; i; i = (uint64_t *)*i)
  {
    v13 = i[1];
    if (v13 == v7)
    {
      if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && (objc_msgSend((id)i[2], "isEqual:", *a2) & 1) != 0)
        return i;
    }
    else
    {
      if (v9 > 1)
      {
        if (v13 >= *(_QWORD *)&v6)
          v13 %= *(_QWORD *)&v6;
      }
      else
      {
        v13 &= *(_QWORD *)&v6 - 1;
      }
      if (v13 != v10)
        return 0;
    }
  }
  return i;
}

void *std::__hash_table<std::__hash_value_type<TopoID,TopoSubstring *>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,TopoSubstring *>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID const&>,std::tuple<>>(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  void **v14;
  void *i;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;

  v8 = *((unsigned int *)a2 + 2);
  v9 = objc_msgSend((id)*a2, "hash");
  v10 = v9 ^ v8;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9 ^ v8;
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
    v14 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && (objc_msgSend(*((id *)i + 2), "isEqual:", *a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  v17 = (_QWORD *)(a1 + 16);
  i = operator new(0x28uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v10;
  v18 = *a4;
  *((_QWORD *)i + 2) = *(id *)v18;
  *((_DWORD *)i + 6) = *(_DWORD *)(v18 + 8);
  *((_QWORD *)i + 4) = 0;
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    v21 = 1;
    if (v11 >= 3)
      v21 = (v11 & (v11 - 1)) != 0;
    v22 = v21 | (2 * v11);
    v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23)
      v24 = v23;
    else
      v24 = v22;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v24);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v25 = *(_QWORD *)a1;
  v26 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v26)
  {
    *(_QWORD *)i = *v26;
LABEL_39:
    *v26 = i;
    goto LABEL_40;
  }
  *(_QWORD *)i = *v17;
  *v17 = i;
  *(_QWORD *)(v25 + 8 * v4) = v17;
  if (*(_QWORD *)i)
  {
    v27 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v27 >= v11)
        v27 %= v11;
    }
    else
    {
      v27 &= v11 - 1;
    }
    v26 = (_QWORD *)(*(_QWORD *)a1 + 8 * v27);
    goto LABEL_39;
  }
LABEL_40:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1BD9260AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(_QWORD *a1, _QWORD *a2)
{
  int8x8_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  unint64_t v10;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v4 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = v5;
    if (v5 >= *(_QWORD *)&v2)
      v7 = v5 % *(_QWORD *)&v2;
  }
  else
  {
    v7 = v5 & (*(_QWORD *)&v2 - 1);
  }
  v8 = *(_QWORD **)(*a1 + 8 * v7);
  if (!v8)
    return 0;
  result = (_QWORD *)*v8;
  if (*v8)
  {
    do
    {
      v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2)
          return result;
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(_QWORD *)&v2)
            v10 %= *(_QWORD *)&v2;
        }
        else
        {
          v10 &= *(_QWORD *)&v2 - 1;
        }
        if (v10 != v7)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  _QWORD **v12;
  _QWORD *i;
  unint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10)
        v4 = v9 % v10;
    }
    else
    {
      v4 = v9 & (v10 - 1);
    }
    v12 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      for (i = *v12; i; i = (_QWORD *)*i)
      {
        v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2)
            return i;
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10)
              v14 %= v10;
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v9;
  i[2] = **a4;
  i[3] = 0;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    v17 = 1;
    if (v10 >= 3)
      v17 = (v10 & (v10 - 1)) != 0;
    v18 = v17 | (2 * v10);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v20);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v22)
  {
    *i = *v22;
LABEL_38:
    *v22 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10)
        v23 %= v10;
    }
    else
    {
      v23 &= v10 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1BD9263F4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoSubstring *a2)
{
  *(_QWORD *)this = *(id *)a2;
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_QWORD *)this + 3) = *((id *)a2 + 3);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_BYTE *)this + 44) = *((_BYTE *)a2 + 44);
  *((_DWORD *)this + 18) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 6) = 0;
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<true>(a1, prime);
  }
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;

  if (a2)
  {
    if (a2 >> 61)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v11 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2)
              v12 %= a2;
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *v7 = *v11;
            *v11 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = v11;
            v11 = v7;
          }
          v12 = v8;
LABEL_24:
          v7 = v11;
          v11 = (_QWORD *)*v11;
          v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

void sub_1BD92670C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD926984(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD926A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(uint64_t a1)
{
  void *v2;

  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__deallocate_node(a1, *(id **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__deallocate_node(uint64_t a1, id *a2)
{
  id *v2;
  id *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (id *)*v2;

      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_1BD926CD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void minIdPath(TopoSubstring *a1@<X0>, uint64_t a2@<X8>)
{
  TopoSubstring *v2;
  id v3;
  uint64_t v4;
  TopoSubstring **v5;
  TopoSubstring ***v6;
  TopoSubstring **v7;
  _QWORD *v8;
  unint64_t v9;
  TopoSubstring *v10;
  TopoSubstring ***v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id *v20;
  void *v21;
  id *v22;
  id *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  id *v32;
  id v33;
  void *v34;
  unsigned int v35;
  void *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  id *v40;
  id *v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  float v48;
  __n128 *v49;
  uint64_t v50;
  id *v51;
  void **v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  id **v60;
  id **v61;
  id obj;
  unsigned int v63;
  __int128 v64;
  id v65;
  __int128 v66;
  __int128 v67;
  id v68;
  __int128 v69;
  __int128 v70;
  float v71;
  id *v72;
  id *v73;
  uint64_t v74;

  v2 = a1;
  v3 = *(id *)a1;
  v4 = *((unsigned int *)v2 + 2);
  v72 = 0;
  v73 = 0;
  v74 = 0;
  v69 = 0u;
  v70 = 0u;
  v71 = 1.0;
  v6 = (TopoSubstring ***)((char *)v2 + 48);
  v5 = (TopoSubstring **)*((_QWORD *)v2 + 6);
  v8 = (_QWORD *)((char *)v2 + 56);
  v7 = (TopoSubstring **)*((_QWORD *)v2 + 7);
  if (v7 == v5)
  {
    v9 = 0;
  }
  else
  {
    v9 = 0;
    while (1)
    {
      if ((unint64_t)((char *)v7 - (char *)v5) >= 9)
      {
        v10 = v2;
        v11 = v6;
        v12 = v8;
        removeDirectToSinkEdges(v10);
        v8 = v12;
        v6 = v11;
        v7 = (TopoSubstring **)*v12;
        v5 = *v11;
      }
      v13 = (char *)v7 - (char *)v5;
      if (v13 != 8)
        break;
      v2 = *v5;
      if (*((_DWORD *)*v5 + 18) > 1u)
      {
        v9 = 1;
        goto LABEL_76;
      }
      v14 = v3;
      v15 = *(id *)v2;
      v16 = v15;
      v17 = *((unsigned int *)v2 + 2);
      if (v4 < v17)
      {
        v18 = v14;
LABEL_70:
        v17 = v4;
        goto LABEL_71;
      }
      v18 = v15;
      if ((_DWORD)v4 == (_DWORD)v17)
      {
        if (objc_msgSend(v14, "TTCompare:", v15) == -1)
          v18 = v14;
        else
          v18 = v16;
        goto LABEL_70;
      }
LABEL_71:
      v3 = v18;

      v4 = v17;
LABEL_72:
      v6 = (TopoSubstring ***)((char *)v2 + 48);
      v5 = (TopoSubstring **)*((_QWORD *)v2 + 6);
      v8 = (_QWORD *)((char *)v2 + 56);
      v7 = (TopoSubstring **)*((_QWORD *)v2 + 7);
      if (v7 == v5)
        goto LABEL_76;
    }
    v60 = (id **)v8;
    v61 = (id **)v6;
    v19 = (uint64_t)v72;
    v20 = v73;
    if (v73 != v72)
    {
      do
      {
        v21 = *(v20 - 5);
        v20 -= 5;

      }
      while (v20 != (id *)v19);
      v13 = (char *)*v60 - (char *)*v61;
    }
    v73 = (id *)v19;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::reserve((uint64_t *)&v72, v13 >> 3);
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::clear(&v69);
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>((uint64_t)&v69, vcvtps_u32_f32((float)(unint64_t)(*v60 - *v61) / v71));
    v22 = *v61;
    v23 = *v60;
    while (v22 != v23)
    {
      obj = 0;
      obj = *v22;
      *(_QWORD *)&v66 = &obj;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)&v69, &obj, (uint64_t)&std::piecewise_construct, (_QWORD **)&v66)[3] = 1;
      *(_QWORD *)&v66 = 0;
      DWORD2(v66) = 0;
      v67 = (unint64_t)obj;
      v68 = obj;
      std::vector<std::pair<minIdPathData,TopoSubstring *>>::push_back[abi:ne180100]((uint64_t *)&v72, (uint64_t *)&v66);

      ++v22;
    }
    do
    {
      v66 = 0u;
      v67 = 0u;
      LODWORD(v68) = 1065353216;
      v24 = (_QWORD *)v70;
      if ((_QWORD)v70)
      {
        while (1)
        {
          v25 = v24[2];
          v26 = v24[3];
          v65 = (id)v25;
          if (v26 < *(unsigned int *)(v25 + 72))
            goto LABEL_47;
          minIdPath((uint64_t *)&obj, (TopoSubstring *)v25);
          if (v73 == v72)
            goto LABEL_39;
          v27 = 0;
          v28 = obj;
          if ((unint64_t)(((char *)v73 - (char *)v72) / 40) <= 1)
            v29 = 1;
          else
            v29 = ((char *)v73 - (char *)v72) / 40;
          do
          {
            if (v72[v27 + 2] == v65 && v72[v27])
            {
              v30 = v28;
              v31 = v63;
              v32 = &v72[v27];
              v33 = v72[v27];
              v34 = v33;
              v35 = *((_DWORD *)v32 + 2);
              if (v31 < v35)
              {
                v36 = v30;
                goto LABEL_29;
              }
              v36 = v33;
              if (v31 == v35)
              {
                if (objc_msgSend(v30, "TTCompare:", v33) == -1)
                  v36 = v30;
                else
                  v36 = v34;
LABEL_29:
                v35 = v31;
              }
              v28 = v36;

              v63 = v35;
            }
            v27 += 5;
            --v29;
          }
          while (v29);
          obj = v28;
          if (v73 != v72)
          {
            v37 = 0;
            v38 = v63;
            if ((unint64_t)(((char *)v73 - (char *)v72) / 40) <= 1)
              v39 = 1;
            else
              v39 = ((char *)v73 - (char *)v72) / 40;
            do
            {
              v40 = &v72[v37];
              v41 = &v72[v37 + 2];
              if (*v41 == v65)
              {
                objc_storeStrong(&v72[v37], v28);
                *((_DWORD *)v40 + 2) = v38;
                *(_OWORD *)v41 = v64;
              }
              v37 += 5;
              --v39;
            }
            while (v39);
          }
LABEL_39:
          v42 = v3;
          v43 = obj;
          v44 = v43;
          v45 = v63;
          if (v4 < v63)
          {
            v46 = v42;
            goto LABEL_45;
          }
          v46 = v43;
          if ((_DWORD)v4 == v63)
          {
            if (objc_msgSend(v42, "TTCompare:", v43) == -1)
              v46 = v42;
            else
              v46 = v44;
LABEL_45:
            v45 = v4;
          }
          v3 = v46;

          v26 = *((_QWORD *)&v64 + 1);
          v65 = (id)v64;

          v4 = v45;
LABEL_47:
          v47 = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(&v66, &v65);
          if (v47)
          {
            v47[3] += v26;
          }
          else
          {
            obj = &v65;
            std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)&v66, &v65, (uint64_t)&std::piecewise_construct, (_QWORD **)&obj)[3] = v26;
          }
          v24 = (_QWORD *)*v24;
          if (!v24)
          {
            v48 = *(float *)&v68;
            v49 = (__n128 *)v67;
            goto LABEL_53;
          }
        }
      }
      v49 = 0;
      v48 = 1.0;
LABEL_53:
      v71 = v48;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<TopoSubstring *,unsigned long>,void *> *>>(&v69, v49, 0);
      v50 = (uint64_t)v72;
      v51 = v73;
      if ((char *)v73 - (char *)v72 < 1)
      {
        v52 = 0;
        v54 = 0;
      }
      else
      {
        v52 = (void **)std::get_temporary_buffer[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *>>(0xCCCCCCCCCCCCCCCDLL * (v73 - v72));
        v54 = v53;
      }
      std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v50, v51, 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v51 - v50) >> 3), v52, v54);
      if (v52)
        operator delete(v52);
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&v66);
    }
    while (*((_QWORD *)&v70 + 1) > 1uLL);
    if (*v60 != *v61)
    {
      v55 = 0;
      v56 = *v60 - *v61;
      if (v56 <= 1)
        v56 = 1;
      v57 = 4;
      do
      {
        (*v61)[v55++] = v72[v57];
        v57 += 5;
      }
      while (v56 != v55);
    }
    v2 = *(TopoSubstring **)(v70 + 16);
    v9 = *(_QWORD *)(v70 + 24);
    if (v9 >= *((unsigned int *)v2 + 18))
      goto LABEL_72;
  }
LABEL_76:
  v58 = v3;
  *(_QWORD *)a2 = v58;
  *(_DWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v2;
  *(_QWORD *)(a2 + 24) = v9;
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&v69);
  *(_QWORD *)&v69 = &v72;
  std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v69);

}

void sub_1BD9272C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23)
{
  void *v23;
  void *v24;
  uint64_t v25;

  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a23);
  a23 = (void **)(v25 - 120);
  std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100](&a23);

  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

_QWORD *removeDirectToSinkEdges(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v1 = result[7];
  v2 = v1 - result[6];
  if ((unint64_t)v2 >= 9)
  {
    v3 = result;
    v4 = 0;
    v5 = v2 >> 3;
    do
    {
      v6 = v3[6] + 8 * v4;
      v7 = *(_DWORD *)(*(_QWORD *)v6 + 72);
      if (v7 < 2)
      {
        ++v4;
      }
      else
      {
        *(_DWORD *)(*(_QWORD *)v6 + 72) = v7 - 1;
        v8 = v1 - (v6 + 8);
        if (v1 != v6 + 8)
          result = memmove((void *)v6, (const void *)(v6 + 8), v1 - (v6 + 8));
        v1 = v6 + v8;
        v3[7] = v6 + v8;
        --v5;
      }
    }
    while (v4 < v5);
  }
  return result;
}

void sub_1BD92763C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD927740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1BD927E90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1BD92811C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD928300(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD928B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD929C58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD92B450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD92B49C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD92B4E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void versioned_document::Document::~Document(versioned_document::Document *this)
{
  versioned_document::Document::~Document(this);
  JUMPOUT(0x1C3B7A848);
}

{
  *(_QWORD *)this = &off_1E76C85B0;
  versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

void sub_1BD92C690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  va_list va;

  va_start(va, a10);

  versioned_document::Version::~Version((versioned_document::Version *)va);
  _Unwind_Resume(a1);
}

void versioned_document::Version::~Version(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76C8628;
  versioned_document::Version::SharedDtor((versioned_document::Version *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  versioned_document::Version::~Version(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(versioned_document *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &off_1E76C9A40;
    v2[1] = versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_impl;
    v3 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1BD92C760(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void versioned_document::Version::SharedDtor(versioned_document::Version *this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = *((_QWORD *)this + 6);
  if (v3)
    v4 = v3 == google::protobuf::internal::empty_string_;
  else
    v4 = 1;
  if (!v4)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    this = (versioned_document::Version *)MEMORY[0x1C3B7A848](v3, 0x1012C40EC159624);
  }
  versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(this);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD92C890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

versioned_document::Version *versioned_document::Version::Version(versioned_document::Version *this, const versioned_document::Version *a2, uint64_t a3)
{
  uint64_t v5;

  *(_QWORD *)this = &off_1E76C8628;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  versioned_document::Version::SharedCtor(this, (uint64_t)a2, a3);
  versioned_document::Version::MergeFrom(this, a2, v5);
  return this;
}

void sub_1BD92C908(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void versioned_document::Version::SharedCtor(versioned_document::Version *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD92C9B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *versioned_document::Version::MergeFrom(versioned_document::Version *this, const versioned_document::Version *a2, uint64_t a3)
{
  std::string *v5;
  int v6;
  int v7;
  int v8;
  const std::string *v9;
  std::string *v10;
  const std::string::value_type *v11;
  char *v12;
  const std::string::value_type *v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/versioned-document.pb.cc", 519);
    v5 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v7 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v7;
      v6 = *((_DWORD *)a2 + 8);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0)
          goto LABEL_14;
        goto LABEL_10;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v8;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      goto LABEL_14;
LABEL_10:
    v9 = (const std::string *)*((_QWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 4u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
    v10 = (std::string *)*((_QWORD *)this + 6);
    if (v10 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v10 = (std::string *)operator new();
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 6) = v10;
    }
    std::string::operator=(v10, v9);
  }
LABEL_14:
  v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v12 = (char *)a2 + 8;
  v11 = v13;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)this + 8), v15, v16);
}

void sub_1BD92CB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedPtrField<versioned_document::Version>::DeleteSubrange(google::protobuf::internal::RepeatedPtrFieldBase *a1, int a2, int a3)
{
  std::string *v6;
  std::string *v7;
  std::string *v8;
  int v9;
  int v10;
  uint64_t v11;
  char v12;
  std::string v13[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1134);
    v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (start) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    if ((a3 & 0x80000000) == 0)
      goto LABEL_6;
  }
  else if ((a3 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1135);
  v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (num) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
LABEL_6:
  if (a3 + a2 > *((_DWORD *)a1 + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1136);
    v8 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (start + num) <= (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (a3 >= 1)
  {
    v9 = a2;
    v10 = a3;
    do
    {
      v11 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)a1, v9);
      if (v11)
        (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
      ++v9;
      --v10;
    }
    while (v10);
  }
  google::protobuf::RepeatedPtrField<versioned_document::Version>::ExtractSubrange(a1, a2, a3, 0);
}

void sub_1BD92CC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 894);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 895);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD92CD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedPtrField<versioned_document::Version>::ExtractSubrange(google::protobuf::internal::RepeatedPtrFieldBase *this, int a2, int a3, uint64_t *a4)
{
  std::string *v8;
  std::string *v9;
  std::string *v10;
  uint64_t v11;
  int v12;
  char v13;
  std::string v14[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1145);
    v8 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (start) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    if ((a3 & 0x80000000) == 0)
      goto LABEL_6;
  }
  else if ((a3 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1146);
  v9 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (num) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
LABEL_6:
  if (a3 + a2 > *((_DWORD *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1147);
    v10 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (start + num) <= (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v10);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (a3 >= 1)
  {
    if (a4)
    {
      v11 = a3;
      v12 = a2;
      do
      {
        *a4++ = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this, v12++);
        --v11;
      }
      while (v11);
    }
    google::protobuf::internal::RepeatedPtrFieldBase::CloseGap((uint64_t)this, a2, a3);
  }
}

void sub_1BD92CED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::CloseGap(uint64_t this, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(int *)(this + 12);
  if (a3 + a2 < (int)v3)
  {
    v4 = a2;
    do
    {
      *(_QWORD *)(*(_QWORD *)this + 8 * v4) = *(_QWORD *)(*(_QWORD *)this + 8 * v4 + 8 * a3);
      ++v4;
    }
    while (a3 + v4 < v3);
  }
  *(_DWORD *)(this + 8) -= a3;
  *(_DWORD *)(this + 12) = v3 - a3;
  return this;
}

void sub_1BD92D00C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BD92D1B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v17;

  _Block_object_dispose(&a17, 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(v17);
  a9.super_class = (Class)ICTTMergeableString;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::GoogleOnceInitImpl(unint64_t *result, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  uint64_t v5;

  v2 = *result;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3 = (uint64_t *)result;
    do
    {
      while (!__ldaxr(result))
      {
        if (!__stlxr(1uLL, result))
        {
          result = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          __dmb(0xBu);
          *v3 = 2;
          return result;
        }
      }
      __clrex();
    }
    while (!*result);
    if (*result == 1)
    {
      do
      {
        result = (unint64_t *)sched_yield();
        v5 = *v3;
        __dmb(0xBu);
      }
      while (v5 == 1);
    }
  }
  return result;
}

uint64_t google::protobuf::internal::FunctionClosure0::Run(uint64_t (**this)(void))
{
  int v2;
  uint64_t result;

  v2 = *((unsigned __int8 *)this + 16);
  result = this[1]();
  if (this)
  {
    if (v2)
      return (*((uint64_t (**)(uint64_t (**)(void)))*this + 1))(this);
  }
  return result;
}

void google::protobuf::internal::OnShutdown(google::protobuf::internal *this, void (*a2)(void))
{
  uint64_t v3;
  pthread_mutex_t **v4;
  void **v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD v19[2];
  char v20;

  v3 = google::protobuf::internal::shutdown_functions_init;
  __dmb(0xBu);
  if (v3 != 2)
  {
    v19[0] = &off_1E76C9A40;
    v19[1] = google::protobuf::internal::InitShutdownFunctions;
    v20 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::shutdown_functions_init, (uint64_t)v19);
  }
  v4 = (pthread_mutex_t **)google::protobuf::internal::shutdown_functions_mutex;
  google::protobuf::internal::Mutex::Lock((pthread_mutex_t **)google::protobuf::internal::shutdown_functions_mutex);
  v5 = (void **)google::protobuf::internal::shutdown_functions;
  v6 = *(_QWORD **)(google::protobuf::internal::shutdown_functions + 8);
  v7 = *(_QWORD *)(google::protobuf::internal::shutdown_functions + 16);
  if ((unint64_t)v6 >= v7)
  {
    v9 = ((uint64_t)v6 - *(_QWORD *)google::protobuf::internal::shutdown_functions) >> 3;
    if ((unint64_t)(v9 + 1) >> 61)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v10 = v7 - *(_QWORD *)google::protobuf::internal::shutdown_functions;
    v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1))
      v11 = v9 + 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v11;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(google::protobuf::internal::shutdown_functions + 16, v12);
    else
      v13 = 0;
    v14 = &v13[8 * v9];
    v15 = &v13[8 * v12];
    *(_QWORD *)v14 = this;
    v8 = v14 + 8;
    v17 = (char *)*v5;
    v16 = (char *)v5[1];
    if (v16 != *v5)
    {
      do
      {
        v18 = *((_QWORD *)v16 - 1);
        v16 -= 8;
        *((_QWORD *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      v16 = (char *)*v5;
    }
    *v5 = v14;
    v5[1] = v8;
    v5[2] = v15;
    if (v16)
      operator delete(v16);
  }
  else
  {
    *v6 = this;
    v8 = v6 + 1;
  }
  v5[1] = v8;
  google::protobuf::internal::Mutex::Unlock(v4);
}

void sub_1BD92D41C(_Unwind_Exception *a1)
{
  pthread_mutex_t **v1;

  google::protobuf::internal::Mutex::Unlock(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::Mutex::Unlock(pthread_mutex_t **this)
{
  int v1;
  int v2;
  char *v3;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  v1 = pthread_mutex_unlock(*this);
  if (v1)
  {
    v2 = v1;
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/stubs/common.cc";
    v6 = 311;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "pthread_mutex_unlock: ");
    v3 = strerror(v2);
    std::string::append(&__p, v3);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1BD92D4D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::Mutex::Lock(pthread_mutex_t **this)
{
  int v1;
  int v2;
  char *v3;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  v1 = pthread_mutex_lock(*this);
  if (v1)
  {
    v2 = v1;
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/stubs/common.cc";
    v6 = 304;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "pthread_mutex_lock: ");
    v3 = strerror(v2);
    std::string::append(&__p, v3);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1BD92D588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void topotext::protobuf_AddDesc_topotext_2eproto_impl(topotext *this, uint64_t a2, uint64_t a3, const char *a4)
{
  topotext::String *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  topotext::VectorTimestamp_Clock *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  topotext::Selection *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  topotext::AttributeRun *v18;
  uint64_t v19;
  uint64_t v20;
  topotext::Font *v21;
  uint64_t v22;
  uint64_t v23;
  topotext::ParagraphStyle *v24;
  uint64_t v25;
  uint64_t v26;
  topotext::AttachmentInfo *v27;
  uint64_t v28;
  uint64_t v29;
  topotext::Attachment *v30;
  uint64_t v31;
  uint64_t v32;
  topotext::Location *v33;
  uint64_t v34;
  uint64_t v35;
  topotext::Media *v36;
  uint64_t v37;
  uint64_t v38;
  topotext::PreviewImage *v39;
  uint64_t v40;
  uint64_t v41;
  topotext::Todo *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  topotext::BoxedValue *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", a4);
  v4 = (topotext::String *)operator new();
  topotext::String::String(v4, v5, v6);
  topotext::String::default_instance_ = (uint64_t)v4;
  v7 = operator new();
  *(_QWORD *)v7 = &off_1E76CC178;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_DWORD *)(v7 + 56) = 0;
  topotext::VectorTimestamp::default_instance_ = v7;
  v8 = (topotext::VectorTimestamp_Clock *)operator new();
  topotext::VectorTimestamp_Clock::VectorTimestamp_Clock(v8, v9, v10);
  topotext::VectorTimestamp_Clock::default_instance_ = (uint64_t)v8;
  v11 = operator new();
  *(_QWORD *)v11 = &off_1E76CC088;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_QWORD *)(v11 + 40) = 0;
  topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_ = v11;
  v12 = operator new();
  *(_QWORD *)v12 = &off_1E76CC1F0;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_QWORD *)(v12 + 40) = 0;
  topotext::CharID::default_instance_ = v12;
  v13 = operator new();
  *(_QWORD *)v13 = &off_1E76CC268;
  *(_QWORD *)(v13 + 64) = 0;
  *(_QWORD *)(v13 + 72) = 0;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  *(_QWORD *)(v13 + 53) = 0;
  topotext::Substring::default_instance_ = v13;
  v14 = (topotext::Selection *)operator new();
  topotext::Selection::Selection(v14, v15, v16);
  topotext::Selection::default_instance_ = (uint64_t)v14;
  v17 = operator new();
  *(_QWORD *)v17 = &off_1E76CC2E0;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  topotext::Selection_Range::default_instance_ = v17;
  v18 = (topotext::AttributeRun *)operator new();
  topotext::AttributeRun::AttributeRun(v18, v19, v20);
  topotext::AttributeRun::default_instance_ = (uint64_t)v18;
  v21 = (topotext::Font *)operator new();
  topotext::Font::Font(v21, v22, v23);
  topotext::Font::default_instance_ = (uint64_t)v21;
  v24 = (topotext::ParagraphStyle *)operator new();
  topotext::ParagraphStyle::ParagraphStyle(v24, v25, v26);
  topotext::ParagraphStyle::default_instance_ = (uint64_t)v24;
  v27 = (topotext::AttachmentInfo *)operator new();
  topotext::AttachmentInfo::AttachmentInfo(v27, v28, v29);
  topotext::AttachmentInfo::default_instance_ = (uint64_t)v27;
  v30 = (topotext::Attachment *)operator new();
  topotext::Attachment::Attachment(v30, v31, v32);
  topotext::Attachment::default_instance_ = (uint64_t)v30;
  v33 = (topotext::Location *)operator new();
  topotext::Location::Location(v33, v34, v35);
  topotext::Location::default_instance_ = (uint64_t)v33;
  v36 = (topotext::Media *)operator new();
  topotext::Media::Media(v36, v37, v38);
  topotext::Media::default_instance_ = (uint64_t)v36;
  v39 = (topotext::PreviewImage *)operator new();
  topotext::PreviewImage::PreviewImage(v39, v40, v41);
  topotext::PreviewImage::default_instance_ = (uint64_t)v39;
  v42 = (topotext::Todo *)operator new();
  topotext::Todo::Todo(v42, v43, v44);
  topotext::Todo::default_instance_ = (uint64_t)v42;
  v45 = operator new();
  *(_QWORD *)v45 = &off_1E76CC808;
  *(_OWORD *)(v45 + 8) = 0u;
  *(_OWORD *)(v45 + 24) = 0u;
  *(_OWORD *)(v45 + 40) = 0u;
  topotext::Color::default_instance_ = v45;
  v46 = (topotext::BoxedValue *)operator new();
  topotext::BoxedValue::BoxedValue(v46, v47, v48);
  topotext::BoxedValue::default_instance_ = (uint64_t)v46;
  v49 = operator new();
  *(_QWORD *)v49 = &off_1E76CC8F8;
  *(_OWORD *)(v49 + 8) = 0u;
  *(_OWORD *)(v49 + 24) = 0u;
  v50 = topotext::BoxedValue::default_instance_;
  *(_QWORD *)(v49 + 40) = 0;
  topotext::WallClockMergeableValue::default_instance_ = v49;
  *(_QWORD *)(topotext::String::default_instance_ + 72) = topotext::VectorTimestamp::default_instance_;
  v51 = topotext::Substring::default_instance_;
  v52 = topotext::CharID::default_instance_;
  *(_QWORD *)(topotext::Substring::default_instance_ + 40) = topotext::CharID::default_instance_;
  *(_QWORD *)(v51 + 48) = v52;
  v53 = topotext::Selection_Range::default_instance_;
  *(_QWORD *)(topotext::Selection_Range::default_instance_ + 40) = v52;
  *(_QWORD *)(v53 + 48) = v52;
  v54 = (_QWORD *)topotext::AttributeRun::default_instance_;
  v55 = topotext::ParagraphStyle::default_instance_;
  *(_QWORD *)(topotext::AttributeRun::default_instance_ + 40) = topotext::ParagraphStyle::default_instance_;
  v54[7] = topotext::Font::default_instance_;
  v56 = topotext::AttachmentInfo::default_instance_;
  v54[11] = topotext::Color::default_instance_;
  v54[12] = v56;
  v54[14] = v56;
  *(_QWORD *)(v55 + 56) = topotext::Todo::default_instance_;
  v57 = topotext::Attachment::default_instance_;
  v58 = topotext::Media::default_instance_;
  *(_QWORD *)(topotext::Attachment::default_instance_ + 96) = topotext::Location::default_instance_;
  *(_QWORD *)(v57 + 104) = v58;
  *(_QWORD *)(v49 + 48) = v50;
  google::protobuf::internal::OnShutdown((google::protobuf::internal *)topotext::protobuf_ShutdownFile_topotext_2eproto, v59);
}

void sub_1BD92DA48(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  MEMORY[0x1C3B7A848](v2, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

topotext::Selection *topotext::Selection::Selection(topotext::Selection *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC358;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  topotext::Selection::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD92DBFC(_Unwind_Exception *a1)
{
  char *v1;
  uint64_t *v2;
  int *v3;
  void **v4;
  uint64_t *v5;

  v5 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  if (v1[31] < 0)
    operator delete(*v4);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Selection::SharedCtor(topotext::Selection *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v5[2];
  char v6;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v5[0] = &off_1E76C9A40;
    v5[1] = google::protobuf::internal::InitEmptyString;
    v6 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_DWORD *)this + 22) = 0;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD92DCC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Location *topotext::Location::Location(topotext::Location *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC628;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::Location::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD92DD1C(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Location::SharedCtor(topotext::Location *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *(_QWORD *)((char *)this + 44) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *((_DWORD *)this + 13) = 0;
  *((_QWORD *)this + 7) = v5;
  *((_BYTE *)this + 64) = 0;
  *((_DWORD *)this + 8) = 0;
}

void sub_1BD92DDD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Media *topotext::Media::Media(topotext::Media *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC6A0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::Media::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD92DE30(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Media::SharedCtor(topotext::Media *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 7) = v5;
  *((_QWORD *)this + 8) = v5;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD92DEE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Todo *topotext::Todo::Todo(topotext::Todo *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC790;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::Todo::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD92DF3C(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Todo::SharedCtor(topotext::Todo *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
  *((_BYTE *)this + 48) = 0;
}

void sub_1BD92DFE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::AttachmentInfo *topotext::AttachmentInfo::AttachmentInfo(topotext::AttachmentInfo *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC538;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::AttachmentInfo::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD92E040(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::AttachmentInfo::SharedCtor(topotext::AttachmentInfo *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 7) = v5;
  *((_QWORD *)this + 8) = v5;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD92E0F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::PreviewImage *topotext::PreviewImage::PreviewImage(topotext::PreviewImage *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC718;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::PreviewImage::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD92E148(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::PreviewImage::SharedCtor(topotext::PreviewImage *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_DWORD *)this + 12) = 0;
  *((_WORD *)this + 26) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 7) = v5;
}

void sub_1BD92E200(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::BoxedValue *topotext::BoxedValue::BoxedValue(topotext::BoxedValue *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC880;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::BoxedValue::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD92E258(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::BoxedValue::SharedCtor(topotext::BoxedValue *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v5[2];
  char v6;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v5[0] = &off_1E76C9A40;
    v5[1] = google::protobuf::internal::InitEmptyString;
    v6 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 12) = 0;
}

void sub_1BD92E304(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Attachment *topotext::Attachment::Attachment(topotext::Attachment *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC5B0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((_QWORD *)this + 42) = 0;
  *((_QWORD *)this + 43) = 0;
  *((_DWORD *)this + 88) = 0;
  topotext::Attachment::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD92E390(_Unwind_Exception *a1)
{
  char *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  void **v5;
  uint64_t *v6;

  v6 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v2);
  if (v1[31] < 0)
    operator delete(*v5);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

double topotext::Attachment::SharedCtor(topotext::Attachment *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  char *v7;
  _QWORD v8[2];
  char v9;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v8[0] = &off_1E76C9A40;
    v8[1] = google::protobuf::internal::InitEmptyString;
    v9 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v8);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v8);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = v5;
  *((_QWORD *)this + 9) = v5;
  *((_QWORD *)this + 10) = v5;
  *((_QWORD *)this + 11) = v5;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_QWORD *)this + 19) = 0;
  *((_QWORD *)this + 17) = 0;
  *((_DWORD *)this + 40) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 22) = v5;
  *((_BYTE *)this + 164) = 0;
  *((_QWORD *)this + 49) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 232) = 0u;
  v7 = (char *)this + 232;
  *((_QWORD *)v7 - 6) = 0;
  *((_QWORD *)v7 - 5) = 0;
  *((_QWORD *)v7 - 4) = v5;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_OWORD *)v7 + 3) = 0u;
  *((_QWORD *)v7 + 8) = 0;
  *((_QWORD *)v7 + 9) = v5;
  *((_QWORD *)v7 + 10) = v5;
  *((_QWORD *)v7 + 11) = v5;
  *((_QWORD *)v7 + 12) = v5;
  *((_QWORD *)v7 + 16) = v5;
  *((_QWORD *)v7 + 17) = v5;
  *((_QWORD *)v7 + 18) = v5;
  *((_QWORD *)v7 + 19) = v5;
  *((_QWORD *)v7 - 25) = 0;
  return result;
}

void sub_1BD92E4B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::InitShutdownFunctions(google::protobuf::internal *this)
{
  _QWORD *v1;
  _QWORD *v2;
  pthread_mutex_t *v3;
  uint64_t result;

  v1 = (_QWORD *)operator new();
  v1[1] = 0;
  v1[2] = 0;
  *v1 = 0;
  google::protobuf::internal::shutdown_functions = (uint64_t)v1;
  v2 = (_QWORD *)operator new();
  v3 = (pthread_mutex_t *)operator new();
  *v2 = v3;
  result = pthread_mutex_init(v3, 0);
  google::protobuf::internal::shutdown_functions_mutex = (uint64_t)v2;
  return result;
}

void sub_1BD92E554(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::InitEmptyString(google::protobuf::internal *this)
{
  _QWORD *v1;
  void (*v2)(void);

  v1 = (_QWORD *)operator new();
  v1[1] = 0;
  v1[2] = 0;
  *v1 = 0;
  google::protobuf::internal::empty_string_ = (uint64_t)v1;
  google::protobuf::internal::OnShutdown((google::protobuf::internal *)google::protobuf::internal::DeleteEmptyString, v2);
}

void versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_impl(versioned_document *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  versioned_document::Version *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/versioned-document.pb.cc", a4);
  v4 = operator new();
  *(_QWORD *)v4 = &off_1E76C85B0;
  *(_DWORD *)(v4 + 64) = 0;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_DWORD *)(v4 + 56) = 0;
  versioned_document::Document::default_instance_ = v4;
  v5 = (versioned_document::Version *)operator new();
  versioned_document::Version::Version(v5, v6, v7);
  versioned_document::Version::default_instance_ = (uint64_t)v5;
  google::protobuf::internal::OnShutdown((google::protobuf::internal *)versioned_document::protobuf_ShutdownFile_versioned_2ddocument_2eproto, v8);
}

void sub_1BD92E664(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::VerifyVersion(google::protobuf::internal *this, google::protobuf::internal *a2, const std::string::value_type *a3, const char *a4)
{
  const std::string::value_type *v7;
  std::string::size_type v8;
  const std::string::value_type *p_p;
  std::string::size_type v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  void *__p;
  std::string::size_type v16;
  unsigned __int8 v17;
  void *v18;
  std::string::size_type v19;
  unsigned __int8 v20;
  int v21;
  const char *v22;
  int v23;
  std::string v24;
  char __str[127];
  char v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  if ((int)a2 > 2006001)
  {
    v21 = 3;
    v22 = "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/stubs/common.cc";
    v23 = 61;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program requires version ");
    google::protobuf::internal::VersionString(a2, &v18);
    if ((v20 & 0x80u) == 0)
      v7 = (const std::string::value_type *)&v18;
    else
      v7 = (const std::string::value_type *)v18;
    if ((v20 & 0x80u) == 0)
      v8 = v20;
    else
      v8 = v19;
    std::string::append(&v24, v7, v8);
    std::string::append(&v24, " of the Protocol Buffer runtime library, but the installed version is ");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 2, 6, 1);
    v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0)
      p_p = (const std::string::value_type *)&__p;
    else
      p_p = (const std::string::value_type *)__p;
    if ((v17 & 0x80u) == 0)
      v10 = v17;
    else
      v10 = v16;
    std::string::append(&v24, p_p, v10);
    std::string::append(&v24, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0)
      operator delete(__p);
    if ((char)v20 < 0)
      operator delete(v18);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v24.__r_.__value_.__l.__data_);
  }
  if ((int)this < 2006000)
  {
    v21 = 3;
    v22 = "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/stubs/common.cc";
    v23 = 72;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program was compiled against version ");
    google::protobuf::internal::VersionString(this, &v18);
    if ((v20 & 0x80u) == 0)
      v11 = (const std::string::value_type *)&v18;
    else
      v11 = (const std::string::value_type *)v18;
    if ((v20 & 0x80u) == 0)
      v12 = v20;
    else
      v12 = v19;
    std::string::append(&v24, v11, v12);
    std::string::append(&v24, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 2, 6, 1);
    v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0)
      v13 = (const std::string::value_type *)&__p;
    else
      v13 = (const std::string::value_type *)__p;
    if ((v17 & 0x80u) == 0)
      v14 = v17;
    else
      v14 = v16;
    std::string::append(&v24, v13, v14);
    std::string::append(&v24, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0)
      operator delete(__p);
    if ((char)v20 < 0)
      operator delete(v18);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v24.__r_.__value_.__l.__data_);
  }
}

void sub_1BD92E98C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a17 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a32 < 0)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

void sub_1BD92EB64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD92EFC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoID a2, int a3, int a4)
{
  unsigned int clock;
  NSUUID *replicaID;
  void *v8;
  NSUUID *v9;

  clock = a2.clock;
  replicaID = a2.replicaID;
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 10) = a3;
  *((_BYTE *)this + 44) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 18) = 0;
  objc_storeStrong((id *)this, a2.replicaID);
  *((_DWORD *)this + 2) = clock;
  *((_DWORD *)this + 4) = a4;
  v8 = (void *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = replicaID;
  v9 = replicaID;

  *((_DWORD *)this + 8) = clock;
}

void sub_1BD92F258(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD92FC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  va_list va;

  va_start(va, a3);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_1BD92FD1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD93084C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v32;

  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a27);
  v32 = *(void **)(v30 - 248);
  if (v32)
  {
    *(_QWORD *)(v30 - 240) = v32;
    operator delete(v32);
  }

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD930A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::Get(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 664);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 665);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)a1 + 4 * a2;
}

void sub_1BD930B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void traverseIterative(uint64_t a1, void *a2)
{
  void (**v2)(id, _QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  int v11;
  unsigned int v12;
  BOOL v13;
  _OWORD v14[2];
  int v15;
  _OWORD v16[2];
  __int128 v17;
  uint64_t v18;
  char *v19;

  v18 = a1;
  v2 = a2;
  v17 = 0u;
  memset(v16, 0, sizeof(v16));
  std::deque<TopoSubstring *>::push_back(v16, &v18);
  memset(v14, 0, sizeof(v14));
  v15 = 1065353216;
  v3 = *((_QWORD *)&v17 + 1);
  if (*((_QWORD *)&v17 + 1))
  {
    while (1)
    {
      v4 = v3 - 1;
      v5 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)&v16[0] + 1) + (((unint64_t)(v17 + v4) >> 6) & 0x3FFFFFFFFFFFFF8))
                     + 8 * ((v17 + v4) & 0x1FF));
      *((_QWORD *)&v17 + 1) = v4;
      std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](v16, 1);
      v2[2](v2, v5);
      while (1)
      {
        v7 = *(char **)(v5 + 48);
        v6 = *(char **)(v5 + 56);
        if (v6 - v7 != 8)
          break;
        v8 = *(_QWORD *)v7;
        if (*(_DWORD *)(*(_QWORD *)v7 + 72) != 1)
          break;
        v2[2](v2, *(_QWORD *)v7);
        v5 = v8;
      }
      if (v6 != v7)
        break;
LABEL_17:
      v3 = *((_QWORD *)&v17 + 1);
      if (!*((_QWORD *)&v17 + 1))
        goto LABEL_18;
    }
    v9 = v6 - 8;
    while (1)
    {
      v10 = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(v14, v9);
      if (v10)
      {
        v11 = *((_DWORD *)v10 + 6) - 1;
        if (*((_DWORD *)v10 + 6) == 1)
          goto LABEL_14;
      }
      else
      {
        v12 = *(_DWORD *)(*(_QWORD *)v9 + 72);
        if (v12 < 2)
        {
LABEL_14:
          std::deque<TopoSubstring *>::push_back(v16, v9);
          goto LABEL_15;
        }
        v19 = v9;
        v10 = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned int>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned int>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)v14, v9, (uint64_t)&std::piecewise_construct, (_QWORD **)&v19);
        v11 = v12 - 1;
      }
      *((_DWORD *)v10 + 6) = v11;
LABEL_15:
      v13 = v9 == *(char **)(v5 + 48);
      v9 -= 8;
      if (v13)
        goto LABEL_17;
    }
  }
LABEL_18:
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)v14);
  std::deque<TopoSubstring *>::~deque[abi:ne180100](v16);

}

void sub_1BD930CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);
  std::deque<TopoSubstring *>::~deque[abi:ne180100]((uint64_t *)va);

  _Unwind_Resume(a1);
}

void TopoSubstring::addChild(TopoSubstring *this, TopoSubstring *a2)
{
  char *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = *((_QWORD *)this + 8);
  v4 = (char *)this + 64;
  v5 = v6;
  v7 = (_QWORD *)*((_QWORD *)v4 - 1);
  if ((unint64_t)v7 >= v6)
  {
    v9 = (void **)(v4 - 16);
    v10 = *((_QWORD *)v4 - 2);
    v11 = ((uint64_t)v7 - v10) >> 3;
    if ((unint64_t)(v11 + 1) >> 61)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v12 = v5 - v10;
    v13 = v12 >> 2;
    if (v12 >> 2 <= (unint64_t)(v11 + 1))
      v13 = v11 + 1;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v13;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>((uint64_t)v4, v14);
    else
      v15 = 0;
    v16 = &v15[8 * v11];
    v17 = &v15[8 * v14];
    *(_QWORD *)v16 = a2;
    v8 = v16 + 8;
    v19 = (char *)*((_QWORD *)this + 6);
    v18 = (char *)*((_QWORD *)this + 7);
    if (v18 != v19)
    {
      do
      {
        v20 = *((_QWORD *)v18 - 1);
        v18 -= 8;
        *((_QWORD *)v16 - 1) = v20;
        v16 -= 8;
      }
      while (v18 != v19);
      v18 = (char *)*v9;
    }
    *((_QWORD *)this + 6) = v16;
    *((_QWORD *)this + 7) = v8;
    *((_QWORD *)this + 8) = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *v7 = a2;
    v8 = v7 + 1;
  }
  *((_QWORD *)this + 7) = v8;
  ++*((_DWORD *)a2 + 18);
}

uint64_t ___Z7hasLoopP13TopoSubstring_block_invoke_2(uint64_t result)
{
  --*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24);
  return result;
}

void traverseUnordered(uint64_t a1, void *a2)
{
  void (**v2)(id, uint64_t, char *);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char v8;
  _OWORD v9[2];
  __int128 v10;
  _OWORD v11[2];
  int v12;
  uint64_t v13;

  v13 = a1;
  v2 = a2;
  memset(v11, 0, sizeof(v11));
  v12 = 1065353216;
  v10 = 0u;
  memset(v9, 0, sizeof(v9));
  v8 = 0;
  std::deque<TopoSubstring *>::push_back(v9, &v13);
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v11, &v13, &v13);
  while (*((_QWORD *)&v10 + 1))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)&v9[0] + 1)
                               + (((unint64_t)(v10 + *((_QWORD *)&v10 + 1) - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
                   + 8 * ((v10 + *((_QWORD *)&v10 + 1) - 1) & 0x1FF));
    --*((_QWORD *)&v10 + 1);
    std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](v9, 1);
    v2[2](v2, v3, &v8);
    v4 = v3;
    if (v8)
      break;
    while (1)
    {
      v6 = *(char **)(v4 + 48);
      v5 = *(char **)(v4 + 56);
      if (v5 - v6 != 8)
        break;
      v4 = *(_QWORD *)v6;
      if (*(_DWORD *)(*(_QWORD *)v6 + 72) != 1)
        break;
      v2[2](v2, *(_QWORD *)v6, &v8);
      if (v8 || v4 == v3)
        goto LABEL_16;
    }
    while (v6 != v5)
    {
      v7 = 0;
      v7 = *(_QWORD *)v6;
      if (*(_DWORD *)(v7 + 72) > 1u)
      {
        if (!std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(v11, &v7))
        {
          std::deque<TopoSubstring *>::push_back(v9, &v7);
          std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v11, &v7, &v7);
        }
      }
      else
      {
        std::deque<TopoSubstring *>::push_back(v9, &v7);
      }
      v6 += 8;
    }
  }
LABEL_16:
  std::deque<TopoSubstring *>::~deque[abi:ne180100](v9);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)v11);

}

void sub_1BD931064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  std::deque<TopoSubstring *>::~deque[abi:ne180100]((uint64_t *)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);

  _Unwind_Resume(a1);
}

void std::deque<TopoSubstring *>::push_back(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = a1[2];
  v5 = a1[1];
  if (v4 == v5)
    v6 = 0;
  else
    v6 = ((v4 - v5) << 6) - 1;
  v7 = a1[5];
  v8 = v7 + a1[4];
  if (v6 == v8)
  {
    std::deque<TopoSubstring *>::__add_back_capacity(a1);
    v5 = a1[1];
    v7 = a1[5];
    v8 = a1[4] + v7;
  }
  *(_QWORD *)(*(_QWORD *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
}

_QWORD *std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v6 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v7 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v6 >> 47) ^ v6);
  v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9)
        v3 = v8 % v9;
    }
    else
    {
      v3 = v8 & (v9 - 1);
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2)
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x18uLL);
  *i = 0;
  i[1] = v8;
  i[2] = *a3;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    v16 = 1;
    if (v9 >= 3)
      v16 = (v9 & (v9 - 1)) != 0;
    v17 = v16 | (2 * v9);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v19);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v21)
  {
    *i = *v21;
LABEL_38:
    *v21 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v20 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v22 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9)
        v22 %= v9;
    }
    else
    {
      v22 &= v9 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1BD931384(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<TopoSubstring **>::~__split_buffer(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != v3)
    *(_QWORD *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  v4 = *(void **)a1;
  if (*(_QWORD *)a1)
    operator delete(v4);
  return a1;
}

void std::deque<TopoSubstring *>::__add_back_capacity(_QWORD *a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;

  v2 = a1[4];
  v3 = v2 >= 0x200;
  v4 = v2 - 512;
  if (v3)
  {
    v5 = (uint64_t)(a1 + 3);
    v6 = (char *)a1[3];
    a1[4] = v4;
    v7 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v11 = *v7;
    v9 = (char *)(v7 + 1);
    v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(_QWORD *)v8 = v10;
      a1[2] += 8;
      return;
    }
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v33 = 1;
      else
        v33 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      v8 = v35;
      v39 = a1[2] - (_QWORD)v38;
      if (v39)
      {
        v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          v42 = *v38++;
          *(_QWORD *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    v13 = v12 >> 3;
    v14 = v12 >> 3 < -1;
    v15 = (v12 >> 3) + 2;
    if (v14)
      v16 = v15;
    else
      v16 = v13 + 1;
    v17 = -(v16 >> 1);
    v18 = v16 >> 1;
    v19 = &v9[-8 * v18];
    v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      v9 = (char *)a1[1];
    }
    v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  v21 = a1[2];
  v22 = (v21 - a1[1]) >> 3;
  v23 = a1[3];
  v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(_QWORD *)&v54 = operator new(0x1000uLL);
      std::__split_buffer<TopoSubstring **>::push_back(a1, &v54);
      return;
    }
    *(_QWORD *)&v54 = operator new(0x1000uLL);
    std::__split_buffer<TopoSubstring **>::push_front((uint64_t)a1, &v54);
    v44 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v45 = *v44;
    v9 = (char *)(v44 + 1);
    v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3])
      goto LABEL_33;
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v46 = 1;
      else
        v46 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      v8 = v35;
      v49 = a1[2] - (_QWORD)v48;
      if (v49)
      {
        v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          v52 = *v48++;
          *(_QWORD *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1)
    v25 = 1;
  else
    v25 = v24 >> 2;
  v56 = a1 + 3;
  *(_QWORD *)&v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>((uint64_t)(a1 + 3), v25);
  *((_QWORD *)&v54 + 1) = v54 + 8 * v22;
  *(_QWORD *)&v55 = *((_QWORD *)&v54 + 1);
  *((_QWORD *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  std::__split_buffer<TopoSubstring **>::push_back(&v54, &v53);
  v27 = (_QWORD *)a1[2];
  v28 = -7 - (_QWORD)v27;
  while (v27 != (_QWORD *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<TopoSubstring **>::push_front((uint64_t)&v54, v27);
  }
  v29 = (char *)*a1;
  v30 = v54;
  v31 = v55;
  *(_QWORD *)&v54 = *a1;
  *((_QWORD *)&v54 + 1) = v27;
  v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  v55 = v32;
  if (v27 != (_QWORD *)v32)
    *(_QWORD *)&v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  if (v29)
    operator delete(v29);
}

void sub_1BD9316AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  void *v13;

  operator delete(v13);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void std::__split_buffer<TopoSubstring **>::push_back(_QWORD *a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;

  v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    v5 = (char *)a1[1];
    v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1)
        v16 = 1;
      else
        v16 = (uint64_t)&v4[-*a1] >> 2;
      v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(a1[4], v16);
      v19 = &v17[8 * (v16 >> 2)];
      v20 = (uint64_t *)a1[1];
      v4 = v19;
      v21 = a1[2] - (_QWORD)v20;
      if (v21)
      {
        v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        v22 = 8 * (v21 >> 3);
        v23 = &v17[8 * (v16 >> 2)];
        do
        {
          v24 = *v20++;
          *(_QWORD *)v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        v4 = (char *)a1[2];
      }
    }
    else
    {
      v7 = v6 >> 3;
      v8 = v6 >> 3 < -1;
      v9 = (v6 >> 3) + 2;
      if (v8)
        v10 = v9;
      else
        v10 = v7 + 1;
      v11 = -(v10 >> 1);
      v12 = v10 >> 1;
      v13 = &v5[-8 * v12];
      v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        v4 = (char *)a1[1];
      }
      v15 = &v4[8 * v11];
      v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(_QWORD *)v4 = *a2;
  a1[2] += 8;
}

{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;

  v5 = (char *)a1[3];
  v4 = (uint64_t)(a1 + 3);
  v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    v7 = (char *)a1[1];
    v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1)
        v18 = 1;
      else
        v18 = (uint64_t)&v6[-*a1] >> 2;
      v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v4, v18);
      v21 = &v19[8 * (v18 >> 2)];
      v22 = (uint64_t *)a1[1];
      v6 = v21;
      v23 = a1[2] - (_QWORD)v22;
      if (v23)
      {
        v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        v24 = 8 * (v23 >> 3);
        v25 = &v19[8 * (v18 >> 2)];
        do
        {
          v26 = *v22++;
          *(_QWORD *)v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        v6 = (char *)a1[2];
      }
    }
    else
    {
      v9 = v8 >> 3;
      v10 = v8 >> 3 < -1;
      v11 = (v8 >> 3) + 2;
      if (v10)
        v12 = v11;
      else
        v12 = v9 + 1;
      v13 = -(v12 >> 1);
      v14 = v12 >> 1;
      v15 = &v7[-8 * v14];
      v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        v6 = (char *)a1[1];
      }
      v17 = &v6[8 * v13];
      v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(_QWORD *)v6 = *a2;
  a1[2] += 8;
}

uint64_t ___Z7hasLoopP13TopoSubstring_block_invoke(uint64_t result)
{
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24);
  return result;
}

void sub_1BD9319AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned int>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned int>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  void **v12;
  _QWORD *v13;
  unint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10)
        v4 = v9 % v10;
    }
    else
    {
      v4 = v9 & (v10 - 1);
    }
    v12 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      v13 = *v12;
      if (*v12)
      {
        do
        {
          v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == *a2)
              return v13;
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10)
                v14 %= v10;
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
  v13 = operator new(0x20uLL);
  *v13 = 0;
  v13[1] = v9;
  v13[2] = **a4;
  *((_DWORD *)v13 + 6) = 0;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    v17 = 1;
    if (v10 >= 3)
      v17 = (v10 & (v10 - 1)) != 0;
    v18 = v17 | (2 * v10);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v20);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v22)
  {
    *v13 = *v22;
LABEL_38:
    *v22 = v13;
    goto LABEL_39;
  }
  *v13 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v13;
  *(_QWORD *)(v21 + 8 * v4) = a1 + 16;
  if (*v13)
  {
    v23 = *(_QWORD *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10)
        v23 %= v10;
    }
    else
    {
      v23 &= v10 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v13;
}

void sub_1BD931C20(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1BD932238(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9327F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void std::vector<TopoSubstring *>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 3)
  {
    if (a2 >> 61)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    v9 = &v6[8 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        v13 = *((_QWORD *)v10 - 1);
        v10 -= 8;
        *((_QWORD *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1BD932D04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD932DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD932F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1BD9330B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD933308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9333B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD933AAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD934060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1BD9341C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD934530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9346A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD934C78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD936FD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double versioned_document::Document::Document(versioned_document::Document *this)
{
  double result;

  *(_QWORD *)this = &off_1E76C85B0;
  *((_DWORD *)this + 16) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

void sub_1BD937148(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::ParseFromArray(google::protobuf::MessageLite *this, char *a2, int a3)
{
  _BOOL8 v4;
  std::string *v5;
  _QWORD v7[3];
  int v8;
  uint64_t v9;
  __int16 v10;
  int v11;
  __int128 v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  std::string __p;
  std::string v18[2];

  v7[0] = 0;
  v7[1] = a2;
  v7[2] = &a2[a3];
  v8 = a3;
  v9 = 0;
  v10 = 0;
  v11 = a3;
  v12 = xmmword_1BDC16130;
  v13 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  v14 = 0;
  v15 = 0;
  (*(void (**)(google::protobuf::MessageLite *))(*(_QWORD *)this + 32))(this);
  if (!(*(unsigned int (**)(google::protobuf::MessageLite *, _QWORD *))(*(_QWORD *)this + 64))(this, v7))
  {
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (((*(uint64_t (**)(google::protobuf::MessageLite *))(*(_QWORD *)this + 40))(this) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 123);
    v5 = google::protobuf::internal::LogMessage::operator<<(v18, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    goto LABEL_7;
  }
  v4 = (_BYTE)v10 != 0;
LABEL_8:
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)v7);
  return v4;
}

void sub_1BD937284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  if (a25 < 0)
    operator delete(__p);
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v25 - 64));
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&a9);
  _Unwind_Resume(a1);
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  std::string *v2;
  std::string *v3;
  char v4;
  std::string v5[2];

  if (*(_QWORD *)this)
    google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(this);
  if (*((_DWORD *)this + 13) == -2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 78);
    v2 = google::protobuf::internal::LogMessage::operator<<(v5, "The total number of bytes read was ");
    v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 6));
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, (google::protobuf::internal::LogMessage *)v3);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
}

topotext::String *topotext::String::String(topotext::String *this, uint64_t a2, uint64_t a3)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E76CC010;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_DWORD *)this + 30) = 0;
  topotext::String::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9373D0(_Unwind_Exception *a1)
{
  char *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  void **v5;
  uint64_t *v6;

  v6 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v2);
  if (v1[31] < 0)
    operator delete(*v5);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::String::SharedCtor(topotext::String *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
  *((_QWORD *)this + 9) = 0;
}

void sub_1BD9374A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::String::IsInitialized(topotext::String *this)
{
  return 1;
}

uint64_t versioned_document::Document::IsInitialized(versioned_document::Document *this)
{
  return 1;
}

void topotext::String::~String(topotext::String *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC010;
  topotext::String::SharedDtor(this, a2, a3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 13);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 10);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  topotext::String::~String(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

uint64_t topotext::String::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((v4 & 5) != 0)
  {
    if ((v4 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 40);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 4) != 0)
    {
      this = *(_QWORD *)(this + 72);
      if (this)
        this = topotext::VectorTimestamp::Clear(this);
    }
  }
  if (*(int *)(v3 + 56) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v3 + 56));
  }
  *(_DWORD *)(v3 + 56) = 0;
  if (*(int *)(v3 + 88) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v3 + 80) + 8 * v8);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      ++v8;
    }
    while (v8 < *(int *)(v3 + 88));
  }
  *(_DWORD *)(v3 + 88) = 0;
  if (*(int *)(v3 + 112) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v3 + 104) + 8 * v10);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
      ++v10;
    }
    while (v10 < *(int *)(v3 + 112));
  }
  *(_DWORD *)(v3 + 112) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

void topotext::String::SharedDtor(topotext::String *this, uint64_t a2, uint64_t a3)
{
  topotext::String *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 5);
  if (v4)
    v5 = v4 == google::protobuf::internal::empty_string_;
  else
    v5 = 1;
  if (!v5)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (topotext::String *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::String *)topotext::String::default_instance_ != v3)
  {
    v6 = *((_QWORD *)v3 + 9);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
}

void topotext::VectorTimestamp::~VectorTimestamp(topotext::VectorTimestamp *this)
{
  topotext::VectorTimestamp::~VectorTimestamp(this);
  JUMPOUT(0x1C3B7A848);
}

{
  *(_QWORD *)this = &off_1E76CC178;
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

void topotext::Substring::~Substring(void **this)
{
  topotext::Substring::~Substring(this);
  JUMPOUT(0x1C3B7A848);
}

{
  void *v2;

  *this = &off_1E76CC268;
  topotext::Substring::SharedDtor((topotext::Substring *)this);
  v2 = this[8];
  if (v2)
    MEMORY[0x1C3B7A830](v2, 0x1000C8052888210);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void topotext::CharID::~CharID(void **this)
{
  topotext::CharID::~CharID(this);
  JUMPOUT(0x1C3B7A848);
}

{
  *this = &off_1E76CC1F0;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void topotext::Substring::SharedDtor(topotext::Substring *this)
{
  uint64_t v2;
  uint64_t v3;

  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Substring *)topotext::Substring::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

void topotext::VectorTimestamp_Clock::~VectorTimestamp_Clock(topotext::VectorTimestamp_Clock *this, uint64_t a2, uint64_t a3)
{
  topotext::VectorTimestamp_Clock::~VectorTimestamp_Clock(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

{
  *(_QWORD *)this = &off_1E76CC100;
  topotext::VectorTimestamp_Clock::SharedDtor(this, a2, a3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

void topotext::VectorTimestamp_Clock_ReplicaClock::~VectorTimestamp_Clock_ReplicaClock(void **this)
{
  topotext::VectorTimestamp_Clock_ReplicaClock::~VectorTimestamp_Clock_ReplicaClock(this);
  JUMPOUT(0x1C3B7A848);
}

{
  *this = &off_1E76CC088;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

uint64_t versioned_document::Document::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  *(_DWORD *)(this + 64) = 0;
  if (*(int *)(this + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t versioned_document::Document::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v9;
  unint64_t v10;
  _BYTE *v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  int32x2_t v15;
  versioned_document::Version *v16;
  int32x2_t v17;
  int32x2_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE v29[32];
  _QWORD v30[2];
  unsigned int v31;

  google::protobuf::io::StringOutputStream::StringOutputStream(v30, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v29, (google::protobuf::io::ZeroCopyOutputStream *)v30);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_12;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if ((_DWORD)v7 == 18)
          goto LABEL_27;
LABEL_19:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_48;
        goto LABEL_16;
      }
      if (v7 >> 3 == 1)
        break;
LABEL_12:
      if ((_DWORD)v7)
        v12 = (v7 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
LABEL_48:
        v27 = 1;
        goto LABEL_49;
      }
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v29, v4))goto LABEL_47;
    }
    if ((_DWORD)v7 != 8)
      goto LABEL_19;
    v9 = (char *)*((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
    if ((unint64_t)v9 >= v10 || *v9 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)&this[8]))
        goto LABEL_47;
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
    }
    else
    {
      this[8].i32[0] = *v9;
      v11 = v9 + 1;
      *((_QWORD *)a2 + 1) = v11;
    }
    this[4].i32[0] |= 1u;
    if ((unint64_t)v11 < v10 && *v11 == 18)
    {
      do
      {
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_27:
        v13 = this[6].i32[1];
        v14 = this[6].i32[0];
        if ((int)v14 >= v13)
        {
          if (v13 == this[7].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[5], v13 + 1);
          v16 = google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New();
          v17 = this[5];
          v18 = this[6];
          this[6] = vadd_s32(v18, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v17 + 8 * v18.i32[0]) = v16;
        }
        else
        {
          v15 = this[5];
          this[6].i32[0] = v14 + 1;
          v16 = *(versioned_document::Version **)(*(_QWORD *)&v15 + 8 * v14);
        }
        v31 = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))
            goto LABEL_47;
        }
        else
        {
          v31 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21
          || (v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, v31),
              !versioned_document::Version::MergePartialFromCodedStream(v16, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_47:
          v27 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v22);
        v23 = *((_DWORD *)a2 + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)a2 + 14) = v25;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v26 = (_BYTE *)*((_QWORD *)a2 + 2);
      }
      while (v11 < v26 && *v11 == 18);
      if (v11 == v26 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        break;
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  v27 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v29);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v30);
  return v27;
}

void sub_1BD937D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

versioned_document::Version *google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New()
{
  versioned_document::Version *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (versioned_document::Version *)operator new();
  versioned_document::Version::Version(v0, v1, v2);
  return v0;
}

void sub_1BD937D70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

versioned_document::Version *versioned_document::Version::Version(versioned_document::Version *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76C8628;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  versioned_document::Version::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD937DD8(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::Version::MergePartialFromCodedStream(versioned_document::Version *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  BOOL v13;
  char *v14;
  int v15;
  _BYTE *v16;
  std::string *v17;
  uint64_t v18;
  _BYTE v20[32];
  _QWORD v21[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    do
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
        {
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_13;
        }
        else
        {
          v6 = *v5;
          *((_DWORD *)a2 + 8) = v6;
          *((_QWORD *)a2 + 1) = v5 + 1;
          v7 = v6 | 0x100000000;
        }
        v9 = v7 >> 3;
        if (v7 >> 3 == 3)
        {
          if ((_DWORD)v7 == 26)
          {
            v15 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
LABEL_22:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
            goto LABEL_48;
          goto LABEL_24;
        }
        if (v9 == 2)
          break;
        if (v9 == 1)
        {
          if ((_DWORD)v7 != 8)
            goto LABEL_22;
          v11 = (char *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_49;
            v12 = (_BYTE *)*((_QWORD *)a2 + 1);
            v10 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *((_DWORD *)this + 10) = *v11;
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
          }
          *((_DWORD *)this + 8) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            v14 = v12 + 1;
            *((_QWORD *)a2 + 1) = v14;
            goto LABEL_32;
          }
        }
        else
        {
LABEL_13:
          if ((_DWORD)v7)
            v13 = (v7 & 7) == 4;
          else
            v13 = 1;
          if (v13)
          {
LABEL_48:
            v18 = 1;
            goto LABEL_50;
          }
LABEL_24:
          if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))goto LABEL_49;
        }
      }
      if ((_DWORD)v7 != 16)
        goto LABEL_22;
      v14 = (char *)*((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
LABEL_32:
      if ((unint64_t)v14 >= v10 || *v14 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11))
          goto LABEL_49;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *((_DWORD *)this + 11) = *v14;
        v16 = v14 + 1;
        *((_QWORD *)a2 + 1) = v16;
      }
      v15 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v15;
    }
    while ((unint64_t)v16 >= v10 || *v16 != 26);
    *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v15 | 4;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v17 = (std::string *)*((_QWORD *)this + 6);
    if (v17 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v17 = (std::string *)operator new();
      v17->__r_.__value_.__r.__words[0] = 0;
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 6) = v17;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v17))
      break;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v18 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_50;
    }
  }
LABEL_49:
  v18 = 0;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v18;
}

void sub_1BD9380BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  int32x2_t *v12;
  int32x2_t v13;
  int32x2_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  _BYTE *v23;
  BOOL v24;
  uint64_t v25;
  _BYTE v27[32];
  _QWORD v28[2];
  unsigned int v29;

  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 != 10)
        break;
      while (1)
      {
        v9 = this[6].i32[1];
        v10 = this[6].i32[0];
        if ((int)v10 >= v9)
        {
          if (v9 == this[7].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[5], v9 + 1);
          v12 = (int32x2_t *)google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New();
          v13 = this[5];
          v14 = this[6];
          this[6] = vadd_s32(v14, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
        }
        else
        {
          v11 = this[5];
          this[6].i32[0] = v10 + 1;
          v12 = *(int32x2_t **)(*(_QWORD *)&v11 + 8 * v10);
        }
        v29 = 0;
        v15 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
            goto LABEL_37;
        }
        else
        {
          v29 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        v16 = *((_DWORD *)a2 + 14);
        v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17
          || (v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29),
              !topotext::VectorTimestamp_Clock::MergePartialFromCodedStream(v12, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_37:
          v25 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v18);
        v19 = *((_DWORD *)a2 + 14);
        v20 = __OFSUB__(v19, 1);
        v21 = v19 - 1;
        if (v21 < 0 == v20)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        v23 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v22 >= v23 || *v22 != 10)
          break;
        *((_QWORD *)a2 + 1) = v22 + 1;
      }
      if (v22 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v25 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if ((_DWORD)v7)
      v24 = (v7 & 7) == 4;
    else
      v24 = 1;
    v25 = v24;
  }
  while (!v24
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1BD938328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  int32x2_t v14;
  uint64_t v15;
  int32x2_t v16;
  int32x2_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE v28[32];
  _QWORD v29[2];
  unsigned int v30;

  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_16;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if ((_DWORD)v7 == 18)
          goto LABEL_27;
LABEL_23:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_48;
        goto LABEL_20;
      }
      if (v7 >> 3 == 1)
        break;
LABEL_16:
      if ((_DWORD)v7)
        v11 = (v7 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
LABEL_48:
        v26 = 1;
        goto LABEL_49;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_47;
    }
    if ((_DWORD)v7 != 10)
      goto LABEL_23;
    this[4].i32[0] |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v9 = (std::string *)this[5];
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__r.__words[0] = 0;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      this[5] = (int32x2_t)v9;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
      goto LABEL_47;
    v10 = (_BYTE *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 18)
    {
      do
      {
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_27:
        v12 = this[7].i32[1];
        v13 = this[7].i32[0];
        if ((int)v13 >= v12)
        {
          if (v12 == this[8].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[6], v12 + 1);
          v15 = operator new();
          *(_QWORD *)v15 = &off_1E76CC088;
          *(_OWORD *)(v15 + 8) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *(_QWORD *)(v15 + 40) = 0;
          v16 = this[6];
          v17 = this[7];
          this[7] = vadd_s32(v17, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v16 + 8 * v17.i32[0]) = v15;
        }
        else
        {
          v14 = this[6];
          this[7].i32[0] = v13 + 1;
          v15 = *(_QWORD *)(*(_QWORD *)&v14 + 8 * v13);
        }
        v30 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
            goto LABEL_47;
        }
        else
        {
          v30 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20
          || (v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !topotext::VectorTimestamp_Clock_ReplicaClock::MergePartialFromCodedStream((topotext::VectorTimestamp_Clock_ReplicaClock *)v15, a2))|| !*((_BYTE *)a2 + 36))
        {
LABEL_47:
          v26 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        v25 = (_BYTE *)*((_QWORD *)a2 + 2);
      }
      while (v10 < v25 && *v10 == 18);
      if (v10 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        break;
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  v26 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1BD938698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::MergePartialFromCodedStream(topotext::VectorTimestamp_Clock_ReplicaClock *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  BOOL v12;
  char *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  _BYTE v17[32];
  _QWORD v18[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_12;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
        break;
      if (v7 >> 3 == 1)
      {
        if ((_DWORD)v7 != 8)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_38;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v13 = v11 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if ((_DWORD)v7)
          v12 = (v7 & 7) == 4;
        else
          v12 = 1;
        if (v12)
        {
LABEL_37:
          v15 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_38;
      }
    }
    if ((_DWORD)v7 != 16)
    {
LABEL_19:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_37;
      goto LABEL_16;
    }
    v13 = (char *)*((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
LABEL_28:
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      *((_DWORD *)this + 11) = *v13;
      v14 = (unsigned __int8 *)(v13 + 1);
      *((_QWORD *)a2 + 1) = v14;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11))
      break;
    v14 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
LABEL_33:
    *((_DWORD *)this + 8) |= 2u;
    if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v15 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  v15 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1BD9388C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

topotext::VectorTimestamp_Clock *google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New()
{
  topotext::VectorTimestamp_Clock *v0;

  v0 = (topotext::VectorTimestamp_Clock *)operator new();
  topotext::VectorTimestamp_Clock::VectorTimestamp_Clock(v0);
  return v0;
}

void sub_1BD938928(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40E3C8ABF7);
  _Unwind_Resume(a1);
}

topotext::VectorTimestamp_Clock *topotext::VectorTimestamp_Clock::VectorTimestamp_Clock(topotext::VectorTimestamp_Clock *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC100;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  topotext::VectorTimestamp_Clock::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9389A0(_Unwind_Exception *a1)
{
  char *v1;
  uint64_t *v2;
  void **v3;
  uint64_t *v4;

  v4 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4);
  if (v1[31] < 0)
    operator delete(*v3);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::VectorTimestamp_Clock::SharedCtor(topotext::VectorTimestamp_Clock *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
}

void sub_1BD938A58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void __Block_byref_object_dispose__8(uint64_t a1)
{

}

void __Block_byref_object_dispose__9(uint64_t a1)
{

}

void __Block_byref_object_dispose__10(uint64_t a1)
{

}

void __Block_byref_object_dispose__11(uint64_t a1)
{

}

void __Block_byref_object_dispose__12(uint64_t a1)
{

}

void __Block_byref_object_dispose__13(uint64_t a1)
{

}

void __Block_byref_object_dispose__14(uint64_t a1)
{

}

void __Block_byref_object_dispose__15(uint64_t a1)
{

}

void __Block_byref_object_dispose__16(uint64_t a1)
{

}

void __Block_byref_object_dispose__17(uint64_t a1)
{

}

void __Block_byref_object_dispose__18(uint64_t a1)
{

}

void __Block_byref_object_dispose__19(uint64_t a1)
{

}

void __Block_byref_object_dispose__20(uint64_t a1)
{

}

{

}

void __Block_byref_object_dispose__21(uint64_t a1)
{

}

void __Block_byref_object_dispose__22(uint64_t a1)
{

}

void __Block_byref_object_dispose__23(uint64_t a1)
{

}

void __Block_byref_object_dispose__24(uint64_t a1)
{

}

void __Block_byref_object_dispose__25(uint64_t a1)
{

}

void __Block_byref_object_dispose__26(uint64_t a1)
{

}

void __Block_byref_object_dispose__27(uint64_t a1)
{

}

void __Block_byref_object_dispose__28(uint64_t a1)
{

}

void __Block_byref_object_dispose__29(uint64_t a1)
{

}

void __Block_byref_object_dispose__30(uint64_t a1)
{

}

void __Block_byref_object_dispose__31(uint64_t a1)
{

}

void __Block_byref_object_dispose__32(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

void __Block_byref_object_dispose__33(uint64_t a1)
{

}

void __Block_byref_object_dispose__34(uint64_t a1)
{

}

void __Block_byref_object_dispose__35(uint64_t a1)
{

}

void __Block_byref_object_dispose__36(uint64_t a1)
{

}

{

}

void __Block_byref_object_dispose__37(uint64_t a1)
{

}

void __Block_byref_object_dispose__38(uint64_t a1)
{

}

void __Block_byref_object_dispose__39(uint64_t a1)
{

}

void __Block_byref_object_dispose__40(uint64_t a1)
{

}

void __Block_byref_object_dispose__41(uint64_t a1)
{

}

void __Block_byref_object_dispose__42(uint64_t a1)
{

}

void __Block_byref_object_dispose__43(uint64_t a1)
{

}

void __Block_byref_object_dispose__44(uint64_t a1)
{

}

void __Block_byref_object_dispose__45(uint64_t a1)
{

}

void __Block_byref_object_dispose__46(uint64_t a1)
{

}

void __Block_byref_object_dispose__47(uint64_t a1)
{

}

void __Block_byref_object_dispose__48(uint64_t a1)
{

}

void __Block_byref_object_dispose__49(uint64_t a1)
{

}

void __Block_byref_object_dispose__50(uint64_t a1)
{

}

void __Block_byref_object_dispose__51(uint64_t a1)
{

}

void __Block_byref_object_dispose__52(uint64_t a1)
{

}

void __Block_byref_object_dispose__53(uint64_t a1)
{

}

void __Block_byref_object_dispose__54(uint64_t a1)
{

}

void __Block_byref_object_dispose__55(uint64_t a1)
{

}

void __Block_byref_object_dispose__56(uint64_t a1)
{

}

void __Block_byref_object_dispose__57(uint64_t a1)
{

}

void __Block_byref_object_dispose__58(uint64_t a1)
{

}

void __Block_byref_object_dispose__59(uint64_t a1)
{

}

void __Block_byref_object_dispose__60(uint64_t a1)
{

}

void __Block_byref_object_dispose__61(uint64_t a1)
{

}

void __Block_byref_object_dispose__62(uint64_t a1)
{

}

void __Block_byref_object_dispose__63(uint64_t a1)
{

}

void sub_1BD938F30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD938FD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(result + 48) = v2;
  *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(result + 64) = *(_DWORD *)(a2 + 64);
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__21(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__22(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__28(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__30(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__31(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__32(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

uint64_t __Block_byref_object_copy__33(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__35(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__36(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__37(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__38(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__39(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__40(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__41(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__42(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__43(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__44(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__45(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__46(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__47(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__48(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__49(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__50(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__51(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__52(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__53(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__54(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__55(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__56(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__57(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__58(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__59(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__60(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__61(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__62(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__63(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

id ICLegacyEntityNameFolder()
{
  return (id)*MEMORY[0x1E0D62A10];
}

void sub_1BD9394A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD939568(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD93960C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_1_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_1_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x1Cu);
}

void OUTLINED_FUNCTION_2_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

void OUTLINED_FUNCTION_2_3(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_9(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_2_5(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_debug_impl(a1, a4, OS_LOG_TYPE_DEBUG, a2, a3, 0xEu);
}

void OUTLINED_FUNCTION_2_7(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_2_8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_1BD939E34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD939EC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD93C008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD93C2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_5_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_12(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x26u);
}

void OUTLINED_FUNCTION_1_4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  void *v0;

  return objc_msgSend(v0, "hash");
}

void OUTLINED_FUNCTION_3_5(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x26u);
}

uint64_t OUTLINED_FUNCTION_3_6(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "count");
}

void OUTLINED_FUNCTION_3_8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_debug_impl(a1, v4, OS_LOG_TYPE_DEBUG, a4, v5, 0x16u);
}

void OUTLINED_FUNCTION_0_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_0_6(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
  __assert_rtn(a1, a2, 80, a4);
}

void OUTLINED_FUNCTION_0_8(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
  __assert_rtn(a1, a2, 349, a4);
}

void OUTLINED_FUNCTION_0_10(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

id OUTLINED_FUNCTION_0_12@<X0>(id a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, float a4@<S0>)
{
  *(float *)a2 = a4;
  *(_QWORD *)(a2 + 4) = a1;
  *(_WORD *)(a2 + 12) = 2112;
  *(_QWORD *)(a2 + 14) = a3;
  return a1;
}

void OUTLINED_FUNCTION_1_5(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void OUTLINED_FUNCTION_1_7(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 2u);
}

void OUTLINED_FUNCTION_1_8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x18u);
}

void OUTLINED_FUNCTION_1_9(float a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  *(float *)a3 = a1;
  *(_DWORD *)(a3 + 4) = a4;
  *(_WORD *)(a3 + 8) = 1024;
  *(_DWORD *)(a3 + 10) = v4;
}

void sub_1BD93E530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD93E7A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD93F044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1BD93F3FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BD93FA70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3B7B370]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1C3B7B2C8](a1, v6, a5);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3B7B37C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_1BD940220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  id *v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v9);
  _Unwind_Resume(a1);
}

void sub_1BD94032C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9403A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9404F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD940594(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD940704(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9408E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD94099C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD940FA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9410FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t libCTGreenTeaLoggerLibrary()
{
  uint64_t v0;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = libCTGreenTeaLoggerLibraryCore_frameworkLibrary;
  v6 = libCTGreenTeaLoggerLibraryCore_frameworkLibrary;
  if (!libCTGreenTeaLoggerLibraryCore_frameworkLibrary)
  {
    v7 = xmmword_1E76CEF88;
    v8 = 0;
    v0 = _sl_dlopen();
    v4[3] = v0;
    libCTGreenTeaLoggerLibraryCore_frameworkLibrary = v0;
  }
  _Block_object_dispose(&v3, 8);
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    __break(1u);
    free(v2);
  }
  return v0;
}

void sub_1BD94153C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

void sub_1BD94180C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD941940(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer(uint64_t a1)
{
  std::__split_buffer<std::pair<TopoID,TopoID>>::__destruct_at_end[abi:ne180100](a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void topotext::AttachmentInfo::~AttachmentInfo(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CC538;
  topotext::AttachmentInfo::SharedDtor((topotext::AttachmentInfo *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  topotext::AttachmentInfo::~AttachmentInfo(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

uint64_t topotext::AttachmentInfo::MergePartialFromCodedStream(topotext::AttachmentInfo *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  std::string *v12;
  _BYTE *v13;
  std::string *v14;
  _BYTE *v15;
  std::string *v16;
  uint64_t v17;
  _BYTE v19[32];
  _QWORD v20[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v20, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19, (google::protobuf::io::ZeroCopyOutputStream *)v20);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_15:
      if ((_DWORD)v7)
        v11 = (v7 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
LABEL_53:
        v17 = 1;
        goto LABEL_54;
      }
LABEL_28:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v19, v4))
      {
LABEL_52:
        v17 = 0;
        goto LABEL_54;
      }
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 10)
          goto LABEL_26;
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_55;
        v9 = (std::string *)*((_QWORD *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v9 = (std::string *)operator new();
          v9->__r_.__value_.__r.__words[0] = 0;
          v9->__r_.__value_.__l.__size_ = 0;
          v9->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 5) = v9;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
          goto LABEL_52;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_30:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_55;
        v12 = (std::string *)*((_QWORD *)this + 6);
        if (v12 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v12 = (std::string *)operator new();
          v12->__r_.__value_.__r.__words[0] = 0;
          v12->__r_.__value_.__l.__size_ = 0;
          v12->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 6) = v12;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
          goto LABEL_52;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_37:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_55;
        v14 = (std::string *)*((_QWORD *)this + 7);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v14 = (std::string *)operator new();
          v14->__r_.__value_.__r.__words[0] = 0;
          v14->__r_.__value_.__l.__size_ = 0;
          v14->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 7) = v14;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14))
          goto LABEL_52;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_44:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_)
LABEL_55:
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v16 = (std::string *)*((_QWORD *)this + 8);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v16 = (std::string *)operator new();
          v16->__r_.__value_.__r.__words[0] = 0;
          v16->__r_.__value_.__l.__size_ = 0;
          v16->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 8) = v16;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v16))
          goto LABEL_52;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v17 = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 2u:
        if ((_DWORD)v7 != 18)
          goto LABEL_26;
        goto LABEL_30;
      case 3u:
        if ((_DWORD)v7 == 26)
          goto LABEL_37;
        goto LABEL_26;
      case 4u:
        if ((_DWORD)v7 == 34)
          goto LABEL_44;
LABEL_26:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_28;
        goto LABEL_53;
      default:
        goto LABEL_15;
    }
    break;
  }
LABEL_54:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v20);
  return v17;
}

void sub_1BD941F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

void topotext::AttachmentInfo::SharedDtor(topotext::AttachmentInfo *this, uint64_t a2, uint64_t a3)
{
  topotext::AttachmentInfo *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 5);
  if (v4 != google::protobuf::internal::empty_string_)
  {
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      this = (topotext::AttachmentInfo *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
      v4 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
    }
    else
    {
      v4 = google::protobuf::internal::empty_string_;
    }
  }
  v5 = *((_QWORD *)v3 + 6);
  if (v5 != v4 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (topotext::AttachmentInfo *)MEMORY[0x1C3B7A848](v5, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
  }
  if (!v4)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v7 = *((_QWORD *)v3 + 7);
  if (v7 != v4 && v7)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (topotext::AttachmentInfo *)MEMORY[0x1C3B7A848](v7, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v8, v9);
  }
  v10 = *((_QWORD *)v3 + 8);
  if (v10 != v4 && v10)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    this = (topotext::AttachmentInfo *)MEMORY[0x1C3B7A848](v10, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint64Fallback(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  unsigned __int8 *v2;
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;

  v2 = (unsigned __int8 *)*((_QWORD *)this + 1);
  v3 = *((_QWORD *)this + 2);
  if ((int)v3 - (int)v2 <= 9 && (v3 <= (unint64_t)v2 || *(char *)(v3 - 1) < 0))
    return google::protobuf::io::CodedInputStream::ReadVarint64Slow(this, a2);
  v4 = (_DWORD)v2 + 1;
  v5 = *v2;
  if (((char)*v2 & 0x80000000) == 0)
  {
    v6 = 0;
    v7 = 0;
LABEL_25:
    *((_QWORD *)this + 1) = &v2[v4 - (int)v2];
    *a2 = v5 | ((unint64_t)v6 << 28) | (v7 << 56);
    return 1;
  }
  v5 = v5 + (v2[1] << 7) - 128;
  if (((char)v2[1] & 0x80000000) == 0)
  {
    v6 = 0;
    v7 = 0;
    v4 = (_DWORD)v2 + 2;
    goto LABEL_25;
  }
  v5 = v5 + (v2[2] << 14) - 0x4000;
  if (((char)v2[2] & 0x80000000) == 0)
  {
    v6 = 0;
    v7 = 0;
    v4 = (_DWORD)v2 + 3;
    goto LABEL_25;
  }
  v5 = v5 + (v2[3] << 21) - 0x200000;
  if (((char)v2[3] & 0x80000000) == 0)
  {
    v6 = 0;
    v7 = 0;
    v4 = (_DWORD)v2 + 4;
    goto LABEL_25;
  }
  v5 -= 0x10000000;
  v6 = v2[4];
  if (((char)v2[4] & 0x80000000) == 0)
  {
    v7 = 0;
    v4 = (_DWORD)v2 + 5;
    goto LABEL_25;
  }
  v6 = v6 + (v2[5] << 7) - 128;
  if (((char)v2[5] & 0x80000000) == 0)
  {
    v7 = 0;
    v4 = (_DWORD)v2 + 6;
    goto LABEL_25;
  }
  v6 = v6 + (v2[6] << 14) - 0x4000;
  if (((char)v2[6] & 0x80000000) == 0)
  {
    v7 = 0;
    v4 = (_DWORD)v2 + 7;
    goto LABEL_25;
  }
  v6 = v6 + (v2[7] << 21) - 0x200000;
  if (((char)v2[7] & 0x80000000) == 0)
  {
    v7 = 0;
    v4 = (_DWORD)v2 + 8;
    goto LABEL_25;
  }
  v6 -= 0x10000000;
  v7 = v2[8];
  if (((char)v2[8] & 0x80000000) == 0)
  {
    v4 = (_DWORD)v2 + 9;
    goto LABEL_25;
  }
  if (((char)v2[9] & 0x80000000) == 0)
  {
    v4 = (_DWORD)v2 + 10;
    v7 = v7 + (v2[9] << 7) - 128;
    goto LABEL_25;
  }
  return 0;
}

_OWORD *sub_1BD942258(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1BD942268(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BD942388();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BDB460FC();
      goto LABEL_14;
    }
    sub_1BD942608();
  }
  v8 = *v3;
  result = sub_1BDBFEA00();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1BDBFE988();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1BD942388()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A638);
  result = sub_1BDBFE2BC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1BDBFEA00();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BD942608()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A638);
  result = sub_1BDBFE2BC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1BDBFEA00();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BD942868(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1BD942914(255, a2);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEFD08], v4);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1ED23A620);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1ED23A618);
}

void sub_1BD9428D0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1BD942914(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BD94294C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1BDBFEA00();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BD942268(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

unint64_t sub_1BD942A44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23A5F8;
  if (!qword_1ED23A5F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED23A5F0);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23A5F8);
  }
  return result;
}

unint64_t sub_1BD942A90()
{
  unint64_t result;

  result = qword_1ED23A5E0;
  if (!qword_1ED23A5E0)
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED23A5E0);
  }
  return result;
}

uint64_t sub_1BD942AD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BDBFCE28();
}

uint64_t sub_1BD942B50(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23A348);
}

uint64_t sub_1BD942B64(uint64_t a1)
{
  return sub_1BD942AD4(a1, qword_1ED23A318);
}

uint64_t sub_1BD942B88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2, v3);
}

uint64_t sub_1BD942BE0()
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_1BDBFE40C();
  return sub_1BDBFE400();
}

uint64_t type metadata accessor for ICQuery()
{
  return objc_opt_self();
}

id _s11NotesShared7ICQueryC023makeQueryForSystemPaperA021allowsRecentlyDeletedACSb_tFZ_0(char a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  objc_super v10;

  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = 1;
  v3 = v2 | 0xA000000000000000;
  if ((a1 & 1) == 0)
  {
    v4 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v5 + 32) = v3;
    v6 = swift_allocObject();
    *(_BYTE *)(v6 + 16) = 0;
    *(_QWORD *)(v5 + 40) = v6 | 0x5000000000000000;
    *(_QWORD *)(v4 + 16) = v5;
    v3 = v4;
  }
  v7 = (objc_class *)type metadata accessor for ICQuery();
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[OBJC_IVAR___ICQueryObjC_type] = v3;
  v10.receiver = v8;
  v10.super_class = v7;
  return objc_msgSendSuper2(&v10, sel_init);
}

id _s11NotesShared7ICQueryC012makeQueryForbA0_21allowsRecentlyDeletedACSb_SbtFZ_0(char a1, char a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  objc_super v12;

  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = a1;
  v5 = v4 | 0x9000000000000000;
  if ((a2 & 1) == 0)
  {
    v6 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v7 + 32) = v5;
    v8 = swift_allocObject();
    *(_BYTE *)(v8 + 16) = 0;
    *(_QWORD *)(v7 + 40) = v8 | 0x5000000000000000;
    *(_QWORD *)(v6 + 16) = v7;
    v5 = v6;
  }
  v9 = (objc_class *)type metadata accessor for ICQuery();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR___ICQueryObjC_type] = v5;
  v12.receiver = v10;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

void Cache.subscript.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = sub_1BDBFE0AC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v13 = *(_QWORD *)(v3 + 96);
    *(_QWORD *)&v19 = *(_QWORD *)(v3 + 80);
    *((_QWORD *)&v19 + 1) = v4;
    v20 = v19;
    v21 = v13;
    v22 = v13;
    type metadata accessor for Cache.KeyWrapper();
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
  v18 = v1[2];
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 96);
  type metadata accessor for Cache.ValueWrapper(0, v14, v4, v15);
  v21 = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v12, v4);
  v17 = swift_allocObject();
  sub_1BD942258(&v19, (_OWORD *)(v17 + 16));
  *(_QWORD *)&v19 = v14;
  *((_QWORD *)&v19 + 1) = v4;
  v20 = v14;
  v21 = v15;
  v22 = v15;
  type metadata accessor for Cache.KeyWrapper();
}

void sub_1BD9430C0(objc_class *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v11 = objc_allocWithZone(a1);
  v12 = sub_1BD9433A0(v3);
  objc_msgSend(*(id *)(v10 - 128), sel_setObject_forKey_, v8, v12);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v4);
  JUMPOUT(0x1BD94312CLL);
}

void Cache.subscript.getter()
{
  type metadata accessor for Cache.KeyWrapper();
}

uint64_t sub_1BD943194(objc_class *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  int v8;
  uint64_t v10;

  v5 = objc_allocWithZone(a1);
  v6 = sub_1BD9433A0(v3);
  v7 = objc_msgSend(v4, sel_objectForKey_, v6);

  if (!v7)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v2, 1, 1, v1);
  sub_1BDAE0BA0((uint64_t)v7 + 16, (uint64_t)&v10);
  swift_release();
  v8 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v2, v8 ^ 1u, 1, v1);
}

uint64_t sub_1BD94324C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BD943284()
{
  return sub_1BD94324C();
}

uint64_t type metadata accessor for Cache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Cache);
}

void Cache.init(name:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED239CE0);
  type metadata accessor for Cache.KeyWrapper();
}

uint64_t sub_1BD9432FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;

  type metadata accessor for Cache.ValueWrapper(0, v1, v2, v3);
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(_QWORD *)(v0 + 16) = v4;
  v5 = v4;
  v6 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setName_, v6);

  return v0;
}

uint64_t sub_1BD943388()
{
  return sub_1BD94324C();
}

uint64_t type metadata accessor for Cache.ValueWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Cache.ValueWrapper);
}

id sub_1BD9433A0(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1) + 0x60)
                                                      - 8)
                                          + 16))(&v1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1) + 0x78)], a1);
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1BD94341C(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x60)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x78)]);
}

uint64_t sub_1BD943448()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for Cache.KeyWrapper()
{
  JUMPOUT(0x1C3B7B2C8);
}

uint64_t sub_1BD9434C4(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_1BD9434F4();

  return v2;
}

uint64_t sub_1BD9434F4()
{
  return sub_1BDBFD62C();
}

uint64_t type metadata accessor for RealtimeCollaborationSelectionDocument.State()
{
  return objc_opt_self();
}

uint64_t sub_1BD9435C8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for CloudRecordSnapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CloudRecordSnapshot);
}

uint64_t NotificationSource.init<A>(observing:object:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void (*v22)(char *, uint64_t, uint64_t);
  id v23;
  void *i;
  id v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;

  v32 = a3;
  v33 = a7;
  v12 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v17 = (char *)&v28 - v16;
  v20 = objc_allocWithZone((Class)type metadata accessor for NotificationSource.Observer(0, a5, v18, v19));
  v30 = a4;
  v21 = sub_1BD9438F4(v32, a4);
  v29 = v12;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v31 = a1;
  v22(v14, a1, a6);
  v23 = v21;
  sub_1BDBFD8CC();
  v32 = a6;
  swift_getAssociatedConformanceWitness();
  sub_1BDBFE0F4();
  for (i = v34; v34; i = v34)
  {
    v25 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v26 = objc_msgSend(v25, sel__addObserver_selector_name_object_options_, v23, sel_handleNotification_, i, a2, 0);

    swift_beginAccess();
    sub_1BD94294C(&v35, (uint64_t)v26);
    swift_endAccess();

    sub_1BDBFE0F4();
  }

  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v32);
  result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v17, AssociatedTypeWitness);
  *v33 = v23;
  return result;
}

uint64_t NotificationSource.init(observing:object:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A648);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(v12 + 32) = a1;
  v15 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A5F0);
  sub_1BD942A44();
  result = NotificationSource.init<A>(observing:object:transform:)((uint64_t)&v15, a2, a3, a4, a5, v13, &v16);
  *a6 = v16;
  return result;
}

id sub_1BD9438F4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  objc_super v15;
  uint64_t v16;
  char v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = *MEMORY[0x1E0DEEDD8] & *v2;
  *(_QWORD *)((char *)v2 + qword_1EF50DAB0) = MEMORY[0x1E0DEE9E8];
  v7 = qword_1EF50DAE0;
  v8 = *(_QWORD *)(v6 + 80);
  v16 = 0;
  v17 = 2;
  type metadata accessor for NotificationSource.Observer.State(0, v8, v9, v10);
  v11 = v2;
  v12 = sub_1BD942BE0();
  sub_1BD943A60(0, 2);
  *(_QWORD *)((char *)v2 + v7) = v12;
  v13 = (_QWORD *)((char *)v11 + qword_1EF50DAD8);
  *v13 = a1;
  v13[1] = a2;
  swift_retain();

  v15.receiver = v11;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t sub_1BD9439E4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for NotificationSource.Observer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NotificationSource.Observer);
}

uint64_t sub_1BD943A50(uint64_t a1, char a2)
{
  uint64_t result;

  if (!a2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BD943A60(uint64_t a1, char a2)
{
  uint64_t result;

  if (!a2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BD943A74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BD943A50(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1BD943AB8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for NotificationSource.Observer.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NotificationSource.Observer.State);
}

uint64_t sub_1BD943ACC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for EditNoteActivity()
{
  uint64_t result;

  result = qword_1ED23A398;
  if (!qword_1ED23A398)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for ICQueryType()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for ICQueryType()
{
  return &type metadata for ICQueryType;
}

uint64_t sub_1BD943BB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCAC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BD943C1C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ICQueryType.DateRange(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1ED23A378);
}

void sub_1BD943C64()
{
  unint64_t v0;

  sub_1BD943D00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for ICQueryType.RelativeDateRange(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1ED23A368);
}

void sub_1BD943D00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED23A360)
  {
    sub_1BDBFCAC8();
    v0 = sub_1BDBFE0AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED23A360);
  }
}

void sub_1BD94434C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD944414(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD944788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1BD945F24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  void *v22;

  objc_destroyWeak(&location);
  objc_sync_exit(v22);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayOutputStream::ArrayOutputStream(uint64_t this, void *a2, int a3, int a4)
{
  int v4;

  *(_QWORD *)this = &off_1E76C7288;
  *(_QWORD *)(this + 8) = a2;
  if (a4 <= 0)
    v4 = a3;
  else
    v4 = a4;
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 20) = v4;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

void google::protobuf::io::ArrayOutputStream::~ArrayOutputStream(google::protobuf::io::ArrayOutputStream *this)
{
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
  JUMPOUT(0x1C3B7A848);
}

BOOL google::protobuf::io::ArrayOutputStream::Next(google::protobuf::io::ArrayOutputStream *this, void **a2, int *a3)
{
  uint64_t v3;
  int v4;
  int v5;

  v3 = *((int *)this + 6);
  v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5))
      v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 7) = v5;
    *a2 = (void *)(*((_QWORD *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void google::protobuf::io::ArrayOutputStream::BackUp(google::protobuf::io::ArrayOutputStream *this, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  char v9;
  std::string v10[2];

  v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 136);
    v5 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 138);
    v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 139);
    v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((_QWORD *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_1BD947658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayOutputStream::ByteCount(google::protobuf::io::ArrayOutputStream *this)
{
  return *((int *)this + 6);
}

void google::protobuf::io::StringOutputStream::~StringOutputStream(google::protobuf::io::StringOutputStream *this)
{
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t google::protobuf::io::StringOutputStream::ByteCount(google::protobuf::io::StringOutputStream *this)
{
  uint64_t v1;

  v1 = *((_QWORD *)this + 1);
  if (*(char *)(v1 + 23) < 0)
    return *(_QWORD *)(v1 + 8);
  else
    return *(unsigned __int8 *)(v1 + 23);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing(google::protobuf::io::ZeroCopyOutputStream *this)
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  uint64_t v0;

  return v0;
}

void sub_1BD949A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD949DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD949F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1BD94A43C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD94A7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD94AF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD94B0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD94B330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD94BCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_6_1(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, os_log_t log, uint64_t a10, uint8_t buf)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, &buf, 0x34u);
}

void sub_1BD94D018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD94D348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(google::protobuf::io::ZeroCopyOutputStream *this, const void *a2)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream.cc", 49);
  v2 = google::protobuf::internal::LogMessage::operator<<(v5, "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, (google::protobuf::internal::LogMessage *)v2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  return 0;
}

void sub_1BD94DDA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1BD94E3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMarkupViewControllerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMarkupViewControllerClass_softClass;
  v7 = getMarkupViewControllerClass_softClass;
  if (!getMarkupViewControllerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getMarkupViewControllerClass_block_invoke;
    v3[3] = &unk_1E76C77A8;
    v3[4] = &v4;
    __getMarkupViewControllerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1BD94EC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD94ED7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD94F1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getMarkupViewControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!MarkupUILibraryCore_frameworkLibrary)
  {
    MarkupUILibraryCore_frameworkLibrary = _sl_dlopen();
    if (!MarkupUILibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("MarkupViewController");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getMarkupViewControllerClass_block_invoke_cold_1();
    free(v3);
  }
  getMarkupViewControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1BD9522D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD95242C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BD952C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_1BD95316C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD954800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD954AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD955610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

id ICLegacyEntityNameAccount()
{
  return (id)*MEMORY[0x1E0D62A08];
}

uint64_t ICHashWithHashKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t result;
  uint64_t *v11;
  char *v12;

  v12 = &a9;
  if (!a1)
    return 1;
  v9 = a1;
  result = 1;
  do
  {
    result = v9 - result + 32 * result;
    v11 = (uint64_t *)v12;
    v12 += 8;
    v9 = *v11;
  }
  while (v9);
  return result;
}

uint64_t ICHashWithObject(void *a1)
{
  id v1;
  id v2;
  objc_class *v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  objc_class *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  objc_class *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t k;
  id v28;
  objc_class *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t m;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    ICCheckedDynamicCast();
    v2 = (id)objc_claimAutoreleasedReturnValue();
    v3 = (objc_class *)objc_opt_class();
    NSStringFromClass(v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "hash");

    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v6 = v2;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v37;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v37 != v9)
            objc_enumerationMutation(v6);
          v5 = ICHashWithObject(*(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * i)) - v5 + 32 * v5;
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
      }
      while (v8);
    }
LABEL_36:

    goto LABEL_37;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    ICCheckedDynamicCast();
    v11 = (id)objc_claimAutoreleasedReturnValue();
    v12 = (objc_class *)objc_opt_class();
    NSStringFromClass(v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v13, "hash");

    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v6 = v11;
    v14 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v37;
      do
      {
        for (j = 0; j != v15; ++j)
        {
          if (*(_QWORD *)v37 != v16)
            objc_enumerationMutation(v6);
          v18 = *(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * j);
          objc_msgSend(v6, "objectForKeyedSubscript:", v18, (_QWORD)v36);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = ICHashWithObject(v18);
          v5 = ICHashWithObject(v19) + v5 - v20 + 32 * v20;

        }
        v15 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
      }
      while (v15);
    }
    goto LABEL_36;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    ICCheckedDynamicCast();
    v21 = (id)objc_claimAutoreleasedReturnValue();
    v22 = (objc_class *)objc_opt_class();
    NSStringFromClass(v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v23, "hash");

    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v6 = v21;
    v24 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    if (v24)
    {
      v25 = v24;
      v26 = *(_QWORD *)v37;
      do
      {
        for (k = 0; k != v25; ++k)
        {
          if (*(_QWORD *)v37 != v26)
            objc_enumerationMutation(v6);
          v5 += ICHashWithObject(*(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * k));
        }
        v25 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
      }
      while (v25);
    }
    goto LABEL_36;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    ICCheckedDynamicCast();
    v28 = (id)objc_claimAutoreleasedReturnValue();
    v29 = (objc_class *)objc_opt_class();
    NSStringFromClass(v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v30, "hash");

    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v6 = v28;
    v31 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    if (v31)
    {
      v32 = v31;
      v33 = *(_QWORD *)v37;
      do
      {
        for (m = 0; m != v32; ++m)
        {
          if (*(_QWORD *)v37 != v33)
            objc_enumerationMutation(v6);
          v5 = ICHashWithObject(*(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * m)) - v5 + 32 * v5;
        }
        v32 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
      }
      while (v32);
    }
    goto LABEL_36;
  }
  v5 = objc_msgSend(v1, "hash");
  if (v5)
    goto LABEL_38;
  objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v6, "hash");
LABEL_37:

LABEL_38:
  return v5;
}

void sub_1BD95E7E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD95EF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD95F420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD95F5B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1BD96007C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD96275C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 176), 8);
  _Block_object_dispose((const void *)(v37 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1BD963074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9672EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD967FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD968FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_18(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_1BD96A678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD96ADCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD96B128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD96B4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD96B840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD96BB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_9_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x30u);
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  void *v0;

  return objc_msgSend(v0, "hash");
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  uint64_t v0;

  return v0;
}

void sub_1BD96C9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1BD96CCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1BD96E564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;

  MEMORY[0x1C3B7A848](v23, 0x10B3C4079506790);

  _Unwind_Resume(a1);
}

void sub_1BD96E8B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD96E9E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD96EA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::String::~String((topotext::String *)&a9);
  _Unwind_Resume(a1);
}

void sub_1BD96EB1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD96F26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1BD96F504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BD96F728(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD96F8E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD96FB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  void *v25;
  void *v26;
  uint64_t v27;

  _Block_object_dispose(&a20, 8);
  _Block_object_dispose((const void *)(v27 - 120), 8);

  _Unwind_Resume(a1);
}

void sub_1BD96FE34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD96FFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  void *v4;
  void *v5;
  va_list va;

  va_start(va, a3);
  topotext::String::~String((topotext::String *)va);

  _Unwind_Resume(a1);
}

void sub_1BD9700A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD970198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD9702B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

topotext::Attachment *google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New()
{
  topotext::Attachment *v0;

  v0 = (topotext::Attachment *)operator new();
  topotext::Attachment::Attachment(v0);
  return v0;
}

void sub_1BD970314(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C406079FE1ELL);
  _Unwind_Resume(a1);
}

_QWORD *std::string::basic_string[abi:ne180100](_QWORD *__dst, void *__src, size_t __len)
{
  void *v6;
  size_t v7;
  size_t v8;

  if (__len >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  if (__len >= 0x17)
  {
    v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v7 = __len | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *__dst = v6;
  }
  else
  {
    *((_BYTE *)__dst + 23) = __len;
    v6 = __dst;
    if (!__len)
      goto LABEL_9;
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __dst;
}

void std::string::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("basic_string");
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E76C6728, MEMORY[0x1E0DE42D0]);
}

void sub_1BD970430(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

uint64_t versioned_document::protobuf_ShutdownFile_versioned_2ddocument_2eproto(versioned_document *this)
{
  uint64_t result;

  if (versioned_document::Document::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)versioned_document::Document::default_instance_ + 8))(versioned_document::Document::default_instance_);
  result = versioned_document::Version::default_instance_;
  if (versioned_document::Version::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)versioned_document::Version::default_instance_ + 8))(versioned_document::Version::default_instance_);
  return result;
}

std::string *versioned_document::Document::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  __int32 v5;
  const std::string::value_type *v6;
  int32x2_t *v7;
  int32x2_t v8;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/versioned-document.pb.cc", 244);
    v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(this + 5, a2 + 5);
  if ((a2[4].i8[0] & 1) != 0)
  {
    v5 = a2[8].i32[0];
    this[4].i32[0] |= 1u;
    this[8].i32[0] = v5;
  }
  v8 = a2[1];
  v7 = a2 + 1;
  v6 = (const std::string::value_type *)v8;
  v9 = v7[2].i8[7];
  if (v9 >= 0)
    v10 = (const std::string::value_type *)v7;
  else
    v10 = v6;
  if (v9 >= 0)
    v11 = v7[2].u8[7];
  else
    v11 = (std::string::size_type)v7[1];
  return std::string::append((std::string *)&this[1], v10, v11);
}

void sub_1BD970564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

double versioned_document::Document::New(versioned_document::Document *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76C85B0;
  *(_DWORD *)(v1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t versioned_document::Document::SerializeWithCachedSizes(versioned_document::Document *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  if ((*((_BYTE *)this + 32) & 1) != 0)
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 16), a2, a4);
  if (*((int *)this + 12) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    v9 = *((_QWORD *)this + 2);
  }
  else
  {
    v8 = (char *)this + 8;
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t versioned_document::Document::ByteSize(versioned_document::Document *this)
{
  int v2;
  google::protobuf::io::CodedOutputStream *v3;
  int v4;
  int v5;
  int v6;
  versioned_document::Version *v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v3 >= 0x80)
      v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    else
      v2 = 2;
  }
  else
  {
    v2 = 0;
  }
  v4 = *((_DWORD *)this + 12);
  v5 = v4 + v2;
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (versioned_document::Version *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40, v6);
      v8 = (google::protobuf::io::CodedOutputStream *)versioned_document::Version::ByteSize(v7);
      v9 = (int)v8;
      if (v8 >= 0x80)
        v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      else
        v10 = 1;
      v5 += v9 + v10;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v5 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *versioned_document::Document::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  return versioned_document::Document::MergeFrom(this, lpsrc);
}

_QWORD *versioned_document::Document::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "versioned_document.Document");
}

versioned_document::Version *versioned_document::Version::New(versioned_document::Version *this)
{
  versioned_document::Version *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (versioned_document::Version *)operator new();
  versioned_document::Version::Version(v1, v2, v3);
  return v1;
}

void sub_1BD9707D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::Version::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 7) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    if ((v3 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 48);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t versioned_document::Version::SerializeWithCachedSizes(versioned_document::Version *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  if ((*((_DWORD *)this + 8) & 4) != 0)
LABEL_4:
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((_QWORD *)this + 6), a2);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t versioned_document::Version::ByteSize(versioned_document::Version *this)
{
  int v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_24;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 8);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80)
  {
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = *((_QWORD *)this + 6);
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = v8;
    v10 = *(_QWORD *)(v7 + 8);
    if ((v8 & 0x80u) == 0)
      v11 = *(unsigned __int8 *)(v7 + 23);
    else
      v11 = v10;
    if (v11 >= 0x80)
    {
      v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v11);
      v8 = *(unsigned __int8 *)(v7 + 23);
      v10 = *(_QWORD *)(v7 + 8);
      v9 = *(_BYTE *)(v7 + 23);
    }
    else
    {
      v12 = 1;
    }
    if (v9 < 0)
      v8 = v10;
    v3 += v12 + v8 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0)
    v13 = *((_QWORD *)this + 2);
  else
    LODWORD(v13) = *((unsigned __int8 *)this + 31);
  result = (v3 + v13);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *versioned_document::Version::CheckTypeAndMergeFrom(versioned_document::Version *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;

  return versioned_document::Version::MergeFrom(this, lpsrc, v4);
}

uint64_t versioned_document::Version::IsInitialized(versioned_document::Version *this)
{
  return 1;
}

_QWORD *versioned_document::Version::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "versioned_document.Version");
}

uint64_t versioned_document::Document::GetCachedSize(versioned_document::Document *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t versioned_document::Version::GetCachedSize(versioned_document::Version *this)
{
  return *((unsigned int *)this + 9);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  uint64_t v7;
  const versioned_document::Version *v8;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  versioned_document::Version *v12;
  int32x2_t v13;
  int32x2_t v14;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v8 = (const versioned_document::Version *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)a2, v6);
      v9 = this[1].i32[1];
      v10 = this[1].i32[0];
      if ((int)v10 >= v9)
      {
        if (v9 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v9 + 1);
        v12 = google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New();
        v13 = *this;
        v14 = this[1];
        this[1] = vadd_s32(v14, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
      }
      else
      {
        v11 = *this;
        this[1].i32[0] = v10 + 1;
        v12 = *(versioned_document::Version **)(*(_QWORD *)&v11 + 8 * v10);
      }
      result = versioned_document::Version::MergeFrom(v12, v8, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BD970BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

uint64_t orientationByRotatingLeft(unint64_t a1)
{
  if (a1 > 7)
    return 0;
  else
    return qword_1BDC15C28[a1];
}

uint64_t orientationByRotatingRight(unint64_t a1)
{
  if (a1 > 7)
    return 0;
  else
    return qword_1BDC15C68[a1];
}

uint64_t clockwiseRotationsFromUpToMatchOrientation(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6)
    return 0;
  else
    return qword_1BDC15CA8[a1 - 1];
}

uint64_t counterClockwiseRotationsFromUpToMatchOrientation(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6)
    return 0;
  else
    return qword_1BDC15CE0[a1 - 1];
}

__CFString *NSStringFromICImageClassOrientation(unint64_t a1)
{
  if (a1 > 7)
    return 0;
  else
    return off_1E76C86C8[a1];
}

uint64_t ICTransformFromImageOrientation@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v4;
  __int128 v5;

  v4 = MEMORY[0x1E0C9BAA8];
  v5 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
  *(_OWORD *)a2 = *MEMORY[0x1E0C9BAA8];
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v4 + 32);
  switch(result)
  {
    case 1:
      *(_QWORD *)a2 = 0xBFF0000000000000;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_QWORD *)(a2 + 24) = 0xBFF0000000000000;
      goto LABEL_4;
    case 2:
      *(_OWORD *)a2 = xmmword_1BDC15C10;
      *(_OWORD *)(a2 + 16) = xmmword_1BDC15C00;
      goto LABEL_8;
    case 3:
      *(_OWORD *)a2 = xmmword_1BDC15BF0;
      *(_QWORD *)(a2 + 24) = 0;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 16) = 0x3FF0000000000000;
      goto LABEL_10;
    case 4:
      *(_QWORD *)a2 = 0xBFF0000000000000;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_QWORD *)(a2 + 24) = 0x3FF0000000000000;
LABEL_8:
      *(double *)(a2 + 32) = a3;
      *(_QWORD *)(a2 + 40) = 0;
      return result;
    case 5:
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_QWORD *)a2 = 0x3FF0000000000000;
      *(_OWORD *)(a2 + 24) = xmmword_1BDC15C00;
      goto LABEL_10;
    case 6:
    case 7:
      *(_OWORD *)a2 = xmmword_1BDC15BF0;
      *(_OWORD *)(a2 + 16) = xmmword_1BDC15C00;
LABEL_4:
      *(double *)(a2 + 32) = a3;
LABEL_10:
      *(double *)(a2 + 40) = a4;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BD9716BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1BD971988(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v3;
  MEMORY[0x1C3B7A848](v4, 0x10B3C400074EEDFLL);

  _Unwind_Resume(a1);
}

void sub_1BD97233C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1BD972468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  uint64_t v11;

  MEMORY[0x1C3B7A848](v11, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BD97254C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD972640(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromICAppearanceType(uint64_t a1)
{
  if (a1)
    return CFSTR("ICAppearanceTypeDark");
  else
    return CFSTR("ICAppearanceTypeDefault");
}

uint64_t drawing::protobuf_ShutdownFile_drawing_2eproto(drawing *this)
{
  uint64_t result;

  if (drawing::Drawing::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)drawing::Drawing::default_instance_ + 8))(drawing::Drawing::default_instance_);
  if (drawing::Command::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)drawing::Command::default_instance_ + 8))(drawing::Command::default_instance_);
  if (drawing::CommandID::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)drawing::CommandID::default_instance_ + 8))(drawing::CommandID::default_instance_);
  if (drawing::Point::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)drawing::Point::default_instance_ + 8))(drawing::Point::default_instance_);
  if (drawing::Parameters::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)drawing::Parameters::default_instance_ + 8))(drawing::Parameters::default_instance_);
  if (drawing::Color::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)drawing::Color::default_instance_ + 8))(drawing::Color::default_instance_);
  result = drawing::Rectangle::default_instance_;
  if (drawing::Rectangle::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)drawing::Rectangle::default_instance_ + 8))(drawing::Rectangle::default_instance_);
  return result;
}

void drawing::protobuf_AddDesc_drawing_2eproto_impl(drawing *this, uint64_t a2, uint64_t a3, const char *a4)
{
  topotext *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", a4);
  topotext::protobuf_AddDesc_topotext_2eproto(v4);
  v5 = operator new();
  *(_QWORD *)v5 = &off_1E76C8718;
  *(_QWORD *)(v5 + 80) = 0;
  *(_QWORD *)(v5 + 88) = 0;
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_DWORD *)(v5 + 72) = 0;
  drawing::Drawing::default_instance_ = v5;
  v6 = operator new();
  *(_QWORD *)v6 = &off_1E76C8790;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_OWORD *)(v6 + 116) = 0u;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 68) = 0u;
  drawing::Command::default_instance_ = v6;
  v7 = operator new();
  *(_QWORD *)v7 = &off_1E76C8808;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 36) = 0u;
  drawing::CommandID::default_instance_ = v7;
  v8 = operator new();
  *(_QWORD *)v8 = &off_1E76C8880;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 52) = 0u;
  drawing::Point::default_instance_ = v8;
  v9 = operator new();
  *(_QWORD *)v9 = &off_1E76C88F8;
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 36) = 0u;
  drawing::Parameters::default_instance_ = v9;
  v10 = operator new();
  *(_QWORD *)v10 = &off_1E76C8970;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  drawing::Color::default_instance_ = v10;
  v11 = operator new();
  *(_QWORD *)v11 = &off_1E76C89E8;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  drawing::Rectangle::default_instance_ = v11;
  v12 = drawing::Drawing::default_instance_;
  *(_QWORD *)(drawing::Drawing::default_instance_ + 40) = topotext::VectorTimestamp::default_instance_;
  *(_QWORD *)(v12 + 88) = v11;
  v13 = (_QWORD *)drawing::Command::default_instance_;
  v14 = drawing::CommandID::default_instance_;
  v15 = drawing::Color::default_instance_;
  *(_QWORD *)(drawing::Command::default_instance_ + 40) = drawing::CommandID::default_instance_;
  v13[6] = v15;
  v16 = drawing::Point::default_instance_;
  v13[7] = drawing::Point::default_instance_;
  v13[11] = v14;
  v13[12] = v11;
  v13[13] = v16;
  v13[14] = v16;
  v13[15] = drawing::Parameters::default_instance_;
  google::protobuf::internal::OnShutdown((google::protobuf::internal *)drawing::protobuf_ShutdownFile_drawing_2eproto, v17);
}

double drawing::Drawing::Drawing(drawing::Drawing *this)
{
  double result;

  *(_QWORD *)this = &off_1E76C8718;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

double drawing::Command::Command(drawing::Command *this)
{
  double result;

  *(_QWORD *)this = &off_1E76C8790;
  result = 0.0;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  return result;
}

double drawing::CommandID::CommandID(drawing::CommandID *this)
{
  double result;

  *(_QWORD *)this = &off_1E76C8808;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double drawing::Point::Point(drawing::Point *this)
{
  double result;

  *(_QWORD *)this = &off_1E76C8880;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double drawing::Parameters::Parameters(drawing::Parameters *this)
{
  double result;

  *(_QWORD *)this = &off_1E76C88F8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double drawing::Color::Color(drawing::Color *this)
{
  double result;

  *(_QWORD *)this = &off_1E76C8970;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double drawing::Rectangle::Rectangle(drawing::Rectangle *this)
{
  double result;

  *(_QWORD *)this = &off_1E76C89E8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

void drawing::protobuf_AddDesc_drawing_2eproto(drawing *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = drawing::protobuf_AddDesc_drawing_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &off_1E76C9A40;
    v2[1] = drawing::protobuf_AddDesc_drawing_2eproto_impl;
    v3 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&drawing::protobuf_AddDesc_drawing_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1BD972C78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *drawing::Drawing::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  uint64_t v5;
  __int32 v6;
  __int32 v7;
  topotext::VectorTimestamp *v8;
  int32x2_t *v9;
  __int32 v10;
  int32x2_t v11;
  drawing::Rectangle *v12;
  const drawing::Rectangle *v13;
  const std::string::value_type *v14;
  int32x2_t *v15;
  int32x2_t v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  char v21;
  std::string v22[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 409);
    v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  v5 = (uint64_t)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>(this + 7, a2 + 7);
  LOBYTE(v6) = a2[4].i8[0];
  if ((_BYTE)v6)
  {
    if ((a2[4].i8[0] & 1) != 0)
    {
      v7 = a2[6].i32[0];
      this[4].i32[0] |= 1u;
      this[6].i32[0] = v7;
      v6 = a2[4].i32[0];
    }
    if ((v6 & 2) != 0)
    {
      this[4].i32[0] |= 2u;
      v8 = (topotext::VectorTimestamp *)this[5];
      if (!v8)
      {
        v8 = (topotext::VectorTimestamp *)operator new();
        topotext::VectorTimestamp::VectorTimestamp(v8);
        this[5] = (int32x2_t)v8;
      }
      v9 = (int32x2_t *)a2[5];
      if (!v9)
      {
        drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
        v9 = *(int32x2_t **)(drawing::Drawing::default_instance_ + 40);
      }
      v5 = (uint64_t)topotext::VectorTimestamp::MergeFrom((int32x2_t *)v8, v9);
      v6 = a2[4].i32[0];
    }
    if ((v6 & 8) != 0)
    {
      v10 = a2[6].i32[1];
      this[4].i32[0] |= 8u;
      this[6].i32[1] = v10;
      v6 = a2[4].i32[0];
      if ((v6 & 0x10) == 0)
      {
LABEL_14:
        if ((v6 & 0x20) == 0)
          goto LABEL_23;
        goto LABEL_18;
      }
    }
    else if ((v6 & 0x10) == 0)
    {
      goto LABEL_14;
    }
    v11 = a2[10];
    this[4].i32[0] |= 0x10u;
    this[10] = v11;
    if ((a2[4].i32[0] & 0x20) == 0)
      goto LABEL_23;
LABEL_18:
    this[4].i32[0] |= 0x20u;
    v12 = (drawing::Rectangle *)this[11];
    if (!v12)
    {
      v5 = operator new();
      v12 = (drawing::Rectangle *)v5;
      *(_QWORD *)v5 = &off_1E76C89E8;
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      this[11] = (int32x2_t)v5;
    }
    v13 = (const drawing::Rectangle *)a2[11];
    if (!v13)
    {
      drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
      v13 = *(const drawing::Rectangle **)(drawing::Drawing::default_instance_ + 88);
    }
    drawing::Rectangle::MergeFrom(v12, v13);
  }
LABEL_23:
  v16 = a2[1];
  v15 = a2 + 1;
  v14 = (const std::string::value_type *)v16;
  v17 = v15[2].i8[7];
  if (v17 >= 0)
    v18 = (const std::string::value_type *)v15;
  else
    v18 = v14;
  if (v17 >= 0)
    v19 = v15[2].u8[7];
  else
    v19 = (std::string::size_type)v15[1];
  return std::string::append((std::string *)&this[1], v18, v19);
}

void sub_1BD972E6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C4020A6E6BFLL);
  _Unwind_Resume(a1);
}

void drawing::Drawing::~Drawing(drawing::Drawing *this)
{
  *(_QWORD *)this = &off_1E76C8718;
  drawing::Drawing::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 7);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  drawing::Drawing::~Drawing(this);
  JUMPOUT(0x1C3B7A848);
}

void drawing::Drawing::SharedDtor(drawing::Drawing *this)
{
  uint64_t v2;
  uint64_t v3;

  drawing::protobuf_AddDesc_drawing_2eproto(this);
  if ((drawing::Drawing *)drawing::Drawing::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 11);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t drawing::Drawing::default_instance(drawing::Drawing *this)
{
  drawing::protobuf_AddDesc_drawing_2eproto(this);
  return drawing::Drawing::default_instance_;
}

double drawing::Drawing::New(drawing::Drawing *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76C8718;
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t drawing::Drawing::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_DWORD *)(this + 32);
  if ((v2 & 0x3B) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
      {
        this = topotext::VectorTimestamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 32);
      }
    }
    *(_QWORD *)(v1 + 80) = 0;
    if ((v2 & 0x20) != 0)
    {
      v3 = *(_QWORD *)(v1 + 88);
      if (v3)
      {
        *(_QWORD *)(v3 + 40) = 0;
        *(_QWORD *)(v3 + 48) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
  }
  if (*(int *)(v1 + 64) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 64));
  }
  *(_DWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t drawing::Rectangle::Clear(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Drawing::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  BOOL v12;
  int v13;
  unint64_t v14;
  char *v15;
  int v16;
  topotext::VectorTimestamp *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  int v26;
  uint64_t v27;
  int32x2_t v28;
  uint64_t v29;
  int32x2_t v30;
  int32x2_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  _BYTE v50[32];
  _QWORD v51[2];
  unsigned int v52[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v51, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v50, (google::protobuf::io::ZeroCopyOutputStream *)v51);
LABEL_2:
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_11:
      if ((_DWORD)v7)
        v12 = (v7 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
LABEL_96:
        v48 = 1;
        goto LABEL_97;
      }
LABEL_28:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v50, v4))goto LABEL_95;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 8)
          goto LABEL_26;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)&this[6]))
            goto LABEL_95;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          this[6].i32[0] = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        v13 = this[4].i32[0] | 1;
        this[4].i32[0] = v13;
        if ((unint64_t)v11 >= v9 || *v11 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_36:
        this[4].i32[0] = v13 | 2;
        v17 = (topotext::VectorTimestamp *)this[5];
        if (!v17)
        {
          v17 = (topotext::VectorTimestamp *)operator new();
          topotext::VectorTimestamp::VectorTimestamp(v17);
          this[5] = (int32x2_t)v17;
        }
        v52[0] = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))
            goto LABEL_95;
        }
        else
        {
          v52[0] = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          goto LABEL_95;
        v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v52[0]);
        if (!topotext::VectorTimestamp::MergePartialFromCodedStream((int32x2_t *)v17, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_95;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 26)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_50:
          v26 = this[8].i32[1];
          v27 = this[8].i32[0];
          if ((int)v27 >= v26)
          {
            if (v26 == this[9].i32[0])
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[7], v26 + 1);
            v29 = operator new();
            *(_QWORD *)v29 = &off_1E76C8790;
            *(_OWORD *)(v29 + 88) = 0u;
            *(_OWORD *)(v29 + 104) = 0u;
            *(_OWORD *)(v29 + 116) = 0u;
            *(_OWORD *)(v29 + 8) = 0u;
            *(_OWORD *)(v29 + 24) = 0u;
            *(_OWORD *)(v29 + 40) = 0u;
            *(_OWORD *)(v29 + 56) = 0u;
            *(_OWORD *)(v29 + 68) = 0u;
            v30 = this[7];
            v31 = this[8];
            this[8] = vadd_s32(v31, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v30 + 8 * v31.i32[0]) = v29;
          }
          else
          {
            v28 = this[7];
            this[8].i32[0] = v27 + 1;
            v29 = *(_QWORD *)(*(_QWORD *)&v28 + 8 * v27);
          }
          v52[0] = 0;
          v32 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))
              goto LABEL_95;
          }
          else
          {
            v52[0] = *v32;
            *((_QWORD *)a2 + 1) = v32 + 1;
          }
          v33 = *((_DWORD *)a2 + 14);
          v34 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v33 + 1;
          if (v33 >= v34)
            goto LABEL_95;
          v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v52[0]);
          if (!drawing::Command::MergePartialFromCodedStream((int32x2_t *)v29, a2)
            || !*((_BYTE *)a2 + 36))
          {
            goto LABEL_95;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v35);
          v36 = *((_DWORD *)a2 + 14);
          v23 = __OFSUB__(v36, 1);
          v37 = v36 - 1;
          if (v37 < 0 == v23)
            *((_DWORD *)a2 + 14) = v37;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v25 >= v14)
            goto LABEL_2;
          v38 = *v25;
        }
        while (v38 == 26);
        if (v38 != 32)
          continue;
        v15 = v25 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_68:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)&this[6] + 1))goto LABEL_95;
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          this[6].i32[1] = *v15;
          v39 = v15 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        this[4].i32[0] |= 8u;
        if ((unint64_t)v39 >= v14 || *v39 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_76:
        *(_QWORD *)v52 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v52))
          goto LABEL_95;
        this[10] = *(int32x2_t *)v52;
        v16 = this[4].i32[0] | 0x10;
        this[4].i32[0] = v16;
        v40 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v40 + 1;
        goto LABEL_80;
      case 2u:
        if ((_DWORD)v7 != 18)
          goto LABEL_26;
        v13 = this[4].i32[0];
        goto LABEL_36;
      case 3u:
        if ((_DWORD)v7 == 26)
          goto LABEL_50;
        goto LABEL_26;
      case 4u:
        if ((_DWORD)v7 != 32)
          goto LABEL_26;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_68;
      case 5u:
        if ((_DWORD)v7 == 41)
          goto LABEL_76;
        goto LABEL_26;
      case 6u:
        if ((_DWORD)v7 != 50)
        {
LABEL_26:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
            goto LABEL_96;
          goto LABEL_28;
        }
        v16 = this[4].i32[0];
LABEL_80:
        this[4].i32[0] = v16 | 0x20;
        v41 = (uint64_t)this[11];
        if (!v41)
        {
          v41 = operator new();
          *(_QWORD *)v41 = &off_1E76C89E8;
          *(_OWORD *)(v41 + 8) = 0u;
          *(_OWORD *)(v41 + 24) = 0u;
          *(_OWORD *)(v41 + 40) = 0u;
          this[11] = (int32x2_t)v41;
        }
        v52[0] = 0;
        v42 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))
            goto LABEL_95;
        }
        else
        {
          v52[0] = *v42;
          *((_QWORD *)a2 + 1) = v42 + 1;
        }
        v43 = *((_DWORD *)a2 + 14);
        v44 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v43 + 1;
        if (v43 >= v44
          || (v45 = google::protobuf::io::CodedInputStream::PushLimit(a2, v52[0]),
              !drawing::Rectangle::MergePartialFromCodedStream((drawing::Rectangle *)v41, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_95:
          v48 = 0;
          goto LABEL_97;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v45);
        v46 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v46, 1);
        v47 = v46 - 1;
        if (v47 < 0 == v23)
          *((_DWORD *)a2 + 14) = v47;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v48 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_97:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v50);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v51);
        return v48;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1BD9736F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x1093C4020A6E6BFLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t drawing::Drawing::SerializeWithCachedSizes(drawing::Drawing *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  drawing::Drawing *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v5 = this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 12), a2, a4);
    v6 = *((_DWORD *)v5 + 8);
  }
  if ((v6 & 2) != 0)
  {
    v7 = *((_QWORD *)v5 + 5);
    if (!v7)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      v7 = *(_QWORD *)(drawing::Drawing::default_instance_ + 40);
    }
    this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  }
  if (*((int *)v5 + 16) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>((uint64_t)v5 + 56, v8);
      this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v9, a2);
      ++v8;
    }
    while (v8 < *((_DWORD *)v5 + 16));
  }
  v10 = *((_DWORD *)v5 + 8);
  if ((v10 & 8) != 0)
  {
    this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)4, *((_DWORD *)v5 + 13), a2, a4);
    v10 = *((_DWORD *)v5 + 8);
    if ((v10 & 0x10) == 0)
    {
LABEL_12:
      if ((v10 & 0x20) == 0)
        goto LABEL_19;
      goto LABEL_16;
    }
  }
  else if ((v10 & 0x10) == 0)
  {
    goto LABEL_12;
  }
  this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)5, a2, *((double *)v5 + 10), a3);
  if ((*((_DWORD *)v5 + 8) & 0x20) == 0)
    goto LABEL_19;
LABEL_16:
  v11 = *((_QWORD *)v5 + 11);
  if (!v11)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    v11 = *(_QWORD *)(drawing::Drawing::default_instance_ + 88);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(6, v11, a2);
LABEL_19:
  if (*((char *)v5 + 31) < 0)
  {
    v12 = (char *)*((_QWORD *)v5 + 1);
    v13 = *((_QWORD *)v5 + 2);
  }
  else
  {
    v12 = (char *)v5 + 8;
    LODWORD(v13) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
}

uint64_t drawing::Drawing::ByteSize(drawing::Drawing *this)
{
  int v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  topotext::VectorTimestamp *v5;
  google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  google::protobuf::io::CodedOutputStream *v9;
  int v10;
  drawing::Rectangle *v11;
  google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  drawing::Command *v18;
  google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_30;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_16;
LABEL_10:
    v5 = (topotext::VectorTimestamp *)*((_QWORD *)this + 5);
    if (!v5)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(0);
      v5 = *(topotext::VectorTimestamp **)(drawing::Drawing::default_instance_ + 40);
    }
    v6 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 += v7 + v8 + 1;
    v2 = *((_DWORD *)this + 8);
    goto LABEL_16;
  }
  v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v4 < 0x80)
  {
    v3 = 2;
    if ((v2 & 2) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0)
    goto LABEL_10;
LABEL_16:
  if ((v2 & 8) != 0)
  {
    v9 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if (v9 >= 0x80)
    {
      v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v10 = 2;
    }
    v3 += v10;
  }
  if ((v2 & 0x10) != 0)
    v3 += 9;
  if ((v2 & 0x20) != 0)
  {
    v11 = (drawing::Rectangle *)*((_QWORD *)this + 11);
    if (!v11)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(0);
      v11 = *(drawing::Rectangle **)(drawing::Drawing::default_instance_ + 88);
    }
    v12 = (google::protobuf::io::CodedOutputStream *)drawing::Rectangle::ByteSize(v11);
    v13 = (int)v12;
    if (v12 >= 0x80)
      v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    else
      v14 = 1;
    v3 += v13 + v14 + 1;
  }
LABEL_30:
  v15 = *((_DWORD *)this + 16);
  v16 = v15 + v3;
  if (v15 >= 1)
  {
    v17 = 0;
    do
    {
      v18 = (drawing::Command *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>((uint64_t)this + 56, v17);
      v19 = (google::protobuf::io::CodedOutputStream *)drawing::Command::ByteSize(v18);
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v16 += v20 + v21;
      ++v17;
    }
    while (v17 < *((_DWORD *)this + 16));
  }
  if (*((char *)this + 31) < 0)
    v22 = *((_QWORD *)this + 2);
  else
    LODWORD(v22) = *((unsigned __int8 *)this + 31);
  result = (v16 + v22);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *drawing::Drawing::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return drawing::Drawing::MergeFrom(this, lpsrc);
}

std::string *drawing::Rectangle::MergeFrom(drawing::Rectangle *this, const drawing::Rectangle *a2)
{
  std::string *v4;
  int v5;
  int v6;
  const std::string::value_type *v7;
  char *v8;
  const std::string::value_type *v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v14;
  int v15;
  int v16;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 2501);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v5)
    goto LABEL_9;
  if ((*((_BYTE *)a2 + 32) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 32) & 2) == 0)
      goto LABEL_6;
LABEL_17:
    v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 8) |= 1u;
  *((_DWORD *)this + 10) = v14;
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0)
    goto LABEL_17;
LABEL_6:
  if ((v5 & 4) == 0)
    goto LABEL_7;
LABEL_18:
  v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 13) = v6;
  }
LABEL_9:
  v9 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v8 = (char *)a2 + 8;
  v7 = v9;
  v10 = v8[23];
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = v8[23];
  else
    v12 = *((_QWORD *)v8 + 1);
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1BD973B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Drawing::IsInitialized(drawing::Drawing *this)
{
  return 1;
}

_QWORD *drawing::Drawing::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Drawing");
}

std::string *drawing::Command::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  uint64_t v5;
  __int32 v6;
  drawing::CommandID *v7;
  const drawing::CommandID *v8;
  __int32 v9;
  drawing::Color *v10;
  const drawing::Color *v11;
  drawing::Point *v12;
  const drawing::Point *v13;
  drawing::CommandID *v14;
  const drawing::CommandID *v15;
  drawing::Rectangle *v16;
  const drawing::Rectangle *v17;
  drawing::Point *v18;
  const drawing::Point *v19;
  drawing::Point *v20;
  const drawing::Point *v21;
  drawing::Parameters *v22;
  const drawing::Parameters *v23;
  const std::string::value_type *v24;
  int32x2_t *v25;
  int32x2_t v26;
  int v27;
  const std::string::value_type *v28;
  std::string::size_type v29;
  char v31;
  std::string v32[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 958);
    v4 = google::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v31, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
  }
  v5 = (uint64_t)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>(this + 8, a2 + 8);
  v6 = a2[4].i32[0];
  if (!(_BYTE)v6)
    goto LABEL_43;
  if ((v6 & 1) != 0)
  {
    this[4].i32[0] |= 1u;
    v7 = (drawing::CommandID *)this[5];
    if (!v7)
    {
      v5 = operator new();
      v7 = (drawing::CommandID *)v5;
      *(_QWORD *)v5 = &off_1E76C8808;
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 36) = 0u;
      this[5] = (int32x2_t)v5;
    }
    v8 = (const drawing::CommandID *)a2[5];
    if (!v8)
    {
      drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
      v8 = *(const drawing::CommandID **)(drawing::Command::default_instance_ + 40);
    }
    v5 = (uint64_t)drawing::CommandID::MergeFrom(v7, v8);
    v6 = a2[4].i32[0];
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = a2[16].i32[0];
  this[4].i32[0] |= 2u;
  this[16].i32[0] = v9;
  v6 = a2[4].i32[0];
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_18:
  this[4].i32[0] |= 4u;
  v10 = (drawing::Color *)this[6];
  if (!v10)
  {
    v5 = operator new();
    v10 = (drawing::Color *)v5;
    *(_QWORD *)v5 = &off_1E76C8970;
    *(_OWORD *)(v5 + 8) = 0u;
    *(_OWORD *)(v5 + 24) = 0u;
    *(_OWORD *)(v5 + 40) = 0u;
    this[6] = (int32x2_t)v5;
  }
  v11 = (const drawing::Color *)a2[6];
  if (!v11)
  {
    drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
    v11 = *(const drawing::Color **)(drawing::Command::default_instance_ + 48);
  }
  v5 = (uint64_t)drawing::Color::MergeFrom(v10, v11);
  v6 = a2[4].i32[0];
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0)
      goto LABEL_9;
LABEL_28:
    this[4].i32[0] |= 0x20u;
    v14 = (drawing::CommandID *)this[11];
    if (!v14)
    {
      v5 = operator new();
      v14 = (drawing::CommandID *)v5;
      *(_QWORD *)v5 = &off_1E76C8808;
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 36) = 0u;
      this[11] = (int32x2_t)v5;
    }
    v15 = (const drawing::CommandID *)a2[11];
    if (!v15)
    {
      drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
      v15 = *(const drawing::CommandID **)(drawing::Command::default_instance_ + 88);
    }
    v5 = (uint64_t)drawing::CommandID::MergeFrom(v14, v15);
    v6 = a2[4].i32[0];
    if ((v6 & 0x40) == 0)
    {
LABEL_10:
      if ((v6 & 0x80) == 0)
        goto LABEL_43;
      goto LABEL_38;
    }
    goto LABEL_33;
  }
LABEL_23:
  this[4].i32[0] |= 8u;
  v12 = (drawing::Point *)this[7];
  if (!v12)
  {
    v5 = operator new();
    v12 = (drawing::Point *)v5;
    *(_QWORD *)v5 = &off_1E76C8880;
    *(_OWORD *)(v5 + 8) = 0u;
    *(_OWORD *)(v5 + 24) = 0u;
    *(_OWORD *)(v5 + 40) = 0u;
    *(_OWORD *)(v5 + 52) = 0u;
    this[7] = (int32x2_t)v5;
  }
  v13 = (const drawing::Point *)a2[7];
  if (!v13)
  {
    drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
    v13 = *(const drawing::Point **)(drawing::Command::default_instance_ + 56);
  }
  v5 = (uint64_t)drawing::Point::MergeFrom(v12, v13);
  v6 = a2[4].i32[0];
  if ((v6 & 0x20) != 0)
    goto LABEL_28;
LABEL_9:
  if ((v6 & 0x40) == 0)
    goto LABEL_10;
LABEL_33:
  this[4].i32[0] |= 0x40u;
  v16 = (drawing::Rectangle *)this[12];
  if (!v16)
  {
    v5 = operator new();
    v16 = (drawing::Rectangle *)v5;
    *(_QWORD *)v5 = &off_1E76C89E8;
    *(_OWORD *)(v5 + 8) = 0u;
    *(_OWORD *)(v5 + 24) = 0u;
    *(_OWORD *)(v5 + 40) = 0u;
    this[12] = (int32x2_t)v5;
  }
  v17 = (const drawing::Rectangle *)a2[12];
  if (!v17)
  {
    drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
    v17 = *(const drawing::Rectangle **)(drawing::Command::default_instance_ + 96);
  }
  v5 = (uint64_t)drawing::Rectangle::MergeFrom(v16, v17);
  v6 = a2[4].i32[0];
  if ((v6 & 0x80) != 0)
  {
LABEL_38:
    this[4].i32[0] |= 0x80u;
    v18 = (drawing::Point *)this[13];
    if (!v18)
    {
      v5 = operator new();
      v18 = (drawing::Point *)v5;
      *(_QWORD *)v5 = &off_1E76C8880;
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      *(_OWORD *)(v5 + 52) = 0u;
      this[13] = (int32x2_t)v5;
    }
    v19 = (const drawing::Point *)a2[13];
    if (!v19)
    {
      drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
      v19 = *(const drawing::Point **)(drawing::Command::default_instance_ + 104);
    }
    v5 = (uint64_t)drawing::Point::MergeFrom(v18, v19);
    v6 = a2[4].i32[0];
  }
LABEL_43:
  if ((v6 & 0xFF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      this[4].i32[0] |= 0x100u;
      v20 = (drawing::Point *)this[14];
      if (!v20)
      {
        v5 = operator new();
        v20 = (drawing::Point *)v5;
        *(_QWORD *)v5 = &off_1E76C8880;
        *(_OWORD *)(v5 + 8) = 0u;
        *(_OWORD *)(v5 + 24) = 0u;
        *(_OWORD *)(v5 + 40) = 0u;
        *(_OWORD *)(v5 + 52) = 0u;
        this[14] = (int32x2_t)v5;
      }
      v21 = (const drawing::Point *)a2[14];
      if (!v21)
      {
        drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
        v21 = *(const drawing::Point **)(drawing::Command::default_instance_ + 112);
      }
      v5 = (uint64_t)drawing::Point::MergeFrom(v20, v21);
      v6 = a2[4].i32[0];
    }
    if ((v6 & 0x200) != 0)
    {
      this[4].i32[0] |= 0x200u;
      v22 = (drawing::Parameters *)this[15];
      if (!v22)
      {
        v5 = operator new();
        v22 = (drawing::Parameters *)v5;
        *(_QWORD *)v5 = &off_1E76C88F8;
        *(_OWORD *)(v5 + 8) = 0u;
        *(_OWORD *)(v5 + 24) = 0u;
        *(_OWORD *)(v5 + 36) = 0u;
        this[15] = (int32x2_t)v5;
      }
      v23 = (const drawing::Parameters *)a2[15];
      if (!v23)
      {
        drawing::protobuf_AddDesc_drawing_2eproto((drawing *)v5);
        v23 = *(const drawing::Parameters **)(drawing::Command::default_instance_ + 120);
      }
      drawing::Parameters::MergeFrom(v22, v23);
    }
  }
  v26 = a2[1];
  v25 = a2 + 1;
  v24 = (const std::string::value_type *)v26;
  v27 = v25[2].i8[7];
  if (v27 >= 0)
    v28 = (const std::string::value_type *)v25;
  else
    v28 = v24;
  if (v27 >= 0)
    v29 = v25[2].u8[7];
  else
    v29 = (std::string::size_type)v25[1];
  return std::string::append((std::string *)&this[1], v28, v29);
}

void sub_1BD974060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void drawing::Command::~Command(drawing::Command *this)
{
  *(_QWORD *)this = &off_1E76C8790;
  drawing::Command::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 8);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  drawing::Command::~Command(this);
  JUMPOUT(0x1C3B7A848);
}

void drawing::Command::SharedDtor(drawing::Command *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  drawing::protobuf_AddDesc_drawing_2eproto(this);
  if ((drawing::Command *)drawing::Command::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 7);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 11);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 12);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 13);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)this + 14);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)this + 15);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
}

uint64_t drawing::Command::default_instance(drawing::Command *this)
{
  drawing::protobuf_AddDesc_drawing_2eproto(this);
  return drawing::Command::default_instance_;
}

double drawing::Command::New(drawing::Command *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76C8790;
  result = 0.0;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 116) = 0u;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 68) = 0u;
  return result;
}

uint64_t drawing::Command::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = this;
  v2 = *(_DWORD *)(this + 32);
  if ((v2 & 0xEF) != 0)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 40);
      if (v3)
      {
        *(_DWORD *)(v3 + 48) = 0;
        *(_QWORD *)(v3 + 40) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
    *(_DWORD *)(this + 128) = 0;
    if ((*(_BYTE *)(this + 32) & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 48);
      if (v4)
      {
        *(_QWORD *)(v4 + 40) = 0;
        *(_QWORD *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(_BYTE **)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v4 + 8) = 0;
          *(_BYTE *)(v4 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 8) != 0)
    {
      v5 = *(_QWORD *)(this + 56);
      if (v5)
      {
        if ((*(_BYTE *)(v5 + 32) & 0x7F) != 0)
        {
          *(_QWORD *)(v5 + 40) = 0;
          *(_QWORD *)(v5 + 48) = 0;
          *(_DWORD *)(v5 + 64) = 0;
          *(_QWORD *)(v5 + 56) = 0;
        }
        *(_DWORD *)(v5 + 32) = 0;
        if (*(char *)(v5 + 31) < 0)
        {
          **(_BYTE **)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v5 + 8) = 0;
          *(_BYTE *)(v5 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 0x20) != 0)
    {
      v6 = *(_QWORD *)(this + 88);
      if (v6)
      {
        *(_DWORD *)(v6 + 48) = 0;
        *(_QWORD *)(v6 + 40) = 0;
        *(_DWORD *)(v6 + 32) = 0;
        if (*(char *)(v6 + 31) < 0)
        {
          **(_BYTE **)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v6 + 8) = 0;
          *(_BYTE *)(v6 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 0x40) != 0)
    {
      v7 = *(_QWORD *)(this + 96);
      if (v7)
      {
        *(_QWORD *)(v7 + 40) = 0;
        *(_QWORD *)(v7 + 48) = 0;
        *(_DWORD *)(v7 + 32) = 0;
        if (*(char *)(v7 + 31) < 0)
        {
          **(_BYTE **)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v7 + 8) = 0;
          *(_BYTE *)(v7 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 0x80) != 0)
    {
      v8 = *(_QWORD *)(this + 104);
      if (v8)
      {
        if ((*(_BYTE *)(v8 + 32) & 0x7F) != 0)
        {
          *(_QWORD *)(v8 + 40) = 0;
          *(_QWORD *)(v8 + 48) = 0;
          *(_DWORD *)(v8 + 64) = 0;
          *(_QWORD *)(v8 + 56) = 0;
        }
        *(_DWORD *)(v8 + 32) = 0;
        if (*(char *)(v8 + 31) < 0)
        {
          **(_BYTE **)(v8 + 8) = 0;
          *(_QWORD *)(v8 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v8 + 8) = 0;
          *(_BYTE *)(v8 + 31) = 0;
        }
      }
    }
  }
  v9 = *(_DWORD *)(this + 32);
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0)
    {
      v10 = *(_QWORD *)(this + 112);
      if (v10)
      {
        if ((*(_BYTE *)(v10 + 32) & 0x7F) != 0)
        {
          *(_QWORD *)(v10 + 40) = 0;
          *(_QWORD *)(v10 + 48) = 0;
          *(_DWORD *)(v10 + 64) = 0;
          *(_QWORD *)(v10 + 56) = 0;
        }
        *(_DWORD *)(v10 + 32) = 0;
        if (*(char *)(v10 + 31) < 0)
        {
          **(_BYTE **)(v10 + 8) = 0;
          *(_QWORD *)(v10 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v10 + 8) = 0;
          *(_BYTE *)(v10 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 33) & 2) != 0)
    {
      v11 = *(_QWORD *)(this + 120);
      if (v11)
      {
        *(_DWORD *)(v11 + 48) = 0;
        *(_QWORD *)(v11 + 40) = 0;
        *(_DWORD *)(v11 + 32) = 0;
        if (*(char *)(v11 + 31) < 0)
        {
          **(_BYTE **)(v11 + 8) = 0;
          *(_QWORD *)(v11 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v11 + 8) = 0;
          *(_BYTE *)(v11 + 31) = 0;
        }
      }
    }
  }
  if (*(int *)(this + 72) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 8 * v12);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 32))(v13);
      ++v12;
    }
    while (v12 < *(int *)(v1 + 72));
  }
  *(_DWORD *)(v1 + 72) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t drawing::CommandID::Clear(uint64_t this)
{
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Color::Clear(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Point::Clear(uint64_t this)
{
  if ((*(_BYTE *)(this + 32) & 0x7F) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 48) = 0;
    *(_DWORD *)(this + 64) = 0;
    *(_QWORD *)(this + 56) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Parameters::Clear(uint64_t this)
{
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Command::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  _BYTE *v38;
  int v39;
  uint64_t v40;
  int32x2_t v41;
  uint64_t v42;
  int32x2_t v43;
  int32x2_t v44;
  char *v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  _BYTE *v59;
  uint64_t v60;
  char *v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  _BYTE *v67;
  uint64_t v68;
  char *v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  _BYTE *v75;
  uint64_t v76;
  char *v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  _BYTE *v83;
  uint64_t v84;
  char *v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  uint64_t v91;
  _BYTE v93[32];
  _QWORD v94[2];
  unsigned int v95;

  google::protobuf::io::StringOutputStream::StringOutputStream(v94, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v93, (google::protobuf::io::ZeroCopyOutputStream *)v94);
LABEL_2:
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_12;
LABEL_6:
      if ((_DWORD)v7)
        v9 = (v7 & 7) == 4;
      else
        v9 = 1;
      if (v9)
      {
LABEL_175:
        v91 = 1;
        goto LABEL_176;
      }
LABEL_38:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v93, v4))goto LABEL_174;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_12:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 10)
          goto LABEL_36;
        this[4].i32[0] |= 1u;
        v10 = (uint64_t)this[5];
        if (!v10)
        {
          v10 = operator new();
          *(_QWORD *)v10 = &off_1E76C8808;
          *(_OWORD *)(v10 + 8) = 0u;
          *(_OWORD *)(v10 + 24) = 0u;
          *(_OWORD *)(v10 + 36) = 0u;
          this[5] = (int32x2_t)v10;
        }
        v95 = 0;
        v11 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
            goto LABEL_174;
        }
        else
        {
          v95 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        v15 = *((_DWORD *)a2 + 14);
        v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16)
          goto LABEL_174;
        v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95);
        if (!drawing::CommandID::MergePartialFromCodedStream((drawing::CommandID *)v10, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v17);
        v18 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v18, 1);
        v20 = v18 - 1;
        if (v20 < 0 == v19)
          *((_DWORD *)a2 + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v21 >= v12 || *v21 != 16)
          continue;
        v13 = v21 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_49:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)&this[16]))goto LABEL_174;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          this[16].i32[0] = *v13;
          v22 = v13 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        v14 = this[4].i32[0] | 2;
        this[4].i32[0] = v14;
        if ((unint64_t)v22 >= v12 || *v22 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_57:
        this[4].i32[0] = v14 | 4;
        v23 = (uint64_t)this[6];
        if (!v23)
        {
          v23 = operator new();
          *(_QWORD *)v23 = &off_1E76C8970;
          *(_OWORD *)(v23 + 8) = 0u;
          *(_OWORD *)(v23 + 24) = 0u;
          *(_OWORD *)(v23 + 40) = 0u;
          this[6] = (int32x2_t)v23;
        }
        v95 = 0;
        v24 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
            goto LABEL_174;
        }
        else
        {
          v95 = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)a2 + 14);
        v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26)
          goto LABEL_174;
        v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95);
        if (!drawing::Color::MergePartialFromCodedStream((drawing::Color *)v23, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v27);
        v28 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v28, 1);
        v29 = v28 - 1;
        if (v29 < 0 == v19)
          *((_DWORD *)a2 + 14) = v29;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_71:
        this[4].i32[0] |= 8u;
        v31 = (uint64_t)this[7];
        if (!v31)
        {
          v31 = operator new();
          *(_QWORD *)v31 = &off_1E76C8880;
          *(_OWORD *)(v31 + 8) = 0u;
          *(_OWORD *)(v31 + 24) = 0u;
          *(_OWORD *)(v31 + 40) = 0u;
          *(_OWORD *)(v31 + 52) = 0u;
          this[7] = (int32x2_t)v31;
        }
        v95 = 0;
        v32 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
            goto LABEL_174;
        }
        else
        {
          v95 = *v32;
          *((_QWORD *)a2 + 1) = v32 + 1;
        }
        v33 = *((_DWORD *)a2 + 14);
        v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34)
          goto LABEL_174;
        v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95);
        if (!drawing::Point::MergePartialFromCodedStream((drawing::Point *)v31, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v35);
        v36 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v36, 1);
        v37 = v36 - 1;
        if (v37 < 0 == v19)
          *((_DWORD *)a2 + 14) = v37;
        v38 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 != 42)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_85:
          v39 = this[9].i32[1];
          v40 = this[9].i32[0];
          if ((int)v40 >= v39)
          {
            if (v39 == this[10].i32[0])
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[8], v39 + 1);
            v42 = operator new();
            *(_QWORD *)v42 = &off_1E76C8880;
            *(_OWORD *)(v42 + 8) = 0u;
            *(_OWORD *)(v42 + 24) = 0u;
            *(_OWORD *)(v42 + 40) = 0u;
            *(_OWORD *)(v42 + 52) = 0u;
            v43 = this[8];
            v44 = this[9];
            this[9] = vadd_s32(v44, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v43 + 8 * v44.i32[0]) = v42;
          }
          else
          {
            v41 = this[8];
            this[9].i32[0] = v40 + 1;
            v42 = *(_QWORD *)(*(_QWORD *)&v41 + 8 * v40);
          }
          v95 = 0;
          v45 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
              goto LABEL_174;
          }
          else
          {
            v95 = *v45;
            *((_QWORD *)a2 + 1) = v45 + 1;
          }
          v46 = *((_DWORD *)a2 + 14);
          v47 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v46 + 1;
          if (v46 >= v47)
            goto LABEL_174;
          v48 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95);
          if (!drawing::Point::MergePartialFromCodedStream((drawing::Point *)v42, a2)
            || !*((_BYTE *)a2 + 36))
          {
            goto LABEL_174;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v48);
          v49 = *((_DWORD *)a2 + 14);
          v19 = __OFSUB__(v49, 1);
          v50 = v49 - 1;
          if (v50 < 0 == v19)
            *((_DWORD *)a2 + 14) = v50;
          v38 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v38 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v51 = *v38;
        }
        while (v51 == 42);
        if (v51 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_103:
        this[4].i32[0] |= 0x20u;
        v52 = (uint64_t)this[11];
        if (!v52)
        {
          v52 = operator new();
          *(_QWORD *)v52 = &off_1E76C8808;
          *(_OWORD *)(v52 + 8) = 0u;
          *(_OWORD *)(v52 + 24) = 0u;
          *(_OWORD *)(v52 + 36) = 0u;
          this[11] = (int32x2_t)v52;
        }
        v95 = 0;
        v53 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
            goto LABEL_174;
        }
        else
        {
          v95 = *v53;
          *((_QWORD *)a2 + 1) = v53 + 1;
        }
        v54 = *((_DWORD *)a2 + 14);
        v55 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v54 + 1;
        if (v54 >= v55)
          goto LABEL_174;
        v56 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95);
        if (!drawing::CommandID::MergePartialFromCodedStream((drawing::CommandID *)v52, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v56);
        v57 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v57, 1);
        v58 = v57 - 1;
        if (v58 < 0 == v19)
          *((_DWORD *)a2 + 14) = v58;
        v59 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v59 >= *((_QWORD *)a2 + 2) || *v59 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v59 + 1;
LABEL_117:
        this[4].i32[0] |= 0x40u;
        v60 = (uint64_t)this[12];
        if (!v60)
        {
          v60 = operator new();
          *(_QWORD *)v60 = &off_1E76C89E8;
          *(_OWORD *)(v60 + 8) = 0u;
          *(_OWORD *)(v60 + 24) = 0u;
          *(_OWORD *)(v60 + 40) = 0u;
          this[12] = (int32x2_t)v60;
        }
        v95 = 0;
        v61 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v61 >= *((_QWORD *)a2 + 2) || *v61 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
            goto LABEL_174;
        }
        else
        {
          v95 = *v61;
          *((_QWORD *)a2 + 1) = v61 + 1;
        }
        v62 = *((_DWORD *)a2 + 14);
        v63 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v62 + 1;
        if (v62 >= v63)
          goto LABEL_174;
        v64 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95);
        if (!drawing::Rectangle::MergePartialFromCodedStream((drawing::Rectangle *)v60, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v64);
        v65 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v65, 1);
        v66 = v65 - 1;
        if (v66 < 0 == v19)
          *((_DWORD *)a2 + 14) = v66;
        v67 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v67 + 1;
LABEL_131:
        this[4].i32[0] |= 0x80u;
        v68 = (uint64_t)this[13];
        if (!v68)
        {
          v68 = operator new();
          *(_QWORD *)v68 = &off_1E76C8880;
          *(_OWORD *)(v68 + 8) = 0u;
          *(_OWORD *)(v68 + 24) = 0u;
          *(_OWORD *)(v68 + 40) = 0u;
          *(_OWORD *)(v68 + 52) = 0u;
          this[13] = (int32x2_t)v68;
        }
        v95 = 0;
        v69 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v69 >= *((_QWORD *)a2 + 2) || *v69 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
            goto LABEL_174;
        }
        else
        {
          v95 = *v69;
          *((_QWORD *)a2 + 1) = v69 + 1;
        }
        v70 = *((_DWORD *)a2 + 14);
        v71 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v70 + 1;
        if (v70 >= v71)
          goto LABEL_174;
        v72 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95);
        if (!drawing::Point::MergePartialFromCodedStream((drawing::Point *)v68, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v72);
        v73 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v73, 1);
        v74 = v73 - 1;
        if (v74 < 0 == v19)
          *((_DWORD *)a2 + 14) = v74;
        v75 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v75 >= *((_QWORD *)a2 + 2) || *v75 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v75 + 1;
LABEL_145:
        this[4].i32[0] |= 0x100u;
        v76 = (uint64_t)this[14];
        if (!v76)
        {
          v76 = operator new();
          *(_QWORD *)v76 = &off_1E76C8880;
          *(_OWORD *)(v76 + 8) = 0u;
          *(_OWORD *)(v76 + 24) = 0u;
          *(_OWORD *)(v76 + 40) = 0u;
          *(_OWORD *)(v76 + 52) = 0u;
          this[14] = (int32x2_t)v76;
        }
        v95 = 0;
        v77 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v77 >= *((_QWORD *)a2 + 2) || *v77 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
            goto LABEL_174;
        }
        else
        {
          v95 = *v77;
          *((_QWORD *)a2 + 1) = v77 + 1;
        }
        v78 = *((_DWORD *)a2 + 14);
        v79 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v78 + 1;
        if (v78 >= v79)
          goto LABEL_174;
        v80 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95);
        if (!drawing::Point::MergePartialFromCodedStream((drawing::Point *)v76, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v80);
        v81 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v81, 1);
        v82 = v81 - 1;
        if (v82 < 0 == v19)
          *((_DWORD *)a2 + 14) = v82;
        v83 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v83 >= *((_QWORD *)a2 + 2) || *v83 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v83 + 1;
LABEL_159:
        this[4].i32[0] |= 0x200u;
        v84 = (uint64_t)this[15];
        if (!v84)
        {
          v84 = operator new();
          *(_QWORD *)v84 = &off_1E76C88F8;
          *(_OWORD *)(v84 + 8) = 0u;
          *(_OWORD *)(v84 + 24) = 0u;
          *(_OWORD *)(v84 + 36) = 0u;
          this[15] = (int32x2_t)v84;
        }
        v95 = 0;
        v85 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v85 >= *((_QWORD *)a2 + 2) || *v85 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v95))
            goto LABEL_174;
        }
        else
        {
          v95 = *v85;
          *((_QWORD *)a2 + 1) = v85 + 1;
        }
        v86 = *((_DWORD *)a2 + 14);
        v87 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v86 + 1;
        if (v86 >= v87
          || (v88 = google::protobuf::io::CodedInputStream::PushLimit(a2, v95),
              !drawing::Parameters::MergePartialFromCodedStream((drawing::Parameters *)v84, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_174:
          v91 = 0;
          goto LABEL_176;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v88);
        v89 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v89, 1);
        v90 = v89 - 1;
        if (v90 < 0 == v19)
          *((_DWORD *)a2 + 14) = v90;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v91 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_176:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v93);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v94);
        return v91;
      case 2u:
        if ((_DWORD)v7 != 16)
          goto LABEL_36;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_49;
      case 3u:
        if ((_DWORD)v7 != 26)
          goto LABEL_36;
        v14 = this[4].i32[0];
        goto LABEL_57;
      case 4u:
        if ((_DWORD)v7 == 34)
          goto LABEL_71;
        goto LABEL_36;
      case 5u:
        if ((_DWORD)v7 == 42)
          goto LABEL_85;
        goto LABEL_36;
      case 6u:
        if ((_DWORD)v7 == 50)
          goto LABEL_103;
        goto LABEL_36;
      case 7u:
        if ((_DWORD)v7 == 58)
          goto LABEL_117;
        goto LABEL_36;
      case 8u:
        if ((_DWORD)v7 == 66)
          goto LABEL_131;
        goto LABEL_36;
      case 9u:
        if ((_DWORD)v7 == 74)
          goto LABEL_145;
        goto LABEL_36;
      case 0xAu:
        if ((_DWORD)v7 == 82)
          goto LABEL_159;
LABEL_36:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_38;
        goto LABEL_175;
      default:
        goto LABEL_6;
    }
  }
}

void sub_1BD97512C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Command::SerializeWithCachedSizes(drawing::Command *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  drawing::Command *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  v5 = this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    v7 = *((_QWORD *)this + 5);
    if (!v7)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      v7 = *(_QWORD *)(drawing::Command::default_instance_ + 40);
    }
    this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v7, a2);
    v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 32), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_16;
    goto LABEL_13;
  }
LABEL_10:
  v8 = *((_QWORD *)v5 + 6);
  if (!v8)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    v8 = *(_QWORD *)(drawing::Command::default_instance_ + 48);
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
  if ((*((_DWORD *)v5 + 8) & 8) != 0)
  {
LABEL_13:
    v9 = *((_QWORD *)v5 + 7);
    if (!v9)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      v9 = *(_QWORD *)(drawing::Command::default_instance_ + 56);
    }
    this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(4, v9, a2);
  }
LABEL_16:
  if (*((int *)v5 + 18) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>((uint64_t)v5 + 64, v10);
      this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(5, v11, a2);
      ++v10;
    }
    while (v10 < *((_DWORD *)v5 + 18));
  }
  v12 = *((_DWORD *)v5 + 8);
  if ((v12 & 0x20) != 0)
  {
    v13 = *((_QWORD *)v5 + 11);
    if (!v13)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      v13 = *(_QWORD *)(drawing::Command::default_instance_ + 88);
    }
    this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(6, v13, a2);
    v12 = *((_DWORD *)v5 + 8);
    if ((v12 & 0x40) == 0)
    {
LABEL_21:
      if ((v12 & 0x80) == 0)
        goto LABEL_22;
      goto LABEL_31;
    }
  }
  else if ((v12 & 0x40) == 0)
  {
    goto LABEL_21;
  }
  v14 = *((_QWORD *)v5 + 12);
  if (!v14)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    v14 = *(_QWORD *)(drawing::Command::default_instance_ + 96);
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(7, v14, a2);
  v12 = *((_DWORD *)v5 + 8);
  if ((v12 & 0x80) == 0)
  {
LABEL_22:
    if ((v12 & 0x100) == 0)
      goto LABEL_23;
    goto LABEL_34;
  }
LABEL_31:
  v15 = *((_QWORD *)v5 + 13);
  if (!v15)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    v15 = *(_QWORD *)(drawing::Command::default_instance_ + 104);
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(8, v15, a2);
  v12 = *((_DWORD *)v5 + 8);
  if ((v12 & 0x100) == 0)
  {
LABEL_23:
    if ((v12 & 0x200) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
LABEL_34:
  v16 = *((_QWORD *)v5 + 14);
  if (!v16)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    v16 = *(_QWORD *)(drawing::Command::default_instance_ + 112);
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(9, v16, a2);
  if ((*((_DWORD *)v5 + 8) & 0x200) != 0)
  {
LABEL_37:
    v17 = *((_QWORD *)v5 + 15);
    if (!v17)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      v17 = *(_QWORD *)(drawing::Command::default_instance_ + 120);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(10, v17, a2);
  }
LABEL_40:
  if (*((char *)v5 + 31) < 0)
  {
    v18 = (char *)*((_QWORD *)v5 + 1);
    v19 = *((_QWORD *)v5 + 2);
  }
  else
  {
    v18 = (char *)v5 + 8;
    LODWORD(v19) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v18, v19);
}

uint64_t drawing::Command::ByteSize(drawing::Command *this)
{
  int v2;
  int v3;
  drawing::CommandID *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  drawing::Color *v10;
  google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  drawing::Point *v14;
  google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  drawing::CommandID *v18;
  google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  drawing::Rectangle *v22;
  google::protobuf::io::CodedOutputStream *v23;
  int v24;
  int v25;
  drawing::Point *v26;
  google::protobuf::io::CodedOutputStream *v27;
  int v28;
  int v29;
  drawing::Point *v30;
  google::protobuf::io::CodedOutputStream *v31;
  int v32;
  int v33;
  drawing::Parameters *v34;
  google::protobuf::io::CodedOutputStream *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  drawing::Point *v41;
  google::protobuf::io::CodedOutputStream *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t result;

  v2 = *((_DWORD *)this + 8);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_52;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v4 = (drawing::CommandID *)*((_QWORD *)this + 5);
  if (!v4)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(0);
    v4 = *(drawing::CommandID **)(drawing::Command::default_instance_ + 40);
  }
  v5 = (google::protobuf::io::CodedOutputStream *)drawing::CommandID::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = v6 + v7 + 1;
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v8 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
    if (v8 >= 0x80)
    {
      v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v9 = 1;
    }
    v3 += v9 + 1;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (drawing::Color *)*((_QWORD *)this + 6);
    if (!v10)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(0);
      v10 = *(drawing::Color **)(drawing::Command::default_instance_ + 48);
    }
    v11 = (google::protobuf::io::CodedOutputStream *)drawing::Color::ByteSize(v10);
    v12 = (int)v11;
    if (v11 >= 0x80)
      v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    else
      v13 = 1;
    v3 += v12 + v13 + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x20) == 0)
        goto LABEL_19;
      goto LABEL_34;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v14 = (drawing::Point *)*((_QWORD *)this + 7);
  if (!v14)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(0);
    v14 = *(drawing::Point **)(drawing::Command::default_instance_ + 56);
  }
  v15 = (google::protobuf::io::CodedOutputStream *)drawing::Point::ByteSize(v14);
  v16 = (int)v15;
  if (v15 >= 0x80)
    v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  else
    v17 = 1;
  v3 += v16 + v17 + 1;
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x20) == 0)
  {
LABEL_19:
    if ((v2 & 0x40) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_34:
  v18 = (drawing::CommandID *)*((_QWORD *)this + 11);
  if (!v18)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(0);
    v18 = *(drawing::CommandID **)(drawing::Command::default_instance_ + 88);
  }
  v19 = (google::protobuf::io::CodedOutputStream *)drawing::CommandID::ByteSize(v18);
  v20 = (int)v19;
  if (v19 >= 0x80)
    v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
  else
    v21 = 1;
  v3 += v20 + v21 + 1;
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x40) == 0)
  {
LABEL_20:
    if ((v2 & 0x80) == 0)
      goto LABEL_52;
    goto LABEL_46;
  }
LABEL_40:
  v22 = (drawing::Rectangle *)*((_QWORD *)this + 12);
  if (!v22)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(0);
    v22 = *(drawing::Rectangle **)(drawing::Command::default_instance_ + 96);
  }
  v23 = (google::protobuf::io::CodedOutputStream *)drawing::Rectangle::ByteSize(v22);
  v24 = (int)v23;
  if (v23 >= 0x80)
    v25 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
  else
    v25 = 1;
  v3 += v24 + v25 + 1;
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x80) != 0)
  {
LABEL_46:
    v26 = (drawing::Point *)*((_QWORD *)this + 13);
    if (!v26)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(0);
      v26 = *(drawing::Point **)(drawing::Command::default_instance_ + 104);
    }
    v27 = (google::protobuf::io::CodedOutputStream *)drawing::Point::ByteSize(v26);
    v28 = (int)v27;
    if (v27 >= 0x80)
      v29 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    else
      v29 = 1;
    v3 += v28 + v29 + 1;
    v2 = *((_DWORD *)this + 8);
  }
LABEL_52:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v30 = (drawing::Point *)*((_QWORD *)this + 14);
      if (!v30)
      {
        drawing::protobuf_AddDesc_drawing_2eproto(0);
        v30 = *(drawing::Point **)(drawing::Command::default_instance_ + 112);
      }
      v31 = (google::protobuf::io::CodedOutputStream *)drawing::Point::ByteSize(v30);
      v32 = (int)v31;
      if (v31 >= 0x80)
        v33 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      else
        v33 = 1;
      v3 += v32 + v33 + 1;
      v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 0x200) != 0)
    {
      v34 = (drawing::Parameters *)*((_QWORD *)this + 15);
      if (!v34)
      {
        drawing::protobuf_AddDesc_drawing_2eproto(0);
        v34 = *(drawing::Parameters **)(drawing::Command::default_instance_ + 120);
      }
      v35 = (google::protobuf::io::CodedOutputStream *)drawing::Parameters::ByteSize(v34);
      v36 = (int)v35;
      if (v35 >= 0x80)
        v37 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
      else
        v37 = 1;
      v3 += v36 + v37 + 1;
    }
  }
  v38 = *((_DWORD *)this + 18);
  v39 = v38 + v3;
  if (v38 >= 1)
  {
    v40 = 0;
    do
    {
      v41 = (drawing::Point *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>((uint64_t)this + 64, v40);
      v42 = (google::protobuf::io::CodedOutputStream *)drawing::Point::ByteSize(v41);
      v43 = (int)v42;
      if (v42 >= 0x80)
        v44 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
      else
        v44 = 1;
      v39 += v43 + v44;
      ++v40;
    }
    while (v40 < *((_DWORD *)this + 18));
  }
  if (*((char *)this + 31) < 0)
    v45 = *((_QWORD *)this + 2);
  else
    LODWORD(v45) = *((unsigned __int8 *)this + 31);
  result = (v39 + v45);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *drawing::Command::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return drawing::Command::MergeFrom(this, lpsrc);
}

std::string *drawing::CommandID::MergeFrom(drawing::CommandID *this, const drawing::CommandID *a2)
{
  std::string *v4;
  int v5;
  int v6;
  const std::string::value_type *v7;
  char *v8;
  const std::string::value_type *v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v14;
  int v15;
  char v16;
  std::string v17[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 1257);
    v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v14 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v14;
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_8;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 12) = v6;
    }
  }
LABEL_8:
  v9 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v8 = (char *)a2 + 8;
  v7 = v9;
  v10 = v8[23];
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = v8[23];
  else
    v12 = *((_QWORD *)v8 + 1);
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1BD975814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *drawing::Color::MergeFrom(drawing::Color *this, const drawing::Color *a2)
{
  std::string *v4;
  int v5;
  int v6;
  const std::string::value_type *v7;
  char *v8;
  const std::string::value_type *v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v14;
  int v15;
  int v16;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 2205);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v5)
    goto LABEL_9;
  if ((*((_BYTE *)a2 + 32) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 32) & 2) == 0)
      goto LABEL_6;
LABEL_17:
    v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 8) |= 1u;
  *((_DWORD *)this + 10) = v14;
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0)
    goto LABEL_17;
LABEL_6:
  if ((v5 & 4) == 0)
    goto LABEL_7;
LABEL_18:
  v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 13) = v6;
  }
LABEL_9:
  v9 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v8 = (char *)a2 + 8;
  v7 = v9;
  v10 = v8[23];
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = v8[23];
  else
    v12 = *((_QWORD *)v8 + 1);
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1BD975940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *drawing::Point::MergeFrom(drawing::Point *this, const drawing::Point *a2)
{
  std::string *v4;
  int v5;
  int v6;
  const std::string::value_type *v7;
  char *v8;
  const std::string::value_type *v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  char v20;
  std::string v21[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v5)
    goto LABEL_12;
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    v14 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 10) = v14;
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((*((_BYTE *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  v15 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 8) |= 2u;
  *((_DWORD *)this + 11) = v15;
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
LABEL_23:
    v18 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 8) |= 0x10u;
    *((_DWORD *)this + 14) = v18;
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_22:
  v17 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 8) |= 8u;
  *((_DWORD *)this + 13) = v17;
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 0x10) != 0)
    goto LABEL_23;
LABEL_9:
  if ((v5 & 0x20) == 0)
    goto LABEL_10;
LABEL_24:
  v19 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 8) |= 0x20u;
  *((_DWORD *)this + 15) = v19;
  if ((*((_DWORD *)a2 + 8) & 0x40) != 0)
  {
LABEL_11:
    v6 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 8) |= 0x40u;
    *((_DWORD *)this + 16) = v6;
  }
LABEL_12:
  v9 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v8 = (char *)a2 + 8;
  v7 = v9;
  v10 = v8[23];
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = v8[23];
  else
    v12 = *((_QWORD *)v8 + 1);
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1BD975ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *drawing::Parameters::MergeFrom(drawing::Parameters *this, const drawing::Parameters *a2)
{
  std::string *v4;
  int v5;
  int v6;
  const std::string::value_type *v7;
  char *v8;
  const std::string::value_type *v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v14;
  int v15;
  char v16;
  std::string v17[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 1913);
    v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v14 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v14;
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_8;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 12) = v6;
    }
  }
LABEL_8:
  v9 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v8 = (char *)a2 + 8;
  v7 = v9;
  v10 = v8[23];
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = v8[23];
  else
    v12 = *((_QWORD *)v8 + 1);
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1BD975BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Command::IsInitialized(drawing::Command *this)
{
  return 1;
}

_QWORD *drawing::Command::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Command");
}

void drawing::CommandID::~CommandID(void **this)
{
  *this = &off_1E76C8808;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  drawing::CommandID::~CommandID(this);
  JUMPOUT(0x1C3B7A848);
}

double drawing::CommandID::New(drawing::CommandID *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76C8808;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t drawing::CommandID::MergePartialFromCodedStream(drawing::CommandID *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  BOOL v13;
  char *v14;
  char *v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  _BYTE v20[32];
  _QWORD v21[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_13;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      v9 = v7 >> 3;
      if (v7 >> 3 == 3)
        break;
      if (v9 == 2)
      {
        if ((_DWORD)v7 == 16)
        {
          v15 = (char *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_32;
        }
LABEL_22:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_49;
        goto LABEL_24;
      }
      if (v9 == 1)
      {
        if ((_DWORD)v7 != 8)
          goto LABEL_22;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_50;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          v15 = v12 + 1;
          *((_QWORD *)a2 + 1) = v15;
LABEL_32:
          if ((unint64_t)v15 >= v10 || *v15 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11))goto LABEL_50;
            v16 = (_BYTE *)*((_QWORD *)a2 + 1);
            v10 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *((_DWORD *)this + 11) = *v15;
            v16 = v15 + 1;
            *((_QWORD *)a2 + 1) = v16;
          }
          *((_DWORD *)this + 8) |= 2u;
          if ((unint64_t)v16 < v10 && *v16 == 24)
          {
            v14 = v16 + 1;
            *((_QWORD *)a2 + 1) = v14;
            goto LABEL_40;
          }
        }
      }
      else
      {
LABEL_13:
        if ((_DWORD)v7)
          v13 = (v7 & 7) == 4;
        else
          v13 = 1;
        if (v13)
        {
LABEL_49:
          v18 = 1;
          goto LABEL_51;
        }
LABEL_24:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))goto LABEL_50;
      }
    }
    if ((_DWORD)v7 != 24)
      goto LABEL_22;
    v14 = (char *)*((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
LABEL_40:
    if ((unint64_t)v14 < v10 && (*v14 & 0x80000000) == 0)
    {
      *((_DWORD *)this + 12) = *v14;
      v17 = (unsigned __int8 *)(v14 + 1);
      *((_QWORD *)a2 + 1) = v17;
      goto LABEL_45;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 12))
      break;
    v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
LABEL_45:
    *((_DWORD *)this + 8) |= 4u;
    if (v17 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v18 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_51;
    }
  }
LABEL_50:
  v18 = 0;
LABEL_51:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v18;
}

void sub_1BD975F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::CommandID::SerializeWithCachedSizes(drawing::CommandID *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  if ((*((_DWORD *)this + 8) & 4) != 0)
LABEL_4:
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)this + 12), a2, a4);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t drawing::CommandID::ByteSize(drawing::CommandID *this)
{
  int v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 8);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80)
  {
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v7 >= 0x80)
      v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    else
      v8 = 2;
    v3 += v8;
  }
LABEL_19:
  if (*((char *)this + 31) < 0)
    v9 = *((_QWORD *)this + 2);
  else
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  result = (v3 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *drawing::CommandID::CheckTypeAndMergeFrom(drawing::CommandID *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return drawing::CommandID::MergeFrom(this, lpsrc);
}

uint64_t drawing::CommandID::IsInitialized(drawing::CommandID *this)
{
  return 1;
}

_QWORD *drawing::CommandID::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.CommandID");
}

void drawing::Point::~Point(void **this)
{
  *this = &off_1E76C8880;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  drawing::Point::~Point(this);
  JUMPOUT(0x1C3B7A848);
}

double drawing::Point::New(drawing::Point *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76C8880;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  return result;
}

uint64_t drawing::Point::MergePartialFromCodedStream(drawing::Point *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  _BYTE *v9;
  BOOL v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE v18[32];
  _QWORD v19[2];
  unsigned int v20;

  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_12:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
LABEL_54:
        v16 = 1;
        goto LABEL_55;
      }
LABEL_46:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))
      {
LABEL_53:
        v16 = 0;
        goto LABEL_55;
      }
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 13)
          goto LABEL_44;
        v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20))
          goto LABEL_53;
        *((_DWORD *)this + 10) = v20;
        *((_DWORD *)this + 8) |= 1u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_19:
        v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20))
          goto LABEL_53;
        *((_DWORD *)this + 11) = v20;
        *((_DWORD *)this + 8) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_24:
        v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20))
          goto LABEL_53;
        *((_DWORD *)this + 12) = v20;
        *((_DWORD *)this + 8) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_29:
        v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20))
          goto LABEL_53;
        *((_DWORD *)this + 13) = v20;
        *((_DWORD *)this + 8) |= 8u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_34:
        v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20))
          goto LABEL_53;
        *((_DWORD *)this + 14) = v20;
        *((_DWORD *)this + 8) |= 0x10u;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_39:
        v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20))
          goto LABEL_53;
        *((_DWORD *)this + 15) = v20;
        *((_DWORD *)this + 8) |= 0x20u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_48:
        v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20))
          goto LABEL_53;
        *((_DWORD *)this + 16) = v20;
        *((_DWORD *)this + 8) |= 0x40u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v16 = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 2u:
        if ((_DWORD)v7 == 21)
          goto LABEL_19;
        goto LABEL_44;
      case 3u:
        if ((_DWORD)v7 == 29)
          goto LABEL_24;
        goto LABEL_44;
      case 4u:
        if ((_DWORD)v7 == 37)
          goto LABEL_29;
        goto LABEL_44;
      case 5u:
        if ((_DWORD)v7 == 45)
          goto LABEL_34;
        goto LABEL_44;
      case 6u:
        if ((_DWORD)v7 == 53)
          goto LABEL_39;
        goto LABEL_44;
      case 7u:
        if ((_DWORD)v7 == 61)
          goto LABEL_48;
LABEL_44:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_46;
        goto LABEL_54;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_55:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1BD976550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Point::SerializeWithCachedSizes(drawing::Point *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5;
  char *v6;
  uint64_t v7;

  v5 = *((_DWORD *)this + 8);
  if ((v5 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  v5 = *((_DWORD *)this + 8);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
  v5 = *((_DWORD *)this + 8);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)5, a2, *((float *)this + 14), a3);
  v5 = *((_DWORD *)this + 8);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
LABEL_16:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)6, a2, *((float *)this + 15), a3);
  if ((*((_DWORD *)this + 8) & 0x40) != 0)
LABEL_8:
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)7, a2, *((float *)this + 16), a3);
LABEL_9:
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t drawing::Point::ByteSize(drawing::Point *this)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v2 = (v1 << 31 >> 31) & 5;
    if ((v1 & 2) != 0)
      v2 += 5;
    if ((v1 & 4) != 0)
      v2 += 5;
    if ((v1 & 8) != 0)
      v2 += 5;
    if ((v1 & 0x10) != 0)
      v2 += 5;
    if ((v1 & 0x20) != 0)
      v2 += 5;
    if ((v1 & 0x40) != 0)
      v1 = v2 + 5;
    else
      v1 = v2;
  }
  if (*((char *)this + 31) < 0)
    v3 = *((_QWORD *)this + 2);
  else
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  v4 = (v1 + v3);
  *((_DWORD *)this + 9) = v4;
  return v4;
}

std::string *drawing::Point::CheckTypeAndMergeFrom(drawing::Point *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return drawing::Point::MergeFrom(this, lpsrc);
}

uint64_t drawing::Point::IsInitialized(drawing::Point *this)
{
  return 1;
}

_QWORD *drawing::Point::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Point");
}

void drawing::Parameters::~Parameters(void **this)
{
  *this = &off_1E76C88F8;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  drawing::Parameters::~Parameters(this);
  JUMPOUT(0x1C3B7A848);
}

double drawing::Parameters::New(drawing::Parameters *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76C88F8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t drawing::Parameters::MergePartialFromCodedStream(drawing::Parameters *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  _BYTE *v10;
  BOOL v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v15[32];
  _QWORD v16[2];
  unsigned int v17;

  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_14;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      v9 = v7 >> 3;
      if (v7 >> 3 != 3)
        break;
      if ((_DWORD)v7 != 29)
        goto LABEL_23;
LABEL_31:
      v17 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
      {
LABEL_36:
        v13 = 0;
        goto LABEL_38;
      }
      *((_DWORD *)this + 12) = v17;
      *((_DWORD *)this + 8) |= 4u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v13 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v9 == 2)
    {
      if ((_DWORD)v7 == 21)
        goto LABEL_27;
      goto LABEL_23;
    }
    if (v9 != 1)
      break;
    if ((_DWORD)v7 == 13)
    {
      v17 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
        goto LABEL_36;
      *((_DWORD *)this + 10) = v17;
      *((_DWORD *)this + 8) |= 1u;
      v10 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 21)
      {
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_27:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_36;
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 < *((_QWORD *)a2 + 2) && *v12 == 29)
        {
          *((_QWORD *)a2 + 1) = v12 + 1;
          goto LABEL_31;
        }
      }
    }
    else
    {
LABEL_23:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_37;
LABEL_25:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_36;
    }
  }
LABEL_14:
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_25;
LABEL_37:
  v13 = 1;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1BD976A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Parameters::SerializeWithCachedSizes(drawing::Parameters *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5;
  char *v6;
  uint64_t v7;

  v5 = *((_DWORD *)this + 8);
  if ((v5 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  if ((*((_DWORD *)this + 8) & 4) != 0)
LABEL_4:
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t drawing::Parameters::ByteSize(drawing::Parameters *this)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *((unsigned __int8 *)this + 32);
  v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0)
    v2 += 5;
  if ((v1 & 4) != 0)
    v2 += 5;
  if (*((_BYTE *)this + 32))
    v3 = v2;
  else
    v3 = 0;
  if (*((char *)this + 31) < 0)
    v4 = *((_QWORD *)this + 2);
  else
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *drawing::Parameters::CheckTypeAndMergeFrom(drawing::Parameters *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return drawing::Parameters::MergeFrom(this, lpsrc);
}

uint64_t drawing::Parameters::IsInitialized(drawing::Parameters *this)
{
  return 1;
}

_QWORD *drawing::Parameters::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Parameters");
}

void drawing::Color::~Color(void **this)
{
  *this = &off_1E76C8970;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  drawing::Color::~Color(this);
  JUMPOUT(0x1C3B7A848);
}

double drawing::Color::New(drawing::Color *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76C8970;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t drawing::Color::MergePartialFromCodedStream(drawing::Color *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  _BYTE *v9;
  BOOL v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v15[32];
  _QWORD v16[2];
  unsigned int v17;

  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_12:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
LABEL_39:
        v13 = 1;
        goto LABEL_40;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))
      {
LABEL_38:
        v13 = 0;
        goto LABEL_40;
      }
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 13)
          goto LABEL_29;
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 8) |= 1u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_19:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_24:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 12) = v17;
        *((_DWORD *)this + 8) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_33:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 13) = v17;
        *((_DWORD *)this + 8) |= 8u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v13 = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 2u:
        if ((_DWORD)v7 == 21)
          goto LABEL_19;
        goto LABEL_29;
      case 3u:
        if ((_DWORD)v7 == 29)
          goto LABEL_24;
        goto LABEL_29;
      case 4u:
        if ((_DWORD)v7 == 37)
          goto LABEL_33;
LABEL_29:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_31;
        goto LABEL_39;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_40:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1BD976EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Color::SerializeWithCachedSizes(drawing::Color *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5;
  char *v6;
  uint64_t v7;

  v5 = *((_DWORD *)this + 8);
  if ((v5 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 8) != 0)
LABEL_5:
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t drawing::Color::ByteSize(drawing::Color *this)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *((unsigned __int8 *)this + 32);
  v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0)
    v2 += 5;
  if ((v1 & 4) != 0)
    v2 += 5;
  if ((v1 & 8) != 0)
    v2 += 5;
  if (*((_BYTE *)this + 32))
    v3 = v2;
  else
    v3 = 0;
  if (*((char *)this + 31) < 0)
    v4 = *((_QWORD *)this + 2);
  else
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *drawing::Color::CheckTypeAndMergeFrom(drawing::Color *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return drawing::Color::MergeFrom(this, lpsrc);
}

uint64_t drawing::Color::IsInitialized(drawing::Color *this)
{
  return 1;
}

_QWORD *drawing::Color::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Color");
}

drawing::Rectangle *drawing::Rectangle::Rectangle(drawing::Rectangle *this, const drawing::Rectangle *a2)
{
  *(_QWORD *)this = &off_1E76C89E8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  drawing::Rectangle::MergeFrom(this, a2);
  return this;
}

void sub_1BD97709C(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void drawing::Rectangle::~Rectangle(void **this)
{
  *this = &off_1E76C89E8;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  drawing::Rectangle::~Rectangle(this);
  JUMPOUT(0x1C3B7A848);
}

double drawing::Rectangle::New(drawing::Rectangle *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76C89E8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t drawing::Rectangle::MergePartialFromCodedStream(drawing::Rectangle *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  _BYTE *v9;
  BOOL v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v15[32];
  _QWORD v16[2];
  unsigned int v17;

  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_12:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
LABEL_39:
        v13 = 1;
        goto LABEL_40;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))
      {
LABEL_38:
        v13 = 0;
        goto LABEL_40;
      }
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 13)
          goto LABEL_29;
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 8) |= 1u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_19:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_24:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 12) = v17;
        *((_DWORD *)this + 8) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_33:
        v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
          goto LABEL_38;
        *((_DWORD *)this + 13) = v17;
        *((_DWORD *)this + 8) |= 8u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v13 = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 2u:
        if ((_DWORD)v7 == 21)
          goto LABEL_19;
        goto LABEL_29;
      case 3u:
        if ((_DWORD)v7 == 29)
          goto LABEL_24;
        goto LABEL_29;
      case 4u:
        if ((_DWORD)v7 == 37)
          goto LABEL_33;
LABEL_29:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_31;
        goto LABEL_39;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_40:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1BD9773F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Rectangle::SerializeWithCachedSizes(drawing::Rectangle *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5;
  char *v6;
  uint64_t v7;

  v5 = *((_DWORD *)this + 8);
  if ((v5 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 8) != 0)
LABEL_5:
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t drawing::Rectangle::ByteSize(drawing::Rectangle *this)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *((unsigned __int8 *)this + 32);
  v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0)
    v2 += 5;
  if ((v1 & 4) != 0)
    v2 += 5;
  if ((v1 & 8) != 0)
    v2 += 5;
  if (*((_BYTE *)this + 32))
    v3 = v2;
  else
    v3 = 0;
  if (*((char *)this + 31) < 0)
    v4 = *((_QWORD *)this + 2);
  else
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *drawing::Rectangle::CheckTypeAndMergeFrom(drawing::Rectangle *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return drawing::Rectangle::MergeFrom(this, lpsrc);
}

uint64_t drawing::Rectangle::IsInitialized(drawing::Rectangle *this)
{
  return 1;
}

_QWORD *drawing::Rectangle::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Rectangle");
}

uint64_t drawing::Drawing::GetCachedSize(drawing::Drawing *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Command::GetCachedSize(drawing::Command *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::CommandID::GetCachedSize(drawing::CommandID *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Point::GetCachedSize(drawing::Point *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Parameters::GetCachedSize(drawing::Parameters *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Color::GetCachedSize(drawing::Color *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Rectangle::GetCachedSize(drawing::Rectangle *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD977678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD977750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  int32x2_t *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (int32x2_t *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76C8790;
        *(_OWORD *)(v11 + 88) = 0u;
        *(_OWORD *)(v11 + 104) = 0u;
        *(_OWORD *)(v11 + 116) = 0u;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_OWORD *)(v11 + 56) = 0u;
        *(_OWORD *)(v11 + 68) = 0u;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = drawing::Command::MergeFrom((int32x2_t *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BD9778E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const drawing::Point *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const drawing::Point *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76C8880;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_OWORD *)(v11 + 52) = 0u;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = drawing::Point::MergeFrom((drawing::Point *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BD977A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1BD977B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD977CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD977E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD978234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9784CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9786EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9789FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD978C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD978EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9790C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD97946C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9798EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD979AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD979C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD979DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD979EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD97A13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD97A71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  void *v19;

  objc_sync_exit(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1BD97AFC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD97B0DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD97B5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD97BC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_17_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_1BD97C81C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1BD97C8E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD97C980(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD97CA1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD97CAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD97CB98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD97CC44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD97F2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1BD97F8D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1BD9818F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1BD98212C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1BD98252C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD982658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

topotext::PreviewImage *google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New()
{
  topotext::PreviewImage *v0;

  v0 = (topotext::PreviewImage *)operator new();
  topotext::PreviewImage::PreviewImage(v0);
  return v0;
}

void sub_1BD9826B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40A6778F3CLL);
  _Unwind_Resume(a1);
}

void sub_1BD98276C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD982818(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9828FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BD982978(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<minIdPathData,TopoSubstring *>>::reserve(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (0xCCCCCCCCCCCCCCCDLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x666666666666667)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 40 * v6;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(a1, v7);
    return std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)v7);
  }
  return result;
}

void sub_1BD982B94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<minIdPathData,TopoSubstring *>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];

  v6 = a1[2];
  result = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(result - 8);
  if (v7 >= v6)
  {
    v10 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - *a1) >> 3);
    v11 = v10 + 1;
    if (v10 + 1 > 0x666666666666666)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v12 > v11)
      v11 = 2 * v12;
    if (v12 >= 0x333333333333333)
      v13 = 0x666666666666666;
    else
      v13 = v11;
    v18[4] = result;
    v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(result, v13);
    v15 = &v14[40 * v10];
    v18[0] = v14;
    v18[1] = v15;
    v18[3] = &v14[40 * v16];
    v17 = *a2;
    *a2 = 0;
    *(_QWORD *)v15 = v17;
    *((_DWORD *)v15 + 2) = *((_DWORD *)a2 + 2);
    *((_OWORD *)v15 + 1) = *((_OWORD *)a2 + 1);
    *((_QWORD *)v15 + 4) = a2[4];
    v18[2] = v15 + 40;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(a1, v18);
    v9 = a1[1];
    result = std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)v18);
  }
  else
  {
    v8 = *a2;
    *a2 = 0;
    *(_QWORD *)v7 = v8;
    *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
    *(_OWORD *)(v7 + 16) = *((_OWORD *)a2 + 1);
    *(_QWORD *)(v7 + 32) = a2[4];
    v9 = v7 + 40;
    a1[1] = v7 + 40;
  }
  a1[1] = v9;
  return result;
}

void sub_1BD982CD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void traverseUnorderedSimple(uint64_t a1, void *a2)
{
  void (**v2)(id, uint64_t, char *);
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  _OWORD v8[2];
  __int128 v9;
  _OWORD v10[2];
  int v11;
  uint64_t v12;

  v12 = a1;
  v2 = a2;
  memset(v10, 0, sizeof(v10));
  v11 = 1065353216;
  v9 = 0u;
  memset(v8, 0, sizeof(v8));
  v7 = 0;
  std::deque<TopoSubstring *>::push_back(v8, &v12);
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v10, &v12, &v12);
  while (*((_QWORD *)&v9 + 1))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)&v8[0] + 1)
                               + (((unint64_t)(v9 + *((_QWORD *)&v9 + 1) - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
                   + 8 * ((v9 + *((_QWORD *)&v9 + 1) - 1) & 0x1FF));
    --*((_QWORD *)&v9 + 1);
    std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](v8, 1);
    v2[2](v2, v3, &v7);
    if (v7)
      break;
    v5 = *(uint64_t **)(v3 + 48);
    v4 = *(uint64_t **)(v3 + 56);
    while (v5 != v4)
    {
      v6 = 0;
      v6 = *v5;
      if (!std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(v10, &v6))
      {
        std::deque<TopoSubstring *>::push_back(v8, &v6);
        std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v10, &v6, &v6);
      }
      ++v5;
    }
  }
  std::deque<TopoSubstring *>::~deque[abi:ne180100](v8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)v10);

}

void sub_1BD982E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  std::deque<TopoSubstring *>::~deque[abi:ne180100]((uint64_t *)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);

  _Unwind_Resume(a1);
}

NSUUID *updateTopoID(const TopoID *a1, const TopoIDRange *a2, const TopoIDRange *a3)
{
  NSUUID *v6;
  unsigned int clock;
  unsigned int v8;
  NSUUID *v9;

  v6 = a1->replicaID;
  if (-[NSUUID isEqual:](a1->replicaID, "isEqual:", a2->var0.replicaID))
  {
    clock = a1->clock;
    v8 = a2->var0.clock;
    if (clock >= v8 && clock < a2->var1 + v8)
    {
      v9 = a3->var0.replicaID;

      return v9;
    }
  }
  return v6;
}

void sub_1BD982EDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void updateTopoIDRange(TopoIDRange *a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  NSUUID *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int clock;
  unsigned int v16;
  id v17;
  unsigned int v18;
  id v19;
  void *v20;
  int v21;
  id v22;
  int v23;
  int v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  NSUUID *v28;
  unsigned int v29;
  id v30;
  void *v31;
  unsigned int v32;
  int v33;
  id v34;
  id v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  NSUUID *v45;
  unsigned int var1;
  id v47;
  int v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  int v54;
  id location;
  uint64_t v56;
  unsigned int v57;
  id v58;
  int v59;
  int v60;

  if ((-[NSUUID isEqual:](a1->var0.replicaID, "isEqual:", *a2) & 1) == 0)
  {
LABEL_5:
    v13 = a4[1];
    if (v13 >= a4[2])
    {
      v14 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)a1);
    }
    else
    {
      *(_QWORD *)v13 = a1->var0.replicaID;
      *(_DWORD *)(v13 + 8) = a1->var0.clock;
      *(_DWORD *)(v13 + 16) = a1->var1;
      v14 = v13 + 24;
    }
    a4[1] = v14;
    return;
  }
  v8 = a1->var0.replicaID;
  v9 = a1->var1 + a1->var0.clock;
  location = v8;
  v56 = v9;
  if (TopoID::operator<=((uint64_t)&location, a2))
  {

    goto LABEL_5;
  }
  v10 = (id)*a2;
  v11 = (*((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2));
  v52 = v10;
  v53 = v11;
  v12 = TopoID::operator>=((uint64_t)a1, &v52);

  if (v12)
    goto LABEL_5;
  clock = a1->var0.clock;
  v16 = *((_DWORD *)a2 + 2);
  if (v16 > clock)
  {
    TopoIDRange::splitPairAt(a1, v16 - clock, (uint64_t)&location);
    v17 = (id)*a2;
    v18 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2);
    v19 = v58;
    v20 = v19;
    if (v18 >= v60 + v59)
    {
      if (v18 != v60 + v59)
      {

        goto LABEL_31;
      }
      v39 = objc_msgSend(v17, "TTCompare:", v19);

      if (v39 != -1)
      {
LABEL_31:
        v41 = *(id *)a3;
        v42 = *(_DWORD *)(a3 + 8);
        objc_storeStrong(&v58, v41);
        v59 = v42;
        v43 = a4[1];
        if (v43 >= a4[2])
        {
          v38 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
        }
        else
        {
          *(_QWORD *)v43 = location;
          *(_DWORD *)(v43 + 8) = v56;
          *(_DWORD *)(v43 + 16) = v57;
          v38 = v43 + 24;
        }
        a4[1] = v38;
        if (v38 < a4[2])
        {
LABEL_35:
          *(_QWORD *)v38 = v58;
          *(_DWORD *)(v38 + 8) = v59;
          *(_DWORD *)(v38 + 16) = v60;
          v44 = v38 + 24;
LABEL_37:
          a4[1] = v44;

          return;
        }
LABEL_36:
        v44 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&v58);
        goto LABEL_37;
      }
    }
    else
    {

    }
    v21 = *((_DWORD *)a2 + 4);
    v22 = v58;
    v23 = v59 + v21;
    v52 = v22;
    v53 = (v59 + v21);
    v24 = v60 - v21;
    v54 = v60 - v21;
    v60 = v21;
    v25 = a4[1];
    if (v25 >= a4[2])
    {
      v27 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&v52);
      v26 = v52;
    }
    else
    {
      v26 = v22;
      *(_QWORD *)v25 = v26;
      *(_DWORD *)(v25 + 8) = v23;
      *(_DWORD *)(v25 + 16) = v24;
      v27 = v25 + 24;
    }
    a4[1] = v27;

    goto LABEL_31;
  }
  v28 = a1->var0.replicaID;
  v29 = a1->var1 + a1->var0.clock;
  v30 = (id)*a2;
  v31 = v30;
  v32 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2);
  if (v29 > v32)
  {

    goto LABEL_16;
  }
  if (v29 == v32)
  {
    v40 = -[NSUUID TTCompare:](v28, "TTCompare:", v30);

    if (v40 == 1)
    {
LABEL_16:
      v33 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2) - a1->var0.clock;
      v34 = (id)*a2;
      TopoIDRange::splitPairAt(a1, v33, (uint64_t)&location);

      v35 = *(id *)a3;
      v36 = a1->var0.clock + *(_DWORD *)(a3 + 8) - *((_DWORD *)a2 + 2);
      objc_storeStrong(&location, v35);
      LODWORD(v56) = v36;
      v37 = a4[1];
      if (v37 >= a4[2])
      {
        v38 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
      }
      else
      {
        *(_QWORD *)v37 = location;
        *(_DWORD *)(v37 + 8) = v56;
        *(_DWORD *)(v37 + 16) = v57;
        v38 = v37 + 24;
      }
      a4[1] = v38;
      if (v38 < a4[2])
        goto LABEL_35;
      goto LABEL_36;
    }
  }
  else
  {

  }
  v45 = a1->var0.replicaID;
  var1 = a1->var1;
  v57 = var1;
  v47 = *(id *)a3;
  v48 = a1->var0.clock + *(_DWORD *)(a3 + 8) - *((_DWORD *)a2 + 2);
  location = v47;

  LODWORD(v56) = v48;
  v49 = a4[1];
  if (v49 >= a4[2])
  {
    v51 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
    v50 = location;
  }
  else
  {
    v50 = v47;
    *(_QWORD *)v49 = v50;
    *(_DWORD *)(v49 + 8) = v48;
    *(_DWORD *)(v49 + 16) = var1;
    v51 = v49 + 24;
  }
  a4[1] = v51;

}

void sub_1BD983350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

BOOL TopoID::operator<=(uint64_t a1, _QWORD *a2)
{
  unsigned int v4;
  unsigned int v5;

  v4 = *(_DWORD *)(a1 + 8);
  v5 = *((_DWORD *)a2 + 2);
  if (v4 == v5)
  {
    if ((objc_msgSend(*(id *)a1, "isEqual:", *a2) & 1) != 0)
      return 1;
    v4 = *(_DWORD *)(a1 + 8);
    v5 = *((_DWORD *)a2 + 2);
  }
  if (v4 < v5)
    return 1;
  return v4 == v5 && objc_msgSend(*(id *)a1, "TTCompare:", *a2) == -1;
}

BOOL TopoID::operator>=(uint64_t a1, _QWORD *a2)
{
  unsigned int v4;
  unsigned int v5;

  v4 = *(_DWORD *)(a1 + 8);
  v5 = *((_DWORD *)a2 + 2);
  if (v4 == v5)
  {
    if ((objc_msgSend(*(id *)a1, "isEqual:", *a2) & 1) != 0)
      return 1;
    v4 = *(_DWORD *)(a1 + 8);
    v5 = *((_DWORD *)a2 + 2);
  }
  if (v4 > v5)
    return 1;
  return v4 == v5 && objc_msgSend(*(id *)a1, "TTCompare:", *a2) == 1;
}

void TopoIDRange::splitPairAt(TopoIDRange *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  NSUUID *v6;
  unsigned int clock;
  NSUUID *v8;
  int v9;
  int v10;

  v6 = this->var0.replicaID;
  clock = this->var0.clock;
  v8 = this->var0.replicaID;
  v9 = this->var0.clock + a2;
  v10 = this->var1 - a2;
  *(_QWORD *)a3 = v6;
  *(_DWORD *)(a3 + 8) = clock;
  *(_DWORD *)(a3 + 16) = a2;
  *(_QWORD *)(a3 + 24) = v8;
  *(_DWORD *)(a3 + 32) = v9;
  *(_DWORD *)(a3 + 40) = v10;

}

uint64_t __Block_byref_object_copy__10(uint64_t a1, uint64_t a2)
{
  return std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t __Block_byref_object_dispose__11(uint64_t a1)
{
  return std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(a1 + 48);
}

void TopoSubstring::~TopoSubstring(TopoSubstring *this)
{
  void *v2;

  v2 = (void *)*((_QWORD *)this + 6);
  if (v2)
  {
    *((_QWORD *)this + 7) = v2;
    operator delete(v2);
  }

}

void sub_1BD98364C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;

  topotext::String::~String((topotext::String *)&a9);
  _Unwind_Resume(a1);
}

void sub_1BD9836CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD983750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9837E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD98389C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD983958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1BD983AD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD983C0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1BD983D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD98416C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id a21)
{
  void *v21;

  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

char *std::vector<TopoSubstring *>::insert(uint64_t a1, char *__src, char *a3)
{
  char *v3;
  char *v4;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  void *__p;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v3 = a3;
  v4 = __src;
  v6 = *(char **)(a1 + 8);
  v8 = a1 + 16;
  v7 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    v13 = *(char **)a1;
    v14 = ((uint64_t)&v6[-*(_QWORD *)a1] >> 3) + 1;
    if (v14 >> 61)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v15 = __src - v13;
    v16 = (__src - v13) >> 3;
    v17 = v7 - (_QWORD)v13;
    if (v17 >> 2 > v14)
      v14 = v17 >> 2;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
      v18 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v18 = v14;
    v30 = a1 + 16;
    if (v18)
      v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(a1 + 16, v18);
    else
      v19 = 0;
    v20 = &v19[8 * v16];
    __p = v19;
    v27 = v20;
    v28 = v20;
    v29 = &v19[8 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4)
          v22 = 1;
        else
          v22 = v15 >> 2;
        v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v8, v22);
        v20 = &v23[8 * (v22 >> 2)];
        __p = v23;
        v27 = v20;
        v29 = &v23[8 * v24];
        if (v19)
          operator delete(v19);
      }
      else
      {
        v21 = v16 + 2;
        if (v16 >= -1)
          v21 = v16 + 1;
        v20 -= 8 * (v21 >> 1);
        v27 = v20;
      }
    }
    *(_QWORD *)v20 = *(_QWORD *)v3;
    v28 = v20 + 8;
    v4 = std::vector<TopoSubstring *>::__swap_out_circular_buffer((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27)
      v28 += (v27 - v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (__p)
      operator delete(__p);
  }
  else if (__src == v6)
  {
    *(_QWORD *)__src = *(_QWORD *)a3;
    *(_QWORD *)(a1 + 8) = __src + 8;
  }
  else
  {
    v9 = __src + 8;
    v10 = v6 - 8;
    v11 = *(_QWORD **)(a1 + 8);
    while (v10 < v6)
    {
      v12 = *(_QWORD *)v10;
      v10 += 8;
      *v11++ = v12;
    }
    *(_QWORD *)(a1 + 8) = v11;
    if (v6 != v9)
      memmove(&v6[-8 * ((v6 - v9) >> 3)], __src, v6 - v9);
    if (v4 <= v3)
      v3 += 8 * (*(_QWORD *)(a1 + 8) > (unint64_t)v3);
    *(_QWORD *)v4 = *(_QWORD *)v3;
  }
  return v4;
}

void sub_1BD984440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1BD984518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  id *v4;
  id *v5;
  va_list va;

  va_start(va, a4);
  std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100]((void ***)va);

  _Unwind_Resume(a1);
}

void sub_1BD98458C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1BD984A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD984F6C(_Unwind_Exception *a1)
{
  id *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD9851C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::vector<_NSRange>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 4)
  {
    if (a2 >> 60)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<_NSRange>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    v9 = &v6[16 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1BD9853BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD985494(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD985598(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9856D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_1BD9858BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD985A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD985CA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::vector<TopoSubstring *>::shrink_to_fit(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _BYTE *v5;
  unint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a1 + 16;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(char **)a1;
  v5 = *(_BYTE **)(a1 + 8);
  v6 = (v5 - v4) >> 3;
  if (v6 < (v3 - (uint64_t)v4) >> 3)
  {
    if (v5 == v4)
    {
      v11 = 0;
      v9 = 8 * v6;
    }
    else
    {
      v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v2, v6);
      v4 = *(char **)a1;
      v8 = *(char **)(a1 + 8);
      v9 = (uint64_t)&v7[8 * v6];
      v11 = &v7[8 * v10];
      if (v8 != *(char **)a1)
      {
        v12 = v9;
        do
        {
          v13 = *((_QWORD *)v8 - 1);
          v8 -= 8;
          *(_QWORD *)(v12 - 8) = v13;
          v12 -= 8;
        }
        while (v8 != v4);
        v4 = *(char **)a1;
        goto LABEL_9;
      }
    }
    v12 = v9;
LABEL_9:
    *(_QWORD *)a1 = v12;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v11;
    if (v4)
      operator delete(v4);
  }
}

void sub_1BD98603C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;
  void *v27;
  uint64_t v28;

  _Block_object_dispose(&a26, 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(v26);
  _Block_object_dispose((const void *)(v28 - 208), 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(a9);
  _Block_object_dispose((const void *)(v28 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1BD986428(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD98661C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9867A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9869D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD986DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void std::vector<TopoSubstring *>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * a2;
  }
  else
  {
    std::vector<TopoSubstring *>::__append((void **)a1, a2 - v2);
  }
}

void sub_1BD986F98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD987028(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD98727C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  void *v12;
  uint64_t v13;
  uint64_t v14;
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(v13);
  _Block_object_dispose((const void *)(v14 - 128), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__73(uint64_t a1, uint64_t a2)
{
  return std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t __Block_byref_object_dispose__74(uint64_t a1)
{
  return std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(a1 + 48);
}

void sub_1BD987408(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD987760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t std::deque<TopoSubstring *>::~deque[abi:ne180100](_QWORD *a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = (void **)a1[1];
  v3 = (void **)a1[2];
  a1[5] = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = (void **)a1[2];
      v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 256;
  }
  else
  {
    if (v5 != 2)
      goto LABEL_9;
    v6 = 512;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    v7 = *v2++;
    operator delete(v7);
  }
  return std::__split_buffer<TopoSubstring **>::~__split_buffer((uint64_t)a1);
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoIDRange *a2, int a3)
{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 10) = a3;
  *((_BYTE *)this + 44) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 18) = 0;
  objc_storeStrong((id *)this, a2->var0.replicaID);
  *((_DWORD *)this + 2) = a2->var0.clock;
  *((_DWORD *)this + 4) = a2->var1;

}

void std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a2);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

void std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  void *v6;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = (void *)*((_QWORD *)v4 - 5);
        v4 -= 40;

      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(uint64_t *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *result;
  v2 = result[1];
  v4 = a2[1];
  while (v2 != v3)
  {
    v5 = *(_QWORD *)(v2 - 40);
    v2 -= 40;
    *(_QWORD *)v2 = 0;
    *(_QWORD *)(v4 - 40) = v5;
    v4 -= 40;
    *(_DWORD *)(v4 + 8) = *(_DWORD *)(v2 + 8);
    *(_OWORD *)(v4 + 16) = *(_OWORD *)(v2 + 16);
    *(_QWORD *)(v4 + 32) = *(_QWORD *)(v2 + 32);
  }
  a2[1] = v4;
  v6 = *result;
  *result = v4;
  a2[1] = v6;
  v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(40 * a2);
}

uint64_t std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 40;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

_QWORD *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::clear(_QWORD *result)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t i;

  if (result[3])
  {
    v1 = result;
    result = (_QWORD *)result[2];
    if (result)
    {
      do
      {
        v2 = (_QWORD *)*result;
        operator delete(result);
        result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    v3 = v1[1];
    if (v3)
    {
      for (i = 0; i != v3; ++i)
        *(_QWORD *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<TopoSubstring *,unsigned long>,void *> *>>(_QWORD *a1, __n128 *a2, __n128 *a3)
{
  uint64_t v6;
  uint64_t i;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v6 = a1[1];
  if (!v6)
    goto LABEL_9;
  for (i = 0; i != v6; *(_QWORD *)(*a1 + 8 * i++) = 0)
    ;
  v8 = (_QWORD *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      v9 = a2[1].n128_u64[1];
      v8[2] = a2[1].n128_u64[0];
      v8[3] = v9;
      v10 = (_QWORD *)*v8;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(a1, v8);
      a2 = (__n128 *)a2->n128_u64[0];
      v8 = v10;
      if (!v10)
        goto LABEL_9;
    }
    do
    {
      v11 = (_QWORD *)*v8;
      operator delete(v8);
      v8 = v11;
    }
    while (v11);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_multi<std::pair<TopoSubstring * const,unsigned long> const&>(a1, a2 + 1);
      a2 = (__n128 *)a2->n128_u64[0];
    }
  }
}

void sub_1BD987C24(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_1BD987C44(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *inserted;

  v4 = a2 + 2;
  v5 = a2[2];
  v6 = HIDWORD(v5);
  v7 = 0x9DDFEA08EB382D69 * (((8 * v5) + 8) ^ HIDWORD(v5));
  v8 = 0x9DDFEA08EB382D69
     * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
  a2[1] = v8;
  inserted = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_prepare((uint64_t)a1, v8, v4);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_perform(a1, a2, inserted);
  return a2;
}

_QWORD *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_prepare(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  float v7;
  float v8;
  uint64_t v9;
  _BOOL8 v10;
  size_t v11;
  unint64_t v12;
  size_t v13;
  uint8x8_t v14;
  unint64_t v15;
  _QWORD *v16;
  int v17;
  _QWORD *result;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v21;
  int v22;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 2 * v6;
    v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    v11 = v10 | v9;
    v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12)
      v13 = v12;
    else
      v13 = v11;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<false>(a1, v13);
    v6 = *(_QWORD *)(a1 + 8);
  }
  v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    v15 = a2;
    if (v6 <= a2)
      v15 = a2 % v6;
  }
  else
  {
    v15 = (v6 - 1) & a2;
  }
  v16 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v15);
  if (!v16)
    return 0;
  v17 = 0;
  do
  {
    result = v16;
    v16 = (_QWORD *)*v16;
    if (!v16)
      break;
    v19 = v16[1];
    if (v14.u32[0] > 1uLL)
    {
      v20 = v16[1];
      if (v19 >= v6)
        v20 = v19 % v6;
    }
    else
    {
      v20 = v19 & (v6 - 1);
    }
    if (v20 != v15)
      break;
    v21 = v19 == a2 && v16[2] == *a3;
    v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

_QWORD *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_perform(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  unint64_t v6;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(_QWORD *)(*result + 8 * v4) = result + 2;
    if (!*a2)
      goto LABEL_19;
    v6 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v3)
        v6 %= *(_QWORD *)&v3;
    }
    else
    {
      v6 &= *(_QWORD *)&v3 - 1;
    }
LABEL_18:
    *(_QWORD *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    v6 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v3)
        v6 %= *(_QWORD *)&v3;
    }
    else
    {
      v6 &= *(_QWORD *)&v3 - 1;
    }
    if (v6 != v4)
      goto LABEL_18;
  }
LABEL_19:
  ++result[3];
  return result;
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<false>(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<false>(a1, prime);
  }
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<false>(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *i;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  if (a2)
  {
    if (a2 >> 61)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      for (i = (_QWORD *)*v7; *v7; i = (_QWORD *)*v7)
      {
        v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2)
            v12 %= a2;
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          v7 = i;
        }
        else
        {
          v13 = i;
          if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
          {
            do
            {
              v14 = v13;
              v13 = (_QWORD *)*v13;
            }
            while (v13 && i[2] == v13[2]);
            *v7 = v13;
            *v14 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = i;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
            v7 = i;
            v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

_QWORD *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_multi<std::pair<TopoSubstring * const,unsigned long> const&>(_QWORD *a1, __n128 *a2)
{
  _QWORD *v4;

  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__construct_node<std::pair<TopoSubstring * const,unsigned long> const&>((uint64_t)a1, a2, (uint64_t)&v4);
  return std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(a1, v4);
}

void sub_1BD988194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__construct_node<std::pair<TopoSubstring * const,unsigned long> const&>@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  __n128 *v6;
  __n128 result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = a1 + 16;
  v6 = (__n128 *)operator new(0x20uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  result = *a2;
  v6[1] = *a2;
  *(_BYTE *)(a3 + 16) = 1;
  v8 = v6[1].n128_u64[0];
  v9 = HIDWORD(v8);
  v10 = 0x9DDFEA08EB382D69 * (((8 * v8) + 8) ^ HIDWORD(v8));
  v6->n128_u64[0] = 0;
  v6->n128_u64[1] = 0x9DDFEA08EB382D69
                  * ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) ^ ((0x9DDFEA08EB382D69
                                                                         * (v9 ^ (v10 >> 47) ^ v10)) >> 47));
  return result;
}

void *std::get_temporary_buffer[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *>>(uint64_t a1)
{
  unint64_t v1;
  const std::nothrow_t *v2;
  void *result;
  BOOL v4;

  if (a1 < 1)
    return 0;
  if (a1 >= 0x333333333333333)
    v1 = 0x333333333333333;
  else
    v1 = a1;
  v2 = (const std::nothrow_t *)MEMORY[0x1E0DE4E10];
  while (1)
  {
    result = operator new(40 * v1, v2);
    if (result)
      break;
    v4 = v1 > 1;
    v1 >>= 1;
    if (!v4)
      return 0;
  }
  return result;
}

void std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, id *a2, unint64_t a3, void **a4, uint64_t a5)
{
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  _OWORD *v29;
  BOOL v30;
  unsigned int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  unint64_t *v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  char *v52;
  void **v53;
  _QWORD *v54;
  void **v55;
  char *v56;
  id v57;
  void *v58;
  unsigned int v59;
  id v60;
  void *v61;
  void *v62;
  unsigned int v63;
  id v64;
  void *v65;
  uint64_t v66;
  id v67;
  void *v68;
  unint64_t v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  void **v77;
  void *v78;
  void *v79;
  void **v80;
  unint64_t v81;
  void *v82;
  uint64_t v84;
  uint64_t v85;
  id *v86;
  unint64_t v87;
  uint64_t v88;
  unsigned int v90;
  char *v91;
  id v92;
  id v93;
  id v94;
  void **v95;

  if (a3 < 2)
    return;
  v5 = a2;
  v6 = a1;
  if (a3 != 2)
  {
    if ((uint64_t)a3 > 0)
    {
      v16 = a3 >> 1;
      v18 = a1 + 40 * (a3 >> 1);
      if ((uint64_t)a3 > a5)
      {
        std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, a1 + 40 * (a3 >> 1), a3 >> 1, a4, a5);
        v19 = a3 - v16;
        std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v18, v5, v19, a4, a5);
        std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, v18, (uint64_t)v5, v16, v19, a4, a5);
        return;
      }
      std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, (id *)(a1 + 40 * (a3 >> 1)), a3 >> 1, (char *)a4);
      v52 = (char *)&a4[5 * v16];
      std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v18, v5, a3 - v16, v52);
      v87 = a3;
      v53 = &a4[5 * a3];
      v54 = (_QWORD *)(a1 + 32);
      v55 = a4;
      v56 = v52;
      v91 = v52;
      v95 = v53;
      while (1)
      {
        if (v56 == (char *)v53)
        {
          if (v55 != (void **)v52)
          {
            v75 = 0;
            do
            {
              v76 = &v54[v75];
              v77 = &v55[v75];
              v78 = v55[v75];
              v55[v75] = 0;
              v79 = (void *)v54[v75 - 4];
              v54[v75 - 4] = v78;

              *((_DWORD *)v76 - 6) = v55[v75 + 1];
              *((_OWORD *)v76 - 1) = *(_OWORD *)&v55[v75 + 2];
              *v76 = v55[v75 + 4];
              v75 += 5;
            }
            while (v77 + 5 != (void **)v52);
          }
LABEL_69:
          v80 = a4;
          if (a4)
          {
            v81 = v87;
            do
            {
              v82 = *v80;
              v80 += 5;

              --v81;
            }
            while (v81);
          }
          return;
        }
        v57 = *(id *)v56;
        v58 = (void *)*((_QWORD *)v56 + 2);
        v59 = *((_DWORD *)v56 + 2);
        v60 = *v55;
        v61 = v60;
        v62 = v55[2];
        if (v58 == v62)
        {
          v63 = *((_DWORD *)v55 + 2);
          if (v59 >= v63)
          {
            if (v59 != v63)
            {

LABEL_56:
              v67 = *v55;
              *v55 = 0;
              v68 = (void *)*(v54 - 4);
              *(v54 - 4) = v67;

              *((_DWORD *)v54 - 6) = *((_DWORD *)v55 + 2);
              *((_OWORD *)v54 - 1) = *((_OWORD *)v55 + 1);
              *v54 = v55[4];
              v55 += 5;
              goto LABEL_57;
            }
            v66 = objc_msgSend(v57, "TTCompare:", v60);

            if (v66 != -1)
              goto LABEL_56;
          }
          else
          {

          }
        }
        else
        {

          if (v58 >= v62)
            goto LABEL_56;
        }
        v64 = *(id *)v56;
        *(_QWORD *)v56 = 0;
        v65 = (void *)*(v54 - 4);
        *(v54 - 4) = v64;

        *((_DWORD *)v54 - 6) = *((_DWORD *)v56 + 2);
        *((_OWORD *)v54 - 1) = *((_OWORD *)v56 + 1);
        *v54 = *((_QWORD *)v56 + 4);
        v56 += 40;
LABEL_57:
        v52 = v91;
        v53 = v95;
        v54 += 5;
        if (v55 == (void **)v91)
        {
          if (v56 != (char *)v95)
          {
            v69 = 0;
            do
            {
              v70 = &v56[v69];
              v71 = &v54[v69 / 8];
              v72 = *(_QWORD *)&v56[v69];
              *(_QWORD *)&v56[v69] = 0;
              v73 = (void *)v54[v69 / 8 - 4];
              v54[v69 / 8 - 4] = v72;

              *((_DWORD *)v71 - 6) = *(_DWORD *)&v56[v69 + 8];
              *((_OWORD *)v71 - 1) = *(_OWORD *)&v56[v69 + 16];
              *v71 = *(_QWORD *)&v56[v69 + 32];
              v69 += 40;
            }
            while (v70 + 40 != (char *)v95);
          }
          goto LABEL_69;
        }
      }
    }
    if ((id *)a1 == a2)
      return;
    v21 = (id *)(a1 + 40);
    if ((id *)(a1 + 40) == a2)
      return;
    v88 = 0;
    v22 = a1;
LABEL_16:
    v23 = v22;
    v86 = v21;
    v93 = *v21;
    v24 = *(_DWORD *)(v22 + 48);
    v25 = *(_QWORD *)(v22 + 56);
    v26 = *(id *)v23;
    v27 = v26;
    v29 = (_OWORD *)(v23 + 16);
    v28 = *(_QWORD *)(v23 + 16);
    if (v25 == v28)
    {
      v31 = *(_DWORD *)(v23 + 8);
      if (v24 >= v31)
      {
        if (v24 != v31)
        {

          v22 = (uint64_t)v86;
          goto LABEL_42;
        }
        v50 = objc_msgSend(v93, "TTCompare:", v26);

        v22 = (uint64_t)v86;
        if (v50 != -1)
          goto LABEL_42;
      }
      else
      {

        v22 = (uint64_t)v86;
      }
    }
    else
    {

      v30 = v25 >= v28;
      v22 = (uint64_t)v86;
      if (v30)
        goto LABEL_42;
    }
    v94 = *(id *)v22;
    *(_QWORD *)v22 = 0;
    v90 = *(_DWORD *)(v23 + 48);
    v32 = *(_QWORD *)(v23 + 56);
    v33 = *(_QWORD *)(v23 + 64);
    v34 = *(_QWORD *)(v23 + 72);
    v35 = *(id *)v23;
    *(_QWORD *)v23 = 0;
    *(_QWORD *)v22 = v35;
    *(_DWORD *)(v22 + 8) = *(_DWORD *)(v23 + 8);
    *(_OWORD *)(v22 + 16) = *v29;
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
    if (v23 == v6)
    {
      v23 = v6;
      goto LABEL_41;
    }
    v84 = v34;
    v85 = v33;
    v36 = v6;
    v37 = v88;
    while (1)
    {
      v38 = v36;
      v39 = v36 + v37;
      v40 = v94;
      v41 = *(id *)(v36 + v37 - 40);
      v42 = v41;
      v43 = (unint64_t *)(v36 + v37 - 24);
      v44 = *v43;
      if (v32 == *v43)
      {
        v45 = *(_DWORD *)(v39 - 32);
        if (v90 >= v45)
        {
          if (v90 != v45)
          {

LABEL_39:
            v23 = v38 + v37;
            v6 = v38;
            v29 = (_OWORD *)(v23 + 16);
LABEL_40:
            v5 = a2;
            v34 = v84;
            v33 = v85;
            v22 = (uint64_t)v86;
LABEL_41:
            v51 = *(id *)v23;
            *(_QWORD *)v23 = v94;

            *(_DWORD *)(v23 + 8) = v90;
            *(_QWORD *)v29 = v32;
            *(_QWORD *)(v23 + 24) = v33;
            *(_QWORD *)(v23 + 32) = v34;
LABEL_42:
            v21 = (id *)(v22 + 40);
            v88 += 40;
            if ((id *)(v22 + 40) == v5)
              return;
            goto LABEL_16;
          }
          v46 = objc_msgSend(v40, "TTCompare:", v41);

          if (v46 != -1)
          {
            v6 = v38;
            goto LABEL_40;
          }
        }
        else
        {

        }
      }
      else
      {

        if (v32 >= v44)
          goto LABEL_39;
      }
      v29 = (_OWORD *)(v23 - 24);
      v47 = *(_QWORD *)(v39 - 40);
      *(_QWORD *)(v39 - 40) = 0;
      v36 = v38;
      v48 = v38 + v37;
      v49 = *(void **)(v38 + v37);
      *(_QWORD *)(v38 + v37) = v47;

      *(_DWORD *)(v48 + 8) = *(_DWORD *)(v39 - 32);
      *(_OWORD *)(v48 + 16) = *(_OWORD *)v43;
      *(_QWORD *)(v48 + 32) = *(_QWORD *)(v48 - 8);
      v23 -= 40;
      v37 -= 40;
      if (!v37)
      {
        v29 = (_OWORD *)(v38 + 16);
        v23 = v38;
        v6 = v38;
        goto LABEL_40;
      }
    }
  }
  v7 = (uint64_t)(a2 - 5);
  v92 = *(a2 - 5);
  v8 = *(_DWORD *)(v7 + 8);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(id *)v6;
  v11 = v10;
  v12 = *(_QWORD *)(v6 + 16);
  if (v9 != v12)
  {

    if (v9 >= v12)
      return;
    goto LABEL_12;
  }
  v20 = *(_DWORD *)(v6 + 8);
  if (v8 < v20)
  {

    goto LABEL_12;
  }
  if (v8 != v20)
  {

    return;
  }
  v74 = objc_msgSend(v92, "TTCompare:", v10);

  if (v74 == -1)
LABEL_12:
    std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100]((__n128 *)v6, v7);
}

void sub_1BD988904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, id *a2, unint64_t a3, char *a4)
{
  char *v4;
  id *v7;
  id v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  id *v12;
  id v13;
  id v14;
  unsigned int v15;
  id v16;
  void *v17;
  id v18;
  _OWORD *v19;
  BOOL v20;
  char *v21;
  id v22;
  id *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  unsigned int v29;
  id v30;
  void *v31;
  id v32;
  unsigned int v33;
  id v34;
  char *v35;
  id *v36;
  char *v37;
  id v38;
  unsigned int v39;
  id v40;
  id v41;
  void *v42;
  unint64_t v43;
  id *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  id *v54;
  uint64_t v55;
  uint64_t v56;
  id *v57;
  id v58;
  id v59;
  unsigned int v60;
  id v61;
  id v62;
  unsigned int v63;
  id v64;
  char *v65;
  void *v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  char *v71;
  id *v72;
  id v73;
  char *v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  id *v82;
  id v83;
  char *v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  _OWORD *v92;
  id *v95;
  id *v96;

  if (!a3)
    return;
  v4 = a4;
  v7 = (id *)a1;
  if (a3 == 2)
  {
    v11 = *(a2 - 5);
    v14 = *(a2 - 3);
    v12 = a2 - 3;
    v13 = v14;
    v15 = *((_DWORD *)v12 - 2);
    v16 = *v7;
    v17 = v16;
    v19 = v7 + 2;
    v18 = v7[2];
    if (v14 != v18)
    {

      v20 = v13 >= v18;
      v21 = a4;
      if (!v20)
        goto LABEL_60;
LABEL_68:
      v10 = v12 + 2;
      v86 = *v7;
      *v7 = 0;
      *(_QWORD *)v21 = v86;
      *((_DWORD *)v21 + 2) = *((_DWORD *)v7 + 2);
      *((_OWORD *)v21 + 1) = *v19;
      v87 = v7[4];
      v88 = (uint64_t)*(a2 - 5);
      *(a2 - 5) = 0;
      *((_QWORD *)v21 + 4) = v87;
      *((_QWORD *)v21 + 5) = v88;
      *((_DWORD *)v21 + 12) = *((_DWORD *)a2 - 8);
      v79 = *(_OWORD *)v12;
      goto LABEL_69;
    }
    v75 = *((_DWORD *)v7 + 2);
    if (v15 >= v75)
    {
      v21 = a4;
      if (v15 != v75)
      {

        goto LABEL_68;
      }
      v85 = objc_msgSend(v11, "TTCompare:", v16);

      if (v85 != -1)
        goto LABEL_68;
    }
    else
    {

      v21 = a4;
    }
LABEL_60:
    v10 = v7 + 4;
    v76 = (uint64_t)*(a2 - 5);
    *(a2 - 5) = 0;
    *(_QWORD *)v21 = v76;
    *((_DWORD *)v21 + 2) = *((_DWORD *)a2 - 8);
    *((_OWORD *)v21 + 1) = *(_OWORD *)v12;
    v77 = (uint64_t)*(a2 - 1);
    v78 = *v7;
    *v7 = 0;
    *((_QWORD *)v21 + 4) = v77;
    *((_QWORD *)v21 + 5) = v78;
    *((_DWORD *)v21 + 12) = *((_DWORD *)v7 + 2);
    v79 = *v19;
LABEL_69:
    *(_OWORD *)(v21 + 56) = v79;
    v9 = v21 + 72;
    goto LABEL_70;
  }
  if (a3 == 1)
  {
    v8 = *(id *)a1;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)a4 = v8;
    *((_DWORD *)a4 + 2) = *(_DWORD *)(a1 + 8);
    *((_OWORD *)a4 + 1) = *(_OWORD *)(a1 + 16);
    v9 = a4 + 32;
    v10 = (_QWORD *)(a1 + 32);
LABEL_70:
    *v9 = *v10;
    return;
  }
  if ((uint64_t)a3 > 8)
  {
    v54 = (id *)(a1 + 40 * (a3 >> 1));
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, v54, a3 >> 1, a4, a3 >> 1);
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(&v7[5 * (a3 >> 1)], a2, a3 - (a3 >> 1), &v4[40 * (a3 >> 1)], a3 - (a3 >> 1));
    v55 = 0;
    v56 = 0;
    v57 = &v7[5 * (a3 >> 1)];
    v96 = v57;
    while (1)
    {
      if (v57 == a2)
      {
        if (v7 != v54)
        {
          v80 = 0;
          v81 = &v4[v56];
          do
          {
            v82 = &v7[v80];
            v83 = v7[v80];
            *v82 = 0;
            *(_QWORD *)&v81[v80 * 8] = v83;
            v84 = &v4[v80 * 8 + v56];
            *((_DWORD *)v84 + 2) = v7[v80 + 1];
            *((_OWORD *)v84 + 1) = *(_OWORD *)&v7[v80 + 2];
            *(_QWORD *)&v81[v80 * 8 + 32] = v7[v80 + 4];
            v80 += 5;
          }
          while (v82 + 5 != v54);
        }
        return;
      }
      v58 = *v57;
      v59 = v57[2];
      v60 = *((_DWORD *)v57 + 2);
      v61 = *v7;
      v62 = v7[2];
      if (v59 == v62)
      {
        v63 = *((_DWORD *)v7 + 2);
        if (v60 >= v63)
        {
          if (v60 != v63)
          {

LABEL_52:
            v68 = *v7;
            *v7 = 0;
            v69 = &a4[v56];
            *(_QWORD *)v69 = v68;
            *((_DWORD *)v69 + 2) = *((_DWORD *)v7 + 2);
            v4 = a4;
            *((_OWORD *)v69 + 1) = *((_OWORD *)v7 + 1);
            *((_QWORD *)v69 + 4) = v7[4];
            v7 += 5;
            goto LABEL_53;
          }
          v66 = v61;
          v67 = objc_msgSend(v58, "TTCompare:", v61);

          if (v67 != -1)
            goto LABEL_52;
        }
        else
        {

        }
      }
      else
      {

        if (v59 >= v62)
          goto LABEL_52;
      }
      v64 = *v57;
      *v57 = 0;
      v4 = a4;
      v65 = &a4[v56];
      *(_QWORD *)v65 = v64;
      *((_DWORD *)v65 + 2) = *((_DWORD *)v57 + 2);
      *((_OWORD *)v65 + 1) = *((_OWORD *)v57 + 1);
      *((_QWORD *)v65 + 4) = v57[4];
      v57 += 5;
LABEL_53:
      v54 = v96;
      v56 += 40;
      --v55;
      if (v7 == v96)
      {
        if (v57 != a2)
        {
          v70 = 0;
          v71 = &v4[v56];
          do
          {
            v72 = &v57[v70];
            v73 = v57[v70];
            *v72 = 0;
            *(_QWORD *)&v71[v70 * 8] = v73;
            v74 = &v4[v70 * 8 + v56];
            *((_DWORD *)v74 + 2) = v57[v70 + 1];
            *((_OWORD *)v74 + 1) = *(_OWORD *)&v57[v70 + 2];
            *(_QWORD *)&v71[v70 * 8 + 32] = v57[v70 + 4];
            v70 += 5;
          }
          while (v72 + 5 != a2);
        }
        return;
      }
    }
  }
  if ((id *)a1 == a2)
    return;
  v22 = *(id *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)a4 = v22;
  *((_DWORD *)a4 + 2) = *(_DWORD *)(a1 + 8);
  *((_OWORD *)a4 + 1) = *(_OWORD *)(a1 + 16);
  *((_QWORD *)a4 + 4) = *(_QWORD *)(a1 + 32);
  v23 = (id *)(a1 + 40);
  if ((id *)(a1 + 40) == a2)
    return;
  v24 = 0;
  v25 = 1;
  v26 = a4;
  do
  {
    v95 = v23;
    v27 = *v23;
    v28 = v7[7];
    v91 = v7 + 7;
    v29 = *((_DWORD *)v7 + 12);
    v30 = *(id *)v26;
    v31 = v30;
    v32 = (id)*((_QWORD *)v26 + 2);
    v92 = v26 + 16;
    if (v28 == v32)
    {
      v33 = *((_DWORD *)v26 + 2);
      if (v29 >= v33)
      {
        if (v29 != v33)
        {

LABEL_34:
          v36 = v95;
          v51 = *v95;
          *v95 = 0;
          *((_QWORD *)v26 + 5) = v51;
          *((_DWORD *)v26 + 12) = *((_DWORD *)v7 + 12);
          *(_OWORD *)(v26 + 56) = *v91;
          *((_QWORD *)v26 + 9) = v7[9];
          ++v25;
          goto LABEL_38;
        }
        v50 = objc_msgSend(v27, "TTCompare:", v30);

        if (v50 != -1)
          goto LABEL_34;
      }
      else
      {

      }
    }
    else
    {

      if (v28 >= v32)
        goto LABEL_34;
    }
    v34 = *(id *)v26;
    *(_QWORD *)v26 = 0;
    *((_QWORD *)v26 + 5) = v34;
    *((_DWORD *)v26 + 12) = *((_DWORD *)v26 + 2);
    *(_OWORD *)(v26 + 56) = *v92;
    *((_QWORD *)v26 + 9) = *((_QWORD *)v26 + 4);
    ++v25;
    v35 = v4;
    v36 = v95;
    if (v26 == v4)
      goto LABEL_37;
    v89 = v24;
    v90 = v25;
    while (1)
    {
      v37 = &v4[v24];
      v38 = *v36;
      v39 = *((_DWORD *)v7 + 12);
      v40 = v7[7];
      v41 = *(id *)&v4[v24 - 40];
      v42 = v41;
      v44 = (id *)&v4[v24 - 24];
      v43 = (unint64_t)*v44;
      if (v40 != *v44)
      {

        v20 = (unint64_t)v40 >= v43;
        v4 = a4;
        if (v20)
          goto LABEL_35;
        goto LABEL_29;
      }
      v45 = *((_DWORD *)v37 - 8);
      if (v39 < v45)
      {

        v4 = a4;
        goto LABEL_29;
      }
      v4 = a4;
      if (v39 != v45)
      {

LABEL_35:
        v35 = &v4[v24];
        goto LABEL_36;
      }
      v46 = objc_msgSend(v38, "TTCompare:", v41);

      if (v46 != -1)
        break;
LABEL_29:
      v26 -= 40;
      v47 = *((_QWORD *)v37 - 5);
      *((_QWORD *)v37 - 5) = 0;
      v48 = &v4[v24];
      v49 = *(void **)&v4[v24];
      *(_QWORD *)&v4[v24] = v47;

      *((_DWORD *)v48 + 2) = *((_DWORD *)v37 - 8);
      *((_OWORD *)v48 + 1) = *(_OWORD *)v44;
      *((_QWORD *)v48 + 4) = *((_QWORD *)v37 - 1);
      v24 -= 40;
      v36 = v95;
      if (!v24)
      {
        v35 = v4;
        v24 = v89;
        v25 = v90;
        goto LABEL_37;
      }
    }
    v35 = v26;
LABEL_36:
    v24 = v89;
    v25 = v90;
    v36 = v95;
LABEL_37:
    v52 = *v36;
    *v36 = 0;
    v53 = *(void **)v35;
    *(_QWORD *)v35 = v52;

    *((_DWORD *)v35 + 2) = *((_DWORD *)v7 + 12);
    *((_OWORD *)v35 + 1) = *v91;
    *((_QWORD *)v35 + 4) = v7[9];
LABEL_38:
    v26 = (char *)v92 + 24;
    v23 = v36 + 5;
    v24 += 40;
    v7 = v36;
  }
  while (v36 + 5 != a2);
}

void sub_1BD988FE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  unint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  BOOL v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *v26;
  unint64_t v27;
  unint64_t v28;
  id *v29;
  id v30;
  unsigned int v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  unsigned int v48;
  unint64_t v49;
  id v50;
  void *v51;
  unint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void **v59;
  _QWORD *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  _OWORD *v66;
  unint64_t v67;
  unsigned int v68;
  id v69;
  _OWORD *v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void **v79;
  _QWORD *v80;
  void *v81;
  void **v82;
  id v83;
  void *v84;
  unsigned int v85;
  id v86;
  void *v87;
  void *v88;
  unsigned int v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  _QWORD v113[4];

  v101 = a5;
  if (!a5)
    return;
  while (1)
  {
    v111 = a1;
    if (v101 <= a7 || a4 <= a7)
      break;
    if (!a4)
      return;
    v9 = 0;
    v10 = -a4;
    while (1)
    {
      v11 = a1 + v9;
      v12 = a2;
      v13 = *(id *)a2;
      v14 = *(_DWORD *)(a2 + 8);
      v15 = *(_QWORD *)(a2 + 16);
      v16 = *(id *)v11;
      v17 = v16;
      v18 = *(_QWORD *)(v11 + 16);
      if (v15 == v18)
        break;

      v19 = v15 >= v18;
      a1 = v111;
      if (!v19)
        goto LABEL_17;
LABEL_13:
      v9 += 40;
      v19 = __CFADD__(v10++, 1);
      if (v19)
        return;
    }
    v20 = *(_DWORD *)(v11 + 8);
    if (v14 >= v20)
    {
      a1 = v111;
      if (v14 == v20)
      {
        v21 = objc_msgSend(v13, "TTCompare:", v16);

        if (v21 == -1)
          goto LABEL_17;
      }
      else
      {

      }
      goto LABEL_13;
    }

    a1 = v111;
LABEL_17:
    v22 = -v10;
    v97 = a1 + v9;
    if (-v10 >= v101)
    {
      if (v10 == -1)
      {
        std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100]((__n128 *)(a1 + v9), a2);
        return;
      }
      if (v10 > 0)
        v22 = 1 - v10;
      v96 = v22 >> 1;
      v105 = (id *)(a1 + 40 * (v22 >> 1) + v9);
      v25 = a2;
      if (a2 == a3)
      {
LABEL_39:
        a1 = v111;
        v12 = a2;
        v24 = 0xCCCCCCCCCCCCCCCDLL * ((v25 - a2) >> 3);
        v38 = v96;
        v26 = (__n128 *)(v111 + 40 * v96 + v9);
        goto LABEL_40;
      }
      v25 = a2;
      v44 = 0xCCCCCCCCCCCCCCCDLL * ((a3 - a2) >> 3);
      v103 = v111 + 40 * v96 + v9;
      while (2)
      {
        v45 = v44 >> 1;
        v108 = v25;
        v46 = v25 + 40 * (v44 >> 1);
        v47 = *(id *)v46;
        v48 = *(_DWORD *)(v46 + 8);
        v49 = *(_QWORD *)(v46 + 16);
        v50 = *v105;
        v51 = v50;
        v52 = *(_QWORD *)(v103 + 16);
        if (v49 == v52)
        {
          v53 = *(_DWORD *)(v103 + 8);
          if (v48 < v53)
          {

            goto LABEL_55;
          }
          if (v48 == v53)
          {
            v25 = v108;
            v54 = objc_msgSend(v47, "TTCompare:", v50);

            if (v54 == -1)
            {
LABEL_55:
              v25 = v46 + 40;
              v45 = v44 + ~v45;
            }
          }
          else
          {

            v25 = v108;
          }
        }
        else
        {

          v19 = v49 >= v52;
          v25 = v108;
          if (!v19)
            goto LABEL_55;
        }
        v44 = v45;
        if (!v45)
          goto LABEL_39;
        continue;
      }
    }
    if (v101 >= 0)
      v23 = v101;
    else
      v23 = v101 + 1;
    v24 = v23 >> 1;
    v25 = a2 + 40 * (v23 >> 1);
    v26 = (__n128 *)(a1 + v9);
    v105 = (id *)(a1 + v9);
    if (a2 - a1 != v9)
    {
      v102 = v23 >> 1;
      v105 = (id *)(a1 + v9);
      v27 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1 - v9) >> 3);
      v107 = a2 + 40 * (v23 >> 1);
      while (1)
      {
        v28 = v27 >> 1;
        v29 = &v105[5 * (v27 >> 1)];
        v30 = *(id *)v25;
        v31 = *(_DWORD *)(v25 + 8);
        v32 = *(id *)(v25 + 16);
        v33 = *v29;
        v34 = v33;
        v35 = v29[2];
        if (v32 != v35)
          break;
        v36 = *((_DWORD *)v29 + 2);
        if (v31 >= v36)
        {
          v25 = v107;
          if (v31 != v36)
          {

LABEL_31:
            v105 = v29 + 5;
            v28 = v27 + ~v28;
            goto LABEL_32;
          }
          v37 = objc_msgSend(v30, "TTCompare:", v33);

          if (v37 != -1)
            goto LABEL_31;
        }
        else
        {

          v25 = v107;
        }
LABEL_32:
        v27 = v28;
        if (!v28)
        {
          v24 = v102;
          v26 = (__n128 *)v105;
          a1 = v111;
          v12 = a2;
          goto LABEL_34;
        }
      }

      v19 = v32 >= v35;
      v25 = v107;
      if (!v19)
        goto LABEL_32;
      goto LABEL_31;
    }
LABEL_34:
    v38 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v26 - a1 - v9) >> 3);
LABEL_40:
    v39 = v25;
    if (v105 != (id *)v12)
    {
      v39 = (uint64_t)v26;
      if (v25 != v12)
      {
        v40 = v38;
        v41 = std::__rotate_forward[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v26, v12, v25);
        v38 = v40;
        v39 = (uint64_t)v41;
      }
    }
    a4 = -(uint64_t)(v38 + v10);
    v42 = v101 - v24;
    if ((uint64_t)(v38 + v24) >= (uint64_t)(v101 - (v38 + v24) - v10))
    {
      v43 = v38;
      std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v39, v25, a3, -(uint64_t)(v38 + v10), v101 - v24, a6, a7);
      v25 = (uint64_t)v26;
      v42 = v24;
      a4 = v43;
      a3 = v39;
      a1 = v97;
    }
    else
    {
      std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1 + v9, v26, v39, v38, v24, a6, a7);
      a1 = v39;
    }
    v101 = v42;
    a2 = v25;
    if (!v42)
      return;
  }
  if (a4 <= v101)
  {
    if (a1 == a2)
      return;
    v78 = 0;
    v56 = 0;
    v57 = (uint64_t)a6;
    do
    {
      v79 = &a6[v78 / 8];
      v80 = (_QWORD *)(a1 + v78);
      v81 = *(void **)(a1 + v78);
      *v80 = 0;
      *v79 = v81;
      *((_DWORD *)v79 + 2) = *(_DWORD *)(a1 + v78 + 8);
      *((_OWORD *)v79 + 1) = *(_OWORD *)(a1 + v78 + 16);
      v79[4] = *(void **)(a1 + v78 + 32);
      ++v56;
      v78 += 40;
    }
    while (v80 + 5 != (_QWORD *)a2);
    if (!v78)
      goto LABEL_102;
    v110 = (uint64_t *)&a6[v78 / 8];
    v82 = a6;
    while (1)
    {
      if (a2 == a3)
      {
        std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *>((uint64_t)v113, (uint64_t *)v82, v110, a1);
        goto LABEL_102;
      }
      v83 = *(id *)a2;
      v84 = *(void **)(a2 + 16);
      v85 = *(_DWORD *)(a2 + 8);
      v86 = *v82;
      v87 = v86;
      v88 = v82[2];
      if (v84 == v88)
      {
        v89 = *((_DWORD *)v82 + 2);
        if (v85 >= v89)
        {
          if (v85 != v89)
          {

LABEL_96:
            v93 = (uint64_t)*v82;
            *v82 = 0;
            v94 = *(void **)a1;
            *(_QWORD *)a1 = v93;

            *(_DWORD *)(a1 + 8) = *((_DWORD *)v82 + 2);
            *(_OWORD *)(a1 + 16) = *((_OWORD *)v82 + 1);
            *(_QWORD *)(a1 + 32) = v82[4];
            v82 += 5;
            goto LABEL_97;
          }
          v92 = objc_msgSend(v83, "TTCompare:", v86);

          if (v92 != -1)
            goto LABEL_96;
        }
        else
        {

        }
      }
      else
      {

        if (v84 >= v88)
          goto LABEL_96;
      }
      v90 = *(id *)a2;
      *(_QWORD *)a2 = 0;
      v91 = *(void **)a1;
      *(_QWORD *)a1 = v90;

      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      a2 += 40;
LABEL_97:
      v57 = (uint64_t)a6;
      a1 += 40;
      if (v110 == (uint64_t *)v82)
        goto LABEL_102;
    }
  }
  if (a3 == a2)
    return;
  v55 = 0;
  v56 = 0;
  v58 = a3;
  v57 = (uint64_t)a6;
  do
  {
    v59 = &a6[v55 / 8];
    v60 = (_QWORD *)(a2 + v55);
    v61 = *(void **)(a2 + v55);
    *v60 = 0;
    *v59 = v61;
    *((_DWORD *)v59 + 2) = *(_DWORD *)(a2 + v55 + 8);
    *((_OWORD *)v59 + 1) = *(_OWORD *)(a2 + v55 + 16);
    v59[4] = *(void **)(a2 + v55 + 32);
    ++v56;
    v55 += 40;
  }
  while (v60 + 5 != (_QWORD *)a3);
  if (!v55)
    goto LABEL_102;
  v62 = (uint64_t)&a6[v55 / 8];
  v63 = a3 - 40;
  v104 = (uint64_t)&a6[v55 / 8];
  while (a2 != a1)
  {
    v106 = v62 - 40;
    v64 = *(id *)(v62 - 40);
    v109 = v62;
    v67 = *(_QWORD *)(v62 - 24);
    v66 = (_OWORD *)(v62 - 24);
    v65 = v67;
    v68 = *((_DWORD *)v66 - 2);
    v69 = *(id *)(a2 - 40);
    v70 = (_OWORD *)(a2 - 24);
    v71 = *(_QWORD *)(a2 - 24);
    if (v67 == v71)
    {
      v73 = *(_DWORD *)(a2 - 32);
      if (v68 < v73)
      {

        v72 = a2;
        a2 -= 40;
        v57 = (uint64_t)a6;
        goto LABEL_74;
      }
      if (v68 != v73)
      {

        v57 = (uint64_t)a6;
LABEL_78:
        v70 = v66;
        v62 = v106;
        v72 = v109;
        goto LABEL_79;
      }
      v74 = v69;
      v75 = objc_msgSend(v64, "TTCompare:", v69);

      v57 = (uint64_t)a6;
      if (v75 != -1)
        goto LABEL_78;
    }
    else
    {

      v19 = v65 >= v71;
      v57 = (uint64_t)a6;
      if (v19)
        goto LABEL_78;
    }
    v72 = a2;
    a2 -= 40;
LABEL_74:
    v62 = v109;
LABEL_79:
    v76 = *(_QWORD *)(v72 - 40);
    *(_QWORD *)(v72 - 40) = 0;
    v77 = *(void **)v63;
    *(_QWORD *)v63 = v76;

    *(_DWORD *)(v63 + 8) = *(_DWORD *)(v72 - 32);
    *(_OWORD *)(v63 + 16) = *v70;
    *(_QWORD *)(v63 + 32) = *(_QWORD *)(v72 - 8);
    v58 -= 40;
    v63 -= 40;
    a1 = v111;
    if (v62 == v57)
      goto LABEL_102;
  }
  std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>,0>(v104, v62, v57, a3, v58, v113);
LABEL_102:
  if (v57)
  {
    do
    {
      v95 = *a6;
      a6 += 5;

      --v56;
    }
    while (v56);
  }
}

void sub_1BD989880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  uint64_t v13;
  void **v15;
  void *v16;

  if (a13)
  {
    v15 = a13;
    do
    {
      v16 = *v15;
      v15 += 5;

      --v13;
    }
    while (v13);
  }
  _Unwind_Resume(exception_object);
}

__n128 std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](__n128 *a1, uint64_t a2)
{
  unint64_t v4;
  unsigned __int32 v5;
  void *v6;
  void *v7;
  void *v8;
  __n128 result;
  unint64_t v10;
  __n128 v11;

  v4 = a1->n128_u64[0];
  a1->n128_u64[0] = 0;
  v5 = a1->n128_u32[2];
  v11 = a1[1];
  v6 = *(void **)a2;
  *(_QWORD *)a2 = 0;
  v7 = (void *)a1->n128_u64[0];
  a1->n128_u64[0] = (unint64_t)v6;

  a1->n128_u32[2] = *(_DWORD *)(a2 + 8);
  a1[1] = *(__n128 *)(a2 + 16);
  v8 = *(void **)a2;
  *(_QWORD *)a2 = v4;

  *(_DWORD *)(a2 + 8) = v5;
  result = v11;
  *(__n128 *)(a2 + 16) = v11;
  v10 = a1[2].n128_u64[0];
  a1[2].n128_u64[0] = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = v10;
  return result;
}

uint64_t *std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = a2;
  if (a2 == a3)
    return a2;
  v6 = a3;
  do
  {
    v7 = *v5;
    *v5 = 0;
    v8 = *(void **)a4;
    *(_QWORD *)a4 = v7;

    *(_DWORD *)(a4 + 8) = *((_DWORD *)v5 + 2);
    *(_OWORD *)(a4 + 16) = *((_OWORD *)v5 + 1);
    *(_QWORD *)(a4 + 32) = v5[4];
    a4 += 40;
    v5 += 5;
  }
  while (v5 != v6);
  return v6;
}

void std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>,0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v6 = a5;
  v8 = a2;
  if (a2 != a3)
  {
    v12 = a5 - 40;
    do
    {
      v13 = *(_QWORD *)(v8 - 40);
      v8 -= 40;
      *(_QWORD *)v8 = 0;
      v14 = *(void **)v12;
      *(_QWORD *)v12 = v13;

      *(_DWORD *)(v12 + 8) = *(_DWORD *)(v8 + 8);
      *(_OWORD *)(v12 + 16) = *(_OWORD *)(v8 + 16);
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v8 + 32);
      v6 -= 40;
      v12 -= 40;
    }
    while (v8 != a3);
    v8 = a3;
  }
  *a6 = a1;
  a6[1] = v8;
  a6[2] = a4;
  a6[3] = v6;
}

__n128 *std::__rotate_forward[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(__n128 *a1, uint64_t a2, uint64_t a3)
{
  __n128 *v4;
  __n128 *v6;
  uint64_t i;
  __n128 *v8;
  uint64_t v9;

  v4 = (__n128 *)a2;
  std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](a1, a2);
  v6 = (__n128 *)((char *)a1 + 40);
  for (i = (uint64_t)&v4[2].n128_i64[1]; i != a3; i += 40)
  {
    if (v6 == v4)
      v4 = (__n128 *)i;
    std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](v6, i);
    v6 = (__n128 *)((char *)v6 + 40);
  }
  if (v6 != v4)
  {
    v8 = v6;
    v9 = (uint64_t)v4;
    do
    {
      while (1)
      {
        std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](v8, v9);
        v8 = (__n128 *)((char *)v8 + 40);
        v9 += 40;
        if (v9 == a3)
          break;
        if (v8 == v4)
          v4 = (__n128 *)v9;
      }
      v9 = (uint64_t)v4;
    }
    while (v8 != v4);
  }
  return v6;
}

void std::__split_buffer<TopoSubstring **>::push_front(uint64_t a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;

  v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    v6 = a1 + 24;
    v7 = *(_BYTE **)(a1 + 24);
    v8 = *(_BYTE **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4)
        v12 = 1;
      else
        v12 = (v7 - v4) >> 2;
      v13 = 2 * v12;
      v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v6, v12);
      v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      v16 = *(uint64_t **)(a1 + 8);
      v17 = v5;
      v18 = *(_QWORD *)(a1 + 16) - (_QWORD)v16;
      if (v18)
      {
        v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        v19 = 8 * (v18 >> 3);
        v20 = v5;
        do
        {
          v21 = *v16++;
          *(_QWORD *)v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      v22 = *(char **)a1;
      *(_QWORD *)a1 = v14;
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v17;
      *(_QWORD *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      v9 = (v7 - v8) >> 3;
      if (v9 >= -1)
        v10 = v9 + 1;
      else
        v10 = v9 + 2;
      v11 = v10 >> 1;
      v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        v4 = *(char **)(a1 + 16);
      }
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    v5 = *(char **)(a1 + 8);
  }
  *((_QWORD *)v5 - 1) = *a2;
  *(_QWORD *)(a1 + 8) -= 8;
}

{
  char *v4;
  char *v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    v6 = *(_BYTE **)(a1 + 16);
    v7 = *(_BYTE **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4)
        v11 = 1;
      else
        v11 = (v7 - v4) >> 2;
      v12 = 2 * v11;
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(*(_QWORD *)(a1 + 32), v11);
      v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      v15 = *(uint64_t **)(a1 + 8);
      v16 = v5;
      v17 = *(_QWORD *)(a1 + 16) - (_QWORD)v15;
      if (v17)
      {
        v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        v18 = 8 * (v17 >> 3);
        v19 = v5;
        do
        {
          v20 = *v15++;
          *(_QWORD *)v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      v21 = *(char **)a1;
      *(_QWORD *)a1 = v13;
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      v8 = (v7 - v6) >> 3;
      if (v8 >= -1)
        v9 = v8 + 1;
      else
        v9 = v8 + 2;
      v10 = v9 >> 1;
      v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        v4 = *(char **)(a1 + 16);
      }
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    v5 = *(char **)(a1 + 8);
  }
  *((_QWORD *)v5 - 1) = *a2;
  *(_QWORD *)(a1 + 8) -= 8;
}

uint64_t std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v7;

  v3 = a1[1];
  v2 = a1[2];
  if (v2 == v3)
    v4 = 0;
  else
    v4 = ((v2 - v3) << 6) - 1;
  v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x200)
    a2 = 1;
  if (v5 < 0x400)
    v7 = a2;
  else
    v7 = 0;
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

uint64_t std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[5];

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v14[4] = a1 + 2;
  if (v9)
    v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>(v7, v9);
  else
    v10 = 0;
  v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[24 * v9];
  *(_QWORD *)v11 = *(id *)a2;
  *((_DWORD *)v11 + 2) = *(_DWORD *)(a2 + 8);
  *((_DWORD *)v11 + 4) = *(_DWORD *)(a2 + 16);
  v14[2] = v11 + 24;
  std::vector<TopoIDRange>::__swap_out_circular_buffer(a1, v14);
  v12 = a1[1];
  std::__split_buffer<TopoIDRange>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1BD98A020(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<TopoIDRange>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<TopoIDRange>::__swap_out_circular_buffer(uint64_t *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *result;
  v2 = result[1];
  v4 = a2[1];
  while (v2 != v3)
  {
    v5 = *(_QWORD *)(v2 - 24);
    v2 -= 24;
    *(_QWORD *)v2 = 0;
    *(_QWORD *)(v4 - 24) = v5;
    v4 -= 24;
    *(_DWORD *)(v4 + 8) = *(_DWORD *)(v2 + 8);
    *(_DWORD *)(v4 + 16) = *(_DWORD *)(v2 + 16);
  }
  a2[1] = v4;
  v6 = *result;
  *result = v4;
  a2[1] = v6;
  v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(24 * a2);
}

uint64_t std::__split_buffer<TopoIDRange>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 24;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

char *std::vector<TopoSubstring *>::__assign_with_size[abi:ne180100]<TopoSubstring * const*,TopoSubstring * const*>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 3)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 2;
    if (v8 >> 2 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = std::vector<TopoSubstring *>::__vallocate[abi:ne180100](v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 3;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

char *std::vector<TopoSubstring *>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

uint64_t std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v2 = *a2;
  *a2 = 0;
  *(_QWORD *)result = v2;
  *(_QWORD *)(result + 8) = a2[1];
  a2[1] = 0;
  v5 = a2[2];
  v3 = a2 + 2;
  v4 = v5;
  *(_QWORD *)(result + 16) = v5;
  v6 = v3[1];
  *(_QWORD *)(result + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    v7 = *(_QWORD *)(v4 + 8);
    v8 = *(_QWORD *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v7 %= v8;
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(_QWORD *)(v2 + 8 * v7) = result + 16;
    *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<_NSRange>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(16 * a2);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::__push_back_slow_path<std::pair<TopoID,TopoID> const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[5];

  v3 = *a1;
  v4 = (a1[1] - *a1) >> 5;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59)
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  v7 = (uint64_t)(a1 + 2);
  v8 = a1[2] - v3;
  if (v8 >> 4 > v5)
    v5 = v8 >> 4;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0)
    v9 = 0x7FFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  v14[4] = a1 + 2;
  if (v9)
    v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(v7, v9);
  else
    v10 = 0;
  v11 = &v10[32 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[32 * v9];
  *(_QWORD *)v11 = *(id *)a2;
  *((_DWORD *)v11 + 2) = *(_DWORD *)(a2 + 8);
  *((_QWORD *)v11 + 2) = *(id *)(a2 + 16);
  *((_DWORD *)v11 + 6) = *(_DWORD *)(a2 + 24);
  v14[2] = v11 + 32;
  std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(a1, v14);
  v12 = a1[1];
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1BD98A408(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(32 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  char v15;
  __int128 v16;
  __int128 v17;

  *(_QWORD *)&v17 = a6;
  *((_QWORD *)&v17 + 1) = a7;
  v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  if (a3 == a5)
  {
    v12 = a6;
  }
  else
  {
    v7 = 0;
    do
    {
      v8 = a7 + v7;
      v9 = a3 + v7;
      v10 = *(_QWORD *)(a3 + v7 - 32);
      *(_QWORD *)(v9 - 32) = 0;
      *(_QWORD *)(v8 - 32) = v10;
      *(_DWORD *)(v8 - 24) = *(_DWORD *)(a3 + v7 - 24);
      v11 = *(_QWORD *)(a3 + v7 - 16);
      *(_QWORD *)(v9 - 16) = 0;
      *(_QWORD *)(v8 - 16) = v11;
      *(_DWORD *)(v8 - 8) = *(_DWORD *)(a3 + v7 - 8);
      v7 -= 32;
    }
    while (a3 + v7 != a5);
    *((_QWORD *)&v17 + 1) = a7 + v7;
    v12 = v17;
  }
  v15 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v14);
  return v12;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[8];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v2 = v1[1];
  v14 = v3;
  v15 = v2;
  v16 = v3;
  v17 = v2;
  v4 = *a1;
  v5 = (uint64_t *)a1[1];
  v7 = *v5;
  v6 = v5[1];
  v9 = v7;
  v10 = v6;
  v11 = v7;
  v12 = v6;
  std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>>(v4, (uint64_t)v13, (uint64_t)v8);
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id *i;

  for (i = *(id **)(a2 + 32); i != *(id **)(a3 + 32); *(_QWORD *)(a2 + 32) = i)
  {

    i = (id *)(*(_QWORD *)(a2 + 32) + 32);
  }
}

void std::__split_buffer<std::pair<TopoID,TopoID>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t i;

  for (i = *(_QWORD *)(a1 + 16); i != a2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 32;

  }
}

LABEL_1:
  v8 = a1;
  while (2)
  {
    a1 = v8;
    v9 = (uint64_t)a2 - v8;
    v10 = (uint64_t)((uint64_t)a2 - v8) >> 4;
    switch(v10)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        v32 = *((_QWORD *)a2 - 2);
        v31 = a2 - 1;
        if (*(_QWORD *)v8 < v32)
        {
          v85 = *(_OWORD *)v8;
          *(_OWORD *)v8 = *v31;
          *v31 = v85;
        }
        return;
      case 3uLL:
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)v8, (unint64_t *)(v8 + 16), (unint64_t *)a2 - 2);
        return;
      case 4uLL:
        std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)v8, (unint64_t *)(v8 + 16), (unint64_t *)(v8 + 32), a2 - 1);
        return;
      case 5uLL:
        v33 = (__int128 *)(v8 + 16);
        v34 = (__int128 *)(v8 + 32);
        v35 = (__int128 *)(v8 + 48);
        std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)v8, (unint64_t *)(v8 + 16), (unint64_t *)(v8 + 32), (_OWORD *)(v8 + 48));
        v37 = *((_QWORD *)a2 - 2);
        v36 = a2 - 1;
        if (*(_QWORD *)(v8 + 48) < v37)
        {
          v38 = *v35;
          *v35 = *v36;
          *v36 = v38;
          if (*(_QWORD *)v34 < *(_QWORD *)v35)
          {
            v39 = *v34;
            *v34 = *v35;
            *v35 = v39;
            if (*(_QWORD *)v33 < *(_QWORD *)v34)
            {
              v40 = *v33;
              *v33 = *v34;
              *v34 = v40;
              if (*(_QWORD *)v8 < *(_QWORD *)(v8 + 16))
              {
                v86 = *(_OWORD *)v8;
                *(_OWORD *)v8 = *v33;
                *v33 = v86;
              }
            }
          }
        }
        return;
      default:
        if (v9 <= 383)
        {
          v41 = (__int128 *)(v8 + 16);
          v43 = (__int128 *)v8 == a2 || v41 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v43)
            {
              v44 = 0;
              v45 = (unint64_t *)v8;
              do
              {
                v46 = v41;
                v47 = v45[2];
                if (*v45 < v47)
                {
                  v48 = v45[3];
                  v49 = v44;
                  while (1)
                  {
                    *(_OWORD *)(v8 + v49 + 16) = *(_OWORD *)(v8 + v49);
                    if (!v49)
                      break;
                    v50 = *(_QWORD *)(v8 + v49 - 16);
                    v49 -= 16;
                    if (v50 >= v47)
                    {
                      v51 = (_QWORD *)(v8 + v49 + 16);
                      goto LABEL_76;
                    }
                  }
                  v51 = (_QWORD *)v8;
LABEL_76:
                  *v51 = v47;
                  v51[1] = v48;
                }
                v41 = v46 + 1;
                v44 += 16;
                v45 = (unint64_t *)v46;
              }
              while (v46 + 1 != a2);
            }
          }
          else if (!v43)
          {
            do
            {
              v77 = (uint64_t)v41;
              v78 = *(_QWORD *)(a1 + 16);
              if (*(_QWORD *)a1 < v78)
              {
                v79 = *(_QWORD *)(a1 + 24);
                v80 = v77;
                do
                {
                  *(_OWORD *)v80 = *(_OWORD *)(v80 - 16);
                  v81 = *(_QWORD *)(v80 - 32);
                  v80 -= 16;
                }
                while (v81 < v78);
                *(_QWORD *)v80 = v78;
                *(_QWORD *)(v80 + 8) = v79;
              }
              v41 = (__int128 *)(v77 + 16);
              a1 = v77;
            }
            while ((__int128 *)(v77 + 16) != a2);
          }
          return;
        }
        if (!a3)
        {
          if ((__int128 *)v8 != a2)
          {
            v52 = (v10 - 2) >> 1;
            v53 = v52;
            do
            {
              v54 = v53;
              if (v52 >= v53)
              {
                v55 = (2 * v53) | 1;
                v56 = (unint64_t *)(v8 + 16 * v55);
                v57 = *v56;
                if (2 * v54 + 2 < (uint64_t)v10 && v56[2] < v57)
                {
                  v57 = v56[2];
                  v56 += 2;
                  v55 = 2 * v54 + 2;
                }
                v58 = (__int128 *)(v8 + 16 * v54);
                v59 = *v58;
                v60 = *(_QWORD *)v58;
                if (*(_QWORD *)v58 >= v57)
                {
                  do
                  {
                    v61 = (__int128 *)v56;
                    *v58 = *(_OWORD *)v56;
                    if (v52 < v55)
                      break;
                    v62 = (2 * v55) | 1;
                    v56 = (unint64_t *)(v8 + 16 * v62);
                    v55 = 2 * v55 + 2;
                    v63 = *v56;
                    if (v55 >= (uint64_t)v10)
                    {
                      v55 = v62;
                    }
                    else if (v56[2] >= v63)
                    {
                      v55 = v62;
                    }
                    else
                    {
                      v63 = v56[2];
                      v56 += 2;
                    }
                    v58 = v61;
                  }
                  while (v60 >= v63);
                  *v61 = v59;
                }
              }
              v53 = v54 - 1;
            }
            while (v54);
            v64 = (unint64_t)v9 >> 4;
            do
            {
              v65 = 0;
              v87 = *(_OWORD *)v8;
              v66 = (_OWORD *)v8;
              do
              {
                v67 = &v66[v65 + 1];
                v68 = (2 * v65) | 1;
                v69 = 2 * v65 + 2;
                if (v69 < v64 && *((_QWORD *)v67 + 2) < *(_QWORD *)v67)
                {
                  ++v67;
                  v68 = v69;
                }
                *v66 = *v67;
                v66 = v67;
                v65 = v68;
              }
              while (v68 <= (uint64_t)((unint64_t)(v64 - 2) >> 1));
              if (v67 == --a2)
              {
                *v67 = v87;
              }
              else
              {
                *v67 = *a2;
                *a2 = v87;
                v70 = (uint64_t)v67 - v8 + 16;
                if (v70 >= 17)
                {
                  v71 = (((unint64_t)v70 >> 4) - 2) >> 1;
                  v72 = (__int128 *)(v8 + 16 * v71);
                  v73 = *(_QWORD *)v67;
                  if (*(_QWORD *)v67 < *(_QWORD *)v72)
                  {
                    v74 = *((_QWORD *)v67 + 1);
                    do
                    {
                      v75 = v72;
                      *v67 = *v72;
                      if (!v71)
                        break;
                      v71 = (v71 - 1) >> 1;
                      v72 = (__int128 *)(v8 + 16 * v71);
                      v67 = v75;
                    }
                    while (v73 < *(_QWORD *)v72);
                    *(_QWORD *)v75 = v73;
                    *((_QWORD *)v75 + 1) = v74;
                  }
                }
              }
            }
            while (v64-- > 2);
          }
          return;
        }
        v11 = v10 >> 1;
        v12 = (unint64_t *)(v8 + 16 * (v10 >> 1));
        if ((unint64_t)v9 < 0x801)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)(a1 + 16 * (v10 >> 1)), (unint64_t *)a1, (unint64_t *)a2 - 2);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)a1, (unint64_t *)(a1 + 16 * (v10 >> 1)), (unint64_t *)a2 - 2);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)(a1 + 16), v12 - 2, (unint64_t *)a2 - 4);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)(a1 + 32), (unint64_t *)(a1 + 16 + 16 * v11), (unint64_t *)a2 - 6);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)v12 - 1, v12, (unint64_t *)(a1 + 16 + 16 * v11));
          v82 = *(_OWORD *)a1;
          *(_OWORD *)a1 = *(_OWORD *)v12;
          *(_OWORD *)v12 = v82;
        }
        --a3;
        v13 = *(_QWORD *)a1;
        if ((a4 & 1) == 0)
        {
          v14 = *(_QWORD *)(a1 + 8);
          if (v13 < *(_QWORD *)(a1 - 16))
            goto LABEL_11;
          if (*((_QWORD *)a2 - 2) >= v13)
          {
            v26 = a1 + 16;
            do
            {
              v8 = v26;
              if (v26 >= (unint64_t)a2)
                break;
              v26 += 16;
            }
            while (*(_QWORD *)v8 >= v13);
          }
          else
          {
            v8 = a1;
            do
            {
              v25 = *(_QWORD *)(v8 + 16);
              v8 += 16;
            }
            while (v25 >= v13);
          }
          v27 = a2;
          if (v8 < (unint64_t)a2)
          {
            v27 = a2;
            do
              v28 = *((_QWORD *)v27-- - 2);
            while (v28 < v13);
          }
          while (v8 < (unint64_t)v27)
          {
            v84 = *(_OWORD *)v8;
            *(_OWORD *)v8 = *v27;
            *v27 = v84;
            do
            {
              v29 = *(_QWORD *)(v8 + 16);
              v8 += 16;
            }
            while (v29 >= v13);
            do
              v30 = *((_QWORD *)v27-- - 2);
            while (v30 < v13);
          }
          if (v8 - 16 != a1)
            *(_OWORD *)a1 = *(_OWORD *)(v8 - 16);
          a4 = 0;
          *(_QWORD *)(v8 - 16) = v13;
          *(_QWORD *)(v8 - 8) = v14;
          continue;
        }
        v14 = *(_QWORD *)(a1 + 8);
LABEL_11:
        v15 = 0;
        do
        {
          v16 = *(_QWORD *)(a1 + v15 + 16);
          v15 += 16;
        }
        while (v13 < v16);
        v17 = a1 + v15;
        v18 = a2;
        if (v15 == 16)
        {
          v18 = a2;
          do
          {
            if (v17 >= (unint64_t)v18)
              break;
            v20 = *((_QWORD *)v18-- - 2);
          }
          while (v13 >= v20);
        }
        else
        {
          do
            v19 = *((_QWORD *)v18-- - 2);
          while (v13 >= v19);
        }
        v8 = a1 + v15;
        if (v17 < (unint64_t)v18)
        {
          v21 = v18;
          do
          {
            v83 = *(_OWORD *)v8;
            *(_OWORD *)v8 = *v21;
            *v21 = v83;
            do
            {
              v22 = *(_QWORD *)(v8 + 16);
              v8 += 16;
            }
            while (v13 < v22);
            do
              v23 = *((_QWORD *)v21-- - 2);
            while (v13 >= v23);
          }
          while (v8 < (unint64_t)v21);
        }
        if (v8 - 16 != a1)
          *(_OWORD *)a1 = *(_OWORD *)(v8 - 16);
        *(_QWORD *)(v8 - 16) = v13;
        *(_QWORD *)(v8 - 8) = v14;
        if (v17 < (unint64_t)v18)
        {
LABEL_30:
          std::__introsort<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *,false>(a1, v8 - 16, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v24 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(a1, (_OWORD *)(v8 - 16));
        if (!std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(v8, a2))
        {
          if (v24)
            continue;
          goto LABEL_30;
        }
        a2 = (__int128 *)(v8 - 16);
        if (!v24)
          goto LABEL_1;
        return;
    }
  }
}

__int128 *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(__int128 *result, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = *a2;
  v4 = *a3;
  if (*(_QWORD *)result >= *a2)
  {
    if (v3 < v4)
    {
      v6 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)a3 = v6;
      if (*(_QWORD *)result < *a2)
      {
        v7 = *result;
        *result = *(_OWORD *)a2;
        *(_OWORD *)a2 = v7;
      }
    }
  }
  else
  {
    if (v3 >= v4)
    {
      v8 = *result;
      *result = *(_OWORD *)a2;
      *(_OWORD *)a2 = v8;
      if (*a2 >= *a3)
        return result;
      v5 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
    }
    else
    {
      v5 = *result;
      *result = *(_OWORD *)a3;
    }
    *(_OWORD *)a3 = v5;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  _BOOL8 result;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  int v11;
  __int128 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  __int128 *v17;
  __int128 *v18;
  __int128 *v19;
  __int128 *v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v4 = ((uint64_t)a2 - a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = a2 - 1;
      if (*(_QWORD *)a1 < *((_QWORD *)a2 - 2))
      {
        v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        *v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)a1, (unint64_t *)(a1 + 16), (unint64_t *)a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)a1, (unint64_t *)(a1 + 16), (unint64_t *)(a1 + 32), a2 - 1);
      return 1;
    case 5:
      v17 = (__int128 *)(a1 + 16);
      v18 = (__int128 *)(a1 + 32);
      v19 = (__int128 *)(a1 + 48);
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)a1, (unint64_t *)(a1 + 16), (unint64_t *)(a1 + 32), (_OWORD *)(a1 + 48));
      v21 = *((_QWORD *)a2 - 2);
      v20 = a2 - 1;
      if (*(_QWORD *)(a1 + 48) < v21)
      {
        v22 = *v19;
        *v19 = *v20;
        *v20 = v22;
        if (*(_QWORD *)v18 < *(_QWORD *)v19)
        {
          v23 = *v18;
          *v18 = *v19;
          *v19 = v23;
          if (*(_QWORD *)v17 < *(_QWORD *)v18)
          {
            v24 = *v17;
            *v17 = *v18;
            *v18 = v24;
            if (*(_QWORD *)a1 < *(_QWORD *)(a1 + 16))
            {
              v25 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v17;
              *v17 = v25;
            }
          }
        }
      }
      return 1;
    default:
      v8 = (_QWORD *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((__int128 *)a1, (unint64_t *)(a1 + 16), (unint64_t *)(a1 + 32));
      v9 = (_OWORD *)(a1 + 48);
      if ((_OWORD *)(a1 + 48) == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v12 = *v9;
    v13 = *(_QWORD *)v9;
    if (*v8 < *(_QWORD *)v9)
    {
      v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 48) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32)
          break;
        v15 = *(_QWORD *)(a1 + v14 + 16);
        v14 -= 16;
        if (v15 >= v13)
        {
          v16 = (_OWORD *)(a1 + v14 + 48);
          goto LABEL_13;
        }
      }
      v16 = (_OWORD *)a1;
LABEL_13:
      *v16 = v12;
      if (++v11 == 8)
        return v9 + 1 == a2;
    }
    v8 = v9;
    v10 += 16;
    if (++v9 == a2)
      return 1;
  }
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(__int128 *a1, unint64_t *a2, unint64_t *a3, _OWORD *a4)
{
  __n128 result;

  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(a1, a2, a3);
  if (*a3 < *(_QWORD *)a4)
  {
    result = *(__n128 *)a3;
    *(_OWORD *)a3 = *a4;
    *a4 = result;
    if (*a2 < *a3)
    {
      result = *(__n128 *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(__n128 *)a3 = result;
      if (*(_QWORD *)a1 < *a2)
      {
        result = (__n128)*a1;
        *a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

char *std::vector<TopoSubstring *>::__swap_out_circular_buffer(void **a1, uint64_t a2, char *__src)
{
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int64_t v12;
  char *v13;
  void *v14;
  void *v15;

  v5 = *(char **)(a2 + 8);
  v6 = (char *)*a1;
  v7 = v5;
  if (*a1 != __src)
  {
    v8 = __src;
    v7 = *(char **)(a2 + 8);
    do
    {
      v9 = *((_QWORD *)v8 - 1);
      v8 -= 8;
      *((_QWORD *)v7 - 1) = v9;
      v7 -= 8;
    }
    while (v8 != v6);
  }
  *(_QWORD *)(a2 + 8) = v7;
  v10 = a1[1];
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    v7 = *(char **)(a2 + 8);
  }
  *(_QWORD *)(a2 + 16) = v11 + v12;
  v13 = (char *)*a1;
  *a1 = v7;
  *(_QWORD *)(a2 + 8) = v13;
  v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v14;
  v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v5;
}

void std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  void *v6;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = (void *)*((_QWORD *)v4 - 3);
        v4 -= 24;

      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::erase(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  void *__p;

  v2 = *a2;
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove(a1, a2, (uint64_t)&__p);
  v3 = __p;
  __p = 0;
  if (v3)
    operator delete(v3);
  return v2;
}

_QWORD *std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  v6 = *(_QWORD **)(*result + 8 * v4);
  do
  {
    v7 = v6;
    v6 = (_QWORD *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2)
    goto LABEL_18;
  v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(_QWORD *)&v3)
      v8 %= *(_QWORD *)&v3;
  }
  else
  {
    v8 &= *(_QWORD *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2)
      goto LABEL_19;
    v9 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v4)
LABEL_19:
      *(_QWORD *)(*result + 8 * v4) = 0;
  }
  v10 = *a2;
  if (*a2)
  {
    v11 = *(_QWORD *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(_QWORD *)&v3)
        v11 %= *(_QWORD *)&v3;
    }
    else
    {
      v11 &= *(_QWORD *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(_QWORD *)(*result + 8 * v11) = v7;
      v10 = *a2;
    }
  }
  *v7 = v10;
  *a2 = 0;
  --result[3];
  *(_QWORD *)a3 = a2;
  *(_QWORD *)(a3 + 8) = result + 2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__emplace_unique_key_args<TopoID,TopoID>(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  void **v13;
  void *i;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  float v18;
  float v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  v7 = *((unsigned int *)a2 + 2);
  v8 = objc_msgSend((id)*a2, "hash");
  v9 = v8 ^ v7;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v8 ^ v7;
      if (v9 >= v10)
        v3 = v9 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
    v13 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      for (i = *v13; i; i = *(void **)i)
      {
        v15 = *((_QWORD *)i + 1);
        if (v15 == v9)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && (objc_msgSend(*((id *)i + 2), "isEqual:", *a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10)
              v15 %= v10;
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3)
            break;
        }
      }
    }
  }
  v16 = (_QWORD *)(a1 + 16);
  i = operator new(0x20uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v9;
  v17 = *a3;
  *a3 = 0;
  *((_QWORD *)i + 2) = v17;
  *((_DWORD *)i + 6) = *((_DWORD *)a3 + 2);
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    v20 = 1;
    if (v10 >= 3)
      v20 = (v10 & (v10 - 1)) != 0;
    v21 = v20 | (2 * v10);
    v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22)
      v23 = v22;
    else
      v23 = v21;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v23);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v25)
  {
    *(_QWORD *)i = *v25;
LABEL_39:
    *v25 = i;
    goto LABEL_40;
  }
  *(_QWORD *)i = *v16;
  *v16 = i;
  *(_QWORD *)(v24 + 8 * v3) = v16;
  if (*(_QWORD *)i)
  {
    v26 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v26 >= v10)
        v26 %= v10;
    }
    else
    {
      v26 &= v10 - 1;
    }
    v25 = (_QWORD *)(*(_QWORD *)a1 + 8 * v26);
    goto LABEL_39;
  }
LABEL_40:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1BD98B5A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](uint64_t a1, id *a2)
{
  if (*(_BYTE *)(a1 + 8))
  {

  }
  else if (!a2)
  {
    return;
  }
  operator delete(a2);
}

void *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__emplace_unique_key_args<TopoID,TopoID const&>(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  void **v13;
  void *i;
  unint64_t v15;
  _QWORD *v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v7 = *((unsigned int *)a2 + 2);
  v8 = objc_msgSend((id)*a2, "hash");
  v9 = v8 ^ v7;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v8 ^ v7;
      if (v9 >= v10)
        v3 = v9 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
    v13 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      for (i = *v13; i; i = *(void **)i)
      {
        v15 = *((_QWORD *)i + 1);
        if (v15 == v9)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && (objc_msgSend(*((id *)i + 2), "isEqual:", *a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10)
              v15 %= v10;
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3)
            break;
        }
      }
    }
  }
  v16 = (_QWORD *)(a1 + 16);
  i = operator new(0x20uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v9;
  *((_QWORD *)i + 2) = *(id *)a3;
  *((_DWORD *)i + 6) = *(_DWORD *)(a3 + 8);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    v19 = 1;
    if (v10 >= 3)
      v19 = (v10 & (v10 - 1)) != 0;
    v20 = v19 | (2 * v10);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v22);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v24)
  {
    *(_QWORD *)i = *v24;
LABEL_39:
    *v24 = i;
    goto LABEL_40;
  }
  *(_QWORD *)i = *v16;
  *v16 = i;
  *(_QWORD *)(v23 + 8 * v3) = v16;
  if (*(_QWORD *)i)
  {
    v25 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10)
        v25 %= v10;
    }
    else
    {
      v25 &= v10 - 1;
    }
    v24 = (_QWORD *)(*(_QWORD *)a1 + 8 * v25);
    goto LABEL_39;
  }
LABEL_40:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1BD98B868(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__erase_unique<TopoID>(_QWORD *a1, _QWORD *a2)
{
  uint64_t *result;

  result = std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::find<TopoID>(a1, a2);
  if (result)
  {
    std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::erase(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  id *v3;
  void *__p;
  char v6;

  v2 = *a2;
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove(a1, a2, (uint64_t)&__p);
  v3 = (id *)__p;
  __p = 0;
  if (v3)
  {
    if (v6)

    operator delete(v3);
  }
  return v2;
}

void *std::__hash_table<std::__hash_value_type<TopoID,TopoSubstring *>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,TopoSubstring *>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID&&>,std::tuple<>>(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  void **v14;
  void *i;
  unint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  float v20;
  float v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;

  v8 = *((unsigned int *)a2 + 2);
  v9 = objc_msgSend((id)*a2, "hash");
  v10 = v9 ^ v8;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9 ^ v8;
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
    v14 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && (objc_msgSend(*((id *)i + 2), "isEqual:", *a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  v17 = (_QWORD *)(a1 + 16);
  i = operator new(0x28uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v10;
  v18 = *a4;
  v19 = **a4;
  *v18 = 0;
  *((_QWORD *)i + 2) = v19;
  *((_DWORD *)i + 6) = *((_DWORD *)v18 + 2);
  *((_QWORD *)i + 4) = 0;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    v22 = 1;
    if (v11 >= 3)
      v22 = (v11 & (v11 - 1)) != 0;
    v23 = v22 | (2 * v11);
    v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24)
      v25 = v24;
    else
      v25 = v23;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v25);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v26 = *(_QWORD *)a1;
  v27 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v27)
  {
    *(_QWORD *)i = *v27;
LABEL_39:
    *v27 = i;
    goto LABEL_40;
  }
  *(_QWORD *)i = *v17;
  *v17 = i;
  *(_QWORD *)(v26 + 8 * v4) = v17;
  if (*(_QWORD *)i)
  {
    v28 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11)
        v28 %= v11;
    }
    else
    {
      v28 &= v11 - 1;
    }
    v27 = (_QWORD *)(*(_QWORD *)a1 + 8 * v28);
    goto LABEL_39;
  }
LABEL_40:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1BD98BB74(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__erase_unique<TopoSubstring *>(_QWORD *a1, _QWORD *a2)
{
  uint64_t *result;

  result = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(a1, a2);
  if (result)
  {
    std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

void std::vector<TopoSubstring *>::__append(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = v7 - (_BYTE *)*a1;
    v9 = a2 + (v8 >> 3);
    if (v9 >> 61)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 3;
    v11 = v5 - (_BYTE *)*a1;
    if (v11 >> 2 > v9)
      v9 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v4, v12);
    else
      v13 = 0;
    v14 = &v13[8 * v10];
    v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    v16 = &v14[8 * a2];
    v18 = (char *)*a1;
    v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        v19 = *((_QWORD *)v17 - 1);
        v17 -= 8;
        *((_QWORD *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
      operator delete(v17);
  }
}

void *std::__hash_table<std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID const&>,std::tuple<>>(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  void **v14;
  void *i;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;

  v8 = *((unsigned int *)a2 + 2);
  v9 = objc_msgSend((id)*a2, "hash");
  v10 = v9 ^ v8;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v9 ^ v8;
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
    v14 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && (objc_msgSend(*((id *)i + 2), "isEqual:", *a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4)
            break;
        }
      }
    }
  }
  v17 = (_QWORD *)(a1 + 16);
  i = operator new(0x30uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v10;
  v18 = *a4;
  *((_QWORD *)i + 2) = *(id *)v18;
  *((_DWORD *)i + 6) = *(_DWORD *)(v18 + 8);
  *((_QWORD *)i + 4) = 0;
  *((_QWORD *)i + 5) = 0;
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    v21 = 1;
    if (v11 >= 3)
      v21 = (v11 & (v11 - 1)) != 0;
    v22 = v21 | (2 * v11);
    v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23)
      v24 = v23;
    else
      v24 = v22;
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v24);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v25 = *(_QWORD *)a1;
  v26 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v26)
  {
    *(_QWORD *)i = *v26;
LABEL_39:
    *v26 = i;
    goto LABEL_40;
  }
  *(_QWORD *)i = *v17;
  *v17 = i;
  *(_QWORD *)(v25 + 8 * v4) = v17;
  if (*(_QWORD *)i)
  {
    v27 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v27 >= v11)
        v27 %= v11;
    }
    else
    {
      v27 &= v11 - 1;
    }
    v26 = (_QWORD *)(*(_QWORD *)a1 + 8 * v27);
    goto LABEL_39;
  }
LABEL_40:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1BD98BF2C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

uint64_t ICNoteHTMLFromPlainText(void *a1, const char *a2)
{
  return objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:", CFSTR("\n"), CFSTR("<br>"));
}

id ICNoteTitleFromPlainText(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CB3500], "newlineCharacterSet");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "componentsSeparatedByCharactersInSet:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = v3;
  v5 = (id)objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v4);
        v8 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v8, "length", (_QWORD)v13))
        {
          v5 = v8;
          goto LABEL_11;
        }
      }
      v5 = (id)objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v5)
        continue;
      break;
    }
  }
LABEL_11:

  v9 = objc_msgSend(v5, "length");
  if (v9 >= *MEMORY[0x1E0D629C0])
    v10 = *MEMORY[0x1E0D629C0];
  else
    v10 = v9;
  objc_msgSend(v5, "ic_substringToIndex:", v10, (_QWORD)v13);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

void sub_1BD98F1BC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1BD98F870(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1BD98F954(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1BD98FD90(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1BD99392C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)ICDrawingCommandData;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1BD993A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1BD993A94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD993B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17)
{

  _Unwind_Resume(a1);
}

void sub_1BD993CE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD993EF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD993F70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BD993FFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9940D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromICDateFilterSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 9)
    return CFSTR("Today");
  else
    return off_1E76C9378[a1 - 1];
}

id ICLocalizedStringFromICDateFilterSelectionType(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  switch((unint64_t)a1)
  {
    case 0uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Today");
      goto LABEL_14;
    case 1uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Yesterday");
      goto LABEL_14;
    case 2uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Last 7 Days");
      goto LABEL_14;
    case 3uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Last 30 Days");
      goto LABEL_14;
    case 4uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Last 3 Months");
      goto LABEL_14;
    case 5uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Last 12 Months");
      goto LABEL_14;
    case 6uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Specified Range");
      goto LABEL_14;
    case 7uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Relative Range");
      goto LABEL_14;
    case 8uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("On a Date");
      goto LABEL_14;
    case 9uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("Before a Date");
      goto LABEL_14;
    case 0xAuLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("After a Date");
LABEL_14:
      objc_msgSend(v3, "localizedFrameworkStringForKey:value:table:allowSiri:", v4, v4, 0, 1, v1, v2);
      a1 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      return a1;
  }
  return a1;
}

const __CFString *NSStringFromICDateFilterRelativeRangeSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("Unknown");
  else
    return off_1E76C9350[a1 - 1];
}

const __CFString *NSStringFromICInclusionFilterInclusionType(uint64_t a1)
{
  if (a1)
    return CFSTR("Excluded");
  else
    return CFSTR("Included");
}

void sub_1BD996E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD997C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD998AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD998F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9992DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99A8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99C9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1BD99E654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99E7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99E904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99EA44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99EB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99EE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99EF30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99F104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99F6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99F8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99FB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD99FDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A00EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A0470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A0874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A0BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A0EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A10CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A1370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A1708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A1A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A1DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A2234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A24F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A27F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A28E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A2940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9A2A64(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A2B1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A2C20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A2D68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A2E70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD9A3024(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A3240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v6 = a1[2];
  result = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(result - 8);
  if (v7 >= v6)
  {
    v11 = (uint64_t)(v7 - *a1) >> 5;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v13 = v5 - *a1;
    if (v13 >> 4 > v12)
      v12 = v13 >> 4;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0)
      v14 = 0x7FFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    v20[4] = result;
    v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    v18 = *a2;
    *a2 = 0;
    *(_QWORD *)v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    v19 = a2[2];
    a2[2] = 0;
    *((_QWORD *)v16 + 2) = v19;
    *((_DWORD *)v16 + 6) = *((_DWORD *)a2 + 6);
    v20[2] = v16 + 32;
    std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(a1, v20);
    v10 = a1[1];
    result = std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    v8 = *a2;
    *a2 = 0;
    *(_QWORD *)v7 = v8;
    *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
    v9 = a2[2];
    a2[2] = 0;
    *(_QWORD *)(v7 + 16) = v9;
    *(_DWORD *)(v7 + 24) = *((_DWORD *)a2 + 6);
    v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1BD9A33C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1BD9A37D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1BD9A38B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A3954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::Selection::~Selection((topotext::Selection *)&a9);
  _Unwind_Resume(a1);
}

void sub_1BD9A3A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

void sub_1BD9A3BB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD9A3C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD9A3D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

topotext::Selection_Range *google::protobuf::internal::GenericTypeHandler<topotext::Selection_Range>::New()
{
  topotext::Selection_Range *v0;

  v0 = (topotext::Selection_Range *)operator new();
  topotext::Selection_Range::Selection_Range(v0);
  return v0;
}

void sub_1BD9A3DC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoID,TopoID>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::pair<TopoID,TopoID>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, (uint64_t)*v2);
    operator delete(**a1);
  }
}

void std::vector<std::pair<TopoID,TopoID>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t i;
  void *v5;

  for (i = *(_QWORD *)(a1 + 8); i != a2; i -= 32)
  {

    v5 = *(void **)(i - 32);
  }
  *(_QWORD *)(a1 + 8) = a2;
}

void sub_1BD9A3FC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A40D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A4158(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A43B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1BD9A44C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BD9A45B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A4854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9A4B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1BD9A4CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v6 = a1[2];
  result = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(result - 8);
  if (v7 >= v6)
  {
    v11 = (uint64_t)(v7 - *a1) >> 5;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v13 = v5 - *a1;
    if (v13 >> 4 > v12)
      v12 = v13 >> 4;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0)
      v14 = 0x7FFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    v20[4] = result;
    v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    v18 = *a2;
    *a2 = 0;
    *(_QWORD *)v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)v16 + 4) = *((_DWORD *)a2 + 4);
    v19 = a2[3];
    a2[3] = 0;
    *((_QWORD *)v16 + 3) = v19;
    v20[2] = v16 + 32;
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__swap_out_circular_buffer(a1, v20);
    v10 = a1[1];
    result = std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    v8 = *a2;
    *a2 = 0;
    *(_QWORD *)v7 = v8;
    *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
    *(_DWORD *)(v7 + 16) = *((_DWORD *)a2 + 4);
    v9 = a2[3];
    a2[3] = 0;
    *(_QWORD *)(v7 + 24) = v9;
    v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1BD9A4DEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1BD9A4FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1BD9A5074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9A5124(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A5228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1BD9A52D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9A53A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1BD9A5418(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A5510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1BD9A5600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9A56E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1BD9A5788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v8 = a7;
    do
    {
      v9 = *(_QWORD *)(a3 - 32);
      a3 -= 32;
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(v8 - 32) = v9;
      v8 -= 32;
      *(_DWORD *)(v8 + 8) = *(_DWORD *)(a3 + 8);
      *(_DWORD *)(v8 + 16) = *(_DWORD *)(a3 + 16);
      v10 = *(_QWORD *)(a3 + 24);
      *(_QWORD *)(a3 + 24) = 0;
      *(_QWORD *)(v8 + 24) = v10;
      v7 -= 32;
    }
    while (a3 != a5);
    *((_QWORD *)&v16 + 1) = v8;
    v11 = v16;
  }
  v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[8];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v2 = v1[1];
  v14 = v3;
  v15 = v2;
  v16 = v3;
  v17 = v2;
  v4 = *a1;
  v5 = (uint64_t *)a1[1];
  v7 = *v5;
  v6 = v5[1];
  v9 = v7;
  v10 = v6;
  v11 = v7;
  v12 = v6;
  std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>(v4, (uint64_t)v13, (uint64_t)v8);
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id *i;

  for (i = *(id **)(a2 + 32); i != *(id **)(a3 + 32); *(_QWORD *)(a2 + 32) = i)
  {

    i = (id *)(*(_QWORD *)(a2 + 32) + 32);
  }
}

uint64_t std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer(uint64_t a1)
{
  std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__destruct_at_end[abi:ne180100](a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t i;

  for (i = *(_QWORD *)(a1 + 16); i != a2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 32;

  }
}

const __CFString *NSStringFromICChecklistsFilterSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Any");
  else
    return off_1E76C98E0[a1 - 1];
}

void setPropertyIMP(void *a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  id v11;

  v11 = a1;
  v5 = a3;
  +[ICCRObject keyFromSelector:](ICCRObject, "keyFromSelector:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "fields");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "objectForKey:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v8, "setContents:", v5);
  }
  else
  {
    +[ICCRConstant constant](ICCRConstant, "constant");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v8, "isEqual:", v9);

    if (v10)
      objc_msgSend(v11, "setFieldKey:value:", v6, v5);
    else
      objc_msgSend(MEMORY[0x1E0D641A0], "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "__objc_no", "void setPropertyIMP(__strong id, SEL, __strong id)", 1, 0, CFSTR("Cannot set non-register, non-constant CRDT property"));
  }

}

id propertyIMP(void *a1, const char *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;

  objc_msgSend(a1, "fields");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromSelector(a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v5, "contents");
    v6 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = v5;
  }
  v7 = v6;

  return v7;
}

void sub_1BD9A6DD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9A6E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9A6EF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9A70BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9A76D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A7884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  id *v15;
  id *v16;
  uint64_t v17;

  *(_QWORD *)(v17 - 56) = &a15;
  std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100]((void ***)(v17 - 56));

  _Unwind_Resume(a1);
}

void sub_1BD9A7998(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A7AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  id *v9;
  id *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9A7BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1BD9A7CB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A7DF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, (uint64_t)*v2);
    operator delete(**a1);
  }
}

void std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t i;
  void *v5;

  for (i = *(_QWORD *)(a1 + 8); i != a2; i -= 32)
  {

    v5 = *(void **)(i - 32);
  }
  *(_QWORD *)(a1 + 8) = a2;
}

void std::vector<TopoIDRange>::__assign_with_size[abi:ne180100]<TopoIDRange*,TopoIDRange*>(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  id *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  char v19;

  v8 = a1 + 16;
  v9 = *(id **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a4)
  {
    std::vector<TopoIDRange>::__vdeallocate((void **)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v10 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v10;
    std::vector<TopoIDRange>::__vallocate[abi:ne180100]((_QWORD *)a1, v11);
    v12 = std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(v8, a2, a3, *(_QWORD *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3) < a4)
  {
    v13 = a2 + 8 * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3);
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>((int)&v18, a2, v13, v9);
    v12 = std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(v8, v13, a3, *(_QWORD *)(a1 + 8));
LABEL_11:
    *(_QWORD *)(a1 + 8) = v12;
    return;
  }
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>((int)&v19, a2, a3, v9);
  v15 = v14;
  v16 = *(_QWORD *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v17 = *(void **)(v16 - 24);
      v16 -= 24;

    }
    while (v16 != v15);
  }
  *(_QWORD *)(a1 + 8) = v15;
}

void sub_1BD9A8030(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1BD9A8038(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<TopoIDRange>::__vdeallocate(void **a1)
{
  char *v1;
  char *v3;
  void *v4;
  void *v5;

  v1 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v5 = (void *)*((_QWORD *)v3 - 3);
        v3 -= 24;

      }
      while (v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<TopoIDRange>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *(_QWORD *)a4 = *(id *)v6;
      *(_DWORD *)(a4 + 8) = *(_DWORD *)(v6 + 8);
      *(_DWORD *)(a4 + 16) = *(_DWORD *)(v6 + 16);
      a4 += 24;
      v6 += 24;
    }
    while (v6 != a3);
  }
  return a4;
}

uint64_t std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>(int a1, uint64_t a2, uint64_t a3, id *location)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a2;
  if (a2 == a3)
    return a2;
  v6 = a3;
  do
  {
    objc_storeStrong(location, *(id *)v5);
    *((_DWORD *)location + 2) = *(_DWORD *)(v5 + 8);
    *((_DWORD *)location + 4) = *(_DWORD *)(v5 + 16);
    location += 3;
    v5 += 24;
  }
  while (v5 != v6);
  return v6;
}

void sub_1BD9A820C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A8294(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A8350(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9A842C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A84A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A851C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A85A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A8628(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A875C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9A89B4(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  MEMORY[0x1C3B7A848](v2, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BD9A8A4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A8BA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9A8D1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9A8E7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9A9238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1BD9A94A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9A95F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A9678(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9A96F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BD9A977C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A9900(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9A9AE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

CRDT::Index_Element *google::protobuf::internal::GenericTypeHandler<CRDT::Index_Element>::New()
{
  CRDT::Index_Element *v0;

  v0 = (CRDT::Index_Element *)operator new();
  CRDT::Index_Element::Index_Element(v0);
  return v0;
}

void sub_1BD9A9B90(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C405ACC521ELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)result = a2;
  *(_QWORD *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  std::string::append(a1 + 1, a2);
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  v3 = a1 + 1;
  v4 = *((_QWORD *)a2 + 1);
  if (a2[23] >= 0)
  {
    v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

_QWORD *google::protobuf::internal::VersionString@<X0>(google::protobuf::internal *this@<X0>, _QWORD *a2@<X8>)
{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(a2, __str);
}

uint64_t google::protobuf::internal::LogFinisher::operator=(uint64_t a1, google::protobuf::internal::LogMessage *a2)
{
  return google::protobuf::internal::LogMessage::Finish(a2);
}

void google::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0)
    operator delete(this[3]);
}

uint64_t google::protobuf::internal::DefaultLogHandler(int a1, const char *a2, int a3, uint64_t a4)
{
  FILE **v4;
  const char *v5;

  v4 = (FILE **)MEMORY[0x1E0C80C10];
  if (*(char *)(a4 + 23) >= 0)
    v5 = (const char *)a4;
  else
    v5 = *(const char **)a4;
  fprintf((FILE *)*MEMORY[0x1E0C80C10], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[a1], a2, a3, v5);
  return fflush(*v4);
}

uint64_t google::protobuf::internal::DeleteLogSilencerCount(google::protobuf::internal *this)
{
  uint64_t result;

  result = google::protobuf::internal::log_silencer_count_mutex_;
  if (google::protobuf::internal::log_silencer_count_mutex_)
  {
    google::protobuf::internal::Mutex::~Mutex((pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_);
    result = MEMORY[0x1C3B7A848]();
  }
  google::protobuf::internal::log_silencer_count_mutex_ = 0;
  return result;
}

uint64_t google::protobuf::internal::InitLogSilencerCount(google::protobuf::internal *this)
{
  _QWORD *v1;
  pthread_mutex_t *v2;
  void (*v3)(void);

  v1 = (_QWORD *)operator new();
  v2 = (pthread_mutex_t *)operator new();
  *v1 = v2;
  pthread_mutex_init(v2, 0);
  google::protobuf::internal::log_silencer_count_mutex_ = (uint64_t)v1;
  return google::protobuf::internal::OnShutdown((google::protobuf::internal *)google::protobuf::internal::DeleteLogSilencerCount, v3);
}

void sub_1BD9AA350(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::InitLogSilencerCountOnce(google::protobuf::internal *this)
{
  uint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = google::protobuf::internal::log_silencer_count_init_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E76C9A40;
    v3[1] = google::protobuf::internal::InitLogSilencerCount;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::log_silencer_count_init_, (uint64_t)v3);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%d", a2);
  __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

uint64_t google::protobuf::internal::LogMessage::Finish(google::protobuf::internal::LogMessage *this)
{
  int v2;
  google::protobuf::internal::Mutex *v3;
  int v4;
  uint64_t result;
  void *exception;

  if (*(_DWORD *)this == 3)
  {
    v2 = 3;
  }
  else
  {
    google::protobuf::internal::InitLogSilencerCountOnce(this);
    v3 = (google::protobuf::internal::Mutex *)google::protobuf::internal::log_silencer_count_mutex_;
    google::protobuf::internal::Mutex::Lock((pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_);
    v4 = google::protobuf::internal::log_silencer_count_;
    result = google::protobuf::internal::Mutex::Unlock(v3);
    if (v4 > 0)
      goto LABEL_6;
    v2 = *(_DWORD *)this;
  }
  result = google::protobuf::internal::log_handler_(v2, *((const char **)this + 1), *((_DWORD *)this + 4), (uint64_t)this + 24);
LABEL_6:
  if (*(_DWORD *)this == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException(exception, *((_QWORD *)this + 1), *((unsigned int *)this + 4), (char *)this + 24);
  }
  return result;
}

void sub_1BD9AA504(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::FunctionClosure0::~FunctionClosure0(google::protobuf::internal::FunctionClosure0 *this)
{
  JUMPOUT(0x1C3B7A848);
}

void google::protobuf::internal::Mutex::~Mutex(pthread_mutex_t **this)
{
  pthread_mutex_destroy(*this);
  if (*this)
    MEMORY[0x1C3B7A848](*this, 0x1000C40FA0F61DDLL);
}

uint64_t google::protobuf::ghtonl(google::protobuf *this)
{
  return bswap32(this);
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&off_1E76C9A08;
  if (SHIBYTE(this[5].__vftable) < 0)
    operator delete(this[3].__vftable);
  std::exception::~exception(this);
}

{
  google::protobuf::FatalException::~FatalException(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result;

  result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0)
    return *(_QWORD *)result;
  return result;
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, __int128 *a4)
{
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = &off_1E76C9A08;
  *(_QWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((_QWORD *)a4 + 1));
  }
  else
  {
    v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((_QWORD *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1BD9AA65C(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  std::string *v5;
  std::string::size_type v6;
  std::string::size_type v7;
  std::string *v8;

  v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8)
      std::string::__throw_length_error[abi:ne180100]();
    v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17)
      v6 = __sz | 7;
    v7 = v6 + 1;
    v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    v5 = v8;
  }
  else
  {
    *((_BYTE *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, __sz + 1);
}

void sub_1BD9AAF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9ACD94(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  id v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  if (a2 == 1)
  {
    v10 = objc_begin_catch(a1);
    v11 = os_log_create("com.apple.notes", "CoreData");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      -[ICAttachmentMapModel MKMapItem].cold.1((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17);

    objc_end_catch();
    JUMPOUT(0x1BD9ACD50);
  }
  _Unwind_Resume(a1);
}

Class __getMKMapItemClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!MapKitLibraryCore_frameworkLibrary)
  {
    MapKitLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!MapKitLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("MKMapItem");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getMKMapItemClass_block_invoke_cold_1();
    free(v3);
  }
  getMKMapItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1BD9ADD18(void *a1)
{
  objc_begin_catch(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)&availableConfigurationURLs_lock);
  objc_exception_rethrow();
}

void sub_1BD9ADD34(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1BD9AE784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9AF904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1BD9B1088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void *__Block_byref_object_copy__77(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__78(uint64_t a1)
{

}

void sub_1BD9B1668(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B1ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9B1CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9B2500(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B2BC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B2C1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B2C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1BD9B2D54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B30EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B3360(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B3414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B3500(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B3AF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B3C70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B3DD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B3E70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9B3EF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_9_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_1BD9B935C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  void *v12;
  va_list va;

  va_start(va, a11);
  MEMORY[0x1C3B7A848](v11, 0x1093C4020A6E6BFLL);

  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1BD9B9510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::String::~String((topotext::String *)&a9);
  _Unwind_Resume(a1);
}

void sub_1BD9B99D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  uint64_t v10;
  void *v12;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);
  v12 = *(void **)(v10 - 112);
  if (v12)
  {
    *(_QWORD *)(v10 - 104) = v12;
    operator delete(v12);
  }

  _Unwind_Resume(a1);
}

void sub_1BD9B9B64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

topotext::Substring *google::protobuf::internal::GenericTypeHandler<topotext::Substring>::New()
{
  topotext::Substring *v0;

  v0 = (topotext::Substring *)operator new();
  topotext::Substring::Substring(v0);
  return v0;
}

void sub_1BD9B9BD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C403C0DBAE8);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::MessageLite::InitializationErrorString@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "(cannot determine missing fields for lite message)");
}

unsigned __int8 *google::protobuf::MessageLite::SerializeWithCachedSizesToArray(google::protobuf::MessageLite *this, unsigned __int8 *a2)
{
  int v4;
  std::string *v5;
  char v7;
  std::string v8[2];
  _BYTE v9[32];
  _BYTE v10[32];

  v4 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(_QWORD *)this + 96))(this);
  google::protobuf::io::ArrayOutputStream::ArrayOutputStream((uint64_t)v10, a2, v4, -1);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9, (google::protobuf::io::ZeroCopyOutputStream *)v10);
  (*(void (**)(google::protobuf::MessageLite *, _BYTE *))(*(_QWORD *)this + 80))(this, v9);
  if (v9[24])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 224);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !coded_out.HadError(): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9);
  google::protobuf::io::ArrayOutputStream::~ArrayOutputStream((google::protobuf::io::ArrayOutputStream *)v10);
  return &a2[v4];
}

void sub_1BD9B9CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  void *v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, void *);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va1);
  google::protobuf::io::ArrayOutputStream::~ArrayOutputStream((google::protobuf::io::ArrayOutputStream *)(v3 - 64));
  _Unwind_Resume(a1);
}

void google::protobuf::`anonymous namespace'::InitializationErrorMessage(const std::string::value_type *a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  const std::string::value_type *p_p;
  std::string::size_type v7;
  const std::string::value_type *v8;
  std::string::size_type v9;
  void *__p;
  std::string::size_type v11;
  unsigned __int8 v12;

  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::append(a3, "Can't ");
  std::string::append(a3, a1);
  std::string::append(a3, " message of type \"");
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a2 + 16))(&__p, a2);
  if ((v12 & 0x80u) == 0)
    p_p = (const std::string::value_type *)&__p;
  else
    p_p = (const std::string::value_type *)__p;
  if ((v12 & 0x80u) == 0)
    v7 = v12;
  else
    v7 = v11;
  std::string::append(a3, p_p, v7);
  if ((char)v12 < 0)
    operator delete(__p);
  std::string::append(a3, "\" because it is missing required fields: ");
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a2 + 48))(&__p, a2);
  if ((v12 & 0x80u) == 0)
    v8 = (const std::string::value_type *)&__p;
  else
    v8 = (const std::string::value_type *)__p;
  if ((v12 & 0x80u) == 0)
    v9 = v12;
  else
    v9 = v11;
  std::string::append(a3, v8, v9);
  if ((char)v12 < 0)
    operator delete(__p);
}

void sub_1BD9B9E20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v15 + 23) < 0)
    operator delete(*(void **)v15);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::ByteSizeConsistencyError(google::protobuf::_anonymous_namespace_ *this, int a2, int a3)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  std::string *v9;
  char v10;
  std::string v11[2];

  v4 = (int)this;
  if ((_DWORD)this != a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 63);
    v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Protocol message was modified concurrently during serialization.");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (a3 != v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 65);
    v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, "Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 69);
  v9 = google::protobuf::internal::LogMessage::operator<<(v11, "This shouldn't be called if all the sizes are equal.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
}

void sub_1BD9B9F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializeToArray(google::protobuf::MessageLite *this, void *a2, int a3)
{
  std::string *v6;
  std::string *v7;
  char v9;
  std::string __p;
  std::string v11[2];

  if (((*(uint64_t (**)(google::protobuf::MessageLite *))(*(_QWORD *)this + 40))(this) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 301);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: IsInitialized(): ");
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::MessageLite::SerializePartialToArray(this, a2, a3);
}

void sub_1BD9BA050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0)
    operator delete(__p);
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializePartialToArray(google::protobuf::MessageLite *this, void *a2, int a3)
{
  google::protobuf::_anonymous_namespace_ *v6;
  uint64_t v7;
  int v8;

  v6 = (google::protobuf::_anonymous_namespace_ *)(*(uint64_t (**)(google::protobuf::MessageLite *))(*(_QWORD *)this + 72))(this);
  if ((int)v6 <= a3)
  {
    v7 = (*(uint64_t (**)(google::protobuf::MessageLite *, void *))(*(_QWORD *)this + 88))(this, a2)
       - (_QWORD)a2;
    if (v7 != (int)v6)
    {
      v8 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(_QWORD *)this + 72))(this);
    }
  }
  return (int)v6 <= a3;
}

const __CFString *ICCipherNameForCipherVersion(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Cipher v1");
  else
    return off_1E76C9E48[a1 - 1];
}

void sub_1BD9BA860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9BB04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9BB204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9BB4C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9BB538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9BB660(_Unwind_Exception *a1)
{
  id *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD9BB804(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9BB934(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9BBA68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9BBB10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromICTagSelectionOperator(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("unknown");
  if (a1 == 1)
    v1 = CFSTR("all");
  if (a1 == 2)
    return CFSTR("any");
  else
    return v1;
}

id ICLocalizedStringFromICTagSelectionOperator(void *a1)
{
  void *v1;
  const __CFString *v2;
  const __CFString *v3;

  if (a1 == (void *)2)
  {
    v1 = (void *)MEMORY[0x1E0D64218];
    v2 = CFSTR("TAG_OPERATOR_ANY");
    v3 = CFSTR("any");
    goto LABEL_7;
  }
  if (a1 == (void *)1)
  {
    v1 = (void *)MEMORY[0x1E0D64218];
    v2 = CFSTR("TAG_OPERATOR_ALL");
    v3 = CFSTR("all");
    goto LABEL_7;
  }
  if (!a1)
  {
    v1 = (void *)MEMORY[0x1E0D64218];
    v2 = CFSTR("TAG_OPERATOR_UNKNOWN");
    v3 = CFSTR("unknown");
LABEL_7:
    objc_msgSend(v1, "localizedFrameworkStringForKey:value:table:allowSiri:", v2, v3, 0, 1);
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

const __CFString *NSStringFromICTagSelectionMode(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Custom");
  if (a1 == 1)
    v1 = CFSTR("All Tagged");
  if (a1 == 2)
    return CFSTR("All Untagged");
  else
    return v1;
}

void sub_1BD9BE42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9BE674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9BE934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9BEB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1BD9BFB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9BFC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getLPLinkMetadataClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!LinkPresentationLibraryCore_frameworkLibrary)
  {
    LinkPresentationLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!LinkPresentationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("LPLinkMetadata");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getLPLinkMetadataClass_block_invoke_cold_1();
    free(v3);
  }
  getLPLinkMetadataClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t peernetworking::protobuf_ShutdownFile_peernetworking_2eproto(peernetworking *this)
{
  uint64_t result;

  if (peernetworking::PeerNetworkMessage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::PeerNetworkMessage::default_instance_ + 8))(peernetworking::PeerNetworkMessage::default_instance_);
  if (peernetworking::Note::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::Note::default_instance_ + 8))(peernetworking::Note::default_instance_);
  if (peernetworking::ShareInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::ShareInfo::default_instance_ + 8))(peernetworking::ShareInfo::default_instance_);
  if (peernetworking::RequestNote::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::RequestNote::default_instance_ + 8))(peernetworking::RequestNote::default_instance_);
  if (peernetworking::RequestAttachment::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::RequestAttachment::default_instance_ + 8))(peernetworking::RequestAttachment::default_instance_);
  if (peernetworking::Attachment::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::Attachment::default_instance_ + 8))(peernetworking::Attachment::default_instance_);
  if (peernetworking::RequestMedia::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::RequestMedia::default_instance_ + 8))(peernetworking::RequestMedia::default_instance_);
  if (peernetworking::Media::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::Media::default_instance_ + 8))(peernetworking::Media::default_instance_);
  if (peernetworking::UnavailableMedia::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::UnavailableMedia::default_instance_ + 8))(peernetworking::UnavailableMedia::default_instance_);
  if (peernetworking::Invite::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::Invite::default_instance_ + 8))(peernetworking::Invite::default_instance_);
  if (peernetworking::InviteReply::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::InviteReply::default_instance_ + 8))(peernetworking::InviteReply::default_instance_);
  if (peernetworking::Identity::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)peernetworking::Identity::default_instance_ + 8))(peernetworking::Identity::default_instance_);
  result = peernetworking::KeepAlive::default_instance_;
  if (peernetworking::KeepAlive::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)peernetworking::KeepAlive::default_instance_ + 8))(peernetworking::KeepAlive::default_instance_);
  return result;
}

void peernetworking::protobuf_AddDesc_peernetworking_2eproto_impl(peernetworking *this, uint64_t a2, uint64_t a3, const char *a4)
{
  versioned_document *v4;
  uint64_t v5;
  peernetworking::Note *v6;
  uint64_t v7;
  uint64_t v8;
  peernetworking::ShareInfo *v9;
  uint64_t v10;
  uint64_t v11;
  peernetworking::RequestNote *v12;
  uint64_t v13;
  uint64_t v14;
  peernetworking::RequestAttachment *v15;
  uint64_t v16;
  uint64_t v17;
  peernetworking::Attachment *v18;
  uint64_t v19;
  uint64_t v20;
  peernetworking::RequestMedia *v21;
  uint64_t v22;
  uint64_t v23;
  peernetworking::Media *v24;
  uint64_t v25;
  uint64_t v26;
  peernetworking::UnavailableMedia *v27;
  uint64_t v28;
  uint64_t v29;
  peernetworking::Invite *v30;
  uint64_t v31;
  uint64_t v32;
  peernetworking::InviteReply *v33;
  uint64_t v34;
  uint64_t v35;
  peernetworking::Identity *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void);

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", a4);
  versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(v4);
  v5 = operator new();
  *(_QWORD *)v5 = &off_1E76CA0F0;
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_OWORD *)(v5 + 104) = 0u;
  *(_OWORD *)(v5 + 120) = 0u;
  *(_DWORD *)(v5 + 136) = 0;
  peernetworking::PeerNetworkMessage::default_instance_ = v5;
  v6 = (peernetworking::Note *)operator new();
  peernetworking::Note::Note(v6, v7, v8);
  peernetworking::Note::default_instance_ = (uint64_t)v6;
  v9 = (peernetworking::ShareInfo *)operator new();
  peernetworking::ShareInfo::ShareInfo(v9, v10, v11);
  peernetworking::ShareInfo::default_instance_ = (uint64_t)v9;
  v12 = (peernetworking::RequestNote *)operator new();
  peernetworking::RequestNote::RequestNote(v12, v13, v14);
  peernetworking::RequestNote::default_instance_ = (uint64_t)v12;
  v15 = (peernetworking::RequestAttachment *)operator new();
  peernetworking::RequestAttachment::RequestAttachment(v15, v16, v17);
  peernetworking::RequestAttachment::default_instance_ = (uint64_t)v15;
  v18 = (peernetworking::Attachment *)operator new();
  peernetworking::Attachment::Attachment(v18, v19, v20);
  peernetworking::Attachment::default_instance_ = (uint64_t)v18;
  v21 = (peernetworking::RequestMedia *)operator new();
  peernetworking::RequestMedia::RequestMedia(v21, v22, v23);
  peernetworking::RequestMedia::default_instance_ = (uint64_t)v21;
  v24 = (peernetworking::Media *)operator new();
  peernetworking::Media::Media(v24, v25, v26);
  peernetworking::Media::default_instance_ = (uint64_t)v24;
  v27 = (peernetworking::UnavailableMedia *)operator new();
  peernetworking::UnavailableMedia::UnavailableMedia(v27, v28, v29);
  peernetworking::UnavailableMedia::default_instance_ = (uint64_t)v27;
  v30 = (peernetworking::Invite *)operator new();
  peernetworking::Invite::Invite(v30, v31, v32);
  peernetworking::Invite::default_instance_ = (uint64_t)v30;
  v33 = (peernetworking::InviteReply *)operator new();
  peernetworking::InviteReply::InviteReply(v33, v34, v35);
  peernetworking::InviteReply::default_instance_ = (uint64_t)v33;
  v36 = (peernetworking::Identity *)operator new();
  peernetworking::Identity::Identity(v36, v37, v38);
  peernetworking::Identity::default_instance_ = (uint64_t)v36;
  v39 = operator new();
  *(_QWORD *)v39 = &off_1E76CA690;
  *(_OWORD *)(v39 + 8) = 0u;
  *(_OWORD *)(v39 + 24) = 0u;
  peernetworking::KeepAlive::default_instance_ = v39;
  peernetworking::PeerNetworkMessage::InitAsDefaultInstance((_QWORD *)peernetworking::PeerNetworkMessage::default_instance_);
  *(_QWORD *)(peernetworking::Note::default_instance_ + 48) = versioned_document::Document::default_instance_;
  google::protobuf::internal::OnShutdown((google::protobuf::internal *)peernetworking::protobuf_ShutdownFile_peernetworking_2eproto, v40);
}

void sub_1BD9C019C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  MEMORY[0x1C3B7A848](v2, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

double peernetworking::PeerNetworkMessage::PeerNetworkMessage(peernetworking::PeerNetworkMessage *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CA0F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_DWORD *)this + 34) = 0;
  return result;
}

double peernetworking::KeepAlive::KeepAlive(peernetworking::KeepAlive *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CA690;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

_QWORD *peernetworking::PeerNetworkMessage::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = peernetworking::RequestNote::default_instance_;
  this[5] = peernetworking::Note::default_instance_;
  this[6] = v1;
  v2 = peernetworking::RequestAttachment::default_instance_;
  this[7] = peernetworking::Attachment::default_instance_;
  this[8] = v2;
  v3 = peernetworking::UnavailableMedia::default_instance_;
  this[9] = peernetworking::RequestMedia::default_instance_;
  this[10] = v3;
  v4 = peernetworking::Invite::default_instance_;
  this[11] = peernetworking::Identity::default_instance_;
  this[12] = v4;
  v5 = peernetworking::ShareInfo::default_instance_;
  this[13] = peernetworking::InviteReply::default_instance_;
  this[14] = v5;
  v6 = peernetworking::KeepAlive::default_instance_;
  this[15] = peernetworking::Media::default_instance_;
  this[16] = v6;
  return this;
}

void peernetworking::protobuf_AddDesc_peernetworking_2eproto(peernetworking *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = peernetworking::protobuf_AddDesc_peernetworking_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &off_1E76C9A40;
    v2[1] = peernetworking::protobuf_AddDesc_peernetworking_2eproto_impl;
    v3 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&peernetworking::protobuf_AddDesc_peernetworking_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1BD9C0390(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::PeerNetworkMessage::MergeFrom(peernetworking::PeerNetworkMessage *this, const peernetworking::PeerNetworkMessage *a2, uint64_t a3)
{
  peernetworking::PeerNetworkMessage *v4;
  std::string *v5;
  int v6;
  int v7;
  peernetworking::Note *v8;
  uint64_t v9;
  uint64_t v10;
  const peernetworking::Note *v11;
  peernetworking::RequestNote *v12;
  uint64_t v13;
  uint64_t v14;
  const peernetworking::RequestNote *v15;
  peernetworking::Attachment *v16;
  uint64_t v17;
  uint64_t v18;
  std::string *v19;
  peernetworking::RequestAttachment *v20;
  uint64_t v21;
  uint64_t v22;
  std::string *v23;
  peernetworking::RequestMedia *v24;
  uint64_t v25;
  uint64_t v26;
  const peernetworking::RequestMedia *v27;
  peernetworking::UnavailableMedia *v28;
  uint64_t v29;
  uint64_t v30;
  const peernetworking::UnavailableMedia *v31;
  peernetworking::Identity *v32;
  uint64_t v33;
  uint64_t v34;
  std::string *v35;
  peernetworking::Invite *v36;
  uint64_t v37;
  uint64_t v38;
  std::string *v39;
  peernetworking::InviteReply *v40;
  uint64_t v41;
  uint64_t v42;
  const peernetworking::InviteReply *v43;
  peernetworking::ShareInfo *v44;
  uint64_t v45;
  uint64_t v46;
  int32x2_t *v47;
  peernetworking::Media *v48;
  uint64_t v49;
  uint64_t v50;
  std::string *v51;
  peernetworking::KeepAlive *v52;
  const peernetworking::KeepAlive *v53;
  const std::string::value_type *v54;
  char *v55;
  const std::string::value_type *v56;
  int v57;
  const std::string::value_type *v58;
  std::string::size_type v59;
  char v61;
  std::string v62[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 710);
    v5 = google::protobuf::internal::LogMessage::operator<<(v62, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v61, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
  }
  v6 = *((_DWORD *)a2 + 8);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      v7 = *((_DWORD *)a2 + 34);
      *((_DWORD *)v4 + 8) |= 1u;
      *((_DWORD *)v4 + 34) = v7;
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)v4 + 8) |= 2u;
      v8 = (peernetworking::Note *)*((_QWORD *)v4 + 5);
      if (!v8)
      {
        v8 = (peernetworking::Note *)operator new();
        this = peernetworking::Note::Note(v8, v9, v10);
        *((_QWORD *)v4 + 5) = v8;
      }
      v11 = (const peernetworking::Note *)*((_QWORD *)a2 + 5);
      if (!v11)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v11 = *(const peernetworking::Note **)(peernetworking::PeerNetworkMessage::default_instance_ + 40);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Note::MergeFrom(v8, v11, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 4) != 0)
    {
      *((_DWORD *)v4 + 8) |= 4u;
      v12 = (peernetworking::RequestNote *)*((_QWORD *)v4 + 6);
      if (!v12)
      {
        v12 = (peernetworking::RequestNote *)operator new();
        this = peernetworking::RequestNote::RequestNote(v12, v13, v14);
        *((_QWORD *)v4 + 6) = v12;
      }
      v15 = (const peernetworking::RequestNote *)*((_QWORD *)a2 + 6);
      if (!v15)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v15 = *(const peernetworking::RequestNote **)(peernetworking::PeerNetworkMessage::default_instance_ + 48);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::RequestNote::MergeFrom(v12, v15, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 8) != 0)
    {
      *((_DWORD *)v4 + 8) |= 8u;
      v16 = (peernetworking::Attachment *)*((_QWORD *)v4 + 7);
      if (!v16)
      {
        v16 = (peernetworking::Attachment *)operator new();
        this = peernetworking::Attachment::Attachment(v16, v17, v18);
        *((_QWORD *)v4 + 7) = v16;
      }
      v19 = (std::string *)*((_QWORD *)a2 + 7);
      if (!v19)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v19 = *(std::string **)(peernetworking::PeerNetworkMessage::default_instance_ + 56);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Attachment::MergeFrom((std::string *)v16, v19, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x10) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x10u;
      v20 = (peernetworking::RequestAttachment *)*((_QWORD *)v4 + 8);
      if (!v20)
      {
        v20 = (peernetworking::RequestAttachment *)operator new();
        this = peernetworking::RequestAttachment::RequestAttachment(v20, v21, v22);
        *((_QWORD *)v4 + 8) = v20;
      }
      v23 = (std::string *)*((_QWORD *)a2 + 8);
      if (!v23)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v23 = *(std::string **)(peernetworking::PeerNetworkMessage::default_instance_ + 64);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::RequestAttachment::MergeFrom((std::string *)v20, v23, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x20) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x20u;
      v24 = (peernetworking::RequestMedia *)*((_QWORD *)v4 + 9);
      if (!v24)
      {
        v24 = (peernetworking::RequestMedia *)operator new();
        this = peernetworking::RequestMedia::RequestMedia(v24, v25, v26);
        *((_QWORD *)v4 + 9) = v24;
      }
      v27 = (const peernetworking::RequestMedia *)*((_QWORD *)a2 + 9);
      if (!v27)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v27 = *(const peernetworking::RequestMedia **)(peernetworking::PeerNetworkMessage::default_instance_ + 72);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::RequestMedia::MergeFrom(v24, v27, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x40) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x40u;
      v28 = (peernetworking::UnavailableMedia *)*((_QWORD *)v4 + 10);
      if (!v28)
      {
        v28 = (peernetworking::UnavailableMedia *)operator new();
        this = peernetworking::UnavailableMedia::UnavailableMedia(v28, v29, v30);
        *((_QWORD *)v4 + 10) = v28;
      }
      v31 = (const peernetworking::UnavailableMedia *)*((_QWORD *)a2 + 10);
      if (!v31)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v31 = *(const peernetworking::UnavailableMedia **)(peernetworking::PeerNetworkMessage::default_instance_ + 80);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::UnavailableMedia::MergeFrom(v28, v31, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x80) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x80u;
      v32 = (peernetworking::Identity *)*((_QWORD *)v4 + 11);
      if (!v32)
      {
        v32 = (peernetworking::Identity *)operator new();
        this = peernetworking::Identity::Identity(v32, v33, v34);
        *((_QWORD *)v4 + 11) = v32;
      }
      v35 = (std::string *)*((_QWORD *)a2 + 11);
      if (!v35)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v35 = *(std::string **)(peernetworking::PeerNetworkMessage::default_instance_ + 88);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Identity::MergeFrom((std::string *)v32, v35, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
  }
  if ((v6 & 0xFF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x100u;
      v36 = (peernetworking::Invite *)*((_QWORD *)v4 + 12);
      if (!v36)
      {
        v36 = (peernetworking::Invite *)operator new();
        this = peernetworking::Invite::Invite(v36, v37, v38);
        *((_QWORD *)v4 + 12) = v36;
      }
      v39 = (std::string *)*((_QWORD *)a2 + 12);
      if (!v39)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v39 = *(std::string **)(peernetworking::PeerNetworkMessage::default_instance_ + 96);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Invite::MergeFrom((std::string *)v36, v39, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x200) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x200u;
      v40 = (peernetworking::InviteReply *)*((_QWORD *)v4 + 13);
      if (!v40)
      {
        v40 = (peernetworking::InviteReply *)operator new();
        this = peernetworking::InviteReply::InviteReply(v40, v41, v42);
        *((_QWORD *)v4 + 13) = v40;
      }
      v43 = (const peernetworking::InviteReply *)*((_QWORD *)a2 + 13);
      if (!v43)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v43 = *(const peernetworking::InviteReply **)(peernetworking::PeerNetworkMessage::default_instance_ + 104);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::InviteReply::MergeFrom(v40, v43, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x400) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x400u;
      v44 = (peernetworking::ShareInfo *)*((_QWORD *)v4 + 14);
      if (!v44)
      {
        v44 = (peernetworking::ShareInfo *)operator new();
        this = peernetworking::ShareInfo::ShareInfo(v44, v45, v46);
        *((_QWORD *)v4 + 14) = v44;
      }
      v47 = (int32x2_t *)*((_QWORD *)a2 + 14);
      if (!v47)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v47 = *(int32x2_t **)(peernetworking::PeerNetworkMessage::default_instance_ + 112);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::ShareInfo::MergeFrom((int32x2_t *)v44, v47);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x800) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x800u;
      v48 = (peernetworking::Media *)*((_QWORD *)v4 + 15);
      if (!v48)
      {
        v48 = (peernetworking::Media *)operator new();
        this = peernetworking::Media::Media(v48, v49, v50);
        *((_QWORD *)v4 + 15) = v48;
      }
      v51 = (std::string *)*((_QWORD *)a2 + 15);
      if (!v51)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v51 = *(std::string **)(peernetworking::PeerNetworkMessage::default_instance_ + 120);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Media::MergeFrom((std::string *)v48, v51, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x1000) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x1000u;
      v52 = (peernetworking::KeepAlive *)*((_QWORD *)v4 + 16);
      if (!v52)
      {
        this = (peernetworking::PeerNetworkMessage *)operator new();
        v52 = this;
        *(_QWORD *)this = &off_1E76CA690;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v4 + 16) = this;
      }
      v53 = (const peernetworking::KeepAlive *)*((_QWORD *)a2 + 16);
      if (!v53)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v53 = *(const peernetworking::KeepAlive **)(peernetworking::PeerNetworkMessage::default_instance_ + 128);
      }
      peernetworking::KeepAlive::MergeFrom(v52, v53);
    }
  }
  v56 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v55 = (char *)a2 + 8;
  v54 = v56;
  v57 = v55[23];
  if (v57 >= 0)
    v58 = v55;
  else
    v58 = v54;
  if (v57 >= 0)
    v59 = v55[23];
  else
    v59 = *((_QWORD *)v55 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v58, v59);
}

void sub_1BD9C08FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

void peernetworking::PeerNetworkMessage::~PeerNetworkMessage(void **this)
{
  *this = &off_1E76CA0F0;
  peernetworking::PeerNetworkMessage::SharedDtor((peernetworking::PeerNetworkMessage *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::PeerNetworkMessage::~PeerNetworkMessage(this);
  JUMPOUT(0x1C3B7A848);
}

void peernetworking::PeerNetworkMessage::SharedDtor(peernetworking::PeerNetworkMessage *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
  if ((peernetworking::PeerNetworkMessage *)peernetworking::PeerNetworkMessage::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 7);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 8);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 9);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 10);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)this + 11);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)this + 12);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = *((_QWORD *)this + 13);
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = *((_QWORD *)this + 14);
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = *((_QWORD *)this + 15);
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    v13 = *((_QWORD *)this + 16);
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
}

uint64_t peernetworking::PeerNetworkMessage::default_instance(peernetworking::PeerNetworkMessage *this)
{
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
  return peernetworking::PeerNetworkMessage::default_instance_;
}

double peernetworking::PeerNetworkMessage::New(peernetworking::PeerNetworkMessage *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CA0F0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_DWORD *)(v1 + 136) = 0;
  return result;
}

uint64_t peernetworking::PeerNetworkMessage::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((_BYTE)v4)
  {
    *(_DWORD *)(this + 136) = 0;
    if ((v4 & 2) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
      {
        this = peernetworking::Note::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 4) != 0)
    {
      this = *(_QWORD *)(v3 + 48);
      if (this)
      {
        this = peernetworking::RequestNote::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 8) != 0)
    {
      this = *(_QWORD *)(v3 + 56);
      if (this)
      {
        this = peernetworking::Attachment::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 0x10) != 0)
    {
      this = *(_QWORD *)(v3 + 64);
      if (this)
      {
        this = peernetworking::RequestAttachment::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 0x20) != 0)
    {
      this = *(_QWORD *)(v3 + 72);
      if (this)
      {
        this = peernetworking::RequestMedia::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 0x40) != 0)
    {
      this = *(_QWORD *)(v3 + 80);
      if (this)
      {
        this = peernetworking::UnavailableMedia::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 0x80) != 0)
    {
      this = *(_QWORD *)(v3 + 88);
      if (this)
      {
        this = peernetworking::Identity::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
  }
  if ((v4 & 0x1F00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      this = *(_QWORD *)(v3 + 96);
      if (this)
      {
        this = peernetworking::Invite::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 0x200) != 0)
    {
      this = *(_QWORD *)(v3 + 104);
      if (this)
      {
        this = peernetworking::InviteReply::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 0x400) != 0)
    {
      this = *(_QWORD *)(v3 + 112);
      if (this)
      {
        this = peernetworking::ShareInfo::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 0x800) != 0)
    {
      this = *(_QWORD *)(v3 + 120);
      if (this)
      {
        this = peernetworking::Media::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 0x1000) != 0)
    {
      v5 = *(_QWORD *)(v3 + 128);
      if (v5)
      {
        *(_DWORD *)(v5 + 32) = 0;
        if (*(char *)(v5 + 31) < 0)
        {
          **(_BYTE **)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v5 + 8) = 0;
          *(_BYTE *)(v5 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Note::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((v4 & 3) != 0)
  {
    if ((v4 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 40);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      this = *(_QWORD *)(this + 48);
      if (this)
        this = versioned_document::Document::Clear(this);
    }
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::RequestNote::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor(this, a2, a3);
    v3 = *(_QWORD *)(this + 40);
    if (v3 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Attachment::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 0x1F) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 48);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v6 = *(_QWORD *)(this + 56);
      if (v6 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v7 = *(_QWORD *)(this + 64);
      if (v7 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 0x10) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v8 = *(_QWORD *)(this + 72);
      if (v8 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)v8 = 0;
          *(_QWORD *)(v8 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::RequestAttachment::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 48);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::RequestMedia::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor(this, a2, a3);
    v3 = *(_QWORD *)(this + 40);
    if (v3 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::UnavailableMedia::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor(this, a2, a3);
    v3 = *(_QWORD *)(this + 40);
    if (v3 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Identity::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 0xF) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 48);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v6 = *(_QWORD *)(this + 56);
      if (v6 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v7 = *(_QWORD *)(this + 64);
      if (v7 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Invite::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 48);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::InviteReply::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *(_BYTE *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::ShareInfo::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((v4 & 3) != 0)
  {
    if ((v4 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 40);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 72) = 0;
  }
  if (*(int *)(this + 56) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v3 + 56));
  }
  *(_DWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Media::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 48);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::KeepAlive::Clear(uint64_t this)
{
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::PeerNetworkMessage::MergePartialFromCodedStream(peernetworking::PeerNetworkMessage *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  int v13;
  peernetworking::Note *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  peernetworking::RequestNote *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  peernetworking::Attachment *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  _BYTE *v44;
  peernetworking::RequestAttachment *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  _BYTE *v54;
  peernetworking::RequestMedia *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  _BYTE *v64;
  peernetworking::UnavailableMedia *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  _BYTE *v74;
  peernetworking::Identity *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  _BYTE *v84;
  peernetworking::Invite *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  _BYTE *v94;
  peernetworking::InviteReply *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  _BYTE *v104;
  peernetworking::ShareInfo *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  _BYTE *v114;
  peernetworking::Media *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  _BYTE *v124;
  uint64_t v125;
  char *v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  uint64_t v132;
  _BYTE v134[32];
  _QWORD v135[2];
  unsigned int v136;

  google::protobuf::io::StringOutputStream::StringOutputStream(v135, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v134, (google::protobuf::io::ZeroCopyOutputStream *)v135);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_12;
LABEL_6:
      if ((_DWORD)v7)
        v9 = (v7 & 7) == 4;
      else
        v9 = 1;
      if (v9)
      {
LABEL_219:
        v132 = 1;
        goto LABEL_220;
      }
LABEL_42:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v134, v4))goto LABEL_218;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_12:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 8)
          goto LABEL_40;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 34))goto LABEL_218;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 34) = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        v13 = *((_DWORD *)this + 8) | 1;
        *((_DWORD *)this + 8) = v13;
        if ((unint64_t)v12 >= v10 || *v12 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_49:
        *((_DWORD *)this + 8) = v13 | 2;
        v14 = (peernetworking::Note *)*((_QWORD *)this + 5);
        if (!v14)
        {
          v14 = (peernetworking::Note *)operator new();
          peernetworking::Note::Note(v14, v15, v16);
          *((_QWORD *)this + 5) = v14;
        }
        v136 = 0;
        v17 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)a2 + 14);
        v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19)
          goto LABEL_218;
        v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::Note::MergePartialFromCodedStream(v14, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_218;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_63:
        *((_DWORD *)this + 8) |= 4u;
        v25 = (peernetworking::RequestNote *)*((_QWORD *)this + 6);
        if (!v25)
        {
          v25 = (peernetworking::RequestNote *)operator new();
          peernetworking::RequestNote::RequestNote(v25, v26, v27);
          *((_QWORD *)this + 6) = v25;
        }
        v136 = 0;
        v28 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v28;
          *((_QWORD *)a2 + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)a2 + 14);
        v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30)
          goto LABEL_218;
        v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::RequestNote::MergePartialFromCodedStream(v25, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_218;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v31);
        v32 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v22)
          *((_DWORD *)a2 + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_77:
        *((_DWORD *)this + 8) |= 8u;
        v35 = (peernetworking::Attachment *)*((_QWORD *)this + 7);
        if (!v35)
        {
          v35 = (peernetworking::Attachment *)operator new();
          peernetworking::Attachment::Attachment(v35, v36, v37);
          *((_QWORD *)this + 7) = v35;
        }
        v136 = 0;
        v38 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v38;
          *((_QWORD *)a2 + 1) = v38 + 1;
        }
        v39 = *((_DWORD *)a2 + 14);
        v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40)
          goto LABEL_218;
        v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::Attachment::MergePartialFromCodedStream(v35, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_218;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v41);
        v42 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v42, 1);
        v43 = v42 - 1;
        if (v43 < 0 == v22)
          *((_DWORD *)a2 + 14) = v43;
        v44 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v44 >= *((_QWORD *)a2 + 2) || *v44 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v44 + 1;
LABEL_91:
        *((_DWORD *)this + 8) |= 0x10u;
        v45 = (peernetworking::RequestAttachment *)*((_QWORD *)this + 8);
        if (!v45)
        {
          v45 = (peernetworking::RequestAttachment *)operator new();
          peernetworking::RequestAttachment::RequestAttachment(v45, v46, v47);
          *((_QWORD *)this + 8) = v45;
        }
        v136 = 0;
        v48 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v48 >= *((_QWORD *)a2 + 2) || *v48 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v48;
          *((_QWORD *)a2 + 1) = v48 + 1;
        }
        v49 = *((_DWORD *)a2 + 14);
        v50 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v49 + 1;
        if (v49 >= v50)
          goto LABEL_218;
        v51 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::RequestAttachment::MergePartialFromCodedStream(v45, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v51);
        v52 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v52, 1);
        v53 = v52 - 1;
        if (v53 < 0 == v22)
          *((_DWORD *)a2 + 14) = v53;
        v54 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v54 >= *((_QWORD *)a2 + 2) || *v54 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v54 + 1;
LABEL_105:
        *((_DWORD *)this + 8) |= 0x20u;
        v55 = (peernetworking::RequestMedia *)*((_QWORD *)this + 9);
        if (!v55)
        {
          v55 = (peernetworking::RequestMedia *)operator new();
          peernetworking::RequestMedia::RequestMedia(v55, v56, v57);
          *((_QWORD *)this + 9) = v55;
        }
        v136 = 0;
        v58 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v58 >= *((_QWORD *)a2 + 2) || *v58 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v58;
          *((_QWORD *)a2 + 1) = v58 + 1;
        }
        v59 = *((_DWORD *)a2 + 14);
        v60 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v59 + 1;
        if (v59 >= v60)
          goto LABEL_218;
        v61 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::RequestMedia::MergePartialFromCodedStream(v55, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_218;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v61);
        v62 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v62, 1);
        v63 = v62 - 1;
        if (v63 < 0 == v22)
          *((_DWORD *)a2 + 14) = v63;
        v64 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v64 >= *((_QWORD *)a2 + 2) || *v64 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v64 + 1;
LABEL_119:
        *((_DWORD *)this + 8) |= 0x40u;
        v65 = (peernetworking::UnavailableMedia *)*((_QWORD *)this + 10);
        if (!v65)
        {
          v65 = (peernetworking::UnavailableMedia *)operator new();
          peernetworking::UnavailableMedia::UnavailableMedia(v65, v66, v67);
          *((_QWORD *)this + 10) = v65;
        }
        v136 = 0;
        v68 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v68 >= *((_QWORD *)a2 + 2) || *v68 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v68;
          *((_QWORD *)a2 + 1) = v68 + 1;
        }
        v69 = *((_DWORD *)a2 + 14);
        v70 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v69 + 1;
        if (v69 >= v70)
          goto LABEL_218;
        v71 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::UnavailableMedia::MergePartialFromCodedStream(v65, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v71);
        v72 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v72, 1);
        v73 = v72 - 1;
        if (v73 < 0 == v22)
          *((_DWORD *)a2 + 14) = v73;
        v74 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v74 >= *((_QWORD *)a2 + 2) || *v74 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v74 + 1;
LABEL_133:
        *((_DWORD *)this + 8) |= 0x80u;
        v75 = (peernetworking::Identity *)*((_QWORD *)this + 11);
        if (!v75)
        {
          v75 = (peernetworking::Identity *)operator new();
          peernetworking::Identity::Identity(v75, v76, v77);
          *((_QWORD *)this + 11) = v75;
        }
        v136 = 0;
        v78 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v78 >= *((_QWORD *)a2 + 2) || *v78 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v78;
          *((_QWORD *)a2 + 1) = v78 + 1;
        }
        v79 = *((_DWORD *)a2 + 14);
        v80 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v79 + 1;
        if (v79 >= v80)
          goto LABEL_218;
        v81 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::Identity::MergePartialFromCodedStream(v75, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_218;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v81);
        v82 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v82, 1);
        v83 = v82 - 1;
        if (v83 < 0 == v22)
          *((_DWORD *)a2 + 14) = v83;
        v84 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v84 >= *((_QWORD *)a2 + 2) || *v84 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v84 + 1;
LABEL_147:
        *((_DWORD *)this + 8) |= 0x100u;
        v85 = (peernetworking::Invite *)*((_QWORD *)this + 12);
        if (!v85)
        {
          v85 = (peernetworking::Invite *)operator new();
          peernetworking::Invite::Invite(v85, v86, v87);
          *((_QWORD *)this + 12) = v85;
        }
        v136 = 0;
        v88 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v88 >= *((_QWORD *)a2 + 2) || *v88 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v88;
          *((_QWORD *)a2 + 1) = v88 + 1;
        }
        v89 = *((_DWORD *)a2 + 14);
        v90 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v89 + 1;
        if (v89 >= v90)
          goto LABEL_218;
        v91 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::Invite::MergePartialFromCodedStream(v85, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_218;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v91);
        v92 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v92, 1);
        v93 = v92 - 1;
        if (v93 < 0 == v22)
          *((_DWORD *)a2 + 14) = v93;
        v94 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v94 >= *((_QWORD *)a2 + 2) || *v94 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v94 + 1;
LABEL_161:
        *((_DWORD *)this + 8) |= 0x200u;
        v95 = (peernetworking::InviteReply *)*((_QWORD *)this + 13);
        if (!v95)
        {
          v95 = (peernetworking::InviteReply *)operator new();
          peernetworking::InviteReply::InviteReply(v95, v96, v97);
          *((_QWORD *)this + 13) = v95;
        }
        v136 = 0;
        v98 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v98 >= *((_QWORD *)a2 + 2) || *v98 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v98;
          *((_QWORD *)a2 + 1) = v98 + 1;
        }
        v99 = *((_DWORD *)a2 + 14);
        v100 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v99 + 1;
        if (v99 >= v100)
          goto LABEL_218;
        v101 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::InviteReply::MergePartialFromCodedStream(v95, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_218;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v101);
        v102 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v102, 1);
        v103 = v102 - 1;
        if (v103 < 0 == v22)
          *((_DWORD *)a2 + 14) = v103;
        v104 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v104 >= *((_QWORD *)a2 + 2) || *v104 != 90)
          continue;
        *((_QWORD *)a2 + 1) = v104 + 1;
LABEL_175:
        *((_DWORD *)this + 8) |= 0x400u;
        v105 = (peernetworking::ShareInfo *)*((_QWORD *)this + 14);
        if (!v105)
        {
          v105 = (peernetworking::ShareInfo *)operator new();
          peernetworking::ShareInfo::ShareInfo(v105, v106, v107);
          *((_QWORD *)this + 14) = v105;
        }
        v136 = 0;
        v108 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v108 >= *((_QWORD *)a2 + 2) || *v108 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v108;
          *((_QWORD *)a2 + 1) = v108 + 1;
        }
        v109 = *((_DWORD *)a2 + 14);
        v110 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v109 + 1;
        if (v109 >= v110)
          goto LABEL_218;
        v111 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::ShareInfo::MergePartialFromCodedStream((int32x2_t *)v105, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v111);
        v112 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v112, 1);
        v113 = v112 - 1;
        if (v113 < 0 == v22)
          *((_DWORD *)a2 + 14) = v113;
        v114 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v114 >= *((_QWORD *)a2 + 2) || *v114 != 98)
          continue;
        *((_QWORD *)a2 + 1) = v114 + 1;
LABEL_189:
        *((_DWORD *)this + 8) |= 0x800u;
        v115 = (peernetworking::Media *)*((_QWORD *)this + 15);
        if (!v115)
        {
          v115 = (peernetworking::Media *)operator new();
          peernetworking::Media::Media(v115, v116, v117);
          *((_QWORD *)this + 15) = v115;
        }
        v136 = 0;
        v118 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v118 >= *((_QWORD *)a2 + 2) || *v118 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v118;
          *((_QWORD *)a2 + 1) = v118 + 1;
        }
        v119 = *((_DWORD *)a2 + 14);
        v120 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v119 + 1;
        if (v119 >= v120)
          goto LABEL_218;
        v121 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
        if (!peernetworking::Media::MergePartialFromCodedStream(v115, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_218;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v121);
        v122 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v122, 1);
        v123 = v122 - 1;
        if (v123 < 0 == v22)
          *((_DWORD *)a2 + 14) = v123;
        v124 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v124 >= *((_QWORD *)a2 + 2) || *v124 != 106)
          continue;
        *((_QWORD *)a2 + 1) = v124 + 1;
LABEL_203:
        *((_DWORD *)this + 8) |= 0x1000u;
        v125 = *((_QWORD *)this + 16);
        if (!v125)
        {
          v125 = operator new();
          *(_QWORD *)v125 = &off_1E76CA690;
          *(_OWORD *)(v125 + 8) = 0u;
          *(_OWORD *)(v125 + 24) = 0u;
          *((_QWORD *)this + 16) = v125;
        }
        v136 = 0;
        v126 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v126 >= *((_QWORD *)a2 + 2) || *v126 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v136))
            goto LABEL_218;
        }
        else
        {
          v136 = *v126;
          *((_QWORD *)a2 + 1) = v126 + 1;
        }
        v127 = *((_DWORD *)a2 + 14);
        v128 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v127 + 1;
        if (v127 >= v128
          || (v129 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136),
              !peernetworking::KeepAlive::MergePartialFromCodedStream((peernetworking::KeepAlive *)v125, a2))|| !*((_BYTE *)a2 + 36))
        {
LABEL_218:
          v132 = 0;
          goto LABEL_220;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v129);
        v130 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v130, 1);
        v131 = v130 - 1;
        if (v131 < 0 == v22)
          *((_DWORD *)a2 + 14) = v131;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v132 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_220:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v134);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v135);
        return v132;
      case 2u:
        if ((_DWORD)v7 != 18)
          goto LABEL_40;
        v13 = *((_DWORD *)this + 8);
        goto LABEL_49;
      case 3u:
        if ((_DWORD)v7 == 26)
          goto LABEL_63;
        goto LABEL_40;
      case 4u:
        if ((_DWORD)v7 == 34)
          goto LABEL_77;
        goto LABEL_40;
      case 5u:
        if ((_DWORD)v7 == 42)
          goto LABEL_91;
        goto LABEL_40;
      case 6u:
        if ((_DWORD)v7 == 50)
          goto LABEL_105;
        goto LABEL_40;
      case 7u:
        if ((_DWORD)v7 == 58)
          goto LABEL_119;
        goto LABEL_40;
      case 8u:
        if ((_DWORD)v7 == 66)
          goto LABEL_133;
        goto LABEL_40;
      case 9u:
        if ((_DWORD)v7 == 74)
          goto LABEL_147;
        goto LABEL_40;
      case 0xAu:
        if ((_DWORD)v7 == 82)
          goto LABEL_161;
        goto LABEL_40;
      case 0xBu:
        if ((_DWORD)v7 == 90)
          goto LABEL_175;
        goto LABEL_40;
      case 0xCu:
        if ((_DWORD)v7 == 98)
          goto LABEL_189;
        goto LABEL_40;
      case 0xDu:
        if ((_DWORD)v7 == 106)
          goto LABEL_203;
LABEL_40:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_42;
        goto LABEL_219;
      default:
        goto LABEL_6;
    }
  }
}

void sub_1BD9C2378(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C40CCCF3E6ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::PeerNetworkMessage::SerializeWithCachedSizes(peernetworking::PeerNetworkMessage *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  peernetworking::PeerNetworkMessage *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v5 = this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 34), a2, a4);
    v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v5 + 5);
  if (!v7)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v7 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 40);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_19:
  v8 = *((_QWORD *)v5 + 6);
  if (!v8)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v8 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 48);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_25;
  }
LABEL_22:
  v9 = *((_QWORD *)v5 + 7);
  if (!v9)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v9 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 56);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(4, v9, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_28;
  }
LABEL_25:
  v10 = *((_QWORD *)v5 + 8);
  if (!v10)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v10 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 64);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(5, v10, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_31;
  }
LABEL_28:
  v11 = *((_QWORD *)v5 + 9);
  if (!v11)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v11 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 72);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(6, v11, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_34;
  }
LABEL_31:
  v12 = *((_QWORD *)v5 + 10);
  if (!v12)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v12 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 80);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(7, v12, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_37;
  }
LABEL_34:
  v13 = *((_QWORD *)v5 + 11);
  if (!v13)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v13 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 88);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(8, v13, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_40;
  }
LABEL_37:
  v14 = *((_QWORD *)v5 + 12);
  if (!v14)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v14 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 96);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(9, v14, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_43;
  }
LABEL_40:
  v15 = *((_QWORD *)v5 + 13);
  if (!v15)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v15 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 104);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(10, v15, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_46;
  }
LABEL_43:
  v16 = *((_QWORD *)v5 + 14);
  if (!v16)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v16 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 112);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(11, v16, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_52;
    goto LABEL_49;
  }
LABEL_46:
  v17 = *((_QWORD *)v5 + 15);
  if (!v17)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    v17 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 120);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(12, v17, a2);
  if ((*((_DWORD *)v5 + 8) & 0x1000) != 0)
  {
LABEL_49:
    v18 = *((_QWORD *)v5 + 16);
    if (!v18)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
      v18 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 128);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(13, v18, a2);
  }
LABEL_52:
  if (*((char *)v5 + 31) < 0)
  {
    v19 = (char *)*((_QWORD *)v5 + 1);
    v20 = *((_QWORD *)v5 + 2);
  }
  else
  {
    v19 = (char *)v5 + 8;
    LODWORD(v20) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v19, v20);
}

uint64_t peernetworking::PeerNetworkMessage::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  peernetworking::Note *v5;
  google::protobuf::io::CodedOutputStream *v6;
  int v7;
  peernetworking::RequestNote *v8;
  google::protobuf::io::CodedOutputStream *v9;
  int v10;
  peernetworking::Attachment *v11;
  google::protobuf::io::CodedOutputStream *v12;
  int v13;
  peernetworking::RequestAttachment *v14;
  google::protobuf::io::CodedOutputStream *v15;
  int v16;
  peernetworking::RequestMedia *v17;
  google::protobuf::io::CodedOutputStream *v18;
  int v19;
  peernetworking::UnavailableMedia *v20;
  google::protobuf::io::CodedOutputStream *v21;
  int v22;
  peernetworking::Identity *v23;
  google::protobuf::io::CodedOutputStream *v24;
  int v25;
  peernetworking::Invite *v26;
  google::protobuf::io::CodedOutputStream *v27;
  int v28;
  peernetworking::InviteReply *v29;
  google::protobuf::io::CodedOutputStream *v30;
  int v31;
  peernetworking::ShareInfo *v32;
  google::protobuf::io::CodedOutputStream *v33;
  int v34;
  peernetworking::Media *v35;
  google::protobuf::io::CodedOutputStream *v36;
  int v37;
  uint64_t v38;
  google::protobuf::io::CodedOutputStream *v39;
  int v40;
  uint64_t v41;
  uint64_t result;

  v1 = this;
  v2 = *(_DWORD *)(this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_59;
  }
  if ((v2 & 1) != 0)
  {
    v4 = (google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 136);
    if (v4 >= 0x80)
    {
      this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      v2 = *(_DWORD *)(v1 + 32);
    }
    else
    {
      this = 1;
    }
    v3 = this + 1;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v5 = *(peernetworking::Note **)(v1 + 40);
  if (!v5)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    v5 = *(peernetworking::Note **)(peernetworking::PeerNetworkMessage::default_instance_ + 40);
  }
  v6 = (google::protobuf::io::CodedOutputStream *)peernetworking::Note::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    this = 1;
  v3 += v7 + this + 1;
  v2 = *(_DWORD *)(v1 + 32);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v8 = *(peernetworking::RequestNote **)(v1 + 48);
    if (!v8)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
      v8 = *(peernetworking::RequestNote **)(peernetworking::PeerNetworkMessage::default_instance_ + 48);
    }
    v9 = (google::protobuf::io::CodedOutputStream *)peernetworking::RequestNote::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      this = 1;
    v3 += v10 + this + 1;
    v2 = *(_DWORD *)(v1 + 32);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v11 = *(peernetworking::Attachment **)(v1 + 56);
  if (!v11)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    v11 = *(peernetworking::Attachment **)(peernetworking::PeerNetworkMessage::default_instance_ + 56);
  }
  v12 = (google::protobuf::io::CodedOutputStream *)peernetworking::Attachment::ByteSize(v11);
  v13 = (int)v12;
  if (v12 >= 0x80)
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
  else
    this = 1;
  v3 += v13 + this + 1;
  v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_41;
  }
LABEL_35:
  v14 = *(peernetworking::RequestAttachment **)(v1 + 64);
  if (!v14)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    v14 = *(peernetworking::RequestAttachment **)(peernetworking::PeerNetworkMessage::default_instance_ + 64);
  }
  v15 = (google::protobuf::io::CodedOutputStream *)peernetworking::RequestAttachment::ByteSize(v14);
  v16 = (int)v15;
  if (v15 >= 0x80)
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  else
    this = 1;
  v3 += v16 + this + 1;
  v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_47;
  }
LABEL_41:
  v17 = *(peernetworking::RequestMedia **)(v1 + 72);
  if (!v17)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    v17 = *(peernetworking::RequestMedia **)(peernetworking::PeerNetworkMessage::default_instance_ + 72);
  }
  v18 = (google::protobuf::io::CodedOutputStream *)peernetworking::RequestMedia::ByteSize(v17);
  v19 = (int)v18;
  if (v18 >= 0x80)
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
  else
    this = 1;
  v3 += v19 + this + 1;
  v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0)
      goto LABEL_59;
    goto LABEL_53;
  }
LABEL_47:
  v20 = *(peernetworking::UnavailableMedia **)(v1 + 80);
  if (!v20)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    v20 = *(peernetworking::UnavailableMedia **)(peernetworking::PeerNetworkMessage::default_instance_ + 80);
  }
  v21 = (google::protobuf::io::CodedOutputStream *)peernetworking::UnavailableMedia::ByteSize(v20);
  v22 = (int)v21;
  if (v21 >= 0x80)
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  else
    this = 1;
  v3 += v22 + this + 1;
  v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x80) != 0)
  {
LABEL_53:
    v23 = *(peernetworking::Identity **)(v1 + 88);
    if (!v23)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
      v23 = *(peernetworking::Identity **)(peernetworking::PeerNetworkMessage::default_instance_ + 88);
    }
    v24 = (google::protobuf::io::CodedOutputStream *)peernetworking::Identity::ByteSize(v23);
    v25 = (int)v24;
    if (v24 >= 0x80)
      this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    else
      this = 1;
    v3 += v25 + this + 1;
    v2 = *(_DWORD *)(v1 + 32);
  }
LABEL_59:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_99;
  if ((v2 & 0x100) != 0)
  {
    v26 = *(peernetworking::Invite **)(v1 + 96);
    if (!v26)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
      v26 = *(peernetworking::Invite **)(peernetworking::PeerNetworkMessage::default_instance_ + 96);
    }
    v27 = (google::protobuf::io::CodedOutputStream *)peernetworking::Invite::ByteSize(v26);
    v28 = (int)v27;
    if (v27 >= 0x80)
      this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    else
      this = 1;
    v3 += v28 + this + 1;
    v2 = *(_DWORD *)(v1 + 32);
    if ((v2 & 0x200) == 0)
    {
LABEL_62:
      if ((v2 & 0x400) == 0)
        goto LABEL_63;
      goto LABEL_78;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_62;
  }
  v29 = *(peernetworking::InviteReply **)(v1 + 104);
  if (!v29)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    v29 = *(peernetworking::InviteReply **)(peernetworking::PeerNetworkMessage::default_instance_ + 104);
  }
  v30 = (google::protobuf::io::CodedOutputStream *)peernetworking::InviteReply::ByteSize(v29);
  v31 = (int)v30;
  if (v30 >= 0x80)
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
  else
    this = 1;
  v3 += v31 + this + 1;
  v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x400) == 0)
  {
LABEL_63:
    if ((v2 & 0x800) == 0)
      goto LABEL_64;
    goto LABEL_84;
  }
LABEL_78:
  v32 = *(peernetworking::ShareInfo **)(v1 + 112);
  if (!v32)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    v32 = *(peernetworking::ShareInfo **)(peernetworking::PeerNetworkMessage::default_instance_ + 112);
  }
  v33 = (google::protobuf::io::CodedOutputStream *)peernetworking::ShareInfo::ByteSize(v32);
  v34 = (int)v33;
  if (v33 >= 0x80)
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
  else
    this = 1;
  v3 += v34 + this + 1;
  v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x800) == 0)
  {
LABEL_64:
    if ((v2 & 0x1000) == 0)
      goto LABEL_99;
    goto LABEL_90;
  }
LABEL_84:
  v35 = *(peernetworking::Media **)(v1 + 120);
  if (!v35)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    v35 = *(peernetworking::Media **)(peernetworking::PeerNetworkMessage::default_instance_ + 120);
  }
  v36 = (google::protobuf::io::CodedOutputStream *)peernetworking::Media::ByteSize(v35);
  v37 = (int)v36;
  if (v36 >= 0x80)
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
  else
    this = 1;
  v3 += v37 + this + 1;
  if ((*(_DWORD *)(v1 + 32) & 0x1000) != 0)
  {
LABEL_90:
    v38 = *(_QWORD *)(v1 + 128);
    if (!v38)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto((peernetworking *)this);
      v38 = *(_QWORD *)(peernetworking::PeerNetworkMessage::default_instance_ + 128);
    }
    if (*(char *)(v38 + 31) >= 0)
      v39 = (google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v38 + 31);
    else
      v39 = (google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v38 + 16);
    *(_DWORD *)(v38 + 36) = (_DWORD)v39;
    if (v39 >= 0x80)
      v40 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
    else
      v40 = 1;
    v3 += (_DWORD)v39 + v40 + 1;
  }
LABEL_99:
  if (*(char *)(v1 + 31) < 0)
    v41 = *(_QWORD *)(v1 + 16);
  else
    LODWORD(v41) = *(unsigned __int8 *)(v1 + 31);
  result = (v3 + v41);
  *(_DWORD *)(v1 + 36) = result;
  return result;
}

std::string *peernetworking::PeerNetworkMessage::CheckTypeAndMergeFrom(peernetworking::PeerNetworkMessage *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::PeerNetworkMessage::MergeFrom(this, lpsrc, v5);
}

std::string *peernetworking::Note::MergeFrom(peernetworking::Note *this, const peernetworking::Note *a2, uint64_t a3)
{
  peernetworking::Note *v4;
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  versioned_document::Document *v9;
  int32x2_t *v10;
  const std::string::value_type *v11;
  char *v12;
  const std::string::value_type *v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 998);
    v5 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v7 = (const std::string *)*((_QWORD *)a2 + 5);
      *((_DWORD *)v4 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)v4 + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 5) = v8;
      }
      this = (peernetworking::Note *)std::string::operator=(v8, v7);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)v4 + 8) |= 2u;
      v9 = (versioned_document::Document *)*((_QWORD *)v4 + 6);
      if (!v9)
      {
        v9 = (versioned_document::Document *)operator new();
        versioned_document::Document::Document(v9);
        *((_QWORD *)v4 + 6) = v9;
      }
      v10 = (int32x2_t *)*((_QWORD *)a2 + 6);
      if (!v10)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        v10 = *(int32x2_t **)(peernetworking::Note::default_instance_ + 48);
      }
      versioned_document::Document::MergeFrom((int32x2_t *)v9, v10);
    }
  }
  v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v12 = (char *)a2 + 8;
  v11 = v13;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v15, v16);
}

void sub_1BD9C2CCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C40A258B440);
  _Unwind_Resume(a1);
}

std::string *peernetworking::RequestNote::MergeFrom(peernetworking::RequestNote *this, const peernetworking::RequestNote *a2, uint64_t a3)
{
  std::string *v5;
  const std::string *v6;
  std::string *v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 1466);
    v5 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    v6 = (const std::string *)*((_QWORD *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
    v7 = (std::string *)*((_QWORD *)this + 5);
    if (v7 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 5) = v7;
    }
    std::string::operator=(v7, v6);
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BD9C2E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::Attachment::MergeFrom(std::string *this, std::string *a2, uint64_t a3)
{
  peernetworking::Attachment *v4;
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  const std::string *data;
  std::string *v10;
  const std::string *size;
  std::string *v12;
  const std::string *v13;
  std::string *v14;
  const std::string *v15;
  std::string *v16;
  const std::string::value_type *v17;
  std::string::value_type *v18;
  const std::string::value_type *v19;
  int v20;
  const std::string::value_type *v21;
  std::string::size_type v22;
  char v24;
  std::string v25[2];

  v4 = (peernetworking::Attachment *)this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2050);
    v5 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v24, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = a2[1].__r_.__value_.__s.__data_[8];
  if ((_BYTE)v6)
  {
    if ((a2[1].__r_.__value_.__s.__data_[8] & 1) != 0)
    {
      v7 = (const std::string *)a2[1].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)v4 + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 5) = v8;
      }
      this = std::string::operator=(v8, v7);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 2) != 0)
    {
      data = (const std::string *)a2[2].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v10 = (std::string *)*((_QWORD *)v4 + 6);
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 6) = v10;
      }
      this = std::string::operator=(v10, data);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 4) != 0)
    {
      size = (const std::string *)a2[2].__r_.__value_.__l.__size_;
      *((_DWORD *)v4 + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v12 = (std::string *)*((_QWORD *)v4 + 7);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v12 = (std::string *)operator new();
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        v12->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 7) = v12;
      }
      this = std::string::operator=(v12, size);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 8) != 0)
    {
      v13 = (const std::string *)a2[2].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v14 = (std::string *)*((_QWORD *)v4 + 8);
      if (v14 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v14 = (std::string *)operator new();
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 8) = v14;
      }
      this = std::string::operator=(v14, v13);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 0x10) != 0)
    {
      v15 = (const std::string *)a2[3].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 0x10u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v16 = (std::string *)*((_QWORD *)v4 + 9);
      if (v16 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v16 = (std::string *)operator new();
        v16->__r_.__value_.__l.__size_ = 0;
        v16->__r_.__value_.__r.__words[2] = 0;
        v16->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 9) = v16;
      }
      std::string::operator=(v16, v15);
    }
  }
  v19 = (const std::string::value_type *)a2->__r_.__value_.__l.__size_;
  v18 = &a2->__r_.__value_.__s.__data_[8];
  v17 = v19;
  v20 = v18[23];
  if (v20 >= 0)
    v21 = v18;
  else
    v21 = v17;
  if (v20 >= 0)
    v22 = v18[23];
  else
    v22 = *((_QWORD *)v18 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v21, v22);
}

void sub_1BD9C30A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::RequestAttachment::MergeFrom(std::string *this, std::string *a2, uint64_t a3)
{
  peernetworking::RequestAttachment *v4;
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  const std::string *data;
  std::string *v10;
  const std::string::value_type *v11;
  std::string::value_type *v12;
  const std::string::value_type *size;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  v4 = (peernetworking::RequestAttachment *)this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 1702);
    v5 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = a2[1].__r_.__value_.__s.__data_[8];
  if ((_BYTE)v6)
  {
    if ((a2[1].__r_.__value_.__s.__data_[8] & 1) != 0)
    {
      v7 = (const std::string *)a2[1].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)v4 + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 5) = v8;
      }
      this = std::string::operator=(v8, v7);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 2) != 0)
    {
      data = (const std::string *)a2[2].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v10 = (std::string *)*((_QWORD *)v4 + 6);
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 6) = v10;
      }
      std::string::operator=(v10, data);
    }
  }
  size = (const std::string::value_type *)a2->__r_.__value_.__l.__size_;
  v12 = &a2->__r_.__value_.__s.__data_[8];
  v11 = size;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v15, v16);
}

void sub_1BD9C3224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::RequestMedia::MergeFrom(peernetworking::RequestMedia *this, const peernetworking::RequestMedia *a2, uint64_t a3)
{
  std::string *v5;
  const std::string *v6;
  std::string *v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2264);
    v5 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    v6 = (const std::string *)*((_QWORD *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
    v7 = (std::string *)*((_QWORD *)this + 5);
    if (v7 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 5) = v7;
    }
    std::string::operator=(v7, v6);
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BD9C3338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::UnavailableMedia::MergeFrom(peernetworking::UnavailableMedia *this, const peernetworking::UnavailableMedia *a2, uint64_t a3)
{
  std::string *v5;
  const std::string *v6;
  std::string *v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2702);
    v5 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    v6 = (const std::string *)*((_QWORD *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
    v7 = (std::string *)*((_QWORD *)this + 5);
    if (v7 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 5) = v7;
    }
    std::string::operator=(v7, v6);
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BD9C344C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::Identity::MergeFrom(std::string *this, std::string *a2, uint64_t a3)
{
  peernetworking::Identity *v4;
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  const std::string *data;
  std::string *v10;
  const std::string *size;
  std::string *v12;
  const std::string *v13;
  std::string *v14;
  const std::string::value_type *v15;
  std::string::value_type *v16;
  const std::string::value_type *v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  char v22;
  std::string v23[2];

  v4 = (peernetworking::Identity *)this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 3482);
    v5 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v22, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = a2[1].__r_.__value_.__s.__data_[8];
  if ((_BYTE)v6)
  {
    if ((a2[1].__r_.__value_.__s.__data_[8] & 1) != 0)
    {
      v7 = (const std::string *)a2[1].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)v4 + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 5) = v8;
      }
      this = std::string::operator=(v8, v7);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 2) != 0)
    {
      data = (const std::string *)a2[2].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v10 = (std::string *)*((_QWORD *)v4 + 6);
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 6) = v10;
      }
      this = std::string::operator=(v10, data);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 4) != 0)
    {
      size = (const std::string *)a2[2].__r_.__value_.__l.__size_;
      *((_DWORD *)v4 + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v12 = (std::string *)*((_QWORD *)v4 + 7);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v12 = (std::string *)operator new();
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        v12->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 7) = v12;
      }
      this = std::string::operator=(v12, size);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 8) != 0)
    {
      v13 = (const std::string *)a2[2].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v14 = (std::string *)*((_QWORD *)v4 + 8);
      if (v14 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v14 = (std::string *)operator new();
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 8) = v14;
      }
      std::string::operator=(v14, v13);
    }
  }
  v17 = (const std::string::value_type *)a2->__r_.__value_.__l.__size_;
  v16 = &a2->__r_.__value_.__s.__data_[8];
  v15 = v17;
  v18 = v16[23];
  if (v18 >= 0)
    v19 = v16;
  else
    v19 = v15;
  if (v18 >= 0)
    v20 = v16[23];
  else
    v20 = *((_QWORD *)v16 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v19, v20);
}

void sub_1BD9C3690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::Invite::MergeFrom(std::string *this, std::string *a2, uint64_t a3)
{
  peernetworking::Invite *v4;
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  const std::string *data;
  std::string *v10;
  const std::string::value_type *v11;
  std::string::value_type *v12;
  const std::string::value_type *size;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  v4 = (peernetworking::Invite *)this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2938);
    v5 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = a2[1].__r_.__value_.__s.__data_[8];
  if ((_BYTE)v6)
  {
    if ((a2[1].__r_.__value_.__s.__data_[8] & 1) != 0)
    {
      v7 = (const std::string *)a2[1].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)v4 + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 5) = v8;
      }
      this = std::string::operator=(v8, v7);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 2) != 0)
    {
      data = (const std::string *)a2[2].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v10 = (std::string *)*((_QWORD *)v4 + 6);
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 6) = v10;
      }
      std::string::operator=(v10, data);
    }
  }
  size = (const std::string::value_type *)a2->__r_.__value_.__l.__size_;
  v12 = &a2->__r_.__value_.__s.__data_[8];
  v11 = size;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v15, v16);
}

void sub_1BD9C380C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::InviteReply::MergeFrom(peernetworking::InviteReply *this, const peernetworking::InviteReply *a2, uint64_t a3)
{
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  char v9;
  const std::string::value_type *v10;
  char *v11;
  const std::string::value_type *v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 3170);
    v5 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v7 = (const std::string *)*((_QWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)this + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 5) = v8;
      }
      std::string::operator=(v8, v7);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      v9 = *((_BYTE *)a2 + 48);
      *((_DWORD *)this + 8) |= 2u;
      *((_BYTE *)this + 48) = v9;
    }
  }
  v12 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v11 = (char *)a2 + 8;
  v10 = v12;
  v13 = v11[23];
  if (v13 >= 0)
    v14 = v11;
  else
    v14 = v10;
  if (v13 >= 0)
    v15 = v11[23];
  else
    v15 = *((_QWORD *)v11 + 1);
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1BD9C3940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::ShareInfo::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int32 v8;
  const std::string *v9;
  std::string *v10;
  __int32 v11;
  const std::string::value_type *v12;
  int32x2_t *v13;
  int32x2_t v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  char v19;
  std::string v20[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 1262);
    v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  v5 = google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>(this + 6, a2 + 6);
  LOBYTE(v8) = a2[4].i8[0];
  if ((_BYTE)v8)
  {
    if ((a2[4].i8[0] & 1) != 0)
    {
      v9 = (const std::string *)a2[5];
      this[4].i32[0] |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v10 = (std::string *)this[5];
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        this[5] = (int32x2_t)v10;
      }
      std::string::operator=(v10, v9);
      v8 = a2[4].i32[0];
    }
    if ((v8 & 2) != 0)
    {
      v11 = a2[9].i32[0];
      this[4].i32[0] |= 2u;
      this[9].i32[0] = v11;
    }
  }
  v14 = a2[1];
  v13 = a2 + 1;
  v12 = (const std::string::value_type *)v14;
  v15 = v13[2].i8[7];
  if (v15 >= 0)
    v16 = (const std::string::value_type *)v13;
  else
    v16 = v12;
  if (v15 >= 0)
    v17 = v13[2].u8[7];
  else
    v17 = (std::string::size_type)v13[1];
  return std::string::append((std::string *)&this[1], v16, v17);
}

void sub_1BD9C3A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::Media::MergeFrom(std::string *this, std::string *a2, uint64_t a3)
{
  peernetworking::Media *v4;
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  const std::string *data;
  std::string *v10;
  const std::string::value_type *v11;
  std::string::value_type *v12;
  const std::string::value_type *size;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  v4 = (peernetworking::Media *)this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2500);
    v5 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = a2[1].__r_.__value_.__s.__data_[8];
  if ((_BYTE)v6)
  {
    if ((a2[1].__r_.__value_.__s.__data_[8] & 1) != 0)
    {
      v7 = (const std::string *)a2[1].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)v4 + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 5) = v8;
      }
      this = std::string::operator=(v8, v7);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 2) != 0)
    {
      data = (const std::string *)a2[2].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v10 = (std::string *)*((_QWORD *)v4 + 6);
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 6) = v10;
      }
      std::string::operator=(v10, data);
    }
  }
  size = (const std::string::value_type *)a2->__r_.__value_.__l.__size_;
  v12 = &a2->__r_.__value_.__s.__data_[8];
  v11 = size;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v15, v16);
}

void sub_1BD9C3BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::KeepAlive::MergeFrom(peernetworking::KeepAlive *this, const peernetworking::KeepAlive *a2)
{
  std::string *v4;
  const std::string::value_type *v5;
  char *v6;
  const std::string::value_type *v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  char v12;
  std::string v13[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 3649);
    v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v7 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v6 = (char *)a2 + 8;
  v5 = v7;
  v8 = v6[23];
  if (v8 >= 0)
    v9 = v6;
  else
    v9 = v5;
  if (v8 >= 0)
    v10 = v6[23];
  else
    v10 = *((_QWORD *)v6 + 1);
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1BD9C3CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::PeerNetworkMessage::IsInitialized(peernetworking::PeerNetworkMessage *this)
{
  return 1;
}

_QWORD *peernetworking::PeerNetworkMessage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.PeerNetworkMessage");
}

peernetworking::Note *peernetworking::Note::Note(peernetworking::Note *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA168;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::Note::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C3D18(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Note::SharedCtor(peernetworking::Note *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v5[2];
  char v6;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v5[0] = &off_1E76C9A40;
    v5[1] = google::protobuf::internal::InitEmptyString;
    v6 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD9C3DC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Note::~Note(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA168;
  peernetworking::Note::SharedDtor((peernetworking::Note *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::Note::~Note(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void peernetworking::Note::SharedDtor(peernetworking::Note *this, uint64_t a2, uint64_t a3)
{
  peernetworking::Note *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 5);
  if (v4)
    v5 = v4 == google::protobuf::internal::empty_string_;
  else
    v5 = 1;
  if (!v5)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (peernetworking::Note *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
  if ((peernetworking::Note *)peernetworking::Note::default_instance_ != v3)
  {
    v6 = *((_QWORD *)v3 + 6);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
}

uint64_t peernetworking::Note::default_instance(peernetworking::Note *this)
{
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
  return peernetworking::Note::default_instance_;
}

peernetworking::Note *peernetworking::Note::New(peernetworking::Note *this)
{
  peernetworking::Note *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::Note *)operator new();
  peernetworking::Note::Note(v1, v2, v3);
  return v1;
}

void sub_1BD9C3F34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Note::MergePartialFromCodedStream(peernetworking::Note *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  versioned_document::Document *v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  _BYTE v22[32];
  _QWORD v23[2];
  unsigned int v24;

  google::protobuf::io::StringOutputStream::StringOutputStream(v23, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v22, (google::protobuf::io::ZeroCopyOutputStream *)v23);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_16;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2)
        break;
      if ((_DWORD)v7 != 18)
        goto LABEL_23;
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      v12 = (versioned_document::Document *)*((_QWORD *)this + 6);
      if (!v12)
      {
        v12 = (versioned_document::Document *)operator new();
        versioned_document::Document::Document(v12);
        *((_QWORD *)this + 6) = v12;
      }
      v24 = 0;
      v13 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))
          goto LABEL_41;
      }
      else
      {
        v24 = *v13;
        *((_QWORD *)a2 + 1) = v13 + 1;
      }
      v14 = *((_DWORD *)a2 + 14);
      v15 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v14 + 1;
      if (v14 >= v15
        || (v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24),
            !versioned_document::Document::MergePartialFromCodedStream((int32x2_t *)v12, a2))
        || !*((_BYTE *)a2 + 36))
      {
LABEL_41:
        v20 = 0;
        goto LABEL_43;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
      v17 = *((_DWORD *)a2 + 14);
      v18 = __OFSUB__(v17, 1);
      v19 = v17 - 1;
      if (v19 < 0 == v18)
        *((_DWORD *)a2 + 14) = v19;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v20 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_43;
      }
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      v9 = (std::string *)*((_QWORD *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v9 = (std::string *)operator new();
        v9->__r_.__value_.__r.__words[0] = 0;
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        *((_QWORD *)this + 5) = v9;
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
        goto LABEL_41;
      v10 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 18)
      {
        *((_QWORD *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_42;
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v22, v4))goto LABEL_41;
    }
  }
LABEL_16:
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_20;
LABEL_42:
  v20 = 1;
LABEL_43:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v22);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v23);
  return v20;
}

void sub_1BD9C4220(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x1093C40A258B440);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Note::SerializeWithCachedSizes(peernetworking::Note *this, google::protobuf::io::CodedOutputStream *a2)
{
  peernetworking::Note *v3;
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    this = (peernetworking::Note *)google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    v5 = *((_QWORD *)v3 + 6);
    if (!v5)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
      v5 = *(_QWORD *)(peernetworking::Note::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)v3 + 1);
    v7 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v6 = (char *)v3 + 8;
    LODWORD(v7) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t peernetworking::Note::ByteSize(peernetworking::Note *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  versioned_document::Document *v11;
  google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_21;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = (versioned_document::Document *)*((_QWORD *)this + 6);
    if (!v11)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
      v11 = *(versioned_document::Document **)(peernetworking::Note::default_instance_ + 48);
    }
    v12 = (google::protobuf::io::CodedOutputStream *)versioned_document::Document::ByteSize(v11);
    v13 = (int)v12;
    if (v12 >= 0x80)
      v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    else
      v14 = 1;
    v3 += v13 + v14 + 1;
  }
LABEL_21:
  if (*((char *)this + 31) < 0)
    v15 = *((_QWORD *)this + 2);
  else
    LODWORD(v15) = *((unsigned __int8 *)this + 31);
  result = (v3 + v15);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Note::CheckTypeAndMergeFrom(peernetworking::Note *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::Note::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::Note::IsInitialized(peernetworking::Note *this)
{
  return 1;
}

_QWORD *peernetworking::Note::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Note");
}

peernetworking::ShareInfo *peernetworking::ShareInfo::ShareInfo(peernetworking::ShareInfo *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA1E0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  peernetworking::ShareInfo::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C4498(_Unwind_Exception *a1)
{
  char *v1;
  uint64_t *v2;
  void **v3;
  uint64_t *v4;

  v4 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4);
  if (v1[31] < 0)
    operator delete(*v3);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::ShareInfo::SharedCtor(peernetworking::ShareInfo *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
  *((_DWORD *)this + 18) = 0;
}

void sub_1BD9C4554(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::ShareInfo::~ShareInfo(peernetworking::ShareInfo *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA1E0;
  peernetworking::ShareInfo::SharedDtor(this, a2, a3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  peernetworking::ShareInfo::~ShareInfo(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void peernetworking::ShareInfo::SharedDtor(peernetworking::ShareInfo *this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = v3 == google::protobuf::internal::empty_string_;
  else
    v4 = 1;
  if (!v4)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    this = (peernetworking::ShareInfo *)MEMORY[0x1C3B7A848](v3, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
}

peernetworking::ShareInfo *peernetworking::ShareInfo::New(peernetworking::ShareInfo *this)
{
  peernetworking::ShareInfo *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::ShareInfo *)operator new();
  peernetworking::ShareInfo::ShareInfo(v1, v2, v3);
  return v1;
}

void sub_1BD9C4680(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C409A15E765);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::ShareInfo::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  std::string *v10;
  unint64_t v11;
  _BYTE *v12;
  char *v13;
  BOOL v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  int32x2_t v18;
  peernetworking::Identity *v19;
  int32x2_t v20;
  int32x2_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE v32[32];
  _QWORD v33[2];
  unsigned int v34;

  google::protobuf::io::StringOutputStream::StringOutputStream(v33, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v32, (google::protobuf::io::ZeroCopyOutputStream *)v33);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_17;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      v9 = v7 >> 3;
      if (v7 >> 3 == 3)
      {
        if ((_DWORD)v7 == 26)
          goto LABEL_38;
LABEL_29:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_59;
        goto LABEL_31;
      }
      if (v9 == 2)
        break;
      if (v9 == 1)
      {
        if ((_DWORD)v7 != 10)
          goto LABEL_29;
        this[4].i32[0] |= 1u;
        if (!google::protobuf::internal::empty_string_)
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v10 = (std::string *)this[5];
        if (v10 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v10 = (std::string *)operator new();
          v10->__r_.__value_.__r.__words[0] = 0;
          v10->__r_.__value_.__l.__size_ = 0;
          v10->__r_.__value_.__r.__words[2] = 0;
          this[5] = (int32x2_t)v10;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v10))
          goto LABEL_58;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 < v11 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_25;
        }
      }
      else
      {
LABEL_17:
        if ((_DWORD)v7)
          v14 = (v7 & 7) == 4;
        else
          v14 = 1;
        if (v14)
        {
LABEL_59:
          v30 = 1;
          goto LABEL_60;
        }
LABEL_31:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v32, v4))goto LABEL_58;
      }
    }
    if ((_DWORD)v7 != 16)
      goto LABEL_29;
    v13 = (char *)*((_QWORD *)a2 + 1);
    v11 = *((_QWORD *)a2 + 2);
LABEL_25:
    if ((unint64_t)v13 >= v11 || *v13 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)&this[9]))
        goto LABEL_58;
      v15 = (_BYTE *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
    }
    else
    {
      this[9].i32[0] = *v13;
      v15 = v13 + 1;
      *((_QWORD *)a2 + 1) = v15;
    }
    this[4].i32[0] |= 2u;
    if ((unint64_t)v15 < v11 && *v15 == 26)
    {
      do
      {
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_38:
        v16 = this[7].i32[1];
        v17 = this[7].i32[0];
        if ((int)v17 >= v16)
        {
          if (v16 == this[8].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[6], v16 + 1);
          v19 = google::protobuf::internal::GenericTypeHandler<peernetworking::Identity>::New();
          v20 = this[6];
          v21 = this[7];
          this[7] = vadd_s32(v21, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v20 + 8 * v21.i32[0]) = v19;
        }
        else
        {
          v18 = this[6];
          this[7].i32[0] = v17 + 1;
          v19 = *(peernetworking::Identity **)(*(_QWORD *)&v18 + 8 * v17);
        }
        v34 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))
            goto LABEL_58;
        }
        else
        {
          v34 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24
          || (v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34),
              !peernetworking::Identity::MergePartialFromCodedStream(v19, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_58:
          v30 = 0;
          goto LABEL_60;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v25);
        v26 = *((_DWORD *)a2 + 14);
        v27 = __OFSUB__(v26, 1);
        v28 = v26 - 1;
        if (v28 < 0 == v27)
          *((_DWORD *)a2 + 14) = v28;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v29 = (_BYTE *)*((_QWORD *)a2 + 2);
      }
      while (v15 < v29 && *v15 == 26);
      if (v15 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        break;
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  v30 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_60:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v32);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v33);
  return v30;
}

void sub_1BD9C4A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::ShareInfo::SerializeWithCachedSizes(peernetworking::ShareInfo *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  int v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 18), a2, a4);
  if (*((int *)this + 14) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>((uint64_t)this + 48, v7);
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    v9 = (char *)*((_QWORD *)this + 1);
    v10 = *((_QWORD *)this + 2);
  }
  else
  {
    v9 = (char *)this + 8;
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v9, v10);
}

uint64_t peernetworking::ShareInfo::ByteSize(peernetworking::ShareInfo *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  peernetworking::Identity *v16;
  google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_19;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v11 >= 0x80)
      v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    else
      v12 = 2;
    v3 += v12;
  }
LABEL_19:
  v13 = *((_DWORD *)this + 14);
  v14 = v13 + v3;
  if (v13 >= 1)
  {
    v15 = 0;
    do
    {
      v16 = (peernetworking::Identity *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>((uint64_t)this + 48, v15);
      v17 = (google::protobuf::io::CodedOutputStream *)peernetworking::Identity::ByteSize(v16);
      v18 = (int)v17;
      if (v17 >= 0x80)
        v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      else
        v19 = 1;
      v14 += v18 + v19;
      ++v15;
    }
    while (v15 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
    v20 = *((_QWORD *)this + 2);
  else
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  result = (v14 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::ShareInfo::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::ShareInfo::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::ShareInfo::IsInitialized(peernetworking::ShareInfo *this)
{
  return 1;
}

_QWORD *peernetworking::ShareInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.ShareInfo");
}

peernetworking::RequestNote *peernetworking::RequestNote::RequestNote(peernetworking::RequestNote *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA258;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::RequestNote::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C4CF4(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::RequestNote::SharedCtor(peernetworking::RequestNote *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
}

void sub_1BD9C4D9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::RequestNote::~RequestNote(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA258;
  peernetworking::ShareInfo::SharedDtor((peernetworking::ShareInfo *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::RequestNote::~RequestNote(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

peernetworking::RequestNote *peernetworking::RequestNote::New(peernetworking::RequestNote *this)
{
  peernetworking::RequestNote *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::RequestNote *)operator new();
  peernetworking::RequestNote::RequestNote(v1, v2, v3);
  return v1;
}

void sub_1BD9C4E58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestNote::MergePartialFromCodedStream(peernetworking::RequestNote *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  BOOL v10;
  uint64_t v11;
  _BYTE v13[32];
  _QWORD v14[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_15;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 == 10)
        break;
LABEL_15:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v9 = (std::string *)*((_QWORD *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__r.__words[0] = 0;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 5) = v9;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  v11 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1BD9C501C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestNote::SerializeWithCachedSizes(peernetworking::RequestNote *this, google::protobuf::io::CodedOutputStream *a2)
{
  char *v4;
  uint64_t v5;

  if ((*((_BYTE *)this + 32) & 1) != 0)
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
  if (*((char *)this + 31) < 0)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    v5 = *((_QWORD *)this + 2);
  }
  else
  {
    v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t peernetworking::RequestNote::ByteSize(peernetworking::RequestNote *this)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 5);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    v2 = v8 + v4;
  }
  else
  {
    v2 = 0;
  }
  if (*((char *)this + 31) < 0)
    v10 = *((_QWORD *)this + 2);
  else
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::RequestNote::CheckTypeAndMergeFrom(peernetworking::RequestNote *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::RequestNote::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::RequestNote::IsInitialized(peernetworking::RequestNote *this)
{
  return 1;
}

_QWORD *peernetworking::RequestNote::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.RequestNote");
}

peernetworking::RequestAttachment *peernetworking::RequestAttachment::RequestAttachment(peernetworking::RequestAttachment *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA2D0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::RequestAttachment::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C51D4(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::RequestAttachment::SharedCtor(peernetworking::RequestAttachment *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD9C5280(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::RequestAttachment::~RequestAttachment(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA2D0;
  peernetworking::RequestAttachment::SharedDtor((peernetworking::RequestAttachment *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::RequestAttachment::~RequestAttachment(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void peernetworking::RequestAttachment::SharedDtor(peernetworking::RequestAttachment *this, uint64_t a2, uint64_t a3)
{
  peernetworking::RequestAttachment *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 5);
  if (v4 != google::protobuf::internal::empty_string_)
  {
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      this = (peernetworking::RequestAttachment *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
      v4 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, v5, v6);
    }
    else
    {
      v4 = google::protobuf::internal::empty_string_;
    }
  }
  v7 = *((_QWORD *)v3 + 6);
  if (v7 != v4 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (peernetworking::RequestAttachment *)MEMORY[0x1C3B7A848](v7, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
}

peernetworking::RequestAttachment *peernetworking::RequestAttachment::New(peernetworking::RequestAttachment *this)
{
  peernetworking::RequestAttachment *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::RequestAttachment *)operator new();
  peernetworking::RequestAttachment::RequestAttachment(v1, v2, v3);
  return v1;
}

void sub_1BD9C53F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestAttachment::MergePartialFromCodedStream(peernetworking::RequestAttachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  std::string *v12;
  uint64_t v13;
  _BYTE v15[32];
  _QWORD v16[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_16;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2)
        break;
      if ((_DWORD)v7 != 18)
        goto LABEL_23;
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
LABEL_37:
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      v12 = (std::string *)*((_QWORD *)this + 6);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v12 = (std::string *)operator new();
        v12->__r_.__value_.__r.__words[0] = 0;
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        *((_QWORD *)this + 6) = v12;
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
      {
LABEL_34:
        v13 = 0;
        goto LABEL_36;
      }
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v13 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_36;
      }
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        goto LABEL_37;
      v9 = (std::string *)*((_QWORD *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v9 = (std::string *)operator new();
        v9->__r_.__value_.__r.__words[0] = 0;
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        *((_QWORD *)this + 5) = v9;
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
        goto LABEL_34;
      v10 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 18)
      {
        *((_QWORD *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_35;
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_34;
    }
  }
LABEL_16:
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_20;
LABEL_35:
  v13 = 1;
LABEL_36:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1BD9C5660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestAttachment::SerializeWithCachedSizes(peernetworking::RequestAttachment *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  char *v5;
  uint64_t v6;

  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v4 = *((_DWORD *)this + 8);
  }
  if ((v4 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((_QWORD *)this + 6), a2);
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::RequestAttachment::ByteSize(peernetworking::RequestAttachment *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_24;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 6);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0)
    v17 = *((_QWORD *)this + 2);
  else
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::RequestAttachment::CheckTypeAndMergeFrom(std::string *this, std::string *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::RequestAttachment::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::RequestAttachment::IsInitialized(peernetworking::RequestAttachment *this)
{
  return 1;
}

_QWORD *peernetworking::RequestAttachment::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.RequestAttachment");
}

peernetworking::Attachment *peernetworking::Attachment::Attachment(peernetworking::Attachment *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA348;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::Attachment::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C58A0(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Attachment::SharedCtor(peernetworking::Attachment *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 7) = v5;
  *((_QWORD *)this + 8) = v5;
  *((_QWORD *)this + 9) = v5;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD9C5954(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Attachment::~Attachment(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA348;
  peernetworking::Attachment::SharedDtor((peernetworking::Attachment *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::Attachment::~Attachment(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void peernetworking::Attachment::SharedDtor(peernetworking::Attachment *this, uint64_t a2, uint64_t a3)
{
  peernetworking::Attachment *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 5);
  if (v4 != google::protobuf::internal::empty_string_)
  {
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      this = (peernetworking::Attachment *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
      v4 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
    }
    else
    {
      v4 = google::protobuf::internal::empty_string_;
    }
  }
  v5 = *((_QWORD *)v3 + 6);
  if (v5 != v4 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (peernetworking::Attachment *)MEMORY[0x1C3B7A848](v5, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
  }
  if (!v4)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v7 = *((_QWORD *)v3 + 7);
  if (v7 != v4 && v7)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (peernetworking::Attachment *)MEMORY[0x1C3B7A848](v7, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v8, v9);
  }
  v10 = *((_QWORD *)v3 + 8);
  if (v10 != v4 && v10)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    this = (peernetworking::Attachment *)MEMORY[0x1C3B7A848](v10, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v11, v12);
  }
  v13 = *((_QWORD *)v3 + 9);
  if (v13 && v13 != v4)
  {
    if (*(char *)(v13 + 23) < 0)
      operator delete(*(void **)v13);
    this = (peernetworking::Attachment *)MEMORY[0x1C3B7A848](v13, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
}

peernetworking::Attachment *peernetworking::Attachment::New(peernetworking::Attachment *this)
{
  peernetworking::Attachment *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::Attachment *)operator new();
  peernetworking::Attachment::Attachment(v1, v2, v3);
  return v1;
}

void sub_1BD9C5B94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40E816FE55);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Attachment::MergePartialFromCodedStream(peernetworking::Attachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  std::string *v12;
  _BYTE *v13;
  std::string *v14;
  _BYTE *v15;
  std::string *v16;
  _BYTE *v17;
  std::string *v18;
  uint64_t v19;
  _BYTE v21[32];
  _QWORD v22[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v22, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21, (google::protobuf::io::ZeroCopyOutputStream *)v22);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_15:
      if ((_DWORD)v7)
        v11 = (v7 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
LABEL_62:
        v19 = 1;
        goto LABEL_63;
      }
LABEL_30:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v21, v4))
      {
LABEL_61:
        v19 = 0;
        goto LABEL_63;
      }
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 10)
          goto LABEL_28;
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_64;
        v9 = (std::string *)*((_QWORD *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v9 = (std::string *)operator new();
          v9->__r_.__value_.__r.__words[0] = 0;
          v9->__r_.__value_.__l.__size_ = 0;
          v9->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 5) = v9;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
          goto LABEL_61;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_32:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_64;
        v12 = (std::string *)*((_QWORD *)this + 6);
        if (v12 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v12 = (std::string *)operator new();
          v12->__r_.__value_.__r.__words[0] = 0;
          v12->__r_.__value_.__l.__size_ = 0;
          v12->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 6) = v12;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
          goto LABEL_61;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_39:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_64;
        v14 = (std::string *)*((_QWORD *)this + 7);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v14 = (std::string *)operator new();
          v14->__r_.__value_.__r.__words[0] = 0;
          v14->__r_.__value_.__l.__size_ = 0;
          v14->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 7) = v14;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14))
          goto LABEL_61;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_46:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_64;
        v16 = (std::string *)*((_QWORD *)this + 8);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v16 = (std::string *)operator new();
          v16->__r_.__value_.__r.__words[0] = 0;
          v16->__r_.__value_.__l.__size_ = 0;
          v16->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 8) = v16;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v16))
          goto LABEL_61;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_53:
        *((_DWORD *)this + 8) |= 0x10u;
        if (!google::protobuf::internal::empty_string_)
LABEL_64:
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v18 = (std::string *)*((_QWORD *)this + 9);
        if (v18 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v18 = (std::string *)operator new();
          v18->__r_.__value_.__r.__words[0] = 0;
          v18->__r_.__value_.__l.__size_ = 0;
          v18->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 9) = v18;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v18))
          goto LABEL_61;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v19 = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 2u:
        if ((_DWORD)v7 != 18)
          goto LABEL_28;
        goto LABEL_32;
      case 3u:
        if ((_DWORD)v7 == 26)
          goto LABEL_39;
        goto LABEL_28;
      case 4u:
        if ((_DWORD)v7 == 34)
          goto LABEL_46;
        goto LABEL_28;
      case 5u:
        if ((_DWORD)v7 == 42)
          goto LABEL_53;
LABEL_28:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_30;
        goto LABEL_62;
      default:
        goto LABEL_15;
    }
    break;
  }
LABEL_63:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v22);
  return v19;
}

void sub_1BD9C5F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Attachment::SerializeWithCachedSizes(peernetworking::Attachment *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  char *v5;
  uint64_t v6;

  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v4 = *((_DWORD *)this + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((_QWORD *)this + 6), a2);
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, *((_QWORD *)this + 7), a2);
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_12:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((_QWORD *)this + 8), a2);
  if ((*((_DWORD *)this + 8) & 0x10) != 0)
LABEL_6:
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(5, *((_QWORD *)this + 9), a2);
LABEL_7:
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::Attachment::ByteSize(peernetworking::Attachment *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_55;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 6);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v2 = *((_DWORD *)this + 8);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    v17 = *((_QWORD *)this + 7);
    v18 = *(unsigned __int8 *)(v17 + 23);
    v19 = v18;
    v20 = *(_QWORD *)(v17 + 8);
    if ((v18 & 0x80u) == 0)
      v21 = *(unsigned __int8 *)(v17 + 23);
    else
      v21 = v20;
    if (v21 >= 0x80)
    {
      v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v21);
      v18 = *(unsigned __int8 *)(v17 + 23);
      v20 = *(_QWORD *)(v17 + 8);
      v2 = *((_DWORD *)this + 8);
      v19 = *(_BYTE *)(v17 + 23);
    }
    else
    {
      v22 = 1;
    }
    if (v19 < 0)
      v18 = v20;
    v3 += v22 + v18 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0)
        goto LABEL_55;
      goto LABEL_46;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  v23 = *((_QWORD *)this + 8);
  v24 = *(unsigned __int8 *)(v23 + 23);
  v25 = v24;
  v26 = *(_QWORD *)(v23 + 8);
  if ((v24 & 0x80u) == 0)
    v27 = *(unsigned __int8 *)(v23 + 23);
  else
    v27 = v26;
  if (v27 >= 0x80)
  {
    v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v27);
    v24 = *(unsigned __int8 *)(v23 + 23);
    v26 = *(_QWORD *)(v23 + 8);
    v2 = *((_DWORD *)this + 8);
    v25 = *(_BYTE *)(v23 + 23);
  }
  else
  {
    v28 = 1;
  }
  if (v25 < 0)
    v24 = v26;
  v3 += v28 + v24 + 1;
  if ((v2 & 0x10) != 0)
  {
LABEL_46:
    v29 = *((_QWORD *)this + 9);
    v30 = *(unsigned __int8 *)(v29 + 23);
    v31 = v30;
    v32 = *(_QWORD *)(v29 + 8);
    if ((v30 & 0x80u) == 0)
      v33 = *(unsigned __int8 *)(v29 + 23);
    else
      v33 = v32;
    if (v33 >= 0x80)
    {
      v34 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v33);
      v30 = *(unsigned __int8 *)(v29 + 23);
      v32 = *(_QWORD *)(v29 + 8);
      v31 = *(_BYTE *)(v29 + 23);
    }
    else
    {
      v34 = 1;
    }
    if (v31 < 0)
      v30 = v32;
    v3 += v34 + v30 + 1;
  }
LABEL_55:
  if (*((char *)this + 31) < 0)
    v35 = *((_QWORD *)this + 2);
  else
    LODWORD(v35) = *((unsigned __int8 *)this + 31);
  result = (v3 + v35);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Attachment::CheckTypeAndMergeFrom(std::string *this, std::string *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::Attachment::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::Attachment::IsInitialized(peernetworking::Attachment *this)
{
  return 1;
}

_QWORD *peernetworking::Attachment::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Attachment");
}

peernetworking::RequestMedia *peernetworking::RequestMedia::RequestMedia(peernetworking::RequestMedia *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA3C0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::RequestMedia::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C6344(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::RequestMedia::SharedCtor(peernetworking::RequestMedia *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
}

void sub_1BD9C63EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::RequestMedia::~RequestMedia(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA3C0;
  peernetworking::ShareInfo::SharedDtor((peernetworking::ShareInfo *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::RequestMedia::~RequestMedia(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

peernetworking::RequestMedia *peernetworking::RequestMedia::New(peernetworking::RequestMedia *this)
{
  peernetworking::RequestMedia *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::RequestMedia *)operator new();
  peernetworking::RequestMedia::RequestMedia(v1, v2, v3);
  return v1;
}

void sub_1BD9C64A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestMedia::MergePartialFromCodedStream(peernetworking::RequestMedia *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  BOOL v10;
  uint64_t v11;
  _BYTE v13[32];
  _QWORD v14[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_15;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 == 10)
        break;
LABEL_15:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v9 = (std::string *)*((_QWORD *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__r.__words[0] = 0;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 5) = v9;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  v11 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1BD9C666C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestMedia::SerializeWithCachedSizes(peernetworking::RequestMedia *this, google::protobuf::io::CodedOutputStream *a2)
{
  char *v4;
  uint64_t v5;

  if ((*((_BYTE *)this + 32) & 1) != 0)
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((_QWORD *)this + 5), a2);
  if (*((char *)this + 31) < 0)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    v5 = *((_QWORD *)this + 2);
  }
  else
  {
    v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t peernetworking::RequestMedia::ByteSize(peernetworking::RequestMedia *this)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 5);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    v2 = v8 + v4;
  }
  else
  {
    v2 = 0;
  }
  if (*((char *)this + 31) < 0)
    v10 = *((_QWORD *)this + 2);
  else
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::RequestMedia::CheckTypeAndMergeFrom(peernetworking::RequestMedia *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::RequestMedia::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::RequestMedia::IsInitialized(peernetworking::RequestMedia *this)
{
  return 1;
}

_QWORD *peernetworking::RequestMedia::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.RequestMedia");
}

peernetworking::Media *peernetworking::Media::Media(peernetworking::Media *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA438;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::Media::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C6824(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Media::SharedCtor(peernetworking::Media *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD9C68D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Media::~Media(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA438;
  peernetworking::RequestAttachment::SharedDtor((peernetworking::RequestAttachment *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::Media::~Media(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

peernetworking::Media *peernetworking::Media::New(peernetworking::Media *this)
{
  peernetworking::Media *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::Media *)operator new();
  peernetworking::Media::Media(v1, v2, v3);
  return v1;
}

void sub_1BD9C698C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Media::MergePartialFromCodedStream(peernetworking::Media *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  std::string *v12;
  uint64_t v13;
  _BYTE v15[32];
  _QWORD v16[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_16;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2)
        break;
      if ((_DWORD)v7 != 18)
        goto LABEL_23;
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
LABEL_37:
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      v12 = (std::string *)*((_QWORD *)this + 6);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v12 = (std::string *)operator new();
        v12->__r_.__value_.__r.__words[0] = 0;
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        *((_QWORD *)this + 6) = v12;
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
      {
LABEL_34:
        v13 = 0;
        goto LABEL_36;
      }
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v13 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_36;
      }
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        goto LABEL_37;
      v9 = (std::string *)*((_QWORD *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v9 = (std::string *)operator new();
        v9->__r_.__value_.__r.__words[0] = 0;
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        *((_QWORD *)this + 5) = v9;
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
        goto LABEL_34;
      v10 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 18)
      {
        *((_QWORD *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_35;
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_34;
    }
  }
LABEL_16:
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_20;
LABEL_35:
  v13 = 1;
LABEL_36:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1BD9C6BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Media::SerializeWithCachedSizes(peernetworking::Media *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  char *v5;
  uint64_t v6;

  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v4 = *((_DWORD *)this + 8);
  }
  if ((v4 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, *((_QWORD *)this + 6), a2);
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::Media::ByteSize(peernetworking::Media *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_24;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 6);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0)
    v17 = *((_QWORD *)this + 2);
  else
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Media::CheckTypeAndMergeFrom(std::string *this, std::string *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::Media::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::Media::IsInitialized(peernetworking::Media *this)
{
  return 1;
}

_QWORD *peernetworking::Media::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Media");
}

peernetworking::UnavailableMedia *peernetworking::UnavailableMedia::UnavailableMedia(peernetworking::UnavailableMedia *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA4B0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::UnavailableMedia::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C6E38(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::UnavailableMedia::SharedCtor(peernetworking::UnavailableMedia *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
}

void sub_1BD9C6EE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::UnavailableMedia::~UnavailableMedia(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA4B0;
  peernetworking::ShareInfo::SharedDtor((peernetworking::ShareInfo *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::UnavailableMedia::~UnavailableMedia(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

peernetworking::UnavailableMedia *peernetworking::UnavailableMedia::New(peernetworking::UnavailableMedia *this)
{
  peernetworking::UnavailableMedia *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::UnavailableMedia *)operator new();
  peernetworking::UnavailableMedia::UnavailableMedia(v1, v2, v3);
  return v1;
}

void sub_1BD9C6F9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::UnavailableMedia::MergePartialFromCodedStream(peernetworking::UnavailableMedia *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  BOOL v10;
  uint64_t v11;
  _BYTE v13[32];
  _QWORD v14[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_15;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 == 10)
        break;
LABEL_15:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v9 = (std::string *)*((_QWORD *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__r.__words[0] = 0;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 5) = v9;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  v11 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1BD9C7160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::UnavailableMedia::SerializeWithCachedSizes(peernetworking::UnavailableMedia *this, google::protobuf::io::CodedOutputStream *a2)
{
  char *v4;
  uint64_t v5;

  if ((*((_BYTE *)this + 32) & 1) != 0)
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((_QWORD *)this + 5), a2);
  if (*((char *)this + 31) < 0)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    v5 = *((_QWORD *)this + 2);
  }
  else
  {
    v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t peernetworking::UnavailableMedia::ByteSize(peernetworking::UnavailableMedia *this)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 5);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    v2 = v8 + v4;
  }
  else
  {
    v2 = 0;
  }
  if (*((char *)this + 31) < 0)
    v10 = *((_QWORD *)this + 2);
  else
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::UnavailableMedia::CheckTypeAndMergeFrom(peernetworking::UnavailableMedia *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::UnavailableMedia::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::UnavailableMedia::IsInitialized(peernetworking::UnavailableMedia *this)
{
  return 1;
}

_QWORD *peernetworking::UnavailableMedia::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.UnavailableMedia");
}

peernetworking::Invite *peernetworking::Invite::Invite(peernetworking::Invite *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA528;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::Invite::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C7318(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Invite::SharedCtor(peernetworking::Invite *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD9C73C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Invite::~Invite(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA528;
  peernetworking::RequestAttachment::SharedDtor((peernetworking::RequestAttachment *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::Invite::~Invite(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

peernetworking::Invite *peernetworking::Invite::New(peernetworking::Invite *this)
{
  peernetworking::Invite *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::Invite *)operator new();
  peernetworking::Invite::Invite(v1, v2, v3);
  return v1;
}

void sub_1BD9C7480(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Invite::MergePartialFromCodedStream(peernetworking::Invite *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  std::string *v12;
  uint64_t v13;
  _BYTE v15[32];
  _QWORD v16[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_16;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2)
        break;
      if ((_DWORD)v7 != 18)
        goto LABEL_23;
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
LABEL_37:
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      v12 = (std::string *)*((_QWORD *)this + 6);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v12 = (std::string *)operator new();
        v12->__r_.__value_.__r.__words[0] = 0;
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        *((_QWORD *)this + 6) = v12;
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
      {
LABEL_34:
        v13 = 0;
        goto LABEL_36;
      }
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v13 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_36;
      }
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        goto LABEL_37;
      v9 = (std::string *)*((_QWORD *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v9 = (std::string *)operator new();
        v9->__r_.__value_.__r.__words[0] = 0;
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        *((_QWORD *)this + 5) = v9;
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
        goto LABEL_34;
      v10 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 18)
      {
        *((_QWORD *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_35;
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_34;
    }
  }
LABEL_16:
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_20;
LABEL_35:
  v13 = 1;
LABEL_36:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1BD9C76EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Invite::SerializeWithCachedSizes(peernetworking::Invite *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  char *v5;
  uint64_t v6;

  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v4 = *((_DWORD *)this + 8);
  }
  if ((v4 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((_QWORD *)this + 6), a2);
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::Invite::ByteSize(peernetworking::Invite *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_24;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 6);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0)
    v17 = *((_QWORD *)this + 2);
  else
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Invite::CheckTypeAndMergeFrom(std::string *this, std::string *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::Invite::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::Invite::IsInitialized(peernetworking::Invite *this)
{
  return 1;
}

_QWORD *peernetworking::Invite::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Invite");
}

peernetworking::InviteReply *peernetworking::InviteReply::InviteReply(peernetworking::InviteReply *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA5A0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::InviteReply::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C792C(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::InviteReply::SharedCtor(peernetworking::InviteReply *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
  *((_BYTE *)this + 48) = 0;
}

void sub_1BD9C79D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::InviteReply::~InviteReply(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA5A0;
  peernetworking::ShareInfo::SharedDtor((peernetworking::ShareInfo *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::InviteReply::~InviteReply(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

peernetworking::InviteReply *peernetworking::InviteReply::New(peernetworking::InviteReply *this)
{
  peernetworking::InviteReply *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::InviteReply *)operator new();
  peernetworking::InviteReply::InviteReply(v1, v2, v3);
  return v1;
}

void sub_1BD9C7A94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::InviteReply::MergePartialFromCodedStream(peernetworking::InviteReply *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  BOOL v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  _BYTE v18[32];
  unint64_t v19[2];
  unint64_t v20;

  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_16;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if ((_DWORD)v7 == 16)
        {
          v12 = (char *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_27;
        }
LABEL_23:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_36;
        goto LABEL_20;
      }
      if (v7 >> 3 == 1)
        break;
LABEL_16:
      if ((_DWORD)v7)
        v13 = (v7 & 7) == 4;
      else
        v13 = 1;
      if (v13)
      {
LABEL_36:
        v16 = 1;
        goto LABEL_38;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_37;
    }
    if ((_DWORD)v7 != 10)
      goto LABEL_23;
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v9 = (std::string *)*((_QWORD *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__r.__words[0] = 0;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 5) = v9;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
      break;
    v11 = (_BYTE *)*((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
    if ((unint64_t)v11 < v10 && *v11 == 16)
    {
      v12 = v11 + 1;
      *((_QWORD *)a2 + 1) = v12;
LABEL_27:
      v20 = 0;
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20))
          break;
        v14 = v20;
        v15 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v14 = *v12;
        v15 = (unsigned __int8 *)(v12 + 1);
        *((_QWORD *)a2 + 1) = v15;
      }
      *((_BYTE *)this + 48) = v14 != 0;
      *((_DWORD *)this + 8) |= 2u;
      if (v15 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v16 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
  }
LABEL_37:
  v16 = 0;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1BD9C7D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::InviteReply::SerializeWithCachedSizes(peernetworking::InviteReply *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 48), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t peernetworking::InviteReply::ByteSize(peernetworking::InviteReply *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  v2 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    if ((v2 & 1) != 0)
    {
      v4 = *((_QWORD *)this + 5);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v6 = v5;
      v7 = *(_QWORD *)(v4 + 8);
      if ((v5 & 0x80u) == 0)
        v8 = *(unsigned __int8 *)(v4 + 23);
      else
        v8 = v7;
      if (v8 >= 0x80)
      {
        v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        v5 = *(unsigned __int8 *)(v4 + 23);
        v7 = *(_QWORD *)(v4 + 8);
        v9 = v10 + 1;
        v2 = *((_DWORD *)this + 8);
        v6 = *(_BYTE *)(v4 + 23);
      }
      else
      {
        v9 = 2;
      }
      if (v6 < 0)
        v5 = v7;
      v3 = v9 + v5;
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v2 = v3 + 2;
    else
      v2 = v3;
  }
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::InviteReply::CheckTypeAndMergeFrom(peernetworking::InviteReply *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::InviteReply::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::InviteReply::IsInitialized(peernetworking::InviteReply *this)
{
  return 1;
}

_QWORD *peernetworking::InviteReply::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.InviteReply");
}

peernetworking::Identity *peernetworking::Identity::Identity(peernetworking::Identity *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CA618;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  peernetworking::Identity::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BD9C7EE4(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Identity::SharedCtor(peernetworking::Identity *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = google::protobuf::internal::empty_string_;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 7) = v5;
  *((_QWORD *)this + 8) = v5;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BD9C7F94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Identity::~Identity(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CA618;
  peernetworking::Identity::SharedDtor((peernetworking::Identity *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::Identity::~Identity(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void peernetworking::Identity::SharedDtor(peernetworking::Identity *this, uint64_t a2, uint64_t a3)
{
  peernetworking::Identity *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 5);
  if (v4 != google::protobuf::internal::empty_string_)
  {
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      this = (peernetworking::Identity *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
      v4 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
    }
    else
    {
      v4 = google::protobuf::internal::empty_string_;
    }
  }
  v5 = *((_QWORD *)v3 + 6);
  if (v5 != v4 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (peernetworking::Identity *)MEMORY[0x1C3B7A848](v5, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
  }
  if (!v4)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v7 = *((_QWORD *)v3 + 7);
  if (v7 != v4 && v7)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (peernetworking::Identity *)MEMORY[0x1C3B7A848](v7, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v8, v9);
  }
  v10 = *((_QWORD *)v3 + 8);
  if (v10 != v4 && v10)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    this = (peernetworking::Identity *)MEMORY[0x1C3B7A848](v10, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
}

peernetworking::Identity *peernetworking::Identity::New(peernetworking::Identity *this)
{
  peernetworking::Identity *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (peernetworking::Identity *)operator new();
  peernetworking::Identity::Identity(v1, v2, v3);
  return v1;
}

void sub_1BD9C8190(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Identity::MergePartialFromCodedStream(peernetworking::Identity *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  std::string *v12;
  _BYTE *v13;
  std::string *v14;
  _BYTE *v15;
  std::string *v16;
  uint64_t v17;
  _BYTE v19[32];
  _QWORD v20[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v20, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19, (google::protobuf::io::ZeroCopyOutputStream *)v20);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_15:
      if ((_DWORD)v7)
        v11 = (v7 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
LABEL_53:
        v17 = 1;
        goto LABEL_54;
      }
LABEL_28:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v19, v4))
      {
LABEL_52:
        v17 = 0;
        goto LABEL_54;
      }
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 10)
          goto LABEL_26;
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_55;
        v9 = (std::string *)*((_QWORD *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v9 = (std::string *)operator new();
          v9->__r_.__value_.__r.__words[0] = 0;
          v9->__r_.__value_.__l.__size_ = 0;
          v9->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 5) = v9;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
          goto LABEL_52;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_30:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_55;
        v12 = (std::string *)*((_QWORD *)this + 6);
        if (v12 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v12 = (std::string *)operator new();
          v12->__r_.__value_.__r.__words[0] = 0;
          v12->__r_.__value_.__l.__size_ = 0;
          v12->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 6) = v12;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
          goto LABEL_52;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_37:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_55;
        v14 = (std::string *)*((_QWORD *)this + 7);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v14 = (std::string *)operator new();
          v14->__r_.__value_.__r.__words[0] = 0;
          v14->__r_.__value_.__l.__size_ = 0;
          v14->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 7) = v14;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14))
          goto LABEL_52;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_44:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_)
LABEL_55:
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v16 = (std::string *)*((_QWORD *)this + 8);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v16 = (std::string *)operator new();
          v16->__r_.__value_.__r.__words[0] = 0;
          v16->__r_.__value_.__l.__size_ = 0;
          v16->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 8) = v16;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v16))
          goto LABEL_52;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v17 = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 2u:
        if ((_DWORD)v7 != 18)
          goto LABEL_26;
        goto LABEL_30;
      case 3u:
        if ((_DWORD)v7 == 26)
          goto LABEL_37;
        goto LABEL_26;
      case 4u:
        if ((_DWORD)v7 == 34)
          goto LABEL_44;
LABEL_26:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_28;
        goto LABEL_53;
      default:
        goto LABEL_15;
    }
    break;
  }
LABEL_54:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v20);
  return v17;
}

void sub_1BD9C8510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Identity::SerializeWithCachedSizes(peernetworking::Identity *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  char *v5;
  uint64_t v6;

  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v4 = *((_DWORD *)this + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, *((_QWORD *)this + 6), a2);
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, *((_QWORD *)this + 7), a2);
  if ((*((_DWORD *)this + 8) & 8) != 0)
LABEL_5:
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(4, *((_QWORD *)this + 8), a2);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::Identity::ByteSize(peernetworking::Identity *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_45;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 6);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v2 = *((_DWORD *)this + 8);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
  v17 = *((_QWORD *)this + 7);
  v18 = *(unsigned __int8 *)(v17 + 23);
  v19 = v18;
  v20 = *(_QWORD *)(v17 + 8);
  if ((v18 & 0x80u) == 0)
    v21 = *(unsigned __int8 *)(v17 + 23);
  else
    v21 = v20;
  if (v21 >= 0x80)
  {
    v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v21);
    v18 = *(unsigned __int8 *)(v17 + 23);
    v20 = *(_QWORD *)(v17 + 8);
    v2 = *((_DWORD *)this + 8);
    v19 = *(_BYTE *)(v17 + 23);
  }
  else
  {
    v22 = 1;
  }
  if (v19 < 0)
    v18 = v20;
  v3 += v22 + v18 + 1;
  if ((v2 & 8) != 0)
  {
LABEL_36:
    v23 = *((_QWORD *)this + 8);
    v24 = *(unsigned __int8 *)(v23 + 23);
    v25 = v24;
    v26 = *(_QWORD *)(v23 + 8);
    if ((v24 & 0x80u) == 0)
      v27 = *(unsigned __int8 *)(v23 + 23);
    else
      v27 = v26;
    if (v27 >= 0x80)
    {
      v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v27);
      v24 = *(unsigned __int8 *)(v23 + 23);
      v26 = *(_QWORD *)(v23 + 8);
      v25 = *(_BYTE *)(v23 + 23);
    }
    else
    {
      v28 = 1;
    }
    if (v25 < 0)
      v24 = v26;
    v3 += v28 + v24 + 1;
  }
LABEL_45:
  if (*((char *)this + 31) < 0)
    v29 = *((_QWORD *)this + 2);
  else
    LODWORD(v29) = *((unsigned __int8 *)this + 31);
  result = (v3 + v29);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Identity::CheckTypeAndMergeFrom(std::string *this, std::string *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::Identity::MergeFrom(this, lpsrc, v5);
}

uint64_t peernetworking::Identity::IsInitialized(peernetworking::Identity *this)
{
  return 1;
}

_QWORD *peernetworking::Identity::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Identity");
}

void peernetworking::KeepAlive::~KeepAlive(void **this)
{
  *this = &off_1E76CA690;
  peernetworking::protobuf_AddDesc_peernetworking_2eproto((peernetworking *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  peernetworking::KeepAlive::~KeepAlive(this);
  JUMPOUT(0x1C3B7A848);
}

double peernetworking::KeepAlive::New(peernetworking::KeepAlive *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CA690;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t peernetworking::KeepAlive::MergePartialFromCodedStream(peernetworking::KeepAlive *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v3;
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;
  _BYTE v9[32];
  _QWORD v10[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v10, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9, (google::protobuf::io::ZeroCopyOutputStream *)v10);
  do
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
    }
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)TagFallback, (google::protobuf::io::CodedOutputStream *)v9, v3));
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v10);
  return v7;
}

void sub_1BD9C8960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::KeepAlive::SerializeWithCachedSizes(peernetworking::KeepAlive *this, google::protobuf::io::CodedOutputStream *a2)
{
  char *v3;
  uint64_t v4;

  if (*((char *)this + 31) < 0)
  {
    v3 = (char *)*((_QWORD *)this + 1);
    v4 = *((_QWORD *)this + 2);
  }
  else
  {
    v3 = (char *)this + 8;
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v3, v4);
}

uint64_t peernetworking::KeepAlive::ByteSize(peernetworking::KeepAlive *this)
{
  uint64_t v1;

  if (*((char *)this + 31) < 0)
    v1 = *((_QWORD *)this + 2);
  else
    v1 = *((unsigned __int8 *)this + 31);
  *((_DWORD *)this + 9) = v1;
  return v1;
}

std::string *peernetworking::KeepAlive::CheckTypeAndMergeFrom(peernetworking::KeepAlive *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return peernetworking::KeepAlive::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::KeepAlive::IsInitialized(peernetworking::KeepAlive *this)
{
  return 1;
}

_QWORD *peernetworking::KeepAlive::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.KeepAlive");
}

uint64_t peernetworking::PeerNetworkMessage::GetCachedSize(peernetworking::PeerNetworkMessage *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Note::GetCachedSize(peernetworking::Note *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::ShareInfo::GetCachedSize(peernetworking::ShareInfo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::RequestNote::GetCachedSize(peernetworking::RequestNote *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::RequestAttachment::GetCachedSize(peernetworking::RequestAttachment *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Attachment::GetCachedSize(peernetworking::Attachment *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::RequestMedia::GetCachedSize(peernetworking::RequestMedia *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Media::GetCachedSize(peernetworking::Media *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::UnavailableMedia::GetCachedSize(peernetworking::UnavailableMedia *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Invite::GetCachedSize(peernetworking::Invite *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::InviteReply::GetCachedSize(peernetworking::InviteReply *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Identity::GetCachedSize(peernetworking::Identity *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::KeepAlive::GetCachedSize(peernetworking::KeepAlive *this)
{
  return *((unsigned int *)this + 9);
}

peernetworking::Identity *google::protobuf::internal::GenericTypeHandler<peernetworking::Identity>::New()
{
  peernetworking::Identity *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (peernetworking::Identity *)operator new();
  peernetworking::Identity::Identity(v0, v1, v2);
  return v0;
}

void sub_1BD9C8AD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BD9C8BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  uint64_t v7;
  std::string *v8;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  std::string *v12;
  int32x2_t v13;
  int32x2_t v14;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v8 = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>((uint64_t)a2, v6);
      v9 = this[1].i32[1];
      v10 = this[1].i32[0];
      if ((int)v10 >= v9)
      {
        if (v9 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v9 + 1);
        v12 = (std::string *)google::protobuf::internal::GenericTypeHandler<peernetworking::Identity>::New();
        v13 = *this;
        v14 = this[1];
        this[1] = vadd_s32(v14, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
      }
      else
      {
        v11 = *this;
        this[1].i32[0] = v10 + 1;
        v12 = *(std::string **)(*(_QWORD *)&v11 + 8 * v10);
      }
      result = peernetworking::Identity::MergeFrom(v12, v8, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BD9C8CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1BD9C92E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9C93F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

BOOL ICProtobufUtilitiesParseArchiveFromNSData<airdrop_document::Document>(google::protobuf::MessageLite *a1, void *a2)
{
  id v3;
  char *v4;
  int v5;
  _BOOL8 v6;

  v3 = objc_retainAutorelease(a2);
  v4 = (char *)objc_msgSend(v3, "bytes");
  v5 = ICTTBoundedCheckedCastNSUIntegerToUInt32(objc_msgSend(v3, "length"));
  v6 = google::protobuf::MessageLite::ParseFromArray(a1, v4, v5);

  return v6;
}

void sub_1BD9C9464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id ICProtobufUtilitiesNSDataFromArchive<airdrop_document::Document>(google::protobuf::MessageLite *a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DF0]), "initWithLength:", (*(int (**)(google::protobuf::MessageLite *))(*(_QWORD *)a1 + 72))(a1));
  if ((unint64_t)objc_msgSend(v2, "length") >= 0xFFFFFFFF)
    objc_msgSend(MEMORY[0x1E0D641A0], "handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:", "[data length] < 4294967295U", "NSData *ICProtobufUtilitiesNSDataFromArchive(const T &) [T = airdrop_document::Document]", 1, 0, CFSTR("Data length greater than 32bit max"));
  v3 = objc_retainAutorelease(v2);
  google::protobuf::MessageLite::SerializeToArray(a1, (void *)objc_msgSend(v3, "mutableBytes"), objc_msgSend(v3, "length"));
  return v3;
}

void sub_1BD9C955C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9CBC98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9CC6D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BD9CD4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9CE6AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9CEB10(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1BD9CF824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9CF8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_BYTE *OUTLINED_FUNCTION_13_1(_BYTE *result, _BYTE *a2)
{
  *result = 0;
  *a2 = 0;
  return result;
}

const __CFString *ICStringFromSyncingApproach(uint64_t a1)
{
  if (a1)
    return CFSTR("FastSync");
  else
    return CFSTR("FullSync");
}

#error "1BD9D0518: call analysis failed (funcsize=104)"

void sub_1BD9D0B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9D0EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9D19F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9D1CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9D1FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9D6FA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9D73EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9D78C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1BD9D7A10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1BD9D8F6C: call analysis failed (funcsize=138)"

void sub_1BD9DBDAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9DC078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9DC49C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_15_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x20u);
}

uint64_t OUTLINED_FUNCTION_25()
{
  void *v0;

  return objc_msgSend(v0, "hash");
}

uint64_t OUTLINED_FUNCTION_26()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_31(void *a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_32()
{
  return objc_opt_class();
}

void OUTLINED_FUNCTION_34(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_35(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x12u);
}

uint64_t OUTLINED_FUNCTION_38()
{
  uint64_t v0;

  return v0;
}

void sub_1BD9E065C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9E0840(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9E09A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9E0F00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E11E8(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  MEMORY[0x1C3B7A848](v2, 0x10B3C40417120EDLL);

  _Unwind_Resume(a1);
}

void sub_1BD9E12C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  topotext::ParagraphStyle::~ParagraphStyle((topotext::ParagraphStyle *)va);
  _Unwind_Resume(a1);
}

void sub_1BD9E1354(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E13D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

BOOL ICDrawingOrientationIsLandscape(unint64_t a1)
{
  return a1 < 2;
}

void sub_1BD9E1430(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9E1540(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E1688(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E1778(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD9E1888(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E1A80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9E1BEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9E1C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9E1D08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9E1F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

BOOL ICDrawingCommandID::operator<(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  if (*(_DWORD *)a1 < *(_DWORD *)a2)
    return 1;
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  v5 = objc_msgSend(*(id *)(a1 + 8), "TTCompare:", *(_QWORD *)(a2 + 8));
  if (v5 == -1)
    return 1;
  return !v5 && *(_DWORD *)(a1 + 16) < *(_DWORD *)(a2 + 16);
}

void sub_1BD9E21D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  uint64_t v12;
  void *v13;

  _Unwind_Resume(a1);
}

BOOL ICDrawingCommandID::operator<=(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
      && (objc_msgSend(*(id *)(a1 + 8), "isEqual:", *(_QWORD *)(a2 + 8)) & 1) != 0
      || ICDrawingCommandID::operator<(a1, a2);
}

void sub_1BD9E2334(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E23CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1BD9E2464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9E2610(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E28B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD9E2CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;

  _Unwind_Resume(a1);
}

void google::protobuf::internal::DeleteEmptyString(google::protobuf::internal *this)
{
  if (google::protobuf::internal::empty_string_)
  {
    if (*(char *)(google::protobuf::internal::empty_string_ + 23) < 0)
      operator delete(*(void **)google::protobuf::internal::empty_string_);
    JUMPOUT(0x1C3B7A848);
  }
}

void sub_1BD9E4C14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E54C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  MEMORY[0x1C3B7A848](v4, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BD9E56A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9E5720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9E59A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BD9E5ABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1BD9E5BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1BD9E5C34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9E5CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9E5D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9E5DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9E5E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9E5EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9E5F54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9E6060(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  MEMORY[0x1C3B7A848](v2, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1BD9E6100(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C40A258B440);
  _Unwind_Resume(a1);
}

void sub_1BD9E6218(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

CRDT::Document_DocObject *google::protobuf::internal::GenericTypeHandler<CRDT::Document_DocObject>::New()
{
  CRDT::Document_DocObject *v0;

  v0 = (CRDT::Document_DocObject *)operator new();
  CRDT::Document_DocObject::Document_DocObject(v0);
  return v0;
}

void sub_1BD9E639C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

CRDT::Document_CustomObject_MapEntry *google::protobuf::internal::GenericTypeHandler<CRDT::Document_CustomObject_MapEntry>::New()
{
  CRDT::Document_CustomObject_MapEntry *v0;

  v0 = (CRDT::Document_CustomObject_MapEntry *)operator new();
  CRDT::Document_CustomObject_MapEntry::Document_CustomObject_MapEntry(v0);
  return v0;
}

void sub_1BD9E63FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40078F06BDLL);
  _Unwind_Resume(a1);
}

void sub_1BD9E6CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCNMutablePostalAddressClass_block_invoke(uint64_t a1)
{
  ContactsLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CNMutablePostalAddress");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNMutablePostalAddressClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCNMutablePostalAddressClass_block_invoke_cold_1();
    ContactsLibrary();
  }
}

void ContactsLibrary()
{
  void *v0;

  if (!ContactsLibraryCore_frameworkLibrary)
    ContactsLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!ContactsLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

Class __getCNPostalAddressFormatterClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  SEL v4;

  ContactsLibrary();
  result = objc_getClass("CNPostalAddressFormatter");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNPostalAddressFormatterClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (void *)__getCNPostalAddressFormatterClass_block_invoke_cold_1();
    return (Class)+[ICCipherV2 standardWrappedKeyLength](v3, v4);
  }
  return result;
}

void sub_1BD9E820C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9E8368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9E908C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9E9338(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1BD9E951C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9EACA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9EAE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9EAFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9EB76C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9EB9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9EC4A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD9EC53C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BD9EC618(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9EC6F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9EC800(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9ECB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9ECC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::VectorTimestamp::~VectorTimestamp((topotext::VectorTimestamp *)&a9);
  _Unwind_Resume(a1);
}

topotext::VectorTimestamp_Clock_ReplicaClock *google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock_ReplicaClock>::New()
{
  topotext::VectorTimestamp_Clock_ReplicaClock *v0;

  v0 = (topotext::VectorTimestamp_Clock_ReplicaClock *)operator new();
  topotext::VectorTimestamp_Clock_ReplicaClock::VectorTimestamp_Clock_ReplicaClock(v0);
  return v0;
}

void sub_1BD9ECC6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C40110CF19CLL);
  _Unwind_Resume(a1);
}

void sub_1BD9ED004(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1BD9ED580(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v2;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromAccountDataLockedNotesMode(int a1)
{
  const __CFString *v1;

  v1 = CFSTR("Unknown");
  if (a1 == 1)
    v1 = CFSTR("CustomPassword");
  if (a1 == 2)
    return CFSTR("DevicePassword");
  else
    return v1;
}

void sub_1BD9EF304(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1BD9EF408(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9EFD64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9EFE2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C40A258B440);
  _Unwind_Resume(a1);
}

void sub_1BD9EFF6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9F0020(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9F00DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1BD9F0340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);

  _Unwind_Resume(a1);
}

void sub_1BD9F051C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9F0DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9F45A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  id *v34;
  uint64_t v35;

  objc_destroyWeak(v34);
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v35 - 168), 8);
  _Block_object_dispose((const void *)(v35 - 136), 8);
  objc_destroyWeak((id *)(v35 - 104));
  _Unwind_Resume(a1);
}

void sub_1BD9F5744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9F944C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BD9F95B4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9F9C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1BD9FAC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9FB9F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BD9FC090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_1BD9FC768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id obj, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1BD9FCC08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id ICMainContext()
{
  void *v0;
  void *v1;

  +[ICNoteContext sharedContext](ICNoteContext, "sharedContext");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "managedObjectContext");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

void OUTLINED_FUNCTION_10_1(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_debug_impl(a1, v4, OS_LOG_TYPE_DEBUG, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_18_1(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1BD9FE1D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9FE270(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9FE318(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9FE360(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9FE400(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9FE4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BD9FE5A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD9FE6A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9FE748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BD9FE88C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  uint64_t v12;

  MEMORY[0x1C3B7A848](v12, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1BD9FEB14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1BD9FEC30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9FECFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9FEF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1BD9FF02C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9FF08C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9FF224(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BD9FF2B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9FF358(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BD9FF3E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BD9FF5A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BD9FF67C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BD9FF700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9FF954(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BD9FFA88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BD9FFE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_1BDA001E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BDA00518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

CRDT::Dictionary_Element *google::protobuf::internal::GenericTypeHandler<CRDT::Dictionary_Element>::New()
{
  CRDT::Dictionary_Element *v0;

  v0 = (CRDT::Dictionary_Element *)operator new();
  CRDT::Dictionary_Element::Dictionary_Element(v0);
  return v0;
}

void sub_1BDA0065C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

void sub_1BDA006EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA0092C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA00A24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA00CCC(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  MEMORY[0x1C3B7A848](v2, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BDA00F34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA01018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDA01188(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA0123C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1BDA013D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA015D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1BDA01854(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

CRDT::OneOf_Element *google::protobuf::internal::GenericTypeHandler<CRDT::OneOf_Element>::New()
{
  CRDT::OneOf_Element *v0;

  v0 = (CRDT::OneOf_Element *)operator new();
  CRDT::OneOf_Element::OneOf_Element(v0);
  return v0;
}

void sub_1BDA01960(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

void sub_1BDA02890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA02CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA02F08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA0318C(_Unwind_Exception *a1, void *a2, ...)
{
  void *v2;
  void *v3;
  va_list va;

  va_start(va, a2);
  drawing::Rectangle::~Rectangle((drawing::Rectangle *)va);

  _Unwind_Resume(a1);
}

void sub_1BDA03538(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  MEMORY[0x1C3B7A848](v2, 0x1093C405ACC521ELL);

  _Unwind_Resume(a1);
}

void sub_1BDA036BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  drawing::Drawing::~Drawing((drawing::Drawing *)&a9);
  _Unwind_Resume(a1);
}

drawing::Command *google::protobuf::internal::GenericTypeHandler<drawing::Command>::New()
{
  drawing::Command *v0;

  v0 = (drawing::Command *)operator new();
  drawing::Command::Command(v0);
  return v0;
}

void sub_1BDA0371C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40629AD421);
  _Unwind_Resume(a1);
}

void sub_1BDA037E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA05010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA053E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA056CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA05D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA06124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA074B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA07A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA07CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA080DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA0837C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA09374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA094EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA0A170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA0AB20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA0ABF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA0AD18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  uint64_t v11;

  MEMORY[0x1C3B7A848](v11, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1BDA0ADB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA0AE58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA0AEFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA0AFBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BDA0B068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA0B0F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA0B1B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA0B448(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

const __CFString *ICStringForDocumentMergeControllingReason(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6)
    return CFSTR("Selection");
  else
    return off_1E76CBD28[a1 - 1];
}

void sub_1BDA0BAE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA0BB90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA0BC94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA0BD40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  topotext::Todo::~Todo((topotext::Todo *)va);
  _Unwind_Resume(a1);
}

void sub_1BDA0D078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA0E7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDA0F2E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA0F544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA11AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA135E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA1392C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 176), 8);
  _Unwind_Resume(a1);
}

Class __getNLEmbeddingClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!NaturalLanguageLibraryCore_frameworkLibrary)
  {
    NaturalLanguageLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!NaturalLanguageLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_6:
      __getNLEmbeddingClass_block_invoke_cold_1();
    }
  }
  result = objc_getClass("NLEmbedding");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    goto LABEL_6;
  getNLEmbeddingClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t NLPLibrary()
{
  uint64_t v0;
  void *v2;

  if (!NLPLibraryCore_frameworkLibrary)
    NLPLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = NLPLibraryCore_frameworkLibrary;
  if (!NLPLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_5(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)result = a4;
  *(_QWORD *)(result + 4) = a2;
  *(_WORD *)(result + 12) = 2048;
  *(_QWORD *)(result + 14) = a3;
  return result;
}

uint64_t topotext::protobuf_ShutdownFile_topotext_2eproto(topotext *this)
{
  uint64_t result;

  if (topotext::String::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::String::default_instance_ + 8))(topotext::String::default_instance_);
  if (topotext::VectorTimestamp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::VectorTimestamp::default_instance_ + 8))(topotext::VectorTimestamp::default_instance_);
  if (topotext::VectorTimestamp_Clock::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::VectorTimestamp_Clock::default_instance_ + 8))(topotext::VectorTimestamp_Clock::default_instance_);
  if (topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_ + 8))(topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_);
  if (topotext::CharID::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::CharID::default_instance_ + 8))(topotext::CharID::default_instance_);
  if (topotext::Substring::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Substring::default_instance_ + 8))(topotext::Substring::default_instance_);
  if (topotext::Selection::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Selection::default_instance_ + 8))(topotext::Selection::default_instance_);
  if (topotext::Selection_Range::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Selection_Range::default_instance_ + 8))(topotext::Selection_Range::default_instance_);
  if (topotext::AttributeRun::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::AttributeRun::default_instance_ + 8))(topotext::AttributeRun::default_instance_);
  if (topotext::Font::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Font::default_instance_ + 8))(topotext::Font::default_instance_);
  if (topotext::ParagraphStyle::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::ParagraphStyle::default_instance_ + 8))(topotext::ParagraphStyle::default_instance_);
  if (topotext::AttachmentInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::AttachmentInfo::default_instance_ + 8))(topotext::AttachmentInfo::default_instance_);
  if (topotext::Attachment::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Attachment::default_instance_ + 8))(topotext::Attachment::default_instance_);
  if (topotext::Location::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Location::default_instance_ + 8))(topotext::Location::default_instance_);
  if (topotext::Media::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Media::default_instance_ + 8))(topotext::Media::default_instance_);
  if (topotext::PreviewImage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::PreviewImage::default_instance_ + 8))(topotext::PreviewImage::default_instance_);
  if (topotext::Todo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Todo::default_instance_ + 8))(topotext::Todo::default_instance_);
  if (topotext::Color::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::Color::default_instance_ + 8))(topotext::Color::default_instance_);
  if (topotext::BoxedValue::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)topotext::BoxedValue::default_instance_ + 8))(topotext::BoxedValue::default_instance_);
  result = topotext::WallClockMergeableValue::default_instance_;
  if (topotext::WallClockMergeableValue::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)topotext::WallClockMergeableValue::default_instance_ + 8))(topotext::WallClockMergeableValue::default_instance_);
  return result;
}

double topotext::VectorTimestamp::VectorTimestamp(topotext::VectorTimestamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CC178;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double topotext::VectorTimestamp_Clock_ReplicaClock::VectorTimestamp_Clock_ReplicaClock(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CC088;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double topotext::CharID::CharID(topotext::CharID *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CC1F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double topotext::Substring::Substring(topotext::Substring *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CC268;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_QWORD *)((char *)this + 53) = 0;
  return result;
}

double topotext::Selection_Range::Selection_Range(topotext::Selection_Range *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CC2E0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double topotext::Color::Color(topotext::Color *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CC808;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double topotext::WallClockMergeableValue::WallClockMergeableValue(topotext::WallClockMergeableValue *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CC8F8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

std::string *topotext::String::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int32 v8;
  const std::string *v9;
  std::string *v10;
  int32x2_t *v11;
  int32x2_t *v12;
  const std::string::value_type *v13;
  int32x2_t *v14;
  int32x2_t v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  char v20;
  std::string v21[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 405);
    v4 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>(this + 6, a2 + 6);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>(this + 10, a2 + 10);
  v5 = (uint64_t)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>(this + 13, a2 + 13);
  LOBYTE(v8) = a2[4].i8[0];
  if ((_BYTE)v8)
  {
    if ((a2[4].i8[0] & 1) != 0)
    {
      v9 = (const std::string *)a2[5];
      this[4].i32[0] |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(v5, v6, v7);
      v10 = (std::string *)this[5];
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        this[5] = (int32x2_t)v10;
      }
      v5 = (uint64_t)std::string::operator=(v10, v9);
      v8 = a2[4].i32[0];
    }
    if ((v8 & 4) != 0)
    {
      this[4].i32[0] |= 4u;
      v11 = (int32x2_t *)this[9];
      if (!v11)
      {
        v5 = operator new();
        v11 = (int32x2_t *)v5;
        *(_QWORD *)v5 = &off_1E76CC178;
        *(_OWORD *)(v5 + 8) = 0u;
        *(_OWORD *)(v5 + 24) = 0u;
        *(_OWORD *)(v5 + 40) = 0u;
        *(_DWORD *)(v5 + 56) = 0;
        this[9] = (int32x2_t)v5;
      }
      v12 = (int32x2_t *)a2[9];
      if (!v12)
      {
        topotext::protobuf_AddDesc_topotext_2eproto((topotext *)v5);
        v12 = *(int32x2_t **)(topotext::String::default_instance_ + 72);
      }
      topotext::VectorTimestamp::MergeFrom(v11, v12);
    }
  }
  v15 = a2[1];
  v14 = a2 + 1;
  v13 = (const std::string::value_type *)v15;
  v16 = v14[2].i8[7];
  if (v16 >= 0)
    v17 = (const std::string::value_type *)v14;
  else
    v17 = v13;
  if (v16 >= 0)
    v18 = v14[2].u8[7];
  else
    v18 = (std::string::size_type)v14[1];
  return std::string::append((std::string *)&this[1], v17, v18);
}

void sub_1BDA1522C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::String::default_instance(topotext::String *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  return topotext::String::default_instance_;
}

topotext::String *topotext::String::New(topotext::String *this)
{
  topotext::String *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::String *)operator new();
  topotext::String::String(v1, v2, v3);
  return v1;
}

void sub_1BDA152C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(int *)(this + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t topotext::String::SerializeWithCachedSizes(topotext::String *this, google::protobuf::io::CodedOutputStream *a2)
{
  topotext::String *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = this;
  if ((*((_BYTE *)this + 32) & 1) != 0)
    this = (topotext::String *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((_QWORD *)this + 5), a2);
  if (*((int *)v3 + 14) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)v3 + 48, v4);
      this = (topotext::String *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)v3 + 14));
  }
  if ((*((_BYTE *)v3 + 32) & 4) != 0)
  {
    v6 = *((_QWORD *)v3 + 9);
    if (!v6)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      v6 = *(_QWORD *)(topotext::String::default_instance_ + 72);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(4, v6, a2);
  }
  if (*((int *)v3 + 22) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)v3 + 80, v7);
      google::protobuf::internal::WireFormatLite::WriteMessage(5, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)v3 + 22));
  }
  if (*((int *)v3 + 28) >= 1)
  {
    v9 = 0;
    do
    {
      v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)v3 + 104, v9);
      google::protobuf::internal::WireFormatLite::WriteMessage(6, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v3 + 28));
  }
  if (*((char *)v3 + 31) < 0)
  {
    v11 = (char *)*((_QWORD *)v3 + 1);
    v12 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v11 = (char *)v3 + 8;
    LODWORD(v12) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v11, v12);
}

uint64_t topotext::String::ByteSize(topotext::String *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  topotext::VectorTimestamp *v11;
  google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  topotext::Substring *v18;
  google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  topotext::AttributeRun *v25;
  google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  topotext::Attachment *v32;
  google::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_21;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 4) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 4) != 0)
  {
LABEL_15:
    v11 = (topotext::VectorTimestamp *)*((_QWORD *)this + 9);
    if (!v11)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      v11 = *(topotext::VectorTimestamp **)(topotext::String::default_instance_ + 72);
    }
    v12 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp::ByteSize(v11);
    v13 = (int)v12;
    if (v12 >= 0x80)
      v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    else
      v14 = 1;
    v3 += v13 + v14 + 1;
  }
LABEL_21:
  v15 = *((_DWORD *)this + 14);
  v16 = v15 + v3;
  if (v15 >= 1)
  {
    v17 = 0;
    do
    {
      v18 = (topotext::Substring *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)this + 48, v17);
      v19 = (google::protobuf::io::CodedOutputStream *)topotext::Substring::ByteSize(v18);
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v16 += v20 + v21;
      ++v17;
    }
    while (v17 < *((_DWORD *)this + 14));
  }
  v22 = *((_DWORD *)this + 22);
  v23 = v22 + v16;
  if (v22 >= 1)
  {
    v24 = 0;
    do
    {
      v25 = (topotext::AttributeRun *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)this + 80, v24);
      v26 = (google::protobuf::io::CodedOutputStream *)topotext::AttributeRun::ByteSize(v25);
      v27 = (int)v26;
      if (v26 >= 0x80)
        v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      else
        v28 = 1;
      v23 += v27 + v28;
      ++v24;
    }
    while (v24 < *((_DWORD *)this + 22));
  }
  v29 = *((_DWORD *)this + 28);
  v30 = v29 + v23;
  if (v29 >= 1)
  {
    v31 = 0;
    do
    {
      v32 = (topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)this + 104, v31);
      v33 = (google::protobuf::io::CodedOutputStream *)topotext::Attachment::ByteSize(v32);
      v34 = (int)v33;
      if (v33 >= 0x80)
        v35 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
      else
        v35 = 1;
      v30 += v34 + v35;
      ++v31;
    }
    while (v31 < *((_DWORD *)this + 28));
  }
  if (*((char *)this + 31) < 0)
    v36 = *((_QWORD *)this + 2);
  else
    LODWORD(v36) = *((unsigned __int8 *)this + 31);
  result = (v30 + v36);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::String::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::String::MergeFrom(this, lpsrc);
}

std::string *topotext::VectorTimestamp::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  const std::string::value_type *v5;
  int32x2_t *v6;
  int32x2_t v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  char v12;
  std::string v13[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 1073);
    v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>(this + 5, a2 + 5);
  v7 = a2[1];
  v6 = a2 + 1;
  v5 = (const std::string::value_type *)v7;
  v8 = v6[2].i8[7];
  if (v8 >= 0)
    v9 = (const std::string::value_type *)v6;
  else
    v9 = v5;
  if (v8 >= 0)
    v10 = v6[2].u8[7];
  else
    v10 = (std::string::size_type)v6[1];
  return std::string::append((std::string *)&this[1], v9, v10);
}

void sub_1BDA157A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *topotext::String::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.String");
}

std::string *topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom(topotext::VectorTimestamp_Clock_ReplicaClock *this, const topotext::VectorTimestamp_Clock_ReplicaClock *a2)
{
  std::string *v4;
  int v5;
  int v6;
  int v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 649);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
    }
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BDA15894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

double topotext::VectorTimestamp_Clock_ReplicaClock::New(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CC088;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::Clear(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::SerializeWithCachedSizes(topotext::VectorTimestamp_Clock_ReplicaClock *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::ByteSize(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  char v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  uint64_t result;

  v2 = *((_BYTE *)this + 32);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_14;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  else
    v6 = 2;
  v3 += v6;
LABEL_14:
  if (*((char *)this + 31) < 0)
    v7 = *((_QWORD *)this + 2);
  else
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  result = (v3 + v7);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp_Clock_ReplicaClock::CheckTypeAndMergeFrom(topotext::VectorTimestamp_Clock_ReplicaClock *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::IsInitialized(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  return 1;
}

_QWORD *topotext::VectorTimestamp_Clock_ReplicaClock::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp.Clock.ReplicaClock");
}

std::string *topotext::VectorTimestamp_Clock::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  const std::string::value_type *v10;
  int32x2_t *v11;
  int32x2_t v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 881);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  v5 = google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>(this + 6, a2 + 6);
  if ((a2[4].i8[0] & 1) != 0)
  {
    v8 = (const std::string *)a2[5];
    this[4].i32[0] |= 1u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
    v9 = (std::string *)this[5];
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      v9->__r_.__value_.__r.__words[0] = 0;
      this[5] = (int32x2_t)v9;
    }
    std::string::operator=(v9, v8);
  }
  v12 = a2[1];
  v11 = a2 + 1;
  v10 = (const std::string::value_type *)v12;
  v13 = v11[2].i8[7];
  if (v13 >= 0)
    v14 = (const std::string::value_type *)v11;
  else
    v14 = v10;
  if (v13 >= 0)
    v15 = v11[2].u8[7];
  else
    v15 = (std::string::size_type)v11[1];
  return std::string::append((std::string *)&this[1], v14, v15);
}

void sub_1BDA15B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

topotext::VectorTimestamp_Clock *topotext::VectorTimestamp_Clock::New(topotext::VectorTimestamp_Clock *this)
{
  topotext::VectorTimestamp_Clock *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::VectorTimestamp_Clock *)operator new();
  topotext::VectorTimestamp_Clock::VectorTimestamp_Clock(v1, v2, v3);
  return v1;
}

void sub_1BDA15BF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40E3C8ABF7);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = this;
  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor(this, a2, a3);
    v4 = *(_QWORD *)(this + 40);
    if (v4 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v4 + 23) < 0)
      {
        **(_BYTE **)v4 = 0;
        *(_QWORD *)(v4 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v4 = 0;
        *(_BYTE *)(v4 + 23) = 0;
      }
    }
  }
  if (*(int *)(this + 56) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v3 + 56));
  }
  *(_DWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t topotext::VectorTimestamp_Clock::SerializeWithCachedSizes(topotext::VectorTimestamp_Clock *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  if ((*((_BYTE *)this + 32) & 1) != 0)
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
  if (*((int *)this + 14) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)this + 48, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::VectorTimestamp_Clock::ByteSize(topotext::VectorTimestamp_Clock *this)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  topotext::VectorTimestamp_Clock_ReplicaClock *v13;
  google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 5);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    v2 = v8 + v4;
  }
  else
  {
    v2 = 0;
  }
  v10 = *((_DWORD *)this + 14);
  v11 = v10 + v2;
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      v13 = (topotext::VectorTimestamp_Clock_ReplicaClock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)this + 48, v12);
      v14 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp_Clock_ReplicaClock::ByteSize(v13);
      v15 = (int)v14;
      if (v14 >= 0x80)
        v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      else
        v16 = 1;
      v11 += v15 + v16;
      ++v12;
    }
    while (v12 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
    v17 = *((_QWORD *)this + 2);
  else
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  result = (v11 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp_Clock::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::VectorTimestamp_Clock::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp_Clock::IsInitialized(topotext::VectorTimestamp_Clock *this)
{
  return 1;
}

_QWORD *topotext::VectorTimestamp_Clock::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp.Clock");
}

double topotext::VectorTimestamp::New(topotext::VectorTimestamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CC178;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t topotext::VectorTimestamp::SerializeWithCachedSizes(topotext::VectorTimestamp *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  if (*((int *)this + 12) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::VectorTimestamp::ByteSize(topotext::VectorTimestamp *this)
{
  int v2;
  int v3;
  topotext::VectorTimestamp_Clock *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (topotext::VectorTimestamp_Clock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)this + 40, v3);
      v5 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp_Clock::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
    v8 = *((_QWORD *)this + 2);
  else
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::VectorTimestamp::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp::IsInitialized(topotext::VectorTimestamp *this)
{
  return 1;
}

_QWORD *topotext::VectorTimestamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp");
}

std::string *topotext::CharID::MergeFrom(topotext::CharID *this, const topotext::CharID *a2)
{
  std::string *v4;
  int v5;
  int v6;
  int v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 1303);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
    }
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BDA16174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

double topotext::CharID::New(topotext::CharID *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CC1F0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t topotext::CharID::Clear(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::CharID::SerializeWithCachedSizes(topotext::CharID *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::CharID::ByteSize(topotext::CharID *this)
{
  char v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  uint64_t result;

  v2 = *((_BYTE *)this + 32);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_14;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  else
    v6 = 2;
  v3 += v6;
LABEL_14:
  if (*((char *)this + 31) < 0)
    v7 = *((_QWORD *)this + 2);
  else
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  result = (v3 + v7);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::CharID::CheckTypeAndMergeFrom(topotext::CharID *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::CharID::MergeFrom(this, lpsrc);
}

uint64_t topotext::CharID::IsInitialized(topotext::CharID *this)
{
  return 1;
}

_QWORD *topotext::CharID::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.CharID");
}

std::string *topotext::Substring::MergeFrom(topotext::Substring *this, const topotext::Substring *a2)
{
  topotext::Substring *v3;
  std::string *v4;
  std::string *v5;
  int v6;
  int v7;
  char v8;
  const std::string::value_type *v9;
  char *v10;
  const std::string::value_type *v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  topotext::CharID *v16;
  const topotext::CharID *v17;
  int v18;
  topotext::CharID *v19;
  const topotext::CharID *v20;
  char v21;
  std::string v22[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 1654);
    v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 729);
    v5 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  v6 = *((_DWORD *)a2 + 18);
  if (v6)
  {
    google::protobuf::RepeatedField<unsigned int>::Reserve((_DWORD *)v3 + 16, *((_DWORD *)v3 + 18) + v6);
    this = (topotext::Substring *)memcpy((void *)(*((_QWORD *)v3 + 8) + 4 * *((int *)v3 + 18)), *((const void **)a2 + 8), 4 * *((int *)a2 + 18));
    *((_DWORD *)v3 + 18) += *((_DWORD *)a2 + 18);
  }
  LOBYTE(v7) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v7)
    goto LABEL_11;
  if ((*((_BYTE *)a2 + 32) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 32) & 2) == 0)
      goto LABEL_8;
LABEL_23:
    v18 = *((_DWORD *)a2 + 14);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 14) = v18;
    v7 = *((_DWORD *)a2 + 8);
    if ((v7 & 4) == 0)
    {
LABEL_9:
      if ((v7 & 8) == 0)
        goto LABEL_11;
      goto LABEL_10;
    }
    goto LABEL_24;
  }
  *((_DWORD *)v3 + 8) |= 1u;
  v16 = (topotext::CharID *)*((_QWORD *)v3 + 5);
  if (!v16)
  {
    this = (topotext::Substring *)operator new();
    v16 = this;
    *(_QWORD *)this = &off_1E76CC1F0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)this + 5) = 0;
    *((_QWORD *)v3 + 5) = this;
  }
  v17 = (const topotext::CharID *)*((_QWORD *)a2 + 5);
  if (!v17)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v17 = *(const topotext::CharID **)(topotext::Substring::default_instance_ + 40);
  }
  this = (topotext::Substring *)topotext::CharID::MergeFrom(v16, v17);
  v7 = *((_DWORD *)a2 + 8);
  if ((v7 & 2) != 0)
    goto LABEL_23;
LABEL_8:
  if ((v7 & 4) == 0)
    goto LABEL_9;
LABEL_24:
  *((_DWORD *)v3 + 8) |= 4u;
  v19 = (topotext::CharID *)*((_QWORD *)v3 + 6);
  if (!v19)
  {
    this = (topotext::Substring *)operator new();
    v19 = this;
    *(_QWORD *)this = &off_1E76CC1F0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)this + 5) = 0;
    *((_QWORD *)v3 + 6) = this;
  }
  v20 = (const topotext::CharID *)*((_QWORD *)a2 + 6);
  if (!v20)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v20 = *(const topotext::CharID **)(topotext::Substring::default_instance_ + 48);
  }
  topotext::CharID::MergeFrom(v19, v20);
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_10:
    v8 = *((_BYTE *)a2 + 60);
    *((_DWORD *)v3 + 8) |= 8u;
    *((_BYTE *)v3 + 60) = v8;
  }
LABEL_11:
  v11 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v10 = (char *)a2 + 8;
  v9 = v11;
  v12 = v10[23];
  if (v12 >= 0)
    v13 = v10;
  else
    v13 = v9;
  if (v12 >= 0)
    v14 = v10[23];
  else
    v14 = *((_QWORD *)v10 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v13, v14);
}

void sub_1BDA165C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Substring::default_instance(topotext::Substring *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  return topotext::Substring::default_instance_;
}

double topotext::Substring::New(topotext::Substring *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CC268;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 53) = 0;
  return result;
}

uint64_t topotext::Substring::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0xF) != 0)
  {
    *(_BYTE *)(this + 60) = 0;
    *(_DWORD *)(this + 56) = 0;
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 40);
      if (v2)
      {
        *(_QWORD *)(v2 + 40) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        if (*(char *)(v2 + 31) < 0)
        {
          **(_BYTE **)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v2 + 8) = 0;
          *(_BYTE *)(v2 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 48);
      if (v3)
      {
        *(_QWORD *)(v3 + 40) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(google::protobuf::internal::WireFormatLite::FieldType)13>(google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  char *v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;

  v13 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!(_DWORD)result)
      return result;
    v5 = v13;
  }
  else
  {
    v5 = *v4;
    v13 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v12 = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        result = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v12 = *v8;
        *((_QWORD *)this + 1) = v8 + 1;
      }
      v9 = a2[2];
      if (v9 == a2[3])
      {
        google::protobuf::RepeatedField<unsigned int>::Reserve(a2, v9 + 1);
        v9 = a2[2];
      }
      v10 = v12;
      v11 = *(_QWORD *)a2;
      a2[2] = v9 + 1;
      *(_DWORD *)(v11 + 4 * v9) = v10;
    }
    while ((int)google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  google::protobuf::io::CodedInputStream::PopLimit((uint64_t)this, v7);
  return 1;
}

uint64_t topotext::Substring::SerializeWithCachedSizes(topotext::Substring *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  topotext::Substring *v5;
  int v6;
  int v7;
  unsigned int *v8;
  google::protobuf::io::CodedOutputStream *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    v12 = *((_QWORD *)this + 5);
    if (!v12)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      v12 = *(_QWORD *)(topotext::Substring::default_instance_ + 40);
    }
    this = (topotext::Substring *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v12, a2);
    v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::Substring *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 14), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_15:
  v13 = *((_QWORD *)v5 + 6);
  if (!v13)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v13 = *(_QWORD *)(topotext::Substring::default_instance_ + 48);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(3, v13, a2);
  if ((*((_DWORD *)v5 + 8) & 8) != 0)
LABEL_5:
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)4, *((unsigned __int8 *)v5 + 60), a2, a4);
LABEL_6:
  if (*((int *)v5 + 18) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = (unsigned int *)google::protobuf::RepeatedField<unsigned int>::Get((uint64_t)v5 + 64, v7);
      google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)5, *v8, a2, v9);
      ++v7;
    }
    while (v7 < *((_DWORD *)v5 + 18));
  }
  if (*((char *)v5 + 31) < 0)
  {
    v10 = (char *)*((_QWORD *)v5 + 1);
    v11 = *((_QWORD *)v5 + 2);
  }
  else
  {
    v10 = (char *)v5 + 8;
    LODWORD(v11) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v10, v11);
}

uint64_t topotext::Substring::ByteSize(topotext::Substring *this)
{
  int v2;
  int v3;
  int v4;
  topotext::CharID *v5;
  google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  google::protobuf::io::CodedOutputStream *v9;
  int v10;
  topotext::CharID *v11;
  google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  google::protobuf::io::CodedOutputStream *v18;
  int v19;
  uint64_t v20;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_26;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v5 = (topotext::CharID *)*((_QWORD *)this + 5);
    if (!v5)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      v5 = *(topotext::CharID **)(topotext::Substring::default_instance_ + 40);
    }
    v6 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = v7 + v8 + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_16;
    goto LABEL_12;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
LABEL_12:
    v9 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v9 >= 0x80)
    {
      v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v10 = 2;
    }
    v3 += v10;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v11 = (topotext::CharID *)*((_QWORD *)this + 6);
    if (!v11)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      v11 = *(topotext::CharID **)(topotext::Substring::default_instance_ + 48);
    }
    v12 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v11);
    v13 = (int)v12;
    if (v12 >= 0x80)
      v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    else
      v14 = 1;
    v3 += v13 + v14 + 1;
    v2 = *((_DWORD *)this + 8);
  }
  if ((v2 & 8) != 0)
    v4 = v3 + 2;
  else
    v4 = v3;
LABEL_26:
  v15 = *((_DWORD *)this + 18);
  if (v15 < 1)
  {
    v17 = 0;
  }
  else
  {
    v16 = 0;
    v17 = 0;
    do
    {
      v18 = (google::protobuf::io::CodedOutputStream *)*(unsigned int *)google::protobuf::RepeatedField<unsigned int>::Get((uint64_t)this + 64, v16);
      if (v18 >= 0x80)
        v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      else
        v19 = 1;
      v17 += v19;
      ++v16;
      v15 = *((_DWORD *)this + 18);
    }
    while (v16 < v15);
  }
  if (*((char *)this + 31) < 0)
    v20 = *((_QWORD *)this + 2);
  else
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  result = (v17 + v4 + v15 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Substring::CheckTypeAndMergeFrom(topotext::Substring *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Substring::MergeFrom(this, lpsrc);
}

uint64_t topotext::Substring::IsInitialized(topotext::Substring *this)
{
  return 1;
}

_QWORD *topotext::Substring::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Substring");
}

BOOL topotext::Selection_Affinity_IsValid(topotext *this)
{
  return this < 2;
}

std::string *topotext::Selection_Range::MergeFrom(topotext::Selection_Range *this, const topotext::Selection_Range *a2)
{
  topotext::Selection_Range *v3;
  std::string *v4;
  int v5;
  topotext::CharID *v6;
  const topotext::CharID *v7;
  topotext::CharID *v8;
  const topotext::CharID *v9;
  const std::string::value_type *v10;
  char *v11;
  const std::string::value_type *v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  char v17;
  std::string v18[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 1924);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (topotext::CharID *)*((_QWORD *)v3 + 5);
      if (!v6)
      {
        this = (topotext::Selection_Range *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E76CC1F0;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)v3 + 5) = this;
      }
      v7 = (const topotext::CharID *)*((_QWORD *)a2 + 5);
      if (!v7)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        v7 = *(const topotext::CharID **)(topotext::Selection_Range::default_instance_ + 40);
      }
      this = (topotext::Selection_Range *)topotext::CharID::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      v8 = (topotext::CharID *)*((_QWORD *)v3 + 6);
      if (!v8)
      {
        this = (topotext::Selection_Range *)operator new();
        v8 = this;
        *(_QWORD *)this = &off_1E76CC1F0;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)v3 + 6) = this;
      }
      v9 = (const topotext::CharID *)*((_QWORD *)a2 + 6);
      if (!v9)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        v9 = *(const topotext::CharID **)(topotext::Selection_Range::default_instance_ + 48);
      }
      topotext::CharID::MergeFrom(v8, v9);
    }
  }
  v12 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v11 = (char *)a2 + 8;
  v10 = v12;
  v13 = v11[23];
  if (v13 >= 0)
    v14 = v11;
  else
    v14 = v10;
  if (v13 >= 0)
    v15 = v11[23];
  else
    v15 = *((_QWORD *)v11 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1BDA16CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::Selection_Range::~Selection_Range(void **this)
{
  *this = &off_1E76CC2E0;
  topotext::Selection_Range::SharedDtor((topotext::Selection_Range *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  topotext::Selection_Range::~Selection_Range(this);
  JUMPOUT(0x1C3B7A848);
}

void topotext::Selection_Range::SharedDtor(topotext::Selection_Range *this)
{
  uint64_t v2;
  uint64_t v3;

  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Selection_Range *)topotext::Selection_Range::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t topotext::Selection_Range::default_instance(topotext::Selection_Range *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  return topotext::Selection_Range::default_instance_;
}

double topotext::Selection_Range::New(topotext::Selection_Range *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CC2E0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t topotext::Selection_Range::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 40);
      if (v2)
      {
        *(_QWORD *)(v2 + 40) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        if (*(char *)(v2 + 31) < 0)
        {
          **(_BYTE **)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v2 + 8) = 0;
          *(_BYTE *)(v2 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 48);
      if (v3)
      {
        *(_QWORD *)(v3 + 40) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Selection_Range::MergePartialFromCodedStream(topotext::Selection_Range *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  uint64_t v9;
  char *v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  _BYTE v28[32];
  _QWORD v29[2];
  unsigned int v30;

  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        break;
    }
    else
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if ((_DWORD)v7 == 18)
        goto LABEL_33;
      goto LABEL_21;
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      v9 = *((_QWORD *)this + 5);
      if (!v9)
      {
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E76CC1F0;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_QWORD *)(v9 + 40) = 0;
        *((_QWORD *)this + 5) = v9;
      }
      v30 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
          goto LABEL_48;
      }
      else
      {
        v30 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      v12 = *((_DWORD *)a2 + 14);
      v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13)
        goto LABEL_48;
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!topotext::CharID::MergePartialFromCodedStream((topotext::CharID *)v9, a2)
        || !*((_BYTE *)a2 + 36))
      {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      v15 = *((_DWORD *)a2 + 14);
      v16 = __OFSUB__(v15, 1);
      v17 = v15 - 1;
      if (v17 < 0 == v16)
        *((_DWORD *)a2 + 14) = v17;
      v18 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v18 < *((_QWORD *)a2 + 2) && *v18 == 18)
      {
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        v19 = *((_QWORD *)this + 6);
        if (!v19)
        {
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E76CC1F0;
          *(_OWORD *)(v19 + 8) = 0u;
          *(_OWORD *)(v19 + 24) = 0u;
          *(_QWORD *)(v19 + 40) = 0;
          *((_QWORD *)this + 6) = v19;
        }
        v30 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
            goto LABEL_48;
        }
        else
        {
          v30 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !topotext::CharID::MergePartialFromCodedStream((topotext::CharID *)v19, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_48:
          v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        v24 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v16)
          *((_DWORD *)a2 + 14) = v25;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          v26 = 1;
          *((_BYTE *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_49;
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48;
    }
  }
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_18;
LABEL_49:
  v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1BDA171D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection_Range::SerializeWithCachedSizes(topotext::Selection_Range *this, google::protobuf::io::CodedOutputStream *a2)
{
  topotext::Selection_Range *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    if (!v5)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      v5 = *(_QWORD *)(topotext::Selection_Range::default_instance_ + 40);
    }
    this = (topotext::Selection_Range *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_QWORD *)v3 + 6);
    if (!v6)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      v6 = *(_QWORD *)(topotext::Selection_Range::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)v3 + 1);
    v8 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v7 = (char *)v3 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Selection_Range::ByteSize(topotext::Selection_Range *this)
{
  int v2;
  topotext::CharID *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  topotext::CharID *v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (topotext::CharID *)*((_QWORD *)this + 5);
  if (!v3)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    v3 = *(topotext::CharID **)(topotext::Selection_Range::default_instance_ + 40);
  }
  v4 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    v7 = (topotext::CharID *)*((_QWORD *)this + 6);
    if (!v7)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      v7 = *(topotext::CharID **)(topotext::Selection_Range::default_instance_ + 48);
    }
    v8 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Selection_Range::CheckTypeAndMergeFrom(topotext::Selection_Range *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Selection_Range::MergeFrom(this, lpsrc);
}

uint64_t topotext::Selection_Range::IsInitialized(topotext::Selection_Range *this)
{
  return 1;
}

_QWORD *topotext::Selection_Range::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Selection.Range");
}

std::string *topotext::Selection::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  unsigned int v5;
  const std::string::value_type *v6;
  int32x2_t *v7;
  int32x2_t v8;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 2186);
    v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(this + 5, a2 + 5);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>(this + 8, a2 + 8);
  if ((a2[4].i8[0] & 4) != 0)
  {
    v5 = a2[11].u32[0];
    if (v5 >= 2)
      topotext::Selection::MergeFrom();
    this[4].i32[0] |= 4u;
    this[11].i32[0] = v5;
  }
  v8 = a2[1];
  v7 = a2 + 1;
  v6 = (const std::string::value_type *)v8;
  v9 = v7[2].i8[7];
  if (v9 >= 0)
    v10 = (const std::string::value_type *)v7;
  else
    v10 = v6;
  if (v9 >= 0)
    v11 = v7[2].u8[7];
  else
    v11 = (std::string::size_type)v7[1];
  return std::string::append((std::string *)&this[1], v10, v11);
}

void sub_1BDA174AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::Selection::~Selection(topotext::Selection *this)
{
  *(_QWORD *)this = &off_1E76CC358;
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 10);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  topotext::Selection::~Selection(this);
  JUMPOUT(0x1C3B7A848);
}

topotext::Selection *topotext::Selection::New(topotext::Selection *this)
{
  topotext::Selection *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::Selection *)operator new();
  topotext::Selection::Selection(v1, v2, v3);
  return v1;
}

void sub_1BDA17584(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C40848840D4);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection::Clear(topotext::Selection *this)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  *((_DWORD *)this + 22) = 0;
  result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  if (*((int *)this + 18) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*((_QWORD *)this + 8) + 8 * v3);
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)this + 18));
  }
  *((_DWORD *)this + 18) = 0;
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((_BYTE **)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
  }
  else
  {
    *((_BYTE *)this + 8) = 0;
    *((_BYTE *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::Selection::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t TagFallback;
  google::protobuf::io::CodedOutputStream *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  int32x2_t v13;
  std::string *v14;
  int32x2_t v15;
  int32x2_t v16;
  unsigned __int8 *v17;
  int v18;
  char *v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int32x2_t v23;
  uint64_t v24;
  int32x2_t v25;
  int32x2_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  BOOL v32;
  int v33;
  int v34;
  unsigned int v35;
  uint64_t v36;
  _BYTE v38[32];
  _QWORD v39[2];
  unsigned int v40;

  google::protobuf::io::StringOutputStream::StringOutputStream(v39, (uint64_t)&this[1]);
  TagFallback = (uint64_t)google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v38, (google::protobuf::io::ZeroCopyOutputStream *)v39);
  do
  {
    while (1)
    {
LABEL_2:
      v6 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v8 = TagFallback | ((unint64_t)((TagFallback - 1) < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          goto LABEL_11;
      }
      else
      {
        v7 = *v6;
        *((_DWORD *)a2 + 8) = v7;
        *((_QWORD *)a2 + 1) = v6 + 1;
        v8 = v7 | 0x100000000;
      }
      v9 = v8 >> 3;
      if (v8 >> 3 == 3)
        break;
      if (v9 == 2)
      {
        if ((_DWORD)v8 != 18)
        {
LABEL_31:
          if (!(_DWORD)v8 || (v8 & 7) == 4)
            goto LABEL_67;
          goto LABEL_33;
        }
        while (1)
        {
          v21 = this[9].i32[1];
          v22 = this[9].i32[0];
          if ((int)v22 >= v21)
          {
            if (v21 == this[10].i32[0])
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[8], v21 + 1);
            v24 = operator new();
            *(_QWORD *)v24 = &off_1E76CC2E0;
            *(_OWORD *)(v24 + 8) = 0u;
            *(_OWORD *)(v24 + 24) = 0u;
            *(_OWORD *)(v24 + 40) = 0u;
            v25 = this[8];
            v26 = this[9];
            this[9] = vadd_s32(v26, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v25 + 8 * v26.i32[0]) = v24;
          }
          else
          {
            v23 = this[8];
            this[9].i32[0] = v22 + 1;
            v24 = *(_QWORD *)(*(_QWORD *)&v23 + 8 * v22);
          }
          v40 = 0;
          v27 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40))
              goto LABEL_66;
          }
          else
          {
            v40 = *v27;
            *((_QWORD *)a2 + 1) = v27 + 1;
          }
          v28 = *((_DWORD *)a2 + 14);
          v29 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v28 + 1;
          if (v28 >= v29
            || (v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v40),
                !topotext::Selection_Range::MergePartialFromCodedStream((topotext::Selection_Range *)v24, a2))|| !*((_BYTE *)a2 + 36))
          {
LABEL_66:
            v36 = 0;
            goto LABEL_68;
          }
          TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v30);
          v31 = *((_DWORD *)a2 + 14);
          v32 = __OFSUB__(v31, 1);
          v33 = v31 - 1;
          if (v33 < 0 == v32)
            *((_DWORD *)a2 + 14) = v33;
          v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v17 >= v20)
            break;
          v34 = *v17;
          if (v34 != 18)
          {
            if (v34 != 24)
              goto LABEL_2;
            v19 = (char *)(v17 + 1);
            *((_QWORD *)a2 + 1) = v19;
            goto LABEL_54;
          }
LABEL_35:
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
      }
      else if (v9 == 1)
      {
        if ((_DWORD)v8 != 10)
          goto LABEL_31;
        while (1)
        {
          v11 = this[6].i32[1];
          v12 = this[6].i32[0];
          if ((int)v12 >= v11)
          {
            if (v11 == this[7].i32[0])
              TagFallback = (uint64_t)google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[5], v11 + 1);
            v14 = (std::string *)google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
            v15 = this[5];
            v16 = this[6];
            this[6] = vadd_s32(v16, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v15 + 8 * v16.i32[0]) = v14;
          }
          else
          {
            v13 = this[5];
            this[6].i32[0] = v12 + 1;
            v14 = *(std::string **)(*(_QWORD *)&v13 + 8 * v12);
          }
          TagFallback = google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14);
          if (!(_DWORD)TagFallback)
            goto LABEL_66;
          v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v17 >= *((_QWORD *)a2 + 2))
            break;
          v18 = *v17;
          if (v18 != 10)
          {
            if (v18 != 18)
              goto LABEL_2;
            goto LABEL_35;
          }
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
      }
      else
      {
LABEL_11:
        if ((_DWORD)v8)
          v10 = (v8 & 7) == 4;
        else
          v10 = 1;
        if (v10)
        {
LABEL_67:
          v36 = 1;
          goto LABEL_68;
        }
LABEL_33:
        TagFallback = google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v38, v5);
        if ((TagFallback & 1) == 0)
          goto LABEL_66;
      }
    }
    if ((_DWORD)v8 != 24)
      goto LABEL_31;
    v19 = (char *)*((_QWORD *)a2 + 1);
    v20 = *((_QWORD *)a2 + 2);
LABEL_54:
    v40 = 0;
    if ((unint64_t)v19 >= v20 || *v19 < 0)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
      if ((TagFallback & 1) == 0)
        goto LABEL_66;
      v35 = v40;
    }
    else
    {
      v35 = *v19;
      *((_QWORD *)a2 + 1) = v19 + 1;
    }
    if (v35 > 1)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v38, v8);
      TagFallback = google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v38, v35);
    }
    else
    {
      this[4].i32[0] |= 4u;
      this[11].i32[0] = v35;
    }
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  v36 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_68:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v38);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v39);
  return v36;
}

void sub_1BDA17A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection::SerializeWithCachedSizes(topotext::Selection *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  if (*((int *)this + 12) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteBytes(1, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((int *)this + 18) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)this + 64, v8);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v9, a2);
      ++v8;
    }
    while (v8 < *((_DWORD *)this + 18));
  }
  if ((*((_BYTE *)this + 32) & 4) != 0)
    google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)this + 22), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v10 = (char *)*((_QWORD *)this + 1);
    v11 = *((_QWORD *)this + 2);
  }
  else
  {
    v10 = (char *)this + 8;
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v10, v11);
}

uint64_t topotext::Selection::ByteSize(topotext::Selection *this)
{
  int v2;
  google::protobuf::io::CodedOutputStream *v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  topotext::Selection_Range *v16;
  google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 4) != 0)
  {
    v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    if ((v3 & 0x80000000) != 0)
    {
      v2 = 11;
    }
    else if (v3 >= 0x80)
    {
      v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      v2 = 2;
    }
  }
  else
  {
    v2 = 0;
  }
  v4 = *((_DWORD *)this + 12);
  v5 = v4 + v2;
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40, v6);
      v8 = *(unsigned __int8 *)(v7 + 23);
      v9 = v8;
      v10 = *(_QWORD *)(v7 + 8);
      if ((v8 & 0x80u) == 0)
        v11 = *(unsigned __int8 *)(v7 + 23);
      else
        v11 = v10;
      if (v11 >= 0x80)
      {
        v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v11);
        v8 = *(unsigned __int8 *)(v7 + 23);
        v10 = *(_QWORD *)(v7 + 8);
        v9 = *(_BYTE *)(v7 + 23);
      }
      else
      {
        v12 = 1;
      }
      if (v9 < 0)
        v8 = v10;
      v5 += v12 + v8;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  v13 = *((_DWORD *)this + 18);
  v14 = v13 + v5;
  if (v13 >= 1)
  {
    v15 = 0;
    do
    {
      v16 = (topotext::Selection_Range *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)this + 64, v15);
      v17 = (google::protobuf::io::CodedOutputStream *)topotext::Selection_Range::ByteSize(v16);
      v18 = (int)v17;
      if (v17 >= 0x80)
        v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      else
        v19 = 1;
      v14 += v18 + v19;
      ++v15;
    }
    while (v15 < *((_DWORD *)this + 18));
  }
  if (*((char *)this + 31) < 0)
    v20 = *((_QWORD *)this + 2);
  else
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  result = (v14 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Selection::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Selection::MergeFrom(this, lpsrc);
}

uint64_t topotext::Selection::IsInitialized(topotext::Selection *this)
{
  return 1;
}

_QWORD *topotext::Selection::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Selection");
}

BOOL topotext::AttributeRun_WritingDirection_IsValid(topotext *this)
{
  return this < 5;
}

std::string *topotext::AttributeRun::MergeFrom(topotext::AttributeRun *this, const topotext::AttributeRun *a2, uint64_t a3)
{
  topotext::AttributeRun *v4;
  std::string *v5;
  int v6;
  int v7;
  topotext::ParagraphStyle *v8;
  uint64_t v9;
  uint64_t v10;
  const topotext::ParagraphStyle *v11;
  topotext::Font *v12;
  uint64_t v13;
  uint64_t v14;
  const topotext::Font *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  const std::string *v20;
  std::string *v21;
  topotext::Color *v22;
  const topotext::Color *v23;
  unsigned int v24;
  topotext::AttachmentInfo *v25;
  uint64_t v26;
  uint64_t v27;
  std::string *v28;
  uint64_t v29;
  int v30;
  topotext::AttachmentInfo *v31;
  uint64_t v32;
  uint64_t v33;
  std::string *v34;
  const std::string::value_type *v35;
  char *v36;
  const std::string::value_type *v37;
  int v38;
  const std::string::value_type *v39;
  std::string::size_type v40;
  char v42;
  std::string v43[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v43, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 2865);
    v5 = google::protobuf::internal::LogMessage::operator<<(v43, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v42, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v43[0].__r_.__value_.__l.__data_);
  }
  v6 = *((_DWORD *)a2 + 8);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      v7 = *((_DWORD *)a2 + 12);
      *((_DWORD *)v4 + 8) |= 1u;
      *((_DWORD *)v4 + 12) = v7;
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)v4 + 8) |= 2u;
      v8 = (topotext::ParagraphStyle *)*((_QWORD *)v4 + 5);
      if (!v8)
      {
        v8 = (topotext::ParagraphStyle *)operator new();
        this = topotext::ParagraphStyle::ParagraphStyle(v8, v9, v10);
        *((_QWORD *)v4 + 5) = v8;
      }
      v11 = (const topotext::ParagraphStyle *)*((_QWORD *)a2 + 5);
      if (!v11)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        v11 = *(const topotext::ParagraphStyle **)(topotext::AttributeRun::default_instance_ + 40);
      }
      this = (topotext::AttributeRun *)topotext::ParagraphStyle::MergeFrom(v8, v11, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 4) != 0)
    {
      *((_DWORD *)v4 + 8) |= 4u;
      v12 = (topotext::Font *)*((_QWORD *)v4 + 7);
      if (!v12)
      {
        v12 = (topotext::Font *)operator new();
        this = topotext::Font::Font(v12, v13, v14);
        *((_QWORD *)v4 + 7) = v12;
      }
      v15 = (const topotext::Font *)*((_QWORD *)a2 + 7);
      if (!v15)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        v15 = *(const topotext::Font **)(topotext::AttributeRun::default_instance_ + 56);
      }
      this = (topotext::AttributeRun *)topotext::Font::MergeFrom(v12, v15, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 8) != 0)
    {
      v16 = *((_DWORD *)a2 + 13);
      *((_DWORD *)v4 + 8) |= 8u;
      *((_DWORD *)v4 + 13) = v16;
      v6 = *((_DWORD *)a2 + 8);
      if ((v6 & 0x10) == 0)
      {
LABEL_20:
        if ((v6 & 0x20) == 0)
          goto LABEL_21;
        goto LABEL_26;
      }
    }
    else if ((v6 & 0x10) == 0)
    {
      goto LABEL_20;
    }
    v17 = *((_DWORD *)a2 + 16);
    *((_DWORD *)v4 + 8) |= 0x10u;
    *((_DWORD *)v4 + 16) = v17;
    v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x20) == 0)
    {
LABEL_21:
      if ((v6 & 0x40) == 0)
        goto LABEL_22;
      goto LABEL_27;
    }
LABEL_26:
    v18 = *((_DWORD *)a2 + 17);
    *((_DWORD *)v4 + 8) |= 0x20u;
    *((_DWORD *)v4 + 17) = v18;
    v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x40) == 0)
    {
LABEL_22:
      if ((v6 & 0x80) == 0)
        goto LABEL_32;
      goto LABEL_28;
    }
LABEL_27:
    v19 = *((_DWORD *)a2 + 20);
    *((_DWORD *)v4 + 8) |= 0x40u;
    *((_DWORD *)v4 + 20) = v19;
    v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x80) == 0)
      goto LABEL_32;
LABEL_28:
    v20 = (const std::string *)*((_QWORD *)a2 + 9);
    *((_DWORD *)v4 + 8) |= 0x80u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
    v21 = (std::string *)*((_QWORD *)v4 + 9);
    if (v21 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v21 = (std::string *)operator new();
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)v4 + 9) = v21;
    }
    this = (topotext::AttributeRun *)std::string::operator=(v21, v20);
    v6 = *((_DWORD *)a2 + 8);
  }
LABEL_32:
  if ((v6 & 0xFF00) == 0)
    goto LABEL_59;
  if ((v6 & 0x100) != 0)
  {
    *((_DWORD *)v4 + 8) |= 0x100u;
    v22 = (topotext::Color *)*((_QWORD *)v4 + 11);
    if (!v22)
    {
      this = (topotext::AttributeRun *)operator new();
      v22 = this;
      *(_QWORD *)this = &off_1E76CC808;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v4 + 11) = this;
    }
    v23 = (const topotext::Color *)*((_QWORD *)a2 + 11);
    if (!v23)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      v23 = *(const topotext::Color **)(topotext::AttributeRun::default_instance_ + 88);
    }
    this = (topotext::AttributeRun *)topotext::Color::MergeFrom(v22, v23);
    v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x200) != 0)
  {
    v24 = *((_DWORD *)a2 + 21);
    if (v24 >= 5)
      topotext::AttributeRun::MergeFrom();
    *((_DWORD *)v4 + 8) |= 0x200u;
    *((_DWORD *)v4 + 21) = v24;
    v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x400) != 0)
  {
    *((_DWORD *)v4 + 8) |= 0x400u;
    v25 = (topotext::AttachmentInfo *)*((_QWORD *)v4 + 12);
    if (!v25)
    {
      v25 = (topotext::AttachmentInfo *)operator new();
      this = topotext::AttachmentInfo::AttachmentInfo(v25, v26, v27);
      *((_QWORD *)v4 + 12) = v25;
    }
    v28 = (std::string *)*((_QWORD *)a2 + 12);
    if (!v28)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      v28 = *(std::string **)(topotext::AttributeRun::default_instance_ + 96);
    }
    this = (topotext::AttributeRun *)topotext::AttachmentInfo::MergeFrom((std::string *)v25, v28, a3);
    v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x800) != 0)
  {
    v29 = *((_QWORD *)a2 + 13);
    *((_DWORD *)v4 + 8) |= 0x800u;
    *((_QWORD *)v4 + 13) = v29;
    v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x1000) == 0)
    {
LABEL_50:
      if ((v6 & 0x2000) == 0)
        goto LABEL_59;
      goto LABEL_54;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_50;
  }
  v30 = *((_DWORD *)a2 + 30);
  *((_DWORD *)v4 + 8) |= 0x1000u;
  *((_DWORD *)v4 + 30) = v30;
  if ((*((_DWORD *)a2 + 8) & 0x2000) == 0)
    goto LABEL_59;
LABEL_54:
  *((_DWORD *)v4 + 8) |= 0x2000u;
  v31 = (topotext::AttachmentInfo *)*((_QWORD *)v4 + 14);
  if (!v31)
  {
    v31 = (topotext::AttachmentInfo *)operator new();
    this = topotext::AttachmentInfo::AttachmentInfo(v31, v32, v33);
    *((_QWORD *)v4 + 14) = v31;
  }
  v34 = (std::string *)*((_QWORD *)a2 + 14);
  if (!v34)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v34 = *(std::string **)(topotext::AttributeRun::default_instance_ + 112);
  }
  topotext::AttachmentInfo::MergeFrom((std::string *)v31, v34, a3);
LABEL_59:
  v37 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v36 = (char *)a2 + 8;
  v35 = v37;
  v38 = v36[23];
  if (v38 >= 0)
    v39 = v36;
  else
    v39 = v35;
  if (v38 >= 0)
    v40 = v36[23];
  else
    v40 = *((_QWORD *)v36 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v39, v40);
}

void sub_1BDA180F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::default_instance(topotext::AttributeRun *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  return topotext::AttributeRun::default_instance_;
}

topotext::AttributeRun *topotext::AttributeRun::New(topotext::AttributeRun *this)
{
  topotext::AttributeRun *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::AttributeRun *)operator new();
  topotext::AttributeRun::AttributeRun(v1, v2, v3);
  return v1;
}

void sub_1BDA181B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4042973B72);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v3 = this;
  LOBYTE(v4) = *(_BYTE *)(this + 32);
  if ((_BYTE)v4)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 64) = 0;
    if ((v4 & 2) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
      {
        this = topotext::ParagraphStyle::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 4) != 0)
    {
      this = *(_QWORD *)(v3 + 56);
      if (this)
      {
        this = topotext::Font::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    *(_DWORD *)(v3 + 80) = 0;
    if ((v4 & 0x80) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(v3 + 72);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
  }
  v6 = *(_DWORD *)(v3 + 32);
  if ((v6 & 0x3F00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      v7 = *(_QWORD *)(v3 + 88);
      if (v7)
      {
        *(_QWORD *)(v7 + 40) = 0;
        *(_QWORD *)(v7 + 48) = 0;
        *(_DWORD *)(v7 + 32) = 0;
        if (*(char *)(v7 + 31) < 0)
        {
          **(_BYTE **)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v7 + 8) = 0;
          *(_BYTE *)(v7 + 31) = 0;
        }
      }
    }
    *(_DWORD *)(v3 + 84) = 0;
    v8 = *(_DWORD *)(v3 + 32);
    if ((v8 & 0x400) != 0)
    {
      this = *(_QWORD *)(v3 + 96);
      if (this)
      {
        this = topotext::AttachmentInfo::Clear(this, a2, a3);
        v8 = *(_DWORD *)(v3 + 32);
      }
    }
    *(_QWORD *)(v3 + 104) = 0;
    *(_DWORD *)(v3 + 120) = 0;
    if ((v8 & 0x2000) != 0)
    {
      this = *(_QWORD *)(v3 + 112);
      if (this)
        this = topotext::AttachmentInfo::Clear(this, a2, a3);
    }
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t topotext::ParagraphStyle::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((_BYTE)v4)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 64) = 0;
    if ((v4 & 0x10) != 0)
    {
      this = *(_QWORD *)(this + 56);
      if (this)
      {
        this = topotext::Todo::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    *(_DWORD *)(v3 + 80) = 0;
  }
  if ((v4 & 0x100) != 0)
  {
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor(this, a2, a3);
    v5 = *(_QWORD *)(v3 + 72);
    if (v5 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v5 + 23) < 0)
      {
        **(_BYTE **)v5 = 0;
        *(_QWORD *)(v5 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v5 = 0;
        *(_BYTE *)(v5 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t topotext::Font::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 7) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Color::Clear(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::AttachmentInfo::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 0xF) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 48);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v6 = *(_QWORD *)(this + 56);
      if (v6 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v7 = *(_QWORD *)(this + 64);
      if (v7 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::AttributeRun::SerializeWithCachedSizes(topotext::AttributeRun *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  topotext::AttributeRun *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v5 = this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 12), a2, a4);
    v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v5 + 5);
  if (!v7)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v7 = *(_QWORD *)(topotext::AttributeRun::default_instance_ + 40);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_20:
  v8 = *((_QWORD *)v5 + 7);
  if (!v8)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v8 = *(_QWORD *)(topotext::AttributeRun::default_instance_ + 56);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)5, *((_DWORD *)v5 + 13), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)v5 + 16), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)7, *((_DWORD *)v5 + 17), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)8, *((_DWORD *)v5 + 20), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(9, *((_QWORD *)v5 + 9), a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_31;
  }
LABEL_28:
  v9 = *((_QWORD *)v5 + 11);
  if (!v9)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v9 = *(_QWORD *)(topotext::AttributeRun::default_instance_ + 88);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(10, v9, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_32;
  }
LABEL_31:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0xB, *((_DWORD *)v5 + 21), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_35;
  }
LABEL_32:
  v10 = *((_QWORD *)v5 + 12);
  if (!v10)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v10 = *(_QWORD *)(topotext::AttributeRun::default_instance_ + 96);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(12, v10, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_36;
  }
LABEL_35:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0xD, *((_QWORD *)v5 + 13), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
LABEL_36:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)0xE, *((_DWORD *)v5 + 30), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x2000) == 0)
    goto LABEL_40;
LABEL_37:
  v11 = *((_QWORD *)v5 + 14);
  if (!v11)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v11 = *(_QWORD *)(topotext::AttributeRun::default_instance_ + 112);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(15, v11, a2);
LABEL_40:
  if (*((char *)v5 + 31) < 0)
  {
    v12 = (char *)*((_QWORD *)v5 + 1);
    v13 = *((_QWORD *)v5 + 2);
  }
  else
  {
    v12 = (char *)v5 + 8;
    LODWORD(v13) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
}

uint64_t topotext::AttributeRun::ByteSize(topotext::AttributeRun *this)
{
  int v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  topotext::ParagraphStyle *v6;
  google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  topotext::Font *v10;
  google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  google::protobuf::io::CodedOutputStream *v14;
  int v15;
  google::protobuf::io::CodedOutputStream *v16;
  int v17;
  google::protobuf::io::CodedOutputStream *v18;
  int v19;
  google::protobuf::io::CodedOutputStream *v20;
  int v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  topotext::Color *v28;
  google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  google::protobuf::io::CodedOutputStream *v32;
  int v33;
  topotext::AttachmentInfo *v34;
  google::protobuf::io::CodedOutputStream *v35;
  int v36;
  int v37;
  google::protobuf::io::CodedOutputStream *v38;
  int v39;
  topotext::AttachmentInfo *v40;
  google::protobuf::io::CodedOutputStream *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t result;

  v2 = *((_DWORD *)this + 8);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_56;
  }
  if ((v2 & 1) != 0)
  {
    v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v4 >= 0x80)
    {
      v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v5 = 1;
    }
    v3 = v5 + 1;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_16;
  }
  v6 = (topotext::ParagraphStyle *)*((_QWORD *)this + 5);
  if (!v6)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    v6 = *(topotext::ParagraphStyle **)(topotext::AttributeRun::default_instance_ + 40);
  }
  v7 = (google::protobuf::io::CodedOutputStream *)topotext::ParagraphStyle::ByteSize(v6);
  v8 = (int)v7;
  if (v7 >= 0x80)
    v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
  else
    v9 = 1;
  v3 += v8 + v9 + 1;
  v2 = *((_DWORD *)this + 8);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v10 = (topotext::Font *)*((_QWORD *)this + 7);
    if (!v10)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      v10 = *(topotext::Font **)(topotext::AttributeRun::default_instance_ + 56);
    }
    v11 = (google::protobuf::io::CodedOutputStream *)topotext::Font::ByteSize(v10);
    v12 = (int)v11;
    if (v11 >= 0x80)
      v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    else
      v13 = 1;
    v3 += v12 + v13 + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v14 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v14 >= 0x80)
  {
    v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_37;
  }
LABEL_33:
  v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v16 >= 0x80)
  {
    v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v17 = 1;
  }
  v3 += v17 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_21;
LABEL_41:
    v20 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v21 = 1;
    }
    v3 += v21 + 1;
    if ((v2 & 0x80) == 0)
      goto LABEL_56;
    goto LABEL_47;
  }
LABEL_37:
  v18 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v18 >= 0x80)
  {
    v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v19 = 1;
  }
  v3 += v19 + 1;
  if ((v2 & 0x40) != 0)
    goto LABEL_41;
LABEL_21:
  if ((v2 & 0x80) == 0)
    goto LABEL_56;
LABEL_47:
  v22 = *((_QWORD *)this + 9);
  v23 = *(unsigned __int8 *)(v22 + 23);
  v24 = v23;
  v25 = *(_QWORD *)(v22 + 8);
  if ((v23 & 0x80u) == 0)
    v26 = *(unsigned __int8 *)(v22 + 23);
  else
    v26 = v25;
  if (v26 >= 0x80)
  {
    v27 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v26);
    v23 = *(unsigned __int8 *)(v22 + 23);
    v25 = *(_QWORD *)(v22 + 8);
    v2 = *((_DWORD *)this + 8);
    v24 = *(_BYTE *)(v22 + 23);
  }
  else
  {
    v27 = 1;
  }
  if (v24 < 0)
    v23 = v25;
  v3 += v27 + v23 + 1;
LABEL_56:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_93;
  if ((v2 & 0x100) != 0)
  {
    v28 = (topotext::Color *)*((_QWORD *)this + 11);
    if (!v28)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      v28 = *(topotext::Color **)(topotext::AttributeRun::default_instance_ + 88);
    }
    v29 = (google::protobuf::io::CodedOutputStream *)topotext::Color::ByteSize(v28);
    v30 = (int)v29;
    if (v29 >= 0x80)
      v31 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    else
      v31 = 1;
    v3 += v30 + v31 + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 0x200) == 0)
    {
LABEL_59:
      if ((v2 & 0x400) == 0)
        goto LABEL_60;
      goto LABEL_76;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  v32 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
  if ((v32 & 0x80000000) != 0)
  {
    v33 = 11;
  }
  else if (v32 >= 0x80)
  {
    v33 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v33 = 2;
  }
  v3 += v33;
  if ((v2 & 0x400) == 0)
  {
LABEL_60:
    if ((v2 & 0x800) == 0)
      goto LABEL_61;
    goto LABEL_82;
  }
LABEL_76:
  v34 = (topotext::AttachmentInfo *)*((_QWORD *)this + 12);
  if (!v34)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    v34 = *(topotext::AttachmentInfo **)(topotext::AttributeRun::default_instance_ + 96);
  }
  v35 = (google::protobuf::io::CodedOutputStream *)topotext::AttachmentInfo::ByteSize(v34);
  v36 = (int)v35;
  if (v35 >= 0x80)
    v37 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
  else
    v37 = 1;
  v3 += v36 + v37 + 1;
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x800) == 0)
  {
LABEL_61:
    if ((v2 & 0x1000) == 0)
      goto LABEL_62;
LABEL_83:
    v38 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
    if (v38 >= 0x80)
    {
      v39 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38) + 1;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v39 = 2;
    }
    v3 += v39;
    if ((v2 & 0x2000) == 0)
      goto LABEL_93;
    goto LABEL_87;
  }
LABEL_82:
  v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 13)) + 1;
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x1000) != 0)
    goto LABEL_83;
LABEL_62:
  if ((v2 & 0x2000) == 0)
    goto LABEL_93;
LABEL_87:
  v40 = (topotext::AttachmentInfo *)*((_QWORD *)this + 14);
  if (!v40)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    v40 = *(topotext::AttachmentInfo **)(topotext::AttributeRun::default_instance_ + 112);
  }
  v41 = (google::protobuf::io::CodedOutputStream *)topotext::AttachmentInfo::ByteSize(v40);
  v42 = (int)v41;
  if (v41 >= 0x80)
    v43 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  else
    v43 = 1;
  v3 += v42 + v43 + 1;
LABEL_93:
  if (*((char *)this + 31) < 0)
    v44 = *((_QWORD *)this + 2);
  else
    LODWORD(v44) = *((unsigned __int8 *)this + 31);
  result = (v3 + v44);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::AttributeRun::CheckTypeAndMergeFrom(topotext::AttributeRun *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::AttributeRun::MergeFrom(this, lpsrc, v5);
}

std::string *topotext::ParagraphStyle::MergeFrom(topotext::ParagraphStyle *this, const topotext::ParagraphStyle *a2, uint64_t a3)
{
  topotext::ParagraphStyle *v4;
  std::string *v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  topotext::Todo *v11;
  uint64_t v12;
  uint64_t v13;
  const topotext::Todo *v14;
  int v15;
  const std::string *v16;
  std::string *v17;
  const std::string::value_type *v18;
  char *v19;
  const std::string::value_type *v20;
  int v21;
  const std::string::value_type *v22;
  std::string::size_type v23;
  int v25;
  int v26;
  char v27;
  std::string v28[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 3693);
    v5 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v27, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v6 = *((_DWORD *)a2 + 8);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      v7 = *((_DWORD *)a2 + 10);
      *((_DWORD *)v4 + 8) |= 1u;
      *((_DWORD *)v4 + 10) = v7;
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      v8 = *((_DWORD *)a2 + 11);
      if (v8 >= 5)
        -[ICTTParagraphStyle(ICTTParagraphStylePersistenceAdditions) saveToArchive:].cold.3();
      *((_DWORD *)v4 + 8) |= 2u;
      *((_DWORD *)v4 + 11) = v8;
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 4) != 0)
    {
      v9 = *((_DWORD *)a2 + 12);
      if (v9 >= 5)
        -[ICTTParagraphStyle(ICTTParagraphStylePersistenceAdditions) saveToArchive:].cold.2();
      *((_DWORD *)v4 + 8) |= 4u;
      *((_DWORD *)v4 + 12) = v9;
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 8) != 0)
    {
      v10 = *((_DWORD *)a2 + 13);
      *((_DWORD *)v4 + 8) |= 8u;
      *((_DWORD *)v4 + 13) = v10;
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x10) != 0)
    {
      *((_DWORD *)v4 + 8) |= 0x10u;
      v11 = (topotext::Todo *)*((_QWORD *)v4 + 7);
      if (!v11)
      {
        v11 = (topotext::Todo *)operator new();
        this = topotext::Todo::Todo(v11, v12, v13);
        *((_QWORD *)v4 + 7) = v11;
      }
      v14 = (const topotext::Todo *)*((_QWORD *)a2 + 7);
      if (!v14)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        v14 = *(const topotext::Todo **)(topotext::ParagraphStyle::default_instance_ + 56);
      }
      this = (topotext::ParagraphStyle *)topotext::Todo::MergeFrom(v11, v14, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x20) != 0)
    {
      v25 = *((_DWORD *)a2 + 16);
      *((_DWORD *)v4 + 8) |= 0x20u;
      *((_DWORD *)v4 + 16) = v25;
      v6 = *((_DWORD *)a2 + 8);
      if ((v6 & 0x40) == 0)
      {
LABEL_22:
        if ((v6 & 0x80) == 0)
          goto LABEL_24;
        goto LABEL_23;
      }
    }
    else if ((v6 & 0x40) == 0)
    {
      goto LABEL_22;
    }
    v26 = *((_DWORD *)a2 + 17);
    *((_DWORD *)v4 + 8) |= 0x40u;
    *((_DWORD *)v4 + 17) = v26;
    v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x80) != 0)
    {
LABEL_23:
      v15 = *((_DWORD *)a2 + 20);
      *((_DWORD *)v4 + 8) |= 0x80u;
      *((_DWORD *)v4 + 20) = v15;
      v6 = *((_DWORD *)a2 + 8);
    }
  }
LABEL_24:
  if ((v6 & 0x100) != 0)
  {
    v16 = (const std::string *)*((_QWORD *)a2 + 9);
    *((_DWORD *)v4 + 8) |= 0x100u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
    v17 = (std::string *)*((_QWORD *)v4 + 9);
    if (v17 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v17 = (std::string *)operator new();
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)v4 + 9) = v17;
    }
    std::string::operator=(v17, v16);
  }
  v20 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v19 = (char *)a2 + 8;
  v18 = v20;
  v21 = v19[23];
  if (v21 >= 0)
    v22 = v19;
  else
    v22 = v18;
  if (v21 >= 0)
    v23 = v19[23];
  else
    v23 = *((_QWORD *)v19 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v22, v23);
}

void sub_1BDA18E3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

std::string *topotext::Font::MergeFrom(topotext::Font *this, const topotext::Font *a2, uint64_t a3)
{
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  int v9;
  int v10;
  const std::string::value_type *v11;
  char *v12;
  const std::string::value_type *v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 3190);
    v5 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v7 = (const std::string *)*((_QWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)this + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 5) = v8;
      }
      std::string::operator=(v8, v7);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      v9 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 12) = v9;
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 4) != 0)
    {
      v10 = *((_DWORD *)a2 + 13);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 13) = v10;
    }
  }
  v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v12 = (char *)a2 + 8;
  v11 = v13;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)this + 8), v15, v16);
}

void sub_1BDA18FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::Color::MergeFrom(topotext::Color *this, const topotext::Color *a2)
{
  std::string *v4;
  int v5;
  int v6;
  const std::string::value_type *v7;
  char *v8;
  const std::string::value_type *v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v14;
  int v15;
  int v16;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 7365);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v5)
    goto LABEL_9;
  if ((*((_BYTE *)a2 + 32) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 32) & 2) == 0)
      goto LABEL_6;
LABEL_17:
    v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 8) |= 1u;
  *((_DWORD *)this + 10) = v14;
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0)
    goto LABEL_17;
LABEL_6:
  if ((v5 & 4) == 0)
    goto LABEL_7;
LABEL_18:
  v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 13) = v6;
  }
LABEL_9:
  v9 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v8 = (char *)a2 + 8;
  v7 = v9;
  v10 = v8[23];
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = v8[23];
  else
    v12 = *((_QWORD *)v8 + 1);
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1BDA190D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::AttachmentInfo::MergeFrom(std::string *this, std::string *a2, uint64_t a3)
{
  topotext::AttachmentInfo *v4;
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  const std::string *data;
  std::string *v10;
  const std::string *size;
  std::string *v12;
  const std::string *v13;
  std::string *v14;
  const std::string::value_type *v15;
  std::string::value_type *v16;
  const std::string::value_type *v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  char v22;
  std::string v23[2];

  v4 = (topotext::AttachmentInfo *)this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 4035);
    v5 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v22, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = a2[1].__r_.__value_.__s.__data_[8];
  if ((_BYTE)v6)
  {
    if ((a2[1].__r_.__value_.__s.__data_[8] & 1) != 0)
    {
      v7 = (const std::string *)a2[1].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)v4 + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 5) = v8;
      }
      this = std::string::operator=(v8, v7);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 2) != 0)
    {
      data = (const std::string *)a2[2].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v10 = (std::string *)*((_QWORD *)v4 + 6);
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 6) = v10;
      }
      this = std::string::operator=(v10, data);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 4) != 0)
    {
      size = (const std::string *)a2[2].__r_.__value_.__l.__size_;
      *((_DWORD *)v4 + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v12 = (std::string *)*((_QWORD *)v4 + 7);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v12 = (std::string *)operator new();
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        v12->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 7) = v12;
      }
      this = std::string::operator=(v12, size);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 8) != 0)
    {
      v13 = (const std::string *)a2[2].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v14 = (std::string *)*((_QWORD *)v4 + 8);
      if (v14 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v14 = (std::string *)operator new();
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 8) = v14;
      }
      std::string::operator=(v14, v13);
    }
  }
  v17 = (const std::string::value_type *)a2->__r_.__value_.__l.__size_;
  v16 = &a2->__r_.__value_.__s.__data_[8];
  v15 = v17;
  v18 = v16[23];
  if (v18 >= 0)
    v19 = v16;
  else
    v19 = v15;
  if (v18 >= 0)
    v20 = v16[23];
  else
    v20 = *((_QWORD *)v16 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v19, v20);
}

void sub_1BDA1931C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::IsInitialized(topotext::AttributeRun *this)
{
  return 1;
}

_QWORD *topotext::AttributeRun::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.AttributeRun");
}

topotext::Font *topotext::Font::New(topotext::Font *this)
{
  topotext::Font *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::Font *)operator new();
  topotext::Font::Font(v1, v2, v3);
  return v1;
}

void sub_1BDA1938C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4020611389);
  _Unwind_Resume(a1);
}

uint64_t topotext::Font::SerializeWithCachedSizes(topotext::Font *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 4) != 0)
LABEL_4:
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)this + 13), a2, a4);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Font::ByteSize(topotext::Font *this)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  google::protobuf::io::CodedOutputStream *v12;
  int v13;
  uint64_t v14;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 5);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v7 = v6;
      v8 = *(_QWORD *)(v5 + 8);
      if ((v6 & 0x80u) == 0)
        v9 = *(unsigned __int8 *)(v5 + 23);
      else
        v9 = v8;
      if (v9 >= 0x80)
      {
        v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v9);
        v6 = *(unsigned __int8 *)(v5 + 23);
        v8 = *(_QWORD *)(v5 + 8);
        v10 = v11 + 1;
        v2 = *((_DWORD *)this + 8);
        v7 = *(_BYTE *)(v5 + 23);
      }
      else
      {
        v10 = 2;
      }
      if (v7 < 0)
        v6 = v8;
      v3 = v10 + v6;
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v4 = v3 + 5;
    else
      v4 = v3;
    if ((v2 & 4) != 0)
    {
      v12 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
      if (v12 >= 0x80)
        v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      else
        v13 = 2;
      v4 += v13;
    }
  }
  else
  {
    v4 = 0;
  }
  if (*((char *)this + 31) < 0)
    v14 = *((_QWORD *)this + 2);
  else
    LODWORD(v14) = *((unsigned __int8 *)this + 31);
  result = (v4 + v14);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Font::CheckTypeAndMergeFrom(topotext::Font *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Font::MergeFrom(this, lpsrc, v5);
}

uint64_t topotext::Font::IsInitialized(topotext::Font *this)
{
  return 1;
}

_QWORD *topotext::Font::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Font");
}

topotext::ParagraphStyle *topotext::ParagraphStyle::ParagraphStyle(topotext::ParagraphStyle *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC4C0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  topotext::ParagraphStyle::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BDA195BC(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

double topotext::ParagraphStyle::SharedCtor(topotext::ParagraphStyle *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD v7[2];
  char v8;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v7[0] = &off_1E76C9A40;
    v7[1] = google::protobuf::internal::InitEmptyString;
    v8 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v7);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v7);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_DWORD *)this + 20) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *((_DWORD *)this + 17) = 0;
  *((_QWORD *)this + 9) = v5;
  *((_DWORD *)this + 8) = 0;
  return result;
}

void sub_1BDA1967C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::ParagraphStyle::default_instance(topotext::ParagraphStyle *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  return topotext::ParagraphStyle::default_instance_;
}

topotext::ParagraphStyle *topotext::ParagraphStyle::New(topotext::ParagraphStyle *this)
{
  topotext::ParagraphStyle *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::ParagraphStyle *)operator new();
  topotext::ParagraphStyle::ParagraphStyle(v1, v2, v3);
  return v1;
}

void sub_1BDA196EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40F489674BLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::Todo::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *(_BYTE *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::ParagraphStyle::SerializeWithCachedSizes(topotext::ParagraphStyle *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  topotext::ParagraphStyle *v5;
  int v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 11), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)v5 + 12), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)4, *((_DWORD *)v5 + 13), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_17:
  v9 = *((_QWORD *)v5 + 7);
  if (!v9)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v9 = *(_QWORD *)(topotext::ParagraphStyle::default_instance_ + 56);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(5, v9, a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_21;
  }
LABEL_20:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)v5 + 16), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_22;
  }
LABEL_21:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)7, *((_DWORD *)v5 + 17), a2, a4);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
LABEL_22:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)8, *((_DWORD *)v5 + 20), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x100) != 0)
LABEL_10:
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(9, *((_QWORD *)v5 + 9), a2);
LABEL_11:
  if (*((char *)v5 + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)v5 + 1);
    v8 = *((_QWORD *)v5 + 2);
  }
  else
  {
    v7 = (char *)v5 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::ParagraphStyle::ByteSize(topotext::ParagraphStyle *this)
{
  int v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  google::protobuf::io::CodedOutputStream *v6;
  int v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  google::protobuf::io::CodedOutputStream *v10;
  int v11;
  topotext::Todo *v12;
  google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  google::protobuf::io::CodedOutputStream *v16;
  int v17;
  google::protobuf::io::CodedOutputStream *v18;
  int v19;
  google::protobuf::io::CodedOutputStream *v20;
  int v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t result;

  v2 = *((_DWORD *)this + 8);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if (v4 >= 0x80)
      {
        v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
        v2 = *((_DWORD *)this + 8);
      }
      else
      {
        v5 = 1;
      }
      v3 = v5 + 1;
      if ((v2 & 2) == 0)
      {
LABEL_17:
        if ((v2 & 4) != 0)
        {
          v8 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
          if ((v8 & 0x80000000) != 0)
          {
            v9 = 10;
          }
          else if (v8 >= 0x80)
          {
            v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
            v2 = *((_DWORD *)this + 8);
          }
          else
          {
            v9 = 1;
          }
          v3 += v9 + 1;
          if ((v2 & 8) == 0)
          {
LABEL_19:
            if ((v2 & 0x10) == 0)
              goto LABEL_20;
            goto LABEL_37;
          }
        }
        else if ((v2 & 8) == 0)
        {
          goto LABEL_19;
        }
        v10 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
        if ((v10 & 0x80000000) != 0)
        {
          v11 = 11;
        }
        else if (v10 >= 0x80)
        {
          v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
          v2 = *((_DWORD *)this + 8);
        }
        else
        {
          v11 = 2;
        }
        v3 += v11;
        if ((v2 & 0x10) == 0)
        {
LABEL_20:
          if ((v2 & 0x20) == 0)
            goto LABEL_21;
          goto LABEL_43;
        }
LABEL_37:
        v12 = (topotext::Todo *)*((_QWORD *)this + 7);
        if (!v12)
        {
          topotext::protobuf_AddDesc_topotext_2eproto(0);
          v12 = *(topotext::Todo **)(topotext::ParagraphStyle::default_instance_ + 56);
        }
        v13 = (google::protobuf::io::CodedOutputStream *)topotext::Todo::ByteSize(v12);
        v14 = (int)v13;
        if (v13 >= 0x80)
          v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        else
          v15 = 1;
        v3 += v14 + v15 + 1;
        v2 = *((_DWORD *)this + 8);
        if ((v2 & 0x20) == 0)
        {
LABEL_21:
          if ((v2 & 0x40) == 0)
            goto LABEL_22;
          goto LABEL_47;
        }
LABEL_43:
        v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
        if (v16 >= 0x80)
        {
          v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
          v2 = *((_DWORD *)this + 8);
        }
        else
        {
          v17 = 2;
        }
        v3 += v17;
        if ((v2 & 0x40) == 0)
        {
LABEL_22:
          if ((v2 & 0x80) == 0)
            goto LABEL_23;
          goto LABEL_51;
        }
LABEL_47:
        v18 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
        if (v18 >= 0x80)
        {
          v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
          v2 = *((_DWORD *)this + 8);
        }
        else
        {
          v19 = 2;
        }
        v3 += v19;
        if ((v2 & 0x80) == 0)
        {
LABEL_23:
          if ((v2 & 0x100) == 0)
            goto LABEL_64;
          goto LABEL_55;
        }
LABEL_51:
        v20 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
        if (v20 >= 0x80)
        {
          v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
          v2 = *((_DWORD *)this + 8);
        }
        else
        {
          v21 = 2;
        }
        v3 += v21;
        if ((v2 & 0x100) == 0)
          goto LABEL_64;
        goto LABEL_55;
      }
    }
    else
    {
      v3 = 0;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    v6 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v7 = 1;
    }
    v3 += v7 + 1;
    goto LABEL_17;
  }
  v3 = 0;
  if ((v2 & 0x100) == 0)
    goto LABEL_64;
LABEL_55:
  v22 = *((_QWORD *)this + 9);
  v23 = *(unsigned __int8 *)(v22 + 23);
  v24 = v23;
  v25 = *(_QWORD *)(v22 + 8);
  if ((v23 & 0x80u) == 0)
    v26 = *(unsigned __int8 *)(v22 + 23);
  else
    v26 = v25;
  if (v26 >= 0x80)
  {
    v27 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v26);
    v23 = *(unsigned __int8 *)(v22 + 23);
    v25 = *(_QWORD *)(v22 + 8);
    v24 = *(_BYTE *)(v22 + 23);
  }
  else
  {
    v27 = 1;
  }
  if (v24 < 0)
    v23 = v25;
  v3 += v27 + v23 + 1;
LABEL_64:
  if (*((char *)this + 31) < 0)
    v28 = *((_QWORD *)this + 2);
  else
    LODWORD(v28) = *((unsigned __int8 *)this + 31);
  result = (v3 + v28);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::ParagraphStyle::CheckTypeAndMergeFrom(topotext::ParagraphStyle *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::ParagraphStyle::MergeFrom(this, lpsrc, v5);
}

std::string *topotext::Todo::MergeFrom(topotext::Todo *this, const topotext::Todo *a2, uint64_t a3)
{
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  char v9;
  const std::string::value_type *v10;
  char *v11;
  const std::string::value_type *v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 7077);
    v5 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v7 = (const std::string *)*((_QWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)this + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 5) = v8;
      }
      std::string::operator=(v8, v7);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      v9 = *((_BYTE *)a2 + 48);
      *((_DWORD *)this + 8) |= 2u;
      *((_BYTE *)this + 48) = v9;
    }
  }
  v12 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v11 = (char *)a2 + 8;
  v10 = v12;
  v13 = v11[23];
  if (v13 >= 0)
    v14 = v11;
  else
    v14 = v10;
  if (v13 >= 0)
    v15 = v11[23];
  else
    v15 = *((_QWORD *)v11 + 1);
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1BDA19CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::ParagraphStyle::IsInitialized(topotext::ParagraphStyle *this)
{
  return 1;
}

_QWORD *topotext::ParagraphStyle::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.ParagraphStyle");
}

topotext::AttachmentInfo *topotext::AttachmentInfo::New(topotext::AttachmentInfo *this)
{
  topotext::AttachmentInfo *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::AttachmentInfo *)operator new();
  topotext::AttachmentInfo::AttachmentInfo(v1, v2, v3);
  return v1;
}

void sub_1BDA19D14(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttachmentInfo::SerializeWithCachedSizes(topotext::AttachmentInfo *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  char *v5;
  uint64_t v6;

  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v4 = *((_DWORD *)this + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((_QWORD *)this + 6), a2);
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, *((_QWORD *)this + 7), a2);
  if ((*((_DWORD *)this + 8) & 8) != 0)
LABEL_5:
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(4, *((_QWORD *)this + 8), a2);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t topotext::AttachmentInfo::ByteSize(topotext::AttachmentInfo *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_45;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 6);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v2 = *((_DWORD *)this + 8);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
  v17 = *((_QWORD *)this + 7);
  v18 = *(unsigned __int8 *)(v17 + 23);
  v19 = v18;
  v20 = *(_QWORD *)(v17 + 8);
  if ((v18 & 0x80u) == 0)
    v21 = *(unsigned __int8 *)(v17 + 23);
  else
    v21 = v20;
  if (v21 >= 0x80)
  {
    v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v21);
    v18 = *(unsigned __int8 *)(v17 + 23);
    v20 = *(_QWORD *)(v17 + 8);
    v2 = *((_DWORD *)this + 8);
    v19 = *(_BYTE *)(v17 + 23);
  }
  else
  {
    v22 = 1;
  }
  if (v19 < 0)
    v18 = v20;
  v3 += v22 + v18 + 1;
  if ((v2 & 8) != 0)
  {
LABEL_36:
    v23 = *((_QWORD *)this + 8);
    v24 = *(unsigned __int8 *)(v23 + 23);
    v25 = v24;
    v26 = *(_QWORD *)(v23 + 8);
    if ((v24 & 0x80u) == 0)
      v27 = *(unsigned __int8 *)(v23 + 23);
    else
      v27 = v26;
    if (v27 >= 0x80)
    {
      v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v27);
      v24 = *(unsigned __int8 *)(v23 + 23);
      v26 = *(_QWORD *)(v23 + 8);
      v25 = *(_BYTE *)(v23 + 23);
    }
    else
    {
      v28 = 1;
    }
    if (v25 < 0)
      v24 = v26;
    v3 += v28 + v24 + 1;
  }
LABEL_45:
  if (*((char *)this + 31) < 0)
    v29 = *((_QWORD *)this + 2);
  else
    LODWORD(v29) = *((unsigned __int8 *)this + 31);
  result = (v3 + v29);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::AttachmentInfo::CheckTypeAndMergeFrom(std::string *this, std::string *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::AttachmentInfo::MergeFrom(this, lpsrc, v5);
}

uint64_t topotext::AttachmentInfo::IsInitialized(topotext::AttachmentInfo *this)
{
  return 1;
}

_QWORD *topotext::AttachmentInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.AttachmentInfo");
}

std::string *topotext::Attachment::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  topotext *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int32 v8;
  const std::string *v9;
  std::string *v10;
  const std::string *v11;
  std::string *v12;
  __int32 v13;
  __int32 v14;
  const std::string *v15;
  std::string *v16;
  const std::string *v17;
  std::string *v18;
  const std::string *v19;
  std::string *v20;
  const std::string *v21;
  std::string *v22;
  topotext::Location *v23;
  uint64_t v24;
  uint64_t v25;
  const topotext::Location *v26;
  topotext::Media *v27;
  uint64_t v28;
  uint64_t v29;
  std::string *v30;
  int32x2_t v31;
  int32x2_t v32;
  const std::string *v33;
  std::string *v34;
  __int32 v35;
  __int32 v36;
  __int32 v37;
  int32x2_t v38;
  __int8 v39;
  int32x2_t v40;
  int32x2_t v41;
  __int32 v42;
  const std::string *v43;
  std::string *v44;
  __int32 v45;
  int32x2_t v46;
  const std::string *v47;
  std::string *v48;
  const std::string *v49;
  std::string *v50;
  const std::string *v51;
  std::string *v52;
  const std::string *v53;
  std::string *v54;
  const std::string *v55;
  std::string *v56;
  const std::string *v57;
  std::string *v58;
  const std::string *v59;
  std::string *v60;
  const std::string *v61;
  std::string *v62;
  const std::string::value_type *v63;
  int32x2_t *v64;
  int32x2_t v65;
  int v66;
  const std::string::value_type *v67;
  std::string::size_type v68;
  int32x2_t v70;
  int32x2_t v71;
  int32x2_t v72;
  int32x2_t v73;
  int32x2_t v74;
  int32x2_t v75;
  int32x2_t v76;
  int32x2_t v77;
  char v78;
  std::string v79[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v79, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 5569);
    v4 = google::protobuf::internal::LogMessage::operator<<(v79, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v78, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v79[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>(this + 14, a2 + 14);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((google::protobuf::internal::RepeatedPtrFieldBase *)&this[26]);
  v5 = (topotext *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((google::protobuf::internal::RepeatedPtrFieldBase *)&this[42]);
  v8 = a2[4].u32[0];
  if (!(_BYTE)v8)
    goto LABEL_39;
  if ((v8 & 1) != 0)
  {
    v9 = (const std::string *)a2[5];
    this[4].i32[0] |= 1u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
    v10 = (std::string *)this[5];
    if (v10 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v10 = (std::string *)operator new();
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      this[5] = (int32x2_t)v10;
    }
    v5 = (topotext *)std::string::operator=(v10, v9);
    v8 = a2[4].u32[0];
  }
  if ((v8 & 2) != 0)
  {
    v11 = (const std::string *)a2[6];
    this[4].i32[0] |= 2u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
    v12 = (std::string *)this[6];
    if (v12 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v12 = (std::string *)operator new();
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      this[6] = (int32x2_t)v12;
    }
    v5 = (topotext *)std::string::operator=(v12, v11);
    v8 = a2[4].u32[0];
  }
  if ((v8 & 4) != 0)
  {
    v13 = a2[7].i32[0];
    this[4].i32[0] |= 4u;
    this[7].i32[0] = v13;
    v8 = a2[4].u32[0];
    if ((v8 & 8) == 0)
    {
LABEL_16:
      if ((v8 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_23;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_16;
  }
  v14 = a2[7].i32[1];
  this[4].i32[0] |= 8u;
  this[7].i32[1] = v14;
  v8 = a2[4].u32[0];
  if ((v8 & 0x10) == 0)
  {
LABEL_17:
    if ((v8 & 0x20) == 0)
      goto LABEL_18;
LABEL_27:
    v17 = (const std::string *)a2[9];
    this[4].i32[0] |= 0x20u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
    v18 = (std::string *)this[9];
    if (v18 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v18 = (std::string *)operator new();
      v18->__r_.__value_.__l.__size_ = 0;
      v18->__r_.__value_.__r.__words[2] = 0;
      v18->__r_.__value_.__r.__words[0] = 0;
      this[9] = (int32x2_t)v18;
    }
    v5 = (topotext *)std::string::operator=(v18, v17);
    v8 = a2[4].u32[0];
    if ((v8 & 0x40) == 0)
    {
LABEL_19:
      if ((v8 & 0x80) == 0)
        goto LABEL_39;
      goto LABEL_35;
    }
    goto LABEL_31;
  }
LABEL_23:
  v15 = (const std::string *)a2[8];
  this[4].i32[0] |= 0x10u;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
  v16 = (std::string *)this[8];
  if (v16 == (std::string *)google::protobuf::internal::empty_string_)
  {
    v16 = (std::string *)operator new();
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    this[8] = (int32x2_t)v16;
  }
  v5 = (topotext *)std::string::operator=(v16, v15);
  v8 = a2[4].u32[0];
  if ((v8 & 0x20) != 0)
    goto LABEL_27;
LABEL_18:
  if ((v8 & 0x40) == 0)
    goto LABEL_19;
LABEL_31:
  v19 = (const std::string *)a2[10];
  this[4].i32[0] |= 0x40u;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
  v20 = (std::string *)this[10];
  if (v20 == (std::string *)google::protobuf::internal::empty_string_)
  {
    v20 = (std::string *)operator new();
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    this[10] = (int32x2_t)v20;
  }
  v5 = (topotext *)std::string::operator=(v20, v19);
  v8 = a2[4].u32[0];
  if ((v8 & 0x80) != 0)
  {
LABEL_35:
    v21 = (const std::string *)a2[11];
    this[4].i32[0] |= 0x80u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
    v22 = (std::string *)this[11];
    if (v22 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v22 = (std::string *)operator new();
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      this[11] = (int32x2_t)v22;
    }
    v5 = (topotext *)std::string::operator=(v22, v21);
    v8 = a2[4].u32[0];
  }
LABEL_39:
  if ((v8 & 0xFF00) == 0)
    goto LABEL_58;
  if ((v8 & 0x100) != 0)
  {
    this[4].i32[0] |= 0x100u;
    v23 = (topotext::Location *)this[12];
    if (!v23)
    {
      v23 = (topotext::Location *)operator new();
      v5 = topotext::Location::Location(v23, v24, v25);
      this[12] = (int32x2_t)v23;
    }
    v26 = (const topotext::Location *)a2[12];
    if (!v26)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(v5);
      v26 = *(const topotext::Location **)(topotext::Attachment::default_instance_ + 96);
    }
    v5 = (topotext *)topotext::Location::MergeFrom(v23, v26, v7);
    v8 = a2[4].u32[0];
  }
  if ((v8 & 0x200) != 0)
  {
    this[4].i32[0] |= 0x200u;
    v27 = (topotext::Media *)this[13];
    if (!v27)
    {
      v27 = (topotext::Media *)operator new();
      v5 = topotext::Media::Media(v27, v28, v29);
      this[13] = (int32x2_t)v27;
    }
    v30 = (std::string *)a2[13];
    if (!v30)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(v5);
      v30 = *(std::string **)(topotext::Attachment::default_instance_ + 104);
    }
    v5 = (topotext *)topotext::Media::MergeFrom((std::string *)v27, v30, v7);
    v8 = a2[4].u32[0];
  }
  if ((v8 & 0x800) != 0)
  {
    v35 = a2[17].i32[0];
    this[4].i32[0] |= 0x800u;
    this[17].i32[0] = v35;
    v8 = a2[4].u32[0];
    if ((v8 & 0x1000) == 0)
    {
LABEL_54:
      if ((v8 & 0x2000) == 0)
        goto LABEL_55;
      goto LABEL_74;
    }
  }
  else if ((v8 & 0x1000) == 0)
  {
    goto LABEL_54;
  }
  v36 = a2[17].i32[1];
  this[4].i32[0] |= 0x1000u;
  this[17].i32[1] = v36;
  v8 = a2[4].u32[0];
  if ((v8 & 0x2000) == 0)
  {
LABEL_55:
    if ((v8 & 0x4000) == 0)
      goto LABEL_56;
    goto LABEL_75;
  }
LABEL_74:
  v37 = a2[20].i32[0];
  this[4].i32[0] |= 0x2000u;
  this[20].i32[0] = v37;
  v8 = a2[4].u32[0];
  if ((v8 & 0x4000) == 0)
  {
LABEL_56:
    if ((v8 & 0x8000) == 0)
      goto LABEL_58;
    goto LABEL_57;
  }
LABEL_75:
  v38 = a2[18];
  this[4].i32[0] |= 0x4000u;
  this[18] = v38;
  v8 = a2[4].u32[0];
  if ((v8 & 0x8000) != 0)
  {
LABEL_57:
    v31 = a2[19];
    this[4].i32[0] |= 0x8000u;
    this[19] = v31;
    v8 = a2[4].u32[0];
  }
LABEL_58:
  if ((v8 & 0xFF0000) == 0)
    goto LABEL_85;
  if ((v8 & 0x10000) != 0)
  {
    v32 = a2[21];
    this[4].i32[0] |= 0x10000u;
    this[21] = v32;
    v8 = a2[4].u32[0];
  }
  if ((v8 & 0x20000) != 0)
  {
    v33 = (const std::string *)a2[22];
    this[4].i32[0] |= 0x20000u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
    v34 = (std::string *)this[22];
    if (v34 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v34 = (std::string *)operator new();
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      this[22] = (int32x2_t)v34;
    }
    v5 = (topotext *)std::string::operator=(v34, v33);
    v8 = a2[4].u32[0];
  }
  if ((v8 & 0x40000) != 0)
  {
    v39 = a2[20].i8[4];
    this[4].i32[0] |= 0x40000u;
    this[20].i8[4] = v39;
    v8 = a2[4].u32[0];
    if ((v8 & 0x80000) == 0)
    {
LABEL_68:
      if ((v8 & 0x100000) == 0)
        goto LABEL_69;
      goto LABEL_79;
    }
  }
  else if ((v8 & 0x80000) == 0)
  {
    goto LABEL_68;
  }
  v40 = a2[23];
  this[4].i32[0] |= 0x80000u;
  this[23] = v40;
  v8 = a2[4].u32[0];
  if ((v8 & 0x100000) == 0)
  {
LABEL_69:
    if ((v8 & 0x200000) == 0)
      goto LABEL_70;
    goto LABEL_80;
  }
LABEL_79:
  v41 = a2[24];
  this[4].i32[0] |= 0x100000u;
  this[24] = v41;
  v8 = a2[4].u32[0];
  if ((v8 & 0x200000) == 0)
  {
LABEL_70:
    if ((v8 & 0x400000) == 0)
      goto LABEL_85;
    goto LABEL_81;
  }
LABEL_80:
  v42 = a2[49].i32[0];
  this[4].i32[0] |= 0x200000u;
  this[49].i32[0] = v42;
  v8 = a2[4].u32[0];
  if ((v8 & 0x400000) == 0)
    goto LABEL_85;
LABEL_81:
  v43 = (const std::string *)a2[25];
  this[4].i32[0] |= 0x400000u;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
  v44 = (std::string *)this[25];
  if (v44 == (std::string *)google::protobuf::internal::empty_string_)
  {
    v44 = (std::string *)operator new();
    v44->__r_.__value_.__l.__size_ = 0;
    v44->__r_.__value_.__r.__words[2] = 0;
    v44->__r_.__value_.__r.__words[0] = 0;
    this[25] = (int32x2_t)v44;
  }
  v5 = (topotext *)std::string::operator=(v44, v43);
  v8 = a2[4].u32[0];
LABEL_85:
  if (!HIBYTE(v8))
    goto LABEL_94;
  if ((v8 & 0x1000000) != 0)
  {
    v70 = a2[29];
    this[4].i32[0] |= 0x1000000u;
    this[29] = v70;
    v8 = a2[4].u32[0];
    if ((v8 & 0x2000000) == 0)
    {
LABEL_88:
      if ((v8 & 0x4000000) == 0)
        goto LABEL_89;
      goto LABEL_147;
    }
  }
  else if ((v8 & 0x2000000) == 0)
  {
    goto LABEL_88;
  }
  v71 = a2[30];
  this[4].i32[0] |= 0x2000000u;
  this[30] = v71;
  v8 = a2[4].u32[0];
  if ((v8 & 0x4000000) == 0)
  {
LABEL_89:
    if ((v8 & 0x8000000) == 0)
      goto LABEL_90;
    goto LABEL_148;
  }
LABEL_147:
  v72 = a2[31];
  this[4].i32[0] |= 0x4000000u;
  this[31] = v72;
  v8 = a2[4].u32[0];
  if ((v8 & 0x8000000) == 0)
  {
LABEL_90:
    if ((v8 & 0x10000000) == 0)
      goto LABEL_91;
    goto LABEL_149;
  }
LABEL_148:
  v73 = a2[32];
  this[4].i32[0] |= 0x8000000u;
  this[32] = v73;
  v8 = a2[4].u32[0];
  if ((v8 & 0x10000000) == 0)
  {
LABEL_91:
    if ((v8 & 0x20000000) == 0)
      goto LABEL_92;
    goto LABEL_150;
  }
LABEL_149:
  v74 = a2[33];
  this[4].i32[0] |= 0x10000000u;
  this[33] = v74;
  v8 = a2[4].u32[0];
  if ((v8 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v8 & 0x40000000) == 0)
      goto LABEL_93;
LABEL_151:
    v76 = a2[35];
    this[4].i32[0] |= 0x40000000u;
    this[35] = v76;
    if ((a2[4].i32[0] & 0x80000000) == 0)
      goto LABEL_94;
    goto LABEL_152;
  }
LABEL_150:
  v75 = a2[34];
  this[4].i32[0] |= 0x20000000u;
  this[34] = v75;
  v8 = a2[4].u32[0];
  if ((v8 & 0x40000000) != 0)
    goto LABEL_151;
LABEL_93:
  if ((v8 & 0x80000000) == 0)
    goto LABEL_94;
LABEL_152:
  v77 = a2[36];
  this[4].i32[0] |= 0x80000000;
  this[36] = v77;
LABEL_94:
  v45 = a2[4].i32[1];
  if ((_BYTE)v45)
  {
    if ((v45 & 1) != 0)
    {
      v46 = a2[37];
      this[4].i32[1] |= 1u;
      this[37] = v46;
      v45 = a2[4].i32[1];
    }
    if ((v45 & 2) != 0)
    {
      v47 = (const std::string *)a2[38];
      this[4].i32[1] |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v48 = (std::string *)this[38];
      if (v48 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v48 = (std::string *)operator new();
        v48->__r_.__value_.__l.__size_ = 0;
        v48->__r_.__value_.__r.__words[2] = 0;
        v48->__r_.__value_.__r.__words[0] = 0;
        this[38] = (int32x2_t)v48;
      }
      v5 = (topotext *)std::string::operator=(v48, v47);
      v45 = a2[4].i32[1];
    }
    if ((v45 & 4) != 0)
    {
      v49 = (const std::string *)a2[39];
      this[4].i32[1] |= 4u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v50 = (std::string *)this[39];
      if (v50 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v50 = (std::string *)operator new();
        v50->__r_.__value_.__l.__size_ = 0;
        v50->__r_.__value_.__r.__words[2] = 0;
        v50->__r_.__value_.__r.__words[0] = 0;
        this[39] = (int32x2_t)v50;
      }
      v5 = (topotext *)std::string::operator=(v50, v49);
      v45 = a2[4].i32[1];
    }
    if ((v45 & 8) != 0)
    {
      v51 = (const std::string *)a2[40];
      this[4].i32[1] |= 8u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v52 = (std::string *)this[40];
      if (v52 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v52 = (std::string *)operator new();
        v52->__r_.__value_.__l.__size_ = 0;
        v52->__r_.__value_.__r.__words[2] = 0;
        v52->__r_.__value_.__r.__words[0] = 0;
        this[40] = (int32x2_t)v52;
      }
      v5 = (topotext *)std::string::operator=(v52, v51);
      v45 = a2[4].i32[1];
    }
    if ((v45 & 0x10) != 0)
    {
      v53 = (const std::string *)a2[41];
      this[4].i32[1] |= 0x10u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v54 = (std::string *)this[41];
      if (v54 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v54 = (std::string *)operator new();
        v54->__r_.__value_.__l.__size_ = 0;
        v54->__r_.__value_.__r.__words[2] = 0;
        v54->__r_.__value_.__r.__words[0] = 0;
        this[41] = (int32x2_t)v54;
      }
      v5 = (topotext *)std::string::operator=(v54, v53);
      v45 = a2[4].i32[1];
    }
    if ((v45 & 0x40) != 0)
    {
      v55 = (const std::string *)a2[45];
      this[4].i32[1] |= 0x40u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v56 = (std::string *)this[45];
      if (v56 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v56 = (std::string *)operator new();
        v56->__r_.__value_.__l.__size_ = 0;
        v56->__r_.__value_.__r.__words[2] = 0;
        v56->__r_.__value_.__r.__words[0] = 0;
        this[45] = (int32x2_t)v56;
      }
      v5 = (topotext *)std::string::operator=(v56, v55);
      v45 = a2[4].i32[1];
    }
    if ((v45 & 0x80) != 0)
    {
      v57 = (const std::string *)a2[46];
      this[4].i32[1] |= 0x80u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v58 = (std::string *)this[46];
      if (v58 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v58 = (std::string *)operator new();
        v58->__r_.__value_.__l.__size_ = 0;
        v58->__r_.__value_.__r.__words[2] = 0;
        v58->__r_.__value_.__r.__words[0] = 0;
        this[46] = (int32x2_t)v58;
      }
      v5 = (topotext *)std::string::operator=(v58, v57);
      v45 = a2[4].i32[1];
    }
  }
  if ((v45 & 0xFF00) != 0)
  {
    if ((v45 & 0x100) != 0)
    {
      v59 = (const std::string *)a2[47];
      this[4].i32[1] |= 0x100u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v60 = (std::string *)this[47];
      if (v60 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v60 = (std::string *)operator new();
        v60->__r_.__value_.__l.__size_ = 0;
        v60->__r_.__value_.__r.__words[2] = 0;
        v60->__r_.__value_.__r.__words[0] = 0;
        this[47] = (int32x2_t)v60;
      }
      v5 = (topotext *)std::string::operator=(v60, v59);
      v45 = a2[4].i32[1];
    }
    if ((v45 & 0x200) != 0)
    {
      v61 = (const std::string *)a2[48];
      this[4].i32[1] |= 0x200u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)v5, v6, v7);
      v62 = (std::string *)this[48];
      if (v62 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v62 = (std::string *)operator new();
        v62->__r_.__value_.__l.__size_ = 0;
        v62->__r_.__value_.__r.__words[2] = 0;
        v62->__r_.__value_.__r.__words[0] = 0;
        this[48] = (int32x2_t)v62;
      }
      std::string::operator=(v62, v61);
    }
  }
  v65 = a2[1];
  v64 = a2 + 1;
  v63 = (const std::string::value_type *)v65;
  v66 = v64[2].i8[7];
  if (v66 >= 0)
    v67 = (const std::string::value_type *)v64;
  else
    v67 = v63;
  if (v66 >= 0)
    v68 = v64[2].u8[7];
  else
    v68 = (std::string::size_type)v64[1];
  return std::string::append((std::string *)&this[1], v67, v68);
}

void sub_1BDA1AA9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40DF275E33);
  _Unwind_Resume(a1);
}

void topotext::Attachment::~Attachment(topotext::Attachment *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CC5B0;
  topotext::Attachment::SharedDtor(this, a2, a3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 42);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 26);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 14);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  topotext::Attachment::~Attachment(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void topotext::Attachment::SharedDtor(topotext::Attachment *this, uint64_t a2, uint64_t a3)
{
  topotext::Attachment *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 5);
  if (v4 != google::protobuf::internal::empty_string_)
  {
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
      v4 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
    }
    else
    {
      v4 = google::protobuf::internal::empty_string_;
    }
  }
  v5 = *((_QWORD *)v3 + 6);
  if (v5 != v4 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v5, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
  }
  if (!v4)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v7 = *((_QWORD *)v3 + 8);
  if (v7 != v4 && v7)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v7, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v8, v9);
  }
  v10 = *((_QWORD *)v3 + 9);
  if (v10 != v4 && v10)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v10, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v11, v12);
  }
  v13 = *((_QWORD *)v3 + 10);
  if (v13 != v4 && v13)
  {
    if (*(char *)(v13 + 23) < 0)
      operator delete(*(void **)v13);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v13, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v14, v15);
  }
  v16 = *((_QWORD *)v3 + 11);
  if (v16 != v4 && v16)
  {
    if (*(char *)(v16 + 23) < 0)
      operator delete(*(void **)v16);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v16, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v17, v18);
  }
  v19 = *((_QWORD *)v3 + 22);
  if (v19 != v4 && v19)
  {
    if (*(char *)(v19 + 23) < 0)
      operator delete(*(void **)v19);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v19, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v20, v21);
  }
  v22 = *((_QWORD *)v3 + 25);
  if (v22 != v4 && v22)
  {
    if (*(char *)(v22 + 23) < 0)
      operator delete(*(void **)v22);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v22, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v23, v24);
  }
  v25 = *((_QWORD *)v3 + 38);
  if (v25 != v4 && v25)
  {
    if (*(char *)(v25 + 23) < 0)
      operator delete(*(void **)v25);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v25, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v26, v27);
  }
  v28 = *((_QWORD *)v3 + 39);
  if (v28 != v4 && v28)
  {
    if (*(char *)(v28 + 23) < 0)
      operator delete(*(void **)v28);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v28, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v29, v30);
  }
  v31 = *((_QWORD *)v3 + 40);
  if (v31 != v4 && v31)
  {
    if (*(char *)(v31 + 23) < 0)
      operator delete(*(void **)v31);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v31, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v32, v33);
  }
  v34 = *((_QWORD *)v3 + 41);
  if (v34 != v4 && v34)
  {
    if (*(char *)(v34 + 23) < 0)
      operator delete(*(void **)v34);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v34, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v35, v36);
  }
  v37 = *((_QWORD *)v3 + 45);
  if (v37 != v4 && v37)
  {
    if (*(char *)(v37 + 23) < 0)
      operator delete(*(void **)v37);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v37, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v38, v39);
  }
  v40 = *((_QWORD *)v3 + 46);
  if (v40 != v4 && v40)
  {
    if (*(char *)(v40 + 23) < 0)
      operator delete(*(void **)v40);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v40, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v41, v42);
  }
  v43 = *((_QWORD *)v3 + 47);
  if (v43 != v4 && v43)
  {
    if (*(char *)(v43 + 23) < 0)
      operator delete(*(void **)v43);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v43, 0x1012C40EC159624);
    v4 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, v44, v45);
  }
  v46 = *((_QWORD *)v3 + 48);
  if (v46 != v4 && v46)
  {
    if (*(char *)(v46 + 23) < 0)
      operator delete(*(void **)v46);
    this = (topotext::Attachment *)MEMORY[0x1C3B7A848](v46, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Attachment *)topotext::Attachment::default_instance_ != v3)
  {
    v47 = *((_QWORD *)v3 + 12);
    if (v47)
      (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
    v48 = *((_QWORD *)v3 + 13);
    if (v48)
      (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  }
}

uint64_t topotext::Attachment::default_instance(topotext::Attachment *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  return topotext::Attachment::default_instance_;
}

topotext::Attachment *topotext::Attachment::New(topotext::Attachment *this)
{
  topotext::Attachment *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::Attachment *)operator new();
  topotext::Attachment::Attachment(v1, v2, v3);
  return v1;
}

void sub_1BDA1B088(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C406079FE1ELL);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = this;
  v4 = *(_BYTE *)(this + 32);
  if (v4)
  {
    *(_QWORD *)(this + 56) = 0;
    if ((v4 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 40);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v6 = *(_QWORD *)(this + 48);
      if (v6 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 0x10) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v7 = *(_QWORD *)(this + 64);
      if (v7 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 0x20) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v8 = *(_QWORD *)(this + 72);
      if (v8 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)v8 = 0;
          *(_QWORD *)(v8 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 0x40) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v9 = *(_QWORD *)(this + 80);
      if (v9 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v9 + 23) < 0)
        {
          **(_BYTE **)v9 = 0;
          *(_QWORD *)(v9 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v9 = 0;
          *(_BYTE *)(v9 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 0x80) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v10 = *(_QWORD *)(this + 88);
      if (v10 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v10 + 23) < 0)
        {
          **(_BYTE **)v10 = 0;
          *(_QWORD *)(v10 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v10 = 0;
          *(_BYTE *)(v10 + 23) = 0;
        }
      }
    }
  }
  v11 = *(_DWORD *)(this + 32);
  if ((v11 & 0xFB00) != 0)
  {
    *(_QWORD *)(this + 136) = 0;
    *(_QWORD *)(this + 144) = 0;
    *(_DWORD *)(this + 160) = 0;
    *(_QWORD *)(this + 152) = 0;
    if ((v11 & 0x100) != 0)
    {
      this = *(_QWORD *)(this + 96);
      if (this)
      {
        this = topotext::Location::Clear(this, a2, a3);
        v11 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v11 & 0x200) != 0)
    {
      this = *(_QWORD *)(v3 + 104);
      if (this)
      {
        this = topotext::Media::Clear(this, a2, a3);
        v11 = *(_DWORD *)(v3 + 32);
      }
    }
  }
  if ((v11 & 0x7F0000) != 0)
  {
    *(_DWORD *)(v3 + 172) = 0;
    *(_QWORD *)(v3 + 164) = 0;
    *(_QWORD *)(v3 + 184) = 0;
    *(_QWORD *)(v3 + 192) = 0;
    if ((v11 & 0x20000) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v12 = *(_QWORD *)(v3 + 176);
      if (v12 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v12 + 23) < 0)
        {
          **(_BYTE **)v12 = 0;
          *(_QWORD *)(v12 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v12 = 0;
          *(_BYTE *)(v12 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(v3 + 392) = 0;
    v11 = *(_DWORD *)(v3 + 32);
    if ((v11 & 0x400000) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v13 = *(_QWORD *)(v3 + 200);
      if (v13 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v13 + 23) < 0)
        {
          **(_BYTE **)v13 = 0;
          *(_QWORD *)(v13 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v13 = 0;
          *(_BYTE *)(v13 + 23) = 0;
        }
      }
      v11 = *(_DWORD *)(v3 + 32);
    }
  }
  if (HIBYTE(v11))
  {
    *(_OWORD *)(v3 + 232) = 0u;
    *(_OWORD *)(v3 + 264) = 0u;
    *(_OWORD *)(v3 + 280) = 0u;
    *(_OWORD *)(v3 + 248) = 0u;
  }
  v14 = *(_DWORD *)(v3 + 36);
  if ((v14 & 0xDF) != 0)
  {
    *(_QWORD *)(v3 + 296) = 0;
    if ((v14 & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v15 = *(_QWORD *)(v3 + 304);
      if (v15 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v15 + 23) < 0)
        {
          **(_BYTE **)v15 = 0;
          *(_QWORD *)(v15 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v15 = 0;
          *(_BYTE *)(v15 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v3 + 36) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v16 = *(_QWORD *)(v3 + 312);
      if (v16 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v16 + 23) < 0)
        {
          **(_BYTE **)v16 = 0;
          *(_QWORD *)(v16 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v16 = 0;
          *(_BYTE *)(v16 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v3 + 36) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v17 = *(_QWORD *)(v3 + 320);
      if (v17 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v17 + 23) < 0)
        {
          **(_BYTE **)v17 = 0;
          *(_QWORD *)(v17 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v17 = 0;
          *(_BYTE *)(v17 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v3 + 36) & 0x10) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v18 = *(_QWORD *)(v3 + 328);
      if (v18 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v18 + 23) < 0)
        {
          **(_BYTE **)v18 = 0;
          *(_QWORD *)(v18 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v18 = 0;
          *(_BYTE *)(v18 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v3 + 36) & 0x40) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v19 = *(_QWORD *)(v3 + 360);
      if (v19 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v19 + 23) < 0)
        {
          **(_BYTE **)v19 = 0;
          *(_QWORD *)(v19 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v19 = 0;
          *(_BYTE *)(v19 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v3 + 36) & 0x80) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v20 = *(_QWORD *)(v3 + 368);
      if (v20 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v20 + 23) < 0)
        {
          **(_BYTE **)v20 = 0;
          *(_QWORD *)(v20 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v20 = 0;
          *(_BYTE *)(v20 + 23) = 0;
        }
      }
    }
  }
  v21 = *(_DWORD *)(v3 + 36);
  if ((v21 & 0x300) != 0)
  {
    if ((v21 & 0x100) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v22 = *(_QWORD *)(v3 + 376);
      if (v22 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v22 + 23) < 0)
        {
          **(_BYTE **)v22 = 0;
          *(_QWORD *)(v22 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v22 = 0;
          *(_BYTE *)(v22 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v3 + 37) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v23 = *(_QWORD *)(v3 + 384);
      if (v23 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v23 + 23) < 0)
        {
          **(_BYTE **)v23 = 0;
          *(_QWORD *)(v23 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v23 = 0;
          *(_BYTE *)(v23 + 23) = 0;
        }
      }
    }
  }
  if (*(int *)(v3 + 120) >= 1)
  {
    v24 = 0;
    do
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v3 + 112) + 8 * v24);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 32))(v25);
      ++v24;
    }
    while (v24 < *(int *)(v3 + 120));
  }
  *(_DWORD *)(v3 + 120) = 0;
  if (*(int *)(v3 + 216) >= 1)
  {
    v26 = 0;
    do
    {
      v27 = *(_QWORD *)(*(_QWORD *)(v3 + 208) + 8 * v26);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 32))(v27);
      ++v26;
    }
    while (v26 < *(int *)(v3 + 216));
  }
  *(_DWORD *)(v3 + 216) = 0;
  if (*(int *)(v3 + 344) >= 1)
  {
    v28 = 0;
    do
    {
      v29 = *(_QWORD *)(*(_QWORD *)(v3 + 336) + 8 * v28);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 32))(v29);
      ++v28;
    }
    while (v28 < *(int *)(v3 + 344));
  }
  *(_DWORD *)(v3 + 344) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t topotext::Location::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 0xF) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 48) = 0;
    if ((v3 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 56);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    *(_BYTE *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Media::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 0x1F) != 0)
  {
    if ((v3 & 1) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 48);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v6 = *(_QWORD *)(this + 56);
      if (v6 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v7 = *(_QWORD *)(this + 64);
      if (v7 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 72) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Attachment::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  unint64_t v10;
  BOOL v11;
  unsigned int TagFallback;
  std::string *v13;
  _BYTE *v14;
  int v15;
  int v16;
  std::string *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  std::string *v21;
  _BYTE *v22;
  unint64_t v23;
  unsigned __int8 *v24;
  unint64_t v25;
  unsigned __int8 *v26;
  std::string *v27;
  _BYTE *v28;
  int v29;
  unint64_t v30;
  unsigned __int8 *v31;
  std::string *v32;
  _BYTE *v33;
  std::string *v34;
  _BYTE *v35;
  unsigned __int8 *v36;
  topotext::Location *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  unint64_t v42;
  unsigned __int8 *v43;
  int v44;
  int v45;
  int v46;
  int v47;
  BOOL v48;
  int v49;
  _BYTE *v50;
  topotext::Media *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  _BYTE *v60;
  int v61;
  uint64_t v62;
  int32x2_t v63;
  topotext::PreviewImage *v64;
  int32x2_t v65;
  int32x2_t v66;
  char *v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  _BYTE *v74;
  _BYTE *v75;
  unsigned int v76;
  unsigned __int8 *v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  std::string *v80;
  unsigned __int8 *v81;
  int32x2_t v82;
  unsigned __int8 *v83;
  int32x2_t v84;
  unsigned __int8 *v85;
  unsigned __int8 *v86;
  unsigned int v87;
  unsigned __int8 *v88;
  std::string *v89;
  unsigned __int8 *v90;
  int v91;
  uint64_t v92;
  int32x2_t v93;
  topotext::Attachment *v94;
  int32x2_t v95;
  int32x2_t v96;
  char *v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int32x2_t v104;
  unsigned __int8 *v105;
  unsigned __int8 *v106;
  unsigned __int8 *v107;
  unsigned __int8 *v108;
  unsigned __int8 *v109;
  unsigned __int8 *v110;
  unsigned __int8 *v111;
  unsigned __int8 *v112;
  unsigned __int8 *v113;
  std::string *v114;
  unsigned __int8 *v115;
  std::string *v116;
  unsigned __int8 *v117;
  std::string *v118;
  unsigned __int8 *v119;
  std::string *v120;
  unsigned __int8 *v121;
  uint64_t v122;
  int v123;
  int32x2_t v124;
  topotext::Attachment *v125;
  int32x2_t v126;
  int32x2_t v127;
  char *v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  std::string *v135;
  unsigned __int8 *v136;
  std::string *v137;
  unsigned __int8 *v138;
  std::string *v139;
  unsigned __int8 *v140;
  std::string *v141;
  unsigned __int8 *v142;
  uint64_t v143;
  _BYTE v145[32];
  _QWORD v146[2];
  unsigned int v147[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v146, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v145, (google::protobuf::io::ZeroCopyOutputStream *)v146);
LABEL_2:
  while (2)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      v6 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v5 < v6)
      {
        v7 = *v5;
        if (*v5 >= 1)
        {
          *((_DWORD *)a2 + 8) = v7;
          v8 = (unsigned __int8 *)(v5 + 1);
          goto LABEL_8;
        }
        if ((unint64_t)(v5 + 1) < v6)
        {
          v9 = v5[1];
          if ((v7 & ~v9) >= 0x80)
            break;
        }
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v10 & 0x100000000) != 0)
        goto LABEL_16;
LABEL_9:
      if ((_DWORD)v10)
        v11 = (v10 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
LABEL_431:
        v143 = 1;
        goto LABEL_432;
      }
LABEL_152:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, (google::protobuf::io::CodedOutputStream *)v145, v4))goto LABEL_430;
    }
    v7 = (v7 + (v9 << 7) - 128);
    *((_DWORD *)a2 + 8) = v7;
    v8 = (unsigned __int8 *)(v5 + 2);
LABEL_8:
    *((_QWORD *)a2 + 1) = v8;
    v10 = v7 | 0x100000000;
LABEL_16:
    switch(v10 >> 3)
    {
      case 2u:
        if ((_DWORD)v10 != 18)
          goto LABEL_150;
        this[4].i32[0] |= 1u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v13 = (std::string *)this[5];
        if (v13 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v13 = (std::string *)operator new();
          v13->__r_.__value_.__r.__words[0] = 0;
          v13->__r_.__value_.__l.__size_ = 0;
          v13->__r_.__value_.__r.__words[2] = 0;
          this[5] = (int32x2_t)v13;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v13))
          goto LABEL_430;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_64:
        this[4].i32[0] |= 2u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v17 = (std::string *)this[6];
        if (v17 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v17 = (std::string *)operator new();
          v17->__r_.__value_.__r.__words[0] = 0;
          v17->__r_.__value_.__l.__size_ = 0;
          v17->__r_.__value_.__r.__words[2] = 0;
          this[6] = (int32x2_t)v17;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v17))
          goto LABEL_430;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_71:
        v147[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v147))
          goto LABEL_430;
        this[7].i32[0] = v147[0];
        this[4].i32[0] |= 4u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_75:
        v147[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v147))
          goto LABEL_430;
        this[7].i32[1] = v147[0];
        v16 = this[4].i32[0] | 8;
        this[4].i32[0] = v16;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_79:
        this[4].i32[0] = v16 | 0x10;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v21 = (std::string *)this[8];
        if (v21 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v21 = (std::string *)operator new();
          v21->__r_.__value_.__r.__words[0] = 0;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          this[8] = (int32x2_t)v21;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v21))
          goto LABEL_430;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_95:
        this[4].i32[0] |= 0x20u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v27 = (std::string *)this[9];
        if (v27 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v27 = (std::string *)operator new();
          v27->__r_.__value_.__r.__words[0] = 0;
          v27->__r_.__value_.__l.__size_ = 0;
          v27->__r_.__value_.__r.__words[2] = 0;
          this[9] = (int32x2_t)v27;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v27))
          goto LABEL_430;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_107:
        this[4].i32[0] |= 0x40u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v32 = (std::string *)this[10];
        if (v32 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v32 = (std::string *)operator new();
          v32->__r_.__value_.__r.__words[0] = 0;
          v32->__r_.__value_.__l.__size_ = 0;
          v32->__r_.__value_.__r.__words[2] = 0;
          this[10] = (int32x2_t)v32;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v32))
          goto LABEL_430;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_114:
        this[4].i32[0] |= 0x80u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v34 = (std::string *)this[11];
        if (v34 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v34 = (std::string *)operator new();
          v34->__r_.__value_.__r.__words[0] = 0;
          v34->__r_.__value_.__l.__size_ = 0;
          v34->__r_.__value_.__r.__words[2] = 0;
          this[11] = (int32x2_t)v34;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v34))
          goto LABEL_430;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_126:
        this[4].i32[0] |= 0x100u;
        v37 = (topotext::Location *)this[12];
        if (!v37)
        {
          v37 = (topotext::Location *)operator new();
          topotext::Location::Location(v37, v38, v39);
          this[12] = (int32x2_t)v37;
        }
        v147[0] = 0;
        v40 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v147))
            goto LABEL_430;
        }
        else
        {
          v147[0] = *v40;
          *((_QWORD *)a2 + 1) = v40 + 1;
        }
        v44 = *((_DWORD *)a2 + 14);
        v45 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v44 + 1;
        if (v44 >= v45)
          goto LABEL_430;
        v46 = google::protobuf::io::CodedInputStream::PushLimit(a2, v147[0]);
        if (!topotext::Location::MergePartialFromCodedStream(v37, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_430;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v46);
        v47 = *((_DWORD *)a2 + 14);
        v48 = __OFSUB__(v47, 1);
        v49 = v47 - 1;
        if (v49 < 0 == v48)
          *((_DWORD *)a2 + 14) = v49;
        v50 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v50 >= *((_QWORD *)a2 + 2) || *v50 != 90)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 1;
LABEL_163:
        this[4].i32[0] |= 0x200u;
        v51 = (topotext::Media *)this[13];
        if (!v51)
        {
          v51 = (topotext::Media *)operator new();
          topotext::Media::Media(v51, v52, v53);
          this[13] = (int32x2_t)v51;
        }
        v147[0] = 0;
        v54 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v54 >= *((_QWORD *)a2 + 2) || *v54 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v147))
            goto LABEL_430;
        }
        else
        {
          v147[0] = *v54;
          *((_QWORD *)a2 + 1) = v54 + 1;
        }
        v55 = *((_DWORD *)a2 + 14);
        v56 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v55 + 1;
        if (v55 >= v56)
          goto LABEL_430;
        v57 = google::protobuf::io::CodedInputStream::PushLimit(a2, v147[0]);
        if (!topotext::Media::MergePartialFromCodedStream(v51, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_430;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v57);
        v58 = *((_DWORD *)a2 + 14);
        v48 = __OFSUB__(v58, 1);
        v59 = v58 - 1;
        if (v59 < 0 == v48)
          *((_DWORD *)a2 + 14) = v59;
        v60 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v60 >= *((_QWORD *)a2 + 2) || *v60 != 98)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v60 + 1;
LABEL_177:
          v61 = this[15].i32[1];
          v62 = this[15].i32[0];
          if ((int)v62 >= v61)
          {
            if (v61 == this[16].i32[0])
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[14], v61 + 1);
            v64 = google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New();
            v65 = this[14];
            v66 = this[15];
            this[15] = vadd_s32(v66, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v65 + 8 * v66.i32[0]) = v64;
          }
          else
          {
            v63 = this[14];
            this[15].i32[0] = v62 + 1;
            v64 = *(topotext::PreviewImage **)(*(_QWORD *)&v63 + 8 * v62);
          }
          v147[0] = 0;
          v67 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v147))
              goto LABEL_430;
          }
          else
          {
            v147[0] = *v67;
            *((_QWORD *)a2 + 1) = v67 + 1;
          }
          v68 = *((_DWORD *)a2 + 14);
          v69 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v68 + 1;
          if (v68 >= v69)
            goto LABEL_430;
          v70 = google::protobuf::io::CodedInputStream::PushLimit(a2, v147[0]);
          if (!topotext::PreviewImage::MergePartialFromCodedStream(v64, a2) || !*((_BYTE *)a2 + 36))
            goto LABEL_430;
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v70);
          v71 = *((_DWORD *)a2 + 14);
          v48 = __OFSUB__(v71, 1);
          v72 = v71 - 1;
          if (v72 < 0 == v48)
            *((_DWORD *)a2 + 14) = v72;
          v60 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v60 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v73 = *v60;
        }
        while (v73 == 98);
        if (v73 != 109)
          continue;
        *((_QWORD *)a2 + 1) = v60 + 1;
LABEL_195:
        v147[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v147))
          goto LABEL_430;
        this[17].i32[0] = v147[0];
        this[4].i32[0] |= 0x800u;
        v74 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v74 >= *((_QWORD *)a2 + 2) || *v74 != 117)
          continue;
        *((_QWORD *)a2 + 1) = v74 + 1;
LABEL_199:
        v147[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v147))
          goto LABEL_430;
        this[17].i32[1] = v147[0];
        this[4].i32[0] |= 0x1000u;
        v75 = (_BYTE *)*((_QWORD *)a2 + 1);
        v30 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v75 >= v30 || *v75 != 120)
          continue;
        v31 = v75 + 1;
        *((_QWORD *)a2 + 1) = v31;
LABEL_203:
        v147[0] = 0;
        if ((unint64_t)v31 >= v30 || (char)*v31 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v147))
            goto LABEL_430;
          v76 = v147[0];
          v77 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v30 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v76 = *v31;
          v77 = v31 + 1;
          *((_QWORD *)a2 + 1) = v77;
        }
        this[20].i32[0] = v76;
        this[4].i32[0] |= 0x2000u;
        if ((int)v30 - (int)v77 < 2 || *v77 != 129 || v77[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v77 + 2;
LABEL_212:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[18] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x4000u;
        v78 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v78 < 2 || *v78 != 137 || v78[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v78 + 2;
LABEL_217:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[21] = *(int32x2_t *)v147;
        v15 = this[4].i32[0] | 0x10000;
        this[4].i32[0] = v15;
        v79 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v79 < 2 || *v79 != 146 || v79[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v79 + 2;
LABEL_222:
        this[4].i32[0] = v15 | 0x20000;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v80 = (std::string *)this[22];
        if (v80 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v80 = (std::string *)operator new();
          v80->__r_.__value_.__r.__words[0] = 0;
          v80->__r_.__value_.__l.__size_ = 0;
          v80->__r_.__value_.__r.__words[2] = 0;
          this[22] = (int32x2_t)v80;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v80))
          goto LABEL_430;
        v81 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        if ((int)v23 - (int)v81 < 2 || *v81 != 152 || v81[1] != 1)
          continue;
        v24 = v81 + 2;
        *((_QWORD *)a2 + 1) = v24;
LABEL_230:
        *(_QWORD *)v147 = 0;
        if ((unint64_t)v24 >= v23 || (char)*v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v147))
            goto LABEL_430;
          v82 = *(int32x2_t *)v147;
          v83 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v23 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v82 = (int32x2_t)*v24;
          v83 = v24 + 1;
          *((_QWORD *)a2 + 1) = v83;
        }
        this[20].i8[4] = *(_QWORD *)&v82 != 0;
        this[4].i32[0] |= 0x40000u;
        if ((int)v23 - (int)v83 < 2 || *v83 != 160 || v83[1] != 1)
          continue;
        v36 = v83 + 2;
        *((_QWORD *)a2 + 1) = v36;
LABEL_239:
        *(_QWORD *)v147 = 0;
        if ((unint64_t)v36 >= v23 || (char)*v36 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v147))
            goto LABEL_430;
          v84 = *(int32x2_t *)v147;
          v85 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v23 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v84 = (int32x2_t)*v36;
          v85 = v36 + 1;
          *((_QWORD *)a2 + 1) = v85;
        }
        this[23] = v84;
        this[4].i32[0] |= 0x80000u;
        if ((int)v23 - (int)v85 < 2 || *v85 != 169 || v85[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v85 + 2;
LABEL_248:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[24] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x100000u;
        v86 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        if ((int)v25 - (int)v86 < 2 || *v86 != 176 || v86[1] != 1)
          continue;
        v26 = v86 + 2;
        *((_QWORD *)a2 + 1) = v26;
LABEL_253:
        v147[0] = 0;
        if ((unint64_t)v26 >= v25 || (char)*v26 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v147))
            goto LABEL_430;
          v87 = v147[0];
          v88 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v25 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v87 = *v26;
          v88 = v26 + 1;
          *((_QWORD *)a2 + 1) = v88;
        }
        this[49].i32[0] = v87;
        v29 = this[4].i32[0] | 0x200000;
        this[4].i32[0] = v29;
        if ((int)v25 - (int)v88 < 2 || *v88 != 186 || v88[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v88 + 2;
LABEL_262:
        this[4].i32[0] = v29 | 0x400000;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v89 = (std::string *)this[25];
        if (v89 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v89 = (std::string *)operator new();
          v89->__r_.__value_.__r.__words[0] = 0;
          v89->__r_.__value_.__l.__size_ = 0;
          v89->__r_.__value_.__r.__words[2] = 0;
          this[25] = (int32x2_t)v89;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v89))
          goto LABEL_430;
        v90 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v90 < 2 || *v90 != 194 || v90[1] != 1)
          continue;
        while (1)
        {
          *((_QWORD *)a2 + 1) = v90 + 2;
LABEL_270:
          v91 = this[27].i32[1];
          v92 = this[27].i32[0];
          if ((int)v92 >= v91)
          {
            if (v91 == this[28].i32[0])
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[26], v91 + 1);
            v94 = google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
            v95 = this[26];
            v96 = this[27];
            this[27] = vadd_s32(v96, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v95 + 8 * v96.i32[0]) = v94;
          }
          else
          {
            v93 = this[26];
            this[27].i32[0] = v92 + 1;
            v94 = *(topotext::Attachment **)(*(_QWORD *)&v93 + 8 * v92);
          }
          v147[0] = 0;
          v97 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v97 >= *((_QWORD *)a2 + 2) || *v97 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v147))
              goto LABEL_430;
          }
          else
          {
            v147[0] = *v97;
            *((_QWORD *)a2 + 1) = v97 + 1;
          }
          v98 = *((_DWORD *)a2 + 14);
          v99 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v98 + 1;
          if (v98 >= v99)
            goto LABEL_430;
          v100 = google::protobuf::io::CodedInputStream::PushLimit(a2, v147[0]);
          if (!topotext::Attachment::MergePartialFromCodedStream(v94, a2) || !*((_BYTE *)a2 + 36))
            goto LABEL_430;
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v100);
          v101 = *((_DWORD *)a2 + 14);
          v48 = __OFSUB__(v101, 1);
          v102 = v101 - 1;
          if (v102 < 0 == v48)
            *((_DWORD *)a2 + 14) = v102;
          v90 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v42 = *((_QWORD *)a2 + 2);
          if ((int)v42 - (int)v90 <= 1)
            goto LABEL_2;
          v103 = *v90;
          if (v103 == 200)
            break;
          if (v103 != 194 || v90[1] != 1)
            goto LABEL_2;
        }
        if (v90[1] != 1)
          continue;
        v43 = v90 + 2;
        *((_QWORD *)a2 + 1) = v43;
LABEL_291:
        *(_QWORD *)v147 = 0;
        if ((unint64_t)v43 >= v42 || (char)*v43 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v147))
            goto LABEL_430;
          v104 = *(int32x2_t *)v147;
          v105 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v42 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v104 = (int32x2_t)*v43;
          v105 = v43 + 1;
          *((_QWORD *)a2 + 1) = v105;
        }
        this[29] = v104;
        this[4].i32[0] |= 0x1000000u;
        if ((int)v42 - (int)v105 < 2 || *v105 != 209 || v105[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v105 + 2;
LABEL_300:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[30] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x2000000u;
        v106 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v106 < 2 || *v106 != 217 || v106[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v106 + 2;
LABEL_305:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[31] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x4000000u;
        v107 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v107 < 2 || *v107 != 225 || v107[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v107 + 2;
LABEL_310:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[32] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x8000000u;
        v108 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v108 < 2 || *v108 != 233 || v108[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v108 + 2;
LABEL_315:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[33] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x10000000u;
        v109 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v109 < 2 || *v109 != 241 || v109[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v109 + 2;
LABEL_320:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[34] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x20000000u;
        v110 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v110 < 2 || *v110 != 249 || v110[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v110 + 2;
LABEL_325:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[35] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x40000000u;
        v111 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v111 < 2 || *v111 != 129 || v111[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v111 + 2;
LABEL_330:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[36] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x80000000;
        v112 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v112 < 2 || *v112 != 137 || v112[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v112 + 2;
LABEL_335:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
          goto LABEL_430;
        this[37] = *(int32x2_t *)v147;
        v41 = this[4].i32[1] | 1;
        this[4].i32[1] = v41;
        v113 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v113 < 2 || *v113 != 146 || v113[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v113 + 2;
LABEL_340:
        this[4].i32[1] = v41 | 2;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v114 = (std::string *)this[38];
        if (v114 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v114 = (std::string *)operator new();
          v114->__r_.__value_.__r.__words[0] = 0;
          v114->__r_.__value_.__l.__size_ = 0;
          v114->__r_.__value_.__r.__words[2] = 0;
          this[38] = (int32x2_t)v114;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v114))
          goto LABEL_430;
        v115 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v115 < 2 || *v115 != 154 || v115[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v115 + 2;
LABEL_348:
        this[4].i32[1] |= 4u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v116 = (std::string *)this[39];
        if (v116 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v116 = (std::string *)operator new();
          v116->__r_.__value_.__r.__words[0] = 0;
          v116->__r_.__value_.__l.__size_ = 0;
          v116->__r_.__value_.__r.__words[2] = 0;
          this[39] = (int32x2_t)v116;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v116))
          goto LABEL_430;
        v117 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v117 < 2 || *v117 != 162 || v117[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v117 + 2;
LABEL_356:
        this[4].i32[1] |= 8u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v118 = (std::string *)this[40];
        if (v118 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v118 = (std::string *)operator new();
          v118->__r_.__value_.__r.__words[0] = 0;
          v118->__r_.__value_.__l.__size_ = 0;
          v118->__r_.__value_.__r.__words[2] = 0;
          this[40] = (int32x2_t)v118;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v118))
          goto LABEL_430;
        v119 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v119 < 2 || *v119 != 170 || v119[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v119 + 2;
LABEL_364:
        this[4].i32[1] |= 0x10u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v120 = (std::string *)this[41];
        if (v120 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v120 = (std::string *)operator new();
          v120->__r_.__value_.__r.__words[0] = 0;
          v120->__r_.__value_.__l.__size_ = 0;
          v120->__r_.__value_.__r.__words[2] = 0;
          this[41] = (int32x2_t)v120;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v120))
          goto LABEL_430;
        v121 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v121 < 2 || *v121 != 178 || v121[1] != 2)
          continue;
        while (1)
        {
          *((_QWORD *)a2 + 1) = v121 + 2;
LABEL_372:
          v122 = this[43].i32[0];
          v123 = this[43].i32[1];
          if ((int)v122 >= v123)
          {
            if (v123 == this[44].i32[0])
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[42], v123 + 1);
            v125 = google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
            v126 = this[42];
            v127 = this[43];
            this[43] = vadd_s32(v127, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v126 + 8 * v127.i32[0]) = v125;
          }
          else
          {
            v124 = this[42];
            this[43].i32[0] = v122 + 1;
            v125 = *(topotext::Attachment **)(*(_QWORD *)&v124 + 8 * v122);
          }
          v147[0] = 0;
          v128 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v128 >= *((_QWORD *)a2 + 2) || *v128 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v147))
              goto LABEL_430;
          }
          else
          {
            v147[0] = *v128;
            *((_QWORD *)a2 + 1) = v128 + 1;
          }
          v129 = *((_DWORD *)a2 + 14);
          v130 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v129 + 1;
          if (v129 >= v130)
            goto LABEL_430;
          v131 = google::protobuf::io::CodedInputStream::PushLimit(a2, v147[0]);
          if (!topotext::Attachment::MergePartialFromCodedStream(v125, a2) || !*((_BYTE *)a2 + 36))
            goto LABEL_430;
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v131);
          v132 = *((_DWORD *)a2 + 14);
          v48 = __OFSUB__(v132, 1);
          v133 = v132 - 1;
          if (v133 < 0 == v48)
            *((_DWORD *)a2 + 14) = v133;
          v121 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if (*((_DWORD *)a2 + 4) - (int)v121 <= 1)
            goto LABEL_2;
          v134 = *v121;
          if (v134 == 186)
            break;
          if (v134 != 178 || v121[1] != 2)
            goto LABEL_2;
        }
        if (v121[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v121 + 2;
LABEL_393:
        this[4].i32[1] |= 0x40u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v135 = (std::string *)this[45];
        if (v135 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v135 = (std::string *)operator new();
          v135->__r_.__value_.__r.__words[0] = 0;
          v135->__r_.__value_.__l.__size_ = 0;
          v135->__r_.__value_.__r.__words[2] = 0;
          this[45] = (int32x2_t)v135;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v135))
          goto LABEL_430;
        v136 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v136 < 2 || *v136 != 194 || v136[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v136 + 2;
LABEL_401:
        this[4].i32[1] |= 0x80u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v137 = (std::string *)this[46];
        if (v137 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v137 = (std::string *)operator new();
          v137->__r_.__value_.__r.__words[0] = 0;
          v137->__r_.__value_.__l.__size_ = 0;
          v137->__r_.__value_.__r.__words[2] = 0;
          this[46] = (int32x2_t)v137;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v137))
          goto LABEL_430;
        v138 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v138 < 2 || *v138 != 202 || v138[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v138 + 2;
LABEL_409:
        this[4].i32[1] |= 0x100u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_433;
        v139 = (std::string *)this[47];
        if (v139 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v139 = (std::string *)operator new();
          v139->__r_.__value_.__r.__words[0] = 0;
          v139->__r_.__value_.__l.__size_ = 0;
          v139->__r_.__value_.__r.__words[2] = 0;
          this[47] = (int32x2_t)v139;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v139))
          goto LABEL_430;
        v140 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v140 < 2 || *v140 != 210 || v140[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v140 + 2;
LABEL_417:
        this[4].i32[1] |= 0x200u;
        if (!google::protobuf::internal::empty_string_)
LABEL_433:
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v141 = (std::string *)this[48];
        if (v141 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v141 = (std::string *)operator new();
          v141->__r_.__value_.__r.__words[0] = 0;
          v141->__r_.__value_.__l.__size_ = 0;
          v141->__r_.__value_.__r.__words[2] = 0;
          this[48] = (int32x2_t)v141;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v141))
          goto LABEL_430;
        v142 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v142 < 2 || *v142 != 217 || v142[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v142 + 2;
LABEL_425:
        *(_QWORD *)v147 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v147))
        {
LABEL_430:
          v143 = 0;
          goto LABEL_432;
        }
        this[19] = *(int32x2_t *)v147;
        this[4].i32[0] |= 0x8000u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v143 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_432:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v145);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v146);
        return v143;
      case 3u:
        if ((_DWORD)v10 == 26)
          goto LABEL_64;
        goto LABEL_150;
      case 4u:
        if ((_DWORD)v10 == 37)
          goto LABEL_71;
        goto LABEL_150;
      case 5u:
        if ((_DWORD)v10 == 45)
          goto LABEL_75;
        goto LABEL_150;
      case 6u:
        if ((_DWORD)v10 != 50)
          goto LABEL_150;
        v16 = this[4].i32[0];
        goto LABEL_79;
      case 7u:
        if ((_DWORD)v10 == 58)
          goto LABEL_95;
        goto LABEL_150;
      case 8u:
        if ((_DWORD)v10 == 66)
          goto LABEL_107;
        goto LABEL_150;
      case 9u:
        if ((_DWORD)v10 == 74)
          goto LABEL_114;
        goto LABEL_150;
      case 0xAu:
        if ((_DWORD)v10 == 82)
          goto LABEL_126;
        goto LABEL_150;
      case 0xBu:
        if ((_DWORD)v10 == 90)
          goto LABEL_163;
        goto LABEL_150;
      case 0xCu:
        if ((_DWORD)v10 == 98)
          goto LABEL_177;
        goto LABEL_150;
      case 0xDu:
        if ((_DWORD)v10 == 109)
          goto LABEL_195;
        goto LABEL_150;
      case 0xEu:
        if ((_DWORD)v10 == 117)
          goto LABEL_199;
        goto LABEL_150;
      case 0xFu:
        if ((_DWORD)v10 != 120)
          goto LABEL_150;
        v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v30 = *((_QWORD *)a2 + 2);
        goto LABEL_203;
      case 0x10u:
        if ((_DWORD)v10 == 129)
          goto LABEL_212;
        goto LABEL_150;
      case 0x11u:
        if ((_DWORD)v10 == 137)
          goto LABEL_217;
        goto LABEL_150;
      case 0x12u:
        if ((_DWORD)v10 != 146)
          goto LABEL_150;
        v15 = this[4].i32[0];
        goto LABEL_222;
      case 0x13u:
        if ((_DWORD)v10 != 152)
          goto LABEL_150;
        v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_230;
      case 0x14u:
        if ((_DWORD)v10 != 160)
          goto LABEL_150;
        v36 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_239;
      case 0x15u:
        if ((_DWORD)v10 == 169)
          goto LABEL_248;
        goto LABEL_150;
      case 0x16u:
        if ((_DWORD)v10 != 176)
          goto LABEL_150;
        v26 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_253;
      case 0x17u:
        if ((_DWORD)v10 != 186)
          goto LABEL_150;
        v29 = this[4].i32[0];
        goto LABEL_262;
      case 0x18u:
        if ((_DWORD)v10 == 194)
          goto LABEL_270;
        goto LABEL_150;
      case 0x19u:
        if ((_DWORD)v10 != 200)
          goto LABEL_150;
        v43 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v42 = *((_QWORD *)a2 + 2);
        goto LABEL_291;
      case 0x1Au:
        if ((_DWORD)v10 == 209)
          goto LABEL_300;
        goto LABEL_150;
      case 0x1Bu:
        if ((_DWORD)v10 == 217)
          goto LABEL_305;
        goto LABEL_150;
      case 0x1Cu:
        if ((_DWORD)v10 != 225)
          goto LABEL_150;
        goto LABEL_310;
      case 0x1Du:
        if ((_DWORD)v10 == 233)
          goto LABEL_315;
        goto LABEL_150;
      case 0x1Eu:
        if ((_DWORD)v10 == 241)
          goto LABEL_320;
        goto LABEL_150;
      case 0x1Fu:
        if ((_DWORD)v10 == 249)
          goto LABEL_325;
        goto LABEL_150;
      case 0x20u:
        if ((_DWORD)v10 == 257)
          goto LABEL_330;
        goto LABEL_150;
      case 0x21u:
        if ((_DWORD)v10 == 265)
          goto LABEL_335;
        goto LABEL_150;
      case 0x22u:
        if ((_DWORD)v10 != 274)
          goto LABEL_150;
        v41 = this[4].i32[1];
        goto LABEL_340;
      case 0x23u:
        if ((_DWORD)v10 == 282)
          goto LABEL_348;
        goto LABEL_150;
      case 0x24u:
        if ((_DWORD)v10 == 290)
          goto LABEL_356;
        goto LABEL_150;
      case 0x25u:
        if ((_DWORD)v10 == 298)
          goto LABEL_364;
        goto LABEL_150;
      case 0x26u:
        if ((_DWORD)v10 == 306)
          goto LABEL_372;
        goto LABEL_150;
      case 0x27u:
        if ((_DWORD)v10 == 314)
          goto LABEL_393;
        goto LABEL_150;
      case 0x28u:
        if ((_DWORD)v10 == 322)
          goto LABEL_401;
        goto LABEL_150;
      case 0x29u:
        if ((_DWORD)v10 == 330)
          goto LABEL_409;
        goto LABEL_150;
      case 0x2Au:
        if ((_DWORD)v10 == 338)
          goto LABEL_417;
        goto LABEL_150;
      case 0x2Bu:
        if ((_DWORD)v10 == 345)
          goto LABEL_425;
LABEL_150:
        if ((_DWORD)v10 && (v10 & 7) != 4)
          goto LABEL_152;
        goto LABEL_431;
      default:
        goto LABEL_9;
    }
  }
}

void sub_1BDA1D1FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C40DF275E33);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::SerializeWithCachedSizes(topotext::Attachment *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  topotext::Attachment *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  char *v19;
  uint64_t v20;

  v5 = this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((_QWORD *)v5 + 6), a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)v5 + 14), a3);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)5, a2, *((float *)v5 + 15), a3);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(6, *((_QWORD *)v5 + 8), a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(7, *((_QWORD *)v5 + 9), a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(8, *((_QWORD *)v5 + 10), a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(9, *((_QWORD *)v5 + 11), a2);
  v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_26;
    goto LABEL_23;
  }
LABEL_20:
  v7 = *((_QWORD *)v5 + 12);
  if (!v7)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    v7 = *(_QWORD *)(topotext::Attachment::default_instance_ + 96);
  }
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteMessage(10, v7, a2);
  if ((*((_DWORD *)v5 + 8) & 0x200) != 0)
  {
LABEL_23:
    v8 = *((_QWORD *)v5 + 13);
    if (!v8)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      v8 = *(_QWORD *)(topotext::Attachment::default_instance_ + 104);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(11, v8, a2);
  }
LABEL_26:
  if (*((int *)v5 + 30) >= 1)
  {
    v9 = 0;
    do
    {
      v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)v5 + 112, v9);
      google::protobuf::internal::WireFormatLite::WriteMessage(12, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v5 + 30));
  }
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x800) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)0xD, a2, *((float *)v5 + 34), a3);
    v11 = *((_DWORD *)v5 + 8);
    if ((v11 & 0x1000) == 0)
    {
LABEL_31:
      if ((v11 & 0x2000) == 0)
        goto LABEL_32;
      goto LABEL_72;
    }
  }
  else if ((v11 & 0x1000) == 0)
  {
    goto LABEL_31;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)0xE, a2, *((float *)v5 + 35), a3);
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x2000) == 0)
  {
LABEL_32:
    if ((v11 & 0x4000) == 0)
      goto LABEL_33;
    goto LABEL_73;
  }
LABEL_72:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0xF, *((_DWORD *)v5 + 40), a2, a4);
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x4000) == 0)
  {
LABEL_33:
    if ((v11 & 0x10000) == 0)
      goto LABEL_34;
    goto LABEL_74;
  }
LABEL_73:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x10, a2, *((double *)v5 + 18), a3);
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x10000) == 0)
  {
LABEL_34:
    if ((v11 & 0x20000) == 0)
      goto LABEL_35;
    goto LABEL_75;
  }
LABEL_74:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x11, a2, *((double *)v5 + 21), a3);
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x20000) == 0)
  {
LABEL_35:
    if ((v11 & 0x40000) == 0)
      goto LABEL_36;
    goto LABEL_76;
  }
LABEL_75:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(18, *((_QWORD *)v5 + 22), a2);
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x40000) == 0)
  {
LABEL_36:
    if ((v11 & 0x80000) == 0)
      goto LABEL_37;
    goto LABEL_77;
  }
LABEL_76:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)0x13, *((unsigned __int8 *)v5 + 164), a2, a4);
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x80000) == 0)
  {
LABEL_37:
    if ((v11 & 0x100000) == 0)
      goto LABEL_38;
    goto LABEL_78;
  }
LABEL_77:
  google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0x14, *((_QWORD *)v5 + 23), a2, a4);
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x100000) == 0)
  {
LABEL_38:
    if ((v11 & 0x200000) == 0)
      goto LABEL_39;
    goto LABEL_79;
  }
LABEL_78:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x15, a2, *((double *)v5 + 24), a3);
  v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x200000) == 0)
  {
LABEL_39:
    if ((v11 & 0x400000) == 0)
      goto LABEL_41;
    goto LABEL_40;
  }
LABEL_79:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0x16, *((_DWORD *)v5 + 98), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x400000) != 0)
LABEL_40:
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(23, *((_QWORD *)v5 + 25), a2);
LABEL_41:
  if (*((int *)v5 + 54) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)v5 + 208, v12);
      google::protobuf::internal::WireFormatLite::WriteMessage(24, v13, a2);
      ++v12;
    }
    while (v12 < *((_DWORD *)v5 + 54));
  }
  v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x1000000) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0x19, *((_QWORD *)v5 + 29), a2, a4);
    v14 = *((_DWORD *)v5 + 8);
    if ((v14 & 0x2000000) == 0)
    {
LABEL_46:
      if ((v14 & 0x4000000) == 0)
        goto LABEL_47;
      goto LABEL_83;
    }
  }
  else if ((v14 & 0x2000000) == 0)
  {
    goto LABEL_46;
  }
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1A, a2, *((double *)v5 + 30), a3);
  v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x4000000) == 0)
  {
LABEL_47:
    if ((v14 & 0x8000000) == 0)
      goto LABEL_48;
    goto LABEL_84;
  }
LABEL_83:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1B, a2, *((double *)v5 + 31), a3);
  v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x8000000) == 0)
  {
LABEL_48:
    if ((v14 & 0x10000000) == 0)
      goto LABEL_49;
    goto LABEL_85;
  }
LABEL_84:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1C, a2, *((double *)v5 + 32), a3);
  v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x10000000) == 0)
  {
LABEL_49:
    if ((v14 & 0x20000000) == 0)
      goto LABEL_50;
    goto LABEL_86;
  }
LABEL_85:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1D, a2, *((double *)v5 + 33), a3);
  v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x20000000) == 0)
  {
LABEL_50:
    if ((v14 & 0x40000000) == 0)
      goto LABEL_51;
LABEL_87:
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1F, a2, *((double *)v5 + 35), a3);
    if ((*((_DWORD *)v5 + 8) & 0x80000000) == 0)
      goto LABEL_52;
    goto LABEL_88;
  }
LABEL_86:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1E, a2, *((double *)v5 + 34), a3);
  v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x40000000) != 0)
    goto LABEL_87;
LABEL_51:
  if ((v14 & 0x80000000) == 0)
    goto LABEL_52;
LABEL_88:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x20, a2, *((double *)v5 + 36), a3);
LABEL_52:
  v15 = *((_DWORD *)v5 + 9);
  if ((v15 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x21, a2, *((double *)v5 + 37), a3);
    v15 = *((_DWORD *)v5 + 9);
    if ((v15 & 2) == 0)
    {
LABEL_54:
      if ((v15 & 4) == 0)
        goto LABEL_55;
      goto LABEL_91;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_54;
  }
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(34, *((_QWORD *)v5 + 38), a2);
  v15 = *((_DWORD *)v5 + 9);
  if ((v15 & 4) == 0)
  {
LABEL_55:
    if ((v15 & 8) == 0)
      goto LABEL_56;
    goto LABEL_92;
  }
LABEL_91:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(35, *((_QWORD *)v5 + 39), a2);
  v15 = *((_DWORD *)v5 + 9);
  if ((v15 & 8) == 0)
  {
LABEL_56:
    if ((v15 & 0x10) == 0)
      goto LABEL_58;
    goto LABEL_57;
  }
LABEL_92:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(36, *((_QWORD *)v5 + 40), a2);
  if ((*((_DWORD *)v5 + 9) & 0x10) != 0)
LABEL_57:
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(37, *((_QWORD *)v5 + 41), a2);
LABEL_58:
  if (*((int *)v5 + 86) >= 1)
  {
    v16 = 0;
    do
    {
      v17 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)v5 + 336, v16);
      google::protobuf::internal::WireFormatLite::WriteMessage(38, v17, a2);
      ++v16;
    }
    while (v16 < *((_DWORD *)v5 + 86));
  }
  v18 = *((_DWORD *)v5 + 9);
  if ((v18 & 0x40) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(39, *((_QWORD *)v5 + 45), a2);
    v18 = *((_DWORD *)v5 + 9);
    if ((v18 & 0x80) == 0)
    {
LABEL_63:
      if ((v18 & 0x100) == 0)
        goto LABEL_64;
      goto LABEL_96;
    }
  }
  else if ((v18 & 0x80) == 0)
  {
    goto LABEL_63;
  }
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(40, *((_QWORD *)v5 + 46), a2);
  v18 = *((_DWORD *)v5 + 9);
  if ((v18 & 0x100) == 0)
  {
LABEL_64:
    if ((v18 & 0x200) == 0)
      goto LABEL_66;
    goto LABEL_65;
  }
LABEL_96:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(41, *((_QWORD *)v5 + 47), a2);
  if ((*((_DWORD *)v5 + 9) & 0x200) != 0)
LABEL_65:
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(42, *((_QWORD *)v5 + 48), a2);
LABEL_66:
  if ((*((_BYTE *)v5 + 33) & 0x80) != 0)
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x2B, a2, *((double *)v5 + 19), a3);
  if (*((char *)v5 + 31) < 0)
  {
    v19 = (char *)*((_QWORD *)v5 + 1);
    v20 = *((_QWORD *)v5 + 2);
  }
  else
  {
    v19 = (char *)v5 + 8;
    LODWORD(v20) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v19, v20);
}

uint64_t topotext::Attachment::ByteSize(topotext::Attachment *this)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  topotext::Location *v42;
  google::protobuf::io::CodedOutputStream *v43;
  int v44;
  int v45;
  topotext::Media *v46;
  google::protobuf::io::CodedOutputStream *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  google::protobuf::io::CodedOutputStream *v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  google::protobuf::io::CodedOutputStream *v62;
  int v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  int v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  uint64_t v78;
  int v79;
  char v80;
  uint64_t v81;
  unint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  char v92;
  uint64_t v93;
  unint64_t v94;
  int v95;
  uint64_t v96;
  int v97;
  char v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  uint64_t v102;
  int v103;
  char v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  uint64_t v108;
  int v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  int v113;
  uint64_t v114;
  int v115;
  char v116;
  uint64_t v117;
  unint64_t v118;
  int v119;
  int v120;
  int v121;
  int v122;
  topotext::PreviewImage *v123;
  google::protobuf::io::CodedOutputStream *v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  topotext::Attachment *v130;
  google::protobuf::io::CodedOutputStream *v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  topotext::Attachment *v137;
  google::protobuf::io::CodedOutputStream *v138;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t result;

  v2 = *((_DWORD *)this + 8);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_70;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 5);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v2 = *((_DWORD *)this + 8);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v3 = v10 + v6 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 6);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v2 = *((_DWORD *)this + 8);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  v17 = v3 + 5;
  if ((v2 & 4) == 0)
    v17 = v3;
  if ((v2 & 8) != 0)
    v4 = v17 + 5;
  else
    v4 = v17;
  if ((v2 & 0x10) != 0)
  {
    v18 = *((_QWORD *)this + 8);
    v19 = *(unsigned __int8 *)(v18 + 23);
    v20 = v19;
    v21 = *(_QWORD *)(v18 + 8);
    if ((v19 & 0x80u) == 0)
      v22 = *(unsigned __int8 *)(v18 + 23);
    else
      v22 = v21;
    if (v22 >= 0x80)
    {
      v23 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v22);
      v19 = *(unsigned __int8 *)(v18 + 23);
      v21 = *(_QWORD *)(v18 + 8);
      v2 = *((_DWORD *)this + 8);
      v20 = *(_BYTE *)(v18 + 23);
    }
    else
    {
      v23 = 1;
    }
    if (v20 < 0)
      v19 = v21;
    v4 += v23 + v19 + 1;
    if ((v2 & 0x20) == 0)
    {
LABEL_31:
      if ((v2 & 0x40) == 0)
        goto LABEL_32;
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_31;
  }
  v24 = *((_QWORD *)this + 9);
  v25 = *(unsigned __int8 *)(v24 + 23);
  v26 = v25;
  v27 = *(_QWORD *)(v24 + 8);
  if ((v25 & 0x80u) == 0)
    v28 = *(unsigned __int8 *)(v24 + 23);
  else
    v28 = v27;
  if (v28 >= 0x80)
  {
    v29 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v28);
    v25 = *(unsigned __int8 *)(v24 + 23);
    v27 = *(_QWORD *)(v24 + 8);
    v2 = *((_DWORD *)this + 8);
    v26 = *(_BYTE *)(v24 + 23);
  }
  else
  {
    v29 = 1;
  }
  if (v26 < 0)
    v25 = v27;
  v4 += v29 + v25 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_32:
    if ((v2 & 0x80) == 0)
      goto LABEL_70;
    goto LABEL_61;
  }
LABEL_52:
  v30 = *((_QWORD *)this + 10);
  v31 = *(unsigned __int8 *)(v30 + 23);
  v32 = v31;
  v33 = *(_QWORD *)(v30 + 8);
  if ((v31 & 0x80u) == 0)
    v34 = *(unsigned __int8 *)(v30 + 23);
  else
    v34 = v33;
  if (v34 >= 0x80)
  {
    v35 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v34);
    v31 = *(unsigned __int8 *)(v30 + 23);
    v33 = *(_QWORD *)(v30 + 8);
    v2 = *((_DWORD *)this + 8);
    v32 = *(_BYTE *)(v30 + 23);
  }
  else
  {
    v35 = 1;
  }
  if (v32 < 0)
    v31 = v33;
  v4 += v35 + v31 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_61:
    v36 = *((_QWORD *)this + 11);
    v37 = *(unsigned __int8 *)(v36 + 23);
    v38 = v37;
    v39 = *(_QWORD *)(v36 + 8);
    if ((v37 & 0x80u) == 0)
      v40 = *(unsigned __int8 *)(v36 + 23);
    else
      v40 = v39;
    if (v40 >= 0x80)
    {
      v41 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v40);
      v37 = *(unsigned __int8 *)(v36 + 23);
      v39 = *(_QWORD *)(v36 + 8);
      v2 = *((_DWORD *)this + 8);
      v38 = *(_BYTE *)(v36 + 23);
    }
    else
    {
      v41 = 1;
    }
    if (v38 < 0)
      v37 = v39;
    v4 += v41 + v37 + 1;
  }
LABEL_70:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v42 = (topotext::Location *)*((_QWORD *)this + 12);
      if (!v42)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(0);
        v42 = *(topotext::Location **)(topotext::Attachment::default_instance_ + 96);
      }
      v43 = (google::protobuf::io::CodedOutputStream *)topotext::Location::ByteSize(v42);
      v44 = (int)v43;
      if (v43 >= 0x80)
        v45 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      else
        v45 = 1;
      v4 += v44 + v45 + 1;
      v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 0x200) != 0)
    {
      v46 = (topotext::Media *)*((_QWORD *)this + 13);
      if (!v46)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(0);
        v46 = *(topotext::Media **)(topotext::Attachment::default_instance_ + 104);
      }
      v47 = (google::protobuf::io::CodedOutputStream *)topotext::Media::ByteSize(v46);
      v48 = (int)v47;
      if (v47 >= 0x80)
        v49 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
      else
        v49 = 1;
      v4 += v48 + v49 + 1;
      v2 = *((_DWORD *)this + 8);
    }
    v50 = v4 + 5;
    if ((v2 & 0x800) == 0)
      v50 = v4;
    if ((v2 & 0x1000) != 0)
      v51 = v50 + 5;
    else
      v51 = v50;
    if ((v2 & 0x2000) != 0)
    {
      v52 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
      if ((v52 & 0x80000000) != 0)
      {
        v53 = 10;
      }
      else if (v52 >= 0x80)
      {
        v53 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
        v2 = *((_DWORD *)this + 8);
      }
      else
      {
        v53 = 1;
      }
      v51 += v53 + 1;
    }
    v54 = v51 + 10;
    if ((v2 & 0x4000) == 0)
      v54 = v51;
    if ((v2 & 0x8000) != 0)
      v4 = v54 + 10;
    else
      v4 = v54;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
      v55 = v4 + 10;
    else
      v55 = v4;
    if ((v2 & 0x20000) != 0)
    {
      v56 = *((_QWORD *)this + 22);
      v57 = *(unsigned __int8 *)(v56 + 23);
      v58 = v57;
      v59 = *(_QWORD *)(v56 + 8);
      if ((v57 & 0x80u) == 0)
        v60 = *(unsigned __int8 *)(v56 + 23);
      else
        v60 = v59;
      if (v60 >= 0x80)
      {
        v61 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v60);
        v57 = *(unsigned __int8 *)(v56 + 23);
        v59 = *(_QWORD *)(v56 + 8);
        v2 = *((_DWORD *)this + 8);
        v58 = *(_BYTE *)(v56 + 23);
      }
      else
      {
        v61 = 1;
      }
      if (v58 < 0)
        v57 = v59;
      v55 += v61 + v57 + 2;
    }
    if ((v2 & 0x40000) != 0)
      v55 += 3;
    if ((v2 & 0x80000) != 0)
    {
      v55 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 23)) + 2;
      v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 0x100000) != 0)
      v4 = v55 + 10;
    else
      v4 = v55;
    if ((v2 & 0x200000) != 0)
    {
      v62 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 98);
      if ((v62 & 0x80000000) != 0)
      {
        v63 = 10;
      }
      else if (v62 >= 0x80)
      {
        v63 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
        v2 = *((_DWORD *)this + 8);
      }
      else
      {
        v63 = 1;
      }
      v4 += v63 + 2;
    }
    if ((v2 & 0x400000) != 0)
    {
      v64 = *((_QWORD *)this + 25);
      v65 = *(unsigned __int8 *)(v64 + 23);
      v66 = v65;
      v67 = *(_QWORD *)(v64 + 8);
      if ((v65 & 0x80u) == 0)
        v68 = *(unsigned __int8 *)(v64 + 23);
      else
        v68 = v67;
      if (v68 >= 0x80)
      {
        v69 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v68);
        v65 = *(unsigned __int8 *)(v64 + 23);
        v67 = *(_QWORD *)(v64 + 8);
        v2 = *((_DWORD *)this + 8);
        v66 = *(_BYTE *)(v64 + 23);
      }
      else
      {
        v69 = 1;
      }
      if (v66 < 0)
        v65 = v67;
      v4 += v69 + v65 + 2;
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      v4 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 29)) + 2;
      v2 = *((_DWORD *)this + 8);
    }
    v70 = v4 + 10;
    if ((v2 & 0x2000000) == 0)
      v70 = v4;
    if ((v2 & 0x4000000) != 0)
      v70 += 10;
    if ((v2 & 0x8000000) != 0)
      v70 += 10;
    if ((v2 & 0x10000000) != 0)
      v70 += 10;
    if ((v2 & 0x20000000) != 0)
      v70 += 10;
    if ((v2 & 0x40000000) != 0)
      v70 += 10;
    if (v2 >= 0)
      v4 = v70;
    else
      v4 = v70 + 10;
  }
  v71 = *((_DWORD *)this + 9);
  if (!(_BYTE)v71)
    goto LABEL_222;
  if ((v71 & 1) != 0)
    v4 += 10;
  if ((v71 & 2) != 0)
  {
    v72 = *((_QWORD *)this + 38);
    v73 = *(unsigned __int8 *)(v72 + 23);
    v74 = v73;
    v75 = *(_QWORD *)(v72 + 8);
    if ((v73 & 0x80u) == 0)
      v76 = *(unsigned __int8 *)(v72 + 23);
    else
      v76 = v75;
    if (v76 >= 0x80)
    {
      v77 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v76);
      v73 = *(unsigned __int8 *)(v72 + 23);
      v75 = *(_QWORD *)(v72 + 8);
      v71 = *((_DWORD *)this + 9);
      v74 = *(_BYTE *)(v72 + 23);
    }
    else
    {
      v77 = 1;
    }
    if (v74 < 0)
      v73 = v75;
    v4 += v77 + v73 + 2;
    if ((v71 & 4) == 0)
    {
LABEL_163:
      if ((v71 & 8) == 0)
        goto LABEL_164;
      goto LABEL_186;
    }
  }
  else if ((v71 & 4) == 0)
  {
    goto LABEL_163;
  }
  v78 = *((_QWORD *)this + 39);
  v79 = *(unsigned __int8 *)(v78 + 23);
  v80 = v79;
  v81 = *(_QWORD *)(v78 + 8);
  if ((v79 & 0x80u) == 0)
    v82 = *(unsigned __int8 *)(v78 + 23);
  else
    v82 = v81;
  if (v82 >= 0x80)
  {
    v83 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v82);
    v79 = *(unsigned __int8 *)(v78 + 23);
    v81 = *(_QWORD *)(v78 + 8);
    v71 = *((_DWORD *)this + 9);
    v80 = *(_BYTE *)(v78 + 23);
  }
  else
  {
    v83 = 1;
  }
  if (v80 < 0)
    v79 = v81;
  v4 += v83 + v79 + 2;
  if ((v71 & 8) == 0)
  {
LABEL_164:
    if ((v71 & 0x10) == 0)
      goto LABEL_165;
LABEL_195:
    v90 = *((_QWORD *)this + 41);
    v91 = *(unsigned __int8 *)(v90 + 23);
    v92 = v91;
    v93 = *(_QWORD *)(v90 + 8);
    if ((v91 & 0x80u) == 0)
      v94 = *(unsigned __int8 *)(v90 + 23);
    else
      v94 = v93;
    if (v94 >= 0x80)
    {
      v95 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v94);
      v91 = *(unsigned __int8 *)(v90 + 23);
      v93 = *(_QWORD *)(v90 + 8);
      v71 = *((_DWORD *)this + 9);
      v92 = *(_BYTE *)(v90 + 23);
    }
    else
    {
      v95 = 1;
    }
    if (v92 < 0)
      v91 = v93;
    v4 += v95 + v91 + 2;
    if ((v71 & 0x40) == 0)
    {
LABEL_166:
      if ((v71 & 0x80) == 0)
        goto LABEL_222;
      goto LABEL_213;
    }
    goto LABEL_204;
  }
LABEL_186:
  v84 = *((_QWORD *)this + 40);
  v85 = *(unsigned __int8 *)(v84 + 23);
  v86 = v85;
  v87 = *(_QWORD *)(v84 + 8);
  if ((v85 & 0x80u) == 0)
    v88 = *(unsigned __int8 *)(v84 + 23);
  else
    v88 = v87;
  if (v88 >= 0x80)
  {
    v89 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v88);
    v85 = *(unsigned __int8 *)(v84 + 23);
    v87 = *(_QWORD *)(v84 + 8);
    v71 = *((_DWORD *)this + 9);
    v86 = *(_BYTE *)(v84 + 23);
  }
  else
  {
    v89 = 1;
  }
  if (v86 < 0)
    v85 = v87;
  v4 += v89 + v85 + 2;
  if ((v71 & 0x10) != 0)
    goto LABEL_195;
LABEL_165:
  if ((v71 & 0x40) == 0)
    goto LABEL_166;
LABEL_204:
  v96 = *((_QWORD *)this + 45);
  v97 = *(unsigned __int8 *)(v96 + 23);
  v98 = v97;
  v99 = *(_QWORD *)(v96 + 8);
  if ((v97 & 0x80u) == 0)
    v100 = *(unsigned __int8 *)(v96 + 23);
  else
    v100 = v99;
  if (v100 >= 0x80)
  {
    v101 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v100);
    v97 = *(unsigned __int8 *)(v96 + 23);
    v99 = *(_QWORD *)(v96 + 8);
    v71 = *((_DWORD *)this + 9);
    v98 = *(_BYTE *)(v96 + 23);
  }
  else
  {
    v101 = 1;
  }
  if (v98 < 0)
    v97 = v99;
  v4 += v101 + v97 + 2;
  if ((v71 & 0x80) != 0)
  {
LABEL_213:
    v102 = *((_QWORD *)this + 46);
    v103 = *(unsigned __int8 *)(v102 + 23);
    v104 = v103;
    v105 = *(_QWORD *)(v102 + 8);
    if ((v103 & 0x80u) == 0)
      v106 = *(unsigned __int8 *)(v102 + 23);
    else
      v106 = v105;
    if (v106 >= 0x80)
    {
      v107 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v106);
      v103 = *(unsigned __int8 *)(v102 + 23);
      v105 = *(_QWORD *)(v102 + 8);
      v71 = *((_DWORD *)this + 9);
      v104 = *(_BYTE *)(v102 + 23);
    }
    else
    {
      v107 = 1;
    }
    if (v104 < 0)
      v103 = v105;
    v4 += v107 + v103 + 2;
  }
LABEL_222:
  if ((v71 & 0xFF00) != 0)
  {
    if ((v71 & 0x100) != 0)
    {
      v108 = *((_QWORD *)this + 47);
      v109 = *(unsigned __int8 *)(v108 + 23);
      v110 = v109;
      v111 = *(_QWORD *)(v108 + 8);
      if ((v109 & 0x80u) == 0)
        v112 = *(unsigned __int8 *)(v108 + 23);
      else
        v112 = v111;
      if (v112 >= 0x80)
      {
        v113 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v112);
        v109 = *(unsigned __int8 *)(v108 + 23);
        v111 = *(_QWORD *)(v108 + 8);
        v71 = *((_DWORD *)this + 9);
        v110 = *(_BYTE *)(v108 + 23);
      }
      else
      {
        v113 = 1;
      }
      if (v110 < 0)
        v109 = v111;
      v4 += v113 + v109 + 2;
    }
    if ((v71 & 0x200) != 0)
    {
      v114 = *((_QWORD *)this + 48);
      v115 = *(unsigned __int8 *)(v114 + 23);
      v116 = v115;
      v117 = *(_QWORD *)(v114 + 8);
      if ((v115 & 0x80u) == 0)
        v118 = *(unsigned __int8 *)(v114 + 23);
      else
        v118 = v117;
      if (v118 >= 0x80)
      {
        v119 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v118);
        v115 = *(unsigned __int8 *)(v114 + 23);
        v117 = *(_QWORD *)(v114 + 8);
        v116 = *(_BYTE *)(v114 + 23);
      }
      else
      {
        v119 = 1;
      }
      if (v116 < 0)
        v115 = v117;
      v4 += v119 + v115 + 2;
    }
  }
  v120 = *((_DWORD *)this + 30);
  v121 = v120 + v4;
  if (v120 >= 1)
  {
    v122 = 0;
    do
    {
      v123 = (topotext::PreviewImage *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)this + 112, v122);
      v124 = (google::protobuf::io::CodedOutputStream *)topotext::PreviewImage::ByteSize(v123);
      v125 = (int)v124;
      if (v124 >= 0x80)
        v126 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v124);
      else
        v126 = 1;
      v121 += v125 + v126;
      ++v122;
    }
    while (v122 < *((_DWORD *)this + 30));
  }
  v127 = *((_DWORD *)this + 54);
  v128 = v121 + 2 * v127;
  if (v127 >= 1)
  {
    v129 = 0;
    do
    {
      v130 = (topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)this + 208, v129);
      v131 = (google::protobuf::io::CodedOutputStream *)topotext::Attachment::ByteSize(v130);
      v132 = (int)v131;
      if (v131 >= 0x80)
        v133 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131);
      else
        v133 = 1;
      v128 += v132 + v133;
      ++v129;
    }
    while (v129 < *((_DWORD *)this + 54));
  }
  v134 = *((_DWORD *)this + 86);
  v135 = v128 + 2 * v134;
  if (v134 >= 1)
  {
    v136 = 0;
    do
    {
      v137 = (topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)this + 336, v136);
      v138 = (google::protobuf::io::CodedOutputStream *)topotext::Attachment::ByteSize(v137);
      v139 = (int)v138;
      if (v138 >= 0x80)
        v140 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v138);
      else
        v140 = 1;
      v135 += v139 + v140;
      ++v136;
    }
    while (v136 < *((_DWORD *)this + 86));
  }
  if (*((char *)this + 31) < 0)
    v141 = *((_QWORD *)this + 2);
  else
    LODWORD(v141) = *((unsigned __int8 *)this + 31);
  result = (v135 + v141);
  *((_DWORD *)this + 99) = result;
  return result;
}

std::string *topotext::Attachment::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Attachment::MergeFrom(this, lpsrc);
}

std::string *topotext::Location::MergeFrom(topotext::Location *this, const topotext::Location *a2, uint64_t a3)
{
  std::string *v5;
  int v6;
  char v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  uint64_t v15;
  uint64_t v16;
  const std::string *v17;
  std::string *v18;
  char v19;
  std::string v20[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 6035);
    v5 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v6)
    goto LABEL_9;
  if ((*((_BYTE *)a2 + 32) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 32) & 2) == 0)
      goto LABEL_6;
LABEL_17:
    v16 = *((_QWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_QWORD *)this + 6) = v16;
    v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0)
        goto LABEL_9;
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  v15 = *((_QWORD *)a2 + 5);
  *((_DWORD *)this + 8) |= 1u;
  *((_QWORD *)this + 5) = v15;
  v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 2) != 0)
    goto LABEL_17;
LABEL_6:
  if ((v6 & 4) == 0)
    goto LABEL_7;
LABEL_18:
  v17 = (const std::string *)*((_QWORD *)a2 + 7);
  *((_DWORD *)this + 8) |= 4u;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
  v18 = (std::string *)*((_QWORD *)this + 7);
  if (v18 == (std::string *)google::protobuf::internal::empty_string_)
  {
    v18 = (std::string *)operator new();
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 7) = v18;
  }
  std::string::operator=(v18, v17);
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    v7 = *((_BYTE *)a2 + 64);
    *((_DWORD *)this + 8) |= 8u;
    *((_BYTE *)this + 64) = v7;
  }
LABEL_9:
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BDA1E2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::Media::MergeFrom(std::string *this, std::string *a2, uint64_t a3)
{
  topotext::Media *v4;
  std::string *v5;
  int v6;
  const std::string *v7;
  std::string *v8;
  const std::string *data;
  std::string *v10;
  const std::string *size;
  std::string *v12;
  const std::string *v13;
  std::string *v14;
  std::string::pointer v15;
  const std::string::value_type *v16;
  std::string::value_type *v17;
  const std::string::value_type *v18;
  int v19;
  const std::string::value_type *v20;
  std::string::size_type v21;
  char v23;
  std::string v24[2];

  v4 = (topotext::Media *)this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 6385);
    v5 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v23, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = a2[1].__r_.__value_.__s.__data_[8];
  if ((_BYTE)v6)
  {
    if ((a2[1].__r_.__value_.__s.__data_[8] & 1) != 0)
    {
      v7 = (const std::string *)a2[1].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v8 = (std::string *)*((_QWORD *)v4 + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 5) = v8;
      }
      this = std::string::operator=(v8, v7);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 2) != 0)
    {
      data = (const std::string *)a2[2].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v10 = (std::string *)*((_QWORD *)v4 + 6);
      if (v10 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 6) = v10;
      }
      this = std::string::operator=(v10, data);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 4) != 0)
    {
      size = (const std::string *)a2[2].__r_.__value_.__l.__size_;
      *((_DWORD *)v4 + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v12 = (std::string *)*((_QWORD *)v4 + 7);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v12 = (std::string *)operator new();
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        v12->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 7) = v12;
      }
      this = std::string::operator=(v12, size);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 8) != 0)
    {
      v13 = (const std::string *)a2[2].__r_.__value_.__r.__words[2];
      *((_DWORD *)v4 + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v14 = (std::string *)*((_QWORD *)v4 + 8);
      if (v14 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v14 = (std::string *)operator new();
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v4 + 8) = v14;
      }
      std::string::operator=(v14, v13);
      v6 = a2[1].__r_.__value_.__r.__words[1];
    }
    if ((v6 & 0x10) != 0)
    {
      v15 = a2[3].__r_.__value_.__l.__data_;
      *((_DWORD *)v4 + 8) |= 0x10u;
      *((_QWORD *)v4 + 9) = v15;
    }
  }
  v18 = (const std::string::value_type *)a2->__r_.__value_.__l.__size_;
  v17 = &a2->__r_.__value_.__s.__data_[8];
  v16 = v18;
  v19 = v17[23];
  if (v19 >= 0)
    v20 = v17;
  else
    v20 = v16;
  if (v19 >= 0)
    v21 = v17[23];
  else
    v21 = *((_QWORD *)v17 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v20, v21);
}

void sub_1BDA1E524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::IsInitialized(topotext::Attachment *this)
{
  return 1;
}

_QWORD *topotext::Attachment::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Attachment");
}

void topotext::Location::~Location(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CC628;
  topotext::Location::SharedDtor((topotext::Location *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  topotext::Location::~Location(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void topotext::Location::SharedDtor(topotext::Location *this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = *((_QWORD *)this + 7);
  if (v3)
    v4 = v3 == google::protobuf::internal::empty_string_;
  else
    v4 = 1;
  if (!v4)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    this = (topotext::Location *)MEMORY[0x1C3B7A848](v3, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

topotext::Location *topotext::Location::New(topotext::Location *this)
{
  topotext::Location *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::Location *)operator new();
  topotext::Location::Location(v1, v2, v3);
  return v1;
}

void sub_1BDA1E660(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C4099D76EF7);
  _Unwind_Resume(a1);
}

uint64_t topotext::Location::MergePartialFromCodedStream(topotext::Location *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  _BYTE *v9;
  BOOL v10;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  std::string *v15;
  _BYTE *v16;
  unint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  _BYTE v21[32];
  unint64_t v22[2];
  unint64_t v23;

  google::protobuf::io::StringOutputStream::StringOutputStream(v22, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21, (google::protobuf::io::ZeroCopyOutputStream *)v22);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_12:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
LABEL_48:
        v19 = 1;
        goto LABEL_49;
      }
LABEL_25:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v21, v4))goto LABEL_47;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 9)
          goto LABEL_23;
        v23 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v23))
          goto LABEL_47;
        *((_QWORD *)this + 5) = v23;
        *((_DWORD *)this + 8) |= 1u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_27:
        v23 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v23))
          goto LABEL_47;
        *((_QWORD *)this + 6) = v23;
        v11 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v11;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_31:
        *((_DWORD *)this + 8) = v11 | 4;
        if (!google::protobuf::internal::empty_string_)
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v15 = (std::string *)*((_QWORD *)this + 7);
        if (v15 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v15 = (std::string *)operator new();
          v15->__r_.__value_.__r.__words[0] = 0;
          v15->__r_.__value_.__l.__size_ = 0;
          v15->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 7) = v15;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v15))
          goto LABEL_47;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v16 >= v12 || *v16 != 32)
          continue;
        v13 = v16 + 1;
        *((_QWORD *)a2 + 1) = v13;
        goto LABEL_38;
      case 2u:
        if ((_DWORD)v7 != 17)
          goto LABEL_23;
        goto LABEL_27;
      case 3u:
        if ((_DWORD)v7 != 26)
          goto LABEL_23;
        v11 = *((_DWORD *)this + 8);
        goto LABEL_31;
      case 4u:
        if ((_DWORD)v7 != 32)
        {
LABEL_23:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
            goto LABEL_48;
          goto LABEL_25;
        }
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
LABEL_38:
        v23 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v23))
          {
LABEL_47:
            v19 = 0;
            goto LABEL_49;
          }
          v17 = v23;
          v18 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v13;
          v18 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_BYTE *)this + 64) = v17 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v18 != (unsigned __int8 *)v12 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        v19 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_49:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v22);
        return v19;
      default:
        goto LABEL_12;
    }
  }
}

void sub_1BDA1E988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Location::SerializeWithCachedSizes(topotext::Location *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, *((double *)this + 5), a3);
    v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, *((double *)this + 6), a3);
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((_QWORD *)this + 7), a2);
  if ((*((_DWORD *)this + 8) & 8) != 0)
LABEL_5:
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)4, *((unsigned __int8 *)this + 64), a2, a4);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Location::ByteSize(topotext::Location *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t result;

  v2 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    if ((v2 & 2) != 0)
      v3 = ((v2 << 31 >> 31) & 9) + 9;
    else
      v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 4) != 0)
    {
      v4 = *((_QWORD *)this + 7);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v6 = v5;
      v7 = *(_QWORD *)(v4 + 8);
      if ((v5 & 0x80u) == 0)
        v8 = *(unsigned __int8 *)(v4 + 23);
      else
        v8 = v7;
      if (v8 >= 0x80)
      {
        v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        v5 = *(unsigned __int8 *)(v4 + 23);
        v7 = *(_QWORD *)(v4 + 8);
        v2 = *((_DWORD *)this + 8);
        v6 = *(_BYTE *)(v4 + 23);
      }
      else
      {
        v9 = 1;
      }
      if (v6 < 0)
        v5 = v7;
      v3 += v9 + v5 + 1;
    }
    if ((v2 & 8) != 0)
      v2 = v3 + 2;
    else
      v2 = v3;
  }
  if (*((char *)this + 31) < 0)
    v10 = *((_QWORD *)this + 2);
  else
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  result = (v2 + v10);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Location::CheckTypeAndMergeFrom(topotext::Location *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Location::MergeFrom(this, lpsrc, v5);
}

uint64_t topotext::Location::IsInitialized(topotext::Location *this)
{
  return 1;
}

_QWORD *topotext::Location::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Location");
}

void topotext::Media::~Media(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CC6A0;
  topotext::AttachmentInfo::SharedDtor((topotext::AttachmentInfo *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  topotext::Media::~Media(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

topotext::Media *topotext::Media::New(topotext::Media *this)
{
  topotext::Media *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::Media *)operator new();
  topotext::Media::Media(v1, v2, v3);
  return v1;
}

void sub_1BDA1EC2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40DF275E33);
  _Unwind_Resume(a1);
}

uint64_t topotext::Media::MergePartialFromCodedStream(topotext::Media *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  _BYTE *v10;
  BOOL v11;
  unint64_t v12;
  char *v13;
  std::string *v14;
  _BYTE *v15;
  std::string *v16;
  _BYTE *v17;
  std::string *v18;
  _BYTE *v19;
  unint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  _BYTE v24[32];
  unint64_t v25[2];
  unint64_t v26;

  google::protobuf::io::StringOutputStream::StringOutputStream(v25, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v24, (google::protobuf::io::ZeroCopyOutputStream *)v25);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_15:
      if ((_DWORD)v7)
        v11 = (v7 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
LABEL_63:
        v22 = 1;
        goto LABEL_64;
      }
LABEL_30:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v24, v4))goto LABEL_62;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 10)
          goto LABEL_28;
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_65;
        v9 = (std::string *)*((_QWORD *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v9 = (std::string *)operator new();
          v9->__r_.__value_.__r.__words[0] = 0;
          v9->__r_.__value_.__l.__size_ = 0;
          v9->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 5) = v9;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
          goto LABEL_62;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_32:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_65;
        v14 = (std::string *)*((_QWORD *)this + 6);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v14 = (std::string *)operator new();
          v14->__r_.__value_.__r.__words[0] = 0;
          v14->__r_.__value_.__l.__size_ = 0;
          v14->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 6) = v14;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14))
          goto LABEL_62;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_39:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_65;
        v16 = (std::string *)*((_QWORD *)this + 7);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v16 = (std::string *)operator new();
          v16->__r_.__value_.__r.__words[0] = 0;
          v16->__r_.__value_.__l.__size_ = 0;
          v16->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 7) = v16;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v16))
          goto LABEL_62;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_46:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_)
LABEL_65:
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v18 = (std::string *)*((_QWORD *)this + 8);
        if (v18 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v18 = (std::string *)operator new();
          v18->__r_.__value_.__r.__words[0] = 0;
          v18->__r_.__value_.__l.__size_ = 0;
          v18->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 8) = v18;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v18))
          goto LABEL_62;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v19 >= v12 || *v19 != 40)
          continue;
        v13 = v19 + 1;
        *((_QWORD *)a2 + 1) = v13;
        goto LABEL_53;
      case 2u:
        if ((_DWORD)v7 != 18)
          goto LABEL_28;
        goto LABEL_32;
      case 3u:
        if ((_DWORD)v7 == 26)
          goto LABEL_39;
        goto LABEL_28;
      case 4u:
        if ((_DWORD)v7 == 34)
          goto LABEL_46;
        goto LABEL_28;
      case 5u:
        if ((_DWORD)v7 != 40)
        {
LABEL_28:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
            goto LABEL_63;
          goto LABEL_30;
        }
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
LABEL_53:
        v26 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v26))
          {
LABEL_62:
            v22 = 0;
            goto LABEL_64;
          }
          v20 = v26;
          v21 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v20 = *v13;
          v21 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_QWORD *)this + 9) = v20;
        *((_DWORD *)this + 8) |= 0x10u;
        if (v21 != (unsigned __int8 *)v12 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        v22 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_64:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v24);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v25);
        return v22;
      default:
        goto LABEL_15;
    }
  }
}

void sub_1BDA1F024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Media::SerializeWithCachedSizes(topotext::Media *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((_QWORD *)this + 6), a2);
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((_QWORD *)this + 7), a2);
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_12:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((_QWORD *)this + 8), a2);
  if ((*((_DWORD *)this + 8) & 0x10) != 0)
LABEL_6:
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)5, *((_QWORD *)this + 9), a2, a4);
LABEL_7:
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Media::ByteSize(topotext::Media *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  int v30;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 6);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v2 = *((_DWORD *)this + 8);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    v19 = *((_QWORD *)this + 7);
    v20 = *(unsigned __int8 *)(v19 + 23);
    v21 = v20;
    v22 = *(_QWORD *)(v19 + 8);
    if ((v20 & 0x80u) == 0)
      v23 = *(unsigned __int8 *)(v19 + 23);
    else
      v23 = v22;
    if (v23 >= 0x80)
    {
      v24 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v23);
      v20 = *(unsigned __int8 *)(v19 + 23);
      v22 = *(_QWORD *)(v19 + 8);
      v2 = *((_DWORD *)this + 8);
      v21 = *(_BYTE *)(v19 + 23);
    }
    else
    {
      v24 = 1;
    }
    if (v21 < 0)
      v20 = v22;
    v3 += v24 + v20 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0)
        goto LABEL_28;
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  v25 = *((_QWORD *)this + 8);
  v26 = *(unsigned __int8 *)(v25 + 23);
  v27 = v26;
  v28 = *(_QWORD *)(v25 + 8);
  if ((v26 & 0x80u) == 0)
    v29 = *(unsigned __int8 *)(v25 + 23);
  else
    v29 = v28;
  if (v29 >= 0x80)
  {
    v30 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v29);
    v26 = *(unsigned __int8 *)(v25 + 23);
    v28 = *(_QWORD *)(v25 + 8);
    v2 = *((_DWORD *)this + 8);
    v27 = *(_BYTE *)(v25 + 23);
  }
  else
  {
    v30 = 1;
  }
  if (v27 < 0)
    v26 = v28;
  v3 += v30 + v26 + 1;
  if ((v2 & 0x10) != 0)
LABEL_27:
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 9)) + 1;
LABEL_28:
  if (*((char *)this + 31) < 0)
    v17 = *((_QWORD *)this + 2);
  else
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Media::CheckTypeAndMergeFrom(std::string *this, std::string *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Media::MergeFrom(this, lpsrc, v5);
}

uint64_t topotext::Media::IsInitialized(topotext::Media *this)
{
  return 1;
}

_QWORD *topotext::Media::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Media");
}

std::string *topotext::PreviewImage::MergeFrom(std::string *this, std::string *a2, uint64_t a3)
{
  topotext::PreviewImage *v4;
  std::string *v5;
  int v6;
  int v7;
  const std::string::value_type *v8;
  std::string::value_type *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  int data;
  std::string::value_type v16;
  const std::string *v17;
  std::string *v18;
  const std::string *size;
  std::string *v20;
  int v21;
  std::string::value_type v22;
  std::string::pointer v23;
  char v24;
  std::string v25[2];

  v4 = (topotext::PreviewImage *)this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 6821);
    v5 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v24, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = a2[1].__r_.__value_.__s.__data_[8];
  if (!(_BYTE)v6)
    goto LABEL_13;
  if ((a2[1].__r_.__value_.__s.__data_[8] & 1) != 0)
  {
    data = (int)a2[2].__r_.__value_.__l.__data_;
    *((_DWORD *)v4 + 8) |= 1u;
    *((_DWORD *)v4 + 12) = data;
    v6 = a2[1].__r_.__value_.__r.__words[1];
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0)
        goto LABEL_7;
      goto LABEL_22;
    }
  }
  else if ((a2[1].__r_.__value_.__s.__data_[8] & 2) == 0)
  {
    goto LABEL_6;
  }
  v16 = a2[2].__r_.__value_.__s.__data_[4];
  *((_DWORD *)v4 + 8) |= 2u;
  *((_BYTE *)v4 + 52) = v16;
  v6 = a2[1].__r_.__value_.__r.__words[1];
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_22:
  v17 = (const std::string *)a2[1].__r_.__value_.__r.__words[2];
  *((_DWORD *)v4 + 8) |= 4u;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
  v18 = (std::string *)*((_QWORD *)v4 + 5);
  if (v18 == (std::string *)google::protobuf::internal::empty_string_)
  {
    v18 = (std::string *)operator new();
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)v4 + 5) = v18;
  }
  this = std::string::operator=(v18, v17);
  v6 = a2[1].__r_.__value_.__r.__words[1];
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_30;
  }
LABEL_26:
  size = (const std::string *)a2[2].__r_.__value_.__l.__size_;
  *((_DWORD *)v4 + 8) |= 8u;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
  v20 = (std::string *)*((_QWORD *)v4 + 7);
  if (v20 == (std::string *)google::protobuf::internal::empty_string_)
  {
    v20 = (std::string *)operator new();
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)v4 + 7) = v20;
  }
  std::string::operator=(v20, size);
  v6 = a2[1].__r_.__value_.__r.__words[1];
  if ((v6 & 0x10) == 0)
  {
LABEL_9:
    if ((v6 & 0x20) == 0)
      goto LABEL_10;
LABEL_31:
    v22 = a2[2].__r_.__value_.__s.__data_[5];
    *((_DWORD *)v4 + 8) |= 0x20u;
    *((_BYTE *)v4 + 53) = v22;
    v6 = a2[1].__r_.__value_.__r.__words[1];
    if ((v6 & 0x40) == 0)
    {
LABEL_11:
      if ((v6 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_30:
  v21 = a2[2].__r_.__value_.__r.__words[2];
  *((_DWORD *)v4 + 8) |= 0x10u;
  *((_DWORD *)v4 + 16) = v21;
  v6 = a2[1].__r_.__value_.__r.__words[1];
  if ((v6 & 0x20) != 0)
    goto LABEL_31;
LABEL_10:
  if ((v6 & 0x40) == 0)
    goto LABEL_11;
LABEL_32:
  v23 = a2[3].__r_.__value_.__l.__data_;
  *((_DWORD *)v4 + 8) |= 0x40u;
  *((_QWORD *)v4 + 9) = v23;
  if ((a2[1].__r_.__value_.__r.__words[1] & 0x80) != 0)
  {
LABEL_12:
    v7 = HIDWORD(a2[2].__r_.__value_.__r.__words[2]);
    *((_DWORD *)v4 + 8) |= 0x80u;
    *((_DWORD *)v4 + 17) = v7;
  }
LABEL_13:
  v10 = (const std::string::value_type *)a2->__r_.__value_.__l.__size_;
  v9 = &a2->__r_.__value_.__s.__data_[8];
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v12, v13);
}

void sub_1BDA1F57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::PreviewImage::~PreviewImage(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CC718;
  topotext::PreviewImage::SharedDtor((topotext::PreviewImage *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  topotext::PreviewImage::~PreviewImage(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void topotext::PreviewImage::SharedDtor(topotext::PreviewImage *this, uint64_t a2, uint64_t a3)
{
  topotext::PreviewImage *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = this;
  v4 = *((_QWORD *)this + 5);
  if (v4 != google::protobuf::internal::empty_string_)
  {
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      this = (topotext::PreviewImage *)MEMORY[0x1C3B7A848](v4, 0x1012C40EC159624);
      v4 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, v5, v6);
    }
    else
    {
      v4 = google::protobuf::internal::empty_string_;
    }
  }
  v7 = *((_QWORD *)v3 + 7);
  if (v7 != v4 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    this = (topotext::PreviewImage *)MEMORY[0x1C3B7A848](v7, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

topotext::PreviewImage *topotext::PreviewImage::New(topotext::PreviewImage *this)
{
  topotext::PreviewImage *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::PreviewImage *)operator new();
  topotext::PreviewImage::PreviewImage(v1, v2, v3);
  return v1;
}

void sub_1BDA1F6F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40A6778F3CLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::PreviewImage::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_BYTE *)(this + 32);
  if (v3)
  {
    *(_WORD *)(this + 52) = 0;
    *(_DWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 64) = 0;
    *(_QWORD *)(this + 72) = 0;
    if ((v3 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 40);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v5 = *(_QWORD *)(this + 56);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::PreviewImage::MergePartialFromCodedStream(topotext::PreviewImage *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  _BYTE *v10;
  char *v11;
  BOOL v12;
  unint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  std::string *v21;
  _BYTE *v22;
  std::string *v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  unsigned int v31;
  unsigned __int8 *v32;
  uint64_t v33;
  _BYTE v35[32];
  _QWORD v36[2];
  unsigned int v37[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v36, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v35, (google::protobuf::io::ZeroCopyOutputStream *)v36);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_12:
      if ((_DWORD)v7)
        v12 = (v7 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
LABEL_91:
        v33 = 1;
        goto LABEL_93;
      }
LABEL_36:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v35, v4))goto LABEL_92;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 13)
          goto LABEL_34;
        v37[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v37))
          goto LABEL_92;
        *((_DWORD *)this + 12) = v37[0];
        *((_DWORD *)this + 8) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 != 16)
          continue;
        v11 = v10 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_28:
        *(_QWORD *)v37 = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v37))
            goto LABEL_92;
          v17 = *(_QWORD *)v37;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v11;
          v18 = v11 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_BYTE *)this + 52) = v17 != 0;
        v15 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v15;
        if ((unint64_t)v18 >= v9 || *v18 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_44:
        *((_DWORD *)this + 8) = v15 | 4;
        if (!google::protobuf::internal::empty_string_)
          goto LABEL_94;
        v21 = (std::string *)*((_QWORD *)this + 5);
        if (v21 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v21 = (std::string *)operator new();
          v21->__r_.__value_.__r.__words[0] = 0;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 5) = v21;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v21))
          goto LABEL_92;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_51:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_)
LABEL_94:
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v23 = (std::string *)*((_QWORD *)this + 7);
        if (v23 == (std::string *)google::protobuf::internal::empty_string_)
        {
          v23 = (std::string *)operator new();
          v23->__r_.__value_.__r.__words[0] = 0;
          v23->__r_.__value_.__l.__size_ = 0;
          v23->__r_.__value_.__r.__words[2] = 0;
          *((_QWORD *)this + 7) = v23;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v23))
          goto LABEL_92;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v13 || *v24 != 40)
          continue;
        v14 = v24 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_58:
        v37[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))
            goto LABEL_92;
          v25 = v37[0];
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v14;
          v26 = v14 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 16) = v25;
        *((_DWORD *)this + 8) |= 0x10u;
        if ((unint64_t)v26 >= v13 || *v26 != 48)
          continue;
        v19 = v26 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_66:
        *(_QWORD *)v37 = 0;
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v37))
            goto LABEL_92;
          v27 = *(_QWORD *)v37;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v19;
          v28 = v19 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_BYTE *)this + 53) = v27 != 0;
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v28 >= v13 || *v28 != 56)
          continue;
        v20 = v28 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_74:
        *(_QWORD *)v37 = 0;
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v37))
            goto LABEL_92;
          v29 = *(_QWORD *)v37;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v29 = *v20;
          v30 = v20 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_QWORD *)this + 9) = v29;
        *((_DWORD *)this + 8) |= 0x40u;
        if ((unint64_t)v30 >= v13 || *v30 != 64)
          continue;
        v16 = v30 + 1;
        *((_QWORD *)a2 + 1) = v16;
        goto LABEL_82;
      case 2u:
        if ((_DWORD)v7 != 16)
          goto LABEL_34;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_28;
      case 3u:
        if ((_DWORD)v7 != 26)
          goto LABEL_34;
        v15 = *((_DWORD *)this + 8);
        goto LABEL_44;
      case 4u:
        if ((_DWORD)v7 == 34)
          goto LABEL_51;
        goto LABEL_34;
      case 5u:
        if ((_DWORD)v7 != 40)
          goto LABEL_34;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 6u:
        if ((_DWORD)v7 != 48)
          goto LABEL_34;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_66;
      case 7u:
        if ((_DWORD)v7 != 56)
          goto LABEL_34;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_74;
      case 8u:
        if ((_DWORD)v7 != 64)
        {
LABEL_34:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
            goto LABEL_91;
          goto LABEL_36;
        }
        v16 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
LABEL_82:
        v37[0] = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))
          {
LABEL_92:
            v33 = 0;
            goto LABEL_93;
          }
          v31 = v37[0];
          v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v31 = *v16;
          v32 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 17) = v31;
        *((_DWORD *)this + 8) |= 0x80u;
        if (v32 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        v33 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_93:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v35);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v36);
        return v33;
      default:
        goto LABEL_12;
    }
  }
}

void sub_1BDA1FD04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::PreviewImage::SerializeWithCachedSizes(topotext::PreviewImage *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 12), a3);
    v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 52), a2, a4);
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((_QWORD *)this + 5), a2);
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(4, *((_QWORD *)this + 7), a2);
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)5, *((_DWORD *)this + 16), a2, a4);
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((unsigned __int8 *)this + 53), a2, a4);
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
LABEL_18:
  google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)7, *((_QWORD *)this + 9), a2, a4);
  if ((*((_DWORD *)this + 8) & 0x80) != 0)
LABEL_9:
    google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)8, *((_DWORD *)this + 17), a2, a4);
LABEL_10:
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::PreviewImage::ByteSize(topotext::PreviewImage *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  google::protobuf::io::CodedOutputStream *v16;
  int v17;
  google::protobuf::io::CodedOutputStream *v18;
  int v19;
  uint64_t v20;
  uint64_t result;

  v2 = *((unsigned __int8 *)this + 32);
  if (!*((_BYTE *)this + 32))
  {
    v3 = 0;
    goto LABEL_42;
  }
  v3 = (v2 << 31 >> 31) & 5 | v2 & 2;
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_4;
LABEL_16:
    v10 = *((_QWORD *)this + 7);
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = v11;
    v13 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v14 = *(unsigned __int8 *)(v10 + 23);
    else
      v14 = v13;
    if (v14 >= 0x80)
    {
      v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v14);
      v11 = *(unsigned __int8 *)(v10 + 23);
      v13 = *(_QWORD *)(v10 + 8);
      v2 = *((_DWORD *)this + 8);
      v12 = *(_BYTE *)(v10 + 23);
    }
    else
    {
      v15 = 1;
    }
    if (v12 < 0)
      v11 = v13;
    v3 += v15 + v11 + 1;
    if ((v2 & 0x10) == 0)
      goto LABEL_31;
    goto LABEL_25;
  }
  v4 = *((_QWORD *)this + 5);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v2 = *((_DWORD *)this + 8);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 1;
  }
  if (v6 < 0)
    v5 = v7;
  v3 += v9 + v5 + 1;
  if ((v2 & 8) != 0)
    goto LABEL_16;
LABEL_4:
  if ((v2 & 0x10) != 0)
  {
LABEL_25:
    v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v16 & 0x80000000) != 0)
    {
      v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v17 = 2;
    }
    v3 += v17;
  }
LABEL_31:
  if ((v2 & 0x20) != 0)
    v3 += 2;
  if ((v2 & 0x40) != 0)
  {
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 9)) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  if ((v2 & 0x80) != 0)
  {
    v18 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v18 & 0x80000000) != 0)
    {
      v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else
    {
      v19 = 2;
    }
    v3 += v19;
  }
LABEL_42:
  if (*((char *)this + 31) < 0)
    v20 = *((_QWORD *)this + 2);
  else
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  result = (v3 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::PreviewImage::CheckTypeAndMergeFrom(std::string *this, std::string *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::PreviewImage::MergeFrom(this, lpsrc, v5);
}

uint64_t topotext::PreviewImage::IsInitialized(topotext::PreviewImage *this)
{
  return 1;
}

_QWORD *topotext::PreviewImage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.PreviewImage");
}

void topotext::Todo::~Todo(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CC790;
  topotext::VectorTimestamp_Clock::SharedDtor((topotext::VectorTimestamp_Clock *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  topotext::Todo::~Todo(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

topotext::Todo *topotext::Todo::New(topotext::Todo *this)
{
  topotext::Todo *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::Todo *)operator new();
  topotext::Todo::Todo(v1, v2, v3);
  return v1;
}

void sub_1BDA200FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::Todo::MergePartialFromCodedStream(topotext::Todo *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  BOOL v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  _BYTE v18[32];
  unint64_t v19[2];
  unint64_t v20;

  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_16;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if ((_DWORD)v7 == 16)
        {
          v12 = (char *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_27;
        }
LABEL_23:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_36;
        goto LABEL_20;
      }
      if (v7 >> 3 == 1)
        break;
LABEL_16:
      if ((_DWORD)v7)
        v13 = (v7 & 7) == 4;
      else
        v13 = 1;
      if (v13)
      {
LABEL_36:
        v16 = 1;
        goto LABEL_38;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_37;
    }
    if ((_DWORD)v7 != 10)
      goto LABEL_23;
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v9 = (std::string *)*((_QWORD *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__r.__words[0] = 0;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 5) = v9;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
      break;
    v11 = (_BYTE *)*((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
    if ((unint64_t)v11 < v10 && *v11 == 16)
    {
      v12 = v11 + 1;
      *((_QWORD *)a2 + 1) = v12;
LABEL_27:
      v20 = 0;
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20))
          break;
        v14 = v20;
        v15 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v14 = *v12;
        v15 = (unsigned __int8 *)(v12 + 1);
        *((_QWORD *)a2 + 1) = v15;
      }
      *((_BYTE *)this + 48) = v14 != 0;
      *((_DWORD *)this + 8) |= 2u;
      if (v15 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v16 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
  }
LABEL_37:
  v16 = 0;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1BDA20368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Todo::SerializeWithCachedSizes(topotext::Todo *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 48), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Todo::ByteSize(topotext::Todo *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  v2 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    if ((v2 & 1) != 0)
    {
      v4 = *((_QWORD *)this + 5);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v6 = v5;
      v7 = *(_QWORD *)(v4 + 8);
      if ((v5 & 0x80u) == 0)
        v8 = *(unsigned __int8 *)(v4 + 23);
      else
        v8 = v7;
      if (v8 >= 0x80)
      {
        v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        v5 = *(unsigned __int8 *)(v4 + 23);
        v7 = *(_QWORD *)(v4 + 8);
        v9 = v10 + 1;
        v2 = *((_DWORD *)this + 8);
        v6 = *(_BYTE *)(v4 + 23);
      }
      else
      {
        v9 = 2;
      }
      if (v6 < 0)
        v5 = v7;
      v3 = v9 + v5;
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v2 = v3 + 2;
    else
      v2 = v3;
  }
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Todo::CheckTypeAndMergeFrom(topotext::Todo *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Todo::MergeFrom(this, lpsrc, v5);
}

uint64_t topotext::Todo::IsInitialized(topotext::Todo *this)
{
  return 1;
}

_QWORD *topotext::Todo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Todo");
}

double topotext::Color::New(topotext::Color *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CC808;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t topotext::Color::SerializeWithCachedSizes(topotext::Color *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5;
  char *v6;
  uint64_t v7;

  v5 = *((_DWORD *)this + 8);
  if ((v5 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 8) != 0)
LABEL_5:
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::Color::ByteSize(topotext::Color *this)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *((unsigned __int8 *)this + 32);
  v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0)
    v2 += 5;
  if ((v1 & 4) != 0)
    v2 += 5;
  if ((v1 & 8) != 0)
    v2 += 5;
  if (*((_BYTE *)this + 32))
    v3 = v2;
  else
    v3 = 0;
  if (*((char *)this + 31) < 0)
    v4 = *((_QWORD *)this + 2);
  else
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *topotext::Color::CheckTypeAndMergeFrom(topotext::Color *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::Color::MergeFrom(this, lpsrc);
}

uint64_t topotext::Color::IsInitialized(topotext::Color *this)
{
  return 1;
}

_QWORD *topotext::Color::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Color");
}

std::string *topotext::BoxedValue::MergeFrom(topotext::BoxedValue *this, const topotext::BoxedValue *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  const std::string *v8;
  int v9;
  std::string *v10;
  const std::string::value_type *v11;
  char *v12;
  const std::string::value_type *v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 7778);
    v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 1:
      v5 = *((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) == 1)
        goto LABEL_9;
      topotext::BoxedValue::clear_contents((uint64_t)this);
      v6 = 1;
      goto LABEL_8;
    case 2:
      v5 = *((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) != 2)
      {
        topotext::BoxedValue::clear_contents((uint64_t)this);
        v6 = 2;
LABEL_8:
        *((_DWORD *)this + 12) = v6;
      }
LABEL_9:
      *((_QWORD *)this + 5) = v5;
      goto LABEL_24;
    case 3:
      v7 = *((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) != 3)
      {
        topotext::BoxedValue::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 3;
      }
      *((_QWORD *)this + 5) = v7;
      goto LABEL_24;
    case 4:
      v8 = (const std::string *)*((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) == 4)
        goto LABEL_20;
      topotext::BoxedValue::clear_contents((uint64_t)this);
      v9 = 4;
      goto LABEL_22;
    case 5:
      v8 = (const std::string *)*((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) == 5)
        goto LABEL_20;
      topotext::BoxedValue::clear_contents((uint64_t)this);
      v9 = 5;
      goto LABEL_22;
    case 6:
      v8 = (const std::string *)*((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) == 6)
        goto LABEL_20;
      topotext::BoxedValue::clear_contents((uint64_t)this);
      v9 = 6;
      goto LABEL_22;
    case 7:
      v8 = (const std::string *)*((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) == 7)
      {
LABEL_20:
        v10 = (std::string *)*((_QWORD *)this + 5);
      }
      else
      {
        topotext::BoxedValue::clear_contents((uint64_t)this);
        v9 = 7;
LABEL_22:
        *((_DWORD *)this + 12) = v9;
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 5) = v10;
      }
      std::string::operator=(v10, v8);
LABEL_24:
      v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      v12 = (char *)a2 + 8;
      v11 = v13;
      v14 = v12[23];
      if (v14 >= 0)
        v15 = v12;
      else
        v15 = v11;
      if (v14 >= 0)
        v16 = v12[23];
      else
        v16 = *((_QWORD *)v12 + 1);
      return std::string::append((std::string *)((char *)this + 8), v15, v16);
    default:
      goto LABEL_24;
  }
}

void sub_1BDA208AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::BoxedValue::~BoxedValue(topotext::BoxedValue *this)
{
  topotext::BoxedValue *v1;

  v1 = this;
  *(_QWORD *)this = &off_1E76CC880;
  if (*((_DWORD *)this + 12))
    this = (topotext::BoxedValue *)topotext::BoxedValue::clear_contents((uint64_t)this);
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if (*((char *)v1 + 31) < 0)
    operator delete(*((void **)v1 + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v1);
}

{
  topotext::BoxedValue::~BoxedValue(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t topotext::BoxedValue::clear_contents(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = this;
  switch(*(_DWORD *)(this + 48))
  {
    case 4:
    case 5:
    case 6:
    case 7:
      v2 = *(_QWORD *)(this + 40);
      if (v2)
      {
        if (*(char *)(v2 + 23) < 0)
          operator delete(*(void **)v2);
        this = MEMORY[0x1C3B7A848](v2, 0x1012C40EC159624);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

topotext::BoxedValue *topotext::BoxedValue::New(topotext::BoxedValue *this)
{
  topotext::BoxedValue *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (topotext::BoxedValue *)operator new();
  topotext::BoxedValue::BoxedValue(v1, v2, v3);
  return v1;
}

void sub_1BDA209F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

uint64_t topotext::BoxedValue::Clear(topotext::BoxedValue *this)
{
  uint64_t result;

  result = topotext::BoxedValue::clear_contents((uint64_t)this);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((_BYTE **)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
  }
  else
  {
    *((_BYTE *)this + 8) = 0;
    *((_BYTE *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::BoxedValue::MergePartialFromCodedStream(topotext::BoxedValue *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  _QWORD *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  _BYTE *v13;
  BOOL v14;
  std::string *v15;
  unint64_t v16;
  char *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  std::string *v21;
  _BYTE *v22;
  std::string *v23;
  _BYTE *v24;
  std::string *v25;
  uint64_t v26;
  _BYTE v28[32];
  unint64_t v29[2];
  unint64_t v30;

  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  v5 = (_QWORD *)((char *)this + 40);
  while (2)
  {
    while (1)
    {
      v6 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 < *((_QWORD *)a2 + 2) && (char)*v6 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_11:
      if ((_DWORD)v8)
        v14 = (v8 & 7) == 4;
      else
        v14 = 1;
      if (v14)
      {
LABEL_78:
        v26 = 1;
        goto LABEL_79;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_77;
    }
    v7 = *v6;
    *((_DWORD *)a2 + 8) = v7;
    *((_QWORD *)a2 + 1) = v6 + 1;
    v8 = v7 | 0x100000000;
LABEL_6:
    switch(v8 >> 3)
    {
      case 1u:
        if ((_DWORD)v8 != 8)
          goto LABEL_29;
        topotext::BoxedValue::clear_contents((uint64_t)this);
        v30 = 0;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v30))
            goto LABEL_77;
          v12 = v30;
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v11;
          v13 = v11 + 1;
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_QWORD *)this + 5) = -(uint64_t)(v12 & 1) ^ (v12 >> 1);
        *((_DWORD *)this + 12) = 1;
        if ((unint64_t)v13 >= v10 || *v13 != 16)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_38:
        topotext::BoxedValue::clear_contents((uint64_t)this);
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_77;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v17;
          v18 = v17 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 12) = 2;
        if ((unint64_t)v18 >= v16 || *v18 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_46:
        topotext::BoxedValue::clear_contents((uint64_t)this);
        v30 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v30))
          goto LABEL_77;
        *((_QWORD *)this + 5) = v30;
        *((_DWORD *)this + 12) = 3;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_50:
        topotext::BoxedValue::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 4;
        v15 = (std::string *)operator new();
        v15->__r_.__value_.__r.__words[0] = 0;
        v15->__r_.__value_.__l.__size_ = 0;
        v15->__r_.__value_.__r.__words[2] = 0;
        *v5 = v15;
LABEL_51:
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v15))
          goto LABEL_77;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_55:
        if (*((_DWORD *)this + 12) == 5)
        {
          v21 = (std::string *)*v5;
        }
        else
        {
          topotext::BoxedValue::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 5;
          v21 = (std::string *)operator new();
          v21->__r_.__value_.__r.__words[0] = 0;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          *v5 = v21;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v21))
          goto LABEL_77;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_62:
        if (*((_DWORD *)this + 12) == 6)
        {
          v23 = (std::string *)*v5;
        }
        else
        {
          topotext::BoxedValue::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 6;
          v23 = (std::string *)operator new();
          v23->__r_.__value_.__r.__words[0] = 0;
          v23->__r_.__value_.__l.__size_ = 0;
          v23->__r_.__value_.__r.__words[2] = 0;
          *v5 = v23;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v23))
          goto LABEL_77;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_69:
        if (*((_DWORD *)this + 12) == 7)
        {
          v25 = (std::string *)*v5;
        }
        else
        {
          topotext::BoxedValue::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 7;
          v25 = (std::string *)operator new();
          v25->__r_.__value_.__r.__words[0] = 0;
          v25->__r_.__value_.__l.__size_ = 0;
          v25->__r_.__value_.__r.__words[2] = 0;
          *v5 = v25;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v25))
        {
LABEL_77:
          v26 = 0;
          goto LABEL_79;
        }
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v26 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_79:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
        return v26;
      case 2u:
        if ((_DWORD)v8 == 16)
          goto LABEL_38;
        goto LABEL_29;
      case 3u:
        if ((_DWORD)v8 == 25)
          goto LABEL_46;
        goto LABEL_29;
      case 4u:
        if ((_DWORD)v8 != 34)
          goto LABEL_29;
        if (*((_DWORD *)this + 12) != 4)
          goto LABEL_50;
        v15 = (std::string *)*v5;
        goto LABEL_51;
      case 5u:
        if ((_DWORD)v8 == 42)
          goto LABEL_55;
        goto LABEL_29;
      case 6u:
        if ((_DWORD)v8 == 50)
          goto LABEL_62;
        goto LABEL_29;
      case 7u:
        if ((_DWORD)v8 == 58)
          goto LABEL_69;
LABEL_29:
        if ((_DWORD)v8 && (v8 & 7) != 4)
          goto LABEL_31;
        goto LABEL_78;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1BDA20F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::BoxedValue::SerializeWithCachedSizes(topotext::BoxedValue *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 12);
  if (v6 == 1)
  {
    google::protobuf::internal::WireFormatLite::WriteSInt64((google::protobuf::internal::WireFormatLite *)1, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 2)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 3)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, *((double *)this + 5), a3);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 4)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 5)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(5, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 6)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(6, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 7)
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(7, *((_QWORD *)this + 5), a2);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::BoxedValue::ByteSize(topotext::BoxedValue *this)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;

  switch(*((_DWORD *)this + 12))
  {
    case 1:
      v10 = (2 * *((_QWORD *)this + 5)) ^ (*((uint64_t *)this + 5) >> 63);
      goto LABEL_14;
    case 2:
      v10 = *((_QWORD *)this + 5);
LABEL_14:
      v9 = google::protobuf::io::CodedOutputStream::VarintSize64(v10) + 1;
      break;
    case 3:
      v9 = 9;
      break;
    case 4:
    case 5:
    case 6:
    case 7:
      v2 = *((_QWORD *)this + 5);
      v3 = *(unsigned __int8 *)(v2 + 23);
      v4 = v3;
      v5 = *(_QWORD *)(v2 + 8);
      if ((v3 & 0x80u) == 0)
        v6 = *(unsigned __int8 *)(v2 + 23);
      else
        v6 = v5;
      if (v6 >= 0x80)
      {
        v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v6);
        v3 = *(unsigned __int8 *)(v2 + 23);
        v5 = *(_QWORD *)(v2 + 8);
        v7 = v8 + 1;
        v4 = *(_BYTE *)(v2 + 23);
      }
      else
      {
        v7 = 2;
      }
      if (v4 < 0)
        v3 = v5;
      v9 = v7 + v3;
      break;
    default:
      v9 = 0;
      break;
  }
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v9 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::BoxedValue::CheckTypeAndMergeFrom(topotext::BoxedValue *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::BoxedValue::MergeFrom(this, lpsrc);
}

uint64_t topotext::BoxedValue::IsInitialized(topotext::BoxedValue *this)
{
  return 1;
}

_QWORD *topotext::BoxedValue::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.BoxedValue");
}

std::string *topotext::WallClockMergeableValue::MergeFrom(topotext::WallClockMergeableValue *this, const topotext::WallClockMergeableValue *a2)
{
  topotext::WallClockMergeableValue *v3;
  std::string *v4;
  int v5;
  uint64_t v6;
  topotext::BoxedValue *v7;
  uint64_t v8;
  uint64_t v9;
  const topotext::BoxedValue *v10;
  const std::string::value_type *v11;
  char *v12;
  const std::string::value_type *v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 8036);
    v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 5);
      *((_DWORD *)v3 + 8) |= 1u;
      *((_QWORD *)v3 + 5) = v6;
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      v7 = (topotext::BoxedValue *)*((_QWORD *)v3 + 6);
      if (!v7)
      {
        v7 = (topotext::BoxedValue *)operator new();
        this = topotext::BoxedValue::BoxedValue(v7, v8, v9);
        *((_QWORD *)v3 + 6) = v7;
      }
      v10 = (const topotext::BoxedValue *)*((_QWORD *)a2 + 6);
      if (!v10)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        v10 = *(const topotext::BoxedValue **)(topotext::WallClockMergeableValue::default_instance_ + 48);
      }
      topotext::BoxedValue::MergeFrom(v7, v10);
    }
  }
  v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v12 = (char *)a2 + 8;
  v11 = v13;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v15, v16);
}

void sub_1BDA21280(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void topotext::WallClockMergeableValue::~WallClockMergeableValue(void **this)
{
  void *v2;

  *this = &off_1E76CC8F8;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if ((void **)topotext::WallClockMergeableValue::default_instance_ != this)
  {
    v2 = this[6];
    if (v2)
      (*(void (**)(void *))(*(_QWORD *)v2 + 8))(v2);
  }
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  topotext::WallClockMergeableValue::~WallClockMergeableValue(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t topotext::WallClockMergeableValue::default_instance(topotext::WallClockMergeableValue *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  return topotext::WallClockMergeableValue::default_instance_;
}

double topotext::WallClockMergeableValue::New(topotext::WallClockMergeableValue *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CC8F8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t topotext::WallClockMergeableValue::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 48);
      if (v3)
      {
        this = topotext::BoxedValue::clear_contents(*(_QWORD *)(this + 48));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t topotext::WallClockMergeableValue::MergePartialFromCodedStream(topotext::WallClockMergeableValue *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  int v9;
  _BYTE *v10;
  BOOL v11;
  topotext::BoxedValue *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t v22;
  _BYTE v24[32];
  _QWORD v25[2];
  unsigned int v26[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v25, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v24, (google::protobuf::io::ZeroCopyOutputStream *)v25);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_13;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2)
        break;
      if ((_DWORD)v7 != 18)
        goto LABEL_20;
      v9 = *((_DWORD *)this + 8);
LABEL_24:
      *((_DWORD *)this + 8) = v9 | 2;
      v12 = (topotext::BoxedValue *)*((_QWORD *)this + 6);
      if (!v12)
      {
        v12 = (topotext::BoxedValue *)operator new();
        topotext::BoxedValue::BoxedValue(v12, v13, v14);
        *((_QWORD *)this + 6) = v12;
      }
      v26[0] = 0;
      v15 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26))
          goto LABEL_39;
      }
      else
      {
        v26[0] = *v15;
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      v16 = *((_DWORD *)a2 + 14);
      v17 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v16 + 1;
      if (v16 >= v17
        || (v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v26[0]),
            !topotext::BoxedValue::MergePartialFromCodedStream(v12, a2))
        || !*((_BYTE *)a2 + 36))
      {
LABEL_39:
        v22 = 0;
        goto LABEL_41;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v18);
      v19 = *((_DWORD *)a2 + 14);
      v20 = __OFSUB__(v19, 1);
      v21 = v19 - 1;
      if (v21 < 0 == v20)
        *((_DWORD *)a2 + 14) = v21;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v22 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_41;
      }
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 9)
    {
      *(_QWORD *)v26 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v26))
        goto LABEL_39;
      *((_QWORD *)this + 5) = *(_QWORD *)v26;
      v9 = *((_DWORD *)this + 8) | 1;
      *((_DWORD *)this + 8) = v9;
      v10 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 18)
      {
        *((_QWORD *)a2 + 1) = v10 + 1;
        goto LABEL_24;
      }
    }
    else
    {
LABEL_20:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_40;
LABEL_17:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v24, v4))goto LABEL_39;
    }
  }
LABEL_13:
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_17;
LABEL_40:
  v22 = 1;
LABEL_41:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v24);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v25);
  return v22;
}

void sub_1BDA21698(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t topotext::WallClockMergeableValue::SerializeWithCachedSizes(topotext::WallClockMergeableValue *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  topotext::WallClockMergeableValue *v4;
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = this;
  v5 = *((_DWORD *)this + 8);
  if ((v5 & 1) != 0)
  {
    this = (topotext::WallClockMergeableValue *)google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, *((double *)this + 5), a3);
    v5 = *((_DWORD *)v4 + 8);
  }
  if ((v5 & 2) != 0)
  {
    v6 = *((_QWORD *)v4 + 6);
    if (!v6)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      v6 = *(_QWORD *)(topotext::WallClockMergeableValue::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v4 + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)v4 + 1);
    v8 = *((_QWORD *)v4 + 2);
  }
  else
  {
    v7 = (char *)v4 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v4 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::WallClockMergeableValue::ByteSize(topotext::WallClockMergeableValue *this)
{
  int v2;
  int v3;
  topotext::BoxedValue *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t result;

  v2 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      v4 = (topotext::BoxedValue *)*((_QWORD *)this + 6);
      if (!v4)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(0);
        v4 = *(topotext::BoxedValue **)(topotext::WallClockMergeableValue::default_instance_ + 48);
      }
      v5 = (google::protobuf::io::CodedOutputStream *)topotext::BoxedValue::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 += v6 + v7 + 1;
    }
  }
  else
  {
    v3 = 0;
  }
  if (*((char *)this + 31) < 0)
    v8 = *((_QWORD *)this + 2);
  else
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  result = (v3 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::WallClockMergeableValue::CheckTypeAndMergeFrom(topotext::WallClockMergeableValue *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return topotext::WallClockMergeableValue::MergeFrom(this, lpsrc);
}

uint64_t topotext::WallClockMergeableValue::IsInitialized(topotext::WallClockMergeableValue *this)
{
  return 1;
}

_QWORD *topotext::WallClockMergeableValue::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.WallClockMergeableValue");
}

uint64_t topotext::String::GetCachedSize(topotext::String *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::GetCachedSize(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp_Clock::GetCachedSize(topotext::VectorTimestamp_Clock *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp::GetCachedSize(topotext::VectorTimestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::CharID::GetCachedSize(topotext::CharID *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Substring::GetCachedSize(topotext::Substring *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Selection_Range::GetCachedSize(topotext::Selection_Range *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Selection::GetCachedSize(topotext::Selection *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::AttributeRun::GetCachedSize(topotext::AttributeRun *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Font::GetCachedSize(topotext::Font *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::ParagraphStyle::GetCachedSize(topotext::ParagraphStyle *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::AttachmentInfo::GetCachedSize(topotext::AttachmentInfo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Attachment::GetCachedSize(topotext::Attachment *this)
{
  return *((unsigned int *)this + 99);
}

uint64_t topotext::Location::GetCachedSize(topotext::Location *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Media::GetCachedSize(topotext::Media *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::PreviewImage::GetCachedSize(topotext::PreviewImage *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Todo::GetCachedSize(topotext::Todo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Color::GetCachedSize(topotext::Color *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::BoxedValue::GetCachedSize(topotext::BoxedValue *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::WallClockMergeableValue::GetCachedSize(topotext::WallClockMergeableValue *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (*(int *)(result + 8) >= 1)
  {
    v1 = 0;
    do
    {
      v2 = *(_QWORD *)(*(_QWORD *)result + 8 * v1);
      if (*(char *)(v2 + 23) < 0)
      {
        **(_BYTE **)v2 = 0;
        *(_QWORD *)(v2 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v2 = 0;
        *(_BYTE *)(v2 + 23) = 0;
      }
      ++v1;
    }
    while (v1 < *(int *)(result + 8));
  }
  *(_DWORD *)(result + 8) = 0;
  return result;
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const topotext::Substring *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const topotext::Substring *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76CC268;
        *(_QWORD *)(v11 + 64) = 0;
        *(_QWORD *)(v11 + 72) = 0;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_QWORD *)(v11 + 53) = 0;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = topotext::Substring::MergeFrom((topotext::Substring *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDA21AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  uint64_t v7;
  const topotext::AttributeRun *v8;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  topotext::AttributeRun *v12;
  int32x2_t v13;
  int32x2_t v14;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v8 = (const topotext::AttributeRun *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)a2, v6);
      v9 = this[1].i32[1];
      v10 = this[1].i32[0];
      if ((int)v10 >= v9)
      {
        if (v9 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v9 + 1);
        v12 = google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New();
        v13 = *this;
        v14 = this[1];
        this[1] = vadd_s32(v14, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
      }
      else
      {
        v11 = *this;
        this[1].i32[0] = v10 + 1;
        v12 = *(topotext::AttributeRun **)(*(_QWORD *)&v11 + 8 * v10);
      }
      result = topotext::AttributeRun::MergeFrom(v12, v8, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDA21BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  int32x2_t *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  int32x2_t *v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (int32x2_t *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = (int32x2_t *)google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(int32x2_t **)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = topotext::Attachment::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDA21D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const topotext::VectorTimestamp_Clock_ReplicaClock *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const topotext::VectorTimestamp_Clock_ReplicaClock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76CC088;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_QWORD *)(v11 + 40) = 0;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom((topotext::VectorTimestamp_Clock_ReplicaClock *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDA21EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  int32x2_t *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  int32x2_t *v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (int32x2_t *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = (int32x2_t *)google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New();
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(int32x2_t **)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = topotext::VectorTimestamp_Clock::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDA21FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(int *a1)
{
  uint64_t v2;
  uint64_t result;

  if (a1[3] >= 1)
  {
    v2 = 0;
    do
      google::protobuf::internal::StringTypeHandlerBase::Delete(*(_QWORD *)(*(_QWORD *)a1 + 8 * v2++));
    while (v2 < a1[3]);
  }
  result = *(_QWORD *)a1;
  if (*(_QWORD *)a1)
    JUMPOUT(0x1C3B7A830);
  return result;
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  google::protobuf::internal::StringTypeHandlerBase *v7;
  const std::string *v8;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  std::string *v12;
  int32x2_t v13;
  int32x2_t v14;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (google::protobuf::internal::StringTypeHandlerBase *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2, v6);
      v8 = (const std::string *)v7;
      v9 = this[1].i32[1];
      v10 = this[1].i32[0];
      if ((int)v10 >= v9)
      {
        if (v9 == this[2].i32[0])
          v7 = (google::protobuf::internal::StringTypeHandlerBase *)google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v9 + 1);
        v12 = (std::string *)google::protobuf::internal::StringTypeHandlerBase::New(v7);
        v13 = *this;
        v14 = this[1];
        this[1] = vadd_s32(v14, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
      }
      else
      {
        v11 = *this;
        this[1].i32[0] = v10 + 1;
        v12 = *(std::string **)(*(_QWORD *)&v11 + 8 * v10);
      }
      result = std::string::operator=(v12, v8);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDA22188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const topotext::Selection_Range *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const topotext::Selection_Range *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76CC2E0;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = topotext::Selection_Range::MergeFrom((topotext::Selection_Range *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDA222FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  uint64_t v7;
  std::string *v8;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  std::string *v12;
  int32x2_t v13;
  int32x2_t v14;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v8 = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)a2, v6);
      v9 = this[1].i32[1];
      v10 = this[1].i32[0];
      if ((int)v10 >= v9)
      {
        if (v9 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v9 + 1);
        v12 = (std::string *)google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New();
        v13 = *this;
        v14 = this[1];
        this[1] = vadd_s32(v14, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
      }
      else
      {
        v11 = *this;
        this[1].i32[0] = v10 + 1;
        v12 = *(std::string **)(*(_QWORD *)&v11 + 8 * v10);
      }
      result = topotext::PreviewImage::MergeFrom(v12, v8, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDA22438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromICFoldersFilterInclusionType(uint64_t a1)
{
  if (a1)
    return CFSTR("Exclude");
  else
    return CFSTR("Include");
}

void sub_1BDA2298C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA23058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA233CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1BDA234F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  uint64_t v11;

  MEMORY[0x1C3B7A848](v11, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BDA235D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA236CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1BDA23C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void std::vector<ICDrawingOutputPoint>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 6)
  {
    if (a2 >> 58)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<ICDrawingOutputPoint>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFC0];
    v9 = &v6[64 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        v13 = *((_OWORD *)v10 - 4);
        v14 = *((_OWORD *)v10 - 3);
        v15 = *((_OWORD *)v10 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v10 - 2);
        *((_OWORD *)v12 - 1) = v15;
        *((_OWORD *)v12 - 4) = v13;
        *((_OWORD *)v12 - 3) = v14;
        v12 -= 64;
        v10 -= 64;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1BDA24648(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  MEMORY[0x1C3B7A848](v2, 0x1093C40AE78755BLL);

  _Unwind_Resume(a1);
}

void sub_1BDA24890(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA24A00(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  MEMORY[0x1C3B7A848](v2, 0x1093C409A2F408ALL);

  _Unwind_Resume(a1);
}

drawing::Point *google::protobuf::internal::GenericTypeHandler<drawing::Point>::New()
{
  drawing::Point *v0;

  v0 = (drawing::Point *)operator new();
  drawing::Point::Point(v0);
  return v0;
}

void sub_1BDA24A9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C40AE78755BLL);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<ICDrawingOutputPoint>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 58)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(a2 << 6);
}

void sub_1BDA24B58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA24D00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  MEMORY[0x1C3B7A848](v3, 0x10B3C400074EEDFLL);

  _Unwind_Resume(a1);
}

id ICNewLegacyContext()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0D629F0]), "initWithPrivateQueue");
}

void sub_1BDA259B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA2780C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA27CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1BDA28660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19)
{
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1BDA28970(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28AE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28B68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28C60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28D1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28D80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28E20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28EBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28F58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA28FF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA29090(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA29148(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA29220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1BDA2951C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA29654(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BDA29904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BDA299DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1BDA2CDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA2E250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA2E524(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA2E5D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x1093C405ACC521ELL);

  _Unwind_Resume(a1);
}

void sub_1BDA2E694(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA2E744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA2E7DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA2E864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA2E938(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA2E9BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA2EA2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA2EACC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA2EB40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA2EBFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA2EC6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA2ECC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA2ED68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA2EE04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromFallbackAssetType(uint64_t a1)
{
  if (a1)
    return CFSTR("PDF");
  else
    return CFSTR("image");
}

void sub_1BDA2F5B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA3058C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj, uint64_t a13, char a14)
{
  _Block_object_dispose(&a14, 8);
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1BDA306D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA307DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ProofReaderLibrary()
{
  uint64_t v0;
  void *v2;

  if (!ProofReaderLibraryCore_frameworkLibrary)
    ProofReaderLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = ProofReaderLibraryCore_frameworkLibrary;
  if (!ProofReaderLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

Class __getNLTokenizerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!NaturalLanguageLibraryCore_frameworkLibrary_0)
  {
    NaturalLanguageLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    if (!NaturalLanguageLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("NLTokenizer");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getNLTokenizerClass_block_invoke_cold_1();
    free(v3);
  }
  getNLTokenizerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

ICParticipantUpdater *__getAppleSpellClass_block_invoke(uint64_t a1)
{
  ICParticipantUpdater *result;
  ICParticipantUpdater *v3;
  SEL v4;
  id v5;

  ProofReaderLibrary();
  result = (ICParticipantUpdater *)objc_getClass("AppleSpell");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getAppleSpellClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (ICParticipantUpdater *)__getAppleSpellClass_block_invoke_cold_1();
    return -[ICParticipantUpdater initWithManagedObjectContext:](v3, v4, v5);
  }
  return result;
}

void sub_1BDA31868(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA3197C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BDA31A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BDA31B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA31C98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BDA31E10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA31F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x10B3C406C843DA2);

  _Unwind_Resume(a1);
}

void sub_1BDA3505C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA35238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA37778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA38CBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA38D60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA38E3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BDA38EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA38F84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BDA39060(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA391A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA39234(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA3929C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA39364(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA394F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA39650(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA396D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA39784(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA39844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDA398BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1BDA39988(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA39A08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA39A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA39BFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA39DDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA3B630(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1BDA3BF80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA3C864(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA3C8E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA3CB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  void *v5;
  void *v6;
  uint64_t v7;
  va_list va;

  va_start(va, a5);
  MEMORY[0x1C3B7A848](v7, 0x10B3C400074EEDFLL);
  peernetworking::PeerNetworkMessage::~PeerNetworkMessage((peernetworking::PeerNetworkMessage *)va);

  _Unwind_Resume(a1);
}

void sub_1BDA3CE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  va_list va;

  va_start(va, a3);
  MEMORY[0x1C3B7A848](v6, 0x1093C40A258B440);

  peernetworking::PeerNetworkMessage::~PeerNetworkMessage((peernetworking::PeerNetworkMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1BDA3D244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  va_list va;

  va_start(va, a3);
  MEMORY[0x1C3B7A848](v6, 0x10B3C40CCCF3E6ELL);

  peernetworking::PeerNetworkMessage::~PeerNetworkMessage((peernetworking::PeerNetworkMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1BDA3D3F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA3D4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  MEMORY[0x1C3B7A848](v9, 0x1093C4057897759);
  peernetworking::PeerNetworkMessage::~PeerNetworkMessage((peernetworking::PeerNetworkMessage *)&a9);
  _Unwind_Resume(a1);
}

void sub_1BDA3D8F0()
{
  void *v0;
  void *v1;
  void *v2;

  objc_end_catch();
  JUMPOUT(0x1BDA3D930);
}

void sub_1BDA3D914()
{
  void *v0;
  void *v1;
  void *v2;

  JUMPOUT(0x1BDA3D950);
}

void sub_1BDA3D938()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  JUMPOUT(0x1BDA3D964);
}

void sub_1BDA3D944()
{
  JUMPOUT(0x1BDA3D954);
}

void sub_1BDA3D9AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA3DB48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA3DDA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA3DF2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA3E124(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA3E26C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BDA3E560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *ICNotesAppURLScheme()
{
  return CFSTR("applenotes");
}

uint64_t ICIsNotesURLScheme(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = ICIsNotesURLScheme_token;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&ICIsNotesURLScheme_token, &__block_literal_global_49);
  v3 = (void *)ICIsNotesURLScheme_validSchemes;
  objc_msgSend(v2, "lowercaseString");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v3, "containsObject:", v4);
  return v5;
}

id NotesAppURLForNoteIdentifierOrTokenContentIdentifier(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  NotesAppURLForTokenContentIdentifier((uint64_t)v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    NotesAppURLForNoteIdentifier(v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v2;
}

id NotesAppURLForTokenContentIdentifier(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "scheme");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (ICIsNotesURLScheme(v2))
    v3 = v1;
  else
    v3 = 0;
  v4 = v3;

  return v4;
}

id NotesAppURLForNoteIdentifier(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  v1 = (objc_class *)MEMORY[0x1E0CB3998];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  objc_msgSend(v3, "setScheme:", CFSTR("applenotes"));
  objc_msgSend(v3, "setHost:", CFSTR("showNote"));
  objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("identifier"), v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v8[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setQueryItems:", v5);

  objc_msgSend(v3, "URL");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

BOOL NotesAppIsValidURL(void *a1)
{
  void *v1;
  _BOOL8 v2;

  NotesAppGUIDForNoteMentionedInURL(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1 != 0;

  return v2;
}

id NotesAppGUIDForNoteMentionedInURL(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;

  v1 = a1;
  objc_msgSend(v1, "scheme");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!ICIsNotesURLScheme(v2))
    goto LABEL_10;
  objc_msgSend(v1, "host");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "ic_isCaseInsensitiveEqualToString:", CFSTR("showNote"));

  if (!v4)
  {
    v10 = 0;
    goto LABEL_13;
  }
  objc_msgSend(v1, "query");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "componentsSeparatedByString:", CFSTR("&"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "lastObject");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v2)
  {
LABEL_10:
    v10 = 0;
    goto LABEL_11;
  }
  objc_msgSend(v2, "componentsSeparatedByString:", CFSTR("="));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "count") == 2)
  {
    objc_msgSend(v7, "objectAtIndexedSubscript:", 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "ic_isCaseInsensitiveEqualToString:", CFSTR("guid"));

    v10 = 0;
    if (!v9)
      goto LABEL_9;
    objc_msgSend(v7, "objectAtIndexedSubscript:", 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (isValidIdentifier(v10))
      goto LABEL_9;

  }
  v10 = 0;
LABEL_9:

LABEL_11:
LABEL_13:

  return v10;
}

id NotesAppPredicateForNoteMentionedInURL(void *a1)
{
  void *v1;
  void *v2;

  NotesAppGUIDForNoteMentionedInURL(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("%K ==[c] %@"), CFSTR("guid"), v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id NotesAppURLForNote(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "guid");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "length"))
  {
    v2 = objc_alloc_init(MEMORY[0x1E0CB3998]);
    objc_msgSend(v2, "setScheme:", CFSTR("applenotes"));
    objc_msgSend(v2, "setHost:", CFSTR("showNote"));
    objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("guid"), v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v7[0] = v3;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v7, 1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setQueryItems:", v4);

    objc_msgSend(v2, "URL");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

BOOL isValidIdentifier(void *a1)
{
  id v1;
  id v2;
  void *v3;
  _BOOL8 v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;

  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "length") >= 0x24)
  {
    if (objc_msgSend(v1, "length") == 36)
    {
      v2 = v1;
      v3 = 0;
    }
    else
    {
      objc_msgSend(v1, "substringToIndex:", 36);
      v2 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "substringFromIndex:", 36);
      v3 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDString:", v2);

    if (v5)
    {
      if (!v3)
      {
LABEL_19:
        v4 = 1;
        goto LABEL_20;
      }
      if (objc_msgSend(v3, "characterAtIndex:", 0) == 95 && objc_msgSend(v3, "length") == 33)
      {
        if ((unint64_t)objc_msgSend(v3, "length") >= 2)
        {
          v6 = 1;
          v7 = MEMORY[0x1E0C80978];
          do
          {
            v8 = objc_msgSend(v3, "characterAtIndex:", v6);
            if (v8 > 0x7F)
              v9 = __maskrune(v8, 0x10000uLL);
            else
              v9 = *(_DWORD *)(v7 + 4 * v8 + 60) & 0x10000;
            v4 = v9 != 0;
            if (!v9)
              break;
            ++v6;
          }
          while (v6 < objc_msgSend(v3, "length"));
          goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
    v4 = 0;
LABEL_20:

    goto LABEL_21;
  }
  v4 = 0;
LABEL_21:

  return v4;
}

void sub_1BDA441C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA45624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA46CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA47674(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA47B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA47D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA48124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA483A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4861C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4882C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA48B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA48E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA49328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4956C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA497E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA49A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_5_4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_1BDA49FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4A278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4AD84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4CBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4CDA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4D174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4D4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4ECC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4EF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4F48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4F9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA4FE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA50248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA50670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA509F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA50D80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BDA50E58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA50F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1BDA50FD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA5113C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1BDA512B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  uint64_t v11;

  MEMORY[0x1C3B7A848](v11, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1BDA51480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BDA515C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1BDA51724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BDA5180C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDA518D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA5199C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA51B34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BDA51BEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA51CBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1BDA51DD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA51FD8(_Unwind_Exception *a1, void *a2, void *a3, ...)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  va_list va;

  va_start(va, a3);
  v7 = v4;

  CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment((CRDT::StringArray_ArrayAttachment *)va);
  _Unwind_Resume(a1);
}

void sub_1BDA52250(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  MEMORY[0x1C3B7A848](v2, 0x10B3C406C843DA2);

  _Unwind_Resume(a1);
}

void sub_1BDA52308(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA52588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v15;

  v15 = v10;
  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1BDA526F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x10B3C40E3C8ABF7);

  _Unwind_Resume(a1);
}

CRDT::StringArray_ArrayAttachment *google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New()
{
  CRDT::StringArray_ArrayAttachment *v0;

  v0 = (CRDT::StringArray_ArrayAttachment *)operator new();
  CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(v0);
  return v0;
}

void sub_1BDA52760(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

void sub_1BDA52830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA52BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA54548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDA54C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA56788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA57770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA58AA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  id *v22;
  uint64_t v23;

  objc_destroyWeak(v22);
  _Block_object_dispose(&a22, 8);
  objc_destroyWeak((id *)(v23 - 104));
  _Unwind_Resume(a1);
}

void sub_1BDA58DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA5A0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA5A770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDA5B754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA5BAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA5C110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id a37)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a37);
  _Unwind_Resume(a1);
}

void sub_1BDA5C3A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_1BDA5C664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA5D8D4(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x310], 8);
  _Unwind_Resume(a1);
}

void sub_1BDA5ED04(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_1BDA60D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose(&a45, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA618E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA61F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA630F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  id *v34;

  objc_destroyWeak(v34);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDA6402C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDA65D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA680F4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  uint64_t v6;

  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Block_object_dispose((const void *)(v6 - 200), 8);
  objc_destroyWeak((id *)(v6 - 152));
  _Unwind_Resume(a1);
}

void sub_1BDA6A19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a43, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA6A8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *a12, id *a13, id *a14, id *location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,id a62)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak(a13);
  objc_destroyWeak(a12);
  objc_destroyWeak(&a62);
  _Unwind_Resume(a1);
}

void sub_1BDA6C8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDA6D048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDA6D5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA6DAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA6EFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA6F650(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void sub_1BDA6FB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_9_3(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_25_0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 40);
}

uint64_t OUTLINED_FUNCTION_26_0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(_QWORD *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(_QWORD *)(a3 + 14) = a2;
  return result;
}

void OUTLINED_FUNCTION_28(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_34_0(uint64_t result, float a2)
{
  _QWORD *v2;
  float *v3;

  *v3 = a2;
  *v2 = result;
  return result;
}

void OUTLINED_FUNCTION_36(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

uint64_t OUTLINED_FUNCTION_38_0(void *a1, const char *a2)
{
  return objc_msgSend(a1, "count");
}

void OUTLINED_FUNCTION_40_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x12u);
}

void OUTLINED_FUNCTION_42(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

uint64_t OUTLINED_FUNCTION_45(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(_QWORD *)(a2 + 4) = result;
  return result;
}

id OUTLINED_FUNCTION_47(uint64_t a1)
{
  return objc_loadWeakRetained((id *)(a1 + 48));
}

uint64_t OUTLINED_FUNCTION_48(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

void sub_1BDA70798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA70958(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA709E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA70A6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA70AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA70B5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA70BD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA70DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA70E30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA70EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

id getVNSessionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getVNSessionClass_softClass;
  v7 = getVNSessionClass_softClass;
  if (!getVNSessionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getVNSessionClass_block_invoke;
    v3[3] = &unk_1E76C77A8;
    v3[4] = &v4;
    __getVNSessionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1BDA71078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getVNImageRequestHandlerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getVNImageRequestHandlerClass_softClass;
  v7 = getVNImageRequestHandlerClass_softClass;
  if (!getVNImageRequestHandlerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getVNImageRequestHandlerClass_block_invoke;
    v3[3] = &unk_1E76C77A8;
    v3[4] = &v4;
    __getVNImageRequestHandlerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1BDA71130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA715E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  _Block_object_dispose(&a40, 8);
  _Unwind_Resume(a1);
}

void __getVNSessionClass_block_invoke(uint64_t a1)
{
  VisionLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("VNSession");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getVNSessionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getVNSessionClass_block_invoke_cold_1();
    VisionLibrary();
  }
}

void VisionLibrary()
{
  void *v0;

  if (!VisionLibraryCore_frameworkLibrary)
    VisionLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!VisionLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

Class __getVNImageRequestHandlerClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  VisionLibrary();
  result = objc_getClass("VNImageRequestHandler");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getVNImageRequestHandlerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getVNImageRequestHandlerClass_block_invoke_cold_1();
    return (Class)__getVNRecognizeTextRequestClass_block_invoke(v3);
  }
  return result;
}

const __CFString *__getVNRecognizeTextRequestClass_block_invoke(uint64_t a1)
{
  const __CFString *result;

  VisionLibrary();
  result = (const __CFString *)objc_getClass("VNRecognizeTextRequest");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getVNRecognizeTextRequestClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getVNRecognizeTextRequestClass_block_invoke_cold_1();
    return ICLegacyEntityNameNote();
  }
  return result;
}

const __CFString *ICLegacyEntityNameNote()
{
  return CFSTR("Note");
}

void sub_1BDA71E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BDA71F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  uint64_t v12;

  MEMORY[0x1C3B7A848](v12, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1BDA7201C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA720F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1BDA721C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA72278(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA72314(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA72418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1BDA724E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA72564(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA72698(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA72714(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA7277C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA727E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA72934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA729BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA72A10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDA72A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDA72B20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDA72B7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA72C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1BDA72CAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA72D58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1BDA72ECC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA72F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

BOOL ICTTNamedStyleIsList(int a1)
{
  return (a1 & 0xFFFFFFFC) == 100;
}

void sub_1BDA74A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va2;

  va_start(va2, a9);
  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v15 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va2, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA77E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::protobuf_ShutdownFile_airdrop_2ddocument_2eproto(airdrop_document *this)
{
  uint64_t result;

  if (airdrop_document::Document::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)airdrop_document::Document::default_instance_ + 8))(airdrop_document::Document::default_instance_);
  if (airdrop_document::NoteDocument::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)airdrop_document::NoteDocument::default_instance_ + 8))(airdrop_document::NoteDocument::default_instance_);
  if (airdrop_document::NoteDocument1_0::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)airdrop_document::NoteDocument1_0::default_instance_ + 8))(airdrop_document::NoteDocument1_0::default_instance_);
  if (airdrop_document::AttributedString::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)airdrop_document::AttributedString::default_instance_ + 8))(airdrop_document::AttributedString::default_instance_);
  if (airdrop_document::LegacyNoteDocument::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)airdrop_document::LegacyNoteDocument::default_instance_ + 8))(airdrop_document::LegacyNoteDocument::default_instance_);
  if (airdrop_document::LegacyNoteDocument1_0::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)airdrop_document::LegacyNoteDocument1_0::default_instance_ + 8))(airdrop_document::LegacyNoteDocument1_0::default_instance_);
  result = airdrop_document::WebArchive::default_instance_;
  if (airdrop_document::WebArchive::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)airdrop_document::WebArchive::default_instance_ + 8))(airdrop_document::WebArchive::default_instance_);
  return result;
}

void airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto_impl(airdrop_document *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  airdrop_document::AttributedString *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  airdrop_document::WebArchive *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", a4);
  v4 = operator new();
  *(_QWORD *)v4 = &off_1E76CEB90;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  airdrop_document::Document::default_instance_ = v4;
  v5 = operator new();
  *(_QWORD *)v5 = &off_1E76CEC08;
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_QWORD *)(v5 + 40) = 0;
  airdrop_document::NoteDocument::default_instance_ = v5;
  v6 = operator new();
  *(_QWORD *)v6 = &off_1E76CEC80;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  airdrop_document::NoteDocument1_0::default_instance_ = v6;
  v7 = (airdrop_document::AttributedString *)operator new();
  airdrop_document::AttributedString::AttributedString(v7, v8, v9);
  airdrop_document::AttributedString::default_instance_ = (uint64_t)v7;
  v10 = operator new();
  *(_QWORD *)v10 = &off_1E76CED70;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_QWORD *)(v10 + 40) = 0;
  airdrop_document::LegacyNoteDocument::default_instance_ = v10;
  v11 = operator new();
  *(_QWORD *)v11 = &off_1E76CEDE8;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_QWORD *)(v11 + 40) = 0;
  airdrop_document::LegacyNoteDocument1_0::default_instance_ = v11;
  v12 = (airdrop_document::WebArchive *)operator new();
  airdrop_document::WebArchive::WebArchive(v12, v13, v14);
  airdrop_document::WebArchive::default_instance_ = (uint64_t)v12;
  v15 = airdrop_document::Document::default_instance_;
  v16 = airdrop_document::NoteDocument::default_instance_;
  v17 = airdrop_document::LegacyNoteDocument::default_instance_;
  *(_QWORD *)(airdrop_document::Document::default_instance_ + 40) = airdrop_document::NoteDocument::default_instance_;
  *(_QWORD *)(v15 + 48) = v17;
  v18 = airdrop_document::NoteDocument1_0::default_instance_;
  *(_QWORD *)(v16 + 40) = airdrop_document::NoteDocument1_0::default_instance_;
  *(_QWORD *)(v18 + 40) = airdrop_document::AttributedString::default_instance_;
  v19 = airdrop_document::LegacyNoteDocument1_0::default_instance_;
  *(_QWORD *)(v17 + 40) = airdrop_document::LegacyNoteDocument1_0::default_instance_;
  *(_QWORD *)(v19 + 40) = v12;
  google::protobuf::internal::OnShutdown((google::protobuf::internal *)airdrop_document::protobuf_ShutdownFile_airdrop_2ddocument_2eproto, v20);
}

void sub_1BDA7A974(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

double airdrop_document::Document::Document(airdrop_document::Document *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CEB90;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double airdrop_document::NoteDocument::NoteDocument(airdrop_document::NoteDocument *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CEC08;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double airdrop_document::NoteDocument1_0::NoteDocument1_0(airdrop_document::NoteDocument1_0 *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CEC80;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double airdrop_document::LegacyNoteDocument::LegacyNoteDocument(airdrop_document::LegacyNoteDocument *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CED70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double airdrop_document::LegacyNoteDocument1_0::LegacyNoteDocument1_0(airdrop_document::LegacyNoteDocument1_0 *this)
{
  double result;

  *(_QWORD *)this = &off_1E76CEDE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

void airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(airdrop_document *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &off_1E76C9A40;
    v2[1] = airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto_impl;
    v3 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1BDA7AAA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *airdrop_document::Document::MergeFrom(airdrop_document::Document *this, const airdrop_document::Document *a2, uint64_t a3)
{
  airdrop_document::Document *v4;
  std::string *v5;
  int v6;
  airdrop_document::NoteDocument *v7;
  const airdrop_document::NoteDocument *v8;
  airdrop_document::LegacyNoteDocument *v9;
  const airdrop_document::LegacyNoteDocument *v10;
  const std::string::value_type *v11;
  char *v12;
  const std::string::value_type *v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 277);
    v5 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v4 + 8) |= 1u;
      v7 = (airdrop_document::NoteDocument *)*((_QWORD *)v4 + 5);
      if (!v7)
      {
        this = (airdrop_document::Document *)operator new();
        v7 = this;
        *(_QWORD *)this = &off_1E76CEC08;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)v4 + 5) = this;
      }
      v8 = (const airdrop_document::NoteDocument *)*((_QWORD *)a2 + 5);
      if (!v8)
      {
        airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
        v8 = *(const airdrop_document::NoteDocument **)(airdrop_document::Document::default_instance_ + 40);
      }
      this = (airdrop_document::Document *)airdrop_document::NoteDocument::MergeFrom(v7, v8, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)v4 + 8) |= 2u;
      v9 = (airdrop_document::LegacyNoteDocument *)*((_QWORD *)v4 + 6);
      if (!v9)
      {
        this = (airdrop_document::Document *)operator new();
        v9 = this;
        *(_QWORD *)this = &off_1E76CED70;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)v4 + 6) = this;
      }
      v10 = (const airdrop_document::LegacyNoteDocument *)*((_QWORD *)a2 + 6);
      if (!v10)
      {
        airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
        v10 = *(const airdrop_document::LegacyNoteDocument **)(airdrop_document::Document::default_instance_ + 48);
      }
      airdrop_document::LegacyNoteDocument::MergeFrom(v9, v10, a3);
    }
  }
  v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v12 = (char *)a2 + 8;
  v11 = v13;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v15, v16);
}

void sub_1BDA7AC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void airdrop_document::Document::~Document(void **this)
{
  *this = &off_1E76CEB90;
  airdrop_document::Document::SharedDtor((airdrop_document::Document *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  airdrop_document::Document::~Document(this);
  JUMPOUT(0x1C3B7A848);
}

void airdrop_document::Document::SharedDtor(airdrop_document::Document *this)
{
  uint64_t v2;
  uint64_t v3;

  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  if ((airdrop_document::Document *)airdrop_document::Document::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t airdrop_document::Document::default_instance(airdrop_document::Document *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  return airdrop_document::Document::default_instance_;
}

double airdrop_document::Document::New(airdrop_document::Document *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CEB90;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t airdrop_document::Document::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((v4 & 3) != 0)
  {
    if ((v4 & 1) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
      {
        this = airdrop_document::NoteDocument::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 2) != 0)
    {
      this = *(_QWORD *)(v3 + 48);
      if (this)
        this = airdrop_document::LegacyNoteDocument::Clear(this, a2, a3);
    }
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::NoteDocument::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = this;
  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    this = *(_QWORD *)(this + 40);
    if (this)
      this = airdrop_document::NoteDocument1_0::Clear(this, a2, a3);
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::LegacyNoteDocument::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = this;
  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    this = *(_QWORD *)(this + 40);
    if (this)
      this = airdrop_document::LegacyNoteDocument1_0::Clear(this, a2, a3);
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::Document::MergePartialFromCodedStream(airdrop_document::Document *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  uint64_t v9;
  char *v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  _BYTE v28[32];
  _QWORD v29[2];
  unsigned int v30;

  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        break;
    }
    else
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if ((_DWORD)v7 == 18)
        goto LABEL_33;
      goto LABEL_21;
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      v9 = *((_QWORD *)this + 5);
      if (!v9)
      {
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E76CEC08;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_QWORD *)(v9 + 40) = 0;
        *((_QWORD *)this + 5) = v9;
      }
      v30 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
          goto LABEL_48;
      }
      else
      {
        v30 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      v12 = *((_DWORD *)a2 + 14);
      v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13)
        goto LABEL_48;
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!airdrop_document::NoteDocument::MergePartialFromCodedStream((airdrop_document::NoteDocument *)v9, a2)|| !*((_BYTE *)a2 + 36))
      {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      v15 = *((_DWORD *)a2 + 14);
      v16 = __OFSUB__(v15, 1);
      v17 = v15 - 1;
      if (v17 < 0 == v16)
        *((_DWORD *)a2 + 14) = v17;
      v18 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v18 < *((_QWORD *)a2 + 2) && *v18 == 18)
      {
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        v19 = *((_QWORD *)this + 6);
        if (!v19)
        {
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E76CED70;
          *(_OWORD *)(v19 + 8) = 0u;
          *(_OWORD *)(v19 + 24) = 0u;
          *(_QWORD *)(v19 + 40) = 0;
          *((_QWORD *)this + 6) = v19;
        }
        v30 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
            goto LABEL_48;
        }
        else
        {
          v30 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !airdrop_document::LegacyNoteDocument::MergePartialFromCodedStream((airdrop_document::LegacyNoteDocument *)v19, a2))|| !*((_BYTE *)a2 + 36))
        {
LABEL_48:
          v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        v24 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v16)
          *((_DWORD *)a2 + 14) = v25;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          v26 = 1;
          *((_BYTE *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_49;
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48;
    }
  }
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_18;
LABEL_49:
  v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1BDA7B1E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::Document::SerializeWithCachedSizes(airdrop_document::Document *this, google::protobuf::io::CodedOutputStream *a2)
{
  airdrop_document::Document *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    if (!v5)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v5 = *(_QWORD *)(airdrop_document::Document::default_instance_ + 40);
    }
    this = (airdrop_document::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_QWORD *)v3 + 6);
    if (!v6)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v6 = *(_QWORD *)(airdrop_document::Document::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)v3 + 1);
    v8 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v7 = (char *)v3 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t airdrop_document::Document::ByteSize(airdrop_document::Document *this)
{
  int v2;
  airdrop_document::NoteDocument *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  airdrop_document::LegacyNoteDocument *v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (airdrop_document::NoteDocument *)*((_QWORD *)this + 5);
  if (!v3)
  {
    airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
    v3 = *(airdrop_document::NoteDocument **)(airdrop_document::Document::default_instance_ + 40);
  }
  v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::NoteDocument::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    v7 = (airdrop_document::LegacyNoteDocument *)*((_QWORD *)this + 6);
    if (!v7)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
      v7 = *(airdrop_document::LegacyNoteDocument **)(airdrop_document::Document::default_instance_ + 48);
    }
    v8 = (google::protobuf::io::CodedOutputStream *)airdrop_document::LegacyNoteDocument::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::Document::CheckTypeAndMergeFrom(airdrop_document::Document *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return airdrop_document::Document::MergeFrom(this, lpsrc, v5);
}

std::string *airdrop_document::NoteDocument::MergeFrom(airdrop_document::NoteDocument *this, const airdrop_document::NoteDocument *a2, uint64_t a3)
{
  airdrop_document::NoteDocument *v4;
  std::string *v5;
  airdrop_document::NoteDocument1_0 *v6;
  const airdrop_document::NoteDocument1_0 *v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 480);
    v5 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    *((_DWORD *)v4 + 8) |= 1u;
    v6 = (airdrop_document::NoteDocument1_0 *)*((_QWORD *)v4 + 5);
    if (!v6)
    {
      this = (airdrop_document::NoteDocument *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E76CEC80;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v4 + 5) = this;
    }
    v7 = (const airdrop_document::NoteDocument1_0 *)*((_QWORD *)a2 + 5);
    if (!v7)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v7 = *(const airdrop_document::NoteDocument1_0 **)(airdrop_document::NoteDocument::default_instance_ + 40);
    }
    airdrop_document::NoteDocument1_0::MergeFrom(v6, v7, a3);
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v12, v13);
}

void sub_1BDA7B4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *airdrop_document::LegacyNoteDocument::MergeFrom(airdrop_document::LegacyNoteDocument *this, const airdrop_document::LegacyNoteDocument *a2, uint64_t a3)
{
  airdrop_document::LegacyNoteDocument *v4;
  std::string *v5;
  airdrop_document::LegacyNoteDocument1_0 *v6;
  const airdrop_document::LegacyNoteDocument1_0 *v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 1112);
    v5 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    *((_DWORD *)v4 + 8) |= 1u;
    v6 = (airdrop_document::LegacyNoteDocument1_0 *)*((_QWORD *)v4 + 5);
    if (!v6)
    {
      this = (airdrop_document::LegacyNoteDocument *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E76CEDE8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)this + 5) = 0;
      *((_QWORD *)v4 + 5) = this;
    }
    v7 = (const airdrop_document::LegacyNoteDocument1_0 *)*((_QWORD *)a2 + 5);
    if (!v7)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v7 = *(const airdrop_document::LegacyNoteDocument1_0 **)(airdrop_document::LegacyNoteDocument::default_instance_
                                                             + 40);
    }
    airdrop_document::LegacyNoteDocument1_0::MergeFrom(v6, v7, a3);
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v12, v13);
}

void sub_1BDA7B60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::Document::IsInitialized(airdrop_document::Document *this)
{
  return 1;
}

_QWORD *airdrop_document::Document::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.Document");
}

void airdrop_document::NoteDocument::~NoteDocument(void **this)
{
  void *v2;

  *this = &off_1E76CEC08;
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto((airdrop_document *)this);
  if ((void **)airdrop_document::NoteDocument::default_instance_ != this)
  {
    v2 = this[5];
    if (v2)
      (*(void (**)(void *))(*(_QWORD *)v2 + 8))(v2);
  }
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  airdrop_document::NoteDocument::~NoteDocument(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t airdrop_document::NoteDocument::default_instance(airdrop_document::NoteDocument *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  return airdrop_document::NoteDocument::default_instance_;
}

double airdrop_document::NoteDocument::New(airdrop_document::NoteDocument *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CEC08;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t airdrop_document::NoteDocument1_0::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((v4 & 3) != 0)
  {
    if ((v4 & 1) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
        this = airdrop_document::AttributedString::Clear(this, a2, a3);
    }
    *(_QWORD *)(v3 + 48) = 0;
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::NoteDocument::MergePartialFromCodedStream(airdrop_document::NoteDocument *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  uint64_t v9;
  char *v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE v20[32];
  _QWORD v21[2];
  unsigned int v22;

  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && *v5 >= 1)
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
        break;
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        break;
LABEL_12:
      if ((_DWORD)v7)
        v11 = (v7 & 7) == 4;
      else
        v11 = 1;
      v12 = v11;
      if (v11
        || !google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))
      {
        goto LABEL_32;
      }
    }
    if ((_DWORD)v7 != 10)
      goto LABEL_12;
    *((_DWORD *)this + 8) |= 1u;
    v9 = *((_QWORD *)this + 5);
    if (!v9)
    {
      v9 = operator new();
      *(_QWORD *)v9 = &off_1E76CEC80;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *(_OWORD *)(v9 + 40) = 0u;
      *((_QWORD *)this + 5) = v9;
    }
    v22 = 0;
    v10 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))
        break;
    }
    else
    {
      v22 = *v10;
      *((_QWORD *)a2 + 1) = v10 + 1;
    }
    v13 = *((_DWORD *)a2 + 14);
    v14 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v13 + 1;
    if (v13 >= v14)
      break;
    v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
    if (!airdrop_document::NoteDocument1_0::MergePartialFromCodedStream((airdrop_document::NoteDocument1_0 *)v9, a2)|| !*((_BYTE *)a2 + 36))
    {
      break;
    }
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v15);
    v16 = *((_DWORD *)a2 + 14);
    v17 = __OFSUB__(v16, 1);
    v18 = v16 - 1;
    if (v18 < 0 == v17)
      *((_DWORD *)a2 + 14) = v18;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v12 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_32;
    }
  }
  v12 = 0;
LABEL_32:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v12;
}

void sub_1BDA7B994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::NoteDocument::SerializeWithCachedSizes(airdrop_document::NoteDocument *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 5);
    if (!v4)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v4 = *(_QWORD *)(airdrop_document::NoteDocument::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t airdrop_document::NoteDocument::ByteSize(airdrop_document::NoteDocument *this)
{
  int v2;
  airdrop_document::NoteDocument1_0 *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = (airdrop_document::NoteDocument1_0 *)*((_QWORD *)this + 5);
    if (!v3)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
      v3 = *(airdrop_document::NoteDocument1_0 **)(airdrop_document::NoteDocument::default_instance_ + 40);
    }
    v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::NoteDocument1_0::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    v2 = v5 + v6 + 1;
  }
  else
  {
    v2 = 0;
  }
  if (*((char *)this + 31) < 0)
    v7 = *((_QWORD *)this + 2);
  else
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  result = (v7 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::NoteDocument::CheckTypeAndMergeFrom(airdrop_document::NoteDocument *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return airdrop_document::NoteDocument::MergeFrom(this, lpsrc, v5);
}

std::string *airdrop_document::NoteDocument1_0::MergeFrom(airdrop_document::NoteDocument1_0 *this, const airdrop_document::NoteDocument1_0 *a2, uint64_t a3)
{
  airdrop_document::NoteDocument1_0 *v4;
  std::string *v5;
  int v6;
  airdrop_document::AttributedString *v7;
  uint64_t v8;
  uint64_t v9;
  const airdrop_document::AttributedString *v10;
  uint64_t v11;
  const std::string::value_type *v12;
  char *v13;
  const std::string::value_type *v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  char v19;
  std::string v20[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 711);
    v5 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v4 + 8) |= 1u;
      v7 = (airdrop_document::AttributedString *)*((_QWORD *)v4 + 5);
      if (!v7)
      {
        v7 = (airdrop_document::AttributedString *)operator new();
        this = airdrop_document::AttributedString::AttributedString(v7, v8, v9);
        *((_QWORD *)v4 + 5) = v7;
      }
      v10 = (const airdrop_document::AttributedString *)*((_QWORD *)a2 + 5);
      if (!v10)
      {
        airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
        v10 = *(const airdrop_document::AttributedString **)(airdrop_document::NoteDocument1_0::default_instance_ + 40);
      }
      airdrop_document::AttributedString::MergeFrom(v7, v10, a3);
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      v11 = *((_QWORD *)a2 + 6);
      *((_DWORD *)v4 + 8) |= 2u;
      *((_QWORD *)v4 + 6) = v11;
    }
  }
  v14 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v13 = (char *)a2 + 8;
  v12 = v14;
  v15 = v13[23];
  if (v15 >= 0)
    v16 = v13;
  else
    v16 = v12;
  if (v15 >= 0)
    v17 = v13[23];
  else
    v17 = *((_QWORD *)v13 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v16, v17);
}

void sub_1BDA7BC0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::NoteDocument::IsInitialized(airdrop_document::NoteDocument *this)
{
  return 1;
}

_QWORD *airdrop_document::NoteDocument::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.NoteDocument");
}

void airdrop_document::NoteDocument1_0::~NoteDocument1_0(void **this)
{
  void *v2;

  *this = &off_1E76CEC80;
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto((airdrop_document *)this);
  if ((void **)airdrop_document::NoteDocument1_0::default_instance_ != this)
  {
    v2 = this[5];
    if (v2)
      (*(void (**)(void *))(*(_QWORD *)v2 + 8))(v2);
  }
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  airdrop_document::NoteDocument1_0::~NoteDocument1_0(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t airdrop_document::NoteDocument1_0::default_instance(airdrop_document::NoteDocument1_0 *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  return airdrop_document::NoteDocument1_0::default_instance_;
}

double airdrop_document::NoteDocument1_0::New(airdrop_document::NoteDocument1_0 *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CEC80;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t airdrop_document::AttributedString::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor(this, a2, a3);
    v3 = *(_QWORD *)(this + 40);
    if (v3 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::NoteDocument1_0::MergePartialFromCodedStream(airdrop_document::NoteDocument1_0 *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  airdrop_document::AttributedString *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  unint64_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  _BYTE v27[32];
  _QWORD v28[2];
  unsigned int v29[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_14;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2)
        break;
      if ((_DWORD)v7 != 16)
        goto LABEL_21;
      v15 = (char *)*((_QWORD *)a2 + 1);
      v14 = *((_QWORD *)a2 + 2);
LABEL_34:
      *(_QWORD *)v29 = 0;
      if ((unint64_t)v15 >= v14 || *v15 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v29))
          goto LABEL_43;
        v23 = *(_QWORD *)v29;
        v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v23 = *v15;
        v24 = (unsigned __int8 *)(v15 + 1);
        *((_QWORD *)a2 + 1) = v24;
      }
      *((_QWORD *)this + 6) = v23;
      *((_DWORD *)this + 8) |= 2u;
      if (v24 == (unsigned __int8 *)v14 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v25 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_45;
      }
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      v9 = (airdrop_document::AttributedString *)*((_QWORD *)this + 5);
      if (!v9)
      {
        v9 = (airdrop_document::AttributedString *)operator new();
        airdrop_document::AttributedString::AttributedString(v9, v10, v11);
        *((_QWORD *)this + 5) = v9;
      }
      v29[0] = 0;
      v12 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v29))
          goto LABEL_43;
      }
      else
      {
        v29[0] = *v12;
        *((_QWORD *)a2 + 1) = v12 + 1;
      }
      v16 = *((_DWORD *)a2 + 14);
      v17 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v16 + 1;
      if (v16 >= v17
        || (v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29[0]),
            !airdrop_document::AttributedString::MergePartialFromCodedStream(v9, a2))
        || !*((_BYTE *)a2 + 36))
      {
LABEL_43:
        v25 = 0;
        goto LABEL_45;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v18);
      v19 = *((_DWORD *)a2 + 14);
      v20 = __OFSUB__(v19, 1);
      v21 = v19 - 1;
      if (v21 < 0 == v20)
        *((_DWORD *)a2 + 14) = v21;
      v22 = (_BYTE *)*((_QWORD *)a2 + 1);
      v14 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v22 < v14 && *v22 == 16)
      {
        v15 = v22 + 1;
        *((_QWORD *)a2 + 1) = v15;
        goto LABEL_34;
      }
    }
    else
    {
LABEL_21:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_44;
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4))goto LABEL_43;
    }
  }
LABEL_14:
  if ((_DWORD)v7)
    v13 = (v7 & 7) == 4;
  else
    v13 = 1;
  if (!v13)
    goto LABEL_18;
LABEL_44:
  v25 = 1;
LABEL_45:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1BDA7C054(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C400074EEDFLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::NoteDocument1_0::SerializeWithCachedSizes(airdrop_document::NoteDocument1_0 *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    v7 = *((_QWORD *)this + 5);
    if (!v7)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v7 = *(_QWORD *)(airdrop_document::NoteDocument1_0::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v7, a2);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((_QWORD *)this + 6), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    v9 = *((_QWORD *)this + 2);
  }
  else
  {
    v8 = (char *)this + 8;
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t airdrop_document::NoteDocument1_0::ByteSize(airdrop_document::NoteDocument1_0 *this)
{
  int v2;
  airdrop_document::AttributedString *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_13;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_13;
LABEL_12:
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 6)) + 1;
    goto LABEL_13;
  }
  v3 = (airdrop_document::AttributedString *)*((_QWORD *)this + 5);
  if (!v3)
  {
    airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
    v3 = *(airdrop_document::AttributedString **)(airdrop_document::NoteDocument1_0::default_instance_ + 40);
  }
  v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::AttributedString::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
    goto LABEL_12;
LABEL_13:
  if (*((char *)this + 31) < 0)
    v7 = *((_QWORD *)this + 2);
  else
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  result = (v2 + v7);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::NoteDocument1_0::CheckTypeAndMergeFrom(airdrop_document::NoteDocument1_0 *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return airdrop_document::NoteDocument1_0::MergeFrom(this, lpsrc, v5);
}

std::string *airdrop_document::AttributedString::MergeFrom(airdrop_document::AttributedString *this, const airdrop_document::AttributedString *a2, uint64_t a3)
{
  std::string *v5;
  const std::string *v6;
  std::string *v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 913);
    v5 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    v6 = (const std::string *)*((_QWORD *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
    v7 = (std::string *)*((_QWORD *)this + 5);
    if (v7 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 5) = v7;
    }
    std::string::operator=(v7, v6);
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BDA7C310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::NoteDocument1_0::IsInitialized(airdrop_document::NoteDocument1_0 *this)
{
  return 1;
}

_QWORD *airdrop_document::NoteDocument1_0::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.NoteDocument1_0");
}

airdrop_document::AttributedString *airdrop_document::AttributedString::AttributedString(airdrop_document::AttributedString *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CECF8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  airdrop_document::AttributedString::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BDA7C384(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void airdrop_document::AttributedString::SharedCtor(airdrop_document::AttributedString *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
}

void sub_1BDA7C42C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void airdrop_document::AttributedString::~AttributedString(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CECF8;
  airdrop_document::AttributedString::SharedDtor((airdrop_document::AttributedString *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  airdrop_document::AttributedString::~AttributedString(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void airdrop_document::AttributedString::SharedDtor(airdrop_document::AttributedString *this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = v3 == google::protobuf::internal::empty_string_;
  else
    v4 = 1;
  if (!v4)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    this = (airdrop_document::AttributedString *)MEMORY[0x1C3B7A848](v3, 0x1012C40EC159624);
  }
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
}

airdrop_document::AttributedString *airdrop_document::AttributedString::New(airdrop_document::AttributedString *this)
{
  airdrop_document::AttributedString *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (airdrop_document::AttributedString *)operator new();
  airdrop_document::AttributedString::AttributedString(v1, v2, v3);
  return v1;
}

void sub_1BDA7C54C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::AttributedString::MergePartialFromCodedStream(airdrop_document::AttributedString *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  BOOL v10;
  uint64_t v11;
  _BYTE v13[32];
  _QWORD v14[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_15;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 == 10)
        break;
LABEL_15:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v9 = (std::string *)*((_QWORD *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__r.__words[0] = 0;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 5) = v9;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  v11 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1BDA7C710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::AttributedString::SerializeWithCachedSizes(airdrop_document::AttributedString *this, google::protobuf::io::CodedOutputStream *a2)
{
  char *v4;
  uint64_t v5;

  if ((*((_BYTE *)this + 32) & 1) != 0)
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
  if (*((char *)this + 31) < 0)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    v5 = *((_QWORD *)this + 2);
  }
  else
  {
    v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t airdrop_document::AttributedString::ByteSize(airdrop_document::AttributedString *this)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 5);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    v2 = v8 + v4;
  }
  else
  {
    v2 = 0;
  }
  if (*((char *)this + 31) < 0)
    v10 = *((_QWORD *)this + 2);
  else
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::AttributedString::CheckTypeAndMergeFrom(airdrop_document::AttributedString *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return airdrop_document::AttributedString::MergeFrom(this, lpsrc, v5);
}

uint64_t airdrop_document::AttributedString::IsInitialized(airdrop_document::AttributedString *this)
{
  return 1;
}

_QWORD *airdrop_document::AttributedString::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.AttributedString");
}

void airdrop_document::LegacyNoteDocument::~LegacyNoteDocument(void **this)
{
  void *v2;

  *this = &off_1E76CED70;
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto((airdrop_document *)this);
  if ((void **)airdrop_document::LegacyNoteDocument::default_instance_ != this)
  {
    v2 = this[5];
    if (v2)
      (*(void (**)(void *))(*(_QWORD *)v2 + 8))(v2);
  }
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  airdrop_document::LegacyNoteDocument::~LegacyNoteDocument(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t airdrop_document::LegacyNoteDocument::default_instance(airdrop_document::LegacyNoteDocument *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  return airdrop_document::LegacyNoteDocument::default_instance_;
}

double airdrop_document::LegacyNoteDocument::New(airdrop_document::LegacyNoteDocument *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CED70;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t airdrop_document::LegacyNoteDocument1_0::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = this;
  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    this = *(_QWORD *)(this + 40);
    if (this)
      this = airdrop_document::WebArchive::Clear(this, a2, a3);
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::LegacyNoteDocument::MergePartialFromCodedStream(airdrop_document::LegacyNoteDocument *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  uint64_t v9;
  char *v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE v20[32];
  _QWORD v21[2];
  unsigned int v22;

  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && *v5 >= 1)
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
        break;
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        break;
LABEL_12:
      if ((_DWORD)v7)
        v11 = (v7 & 7) == 4;
      else
        v11 = 1;
      v12 = v11;
      if (v11
        || !google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))
      {
        goto LABEL_32;
      }
    }
    if ((_DWORD)v7 != 10)
      goto LABEL_12;
    *((_DWORD *)this + 8) |= 1u;
    v9 = *((_QWORD *)this + 5);
    if (!v9)
    {
      v9 = operator new();
      *(_QWORD *)v9 = &off_1E76CEDE8;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *(_QWORD *)(v9 + 40) = 0;
      *((_QWORD *)this + 5) = v9;
    }
    v22 = 0;
    v10 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))
        break;
    }
    else
    {
      v22 = *v10;
      *((_QWORD *)a2 + 1) = v10 + 1;
    }
    v13 = *((_DWORD *)a2 + 14);
    v14 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v13 + 1;
    if (v13 >= v14)
      break;
    v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
    if (!airdrop_document::LegacyNoteDocument1_0::MergePartialFromCodedStream((airdrop_document::LegacyNoteDocument1_0 *)v9, a2)|| !*((_BYTE *)a2 + 36))
    {
      break;
    }
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v15);
    v16 = *((_DWORD *)a2 + 14);
    v17 = __OFSUB__(v16, 1);
    v18 = v16 - 1;
    if (v18 < 0 == v17)
      *((_DWORD *)a2 + 14) = v18;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v12 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_32;
    }
  }
  v12 = 0;
LABEL_32:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v12;
}

void sub_1BDA7CBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::LegacyNoteDocument::SerializeWithCachedSizes(airdrop_document::LegacyNoteDocument *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 5);
    if (!v4)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v4 = *(_QWORD *)(airdrop_document::LegacyNoteDocument::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t airdrop_document::LegacyNoteDocument::ByteSize(airdrop_document::LegacyNoteDocument *this)
{
  int v2;
  airdrop_document::LegacyNoteDocument1_0 *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = (airdrop_document::LegacyNoteDocument1_0 *)*((_QWORD *)this + 5);
    if (!v3)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
      v3 = *(airdrop_document::LegacyNoteDocument1_0 **)(airdrop_document::LegacyNoteDocument::default_instance_ + 40);
    }
    v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::LegacyNoteDocument1_0::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    v2 = v5 + v6 + 1;
  }
  else
  {
    v2 = 0;
  }
  if (*((char *)this + 31) < 0)
    v7 = *((_QWORD *)this + 2);
  else
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  result = (v7 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::LegacyNoteDocument::CheckTypeAndMergeFrom(airdrop_document::LegacyNoteDocument *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return airdrop_document::LegacyNoteDocument::MergeFrom(this, lpsrc, v5);
}

std::string *airdrop_document::LegacyNoteDocument1_0::MergeFrom(airdrop_document::LegacyNoteDocument1_0 *this, const airdrop_document::LegacyNoteDocument1_0 *a2, uint64_t a3)
{
  airdrop_document::LegacyNoteDocument1_0 *v4;
  std::string *v5;
  airdrop_document::WebArchive *v6;
  uint64_t v7;
  uint64_t v8;
  const airdrop_document::WebArchive *v9;
  const std::string::value_type *v10;
  char *v11;
  const std::string::value_type *v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  char v17;
  std::string v18[2];

  v4 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 1311);
    v5 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    *((_DWORD *)v4 + 8) |= 1u;
    v6 = (airdrop_document::WebArchive *)*((_QWORD *)v4 + 5);
    if (!v6)
    {
      v6 = (airdrop_document::WebArchive *)operator new();
      this = airdrop_document::WebArchive::WebArchive(v6, v7, v8);
      *((_QWORD *)v4 + 5) = v6;
    }
    v9 = (const airdrop_document::WebArchive *)*((_QWORD *)a2 + 5);
    if (!v9)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v9 = *(const airdrop_document::WebArchive **)(airdrop_document::LegacyNoteDocument1_0::default_instance_ + 40);
    }
    airdrop_document::WebArchive::MergeFrom(v6, v9, a3);
  }
  v12 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v11 = (char *)a2 + 8;
  v10 = v12;
  v13 = v11[23];
  if (v13 >= 0)
    v14 = v11;
  else
    v14 = v10;
  if (v13 >= 0)
    v15 = v11[23];
  else
    v15 = *((_QWORD *)v11 + 1);
  return std::string::append((std::string *)((char *)v4 + 8), v14, v15);
}

void sub_1BDA7CE28(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::LegacyNoteDocument::IsInitialized(airdrop_document::LegacyNoteDocument *this)
{
  return 1;
}

_QWORD *airdrop_document::LegacyNoteDocument::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.LegacyNoteDocument");
}

void airdrop_document::LegacyNoteDocument1_0::~LegacyNoteDocument1_0(void **this)
{
  void *v2;

  *this = &off_1E76CEDE8;
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto((airdrop_document *)this);
  if ((void **)airdrop_document::LegacyNoteDocument1_0::default_instance_ != this)
  {
    v2 = this[5];
    if (v2)
      (*(void (**)(void *))(*(_QWORD *)v2 + 8))(v2);
  }
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  airdrop_document::LegacyNoteDocument1_0::~LegacyNoteDocument1_0(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::default_instance(airdrop_document::LegacyNoteDocument1_0 *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  return airdrop_document::LegacyNoteDocument1_0::default_instance_;
}

double airdrop_document::LegacyNoteDocument1_0::New(airdrop_document::LegacyNoteDocument1_0 *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76CEDE8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t airdrop_document::WebArchive::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor(this, a2, a3);
    v3 = *(_QWORD *)(this + 40);
    if (v3 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::LegacyNoteDocument1_0::MergePartialFromCodedStream(airdrop_document::LegacyNoteDocument1_0 *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  airdrop_document::WebArchive *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  _BYTE v22[32];
  _QWORD v23[2];
  unsigned int v24;

  google::protobuf::io::StringOutputStream::StringOutputStream(v23, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v22, (google::protobuf::io::ZeroCopyOutputStream *)v23);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && *v5 >= 1)
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
        break;
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        break;
LABEL_12:
      if ((_DWORD)v7)
        v13 = (v7 & 7) == 4;
      else
        v13 = 1;
      v14 = v13;
      if (v13
        || !google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v22, v4))
      {
        goto LABEL_32;
      }
    }
    if ((_DWORD)v7 != 10)
      goto LABEL_12;
    *((_DWORD *)this + 8) |= 1u;
    v9 = (airdrop_document::WebArchive *)*((_QWORD *)this + 5);
    if (!v9)
    {
      v9 = (airdrop_document::WebArchive *)operator new();
      airdrop_document::WebArchive::WebArchive(v9, v10, v11);
      *((_QWORD *)this + 5) = v9;
    }
    v24 = 0;
    v12 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))
        break;
    }
    else
    {
      v24 = *v12;
      *((_QWORD *)a2 + 1) = v12 + 1;
    }
    v15 = *((_DWORD *)a2 + 14);
    v16 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v15 + 1;
    if (v15 >= v16)
      break;
    v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
    if (!airdrop_document::WebArchive::MergePartialFromCodedStream(v9, a2) || !*((_BYTE *)a2 + 36))
      break;
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v17);
    v18 = *((_DWORD *)a2 + 14);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v20 < 0 == v19)
      *((_DWORD *)a2 + 14) = v20;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v14 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_32;
    }
  }
  v14 = 0;
LABEL_32:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v22);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v23);
  return v14;
}

void sub_1BDA7D1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::SerializeWithCachedSizes(airdrop_document::LegacyNoteDocument1_0 *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 5);
    if (!v4)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      v4 = *(_QWORD *)(airdrop_document::LegacyNoteDocument1_0::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((char *)this + 31) < 0)
  {
    v5 = (char *)*((_QWORD *)this + 1);
    v6 = *((_QWORD *)this + 2);
  }
  else
  {
    v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::ByteSize(airdrop_document::LegacyNoteDocument1_0 *this)
{
  int v2;
  airdrop_document::WebArchive *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = (airdrop_document::WebArchive *)*((_QWORD *)this + 5);
    if (!v3)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
      v3 = *(airdrop_document::WebArchive **)(airdrop_document::LegacyNoteDocument1_0::default_instance_ + 40);
    }
    v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::WebArchive::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    v2 = v5 + v6 + 1;
  }
  else
  {
    v2 = 0;
  }
  if (*((char *)this + 31) < 0)
    v7 = *((_QWORD *)this + 2);
  else
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  result = (v7 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::LegacyNoteDocument1_0::CheckTypeAndMergeFrom(airdrop_document::LegacyNoteDocument1_0 *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return airdrop_document::LegacyNoteDocument1_0::MergeFrom(this, lpsrc, v5);
}

std::string *airdrop_document::WebArchive::MergeFrom(airdrop_document::WebArchive *this, const airdrop_document::WebArchive *a2, uint64_t a3)
{
  std::string *v5;
  const std::string *v6;
  std::string *v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 1509);
    v5 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    v6 = (const std::string *)*((_QWORD *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
    v7 = (std::string *)*((_QWORD *)this + 5);
    if (v7 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 5) = v7;
    }
    std::string::operator=(v7, v6);
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BDA7D448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::IsInitialized(airdrop_document::LegacyNoteDocument1_0 *this)
{
  return 1;
}

_QWORD *airdrop_document::LegacyNoteDocument1_0::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.LegacyNoteDocument1_0");
}

airdrop_document::WebArchive *airdrop_document::WebArchive::WebArchive(airdrop_document::WebArchive *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76CEE60;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  airdrop_document::WebArchive::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BDA7D4BC(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void airdrop_document::WebArchive::SharedCtor(airdrop_document::WebArchive *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = v5;
}

void sub_1BDA7D564(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void airdrop_document::WebArchive::~WebArchive(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76CEE60;
  airdrop_document::AttributedString::SharedDtor((airdrop_document::AttributedString *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  airdrop_document::WebArchive::~WebArchive(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

airdrop_document::WebArchive *airdrop_document::WebArchive::New(airdrop_document::WebArchive *this)
{
  airdrop_document::WebArchive *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (airdrop_document::WebArchive *)operator new();
  airdrop_document::WebArchive::WebArchive(v1, v2, v3);
  return v1;
}

void sub_1BDA7D620(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::WebArchive::MergePartialFromCodedStream(airdrop_document::WebArchive *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v9;
  BOOL v10;
  uint64_t v11;
  _BYTE v13[32];
  _QWORD v14[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_15;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 == 10)
        break;
LABEL_15:
      if ((_DWORD)v7)
        v10 = (v7 & 7) == 4;
      else
        v10 = 1;
      if (v10)
      {
        v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v9 = (std::string *)*((_QWORD *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v9 = (std::string *)operator new();
      v9->__r_.__value_.__r.__words[0] = 0;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 5) = v9;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  v11 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1BDA7D7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::WebArchive::SerializeWithCachedSizes(airdrop_document::WebArchive *this, google::protobuf::io::CodedOutputStream *a2)
{
  char *v4;
  uint64_t v5;

  if ((*((_BYTE *)this + 32) & 1) != 0)
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((_QWORD *)this + 5), a2);
  if (*((char *)this + 31) < 0)
  {
    v4 = (char *)*((_QWORD *)this + 1);
    v5 = *((_QWORD *)this + 2);
  }
  else
  {
    v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t airdrop_document::WebArchive::ByteSize(airdrop_document::WebArchive *this)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 5);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = v4;
    v6 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v7 = *(unsigned __int8 *)(v3 + 23);
    else
      v7 = v6;
    if (v7 >= 0x80)
    {
      v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      v4 = *(unsigned __int8 *)(v3 + 23);
      v6 = *(_QWORD *)(v3 + 8);
      v8 = v9 + 1;
      v5 = *(_BYTE *)(v3 + 23);
    }
    else
    {
      v8 = 2;
    }
    if (v5 < 0)
      v4 = v6;
    v2 = v8 + v4;
  }
  else
  {
    v2 = 0;
  }
  if (*((char *)this + 31) < 0)
    v10 = *((_QWORD *)this + 2);
  else
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::WebArchive::CheckTypeAndMergeFrom(airdrop_document::WebArchive *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return airdrop_document::WebArchive::MergeFrom(this, lpsrc, v5);
}

uint64_t airdrop_document::WebArchive::IsInitialized(airdrop_document::WebArchive *this)
{
  return 1;
}

_QWORD *airdrop_document::WebArchive::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.WebArchive");
}

uint64_t airdrop_document::Document::GetCachedSize(airdrop_document::Document *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::NoteDocument::GetCachedSize(airdrop_document::NoteDocument *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::NoteDocument1_0::GetCachedSize(airdrop_document::NoteDocument1_0 *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::AttributedString::GetCachedSize(airdrop_document::AttributedString *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::LegacyNoteDocument::GetCachedSize(airdrop_document::LegacyNoteDocument *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::GetCachedSize(airdrop_document::LegacyNoteDocument1_0 *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::WebArchive::GetCachedSize(airdrop_document::WebArchive *this)
{
  return *((unsigned int *)this + 9);
}

void sub_1BDA7DFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA7E4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA7E818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id soft_getCTGreenTeaOsLogHandle(uint64_t a1)
{
  void *v2;
  void *v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getgetCTGreenTeaOsLogHandleSymbolLoc_ptr;
  v9 = getgetCTGreenTeaOsLogHandleSymbolLoc_ptr;
  if (!getgetCTGreenTeaOsLogHandleSymbolLoc_ptr)
  {
    v3 = (void *)libCTGreenTeaLoggerLibrary();
    v2 = dlsym(v3, "getCTGreenTeaOsLogHandle");
    v7[3] = (uint64_t)v2;
    getgetCTGreenTeaOsLogHandleSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (!v2)
  {
    v5 = (_Unwind_Exception *)__35__ICSearchQueryOperation_nlpParser__block_invoke_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  ((void (*)(uint64_t))v2)(a1);
  return (id)objc_claimAutoreleasedReturnValue();
}

const __CFString *NSStringFromICParticipantsFilterSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("me");
  else
    return off_1E76CF068[a1 - 1];
}

id ICLocalizedStringFromICParticipantsFilterSelectionType(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  const __CFString *v4;

  switch((unint64_t)a1)
  {
    case 0uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("me");
      goto LABEL_7;
    case 1uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("anyone");
      goto LABEL_7;
    case 2uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("specific participants");
      goto LABEL_7;
    case 3uLL:
      v3 = (void *)MEMORY[0x1E0D64218];
      v4 = CFSTR("none");
LABEL_7:
      objc_msgSend(v3, "localizedFrameworkStringForKey:value:table:allowSiri:", v4, v4, 0, 1, v1, v2);
      a1 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      return a1;
  }
  return a1;
}

const __CFString *NSStringFromICParticipantsFilterJoinOperator(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("unknown");
  if (a1 == 1)
    v1 = CFSTR("all");
  if (a1 == 2)
    return CFSTR("any");
  else
    return v1;
}

id ICLocalizedStringFromICParticipantsFilterJoinOperator(void *a1)
{
  void *v1;
  const __CFString *v2;
  const __CFString *v3;

  if (a1 == (void *)2)
  {
    v1 = (void *)MEMORY[0x1E0D64218];
    v2 = CFSTR("PERSON_OPERATOR_ANY");
    v3 = CFSTR("any");
    goto LABEL_7;
  }
  if (a1 == (void *)1)
  {
    v1 = (void *)MEMORY[0x1E0D64218];
    v2 = CFSTR("PERSON_OPERATOR_ALL");
    v3 = CFSTR("all");
    goto LABEL_7;
  }
  if (!a1)
  {
    v1 = (void *)MEMORY[0x1E0D64218];
    v2 = CFSTR("PERSON_OPERATOR_UNKNOWN");
    v3 = CFSTR("unknown");
LABEL_7:
    objc_msgSend(v1, "localizedFrameworkStringForKey:value:table:allowSiri:", v2, v3, 0, 1);
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_1BDA81454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA81C04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA81D7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA81E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA826A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA82B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA83A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA83C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA85CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA85DBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA86888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA86A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA86D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA86F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA87004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromICFilterType(unint64_t a1)
{
  if (a1 > 0xA)
    return CFSTR("Unknown");
  else
    return off_1E76CF390[a1];
}

void sub_1BDA872D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA874D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_DWORD *google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(_DWORD *this)
{
  _DWORD *v1;
  uint64_t v2;
  unsigned int v3;

  if (this[7] + this[11] + this[4] - this[2] >= 1)
  {
    v1 = this;
    this = (_DWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)this + 24))(*(_QWORD *)this);
    v2 = *((_QWORD *)v1 + 1);
    v3 = v1[6] - v1[11] + v2 - v1[4];
    *((_QWORD *)v1 + 2) = v2;
    v1[11] = 0;
    *((_QWORD *)v1 + 3) = v3;
  }
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::BytesUntilLimit(google::protobuf::io::CodedInputStream *this)
{
  int v1;

  v1 = *((_DWORD *)this + 10);
  if (v1 == 0x7FFFFFFF)
    return 0xFFFFFFFFLL;
  else
    return (v1
                        - *((_DWORD *)this + 6)
                        + *((_DWORD *)this + 11)
                        + *((_DWORD *)this + 4)
                        - *((_DWORD *)this + 2));
}

void google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(google::protobuf::io::CodedInputStream *this)
{
  std::string *v2;
  std::string *v3;
  std::string *v4;
  char v5;
  std::string v6[2];

  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 180);
  v2 = google::protobuf::internal::LogMessage::operator<<(v6, "A protocol message was rejected because it was too big (more than ");
  v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 12));
  v4 = google::protobuf::internal::LogMessage::operator<<(v3, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, (google::protobuf::internal::LogMessage *)v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
}

void sub_1BDA88324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  _QWORD *v2;
  std::string *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  std::string *v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  BOOL v25;
  int v26;
  char v27;
  int v28;
  uint64_t v29;
  std::string v30[2];

  v2 = (_QWORD *)((char *)this + 8);
  if (*((_DWORD *)this + 4) != *((_DWORD *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 519);
    v3 = google::protobuf::internal::LogMessage::operator<<(v30, "CHECK failed: (0) == (BufferSize()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v29, (google::protobuf::internal::LogMessage *)v3);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
  }
  v4 = *((_DWORD *)this + 11);
  if (v4 > 0 || *((int *)this + 7) > 0 || (v5 = *((_DWORD *)this + 6), v5 == *((_DWORD *)this + 10)))
  {
    v6 = *((_DWORD *)this + 6) - v4;
    v7 = *((_DWORD *)this + 12);
    if (v6 >= v7 && v7 != *((_DWORD *)this + 10))
      google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(this);
    return 0;
  }
  else
  {
    v10 = *((_DWORD *)this + 13);
    if ((v10 & 0x80000000) == 0 && v5 >= v10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 537);
      v11 = google::protobuf::internal::LogMessage::operator<<(v30, "Reading dangerously large protocol message.  If the message turns out to be larger than ");
      v12 = google::protobuf::internal::LogMessage::operator<<(v11, *((_DWORD *)this + 12));
      v13 = google::protobuf::internal::LogMessage::operator<<(v12, " bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v29, (google::protobuf::internal::LogMessage *)v13);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
      *((_DWORD *)this + 13) = -2;
    }
    v29 = 0;
    v28 = 0;
    v14 = *(_QWORD *)this;
    do
    {
      v8 = (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(_QWORD *)v14 + 16))(v14, &v29, &v28);
      if (!(_DWORD)v8)
      {
        *v2 = 0;
        v2[1] = 0;
        return v8;
      }
      v15 = v28;
    }
    while (!v28);
    v16 = v29 + v28;
    *((_QWORD *)this + 1) = v29;
    *((_QWORD *)this + 2) = v16;
    if (v15 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 554);
      v17 = google::protobuf::internal::LogMessage::operator<<(v30, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v27, (google::protobuf::internal::LogMessage *)v17);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
      v15 = v28;
    }
    v18 = *((_DWORD *)this + 6);
    v19 = v18 - (v15 ^ 0x7FFFFFFF);
    if (v18 <= (v15 ^ 0x7FFFFFFF))
    {
      v21 = v15 + v18;
      v20 = *((_QWORD *)this + 2);
    }
    else
    {
      *((_DWORD *)this + 7) = v19;
      v20 = *((_QWORD *)this + 2) - v19;
      *((_QWORD *)this + 2) = v20;
      v21 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v21;
    v22 = *((_DWORD *)this + 10);
    v23 = v20 + *((int *)this + 11);
    *((_QWORD *)this + 2) = v23;
    v24 = *((_DWORD *)this + 12);
    if (v24 >= v22)
      v24 = v22;
    v25 = __OFSUB__(v21, v24);
    v26 = v21 - v24;
    if ((v26 < 0) ^ v25 | (v26 == 0))
      v26 = 0;
    else
      *((_QWORD *)this + 2) = v23 - v26;
    *((_DWORD *)this + 11) = v26;
  }
  return v8;
}

void sub_1BDA88578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadRaw(google::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  int v6;
  const void *v7;
  int v8;
  BOOL v9;

  while (1)
  {
    v6 = a3;
    v7 = (const void *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2) - (_DWORD)v7;
    v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0))
      break;
    memcpy(__dst, v7, v8);
    __dst += v8;
    *((_QWORD *)this + 1) += v8;
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
      return v6 <= v8;
  }
  memcpy(__dst, v7, v6);
  *((_QWORD *)this + 1) += v6;
  return v6 <= v8;
}

BOOL google::protobuf::io::CodedInputStream::ReadString(uint64_t a1, std::string *this, std::string::size_type __n)
{
  unsigned int v3;
  std::string *v4;

  if ((__n & 0x80000000) != 0)
    return 0;
  v3 = __n;
  v4 = this;
  if (*(_DWORD *)(a1 + 16) - *(_DWORD *)(a1 + 8) < (int)__n)
    return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)a1, this, __n);
  std::string::resize(this, __n, 0);
  if (v3)
  {
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v4->__r_.__value_.__l.__size_)
      {
LABEL_11:
        v4 = 0;
        goto LABEL_12;
      }
      v4 = (std::string *)v4->__r_.__value_.__r.__words[0];
    }
    else if (!*((_BYTE *)&v4->__r_.__value_.__s + 23))
    {
      goto LABEL_11;
    }
LABEL_12:
    memcpy(v4, *(const void **)(a1 + 8), v3);
    *(_QWORD *)(a1 + 8) += v3;
  }
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3;
  int v6;
  int v7;
  BOOL v8;
  int v10;
  const std::string::value_type *v11;
  int v12;
  BOOL v13;

  v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((_BYTE *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = 0;
  }
  v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10))
    v6 = *((_DWORD *)this + 10);
  if (v6 != 0x7FFFFFFF)
  {
    v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 4) - *((_DWORD *)this + 2);
    v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1)
      std::string::reserve(a2, __requested_capacity);
  }
  while (1)
  {
    v10 = v3;
    v11 = (const std::string::value_type *)*((_QWORD *)this + 1);
    v12 = *((_QWORD *)this + 2) - (_DWORD)v11;
    v13 = __OFSUB__(v3, v12);
    v3 -= v12;
    if ((v3 < 0) ^ v13 | (v3 == 0))
      break;
    if (v12)
    {
      std::string::append(a2, v11, v12);
      v11 = (const std::string::value_type *)*((_QWORD *)this + 1);
    }
    *((_QWORD *)this + 1) = &v11[v12];
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
      return v10 <= v12;
  }
  std::string::append(a2, v11, v10);
  *((_QWORD *)this + 1) += v10;
  return v10 <= v12;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  unint64_t *v3;
  _BOOL8 result;
  char v5[8];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = (unint64_t *)*((_QWORD *)this + 1);
  if (((*((_DWORD *)this + 4) - (_DWORD)v3) & 0xFFFFFFF8) != 0)
  {
    *((_QWORD *)this + 1) = v3 + 1;
  }
  else
  {
    v3 = (unint64_t *)v5;
    result = google::protobuf::io::CodedInputStream::ReadRaw(this, v5, 8);
    if (!result)
      return result;
  }
  *a2 = *v3;
  return 1;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagSlow(google::protobuf::io::CodedInputStream *this)
{
  char *v2;
  unsigned __int8 *v3;
  unint64_t result;
  int v5;
  BOOL v6;
  unint64_t v7;

  v2 = (char *)*((_QWORD *)this + 1);
  v3 = (unsigned __int8 *)*((_QWORD *)this + 2);
  if (v2 != (char *)v3)
  {
LABEL_4:
    v7 = 0;
    if (v2 >= (char *)v3 || *v2 < 0)
    {
      result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v7);
      if ((_DWORD)result)
        return v7;
    }
    else
    {
      result = *v2;
      *((_QWORD *)this + 1) = v2 + 1;
    }
    return result;
  }
  if (google::protobuf::io::CodedInputStream::Refresh(this))
  {
    v2 = (char *)*((_QWORD *)this + 1);
    v3 = (unsigned __int8 *)*((_QWORD *)this + 2);
    goto LABEL_4;
  }
  v5 = *((_DWORD *)this + 12);
  result = 0;
  v6 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v5 || *((_DWORD *)this + 10) == v5;
  *((_BYTE *)this + 36) = v6;
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint64Slow(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char v7;

  v4 = 0;
  v5 = 0;
  while (v4 != 10)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if (v6 != *((char **)this + 2))
        break;
      if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
        return 0;
    }
    v7 = *v6;
    v5 |= (unint64_t)(*v6 & 0x7F) << (7 * v4);
    *((_QWORD *)this + 1) = v6 + 1;
    ++v4;
    if ((v7 & 0x80) == 0)
    {
      *a2 = v5;
      return 1;
    }
  }
  return 0;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteRaw(google::protobuf::io::CodedOutputStream *this, char *__src, int a3)
{
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t result;

  while (1)
  {
    v6 = *((int *)this + 4);
    v7 = (void *)*((_QWORD *)this + 1);
    if ((int)v6 >= a3)
      break;
    memcpy(v7, __src, v6);
    v8 = *((int *)this + 4);
    a3 -= v8;
    __src += v8;
    result = google::protobuf::io::CodedOutputStream::Refresh(this);
    if ((result & 1) == 0)
      return result;
  }
  result = (uint64_t)memcpy(v7, __src, a3);
  *((_QWORD *)this + 1) += a3;
  *((_DWORD *)this + 4) -= a3;
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteAliasedRaw(google::protobuf::io::CodedOutputStream *this, char *__src, uint64_t a3)
{
  int v6;
  uint64_t result;
  int v8;

  v6 = *((_DWORD *)this + 4);
  if (v6 > (int)a3)
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, __src, a3);
  if (v6 <= 0)
  {
    v8 = *((_DWORD *)this + 5);
  }
  else
  {
    (*(void (**)(void))(**(_QWORD **)this + 24))();
    v8 = *((_DWORD *)this + 5) - *((_DWORD *)this + 4);
    *((_QWORD *)this + 1) = 0;
    *((_DWORD *)this + 4) = 0;
  }
  *((_DWORD *)this + 5) = v8 + a3;
  result = (*(uint64_t (**)(_QWORD, char *, uint64_t))(**(_QWORD **)this + 40))(*(_QWORD *)this, __src, a3);
  *((_BYTE *)this + 24) |= result ^ 1;
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteLittleEndian32(uint64_t this, int a2)
{
  int __src;

  if (*(_DWORD *)(this + 16) < 4u)
  {
    __src = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, (char *)&__src, 4);
  }
  else
  {
    **(_DWORD **)(this + 8) = a2;
    *(_QWORD *)(this + 8) += 4;
    *(_DWORD *)(this + 16) -= 4;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteLittleEndian64(uint64_t this, uint64_t a2)
{
  _QWORD v2[2];

  v2[1] = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(this + 16) < 8u)
  {
    v2[0] = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, (char *)v2, 8);
  }
  else
  {
    **(_QWORD **)(this + 8) = a2;
    *(_QWORD *)(this + 8) += 8;
    *(_DWORD *)(this + 16) -= 8;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteVarint32(uint64_t this, unsigned int a2)
{
  _BYTE *v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  char __src[5];

  if (*(int *)(this + 16) < 5)
  {
    if (a2 < 0x80)
    {
      LODWORD(v4) = 0;
    }
    else
    {
      v4 = 0;
      do
      {
        __src[v4++] = a2 | 0x80;
        v5 = a2 >> 14;
        a2 >>= 7;
      }
      while (v5);
    }
    __src[v4] = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, __src, (int)v4 + 1);
  }
  else
  {
    v2 = *(_BYTE **)(this + 8);
    *v2 = a2 | 0x80;
    if (a2 < 0x80)
    {
      *v2 = a2 & 0x7F;
      v3 = (_DWORD)v2 + 1;
    }
    else
    {
      v2[1] = (a2 >> 7) | 0x80;
      if (a2 < 0x4000)
      {
        v2[1] = (a2 >> 7) & 0x7F;
        v3 = (_DWORD)v2 + 2;
      }
      else
      {
        v2[2] = (a2 >> 14) | 0x80;
        if (a2 < 0x200000)
        {
          v2[2] = (a2 >> 14) & 0x7F;
          v3 = (_DWORD)v2 + 3;
        }
        else
        {
          v2[3] = (a2 >> 21) | 0x80;
          if (a2 >> 28)
          {
            v2[4] = a2 >> 28;
            v3 = (_DWORD)v2 + 5;
          }
          else
          {
            v3 = (_DWORD)v2 + 4;
            v2[3] = (a2 >> 21) & 0x7F;
          }
        }
      }
    }
    v6 = v3 - (_DWORD)v2;
    *(_QWORD *)(this + 8) += v6;
    *(_DWORD *)(this + 16) -= v6;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteVarint64(uint64_t this, unint64_t a2)
{
  _BYTE *v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  char __src[10];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  if (*(int *)(this + 16) >= 10)
  {
    v2 = *(_BYTE **)(this + 8);
    v3 = a2 >> 28;
    if (HIBYTE(a2))
    {
      if (HIBYTE(a2) >= 0x80)
      {
        v2[9] = -127;
        v4 = 10;
      }
      else
      {
        v4 = 9;
      }
      v2[8] = HIBYTE(a2) | 0x80;
    }
    else
    {
      if (!(_DWORD)v3)
      {
        if (!(a2 >> 14))
        {
          if (a2 < 0x80)
          {
            v4 = 1;
            goto LABEL_24;
          }
          v4 = 2;
LABEL_23:
          v2[1] = (a2 >> 7) | 0x80;
LABEL_24:
          *v2 = a2 | 0x80;
          v2[v4 - 1] &= ~0x80u;
          *(_QWORD *)(this + 8) += v4;
          *(_DWORD *)(this + 16) -= v4;
          return this;
        }
        if (a2 < 0x200000)
        {
          v4 = 3;
          goto LABEL_22;
        }
        v4 = 4;
LABEL_21:
        v2[3] = (a2 >> 21) | 0x80;
LABEL_22:
        v2[2] = (a2 >> 14) | 0x80;
        goto LABEL_23;
      }
      if (!(v3 >> 14))
      {
        if (v3 < 0x80)
        {
          v4 = 5;
LABEL_20:
          v2[4] = v3 | 0x80;
          goto LABEL_21;
        }
        v4 = 6;
LABEL_19:
        v2[5] = (a2 >> 35) | 0x80;
        goto LABEL_20;
      }
      if (v3 < 0x200000)
      {
        v4 = 7;
        goto LABEL_18;
      }
      v4 = 8;
    }
    v2[7] = (a2 >> 49) | 0x80;
LABEL_18:
    v2[6] = (a2 >> 42) | 0x80;
    goto LABEL_19;
  }
  if (a2 < 0x80)
  {
    LODWORD(v5) = 0;
  }
  else
  {
    v5 = 0;
    do
    {
      __src[v5++] = a2 | 0x80;
      v6 = a2 >> 14;
      a2 >>= 7;
    }
    while (v6);
  }
  __src[v5] = a2;
  return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, __src, (int)v5 + 1);
}

uint64_t google::protobuf::io::CodedOutputStream::VarintSize32Fallback(google::protobuf::io::CodedOutputStream *this)
{
  int v1;
  int v2;
  unsigned int v3;

  if (this >> 28)
    v1 = 5;
  else
    v1 = 4;
  if (this >= 0x200000)
    v2 = v1;
  else
    v2 = 3;
  if (this >= 0x4000)
    v3 = v2;
  else
    v3 = 2;
  if (this >= 0x80)
    return v3;
  else
    return 1;
}

uint64_t google::protobuf::io::CodedOutputStream::VarintSize64(unint64_t this)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;

  if ((this & 0x8000000000000000) == 0)
    v1 = 9;
  else
    v1 = 10;
  if (HIBYTE(this))
    v2 = v1;
  else
    v2 = 8;
  if (this >> 49)
    v3 = v2;
  else
    v3 = 7;
  if (this >> 42)
    v4 = v3;
  else
    v4 = 6;
  if (this >> 28)
    v5 = 5;
  else
    v5 = 4;
  if (this >= 0x200000)
    v6 = v5;
  else
    v6 = 3;
  if (this >= 0x4000)
    v7 = v6;
  else
    v7 = 2;
  if (this >= 0x80)
    v8 = v7;
  else
    v8 = 1;
  if (this >> 35)
    return v4;
  else
    return v8;
}

void sub_1BDA89618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  uint64_t v56;

  _Block_object_dispose(&a56, 8);
  _Block_object_dispose((const void *)(v56 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA899B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA89FD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA8A5E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA8A7A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  id *v18;
  id *v19;

  a11 = (void **)&a18;
  std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__destroy_vector::operator()[abi:ne180100](&a11);

  _Unwind_Resume(a1);
}

void sub_1BDA8A960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1BDA8AA30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA8AB0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__assign_with_size[abi:ne180100]<std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2;
  v8 = (uint64_t)(a1 + 2);
  v9 = *a1;
  if (a4 > (a1[2] - *a1) >> 5)
  {
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vdeallocate(a1);
    if (a4 >> 59)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v10 = a1[2] - *a1;
    v11 = v10 >> 4;
    if (v10 >> 4 <= a4)
      v11 = a4;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0)
      v12 = 0x7FFFFFFFFFFFFFFLL;
    else
      v12 = v11;
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vallocate[abi:ne180100](a1, v12);
    v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(v8, v6, a3, a1[1]);
LABEL_15:
    a1[1] = v13;
    return;
  }
  v14 = a1[1];
  v15 = (v14 - v9) >> 5;
  if (v15 < a4)
  {
    v16 = a2 + 32 * v15;
    if (v14 != v9)
    {
      v17 = 32 * v15;
      do
      {
        std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](v9, v6);
        v6 += 32;
        v9 += 32;
        v17 -= 32;
      }
      while (v17);
      v9 = a1[1];
    }
    v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(v8, v16, a3, v9);
    goto LABEL_15;
  }
  if (a2 == a3)
  {
    v18 = *a1;
  }
  else
  {
    v18 = *a1;
    do
    {
      std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](v9, v6);
      v6 += 32;
      v9 += 32;
      v18 += 32;
    }
    while (v6 != a3);
  }
  std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, v18);
}

void sub_1BDA8ACA0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, *a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 59)
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  if (a2 == a3)
  {
    v7 = a4;
  }
  else
  {
    v6 = a2;
    v7 = v12;
    do
    {
      *(_QWORD *)v4 = *(id *)v6;
      *(_DWORD *)(v4 + 8) = *(_DWORD *)(v6 + 8);
      *(_DWORD *)(v4 + 16) = *(_DWORD *)(v6 + 16);
      *(_QWORD *)(v4 + 24) = *(id *)(v6 + 24);
      v7 += 32;
      v6 += 32;
      v4 = v7;
    }
    while (v6 != a3);
    v12 = v7;
  }
  v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v7;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(*(_QWORD *)a1, **(_QWORD **)(a1 + 16), **(_QWORD **)(a1 + 16), **(_QWORD **)(a1 + 8), **(_QWORD **)(a1 + 8));
  return a1;
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  void *v7;

  if (a3 != a5)
  {
    v6 = a3;
    do
    {

      v7 = *(void **)(v6 - 32);
      v6 -= 32;

    }
    while (v6 != a5);
  }
}

uint64_t std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](uint64_t a1, uint64_t a2)
{
  objc_storeStrong((id *)a1, *(id *)a2);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  objc_storeStrong((id *)(a1 + 24), *(id *)(a2 + 24));
  return a1;
}

id ICPaperKitBackedAttachmentUTTypes()
{
  if (ICPaperKitBackedAttachmentUTTypes_onceToken != -1)
    dispatch_once(&ICPaperKitBackedAttachmentUTTypes_onceToken, &__block_literal_global_63);
  return (id)ICPaperKitBackedAttachmentUTTypes_types;
}

void sub_1BDA8CFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA8EA84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1BDA91FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA92318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA9277C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA92B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA93F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA94298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDA94604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA9599C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA95EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA97C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA97DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA981F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA98C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDA999C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA9A034(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA9C68C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA9C738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BDA9C860(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA9CA8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA9CB04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA9CB78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA9CBF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA9CC58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA9CCEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDA9CD84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDA9CDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDA9CE94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDA9CF0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDA9D180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1BDA9D398(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA9D5A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA9D648(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA9D83C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDA9DA18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

CRDT::VectorTimestamp_Element *google::protobuf::internal::GenericTypeHandler<CRDT::VectorTimestamp_Element>::New()
{
  CRDT::VectorTimestamp_Element *v0;

  v0 = (CRDT::VectorTimestamp_Element *)operator new();
  CRDT::VectorTimestamp_Element::VectorTimestamp_Element(v0);
  return v0;
}

void sub_1BDA9DAAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C40D780A9F4);
  _Unwind_Resume(a1);
}

void sub_1BDA9DCDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA9E0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDA9E5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::internal::StringTypeHandlerBase::New(google::protobuf::internal::StringTypeHandlerBase *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = 0;
  return result;
}

uint64_t google::protobuf::internal::StringTypeHandlerBase::Delete(uint64_t result)
{
  if (result)
  {
    if (*(char *)(result + 23) < 0)
      operator delete(*(void **)result);
    JUMPOUT(0x1C3B7A848);
  }
  return result;
}

BOOL google::protobuf::internal::WireFormatLite::SkipField(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedInputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  _BOOL8 LittleEndian64Fallback;
  unsigned int v6;
  char *v8;
  char *v9;
  google::protobuf::io::CodedOutputStream *v10;
  google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  std::string *p_p;
  int v18;
  std::string __p;
  std::string::size_type __n;

  LittleEndian64Fallback = 0;
  v6 = a2;
  switch(a2 & 7)
  {
    case 0:
      __p.__r_.__value_.__r.__words[0] = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)&__p))
          goto LABEL_30;
      }
      else
      {
        __p.__r_.__value_.__r.__words[0] = *v8;
        *((_QWORD *)this + 1) = v8 + 1;
      }
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
      google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, __p.__r_.__value_.__r.__words[0]);
      LittleEndian64Fallback = 1;
      break;
    case 1:
      __p.__r_.__value_.__r.__words[0] = 0;
      LittleEndian64Fallback = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)&__p);
      if (LittleEndian64Fallback)
      {
        google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
        google::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, (uint64_t)__p.__r_.__value_.__l.__data_);
      }
      break;
    case 2:
      LODWORD(__n) = 0;
      v9 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, (unsigned int *)&__n))
          goto LABEL_30;
      }
      else
      {
        LODWORD(__n) = *v9;
        *((_QWORD *)this + 1) = v9 + 1;
      }
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, __n);
      memset(&__p, 0, sizeof(__p));
      LittleEndian64Fallback = google::protobuf::io::CodedInputStream::ReadString((uint64_t)this, &__p, __n);
      if (LittleEndian64Fallback)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v18 = __p.__r_.__value_.__r.__words[1];
        google::protobuf::io::CodedOutputStream::WriteRaw(a3, (char *)p_p, v18);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      break;
    case 3:
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
      v12 = *((_DWORD *)this + 14);
      v13 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v12 + 1;
      if (v12 < v13 && google::protobuf::internal::WireFormatLite::SkipMessage(this, a3, v10, v11))
      {
        v14 = *((_DWORD *)this + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)this + 14) = v16;
        LittleEndian64Fallback = *((_DWORD *)this + 8) == (v6 & 0xFFFFFFF8 | 4);
      }
      else
      {
LABEL_30:
        LittleEndian64Fallback = 0;
      }
      break;
    case 5:
      LODWORD(__p.__r_.__value_.__l.__data_) = 0;
      LittleEndian64Fallback = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, (unsigned int *)&__p);
      if (LittleEndian64Fallback)
      {
        google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
        google::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, (int)__p.__r_.__value_.__l.__data_);
      }
      break;
    default:
      return LittleEndian64Fallback;
  }
  return LittleEndian64Fallback;
}

void sub_1BDA9EF98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::WireFormatLite::SkipMessage(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedInputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  char *v6;
  unint64_t TagFallback;
  _BOOL8 v8;

  do
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
    }
    v8 = (_DWORD)TagFallback == 0;
    if (!(_DWORD)TagFallback)
      break;
    if ((TagFallback & 7) == 4)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, TagFallback);
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a2, a4) & 1) != 0);
  return v8;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteInt32(google::protobuf::internal::WireFormatLite *this, signed int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  if (a2 < 0)
    return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
  else
    return google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteInt64(google::protobuf::internal::WireFormatLite *this, unint64_t a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteUInt32(google::protobuf::internal::WireFormatLite *this, unsigned int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  return google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteSInt64(google::protobuf::internal::WireFormatLite *this, uint64_t a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, (2 * a2) ^ (a2 >> 63));
}

uint64_t google::protobuf::internal::WireFormatLite::WriteFloat(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedOutputStream *a2, float a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * (_DWORD)this) | 5);
  return google::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a2, SLODWORD(a3));
}

uint64_t google::protobuf::internal::WireFormatLite::WriteDouble(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedOutputStream *a2, double a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * (_DWORD)this) | 1);
  return google::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a2, *(uint64_t *)&a3);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteString(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  int v5;
  std::string *v6;
  unsigned int v7;
  int v8;
  char *v9;
  int v10;
  char v12;
  std::string v13[2];

  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(_QWORD *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/wire_format_lite.cc", 377);
    v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(_BYTE *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0)
    v7 = v5;
  else
    v7 = *(_DWORD *)(a2 + 8);
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  v8 = *(char *)(a2 + 23);
  if (v8 >= 0)
    v9 = (char *)a2;
  else
    v9 = *(char **)a2;
  if (v8 >= 0)
    v10 = *(unsigned __int8 *)(a2 + 23);
  else
    v10 = *(_DWORD *)(a2 + 8);
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_1BDA9F288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  int v5;
  std::string *v6;
  unsigned int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char v12;
  std::string v13[2];

  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(_QWORD *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/wire_format_lite.cc", 386);
    v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(_BYTE *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0)
    v7 = v5;
  else
    v7 = *(_DWORD *)(a2 + 8);
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  v8 = *(char *)(a2 + 23);
  if (v8 >= 0)
    v9 = (char *)a2;
  else
    v9 = *(char **)a2;
  if (v8 >= 0)
    v10 = *(unsigned __int8 *)(a2 + 23);
  else
    v10 = *(unsigned int *)(a2 + 8);
  if (*((_BYTE *)this + 25))
    return google::protobuf::io::CodedOutputStream::WriteAliasedRaw(this, v9, v10);
  else
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_1BDA9F380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteBytes(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  int v5;
  std::string *v6;
  unsigned int v7;
  int v8;
  char *v9;
  int v10;
  char v12;
  std::string v13[2];

  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(_QWORD *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/wire_format_lite.cc", 393);
    v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(_BYTE *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0)
    v7 = v5;
  else
    v7 = *(_DWORD *)(a2 + 8);
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  v8 = *(char *)(a2 + 23);
  if (v8 >= 0)
    v9 = (char *)a2;
  else
    v9 = *(char **)a2;
  if (v8 >= 0)
    v10 = *(unsigned __int8 *)(a2 + 23);
  else
    v10 = *(_DWORD *)(a2 + 8);
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_1BDA9F464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  int v5;
  std::string *v6;
  unsigned int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char v12;
  std::string v13[2];

  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(_QWORD *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/wire_format_lite.cc", 401);
    v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(_BYTE *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0)
    v7 = v5;
  else
    v7 = *(_DWORD *)(a2 + 8);
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  v8 = *(char *)(a2 + 23);
  if (v8 >= 0)
    v9 = (char *)a2;
  else
    v9 = *(char **)a2;
  if (v8 >= 0)
    v10 = *(unsigned __int8 *)(a2 + 23);
  else
    v10 = *(unsigned int *)(a2 + 8);
  if (*((_BYTE *)this + 25))
    return google::protobuf::io::CodedOutputStream::WriteAliasedRaw(this, v9, v10);
  else
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_1BDA9F55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteMessage(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  unsigned int v5;

  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 96))(a2);
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v5);
  return (*(uint64_t (**)(uint64_t, google::protobuf::io::CodedOutputStream *))(*(_QWORD *)a2 + 80))(a2, this);
}

void sub_1BDA9F8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1BDA9FFC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAA0108(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDAA01AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  topotext::Font::~Font((topotext::Font *)va);
  _Unwind_Resume(a1);
}

void sub_1BDAA0240(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAA02BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDAA0394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  MEMORY[0x1C3B7A848](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1BDAA04E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1BDAA055C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDAA05B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDAA0600(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDAA0684(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BDAA070C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDAA085C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAA0908(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BDAA0970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDAA0A18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1BDAA0BFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDAA0D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1BDAA0E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BDAA0FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1BDAA10D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDAA11C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDAA124C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDAA12F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDAA1350(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDAA13F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDAA14B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1BDAA1608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1BDAA16EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAA18CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDAA1988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDAA19E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1BDAA1B94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAA3714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAA5308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAA57D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAA5EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAA623C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAA65D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAA68F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id NSStringFromICFilterSelectionJoinOperator(void *a1)
{
  void *v1;
  const __CFString *v2;
  const __CFString *v3;

  if (a1 == (void *)1)
  {
    v1 = (void *)MEMORY[0x1E0D64218];
    v2 = CFSTR("FILTER_OPERATOR_ANY");
    v3 = CFSTR("any");
    goto LABEL_5;
  }
  if (!a1)
  {
    v1 = (void *)MEMORY[0x1E0D64218];
    v2 = CFSTR("FILTER_OPERATOR_ALL");
    v3 = CFSTR("all");
LABEL_5:
    objc_msgSend(v1, "localizedFrameworkStringForKey:value:table:allowSiri:", v2, v3, 0, 1);
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_1BDAA8904(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAA89C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDAA8A40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t CRDT::protobuf_ShutdownFile_crframework_2eproto(CRDT *this)
{
  uint64_t result;

  if (CRDT::ObjectID::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::ObjectID::default_instance_ + 8))(CRDT::ObjectID::default_instance_);
  if (CRDT::Timestamp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Timestamp::default_instance_ + 8))(CRDT::Timestamp::default_instance_);
  if (CRDT::RegisterLatest::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::RegisterLatest::default_instance_ + 8))(CRDT::RegisterLatest::default_instance_);
  if (CRDT::VectorTimestamp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::VectorTimestamp::default_instance_ + 8))(CRDT::VectorTimestamp::default_instance_);
  if (CRDT::VectorTimestamp_Element::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::VectorTimestamp_Element::default_instance_ + 8))(CRDT::VectorTimestamp_Element::default_instance_);
  if (CRDT::Dictionary::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Dictionary::default_instance_ + 8))(CRDT::Dictionary::default_instance_);
  if (CRDT::Dictionary_Element::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Dictionary_Element::default_instance_ + 8))(CRDT::Dictionary_Element::default_instance_);
  if (CRDT::Index::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Index::default_instance_ + 8))(CRDT::Index::default_instance_);
  if (CRDT::Index_Element::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Index_Element::default_instance_ + 8))(CRDT::Index_Element::default_instance_);
  if (CRDT::OneOf::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::OneOf::default_instance_ + 8))(CRDT::OneOf::default_instance_);
  if (CRDT::OneOf_Element::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::OneOf_Element::default_instance_ + 8))(CRDT::OneOf_Element::default_instance_);
  if (CRDT::StringArray::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::StringArray::default_instance_ + 8))(CRDT::StringArray::default_instance_);
  if (CRDT::StringArray_ArrayAttachment::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::StringArray_ArrayAttachment::default_instance_ + 8))(CRDT::StringArray_ArrayAttachment::default_instance_);
  if (CRDT::Array::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Array::default_instance_ + 8))(CRDT::Array::default_instance_);
  if (CRDT::OrderedSet::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::OrderedSet::default_instance_ + 8))(CRDT::OrderedSet::default_instance_);
  if (CRDT::Document::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Document::default_instance_ + 8))(CRDT::Document::default_instance_);
  if (CRDT::Document_CustomObject::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Document_CustomObject::default_instance_ + 8))(CRDT::Document_CustomObject::default_instance_);
  if (CRDT::Document_CustomObject_MapEntry::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CRDT::Document_CustomObject_MapEntry::default_instance_ + 8))(CRDT::Document_CustomObject_MapEntry::default_instance_);
  result = CRDT::Document_DocObject::default_instance_;
  if (CRDT::Document_DocObject::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CRDT::Document_DocObject::default_instance_ + 8))(CRDT::Document_DocObject::default_instance_);
  return result;
}

void CRDT::protobuf_AddDesc_crframework_2eproto_impl(CRDT *this, uint64_t a2, uint64_t a3, const char *a4)
{
  topotext *v4;
  CRDT::ObjectID *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  CRDT::StringArray_ArrayAttachment *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CRDT::Document *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", a4);
  topotext::protobuf_AddDesc_topotext_2eproto(v4);
  v5 = (CRDT::ObjectID *)operator new();
  CRDT::ObjectID::ObjectID(v5, v6, v7);
  CRDT::ObjectID::default_instance_ = (uint64_t)v5;
  v8 = operator new();
  *(_QWORD *)v8 = &off_1E76D0130;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  CRDT::Timestamp::default_instance_ = v8;
  v9 = operator new();
  *(_QWORD *)v9 = &off_1E76D01A8;
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  CRDT::RegisterLatest::default_instance_ = v9;
  v10 = operator new();
  *(_QWORD *)v10 = &off_1E76D0298;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_DWORD *)(v10 + 56) = 0;
  CRDT::VectorTimestamp::default_instance_ = v10;
  v11 = operator new();
  *(_QWORD *)v11 = &off_1E76D0220;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_QWORD *)(v11 + 56) = 0;
  CRDT::VectorTimestamp_Element::default_instance_ = v11;
  v12 = operator new();
  *(_QWORD *)v12 = &off_1E76D0388;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_DWORD *)(v12 + 56) = 0;
  CRDT::Dictionary::default_instance_ = v12;
  v13 = operator new();
  *(_QWORD *)v13 = &off_1E76D0310;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  CRDT::Dictionary_Element::default_instance_ = v13;
  v14 = operator new();
  *(_QWORD *)v14 = &off_1E76D0478;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_DWORD *)(v14 + 56) = 0;
  CRDT::Index::default_instance_ = v14;
  v15 = operator new();
  *(_QWORD *)v15 = &off_1E76D0400;
  *(_OWORD *)(v15 + 8) = 0u;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  CRDT::Index_Element::default_instance_ = v15;
  v16 = operator new();
  *(_QWORD *)v16 = &off_1E76D0568;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_DWORD *)(v16 + 56) = 0;
  CRDT::OneOf::default_instance_ = v16;
  v17 = operator new();
  *(_QWORD *)v17 = &off_1E76D04F0;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  CRDT::OneOf_Element::default_instance_ = v17;
  v18 = operator new();
  *(_QWORD *)v18 = &off_1E76D0658;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_OWORD *)(v18 + 52) = 0u;
  CRDT::StringArray::default_instance_ = v18;
  v19 = (CRDT::StringArray_ArrayAttachment *)operator new();
  CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(v19, v20, v21);
  CRDT::StringArray_ArrayAttachment::default_instance_ = (uint64_t)v19;
  v22 = operator new();
  *(_QWORD *)v22 = &off_1E76D06D0;
  *(_OWORD *)(v22 + 8) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  *(_OWORD *)(v22 + 40) = 0u;
  CRDT::Array::default_instance_ = v22;
  v23 = operator new();
  *(_QWORD *)v23 = &off_1E76D0748;
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  *(_OWORD *)(v23 + 40) = 0u;
  CRDT::OrderedSet::default_instance_ = v23;
  v24 = (CRDT::Document *)operator new();
  CRDT::Document::Document(v24, v25, v26);
  CRDT::Document::default_instance_ = (uint64_t)v24;
  v27 = operator new();
  *(_QWORD *)v27 = &off_1E76D0838;
  *(_DWORD *)(v27 + 64) = 0;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  *(_OWORD *)(v27 + 40) = 0u;
  *(_DWORD *)(v27 + 56) = 0;
  CRDT::Document_CustomObject::default_instance_ = v27;
  v28 = operator new();
  *(_QWORD *)v28 = &off_1E76D07C0;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  *(_OWORD *)(v28 + 36) = 0u;
  CRDT::Document_CustomObject_MapEntry::default_instance_ = v28;
  v29 = operator new();
  *(_QWORD *)v29 = &off_1E76D08B0;
  *(_DWORD *)(v29 + 48) = 0;
  *(_OWORD *)(v29 + 8) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  CRDT::Document_DocObject::default_instance_ = v29;
  v30 = CRDT::RegisterLatest::default_instance_;
  v31 = CRDT::Timestamp::default_instance_;
  v32 = CRDT::ObjectID::default_instance_;
  *(_QWORD *)(CRDT::RegisterLatest::default_instance_ + 40) = CRDT::Timestamp::default_instance_;
  *(_QWORD *)(v30 + 48) = v32;
  v33 = (_QWORD *)CRDT::Dictionary_Element::default_instance_;
  *(_QWORD *)(CRDT::Dictionary_Element::default_instance_ + 40) = v32;
  v33[6] = v32;
  v34 = CRDT::VectorTimestamp::default_instance_;
  v33[7] = CRDT::VectorTimestamp::default_instance_;
  v33[8] = v30;
  v35 = CRDT::OneOf_Element::default_instance_;
  *(_QWORD *)(CRDT::OneOf_Element::default_instance_ + 40) = v32;
  *(_QWORD *)(v35 + 48) = v31;
  v36 = CRDT::StringArray::default_instance_;
  *(_QWORD *)(CRDT::StringArray::default_instance_ + 40) = topotext::String::default_instance_;
  v37 = CRDT::Array::default_instance_;
  v38 = CRDT::Dictionary::default_instance_;
  *(_QWORD *)(CRDT::Array::default_instance_ + 40) = v36;
  *(_QWORD *)(v37 + 48) = v38;
  v39 = CRDT::OrderedSet::default_instance_;
  *(_QWORD *)(CRDT::OrderedSet::default_instance_ + 40) = v37;
  *(_QWORD *)(v39 + 48) = v38;
  v40 = CRDT::Document::default_instance_;
  *(_QWORD *)(CRDT::Document::default_instance_ + 40) = v34;
  *(_QWORD *)(v40 + 48) = v34;
  *(_QWORD *)(v40 + 152) = topotext::VectorTimestamp::default_instance_;
  *(_QWORD *)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40) = v32;
  google::protobuf::internal::OnShutdown((google::protobuf::internal *)CRDT::protobuf_ShutdownFile_crframework_2eproto, v41);
}

void sub_1BDAA9164(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  MEMORY[0x1C3B7A848](v2, 0x10B3C408ACEAB29);
  _Unwind_Resume(a1);
}

double CRDT::Timestamp::Timestamp(CRDT::Timestamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0130;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::RegisterLatest::RegisterLatest(CRDT::RegisterLatest *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D01A8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::VectorTimestamp::VectorTimestamp(CRDT::VectorTimestamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0298;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::VectorTimestamp_Element::VectorTimestamp_Element(CRDT::VectorTimestamp_Element *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0220;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

double CRDT::Dictionary::Dictionary(CRDT::Dictionary *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0388;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::Dictionary_Element::Dictionary_Element(CRDT::Dictionary_Element *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0310;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

double CRDT::Index::Index(CRDT::Index *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0478;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::Index_Element::Index_Element(CRDT::Index_Element *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0400;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::OneOf::OneOf(CRDT::OneOf *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0568;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::OneOf_Element::OneOf_Element(CRDT::OneOf_Element *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D04F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::StringArray::StringArray(CRDT::StringArray *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0658;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double CRDT::Array::Array(CRDT::Array *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D06D0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::OrderedSet::OrderedSet(CRDT::OrderedSet *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0748;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::Document_CustomObject::Document_CustomObject(CRDT::Document_CustomObject *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D0838;
  *((_DWORD *)this + 16) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::Document_CustomObject_MapEntry::Document_CustomObject_MapEntry(CRDT::Document_CustomObject_MapEntry *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D07C0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CRDT::Document_DocObject::Document_DocObject(CRDT::Document_DocObject *this)
{
  double result;

  *(_QWORD *)this = &off_1E76D08B0;
  *((_DWORD *)this + 12) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

void CRDT::protobuf_AddDesc_crframework_2eproto(CRDT *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CRDT::protobuf_AddDesc_crframework_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &off_1E76C9A40;
    v2[1] = CRDT::protobuf_AddDesc_crframework_2eproto_impl;
    v3 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&CRDT::protobuf_AddDesc_crframework_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1BDAA9450(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CRDT::ObjectID *CRDT::ObjectID::ObjectID(CRDT::ObjectID *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76D00B8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CRDT::ObjectID::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BDAA94A8(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void CRDT::ObjectID::SharedCtor(CRDT::ObjectID *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v5[2];
  char v6;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v5[0] = &off_1E76C9A40;
    v5[1] = google::protobuf::internal::InitEmptyString;
    v6 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 12) = 0;
}

void sub_1BDAA9554(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *CRDT::ObjectID::MergeFrom(CRDT::ObjectID *this, const CRDT::ObjectID *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  const std::string *v8;
  int v9;
  std::string *v10;
  int v11;
  const std::string::value_type *v12;
  char *v13;
  const std::string::value_type *v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  char v19;
  std::string v20[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 447);
    v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 1:
      v5 = *((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) == 1)
        goto LABEL_9;
      CRDT::ObjectID::clear_contents((uint64_t)this);
      v6 = 1;
      goto LABEL_8;
    case 2:
      v5 = *((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) != 2)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        v6 = 2;
LABEL_8:
        *((_DWORD *)this + 12) = v6;
      }
LABEL_9:
      *((_QWORD *)this + 5) = v5;
      goto LABEL_23;
    case 3:
      v7 = *((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) != 3)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 3;
      }
      *((_QWORD *)this + 5) = v7;
      goto LABEL_23;
    case 4:
      v8 = (const std::string *)*((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) == 4)
        goto LABEL_16;
      CRDT::ObjectID::clear_contents((uint64_t)this);
      v9 = 4;
      goto LABEL_21;
    case 5:
      v8 = (const std::string *)*((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) == 5)
      {
LABEL_16:
        v10 = (std::string *)*((_QWORD *)this + 5);
      }
      else
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        v9 = 5;
LABEL_21:
        *((_DWORD *)this + 12) = v9;
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 5) = v10;
      }
      std::string::operator=(v10, v8);
LABEL_23:
      v14 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      v13 = (char *)a2 + 8;
      v12 = v14;
      v15 = v13[23];
      if (v15 >= 0)
        v16 = v13;
      else
        v16 = v12;
      if (v15 >= 0)
        v17 = v13[23];
      else
        v17 = *((_QWORD *)v13 + 1);
      return std::string::append((std::string *)((char *)this + 8), v16, v17);
    case 6:
      v11 = *((_DWORD *)a2 + 10);
      if (*((_DWORD *)this + 12) != 6)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 6;
      }
      *((_DWORD *)this + 10) = v11;
      goto LABEL_23;
    default:
      goto LABEL_23;
  }
}

void sub_1BDAA973C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::ObjectID::~ObjectID(CRDT::ObjectID *this)
{
  CRDT::ObjectID *v1;

  v1 = this;
  *(_QWORD *)this = &off_1E76D00B8;
  if (*((_DWORD *)this + 12))
    this = (CRDT::ObjectID *)CRDT::ObjectID::clear_contents((uint64_t)this);
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if (*((char *)v1 + 31) < 0)
    operator delete(*((void **)v1 + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v1);
}

{
  CRDT::ObjectID::~ObjectID(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t CRDT::ObjectID::clear_contents(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  v2 = *(_DWORD *)(this + 48);
  if (v2 == 5 || v2 == 4)
  {
    v3 = *(_QWORD *)(this + 40);
    if (v3)
    {
      if (*(char *)(v3 + 23) < 0)
        operator delete(*(void **)v3);
      this = MEMORY[0x1C3B7A848](v3, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

CRDT::ObjectID *CRDT::ObjectID::New(CRDT::ObjectID *this)
{
  CRDT::ObjectID *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (CRDT::ObjectID *)operator new();
  CRDT::ObjectID::ObjectID(v1, v2, v3);
  return v1;
}

void sub_1BDAA9870(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::ObjectID::Clear(CRDT::ObjectID *this)
{
  uint64_t result;

  result = CRDT::ObjectID::clear_contents((uint64_t)this);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((_BYTE **)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
  }
  else
  {
    *((_BYTE *)this + 8) = 0;
    *((_BYTE *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::ObjectID::MergePartialFromCodedStream(CRDT::ObjectID *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  _QWORD *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  _BYTE *v13;
  BOOL v14;
  std::string *v15;
  unint64_t v16;
  char *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  std::string *v21;
  _BYTE *v22;
  unint64_t v23;
  char *v24;
  unsigned __int8 *v25;
  uint64_t v26;
  _BYTE v28[32];
  unint64_t v29[2];
  unint64_t v30;

  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  v5 = (_QWORD *)((char *)this + 40);
  while (2)
  {
    while (1)
    {
      v6 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 < *((_QWORD *)a2 + 2) && (char)*v6 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_11:
      if ((_DWORD)v8)
        v14 = (v8 & 7) == 4;
      else
        v14 = 1;
      if (v14)
      {
LABEL_70:
        v26 = 1;
        goto LABEL_71;
      }
LABEL_29:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_69;
    }
    v7 = *v6;
    *((_DWORD *)a2 + 8) = v7;
    *((_QWORD *)a2 + 1) = v6 + 1;
    v8 = v7 | 0x100000000;
LABEL_6:
    switch(v8 >> 3)
    {
      case 1u:
        if ((_DWORD)v8 != 8)
          goto LABEL_27;
        CRDT::ObjectID::clear_contents((uint64_t)this);
        v30 = 0;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v30))
            goto LABEL_69;
          v12 = v30;
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v11;
          v13 = v11 + 1;
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_QWORD *)this + 5) = -(uint64_t)(v12 & 1) ^ (v12 >> 1);
        *((_DWORD *)this + 12) = 1;
        if ((unint64_t)v13 >= v10 || *v13 != 16)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_36:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_69;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v17;
          v18 = v17 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 12) = 2;
        if ((unint64_t)v18 >= v16 || *v18 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_44:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        v30 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v30))
          goto LABEL_69;
        *((_QWORD *)this + 5) = v30;
        *((_DWORD *)this + 12) = 3;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_48:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 4;
        v15 = (std::string *)operator new();
        v15->__r_.__value_.__r.__words[0] = 0;
        v15->__r_.__value_.__l.__size_ = 0;
        v15->__r_.__value_.__r.__words[2] = 0;
        *v5 = v15;
LABEL_49:
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v15))
          goto LABEL_69;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_53:
        if (*((_DWORD *)this + 12) == 5)
        {
          v21 = (std::string *)*v5;
        }
        else
        {
          CRDT::ObjectID::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 5;
          v21 = (std::string *)operator new();
          v21->__r_.__value_.__r.__words[0] = 0;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          *v5 = v21;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v21))
          goto LABEL_69;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 48)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_60:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        v24 = (char *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))
          {
LABEL_69:
            v26 = 0;
            goto LABEL_71;
          }
          v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v23 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *(_DWORD *)v5 = *v24;
          v25 = (unsigned __int8 *)(v24 + 1);
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 12) = 6;
        if (v25 != (unsigned __int8 *)v23 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        v26 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_71:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
        return v26;
      case 2u:
        if ((_DWORD)v8 == 16)
          goto LABEL_36;
        goto LABEL_27;
      case 3u:
        if ((_DWORD)v8 == 25)
          goto LABEL_44;
        goto LABEL_27;
      case 4u:
        if ((_DWORD)v8 != 34)
          goto LABEL_27;
        if (*((_DWORD *)this + 12) != 4)
          goto LABEL_48;
        v15 = (std::string *)*v5;
        goto LABEL_49;
      case 5u:
        if ((_DWORD)v8 == 42)
          goto LABEL_53;
        goto LABEL_27;
      case 6u:
        if ((_DWORD)v8 == 48)
          goto LABEL_60;
LABEL_27:
        if ((_DWORD)v8 && (v8 & 7) != 4)
          goto LABEL_29;
        goto LABEL_70;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1BDAA9CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::ObjectID::SerializeWithCachedSizes(CRDT::ObjectID *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 12);
  if (v6 == 1)
  {
    google::protobuf::internal::WireFormatLite::WriteSInt64((google::protobuf::internal::WireFormatLite *)1, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 2)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 3)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, *((double *)this + 5), a3);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 4)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 5)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(5, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 6)
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)this + 10), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::ObjectID::ByteSize(CRDT::ObjectID *this)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  google::protobuf::io::CodedOutputStream *v11;
  int v12;
  uint64_t v13;
  uint64_t result;

  switch(*((_DWORD *)this + 12))
  {
    case 1:
      v8 = (2 * *((_QWORD *)this + 5)) ^ (*((uint64_t *)this + 5) >> 63);
      goto LABEL_9;
    case 2:
      v8 = *((_QWORD *)this + 5);
LABEL_9:
      v9 = google::protobuf::io::CodedOutputStream::VarintSize64(v8);
      goto LABEL_19;
    case 3:
      v10 = 9;
      goto LABEL_20;
    case 4:
    case 5:
      v2 = *((_QWORD *)this + 5);
      v3 = *(unsigned __int8 *)(v2 + 23);
      v4 = v3;
      v5 = *(_QWORD *)(v2 + 8);
      if ((v3 & 0x80u) == 0)
        v6 = *(unsigned __int8 *)(v2 + 23);
      else
        v6 = v5;
      if (v6 >= 0x80)
      {
        v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v6);
        v3 = *(unsigned __int8 *)(v2 + 23);
        v5 = *(_QWORD *)(v2 + 8);
        v7 = v12 + 1;
        v4 = *(_BYTE *)(v2 + 23);
      }
      else
      {
        v7 = 2;
      }
      if (v4 < 0)
        v3 = v5;
      v10 = v7 + v3;
      goto LABEL_20;
    case 6:
      v11 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if (v11 >= 0x80)
      {
        v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
LABEL_19:
        v10 = v9 + 1;
      }
      else
      {
        v10 = 2;
      }
LABEL_20:
      if (*((char *)this + 31) < 0)
        v13 = *((_QWORD *)this + 2);
      else
        LODWORD(v13) = *((unsigned __int8 *)this + 31);
      result = (v10 + v13);
      *((_DWORD *)this + 9) = result;
      return result;
    default:
      v10 = 0;
      goto LABEL_20;
  }
}

std::string *CRDT::ObjectID::CheckTypeAndMergeFrom(CRDT::ObjectID *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::ObjectID::MergeFrom(this, lpsrc);
}

uint64_t CRDT::ObjectID::IsInitialized(CRDT::ObjectID *this)
{
  return 1;
}

_QWORD *CRDT::ObjectID::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.ObjectID");
}

std::string *CRDT::Timestamp::MergeFrom(CRDT::Timestamp *this, const CRDT::Timestamp *a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 706);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 5) = v6;
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *((_QWORD *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      *((_QWORD *)this + 6) = v7;
    }
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BDAAA01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Timestamp::~Timestamp(void **this)
{
  *this = &off_1E76D0130;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::Timestamp::~Timestamp(this);
  JUMPOUT(0x1C3B7A848);
}

double CRDT::Timestamp::New(CRDT::Timestamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0130;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CRDT::Timestamp::Clear(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Timestamp::MergePartialFromCodedStream(CRDT::Timestamp *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  BOOL v12;
  char *v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  _BYTE v18[32];
  unint64_t v19[2];
  unint64_t v20;

  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_12;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
        break;
      if (v7 >> 3 == 1)
      {
        if ((_DWORD)v7 != 8)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_38;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_QWORD *)this + 5) = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v13 = v11 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if ((_DWORD)v7)
          v12 = (v7 & 7) == 4;
        else
          v12 = 1;
        if (v12)
        {
LABEL_37:
          v16 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_38;
      }
    }
    if ((_DWORD)v7 != 16)
    {
LABEL_19:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_37;
      goto LABEL_16;
    }
    v13 = (char *)*((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
LABEL_28:
    v20 = 0;
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      v14 = *v13;
      v15 = (unsigned __int8 *)(v13 + 1);
      *((_QWORD *)a2 + 1) = v15;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20))
      break;
    v14 = v20;
    v15 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
LABEL_33:
    *((_QWORD *)this + 6) = v14;
    *((_DWORD *)this + 8) |= 2u;
    if (v15 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v16 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  v16 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1BDAAA318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Timestamp::SerializeWithCachedSizes(CRDT::Timestamp *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((_QWORD *)this + 6), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Timestamp::ByteSize(CRDT::Timestamp *this)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_8;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v2 = 0;
  if ((*((_BYTE *)this + 32) & 2) != 0)
LABEL_7:
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 6)) + 1;
LABEL_8:
  if (*((char *)this + 31) < 0)
    v3 = *((_QWORD *)this + 2);
  else
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  result = (v2 + v3);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Timestamp::CheckTypeAndMergeFrom(CRDT::Timestamp *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Timestamp::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Timestamp::IsInitialized(CRDT::Timestamp *this)
{
  return 1;
}

_QWORD *CRDT::Timestamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Timestamp");
}

std::string *CRDT::RegisterLatest::MergeFrom(CRDT::RegisterLatest *this, const CRDT::RegisterLatest *a2)
{
  CRDT::RegisterLatest *v3;
  std::string *v4;
  int v5;
  CRDT::Timestamp *v6;
  const CRDT::Timestamp *v7;
  CRDT::ObjectID *v8;
  uint64_t v9;
  uint64_t v10;
  const CRDT::ObjectID *v11;
  const std::string::value_type *v12;
  char *v13;
  const std::string::value_type *v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  char v19;
  std::string v20[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 949);
    v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CRDT::Timestamp *)*((_QWORD *)v3 + 5);
      if (!v6)
      {
        this = (CRDT::RegisterLatest *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E76D0130;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_QWORD *)v3 + 5) = this;
      }
      v7 = (const CRDT::Timestamp *)*((_QWORD *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v7 = *(const CRDT::Timestamp **)(CRDT::RegisterLatest::default_instance_ + 40);
      }
      this = (CRDT::RegisterLatest *)CRDT::Timestamp::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      v8 = (CRDT::ObjectID *)*((_QWORD *)v3 + 6);
      if (!v8)
      {
        v8 = (CRDT::ObjectID *)operator new();
        this = CRDT::ObjectID::ObjectID(v8, v9, v10);
        *((_QWORD *)v3 + 6) = v8;
      }
      v11 = (const CRDT::ObjectID *)*((_QWORD *)a2 + 6);
      if (!v11)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v11 = *(const CRDT::ObjectID **)(CRDT::RegisterLatest::default_instance_ + 48);
      }
      CRDT::ObjectID::MergeFrom(v8, v11);
    }
  }
  v14 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v13 = (char *)a2 + 8;
  v12 = v14;
  v15 = v13[23];
  if (v15 >= 0)
    v16 = v13;
  else
    v16 = v12;
  if (v15 >= 0)
    v17 = v13[23];
  else
    v17 = *((_QWORD *)v13 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v16, v17);
}

void sub_1BDAAA5FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::RegisterLatest::~RegisterLatest(void **this)
{
  *this = &off_1E76D01A8;
  CRDT::RegisterLatest::SharedDtor((CRDT::RegisterLatest *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::RegisterLatest::~RegisterLatest(this);
  JUMPOUT(0x1C3B7A848);
}

void CRDT::RegisterLatest::SharedDtor(CRDT::RegisterLatest *this)
{
  uint64_t v2;
  uint64_t v3;

  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::RegisterLatest *)CRDT::RegisterLatest::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CRDT::RegisterLatest::default_instance(CRDT::RegisterLatest *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::RegisterLatest::default_instance_;
}

double CRDT::RegisterLatest::New(CRDT::RegisterLatest *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D01A8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CRDT::RegisterLatest::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 40);
      if (v3)
      {
        *(_QWORD *)(v3 + 40) = 0;
        *(_QWORD *)(v3 + 48) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 32) & 2) != 0)
    {
      v4 = *(_QWORD *)(this + 48);
      if (v4)
      {
        this = CRDT::ObjectID::clear_contents(*(_QWORD *)(this + 48));
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(_BYTE **)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v4 + 8) = 0;
          *(_BYTE *)(v4 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::RegisterLatest::MergePartialFromCodedStream(CRDT::RegisterLatest *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  uint64_t v9;
  char *v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  CRDT::ObjectID *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  _BYTE v30[32];
  _QWORD v31[2];
  unsigned int v32;

  google::protobuf::io::StringOutputStream::StringOutputStream(v31, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30, (google::protobuf::io::ZeroCopyOutputStream *)v31);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        break;
    }
    else
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if ((_DWORD)v7 == 18)
        goto LABEL_33;
      goto LABEL_21;
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      v9 = *((_QWORD *)this + 5);
      if (!v9)
      {
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E76D0130;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *((_QWORD *)this + 5) = v9;
      }
      v32 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))
          goto LABEL_48;
      }
      else
      {
        v32 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      v12 = *((_DWORD *)a2 + 14);
      v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13)
        goto LABEL_48;
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
      if (!CRDT::Timestamp::MergePartialFromCodedStream((CRDT::Timestamp *)v9, a2)
        || !*((_BYTE *)a2 + 36))
      {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      v15 = *((_DWORD *)a2 + 14);
      v16 = __OFSUB__(v15, 1);
      v17 = v15 - 1;
      if (v17 < 0 == v16)
        *((_DWORD *)a2 + 14) = v17;
      v18 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v18 < *((_QWORD *)a2 + 2) && *v18 == 18)
      {
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        v19 = (CRDT::ObjectID *)*((_QWORD *)this + 6);
        if (!v19)
        {
          v19 = (CRDT::ObjectID *)operator new();
          CRDT::ObjectID::ObjectID(v19, v20, v21);
          *((_QWORD *)this + 6) = v19;
        }
        v32 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))
            goto LABEL_48;
        }
        else
        {
          v32 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24
          || (v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32),
              !CRDT::ObjectID::MergePartialFromCodedStream(v19, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_48:
          v28 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v25);
        v26 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v26, 1);
        v27 = v26 - 1;
        if (v27 < 0 == v16)
          *((_DWORD *)a2 + 14) = v27;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          v28 = 1;
          *((_BYTE *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_49;
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v30, v4))goto LABEL_48;
    }
  }
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_18;
LABEL_49:
  v28 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v31);
  return v28;
}

void sub_1BDAAAB44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::RegisterLatest::SerializeWithCachedSizes(CRDT::RegisterLatest *this, google::protobuf::io::CodedOutputStream *a2)
{
  CRDT::RegisterLatest *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v5 = *(_QWORD *)(CRDT::RegisterLatest::default_instance_ + 40);
    }
    this = (CRDT::RegisterLatest *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_QWORD *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v6 = *(_QWORD *)(CRDT::RegisterLatest::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)v3 + 1);
    v8 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v7 = (char *)v3 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::RegisterLatest::ByteSize(CRDT::RegisterLatest *this)
{
  int v2;
  CRDT::Timestamp *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  CRDT::ObjectID *v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (CRDT::Timestamp *)*((_QWORD *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    v3 = *(CRDT::Timestamp **)(CRDT::RegisterLatest::default_instance_ + 40);
  }
  v4 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    v7 = (CRDT::ObjectID *)*((_QWORD *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v7 = *(CRDT::ObjectID **)(CRDT::RegisterLatest::default_instance_ + 48);
    }
    v8 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::RegisterLatest::CheckTypeAndMergeFrom(CRDT::RegisterLatest *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::RegisterLatest::MergeFrom(this, lpsrc);
}

uint64_t CRDT::RegisterLatest::IsInitialized(CRDT::RegisterLatest *this)
{
  return 1;
}

_QWORD *CRDT::RegisterLatest::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.RegisterLatest");
}

std::string *CRDT::VectorTimestamp_Element::MergeFrom(CRDT::VectorTimestamp_Element *this, const CRDT::VectorTimestamp_Element *a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  const std::string::value_type *v7;
  char *v8;
  const std::string::value_type *v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  std::string v17[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 1216);
    v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v14 = *((_QWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 5) = v14;
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_8;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v15 = *((_QWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_QWORD *)this + 6) = v15;
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      v6 = *((_QWORD *)a2 + 7);
      *((_DWORD *)this + 8) |= 4u;
      *((_QWORD *)this + 7) = v6;
    }
  }
LABEL_8:
  v9 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v8 = (char *)a2 + 8;
  v7 = v9;
  v10 = v8[23];
  if (v10 >= 0)
    v11 = v8;
  else
    v11 = v7;
  if (v10 >= 0)
    v12 = v8[23];
  else
    v12 = *((_QWORD *)v8 + 1);
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1BDAAAE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::VectorTimestamp_Element::~VectorTimestamp_Element(void **this)
{
  *this = &off_1E76D0220;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::VectorTimestamp_Element::~VectorTimestamp_Element(this);
  JUMPOUT(0x1C3B7A848);
}

double CRDT::VectorTimestamp_Element::New(CRDT::VectorTimestamp_Element *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0220;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CRDT::VectorTimestamp_Element::Clear(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::VectorTimestamp_Element::MergePartialFromCodedStream(CRDT::VectorTimestamp_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  BOOL v13;
  char *v14;
  char *v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  _BYTE v20[32];
  _QWORD v21[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_13;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      v9 = v7 >> 3;
      if (v7 >> 3 == 3)
        break;
      if (v9 == 2)
      {
        if ((_DWORD)v7 == 16)
        {
          v15 = (char *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_32;
        }
LABEL_22:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_49;
        goto LABEL_24;
      }
      if (v9 == 1)
      {
        if ((_DWORD)v7 != 8)
          goto LABEL_22;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_50;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_QWORD *)this + 5) = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          v15 = v12 + 1;
          *((_QWORD *)a2 + 1) = v15;
LABEL_32:
          if ((unint64_t)v15 >= v10 || *v15 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 6))goto LABEL_50;
            v16 = (_BYTE *)*((_QWORD *)a2 + 1);
            v10 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *((_QWORD *)this + 6) = *v15;
            v16 = v15 + 1;
            *((_QWORD *)a2 + 1) = v16;
          }
          *((_DWORD *)this + 8) |= 2u;
          if ((unint64_t)v16 < v10 && *v16 == 24)
          {
            v14 = v16 + 1;
            *((_QWORD *)a2 + 1) = v14;
            goto LABEL_40;
          }
        }
      }
      else
      {
LABEL_13:
        if ((_DWORD)v7)
          v13 = (v7 & 7) == 4;
        else
          v13 = 1;
        if (v13)
        {
LABEL_49:
          v18 = 1;
          goto LABEL_51;
        }
LABEL_24:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))goto LABEL_50;
      }
    }
    if ((_DWORD)v7 != 24)
      goto LABEL_22;
    v14 = (char *)*((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
LABEL_40:
    if ((unint64_t)v14 < v10 && (*v14 & 0x80000000) == 0)
    {
      *((_QWORD *)this + 7) = *v14;
      v17 = (unsigned __int8 *)(v14 + 1);
      *((_QWORD *)a2 + 1) = v17;
      goto LABEL_45;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 7))
      break;
    v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
LABEL_45:
    *((_DWORD *)this + 8) |= 4u;
    if (v17 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v18 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_51;
    }
  }
LABEL_50:
  v18 = 0;
LABEL_51:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v18;
}

void sub_1BDAAB1E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::VectorTimestamp_Element::SerializeWithCachedSizes(CRDT::VectorTimestamp_Element *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((_QWORD *)this + 6), a2, a4);
  if ((*((_DWORD *)this + 8) & 4) != 0)
LABEL_4:
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)3, *((_QWORD *)this + 7), a2, a4);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::VectorTimestamp_Element::ByteSize(CRDT::VectorTimestamp_Element *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_10;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 5)) + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
LABEL_7:
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 6)) + 1;
    v2 = *((_DWORD *)this + 8);
  }
LABEL_8:
  if ((v2 & 4) != 0)
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 7)) + 1;
LABEL_10:
  if (*((char *)this + 31) < 0)
    v4 = *((_QWORD *)this + 2);
  else
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  result = (v3 + v4);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::VectorTimestamp_Element::CheckTypeAndMergeFrom(CRDT::VectorTimestamp_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::VectorTimestamp_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::VectorTimestamp_Element::IsInitialized(CRDT::VectorTimestamp_Element *this)
{
  return 1;
}

_QWORD *CRDT::VectorTimestamp_Element::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.VectorTimestamp.Element");
}

std::string *CRDT::VectorTimestamp::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  const std::string::value_type *v5;
  int32x2_t *v6;
  int32x2_t v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  char v12;
  std::string v13[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 1414);
    v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>(this + 5, a2 + 5);
  v7 = a2[1];
  v6 = a2 + 1;
  v5 = (const std::string::value_type *)v7;
  v8 = v6[2].i8[7];
  if (v8 >= 0)
    v9 = (const std::string::value_type *)v6;
  else
    v9 = v5;
  if (v8 >= 0)
    v10 = v6[2].u8[7];
  else
    v10 = (std::string::size_type)v6[1];
  return std::string::append((std::string *)&this[1], v9, v10);
}

void sub_1BDAAB42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::VectorTimestamp::~VectorTimestamp(CRDT::VectorTimestamp *this)
{
  *(_QWORD *)this = &off_1E76D0298;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  CRDT::VectorTimestamp::~VectorTimestamp(this);
  JUMPOUT(0x1C3B7A848);
}

double CRDT::VectorTimestamp::New(CRDT::VectorTimestamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0298;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CRDT::VectorTimestamp::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(int *)(this + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::VectorTimestamp::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  uint64_t v12;
  int32x2_t v13;
  int32x2_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  _BYTE *v23;
  BOOL v24;
  uint64_t v25;
  _BYTE v27[32];
  _QWORD v28[2];
  unsigned int v29;

  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 != 10)
        break;
      while (1)
      {
        v9 = this[6].i32[1];
        v10 = this[6].i32[0];
        if ((int)v10 >= v9)
        {
          if (v9 == this[7].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[5], v9 + 1);
          v12 = operator new();
          *(_QWORD *)v12 = &off_1E76D0220;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *(_OWORD *)(v12 + 40) = 0u;
          *(_QWORD *)(v12 + 56) = 0;
          v13 = this[5];
          v14 = this[6];
          this[6] = vadd_s32(v14, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
        }
        else
        {
          v11 = this[5];
          this[6].i32[0] = v10 + 1;
          v12 = *(_QWORD *)(*(_QWORD *)&v11 + 8 * v10);
        }
        v29 = 0;
        v15 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
            goto LABEL_37;
        }
        else
        {
          v29 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        v16 = *((_DWORD *)a2 + 14);
        v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17
          || (v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29),
              !CRDT::VectorTimestamp_Element::MergePartialFromCodedStream((CRDT::VectorTimestamp_Element *)v12, a2))|| !*((_BYTE *)a2 + 36))
        {
LABEL_37:
          v25 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v18);
        v19 = *((_DWORD *)a2 + 14);
        v20 = __OFSUB__(v19, 1);
        v21 = v19 - 1;
        if (v21 < 0 == v20)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        v23 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v22 >= v23 || *v22 != 10)
          break;
        *((_QWORD *)a2 + 1) = v22 + 1;
      }
      if (v22 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v25 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if ((_DWORD)v7)
      v24 = (v7 & 7) == 4;
    else
      v24 = 1;
    v25 = v24;
  }
  while (!v24
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1BDAAB7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::VectorTimestamp::SerializeWithCachedSizes(CRDT::VectorTimestamp *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  if (*((int *)this + 12) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::VectorTimestamp::ByteSize(CRDT::VectorTimestamp *this)
{
  int v2;
  int v3;
  CRDT::VectorTimestamp_Element *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (CRDT::VectorTimestamp_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)this + 40, v3);
      v5 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp_Element::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
    v8 = *((_QWORD *)this + 2);
  else
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::VectorTimestamp::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::VectorTimestamp::MergeFrom(this, lpsrc);
}

uint64_t CRDT::VectorTimestamp::IsInitialized(CRDT::VectorTimestamp *this)
{
  return 1;
}

_QWORD *CRDT::VectorTimestamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.VectorTimestamp");
}

std::string *CRDT::Dictionary_Element::MergeFrom(CRDT::Dictionary_Element *this, const CRDT::Dictionary_Element *a2)
{
  CRDT::Dictionary_Element *v3;
  std::string *v4;
  int v5;
  CRDT::ObjectID *v6;
  uint64_t v7;
  uint64_t v8;
  const CRDT::ObjectID *v9;
  CRDT::ObjectID *v10;
  uint64_t v11;
  uint64_t v12;
  const CRDT::ObjectID *v13;
  int32x2_t *v14;
  int32x2_t *v15;
  CRDT::RegisterLatest *v16;
  const CRDT::RegisterLatest *v17;
  const std::string::value_type *v18;
  char *v19;
  const std::string::value_type *v20;
  int v21;
  const std::string::value_type *v22;
  std::string::size_type v23;
  char v25;
  std::string v26[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 1725);
    v4 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v25, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CRDT::ObjectID *)*((_QWORD *)v3 + 5);
      if (!v6)
      {
        v6 = (CRDT::ObjectID *)operator new();
        this = CRDT::ObjectID::ObjectID(v6, v7, v8);
        *((_QWORD *)v3 + 5) = v6;
      }
      v9 = (const CRDT::ObjectID *)*((_QWORD *)a2 + 5);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v9 = *(const CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 40);
      }
      this = (CRDT::Dictionary_Element *)CRDT::ObjectID::MergeFrom(v6, v9);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      v10 = (CRDT::ObjectID *)*((_QWORD *)v3 + 6);
      if (!v10)
      {
        v10 = (CRDT::ObjectID *)operator new();
        this = CRDT::ObjectID::ObjectID(v10, v11, v12);
        *((_QWORD *)v3 + 6) = v10;
      }
      v13 = (const CRDT::ObjectID *)*((_QWORD *)a2 + 6);
      if (!v13)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v13 = *(const CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 48);
      }
      this = (CRDT::Dictionary_Element *)CRDT::ObjectID::MergeFrom(v10, v13);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      *((_DWORD *)v3 + 8) |= 4u;
      v14 = (int32x2_t *)*((_QWORD *)v3 + 7);
      if (!v14)
      {
        this = (CRDT::Dictionary_Element *)operator new();
        v14 = (int32x2_t *)this;
        *(_QWORD *)this = &off_1E76D0298;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_DWORD *)this + 14) = 0;
        *((_QWORD *)v3 + 7) = this;
      }
      v15 = (int32x2_t *)*((_QWORD *)a2 + 7);
      if (!v15)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v15 = *(int32x2_t **)(CRDT::Dictionary_Element::default_instance_ + 56);
      }
      this = (CRDT::Dictionary_Element *)CRDT::VectorTimestamp::MergeFrom(v14, v15);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      *((_DWORD *)v3 + 8) |= 8u;
      v16 = (CRDT::RegisterLatest *)*((_QWORD *)v3 + 8);
      if (!v16)
      {
        this = (CRDT::Dictionary_Element *)operator new();
        v16 = this;
        *(_QWORD *)this = &off_1E76D01A8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_QWORD *)v3 + 8) = this;
      }
      v17 = (const CRDT::RegisterLatest *)*((_QWORD *)a2 + 8);
      if (!v17)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v17 = *(const CRDT::RegisterLatest **)(CRDT::Dictionary_Element::default_instance_ + 64);
      }
      CRDT::RegisterLatest::MergeFrom(v16, v17);
    }
  }
  v20 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v19 = (char *)a2 + 8;
  v18 = v20;
  v21 = v19[23];
  if (v21 >= 0)
    v22 = v19;
  else
    v22 = v18;
  if (v21 >= 0)
    v23 = v19[23];
  else
    v23 = *((_QWORD *)v19 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v22, v23);
}

void sub_1BDAABBF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::Dictionary_Element::~Dictionary_Element(void **this)
{
  *this = &off_1E76D0310;
  CRDT::Dictionary_Element::SharedDtor((CRDT::Dictionary_Element *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::Dictionary_Element::~Dictionary_Element(this);
  JUMPOUT(0x1C3B7A848);
}

void CRDT::Dictionary_Element::SharedDtor(CRDT::Dictionary_Element *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Dictionary_Element *)CRDT::Dictionary_Element::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 7);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 8);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CRDT::Dictionary_Element::default_instance(CRDT::Dictionary_Element *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::Dictionary_Element::default_instance_;
}

double CRDT::Dictionary_Element::New(CRDT::Dictionary_Element *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0310;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  return result;
}

uint64_t CRDT::Dictionary_Element::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = this;
  v2 = *(_DWORD *)(this + 32);
  if ((v2 & 0xF) != 0)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(_QWORD *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v1 + 32) & 2) != 0)
    {
      v4 = *(_QWORD *)(v1 + 48);
      if (v4)
      {
        this = CRDT::ObjectID::clear_contents(*(_QWORD *)(v1 + 48));
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(_BYTE **)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v4 + 8) = 0;
          *(_BYTE *)(v4 + 31) = 0;
        }
      }
    }
    v5 = *(_DWORD *)(v1 + 32);
    if ((v5 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 56);
      if (this)
      {
        this = CRDT::VectorTimestamp::Clear(this);
        v5 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v5 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 64);
      if (this)
        this = CRDT::RegisterLatest::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Dictionary_Element::MergePartialFromCodedStream(CRDT::Dictionary_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CRDT::ObjectID *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  int v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  CRDT::ObjectID *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  _BYTE v48[32];
  _QWORD v49[2];
  unsigned int v50;

  google::protobuf::io::StringOutputStream::StringOutputStream(v49, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v48, (google::protobuf::io::ZeroCopyOutputStream *)v49);
  while (2)
  {
    while (1)
    {
      v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (char)*v5 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_13:
      if ((_DWORD)v7)
        v13 = (v7 & 7) == 4;
      else
        v13 = 1;
      if (v13)
      {
LABEL_81:
        v46 = 1;
        goto LABEL_82;
      }
LABEL_26:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v48, v4))goto LABEL_80;
    }
    v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((_QWORD *)a2 + 1) = v5 + 1;
    v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if ((_DWORD)v7 != 10)
          goto LABEL_24;
        *((_DWORD *)this + 8) |= 1u;
        v9 = (CRDT::ObjectID *)*((_QWORD *)this + 5);
        if (!v9)
        {
          v9 = (CRDT::ObjectID *)operator new();
          CRDT::ObjectID::ObjectID(v9, v10, v11);
          *((_QWORD *)this + 5) = v9;
        }
        v50 = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))
            goto LABEL_80;
        }
        else
        {
          v50 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          goto LABEL_80;
        v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50);
        if (!CRDT::ObjectID::MergePartialFromCodedStream(v9, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_80;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        v17 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)a2 + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_37:
        *((_DWORD *)this + 8) |= 2u;
        v21 = (CRDT::ObjectID *)*((_QWORD *)this + 6);
        if (!v21)
        {
          v21 = (CRDT::ObjectID *)operator new();
          CRDT::ObjectID::ObjectID(v21, v22, v23);
          *((_QWORD *)this + 6) = v21;
        }
        v50 = 0;
        v24 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))
            goto LABEL_80;
        }
        else
        {
          v50 = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)a2 + 14);
        v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26)
          goto LABEL_80;
        v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50);
        if (!CRDT::ObjectID::MergePartialFromCodedStream(v21, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_80;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v27);
        v28 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v28, 1);
        v29 = v28 - 1;
        if (v29 < 0 == v18)
          *((_DWORD *)a2 + 14) = v29;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_51:
        *((_DWORD *)this + 8) |= 4u;
        v31 = *((_QWORD *)this + 7);
        if (!v31)
        {
          v31 = operator new();
          *(_QWORD *)v31 = &off_1E76D0298;
          *(_OWORD *)(v31 + 8) = 0u;
          *(_OWORD *)(v31 + 24) = 0u;
          *(_OWORD *)(v31 + 40) = 0u;
          *(_DWORD *)(v31 + 56) = 0;
          *((_QWORD *)this + 7) = v31;
        }
        v50 = 0;
        v32 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))
            goto LABEL_80;
        }
        else
        {
          v50 = *v32;
          *((_QWORD *)a2 + 1) = v32 + 1;
        }
        v33 = *((_DWORD *)a2 + 14);
        v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34)
          goto LABEL_80;
        v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream((int32x2_t *)v31, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_80;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v35);
        v36 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v36, 1);
        v37 = v36 - 1;
        if (v37 < 0 == v18)
          *((_DWORD *)a2 + 14) = v37;
        v38 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_65:
        *((_DWORD *)this + 8) |= 8u;
        v39 = *((_QWORD *)this + 8);
        if (!v39)
        {
          v39 = operator new();
          *(_QWORD *)v39 = &off_1E76D01A8;
          *(_OWORD *)(v39 + 8) = 0u;
          *(_OWORD *)(v39 + 24) = 0u;
          *(_OWORD *)(v39 + 40) = 0u;
          *((_QWORD *)this + 8) = v39;
        }
        v50 = 0;
        v40 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))
            goto LABEL_80;
        }
        else
        {
          v50 = *v40;
          *((_QWORD *)a2 + 1) = v40 + 1;
        }
        v41 = *((_DWORD *)a2 + 14);
        v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42
          || (v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50),
              !CRDT::RegisterLatest::MergePartialFromCodedStream((CRDT::RegisterLatest *)v39, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_80:
          v46 = 0;
          goto LABEL_82;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v43);
        v44 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v18)
          *((_DWORD *)a2 + 14) = v45;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v46 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_82:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v48);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v49);
        return v46;
      case 2u:
        if ((_DWORD)v7 == 18)
          goto LABEL_37;
        goto LABEL_24;
      case 3u:
        if ((_DWORD)v7 == 26)
          goto LABEL_51;
        goto LABEL_24;
      case 4u:
        if ((_DWORD)v7 == 34)
          goto LABEL_65;
LABEL_24:
        if ((_DWORD)v7 && (v7 & 7) != 4)
          goto LABEL_26;
        goto LABEL_81;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1BDAAC3C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Dictionary_Element::SerializeWithCachedSizes(CRDT::Dictionary_Element *this, google::protobuf::io::CodedOutputStream *a2)
{
  CRDT::Dictionary_Element *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v5 = *(_QWORD *)(CRDT::Dictionary_Element::default_instance_ + 40);
    }
    this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    v4 = *((_DWORD *)v3 + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  v6 = *((_QWORD *)v3 + 6);
  if (!v6)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(this);
    v6 = *(_QWORD *)(CRDT::Dictionary_Element::default_instance_ + 48);
  }
  this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  v4 = *((_DWORD *)v3 + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0)
      goto LABEL_18;
    goto LABEL_15;
  }
LABEL_12:
  v7 = *((_QWORD *)v3 + 7);
  if (!v7)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(this);
    v7 = *(_QWORD *)(CRDT::Dictionary_Element::default_instance_ + 56);
  }
  this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v7, a2);
  if ((*((_DWORD *)v3 + 8) & 8) != 0)
  {
LABEL_15:
    v8 = *((_QWORD *)v3 + 8);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v8 = *(_QWORD *)(CRDT::Dictionary_Element::default_instance_ + 64);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(4, v8, a2);
  }
LABEL_18:
  if (*((char *)v3 + 31) < 0)
  {
    v9 = (char *)*((_QWORD *)v3 + 1);
    v10 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v9 = (char *)v3 + 8;
    LODWORD(v10) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v9, v10);
}

uint64_t CRDT::Dictionary_Element::ByteSize(CRDT::Dictionary_Element *this)
{
  int v2;
  int v3;
  CRDT::ObjectID *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  CRDT::ObjectID *v8;
  google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  CRDT::VectorTimestamp *v12;
  google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  CRDT::RegisterLatest *v16;
  google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_33;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (CRDT::ObjectID *)*((_QWORD *)this + 5);
  if (!v4)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    v4 = *(CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 40);
  }
  v5 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = v6 + v7 + 1;
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v8 = (CRDT::ObjectID *)*((_QWORD *)this + 6);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v8 = *(CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 48);
    }
    v9 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *((_DWORD *)this + 8);
  }
LABEL_18:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_33;
    goto LABEL_27;
  }
  v12 = (CRDT::VectorTimestamp *)*((_QWORD *)this + 7);
  if (!v12)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    v12 = *(CRDT::VectorTimestamp **)(CRDT::Dictionary_Element::default_instance_ + 56);
  }
  v13 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v12);
  v14 = (int)v13;
  if (v13 >= 0x80)
    v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  else
    v15 = 1;
  v3 += v14 + v15 + 1;
  if ((*((_DWORD *)this + 8) & 8) != 0)
  {
LABEL_27:
    v16 = (CRDT::RegisterLatest *)*((_QWORD *)this + 8);
    if (!v16)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v16 = *(CRDT::RegisterLatest **)(CRDT::Dictionary_Element::default_instance_ + 64);
    }
    v17 = (google::protobuf::io::CodedOutputStream *)CRDT::RegisterLatest::ByteSize(v16);
    v18 = (int)v17;
    if (v17 >= 0x80)
      v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    else
      v19 = 1;
    v3 += v18 + v19 + 1;
  }
LABEL_33:
  if (*((char *)this + 31) < 0)
    v20 = *((_QWORD *)this + 2);
  else
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  result = (v3 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Dictionary_Element::CheckTypeAndMergeFrom(CRDT::Dictionary_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Dictionary_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Dictionary_Element::IsInitialized(CRDT::Dictionary_Element *this)
{
  return 1;
}

_QWORD *CRDT::Dictionary_Element::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Dictionary.Element");
}

std::string *CRDT::Dictionary::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  const std::string::value_type *v5;
  int32x2_t *v6;
  int32x2_t v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  char v12;
  std::string v13[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 1927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>(this + 5, a2 + 5);
  v7 = a2[1];
  v6 = a2 + 1;
  v5 = (const std::string::value_type *)v7;
  v8 = v6[2].i8[7];
  if (v8 >= 0)
    v9 = (const std::string::value_type *)v6;
  else
    v9 = v5;
  if (v8 >= 0)
    v10 = v6[2].u8[7];
  else
    v10 = (std::string::size_type)v6[1];
  return std::string::append((std::string *)&this[1], v9, v10);
}

void sub_1BDAAC790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Dictionary::~Dictionary(CRDT::Dictionary *this)
{
  *(_QWORD *)this = &off_1E76D0388;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  CRDT::Dictionary::~Dictionary(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t CRDT::Dictionary::default_instance(CRDT::Dictionary *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::Dictionary::default_instance_;
}

double CRDT::Dictionary::New(CRDT::Dictionary *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0388;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CRDT::Dictionary::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(int *)(this + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Dictionary::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  uint64_t v12;
  int32x2_t v13;
  int32x2_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  _BYTE *v23;
  BOOL v24;
  uint64_t v25;
  _BYTE v27[32];
  _QWORD v28[2];
  unsigned int v29;

  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 != 10)
        break;
      while (1)
      {
        v9 = this[6].i32[1];
        v10 = this[6].i32[0];
        if ((int)v10 >= v9)
        {
          if (v9 == this[7].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[5], v9 + 1);
          v12 = operator new();
          *(_QWORD *)v12 = &off_1E76D0310;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *(_OWORD *)(v12 + 40) = 0u;
          *(_OWORD *)(v12 + 56) = 0u;
          v13 = this[5];
          v14 = this[6];
          this[6] = vadd_s32(v14, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
        }
        else
        {
          v11 = this[5];
          this[6].i32[0] = v10 + 1;
          v12 = *(_QWORD *)(*(_QWORD *)&v11 + 8 * v10);
        }
        v29 = 0;
        v15 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
            goto LABEL_37;
        }
        else
        {
          v29 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        v16 = *((_DWORD *)a2 + 14);
        v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17
          || (v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29),
              !CRDT::Dictionary_Element::MergePartialFromCodedStream((CRDT::Dictionary_Element *)v12, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_37:
          v25 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v18);
        v19 = *((_DWORD *)a2 + 14);
        v20 = __OFSUB__(v19, 1);
        v21 = v19 - 1;
        if (v21 < 0 == v20)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        v23 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v22 >= v23 || *v22 != 10)
          break;
        *((_QWORD *)a2 + 1) = v22 + 1;
      }
      if (v22 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v25 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if ((_DWORD)v7)
      v24 = (v7 & 7) == 4;
    else
      v24 = 1;
    v25 = v24;
  }
  while (!v24
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1BDAACB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Dictionary::SerializeWithCachedSizes(CRDT::Dictionary *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  if (*((int *)this + 12) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::Dictionary::ByteSize(CRDT::Dictionary *this)
{
  int v2;
  int v3;
  CRDT::Dictionary_Element *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (CRDT::Dictionary_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)this + 40, v3);
      v5 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary_Element::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
    v8 = *((_QWORD *)this + 2);
  else
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Dictionary::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Dictionary::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Dictionary::IsInitialized(CRDT::Dictionary *this)
{
  return 1;
}

_QWORD *CRDT::Dictionary::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Dictionary");
}

std::string *CRDT::Index_Element::MergeFrom(CRDT::Index_Element *this, const CRDT::Index_Element *a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  const std::string::value_type *v8;
  char *v9;
  const std::string::value_type *v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 2157);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 5) = v6;
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *((_QWORD *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      *((_QWORD *)this + 6) = v7;
    }
  }
  v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v9 = (char *)a2 + 8;
  v8 = v10;
  v11 = v9[23];
  if (v11 >= 0)
    v12 = v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[23];
  else
    v13 = *((_QWORD *)v9 + 1);
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1BDAACDF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Index_Element::~Index_Element(void **this)
{
  *this = &off_1E76D0400;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::Index_Element::~Index_Element(this);
  JUMPOUT(0x1C3B7A848);
}

double CRDT::Index_Element::New(CRDT::Index_Element *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0400;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CRDT::Index_Element::Clear(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Index_Element::MergePartialFromCodedStream(CRDT::Index_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  BOOL v12;
  char *v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  _BYTE v18[32];
  unint64_t v19[2];
  unint64_t v20;

  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_12;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
        break;
      if (v7 >> 3 == 1)
      {
        if ((_DWORD)v7 != 8)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_38;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *((_QWORD *)this + 5) = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v13 = v11 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if ((_DWORD)v7)
          v12 = (v7 & 7) == 4;
        else
          v12 = 1;
        if (v12)
        {
LABEL_37:
          v16 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_38;
      }
    }
    if ((_DWORD)v7 != 16)
    {
LABEL_19:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_37;
      goto LABEL_16;
    }
    v13 = (char *)*((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
LABEL_28:
    v20 = 0;
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      v14 = *v13;
      v15 = (unsigned __int8 *)(v13 + 1);
      *((_QWORD *)a2 + 1) = v15;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20))
      break;
    v14 = v20;
    v15 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
LABEL_33:
    *((_QWORD *)this + 6) = v14;
    *((_DWORD *)this + 8) |= 2u;
    if (v15 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v16 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  v16 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1BDAAD0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Index_Element::SerializeWithCachedSizes(CRDT::Index_Element *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((_QWORD *)this + 6), a2, a4);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Index_Element::ByteSize(CRDT::Index_Element *this)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_8;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v2 = 0;
  if ((*((_BYTE *)this + 32) & 2) != 0)
LABEL_7:
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 6)) + 1;
LABEL_8:
  if (*((char *)this + 31) < 0)
    v3 = *((_QWORD *)this + 2);
  else
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  result = (v2 + v3);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Index_Element::CheckTypeAndMergeFrom(CRDT::Index_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Index_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Index_Element::IsInitialized(CRDT::Index_Element *this)
{
  return 1;
}

_QWORD *CRDT::Index_Element::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Index.Element");
}

std::string *CRDT::Index::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  const std::string::value_type *v5;
  int32x2_t *v6;
  int32x2_t v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  char v12;
  std::string v13[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 2351);
    v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>(this + 5, a2 + 5);
  v7 = a2[1];
  v6 = a2 + 1;
  v5 = (const std::string::value_type *)v7;
  v8 = v6[2].i8[7];
  if (v8 >= 0)
    v9 = (const std::string::value_type *)v6;
  else
    v9 = v5;
  if (v8 >= 0)
    v10 = v6[2].u8[7];
  else
    v10 = (std::string::size_type)v6[1];
  return std::string::append((std::string *)&this[1], v9, v10);
}

void sub_1BDAAD2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Index::~Index(CRDT::Index *this)
{
  *(_QWORD *)this = &off_1E76D0478;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  CRDT::Index::~Index(this);
  JUMPOUT(0x1C3B7A848);
}

double CRDT::Index::New(CRDT::Index *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0478;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CRDT::Index::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(int *)(this + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Index::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  uint64_t v12;
  int32x2_t v13;
  int32x2_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  _BYTE *v23;
  BOOL v24;
  uint64_t v25;
  _BYTE v27[32];
  _QWORD v28[2];
  unsigned int v29;

  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 != 10)
        break;
      while (1)
      {
        v9 = this[6].i32[1];
        v10 = this[6].i32[0];
        if ((int)v10 >= v9)
        {
          if (v9 == this[7].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[5], v9 + 1);
          v12 = operator new();
          *(_QWORD *)v12 = &off_1E76D0400;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *(_OWORD *)(v12 + 40) = 0u;
          v13 = this[5];
          v14 = this[6];
          this[6] = vadd_s32(v14, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
        }
        else
        {
          v11 = this[5];
          this[6].i32[0] = v10 + 1;
          v12 = *(_QWORD *)(*(_QWORD *)&v11 + 8 * v10);
        }
        v29 = 0;
        v15 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
            goto LABEL_37;
        }
        else
        {
          v29 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        v16 = *((_DWORD *)a2 + 14);
        v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17
          || (v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29),
              !CRDT::Index_Element::MergePartialFromCodedStream((CRDT::Index_Element *)v12, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_37:
          v25 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v18);
        v19 = *((_DWORD *)a2 + 14);
        v20 = __OFSUB__(v19, 1);
        v21 = v19 - 1;
        if (v21 < 0 == v20)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        v23 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v22 >= v23 || *v22 != 10)
          break;
        *((_QWORD *)a2 + 1) = v22 + 1;
      }
      if (v22 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v25 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if ((_DWORD)v7)
      v24 = (v7 & 7) == 4;
    else
      v24 = 1;
    v25 = v24;
  }
  while (!v24
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1BDAAD6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Index::SerializeWithCachedSizes(CRDT::Index *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  if (*((int *)this + 12) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::Index::ByteSize(CRDT::Index *this)
{
  int v2;
  int v3;
  CRDT::Index_Element *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (CRDT::Index_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)this + 40, v3);
      v5 = (google::protobuf::io::CodedOutputStream *)CRDT::Index_Element::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
    v8 = *((_QWORD *)this + 2);
  else
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Index::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Index::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Index::IsInitialized(CRDT::Index *this)
{
  return 1;
}

_QWORD *CRDT::Index::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Index");
}

std::string *CRDT::OneOf_Element::MergeFrom(CRDT::OneOf_Element *this, const CRDT::OneOf_Element *a2)
{
  CRDT::OneOf_Element *v3;
  std::string *v4;
  int v5;
  CRDT::ObjectID *v6;
  uint64_t v7;
  uint64_t v8;
  const CRDT::ObjectID *v9;
  CRDT::Timestamp *v10;
  const CRDT::Timestamp *v11;
  const std::string::value_type *v12;
  char *v13;
  const std::string::value_type *v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  char v19;
  std::string v20[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 2586);
    v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CRDT::ObjectID *)*((_QWORD *)v3 + 5);
      if (!v6)
      {
        v6 = (CRDT::ObjectID *)operator new();
        this = CRDT::ObjectID::ObjectID(v6, v7, v8);
        *((_QWORD *)v3 + 5) = v6;
      }
      v9 = (const CRDT::ObjectID *)*((_QWORD *)a2 + 5);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v9 = *(const CRDT::ObjectID **)(CRDT::OneOf_Element::default_instance_ + 40);
      }
      this = (CRDT::OneOf_Element *)CRDT::ObjectID::MergeFrom(v6, v9);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      v10 = (CRDT::Timestamp *)*((_QWORD *)v3 + 6);
      if (!v10)
      {
        this = (CRDT::OneOf_Element *)operator new();
        v10 = this;
        *(_QWORD *)this = &off_1E76D0130;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_QWORD *)v3 + 6) = this;
      }
      v11 = (const CRDT::Timestamp *)*((_QWORD *)a2 + 6);
      if (!v11)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v11 = *(const CRDT::Timestamp **)(CRDT::OneOf_Element::default_instance_ + 48);
      }
      CRDT::Timestamp::MergeFrom(v10, v11);
    }
  }
  v14 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v13 = (char *)a2 + 8;
  v12 = v14;
  v15 = v13[23];
  if (v15 >= 0)
    v16 = v13;
  else
    v16 = v12;
  if (v15 >= 0)
    v17 = v13[23];
  else
    v17 = *((_QWORD *)v13 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v16, v17);
}

void sub_1BDAAD9E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::OneOf_Element::~OneOf_Element(void **this)
{
  *this = &off_1E76D04F0;
  CRDT::OneOf_Element::SharedDtor((CRDT::OneOf_Element *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::OneOf_Element::~OneOf_Element(this);
  JUMPOUT(0x1C3B7A848);
}

void CRDT::OneOf_Element::SharedDtor(CRDT::OneOf_Element *this)
{
  uint64_t v2;
  uint64_t v3;

  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::OneOf_Element *)CRDT::OneOf_Element::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CRDT::OneOf_Element::default_instance(CRDT::OneOf_Element *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::OneOf_Element::default_instance_;
}

double CRDT::OneOf_Element::New(CRDT::OneOf_Element *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D04F0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CRDT::OneOf_Element::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(_QWORD *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(_BYTE *)(v1 + 32) & 2) != 0)
    {
      v4 = *(_QWORD *)(v1 + 48);
      if (v4)
      {
        *(_QWORD *)(v4 + 40) = 0;
        *(_QWORD *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(_BYTE **)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v4 + 8) = 0;
          *(_BYTE *)(v4 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::OneOf_Element::MergePartialFromCodedStream(CRDT::OneOf_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CRDT::ObjectID *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  int v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  _BYTE v30[32];
  _QWORD v31[2];
  unsigned int v32;

  google::protobuf::io::StringOutputStream::StringOutputStream(v31, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30, (google::protobuf::io::ZeroCopyOutputStream *)v31);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        break;
    }
    else
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if ((_DWORD)v7 == 18)
        goto LABEL_33;
      goto LABEL_21;
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      v9 = (CRDT::ObjectID *)*((_QWORD *)this + 5);
      if (!v9)
      {
        v9 = (CRDT::ObjectID *)operator new();
        CRDT::ObjectID::ObjectID(v9, v10, v11);
        *((_QWORD *)this + 5) = v9;
      }
      v32 = 0;
      v12 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))
          goto LABEL_48;
      }
      else
      {
        v32 = *v12;
        *((_QWORD *)a2 + 1) = v12 + 1;
      }
      v14 = *((_DWORD *)a2 + 14);
      v15 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v14 + 1;
      if (v14 >= v15)
        goto LABEL_48;
      v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
      if (!CRDT::ObjectID::MergePartialFromCodedStream(v9, a2) || !*((_BYTE *)a2 + 36))
        goto LABEL_48;
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
      v17 = *((_DWORD *)a2 + 14);
      v18 = __OFSUB__(v17, 1);
      v19 = v17 - 1;
      if (v19 < 0 == v18)
        *((_DWORD *)a2 + 14) = v19;
      v20 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v20 < *((_QWORD *)a2 + 2) && *v20 == 18)
      {
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        v21 = *((_QWORD *)this + 6);
        if (!v21)
        {
          v21 = operator new();
          *(_QWORD *)v21 = &off_1E76D0130;
          *(_OWORD *)(v21 + 8) = 0u;
          *(_OWORD *)(v21 + 24) = 0u;
          *(_OWORD *)(v21 + 40) = 0u;
          *((_QWORD *)this + 6) = v21;
        }
        v32 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))
            goto LABEL_48;
        }
        else
        {
          v32 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24
          || (v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32),
              !CRDT::Timestamp::MergePartialFromCodedStream((CRDT::Timestamp *)v21, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_48:
          v28 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v25);
        v26 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v26, 1);
        v27 = v26 - 1;
        if (v27 < 0 == v18)
          *((_DWORD *)a2 + 14) = v27;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          v28 = 1;
          *((_BYTE *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_49;
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v30, v4))goto LABEL_48;
    }
  }
  if ((_DWORD)v7)
    v13 = (v7 & 7) == 4;
  else
    v13 = 1;
  if (!v13)
    goto LABEL_18;
LABEL_49:
  v28 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v31);
  return v28;
}

void sub_1BDAADF28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OneOf_Element::SerializeWithCachedSizes(CRDT::OneOf_Element *this, google::protobuf::io::CodedOutputStream *a2)
{
  CRDT::OneOf_Element *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v5 = *(_QWORD *)(CRDT::OneOf_Element::default_instance_ + 40);
    }
    this = (CRDT::OneOf_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_QWORD *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v6 = *(_QWORD *)(CRDT::OneOf_Element::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)v3 + 1);
    v8 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v7 = (char *)v3 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::OneOf_Element::ByteSize(CRDT::OneOf_Element *this)
{
  int v2;
  CRDT::ObjectID *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  CRDT::Timestamp *v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (CRDT::ObjectID *)*((_QWORD *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    v3 = *(CRDT::ObjectID **)(CRDT::OneOf_Element::default_instance_ + 40);
  }
  v4 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    v7 = (CRDT::Timestamp *)*((_QWORD *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v7 = *(CRDT::Timestamp **)(CRDT::OneOf_Element::default_instance_ + 48);
    }
    v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OneOf_Element::CheckTypeAndMergeFrom(CRDT::OneOf_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::OneOf_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OneOf_Element::IsInitialized(CRDT::OneOf_Element *this)
{
  return 1;
}

_QWORD *CRDT::OneOf_Element::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OneOf.Element");
}

std::string *CRDT::OneOf::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  const std::string::value_type *v5;
  int32x2_t *v6;
  int32x2_t v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  char v12;
  std::string v13[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 2780);
    v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>(this + 5, a2 + 5);
  v7 = a2[1];
  v6 = a2 + 1;
  v5 = (const std::string::value_type *)v7;
  v8 = v6[2].i8[7];
  if (v8 >= 0)
    v9 = (const std::string::value_type *)v6;
  else
    v9 = v5;
  if (v8 >= 0)
    v10 = v6[2].u8[7];
  else
    v10 = (std::string::size_type)v6[1];
  return std::string::append((std::string *)&this[1], v9, v10);
}

void sub_1BDAAE1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::OneOf::~OneOf(CRDT::OneOf *this)
{
  *(_QWORD *)this = &off_1E76D0568;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  CRDT::OneOf::~OneOf(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t CRDT::OneOf::default_instance(CRDT::OneOf *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::OneOf::default_instance_;
}

double CRDT::OneOf::New(CRDT::OneOf *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0568;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CRDT::OneOf::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(int *)(this + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::OneOf::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  uint64_t v12;
  int32x2_t v13;
  int32x2_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  _BYTE *v23;
  BOOL v24;
  uint64_t v25;
  _BYTE v27[32];
  _QWORD v28[2];
  unsigned int v29;

  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  do
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if ((_DWORD)v7 != 10)
        break;
      while (1)
      {
        v9 = this[6].i32[1];
        v10 = this[6].i32[0];
        if ((int)v10 >= v9)
        {
          if (v9 == this[7].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[5], v9 + 1);
          v12 = operator new();
          *(_QWORD *)v12 = &off_1E76D04F0;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *(_OWORD *)(v12 + 40) = 0u;
          v13 = this[5];
          v14 = this[6];
          this[6] = vadd_s32(v14, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
        }
        else
        {
          v11 = this[5];
          this[6].i32[0] = v10 + 1;
          v12 = *(_QWORD *)(*(_QWORD *)&v11 + 8 * v10);
        }
        v29 = 0;
        v15 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
            goto LABEL_37;
        }
        else
        {
          v29 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        v16 = *((_DWORD *)a2 + 14);
        v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17
          || (v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29),
              !CRDT::OneOf_Element::MergePartialFromCodedStream((CRDT::OneOf_Element *)v12, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_37:
          v25 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v18);
        v19 = *((_DWORD *)a2 + 14);
        v20 = __OFSUB__(v19, 1);
        v21 = v19 - 1;
        if (v21 < 0 == v20)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        v23 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v22 >= v23 || *v22 != 10)
          break;
        *((_QWORD *)a2 + 1) = v22 + 1;
      }
      if (v22 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        v25 = 1;
        *((_BYTE *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if ((_DWORD)v7)
      v24 = (v7 & 7) == 4;
    else
      v24 = 1;
    v25 = v24;
  }
  while (!v24
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1BDAAE5CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OneOf::SerializeWithCachedSizes(CRDT::OneOf *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  if (*((int *)this + 12) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    v6 = (char *)*((_QWORD *)this + 1);
    v7 = *((_QWORD *)this + 2);
  }
  else
  {
    v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::OneOf::ByteSize(CRDT::OneOf *this)
{
  int v2;
  int v3;
  CRDT::OneOf_Element *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (CRDT::OneOf_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)this + 40, v3);
      v5 = (google::protobuf::io::CodedOutputStream *)CRDT::OneOf_Element::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
    v8 = *((_QWORD *)this + 2);
  else
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OneOf::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::OneOf::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OneOf::IsInitialized(CRDT::OneOf *this)
{
  return 1;
}

_QWORD *CRDT::OneOf::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OneOf");
}

CRDT::StringArray_ArrayAttachment *CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(CRDT::StringArray_ArrayAttachment *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76D05E0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CRDT::StringArray_ArrayAttachment::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BDAAE7C0(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void CRDT::StringArray_ArrayAttachment::SharedCtor(CRDT::StringArray_ArrayAttachment *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v6[0] = &off_1E76C9A40;
    v6[1] = google::protobuf::internal::InitEmptyString;
    v7 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  v5 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = v5;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BDAAE86C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CRDT::StringArray_ArrayAttachment *CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(CRDT::StringArray_ArrayAttachment *this, const CRDT::StringArray_ArrayAttachment *a2, uint64_t a3)
{
  uint64_t v5;

  *(_QWORD *)this = &off_1E76D05E0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CRDT::StringArray_ArrayAttachment::SharedCtor(this, (uint64_t)a2, a3);
  CRDT::StringArray_ArrayAttachment::MergeFrom(this, a2, v5);
  return this;
}

void sub_1BDAAE8D4(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

std::string *CRDT::StringArray_ArrayAttachment::MergeFrom(CRDT::StringArray_ArrayAttachment *this, const CRDT::StringArray_ArrayAttachment *a2, uint64_t a3)
{
  std::string *v5;
  int v6;
  uint64_t v7;
  const std::string *v8;
  std::string *v9;
  const std::string::value_type *v10;
  char *v11;
  const std::string::value_type *v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3006);
    v5 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v7 = *((_QWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 5) = v7;
      v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      v8 = (const std::string *)*((_QWORD *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor((uint64_t)this, (uint64_t)a2, a3);
      v9 = (std::string *)*((_QWORD *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_)
      {
        v9 = (std::string *)operator new();
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        v9->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 6) = v9;
      }
      std::string::operator=(v9, v8);
    }
  }
  v12 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v11 = (char *)a2 + 8;
  v10 = v12;
  v13 = v11[23];
  if (v13 >= 0)
    v14 = v11;
  else
    v14 = v10;
  if (v13 >= 0)
    v15 = v11[23];
  else
    v15 = *((_QWORD *)v11 + 1);
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1BDAAEA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment(void **this, uint64_t a2, uint64_t a3)
{
  *this = &off_1E76D05E0;
  CRDT::StringArray_ArrayAttachment::SharedDtor((CRDT::StringArray_ArrayAttachment *)this, a2, a3);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment(this, a2, a3);
  JUMPOUT(0x1C3B7A848);
}

void CRDT::StringArray_ArrayAttachment::SharedDtor(CRDT::StringArray_ArrayAttachment *this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;

  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  v3 = *((_QWORD *)this + 6);
  if (v3)
    v4 = v3 == google::protobuf::internal::empty_string_;
  else
    v4 = 1;
  if (!v4)
  {
    if (*(char *)(v3 + 23) < 0)
      operator delete(*(void **)v3);
    this = (CRDT::StringArray_ArrayAttachment *)MEMORY[0x1C3B7A848](v3, 0x1012C40EC159624);
  }
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
}

CRDT::StringArray_ArrayAttachment *CRDT::StringArray_ArrayAttachment::New(CRDT::StringArray_ArrayAttachment *this)
{
  CRDT::StringArray_ArrayAttachment *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (CRDT::StringArray_ArrayAttachment *)operator new();
  CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(v1, v2, v3);
  return v1;
}

void sub_1BDAAEB3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray_ArrayAttachment::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = *(_DWORD *)(this + 32);
  if ((v3 & 3) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    if ((v3 & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_)
        versioned_document::Version::SharedCtor(this, a2, a3);
      v4 = *(_QWORD *)(this + 48);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(_BYTE **)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  else
  {
    *(_BYTE *)(this + 8) = 0;
    *(_BYTE *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::StringArray_ArrayAttachment::MergePartialFromCodedStream(CRDT::StringArray_ArrayAttachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  BOOL v12;
  int v13;
  std::string *v14;
  uint64_t v15;
  _BYTE v17[32];
  _QWORD v18[2];

  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    do
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
        {
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_12;
        }
        else
        {
          v6 = *v5;
          *((_DWORD *)a2 + 8) = v6;
          *((_QWORD *)a2 + 1) = v5 + 1;
          v7 = v6 | 0x100000000;
        }
        if (v7 >> 3 == 2)
        {
          if ((_DWORD)v7 == 18)
          {
            v13 = *((_DWORD *)this + 8);
            goto LABEL_28;
          }
LABEL_19:
          if (!(_DWORD)v7 || (v7 & 7) == 4)
            goto LABEL_36;
          goto LABEL_16;
        }
        if (v7 >> 3 == 1)
          break;
LABEL_12:
        if ((_DWORD)v7)
          v12 = (v7 & 7) == 4;
        else
          v12 = 1;
        if (v12)
        {
LABEL_36:
          v15 = 1;
          goto LABEL_38;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_37;
      }
      if ((_DWORD)v7 != 8)
        goto LABEL_19;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_37;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *((_QWORD *)this + 5) = *v10;
        v11 = v10 + 1;
        *((_QWORD *)a2 + 1) = v11;
      }
      v13 = *((_DWORD *)this + 8) | 1;
      *((_DWORD *)this + 8) = v13;
    }
    while ((unint64_t)v11 >= v9 || *v11 != 18);
    *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_28:
    *((_DWORD *)this + 8) = v13 | 2;
    if (!google::protobuf::internal::empty_string_)
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    v14 = (std::string *)*((_QWORD *)this + 6);
    if (v14 == (std::string *)google::protobuf::internal::empty_string_)
    {
      v14 = (std::string *)operator new();
      v14->__r_.__value_.__r.__words[0] = 0;
      v14->__r_.__value_.__l.__size_ = 0;
      v14->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)this + 6) = v14;
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14))
      break;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      v15 = 1;
      *((_BYTE *)a2 + 36) = 1;
      goto LABEL_38;
    }
  }
LABEL_37:
  v15 = 0;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1BDAAEE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray_ArrayAttachment::SerializeWithCachedSizes(CRDT::StringArray_ArrayAttachment *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0)
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, *((_QWORD *)this + 6), a2);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::StringArray_ArrayAttachment::ByteSize(CRDT::StringArray_ArrayAttachment *this)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_16;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0)
      goto LABEL_16;
  }
  else
  {
    v2 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_16;
  }
  v3 = *((_QWORD *)this + 6);
  v4 = *(unsigned __int8 *)(v3 + 23);
  v5 = v4;
  v6 = *(_QWORD *)(v3 + 8);
  if ((v4 & 0x80u) == 0)
    v7 = *(unsigned __int8 *)(v3 + 23);
  else
    v7 = v6;
  if (v7 >= 0x80)
  {
    v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v6 = *(_QWORD *)(v3 + 8);
    v5 = *(_BYTE *)(v3 + 23);
  }
  else
  {
    v8 = 1;
  }
  if (v5 < 0)
    v4 = v6;
  v2 += v8 + v4 + 1;
LABEL_16:
  if (*((char *)this + 31) < 0)
    v9 = *((_QWORD *)this + 2);
  else
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  result = (v2 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::StringArray_ArrayAttachment::CheckTypeAndMergeFrom(CRDT::StringArray_ArrayAttachment *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::StringArray_ArrayAttachment::MergeFrom(this, lpsrc, v5);
}

uint64_t CRDT::StringArray_ArrayAttachment::IsInitialized(CRDT::StringArray_ArrayAttachment *this)
{
  return 1;
}

_QWORD *CRDT::StringArray_ArrayAttachment::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.StringArray.ArrayAttachment");
}

std::string *CRDT::StringArray::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  CRDT *v5;
  topotext::String *v6;
  int32x2_t *v7;
  const std::string::value_type *v8;
  int32x2_t *v9;
  int32x2_t v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3239);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  v5 = (CRDT *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>(this + 6, a2 + 6);
  if ((a2[4].i8[0] & 1) != 0)
  {
    this[4].i32[0] |= 1u;
    v6 = (topotext::String *)this[5];
    if (!v6)
    {
      v6 = (topotext::String *)operator new();
      v5 = (CRDT *)topotext::String::String(v6);
      this[5] = (int32x2_t)v6;
    }
    v7 = (int32x2_t *)a2[5];
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(v5);
      v7 = *(int32x2_t **)(CRDT::StringArray::default_instance_ + 40);
    }
    topotext::String::MergeFrom((int32x2_t *)v6, v7);
  }
  v10 = a2[1];
  v9 = a2 + 1;
  v8 = (const std::string::value_type *)v10;
  v11 = v9[2].i8[7];
  if (v11 >= 0)
    v12 = (const std::string::value_type *)v9;
  else
    v12 = v8;
  if (v11 >= 0)
    v13 = v9[2].u8[7];
  else
    v13 = (std::string::size_type)v9[1];
  return std::string::append((std::string *)&this[1], v12, v13);
}

void sub_1BDAAF0E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

void CRDT::StringArray::~StringArray(CRDT::StringArray *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E76D0658;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::StringArray *)CRDT::StringArray::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  CRDT::StringArray::~StringArray(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t CRDT::StringArray::default_instance(CRDT::StringArray *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::StringArray::default_instance_;
}

double CRDT::StringArray::New(CRDT::StringArray *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0658;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  return result;
}

uint64_t CRDT::StringArray::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = this;
  if ((*(_BYTE *)(this + 32) & 1) != 0)
  {
    this = *(_QWORD *)(this + 40);
    if (this)
      this = topotext::String::Clear(this, a2, a3);
  }
  if (*(int *)(v3 + 56) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v3 + 56));
  }
  *(_DWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::StringArray::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  topotext::String *v9;
  char *v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  int v19;
  uint64_t v20;
  int32x2_t v21;
  CRDT::StringArray_ArrayAttachment *v22;
  int32x2_t v23;
  int32x2_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  _BYTE *v31;
  uint64_t v32;
  _BYTE v34[32];
  _QWORD v35[2];
  unsigned int v36;

  google::protobuf::io::StringOutputStream::StringOutputStream(v35, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v34, (google::protobuf::io::ZeroCopyOutputStream *)v35);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_14;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if ((_DWORD)v7 == 18)
          goto LABEL_33;
LABEL_21:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_54;
        goto LABEL_18;
      }
      if (v7 >> 3 == 1)
        break;
LABEL_14:
      if ((_DWORD)v7)
        v11 = (v7 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
LABEL_54:
        v32 = 1;
        goto LABEL_55;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v34, v4))goto LABEL_53;
    }
    if ((_DWORD)v7 != 10)
      goto LABEL_21;
    this[4].i32[0] |= 1u;
    v9 = (topotext::String *)this[5];
    if (!v9)
    {
      v9 = (topotext::String *)operator new();
      topotext::String::String(v9);
      this[5] = (int32x2_t)v9;
    }
    v36 = 0;
    v10 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))
        goto LABEL_53;
    }
    else
    {
      v36 = *v10;
      *((_QWORD *)a2 + 1) = v10 + 1;
    }
    v12 = *((_DWORD *)a2 + 14);
    v13 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v12 + 1;
    if (v12 >= v13)
      goto LABEL_53;
    v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
    if (!topotext::String::MergePartialFromCodedStream((int32x2_t *)v9, a2) || !*((_BYTE *)a2 + 36))
      goto LABEL_53;
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
    v15 = *((_DWORD *)a2 + 14);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v17 < 0 == v16)
      *((_DWORD *)a2 + 14) = v17;
    v18 = (_BYTE *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v18 < *((_QWORD *)a2 + 2) && *v18 == 18)
    {
      do
      {
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_33:
        v19 = this[7].i32[1];
        v20 = this[7].i32[0];
        if ((int)v20 >= v19)
        {
          if (v19 == this[8].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[6], v19 + 1);
          v22 = google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New();
          v23 = this[6];
          v24 = this[7];
          this[7] = vadd_s32(v24, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v23 + 8 * v24.i32[0]) = v22;
        }
        else
        {
          v21 = this[6];
          this[7].i32[0] = v20 + 1;
          v22 = *(CRDT::StringArray_ArrayAttachment **)(*(_QWORD *)&v21 + 8 * v20);
        }
        v36 = 0;
        v25 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))
            goto LABEL_53;
        }
        else
        {
          v36 = *v25;
          *((_QWORD *)a2 + 1) = v25 + 1;
        }
        v26 = *((_DWORD *)a2 + 14);
        v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27
          || (v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v36),
              !CRDT::StringArray_ArrayAttachment::MergePartialFromCodedStream(v22, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_53:
          v32 = 0;
          goto LABEL_55;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v28);
        v29 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v29, 1);
        v30 = v29 - 1;
        if (v30 < 0 == v16)
          *((_DWORD *)a2 + 14) = v30;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        v31 = (_BYTE *)*((_QWORD *)a2 + 2);
      }
      while (v18 < v31 && *v18 == 18);
      if (v18 == v31 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        break;
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  v32 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_55:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v34);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v35);
  return v32;
}

void sub_1BDAAF600(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C406C843DA2);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray::SerializeWithCachedSizes(CRDT::StringArray *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 5);
    if (!v4)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v4 = *(_QWORD *)(CRDT::StringArray::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((int *)this + 14) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)this + 48, v5);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
      ++v5;
    }
    while (v5 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::StringArray::ByteSize(CRDT::StringArray *this)
{
  int v2;
  topotext::String *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  CRDT::StringArray_ArrayAttachment *v10;
  google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = (topotext::String *)*((_QWORD *)this + 5);
    if (!v3)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v3 = *(topotext::String **)(CRDT::StringArray::default_instance_ + 40);
    }
    v4 = (google::protobuf::io::CodedOutputStream *)topotext::String::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    v2 = v5 + v6 + 1;
  }
  else
  {
    v2 = 0;
  }
  v7 = *((_DWORD *)this + 14);
  v8 = v7 + v2;
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (CRDT::StringArray_ArrayAttachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)this + 48, v9);
      v11 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray_ArrayAttachment::ByteSize(v10);
      v12 = (int)v11;
      if (v11 >= 0x80)
        v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      else
        v13 = 1;
      v8 += v12 + v13;
      ++v9;
    }
    while (v9 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
    v14 = *((_QWORD *)this + 2);
  else
    LODWORD(v14) = *((unsigned __int8 *)this + 31);
  result = (v8 + v14);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::StringArray::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::StringArray::MergeFrom(this, lpsrc);
}

uint64_t CRDT::StringArray::IsInitialized(CRDT::StringArray *this)
{
  return 1;
}

_QWORD *CRDT::StringArray::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.StringArray");
}

std::string *CRDT::Array::MergeFrom(CRDT::Array *this, const CRDT::Array *a2)
{
  CRDT::Array *v3;
  std::string *v4;
  int v5;
  int32x2_t *v6;
  int32x2_t *v7;
  int32x2_t *v8;
  int32x2_t *v9;
  const std::string::value_type *v10;
  char *v11;
  const std::string::value_type *v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  char v17;
  std::string v18[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3480);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (int32x2_t *)*((_QWORD *)v3 + 5);
      if (!v6)
      {
        this = (CRDT::Array *)operator new();
        v6 = (int32x2_t *)this;
        *(_QWORD *)this = &off_1E76D0658;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *(_OWORD *)((char *)this + 52) = 0u;
        *((_QWORD *)v3 + 5) = this;
      }
      v7 = (int32x2_t *)*((_QWORD *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v7 = *(int32x2_t **)(CRDT::Array::default_instance_ + 40);
      }
      this = (CRDT::Array *)CRDT::StringArray::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      v8 = (int32x2_t *)*((_QWORD *)v3 + 6);
      if (!v8)
      {
        this = (CRDT::Array *)operator new();
        v8 = (int32x2_t *)this;
        *(_QWORD *)this = &off_1E76D0388;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_DWORD *)this + 14) = 0;
        *((_QWORD *)v3 + 6) = this;
      }
      v9 = (int32x2_t *)*((_QWORD *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v9 = *(int32x2_t **)(CRDT::Array::default_instance_ + 48);
      }
      CRDT::Dictionary::MergeFrom(v8, v9);
    }
  }
  v12 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v11 = (char *)a2 + 8;
  v10 = v12;
  v13 = v11[23];
  if (v13 >= 0)
    v14 = v11;
  else
    v14 = v10;
  if (v13 >= 0)
    v15 = v11[23];
  else
    v15 = *((_QWORD *)v11 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1BDAAF9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Array::~Array(void **this)
{
  *this = &off_1E76D06D0;
  CRDT::Array::SharedDtor((CRDT::Array *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::Array::~Array(this);
  JUMPOUT(0x1C3B7A848);
}

void CRDT::Array::SharedDtor(CRDT::Array *this)
{
  uint64_t v2;
  uint64_t v3;

  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Array *)CRDT::Array::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CRDT::Array::default_instance(CRDT::Array *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::Array::default_instance_;
}

double CRDT::Array::New(CRDT::Array *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D06D0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CRDT::Array::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((v4 & 3) != 0)
  {
    if ((v4 & 1) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
      {
        this = CRDT::StringArray::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 2) != 0)
    {
      this = *(_QWORD *)(v3 + 48);
      if (this)
        this = CRDT::Dictionary::Clear(this);
    }
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Array::MergePartialFromCodedStream(CRDT::Array *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  uint64_t v9;
  char *v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  _BYTE v28[32];
  _QWORD v29[2];
  unsigned int v30;

  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        break;
    }
    else
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if ((_DWORD)v7 == 18)
        goto LABEL_33;
      goto LABEL_21;
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      v9 = *((_QWORD *)this + 5);
      if (!v9)
      {
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E76D0658;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 52) = 0u;
        *((_QWORD *)this + 5) = v9;
      }
      v30 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
          goto LABEL_48;
      }
      else
      {
        v30 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      v12 = *((_DWORD *)a2 + 14);
      v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13)
        goto LABEL_48;
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::StringArray::MergePartialFromCodedStream((int32x2_t *)v9, a2) || !*((_BYTE *)a2 + 36))
        goto LABEL_48;
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      v15 = *((_DWORD *)a2 + 14);
      v16 = __OFSUB__(v15, 1);
      v17 = v15 - 1;
      if (v17 < 0 == v16)
        *((_DWORD *)a2 + 14) = v17;
      v18 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v18 < *((_QWORD *)a2 + 2) && *v18 == 18)
      {
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        v19 = *((_QWORD *)this + 6);
        if (!v19)
        {
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E76D0388;
          *(_OWORD *)(v19 + 8) = 0u;
          *(_OWORD *)(v19 + 24) = 0u;
          *(_OWORD *)(v19 + 40) = 0u;
          *(_DWORD *)(v19 + 56) = 0;
          *((_QWORD *)this + 6) = v19;
        }
        v30 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
            goto LABEL_48;
        }
        else
        {
          v30 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Dictionary::MergePartialFromCodedStream((int32x2_t *)v19, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_48:
          v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        v24 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v16)
          *((_DWORD *)a2 + 14) = v25;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          v26 = 1;
          *((_BYTE *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_49;
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48;
    }
  }
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_18;
LABEL_49:
  v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1BDAAFEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Array::SerializeWithCachedSizes(CRDT::Array *this, google::protobuf::io::CodedOutputStream *a2)
{
  CRDT::Array *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v5 = *(_QWORD *)(CRDT::Array::default_instance_ + 40);
    }
    this = (CRDT::Array *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_QWORD *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v6 = *(_QWORD *)(CRDT::Array::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)v3 + 1);
    v8 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v7 = (char *)v3 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Array::ByteSize(CRDT::Array *this)
{
  int v2;
  CRDT::StringArray *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  CRDT::Dictionary *v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (CRDT::StringArray *)*((_QWORD *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    v3 = *(CRDT::StringArray **)(CRDT::Array::default_instance_ + 40);
  }
  v4 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    v7 = (CRDT::Dictionary *)*((_QWORD *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v7 = *(CRDT::Dictionary **)(CRDT::Array::default_instance_ + 48);
    }
    v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Array::CheckTypeAndMergeFrom(CRDT::Array *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Array::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Array::IsInitialized(CRDT::Array *this)
{
  return 1;
}

_QWORD *CRDT::Array::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Array");
}

std::string *CRDT::OrderedSet::MergeFrom(CRDT::OrderedSet *this, const CRDT::OrderedSet *a2)
{
  CRDT::OrderedSet *v3;
  std::string *v4;
  int v5;
  CRDT::Array *v6;
  const CRDT::Array *v7;
  int32x2_t *v8;
  int32x2_t *v9;
  const std::string::value_type *v10;
  char *v11;
  const std::string::value_type *v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  char v17;
  std::string v18[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3723);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CRDT::Array *)*((_QWORD *)v3 + 5);
      if (!v6)
      {
        this = (CRDT::OrderedSet *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E76D06D0;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_QWORD *)v3 + 5) = this;
      }
      v7 = (const CRDT::Array *)*((_QWORD *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v7 = *(const CRDT::Array **)(CRDT::OrderedSet::default_instance_ + 40);
      }
      this = (CRDT::OrderedSet *)CRDT::Array::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      v8 = (int32x2_t *)*((_QWORD *)v3 + 6);
      if (!v8)
      {
        this = (CRDT::OrderedSet *)operator new();
        v8 = (int32x2_t *)this;
        *(_QWORD *)this = &off_1E76D0388;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_DWORD *)this + 14) = 0;
        *((_QWORD *)v3 + 6) = this;
      }
      v9 = (int32x2_t *)*((_QWORD *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v9 = *(int32x2_t **)(CRDT::OrderedSet::default_instance_ + 48);
      }
      CRDT::Dictionary::MergeFrom(v8, v9);
    }
  }
  v12 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v11 = (char *)a2 + 8;
  v10 = v12;
  v13 = v11[23];
  if (v13 >= 0)
    v14 = v11;
  else
    v14 = v10;
  if (v13 >= 0)
    v15 = v11[23];
  else
    v15 = *((_QWORD *)v11 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1BDAB0278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::OrderedSet::~OrderedSet(void **this)
{
  *this = &off_1E76D0748;
  CRDT::OrderedSet::SharedDtor((CRDT::OrderedSet *)this);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::OrderedSet::~OrderedSet(this);
  JUMPOUT(0x1C3B7A848);
}

void CRDT::OrderedSet::SharedDtor(CRDT::OrderedSet *this)
{
  uint64_t v2;
  uint64_t v3;

  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::OrderedSet *)CRDT::OrderedSet::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CRDT::OrderedSet::default_instance(CRDT::OrderedSet *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::OrderedSet::default_instance_;
}

double CRDT::OrderedSet::New(CRDT::OrderedSet *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0748;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CRDT::OrderedSet::Clear(uint64_t this, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  v3 = this;
  v4 = *(_DWORD *)(this + 32);
  if ((v4 & 3) != 0)
  {
    if ((v4 & 1) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
      {
        this = CRDT::Array::Clear(this, a2, a3);
        v4 = *(_DWORD *)(v3 + 32);
      }
    }
    if ((v4 & 2) != 0)
    {
      this = *(_QWORD *)(v3 + 48);
      if (this)
        this = CRDT::Dictionary::Clear(this);
    }
  }
  *(_DWORD *)(v3 + 32) = 0;
  if (*(char *)(v3 + 31) < 0)
  {
    **(_BYTE **)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::OrderedSet::MergePartialFromCodedStream(CRDT::OrderedSet *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  uint64_t v9;
  char *v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  _BYTE v28[32];
  _QWORD v29[2];
  unsigned int v30;

  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        break;
    }
    else
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if ((_DWORD)v7 == 18)
        goto LABEL_33;
      goto LABEL_21;
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      v9 = *((_QWORD *)this + 5);
      if (!v9)
      {
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E76D06D0;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *((_QWORD *)this + 5) = v9;
      }
      v30 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
          goto LABEL_48;
      }
      else
      {
        v30 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      v12 = *((_DWORD *)a2 + 14);
      v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13)
        goto LABEL_48;
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::Array::MergePartialFromCodedStream((CRDT::Array *)v9, a2) || !*((_BYTE *)a2 + 36))
        goto LABEL_48;
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      v15 = *((_DWORD *)a2 + 14);
      v16 = __OFSUB__(v15, 1);
      v17 = v15 - 1;
      if (v17 < 0 == v16)
        *((_DWORD *)a2 + 14) = v17;
      v18 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v18 < *((_QWORD *)a2 + 2) && *v18 == 18)
      {
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        v19 = *((_QWORD *)this + 6);
        if (!v19)
        {
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E76D0388;
          *(_OWORD *)(v19 + 8) = 0u;
          *(_OWORD *)(v19 + 24) = 0u;
          *(_OWORD *)(v19 + 40) = 0u;
          *(_DWORD *)(v19 + 56) = 0;
          *((_QWORD *)this + 6) = v19;
        }
        v30 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
            goto LABEL_48;
        }
        else
        {
          v30 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Dictionary::MergePartialFromCodedStream((int32x2_t *)v19, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_48:
          v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        v24 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v16)
          *((_DWORD *)a2 + 14) = v25;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          v26 = 1;
          *((_BYTE *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_49;
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48;
    }
  }
  if ((_DWORD)v7)
    v11 = (v7 & 7) == 4;
  else
    v11 = 1;
  if (!v11)
    goto LABEL_18;
LABEL_49:
  v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1BDAB0770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OrderedSet::SerializeWithCachedSizes(CRDT::OrderedSet *this, google::protobuf::io::CodedOutputStream *a2)
{
  CRDT::OrderedSet *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v5 = *(_QWORD *)(CRDT::OrderedSet::default_instance_ + 40);
    }
    this = (CRDT::OrderedSet *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_QWORD *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v6 = *(_QWORD *)(CRDT::OrderedSet::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)v3 + 1);
    v8 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v7 = (char *)v3 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::OrderedSet::ByteSize(CRDT::OrderedSet *this)
{
  int v2;
  CRDT::Array *v3;
  google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  CRDT::Dictionary *v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  if (!*((_BYTE *)this + 32))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (CRDT::Array *)*((_QWORD *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    v3 = *(CRDT::Array **)(CRDT::OrderedSet::default_instance_ + 40);
  }
  v4 = (google::protobuf::io::CodedOutputStream *)CRDT::Array::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    v7 = (CRDT::Dictionary *)*((_QWORD *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v7 = *(CRDT::Dictionary **)(CRDT::OrderedSet::default_instance_ + 48);
    }
    v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OrderedSet::CheckTypeAndMergeFrom(CRDT::OrderedSet *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::OrderedSet::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OrderedSet::IsInitialized(CRDT::OrderedSet *this)
{
  return 1;
}

_QWORD *CRDT::OrderedSet::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OrderedSet");
}

std::string *CRDT::Document_CustomObject_MapEntry::MergeFrom(CRDT::Document_CustomObject_MapEntry *this, const CRDT::Document_CustomObject_MapEntry *a2)
{
  CRDT::Document_CustomObject_MapEntry *v3;
  std::string *v4;
  int v5;
  int v6;
  CRDT::ObjectID *v7;
  uint64_t v8;
  uint64_t v9;
  const CRDT::ObjectID *v10;
  const std::string::value_type *v11;
  char *v12;
  const std::string::value_type *v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  char v18;
  std::string v19[2];

  v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3958);
    v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)v3 + 8) |= 1u;
      *((_DWORD *)v3 + 12) = v6;
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      v7 = (CRDT::ObjectID *)*((_QWORD *)v3 + 5);
      if (!v7)
      {
        v7 = (CRDT::ObjectID *)operator new();
        this = CRDT::ObjectID::ObjectID(v7, v8, v9);
        *((_QWORD *)v3 + 5) = v7;
      }
      v10 = (const CRDT::ObjectID *)*((_QWORD *)a2 + 5);
      if (!v10)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        v10 = *(const CRDT::ObjectID **)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
      }
      CRDT::ObjectID::MergeFrom(v7, v10);
    }
  }
  v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  v12 = (char *)a2 + 8;
  v11 = v13;
  v14 = v12[23];
  if (v14 >= 0)
    v15 = v12;
  else
    v15 = v11;
  if (v14 >= 0)
    v16 = v12[23];
  else
    v16 = *((_QWORD *)v12 + 1);
  return std::string::append((std::string *)((char *)v3 + 8), v15, v16);
}

void sub_1BDAB0A90(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::Document_CustomObject_MapEntry::~Document_CustomObject_MapEntry(void **this)
{
  void *v2;

  *this = &off_1E76D07C0;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if ((void **)CRDT::Document_CustomObject_MapEntry::default_instance_ != this)
  {
    v2 = this[5];
    if (v2)
      (*(void (**)(void *))(*(_QWORD *)v2 + 8))(v2);
  }
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  CRDT::Document_CustomObject_MapEntry::~Document_CustomObject_MapEntry(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t CRDT::Document_CustomObject_MapEntry::default_instance(CRDT::Document_CustomObject_MapEntry *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::Document_CustomObject_MapEntry::default_instance_;
}

double CRDT::Document_CustomObject_MapEntry::New(CRDT::Document_CustomObject_MapEntry *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D07C0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t CRDT::Document_CustomObject_MapEntry::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    *(_DWORD *)(this + 48) = 0;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(_QWORD *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(_BYTE **)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        else
        {
          *(_BYTE *)(v3 + 8) = 0;
          *(_BYTE *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Document_CustomObject_MapEntry::MergePartialFromCodedStream(CRDT::Document_CustomObject_MapEntry *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  BOOL v13;
  int v14;
  CRDT::ObjectID *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  uint64_t v25;
  _BYTE v27[32];
  _QWORD v28[2];
  unsigned int v29;

  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
    {
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        break;
    }
    else
    {
      v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((_QWORD *)a2 + 1) = v5 + 1;
      v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if ((_DWORD)v7 == 18)
      {
        v14 = *((_DWORD *)this + 8);
        goto LABEL_28;
      }
      goto LABEL_19;
    }
    if (v7 >> 3 != 1)
      break;
    if ((_DWORD)v7 == 8)
    {
      v29 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
          goto LABEL_43;
        v11 = v29;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 12) = v11;
      v14 = *((_DWORD *)this + 8) | 1;
      *((_DWORD *)this + 8) = v14;
      if ((unint64_t)v12 < v9 && *v12 == 18)
      {
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_28:
        *((_DWORD *)this + 8) = v14 | 2;
        v15 = (CRDT::ObjectID *)*((_QWORD *)this + 5);
        if (!v15)
        {
          v15 = (CRDT::ObjectID *)operator new();
          CRDT::ObjectID::ObjectID(v15, v16, v17);
          *((_QWORD *)this + 5) = v15;
        }
        v29 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
            goto LABEL_43;
        }
        else
        {
          v29 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20
          || (v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29),
              !CRDT::ObjectID::MergePartialFromCodedStream(v15, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_43:
          v25 = 0;
          goto LABEL_45;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          v25 = 1;
          *((_BYTE *)a2 + 36) = 1;
          goto LABEL_45;
        }
      }
    }
    else
    {
LABEL_19:
      if (!(_DWORD)v7 || (v7 & 7) == 4)
        goto LABEL_44;
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4))goto LABEL_43;
    }
  }
  if ((_DWORD)v7)
    v13 = (v7 & 7) == 4;
  else
    v13 = 1;
  if (!v13)
    goto LABEL_16;
LABEL_44:
  v25 = 1;
LABEL_45:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1BDAB0ECC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_CustomObject_MapEntry::SerializeWithCachedSizes(CRDT::Document_CustomObject_MapEntry *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  CRDT::Document_CustomObject_MapEntry *v5;
  int v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v5 = this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    this = (CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 12), a2, a4);
    v6 = *((_DWORD *)v5 + 8);
  }
  if ((v6 & 2) != 0)
  {
    v7 = *((_QWORD *)v5 + 5);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v7 = *(_QWORD *)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  }
  if (*((char *)v5 + 31) < 0)
  {
    v8 = (char *)*((_QWORD *)v5 + 1);
    v9 = *((_QWORD *)v5 + 2);
  }
  else
  {
    v8 = (char *)v5 + 8;
    LODWORD(v9) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t CRDT::Document_CustomObject_MapEntry::ByteSize(CRDT::Document_CustomObject_MapEntry *this)
{
  char v2;
  int v3;
  google::protobuf::io::CodedOutputStream *v4;
  CRDT::ObjectID *v5;
  google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t result;

  v2 = *((_BYTE *)this + 32);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_19;
  }
  v5 = (CRDT::ObjectID *)*((_QWORD *)this + 5);
  if (!v5)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    v5 = *(CRDT::ObjectID **)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
  }
  v6 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 += v7 + v8 + 1;
LABEL_19:
  if (*((char *)this + 31) < 0)
    v9 = *((_QWORD *)this + 2);
  else
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  result = (v3 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_CustomObject_MapEntry::CheckTypeAndMergeFrom(CRDT::Document_CustomObject_MapEntry *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Document_CustomObject_MapEntry::MergeFrom(this, lpsrc);
}

BOOL CRDT::Document_CustomObject_MapEntry::IsInitialized(CRDT::Document_CustomObject_MapEntry *this)
{
  return (~*((_DWORD *)this + 8) & 3) == 0;
}

_QWORD *CRDT::Document_CustomObject_MapEntry::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.CustomObject.MapEntry");
}

std::string *CRDT::Document_CustomObject::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  __int32 v5;
  const std::string::value_type *v6;
  int32x2_t *v7;
  int32x2_t v8;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 4184);
    v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(this + 5, a2 + 5);
  if ((a2[4].i8[0] & 1) != 0)
  {
    v5 = a2[8].i32[0];
    this[4].i32[0] |= 1u;
    this[8].i32[0] = v5;
  }
  v8 = a2[1];
  v7 = a2 + 1;
  v6 = (const std::string::value_type *)v8;
  v9 = v7[2].i8[7];
  if (v9 >= 0)
    v10 = (const std::string::value_type *)v7;
  else
    v10 = v6;
  if (v9 >= 0)
    v11 = v7[2].u8[7];
  else
    v11 = (std::string::size_type)v7[1];
  return std::string::append((std::string *)&this[1], v10, v11);
}

void sub_1BDAB1194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Document_CustomObject::~Document_CustomObject(CRDT::Document_CustomObject *this)
{
  *(_QWORD *)this = &off_1E76D0838;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  CRDT::Document_CustomObject::~Document_CustomObject(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t CRDT::Document_CustomObject::default_instance(CRDT::Document_CustomObject *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::Document_CustomObject::default_instance_;
}

double CRDT::Document_CustomObject::New(CRDT::Document_CustomObject *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D0838;
  *(_DWORD *)(v1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CRDT::Document_CustomObject::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  *(_DWORD *)(this + 64) = 0;
  if (*(int *)(this + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(_BYTE **)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
  }
  else
  {
    *(_BYTE *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Document_CustomObject::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v9;
  unint64_t v10;
  unsigned int v11;
  _BYTE *v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  int32x2_t v16;
  uint64_t v17;
  int32x2_t v18;
  int32x2_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE v30[32];
  _QWORD v31[2];
  unsigned int v32;

  google::protobuf::io::StringOutputStream::StringOutputStream(v31, (uint64_t)&this[1]);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30, (google::protobuf::io::ZeroCopyOutputStream *)v31);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 1)
      {
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_12;
      }
      else
      {
        v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((_QWORD *)a2 + 1) = v5 + 1;
        v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 3)
      {
        if ((_DWORD)v7 == 26)
          goto LABEL_27;
LABEL_19:
        if (!(_DWORD)v7 || (v7 & 7) == 4)
          goto LABEL_48;
        goto LABEL_16;
      }
      if (v7 >> 3 == 1)
        break;
LABEL_12:
      if ((_DWORD)v7)
        v13 = (v7 & 7) == 4;
      else
        v13 = 1;
      if (v13)
      {
LABEL_48:
        v28 = 1;
        goto LABEL_49;
      }
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v30, v4))goto LABEL_47;
    }
    if ((_DWORD)v7 != 8)
      goto LABEL_19;
    v32 = 0;
    v9 = (char *)*((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
    if ((unint64_t)v9 >= v10 || *v9 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))
        goto LABEL_47;
      v11 = v32;
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
    }
    else
    {
      v11 = *v9;
      v12 = v9 + 1;
      *((_QWORD *)a2 + 1) = v12;
    }
    this[8].i32[0] = v11;
    this[4].i32[0] |= 1u;
    if ((unint64_t)v12 < v10 && *v12 == 26)
    {
      do
      {
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_27:
        v14 = this[6].i32[1];
        v15 = this[6].i32[0];
        if ((int)v15 >= v14)
        {
          if (v14 == this[7].i32[0])
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[5], v14 + 1);
          v17 = operator new();
          *(_QWORD *)v17 = &off_1E76D07C0;
          *(_OWORD *)(v17 + 8) = 0u;
          *(_OWORD *)(v17 + 24) = 0u;
          *(_OWORD *)(v17 + 36) = 0u;
          v18 = this[5];
          v19 = this[6];
          this[6] = vadd_s32(v19, (int32x2_t)0x100000001);
          *(_QWORD *)(*(_QWORD *)&v18 + 8 * v19.i32[0]) = v17;
        }
        else
        {
          v16 = this[5];
          this[6].i32[0] = v15 + 1;
          v17 = *(_QWORD *)(*(_QWORD *)&v16 + 8 * v15);
        }
        v32 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))
            goto LABEL_47;
        }
        else
        {
          v32 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32),
              !CRDT::Document_CustomObject_MapEntry::MergePartialFromCodedStream((CRDT::Document_CustomObject_MapEntry *)v17, a2))|| !*((_BYTE *)a2 + 36))
        {
LABEL_47:
          v28 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        v24 = *((_DWORD *)a2 + 14);
        v25 = __OFSUB__(v24, 1);
        v26 = v24 - 1;
        if (v26 < 0 == v25)
          *((_DWORD *)a2 + 14) = v26;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = (_BYTE *)*((_QWORD *)a2 + 2);
      }
      while (v12 < v27 && *v12 == 26);
      if (v12 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        break;
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  v28 = 1;
  *((_BYTE *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v31);
  return v28;
}

void sub_1BDAB1610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_CustomObject::SerializeWithCachedSizes(CRDT::Document_CustomObject *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  if ((*((_BYTE *)this + 32) & 1) != 0)
    google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 16), a2, a4);
  if (*((int *)this + 12) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    v8 = (char *)*((_QWORD *)this + 1);
    v9 = *((_QWORD *)this + 2);
  }
  else
  {
    v8 = (char *)this + 8;
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t CRDT::Document_CustomObject::ByteSize(CRDT::Document_CustomObject *this)
{
  int v2;
  google::protobuf::io::CodedOutputStream *v3;
  int v4;
  int v5;
  int v6;
  CRDT::Document_CustomObject_MapEntry *v7;
  google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v3 & 0x80000000) != 0)
    {
      v2 = 11;
    }
    else if (v3 >= 0x80)
    {
      v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      v2 = 2;
    }
  }
  else
  {
    v2 = 0;
  }
  v4 = *((_DWORD *)this + 12);
  v5 = v4 + v2;
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)this + 40, v6);
      v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_CustomObject_MapEntry::ByteSize(v7);
      v9 = (int)v8;
      if (v8 >= 0x80)
        v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      else
        v10 = 1;
      v5 += v9 + v10;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
    v11 = *((_QWORD *)this + 2);
  else
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  result = (v5 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_CustomObject::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Document_CustomObject::MergeFrom(this, lpsrc);
}

BOOL CRDT::Document_CustomObject::IsInitialized(CRDT::Document_CustomObject *this)
{
  return google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>>((uint64_t)this + 40);
}

BOOL google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>>(uint64_t a1)
{
  int v2;
  int v3;
  BOOL v4;
  uint64_t v5;

  v2 = *(_DWORD *)(a1 + 8);
  do
  {
    v3 = v2;
    v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4)
      break;
    v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(a1, v2);
  }
  while (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5) & 1) != 0);
  return v3 < 1;
}

_QWORD *CRDT::Document_CustomObject::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.CustomObject");
}

std::string *CRDT::Document_DocObject::MergeFrom(CRDT::Document_DocObject *this, const CRDT::Document_DocObject *a2)
{
  std::string *v4;
  uint64_t v5;
  CRDT::RegisterLatest *v6;
  uint64_t v7;
  int32x2_t *v8;
  int32x2_t *v9;
  int32x2_t *v10;
  CRDT::Array *v11;
  const CRDT::RegisterLatest **v12;
  int32x2_t **v13;
  CRDT::Timestamp *v14;
  int32x2_t *v15;
  int32x2_t *v16;
  topotext::String *v17;
  uint64_t v18;
  int32x2_t *v19;
  CRDT::OrderedSet *v20;
  uint64_t v21;
  int32x2_t **v22;
  uint64_t v23;
  int32x2_t **v24;
  uint64_t v25;
  const CRDT::Array **v26;
  uint64_t v27;
  const CRDT::Timestamp **v28;
  uint64_t v29;
  int32x2_t **v30;
  uint64_t v31;
  int32x2_t **v32;
  topotext::String *v33;
  int32x2_t *v34;
  uint64_t v35;
  int32x2_t **v36;
  uint64_t v37;
  const CRDT::OrderedSet **v38;
  const std::string::value_type *v39;
  char *v40;
  const std::string::value_type *v41;
  int v42;
  const std::string::value_type *v43;
  std::string::size_type v44;
  char v46;
  std::string v47[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v47, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 4864);
    v4 = google::protobuf::internal::LogMessage::operator<<(v47, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v46, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v47[0].__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 1:
      if (*((_DWORD *)this + 12) == 1)
        goto LABEL_20;
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 1;
      v5 = operator new();
      v6 = (CRDT::RegisterLatest *)v5;
      *(_QWORD *)v5 = &off_1E76D01A8;
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      *((_QWORD *)this + 5) = v5;
      if (*((_DWORD *)a2 + 12) == 1)
        goto LABEL_21;
      goto LABEL_50;
    case 2:
      if (*((_DWORD *)this + 12) == 2)
        goto LABEL_20;
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 2;
      v5 = operator new();
      v6 = (CRDT::RegisterLatest *)v5;
      *(_QWORD *)v5 = &off_1E76D01A8;
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      *((_QWORD *)this + 5) = v5;
      if (*((_DWORD *)a2 + 12) != 2)
        goto LABEL_50;
      goto LABEL_21;
    case 3:
      if (*((_DWORD *)this + 12) == 3)
      {
LABEL_20:
        v6 = (CRDT::RegisterLatest *)*((_QWORD *)this + 5);
LABEL_21:
        v12 = (const CRDT::RegisterLatest **)((char *)a2 + 40);
        goto LABEL_51;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 3;
      v5 = operator new();
      v6 = (CRDT::RegisterLatest *)v5;
      *(_QWORD *)v5 = &off_1E76D01A8;
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      *((_QWORD *)this + 5) = v5;
      if (*((_DWORD *)a2 + 12) == 3)
        goto LABEL_21;
LABEL_50:
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v5);
      v12 = (const CRDT::RegisterLatest **)&CRDT::RegisterLatest::default_instance_;
LABEL_51:
      CRDT::RegisterLatest::MergeFrom(v6, *v12);
      goto LABEL_85;
    case 4:
      if (*((_DWORD *)this + 12) == 4)
        goto LABEL_26;
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 4;
      v7 = operator new();
      v8 = (int32x2_t *)v7;
      *(_QWORD *)v7 = &off_1E76D0388;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(_DWORD *)(v7 + 56) = 0;
      *((_QWORD *)this + 5) = v7;
      if (*((_DWORD *)a2 + 12) != 4)
        goto LABEL_53;
      goto LABEL_27;
    case 5:
      if (*((_DWORD *)this + 12) == 5)
        goto LABEL_26;
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 5;
      v7 = operator new();
      v8 = (int32x2_t *)v7;
      *(_QWORD *)v7 = &off_1E76D0388;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(_DWORD *)(v7 + 56) = 0;
      *((_QWORD *)this + 5) = v7;
      if (*((_DWORD *)a2 + 12) != 5)
        goto LABEL_53;
      goto LABEL_27;
    case 6:
      if (*((_DWORD *)this + 12) == 6)
      {
LABEL_26:
        v8 = (int32x2_t *)*((_QWORD *)this + 5);
LABEL_27:
        v13 = (int32x2_t **)((char *)a2 + 40);
        goto LABEL_54;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 6;
      v7 = operator new();
      v8 = (int32x2_t *)v7;
      *(_QWORD *)v7 = &off_1E76D0388;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(_DWORD *)(v7 + 56) = 0;
      *((_QWORD *)this + 5) = v7;
      if (*((_DWORD *)a2 + 12) == 6)
        goto LABEL_27;
LABEL_53:
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v7);
      v13 = (int32x2_t **)&CRDT::Dictionary::default_instance_;
LABEL_54:
      CRDT::Dictionary::MergeFrom(v8, *v13);
      goto LABEL_85;
    case 7:
      if (*((_DWORD *)this + 12) == 7)
      {
        v14 = (CRDT::Timestamp *)*((_QWORD *)this + 5);
LABEL_56:
        v28 = (const CRDT::Timestamp **)((char *)a2 + 40);
        goto LABEL_74;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 7;
      v27 = operator new();
      v14 = (CRDT::Timestamp *)v27;
      *(_QWORD *)v27 = &off_1E76D0130;
      *(_OWORD *)(v27 + 8) = 0u;
      *(_OWORD *)(v27 + 24) = 0u;
      *(_OWORD *)(v27 + 40) = 0u;
      *((_QWORD *)this + 5) = v27;
      if (*((_DWORD *)a2 + 12) == 7)
        goto LABEL_56;
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v27);
      v28 = (const CRDT::Timestamp **)&CRDT::Timestamp::default_instance_;
LABEL_74:
      CRDT::Timestamp::MergeFrom(v14, *v28);
      goto LABEL_85;
    case 8:
      if (*((_DWORD *)this + 12) == 8)
      {
        v15 = (int32x2_t *)*((_QWORD *)this + 5);
LABEL_58:
        v30 = (int32x2_t **)((char *)a2 + 40);
        goto LABEL_76;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 8;
      v29 = operator new();
      v15 = (int32x2_t *)v29;
      *(_QWORD *)v29 = &off_1E76D0298;
      *(_OWORD *)(v29 + 8) = 0u;
      *(_OWORD *)(v29 + 24) = 0u;
      *(_OWORD *)(v29 + 40) = 0u;
      *(_DWORD *)(v29 + 56) = 0;
      *((_QWORD *)this + 5) = v29;
      if (*((_DWORD *)a2 + 12) == 8)
        goto LABEL_58;
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v29);
      v30 = (int32x2_t **)&CRDT::VectorTimestamp::default_instance_;
LABEL_76:
      CRDT::VectorTimestamp::MergeFrom(v15, *v30);
      goto LABEL_85;
    case 9:
      if (*((_DWORD *)this + 12) == 9)
      {
        v16 = (int32x2_t *)*((_QWORD *)this + 5);
LABEL_60:
        v32 = (int32x2_t **)((char *)a2 + 40);
        goto LABEL_78;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 9;
      v31 = operator new();
      v16 = (int32x2_t *)v31;
      *(_QWORD *)v31 = &off_1E76D0478;
      *(_OWORD *)(v31 + 8) = 0u;
      *(_OWORD *)(v31 + 24) = 0u;
      *(_OWORD *)(v31 + 40) = 0u;
      *(_DWORD *)(v31 + 56) = 0;
      *((_QWORD *)this + 5) = v31;
      if (*((_DWORD *)a2 + 12) == 9)
        goto LABEL_60;
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v31);
      v32 = (int32x2_t **)&CRDT::Index::default_instance_;
LABEL_78:
      CRDT::Index::MergeFrom(v16, *v32);
      goto LABEL_85;
    case 0xA:
      if (*((_DWORD *)this + 12) == 10)
      {
        v17 = (topotext::String *)*((_QWORD *)this + 5);
LABEL_62:
        v34 = (int32x2_t *)*((_QWORD *)a2 + 5);
        goto LABEL_84;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 10;
      v17 = (topotext::String *)operator new();
      v33 = (topotext::String *)topotext::String::String(v17);
      *((_QWORD *)this + 5) = v17;
      if (*((_DWORD *)a2 + 12) == 10)
        goto LABEL_62;
      v34 = (int32x2_t *)topotext::String::default_instance(v33);
LABEL_84:
      topotext::String::MergeFrom((int32x2_t *)v17, v34);
      goto LABEL_85;
    case 0xB:
      v18 = *((_QWORD *)a2 + 5);
      if (*((_DWORD *)this + 12) != 11)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 11;
      }
      *((_QWORD *)this + 5) = v18;
      goto LABEL_85;
    case 0xC:
      if (*((_DWORD *)this + 12) == 12)
      {
        v9 = (int32x2_t *)*((_QWORD *)this + 5);
LABEL_44:
        v22 = (int32x2_t **)((char *)a2 + 40);
        goto LABEL_68;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 12;
      v21 = operator new();
      v9 = (int32x2_t *)v21;
      *(_QWORD *)v21 = &off_1E76D0568;
      *(_OWORD *)(v21 + 8) = 0u;
      *(_OWORD *)(v21 + 24) = 0u;
      *(_OWORD *)(v21 + 40) = 0u;
      *(_DWORD *)(v21 + 56) = 0;
      *((_QWORD *)this + 5) = v21;
      if (*((_DWORD *)a2 + 12) == 12)
        goto LABEL_44;
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v21);
      v22 = (int32x2_t **)&CRDT::OneOf::default_instance_;
LABEL_68:
      CRDT::OneOf::MergeFrom(v9, *v22);
      goto LABEL_85;
    case 0xD:
      if (*((_DWORD *)this + 12) == 13)
      {
        v10 = (int32x2_t *)*((_QWORD *)this + 5);
LABEL_46:
        v24 = (int32x2_t **)((char *)a2 + 40);
        goto LABEL_70;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 13;
      v23 = operator new();
      v10 = (int32x2_t *)v23;
      *(_QWORD *)v23 = &off_1E76D0838;
      *(_DWORD *)(v23 + 64) = 0;
      *(_OWORD *)(v23 + 8) = 0u;
      *(_OWORD *)(v23 + 24) = 0u;
      *(_OWORD *)(v23 + 40) = 0u;
      *(_DWORD *)(v23 + 56) = 0;
      *((_QWORD *)this + 5) = v23;
      if (*((_DWORD *)a2 + 12) == 13)
        goto LABEL_46;
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v23);
      v24 = (int32x2_t **)&CRDT::Document_CustomObject::default_instance_;
LABEL_70:
      CRDT::Document_CustomObject::MergeFrom(v10, *v24);
      goto LABEL_85;
    case 0xE:
      if (*((_DWORD *)this + 12) == 14)
      {
        v19 = (int32x2_t *)*((_QWORD *)this + 5);
LABEL_64:
        v36 = (int32x2_t **)((char *)a2 + 40);
        goto LABEL_80;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 14;
      v35 = operator new();
      v19 = (int32x2_t *)v35;
      *(_QWORD *)v35 = &off_1E76D0658;
      *(_OWORD *)(v35 + 8) = 0u;
      *(_OWORD *)(v35 + 24) = 0u;
      *(_OWORD *)(v35 + 40) = 0u;
      *(_OWORD *)(v35 + 52) = 0u;
      *((_QWORD *)this + 5) = v35;
      if (*((_DWORD *)a2 + 12) == 14)
        goto LABEL_64;
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v35);
      v36 = (int32x2_t **)&CRDT::StringArray::default_instance_;
LABEL_80:
      CRDT::StringArray::MergeFrom(v19, *v36);
      goto LABEL_85;
    case 0xF:
      if (*((_DWORD *)this + 12) == 15)
      {
        v11 = (CRDT::Array *)*((_QWORD *)this + 5);
LABEL_48:
        v26 = (const CRDT::Array **)((char *)a2 + 40);
        goto LABEL_72;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 15;
      v25 = operator new();
      v11 = (CRDT::Array *)v25;
      *(_QWORD *)v25 = &off_1E76D06D0;
      *(_OWORD *)(v25 + 8) = 0u;
      *(_OWORD *)(v25 + 24) = 0u;
      *(_OWORD *)(v25 + 40) = 0u;
      *((_QWORD *)this + 5) = v25;
      if (*((_DWORD *)a2 + 12) == 15)
        goto LABEL_48;
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v25);
      v26 = (const CRDT::Array **)&CRDT::Array::default_instance_;
LABEL_72:
      CRDT::Array::MergeFrom(v11, *v26);
      goto LABEL_85;
    case 0x10:
      if (*((_DWORD *)this + 12) == 16)
      {
        v20 = (CRDT::OrderedSet *)*((_QWORD *)this + 5);
LABEL_66:
        v38 = (const CRDT::OrderedSet **)((char *)a2 + 40);
        goto LABEL_82;
      }
      CRDT::Document_DocObject::clear_contents((uint64_t)this);
      *((_DWORD *)this + 12) = 16;
      v37 = operator new();
      v20 = (CRDT::OrderedSet *)v37;
      *(_QWORD *)v37 = &off_1E76D0748;
      *(_OWORD *)(v37 + 8) = 0u;
      *(_OWORD *)(v37 + 24) = 0u;
      *(_OWORD *)(v37 + 40) = 0u;
      *((_QWORD *)this + 5) = v37;
      if (*((_DWORD *)a2 + 12) == 16)
        goto LABEL_66;
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v37);
      v38 = (const CRDT::OrderedSet **)&CRDT::OrderedSet::default_instance_;
LABEL_82:
      CRDT::OrderedSet::MergeFrom(v20, *v38);
LABEL_85:
      v41 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      v40 = (char *)a2 + 8;
      v39 = v41;
      v42 = v40[23];
      if (v42 >= 0)
        v43 = v40;
      else
        v43 = v39;
      if (v42 >= 0)
        v44 = v40[23];
      else
        v44 = *((_QWORD *)v40 + 1);
      return std::string::append((std::string *)((char *)this + 8), v43, v44);
    default:
      goto LABEL_85;
  }
}

void sub_1BDAB211C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

void CRDT::Document_DocObject::~Document_DocObject(CRDT::Document_DocObject *this)
{
  CRDT::Document_DocObject *v1;

  v1 = this;
  *(_QWORD *)this = &off_1E76D08B0;
  if (*((_DWORD *)this + 12))
    this = (CRDT::Document_DocObject *)CRDT::Document_DocObject::clear_contents((uint64_t)this);
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if (*((char *)v1 + 31) < 0)
    operator delete(*((void **)v1 + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v1);
}

{
  CRDT::Document_DocObject::~Document_DocObject(this);
  JUMPOUT(0x1C3B7A848);
}

uint64_t CRDT::Document_DocObject::clear_contents(uint64_t this)
{
  uint64_t v1;

  v1 = this;
  switch(*(_DWORD *)(this + 48))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
      this = *(_QWORD *)(this + 40);
      if (this)
        this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

double CRDT::Document_DocObject::New(CRDT::Document_DocObject *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E76D08B0;
  *(_DWORD *)(v1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CRDT::Document_DocObject::Clear(CRDT::Document_DocObject *this)
{
  uint64_t result;

  result = CRDT::Document_DocObject::clear_contents((uint64_t)this);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((_BYTE **)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
  }
  else
  {
    *((_BYTE *)this + 8) = 0;
    *((_BYTE *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Document_DocObject::MergePartialFromCodedStream(CRDT::Document_DocObject *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::CodedOutputStream *v4;
  uint64_t *v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  unint64_t v11;
  BOOL v12;
  unsigned int TagFallback;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  _BYTE *v31;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  _BYTE *v47;
  uint64_t v48;
  char *v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  _BYTE *v55;
  uint64_t v56;
  char *v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  _BYTE *v63;
  uint64_t v64;
  char *v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  _BYTE *v71;
  uint64_t v72;
  char *v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  _BYTE *v79;
  uint64_t v80;
  char *v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  _BYTE *v87;
  topotext::String *v88;
  char *v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  _BYTE *v95;
  unint64_t v96;
  char *v97;
  _BYTE *v98;
  char *v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  _BYTE *v105;
  uint64_t v106;
  char *v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  _BYTE *v113;
  uint64_t v114;
  char *v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  _BYTE *v121;
  uint64_t v122;
  char *v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned __int8 *v129;
  uint64_t v130;
  char *v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  uint64_t v137;
  _BYTE v139[32];
  _QWORD v140[2];
  unsigned int v141;

  google::protobuf::io::StringOutputStream::StringOutputStream(v140, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v139, (google::protobuf::io::ZeroCopyOutputStream *)v140);
  v5 = (uint64_t *)((char *)this + 40);
  while (2)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v6 < v7)
      {
        v8 = *v6;
        if (*v6 >= 1)
        {
          *((_DWORD *)a2 + 8) = v8;
          v9 = (unsigned __int8 *)(v6 + 1);
          goto LABEL_8;
        }
        if ((unint64_t)(v6 + 1) < v7)
        {
          v10 = v6[1];
          if ((v8 & ~v10) >= 0x80)
            break;
        }
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v11 & 0x100000000) != 0)
        goto LABEL_16;
LABEL_9:
      if ((_DWORD)v11)
        v12 = (v11 & 7) == 4;
      else
        v12 = 1;
      if (v12)
      {
LABEL_286:
        v137 = 1;
        goto LABEL_287;
      }
LABEL_52:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, (google::protobuf::io::CodedOutputStream *)v139, v4))goto LABEL_285;
    }
    v8 = (v8 + (v10 << 7) - 128);
    *((_DWORD *)a2 + 8) = v8;
    v9 = (unsigned __int8 *)(v6 + 2);
LABEL_8:
    *((_QWORD *)a2 + 1) = v9;
    v11 = v8 | 0x100000000;
LABEL_16:
    switch(v11 >> 3)
    {
      case 1u:
        if ((_DWORD)v11 != 10)
          goto LABEL_50;
        if (*((_DWORD *)this + 12) == 1)
        {
          v14 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 1;
          v14 = operator new();
          *(_QWORD *)v14 = &off_1E76D01A8;
          *(_OWORD *)(v14 + 8) = 0u;
          *(_OWORD *)(v14 + 24) = 0u;
          *(_OWORD *)(v14 + 40) = 0u;
          *v5 = v14;
        }
        v141 = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18)
          goto LABEL_285;
        v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream((CRDT::RegisterLatest *)v14, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        v20 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v22 < 0 == v21)
          *((_DWORD *)a2 + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_67:
        if (*((_DWORD *)this + 12) == 2)
        {
          v24 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 2;
          v24 = operator new();
          *(_QWORD *)v24 = &off_1E76D01A8;
          *(_OWORD *)(v24 + 8) = 0u;
          *(_OWORD *)(v24 + 24) = 0u;
          *(_OWORD *)(v24 + 40) = 0u;
          *v5 = v24;
        }
        v141 = 0;
        v25 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v25;
          *((_QWORD *)a2 + 1) = v25 + 1;
        }
        v26 = *((_DWORD *)a2 + 14);
        v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27)
          goto LABEL_285;
        v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream((CRDT::RegisterLatest *)v24, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v28);
        v29 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v29, 1);
        v30 = v29 - 1;
        if (v30 < 0 == v21)
          *((_DWORD *)a2 + 14) = v30;
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_82:
        if (*((_DWORD *)this + 12) == 3)
        {
          v32 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 3;
          v32 = operator new();
          *(_QWORD *)v32 = &off_1E76D01A8;
          *(_OWORD *)(v32 + 8) = 0u;
          *(_OWORD *)(v32 + 24) = 0u;
          *(_OWORD *)(v32 + 40) = 0u;
          *v5 = v32;
        }
        v141 = 0;
        v33 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v33;
          *((_QWORD *)a2 + 1) = v33 + 1;
        }
        v34 = *((_DWORD *)a2 + 14);
        v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35)
          goto LABEL_285;
        v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream((CRDT::RegisterLatest *)v32, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v36);
        v37 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v21)
          *((_DWORD *)a2 + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_97:
        if (*((_DWORD *)this + 12) == 4)
        {
          v40 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 4;
          v40 = operator new();
          *(_QWORD *)v40 = &off_1E76D0388;
          *(_OWORD *)(v40 + 8) = 0u;
          *(_OWORD *)(v40 + 24) = 0u;
          *(_OWORD *)(v40 + 40) = 0u;
          *(_DWORD *)(v40 + 56) = 0;
          *v5 = v40;
        }
        v141 = 0;
        v41 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v41;
          *((_QWORD *)a2 + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)a2 + 14);
        v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43)
          goto LABEL_285;
        v44 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream((int32x2_t *)v40, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_285;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v44);
        v45 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v45, 1);
        v46 = v45 - 1;
        if (v46 < 0 == v21)
          *((_DWORD *)a2 + 14) = v46;
        v47 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v47 >= *((_QWORD *)a2 + 2) || *v47 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v47 + 1;
LABEL_112:
        if (*((_DWORD *)this + 12) == 5)
        {
          v48 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 5;
          v48 = operator new();
          *(_QWORD *)v48 = &off_1E76D0388;
          *(_OWORD *)(v48 + 8) = 0u;
          *(_OWORD *)(v48 + 24) = 0u;
          *(_OWORD *)(v48 + 40) = 0u;
          *(_DWORD *)(v48 + 56) = 0;
          *v5 = v48;
        }
        v141 = 0;
        v49 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v49 >= *((_QWORD *)a2 + 2) || *v49 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v49;
          *((_QWORD *)a2 + 1) = v49 + 1;
        }
        v50 = *((_DWORD *)a2 + 14);
        v51 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v50 + 1;
        if (v50 >= v51)
          goto LABEL_285;
        v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream((int32x2_t *)v48, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_285;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v52);
        v53 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v53, 1);
        v54 = v53 - 1;
        if (v54 < 0 == v21)
          *((_DWORD *)a2 + 14) = v54;
        v55 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v55 + 1;
LABEL_127:
        if (*((_DWORD *)this + 12) == 6)
        {
          v56 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 6;
          v56 = operator new();
          *(_QWORD *)v56 = &off_1E76D0388;
          *(_OWORD *)(v56 + 8) = 0u;
          *(_OWORD *)(v56 + 24) = 0u;
          *(_OWORD *)(v56 + 40) = 0u;
          *(_DWORD *)(v56 + 56) = 0;
          *v5 = v56;
        }
        v141 = 0;
        v57 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v57 >= *((_QWORD *)a2 + 2) || *v57 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v57;
          *((_QWORD *)a2 + 1) = v57 + 1;
        }
        v58 = *((_DWORD *)a2 + 14);
        v59 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v58 + 1;
        if (v58 >= v59)
          goto LABEL_285;
        v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream((int32x2_t *)v56, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_285;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v60);
        v61 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v61, 1);
        v62 = v61 - 1;
        if (v62 < 0 == v21)
          *((_DWORD *)a2 + 14) = v62;
        v63 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v63 >= *((_QWORD *)a2 + 2) || *v63 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v63 + 1;
LABEL_142:
        if (*((_DWORD *)this + 12) == 7)
        {
          v64 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 7;
          v64 = operator new();
          *(_QWORD *)v64 = &off_1E76D0130;
          *(_OWORD *)(v64 + 8) = 0u;
          *(_OWORD *)(v64 + 24) = 0u;
          *(_OWORD *)(v64 + 40) = 0u;
          *v5 = v64;
        }
        v141 = 0;
        v65 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v65 >= *((_QWORD *)a2 + 2) || *v65 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v65;
          *((_QWORD *)a2 + 1) = v65 + 1;
        }
        v66 = *((_DWORD *)a2 + 14);
        v67 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v66 + 1;
        if (v66 >= v67)
          goto LABEL_285;
        v68 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Timestamp::MergePartialFromCodedStream((CRDT::Timestamp *)v64, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v68);
        v69 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v69, 1);
        v70 = v69 - 1;
        if (v70 < 0 == v21)
          *((_DWORD *)a2 + 14) = v70;
        v71 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v71 >= *((_QWORD *)a2 + 2) || *v71 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v71 + 1;
LABEL_157:
        if (*((_DWORD *)this + 12) == 8)
        {
          v72 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 8;
          v72 = operator new();
          *(_QWORD *)v72 = &off_1E76D0298;
          *(_OWORD *)(v72 + 8) = 0u;
          *(_OWORD *)(v72 + 24) = 0u;
          *(_OWORD *)(v72 + 40) = 0u;
          *(_DWORD *)(v72 + 56) = 0;
          *v5 = v72;
        }
        v141 = 0;
        v73 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v73 >= *((_QWORD *)a2 + 2) || *v73 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v73;
          *((_QWORD *)a2 + 1) = v73 + 1;
        }
        v74 = *((_DWORD *)a2 + 14);
        v75 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v74 + 1;
        if (v74 >= v75)
          goto LABEL_285;
        v76 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream((int32x2_t *)v72, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v76);
        v77 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v77, 1);
        v78 = v77 - 1;
        if (v78 < 0 == v21)
          *((_DWORD *)a2 + 14) = v78;
        v79 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v79 >= *((_QWORD *)a2 + 2) || *v79 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v79 + 1;
LABEL_172:
        if (*((_DWORD *)this + 12) == 9)
        {
          v80 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 9;
          v80 = operator new();
          *(_QWORD *)v80 = &off_1E76D0478;
          *(_OWORD *)(v80 + 8) = 0u;
          *(_OWORD *)(v80 + 24) = 0u;
          *(_OWORD *)(v80 + 40) = 0u;
          *(_DWORD *)(v80 + 56) = 0;
          *v5 = v80;
        }
        v141 = 0;
        v81 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v81 >= *((_QWORD *)a2 + 2) || *v81 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v81;
          *((_QWORD *)a2 + 1) = v81 + 1;
        }
        v82 = *((_DWORD *)a2 + 14);
        v83 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v82 + 1;
        if (v82 >= v83)
          goto LABEL_285;
        v84 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Index::MergePartialFromCodedStream((int32x2_t *)v80, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_285;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v84);
        v85 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v85, 1);
        v86 = v85 - 1;
        if (v86 < 0 == v21)
          *((_DWORD *)a2 + 14) = v86;
        v87 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v87 >= *((_QWORD *)a2 + 2) || *v87 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v87 + 1;
LABEL_187:
        if (*((_DWORD *)this + 12) == 10)
        {
          v88 = (topotext::String *)*v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 10;
          v88 = (topotext::String *)operator new();
          topotext::String::String(v88);
          *v5 = (uint64_t)v88;
        }
        v141 = 0;
        v89 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v89 >= *((_QWORD *)a2 + 2) || *v89 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v89;
          *((_QWORD *)a2 + 1) = v89 + 1;
        }
        v90 = *((_DWORD *)a2 + 14);
        v91 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v90 + 1;
        if (v90 >= v91)
          goto LABEL_285;
        v92 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!topotext::String::MergePartialFromCodedStream((int32x2_t *)v88, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_285;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v92);
        v93 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v93, 1);
        v94 = v93 - 1;
        if (v94 < 0 == v21)
          *((_DWORD *)a2 + 14) = v94;
        v95 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v95 >= *((_QWORD *)a2 + 2) || *v95 != 88)
          continue;
        *((_QWORD *)a2 + 1) = v95 + 1;
LABEL_202:
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        v97 = (char *)*((_QWORD *)a2 + 1);
        v96 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v97 >= v96 || *v97 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_285;
          v98 = (_BYTE *)*((_QWORD *)a2 + 1);
          v96 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v97;
          v98 = v97 + 1;
          *((_QWORD *)a2 + 1) = v98;
        }
        *((_DWORD *)this + 12) = 11;
        if ((unint64_t)v98 >= v96 || *v98 != 98)
          continue;
        *((_QWORD *)a2 + 1) = v98 + 1;
LABEL_210:
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 12;
        v15 = operator new();
        *(_QWORD *)v15 = &off_1E76D0568;
        *(_OWORD *)(v15 + 8) = 0u;
        *(_OWORD *)(v15 + 24) = 0u;
        *(_OWORD *)(v15 + 40) = 0u;
        *(_DWORD *)(v15 + 56) = 0;
        *v5 = v15;
LABEL_211:
        v141 = 0;
        v99 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v99 >= *((_QWORD *)a2 + 2) || *v99 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v99;
          *((_QWORD *)a2 + 1) = v99 + 1;
        }
        v100 = *((_DWORD *)a2 + 14);
        v101 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v100 + 1;
        if (v100 >= v101)
          goto LABEL_285;
        v102 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::OneOf::MergePartialFromCodedStream((int32x2_t *)v15, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_285;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v102);
        v103 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v103, 1);
        v104 = v103 - 1;
        if (v104 < 0 == v21)
          *((_DWORD *)a2 + 14) = v104;
        v105 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v105 >= *((_QWORD *)a2 + 2) || *v105 != 106)
          continue;
        *((_QWORD *)a2 + 1) = v105 + 1;
LABEL_223:
        if (*((_DWORD *)this + 12) == 13)
        {
          v106 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 13;
          v106 = operator new();
          *(_QWORD *)v106 = &off_1E76D0838;
          *(_DWORD *)(v106 + 64) = 0;
          *(_OWORD *)(v106 + 8) = 0u;
          *(_OWORD *)(v106 + 24) = 0u;
          *(_OWORD *)(v106 + 40) = 0u;
          *(_DWORD *)(v106 + 56) = 0;
          *v5 = v106;
        }
        v141 = 0;
        v107 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v107 >= *((_QWORD *)a2 + 2) || *v107 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v107;
          *((_QWORD *)a2 + 1) = v107 + 1;
        }
        v108 = *((_DWORD *)a2 + 14);
        v109 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v108 + 1;
        if (v108 >= v109)
          goto LABEL_285;
        v110 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Document_CustomObject::MergePartialFromCodedStream((int32x2_t *)v106, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v110);
        v111 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v111, 1);
        v112 = v111 - 1;
        if (v112 < 0 == v21)
          *((_DWORD *)a2 + 14) = v112;
        v113 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v113 >= *((_QWORD *)a2 + 2) || *v113 != 114)
          continue;
        *((_QWORD *)a2 + 1) = v113 + 1;
LABEL_238:
        if (*((_DWORD *)this + 12) == 14)
        {
          v114 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 14;
          v114 = operator new();
          *(_QWORD *)v114 = &off_1E76D0658;
          *(_OWORD *)(v114 + 8) = 0u;
          *(_OWORD *)(v114 + 24) = 0u;
          *(_OWORD *)(v114 + 40) = 0u;
          *(_OWORD *)(v114 + 52) = 0u;
          *v5 = v114;
        }
        v141 = 0;
        v115 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v115 >= *((_QWORD *)a2 + 2) || *v115 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v115;
          *((_QWORD *)a2 + 1) = v115 + 1;
        }
        v116 = *((_DWORD *)a2 + 14);
        v117 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v116 + 1;
        if (v116 >= v117)
          goto LABEL_285;
        v118 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::StringArray::MergePartialFromCodedStream((int32x2_t *)v114, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v118);
        v119 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v119, 1);
        v120 = v119 - 1;
        if (v120 < 0 == v21)
          *((_DWORD *)a2 + 14) = v120;
        v121 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v121 >= *((_QWORD *)a2 + 2) || *v121 != 122)
          continue;
        *((_QWORD *)a2 + 1) = v121 + 1;
LABEL_253:
        if (*((_DWORD *)this + 12) == 15)
        {
          v122 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 15;
          v122 = operator new();
          *(_QWORD *)v122 = &off_1E76D06D0;
          *(_OWORD *)(v122 + 8) = 0u;
          *(_OWORD *)(v122 + 24) = 0u;
          *(_OWORD *)(v122 + 40) = 0u;
          *v5 = v122;
        }
        v141 = 0;
        v123 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v123 >= *((_QWORD *)a2 + 2) || *v123 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v123;
          *((_QWORD *)a2 + 1) = v123 + 1;
        }
        v124 = *((_DWORD *)a2 + 14);
        v125 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v124 + 1;
        if (v124 >= v125)
          goto LABEL_285;
        v126 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Array::MergePartialFromCodedStream((CRDT::Array *)v122, a2) || !*((_BYTE *)a2 + 36))
          goto LABEL_285;
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v126);
        v127 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v127, 1);
        v128 = v127 - 1;
        if (v128 < 0 == v21)
          *((_DWORD *)a2 + 14) = v128;
        v129 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v129 <= 1 || *v129 != 130 || v129[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v129 + 2;
LABEL_269:
        if (*((_DWORD *)this + 12) == 16)
        {
          v130 = *v5;
        }
        else
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 16;
          v130 = operator new();
          *(_QWORD *)v130 = &off_1E76D0748;
          *(_OWORD *)(v130 + 8) = 0u;
          *(_OWORD *)(v130 + 24) = 0u;
          *(_OWORD *)(v130 + 40) = 0u;
          *v5 = v130;
        }
        v141 = 0;
        v131 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v131 >= *((_QWORD *)a2 + 2) || *v131 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141))
            goto LABEL_285;
        }
        else
        {
          v141 = *v131;
          *((_QWORD *)a2 + 1) = v131 + 1;
        }
        v132 = *((_DWORD *)a2 + 14);
        v133 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v132 + 1;
        if (v132 >= v133
          || (v134 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141),
              !CRDT::OrderedSet::MergePartialFromCodedStream((CRDT::OrderedSet *)v130, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_285:
          v137 = 0;
          goto LABEL_287;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v134);
        v135 = *((_DWORD *)a2 + 14);
        v21 = __OFSUB__(v135, 1);
        v136 = v135 - 1;
        if (v136 < 0 == v21)
          *((_DWORD *)a2 + 14) = v136;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v137 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_287:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v139);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v140);
        return v137;
      case 2u:
        if ((_DWORD)v11 == 18)
          goto LABEL_67;
        goto LABEL_50;
      case 3u:
        if ((_DWORD)v11 == 26)
          goto LABEL_82;
        goto LABEL_50;
      case 4u:
        if ((_DWORD)v11 == 34)
          goto LABEL_97;
        goto LABEL_50;
      case 5u:
        if ((_DWORD)v11 == 42)
          goto LABEL_112;
        goto LABEL_50;
      case 6u:
        if ((_DWORD)v11 == 50)
          goto LABEL_127;
        goto LABEL_50;
      case 7u:
        if ((_DWORD)v11 == 58)
          goto LABEL_142;
        goto LABEL_50;
      case 8u:
        if ((_DWORD)v11 == 66)
          goto LABEL_157;
        goto LABEL_50;
      case 9u:
        if ((_DWORD)v11 == 74)
          goto LABEL_172;
        goto LABEL_50;
      case 0xAu:
        if ((_DWORD)v11 == 82)
          goto LABEL_187;
        goto LABEL_50;
      case 0xBu:
        if ((_DWORD)v11 == 88)
          goto LABEL_202;
        goto LABEL_50;
      case 0xCu:
        if ((_DWORD)v11 != 98)
          goto LABEL_50;
        if (*((_DWORD *)this + 12) != 12)
          goto LABEL_210;
        v15 = *v5;
        goto LABEL_211;
      case 0xDu:
        if ((_DWORD)v11 == 106)
          goto LABEL_223;
        goto LABEL_50;
      case 0xEu:
        if ((_DWORD)v11 == 114)
          goto LABEL_238;
        goto LABEL_50;
      case 0xFu:
        if ((_DWORD)v11 == 122)
          goto LABEL_253;
        goto LABEL_50;
      case 0x10u:
        if ((_DWORD)v11 == 130)
          goto LABEL_269;
LABEL_50:
        if ((_DWORD)v11 && (v11 & 7) != 4)
          goto LABEL_52;
        goto LABEL_286;
      default:
        goto LABEL_9;
    }
  }
}

void sub_1BDAB357C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x10B3C406C843DA2);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_DocObject::SerializeWithCachedSizes(CRDT::Document_DocObject *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  char *v7;
  uint64_t v8;

  v6 = *((_DWORD *)this + 12);
  if (v6 == 1)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(1, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 2)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(2, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 3)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(3, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 4)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(4, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 5)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(5, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 6)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(6, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 7)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(7, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 8)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(8, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 9)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(9, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 10)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(10, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 11)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0xB, *((_QWORD *)this + 5), a2, a4);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 12)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(12, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 13)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(13, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 14)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(14, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 15)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(15, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 16)
    google::protobuf::internal::WireFormatLite::WriteMessage(16, *((_QWORD *)this + 5), a2);
  if (*((char *)this + 31) < 0)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2);
  }
  else
  {
    v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Document_DocObject::ByteSize(CRDT::RegisterLatest **this)
{
  google::protobuf::io::CodedOutputStream *v2;
  google::protobuf::io::CodedOutputStream *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  CRDT::RegisterLatest *v9;
  uint64_t result;

  switch(*((_DWORD *)this + 12))
  {
    case 1:
    case 2:
    case 3:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::RegisterLatest::ByteSize(this[5]);
      goto LABEL_16;
    case 4:
    case 5:
    case 6:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(this[5]);
      goto LABEL_16;
    case 7:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(this[5]);
      goto LABEL_16;
    case 8:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(this[5]);
      goto LABEL_16;
    case 9:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Index::ByteSize(this[5]);
      goto LABEL_16;
    case 0xA:
      v2 = (google::protobuf::io::CodedOutputStream *)topotext::String::ByteSize(this[5]);
      goto LABEL_16;
    case 0xB:
      v6 = google::protobuf::io::CodedOutputStream::VarintSize64((unint64_t)this[5]) + 1;
      break;
    case 0xC:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::OneOf::ByteSize(this[5]);
      goto LABEL_16;
    case 0xD:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_CustomObject::ByteSize(this[5]);
      goto LABEL_16;
    case 0xE:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray::ByteSize(this[5]);
      goto LABEL_16;
    case 0xF:
      v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Array::ByteSize(this[5]);
LABEL_16:
      v7 = (int)v2;
      if (v2 >= 0x80)
        v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v2);
      else
        v8 = 1;
      v6 = v7 + v8 + 1;
      break;
    case 0x10:
      v3 = (google::protobuf::io::CodedOutputStream *)CRDT::OrderedSet::ByteSize(this[5]);
      v4 = (int)v3;
      if (v3 >= 0x80)
        v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3);
      else
        v5 = 1;
      v6 = v4 + v5 + 2;
      break;
    default:
      v6 = 0;
      break;
  }
  if (*((char *)this + 31) < 0)
    v9 = this[2];
  else
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  result = (v6 + (_DWORD)v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_DocObject::CheckTypeAndMergeFrom(CRDT::Document_DocObject *this, const google::protobuf::MessageLite *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Document_DocObject::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Document_DocObject::IsInitialized(CRDT::Document_DocObject *this)
{
  uint64_t result;

  if (*((_DWORD *)this + 12) != 13)
    return 1;
  result = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 5) + 40))(*((_QWORD *)this + 5));
  if ((_DWORD)result)
    return 1;
  return result;
}

_QWORD *CRDT::Document_DocObject::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.DocObject");
}

CRDT::Document *CRDT::Document::Document(CRDT::Document *this, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)this = &off_1E76D0928;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_DWORD *)this + 30) = 0;
  *((_QWORD *)this + 16) = 0;
  *((_QWORD *)this + 17) = 0;
  *((_DWORD *)this + 36) = 0;
  CRDT::Document::SharedCtor(this, a2, a3);
  return this;
}

void sub_1BDAB3A18(_Unwind_Exception *a1)
{
  char *v1;
  uint64_t *v2;
  int *v3;
  int *v4;
  int *v5;
  void **v6;
  int *v7;

  v7 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v7);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v2);
  if (v1[31] < 0)
    operator delete(*v6);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void CRDT::Document::SharedCtor(CRDT::Document *this, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v5[2];
  char v6;

  v4 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v5[0] = &off_1E76C9A40;
    v5[1] = google::protobuf::internal::InitEmptyString;
    v6 = 0;
    google::protobuf::GoogleOnceInitImpl((unint64_t *)&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor((uint64_t)this, a2, a3);
  *((_QWORD *)this + 19) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
}

void sub_1BDAB3AFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *CRDT::Document::MergeFrom(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  uint64_t v5;
  __int32 v6;
  int32x2_t *v7;
  int32x2_t *v8;
  int32x2_t *v9;
  int32x2_t *v10;
  topotext::VectorTimestamp *v11;
  int32x2_t *v12;
  const std::string::value_type *v13;
  int32x2_t *v14;
  int32x2_t v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  char v20;
  std::string v21[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 5327);
    v4 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(this + 7, a2 + 7);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(this + 10, a2 + 10);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(this + 13, a2 + 13);
  v5 = (uint64_t)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(this + 16, a2 + 16);
  LOBYTE(v6) = a2[4].i8[0];
  if ((_BYTE)v6)
  {
    if ((a2[4].i8[0] & 1) != 0)
    {
      this[4].i32[0] |= 1u;
      v7 = (int32x2_t *)this[5];
      if (!v7)
      {
        v5 = operator new();
        v7 = (int32x2_t *)v5;
        *(_QWORD *)v5 = &off_1E76D0298;
        *(_OWORD *)(v5 + 8) = 0u;
        *(_OWORD *)(v5 + 24) = 0u;
        *(_OWORD *)(v5 + 40) = 0u;
        *(_DWORD *)(v5 + 56) = 0;
        this[5] = (int32x2_t)v5;
      }
      v8 = (int32x2_t *)a2[5];
      if (!v8)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v5);
        v8 = *(int32x2_t **)(CRDT::Document::default_instance_ + 40);
      }
      v5 = (uint64_t)CRDT::VectorTimestamp::MergeFrom(v7, v8);
      v6 = a2[4].i32[0];
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 0x40) == 0)
          goto LABEL_23;
        goto LABEL_18;
      }
    }
    else if ((a2[4].i8[0] & 2) == 0)
    {
      goto LABEL_6;
    }
    this[4].i32[0] |= 2u;
    v9 = (int32x2_t *)this[6];
    if (!v9)
    {
      v5 = operator new();
      v9 = (int32x2_t *)v5;
      *(_QWORD *)v5 = &off_1E76D0298;
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      *(_DWORD *)(v5 + 56) = 0;
      this[6] = (int32x2_t)v5;
    }
    v10 = (int32x2_t *)a2[6];
    if (!v10)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v5);
      v10 = *(int32x2_t **)(CRDT::Document::default_instance_ + 48);
    }
    v5 = (uint64_t)CRDT::VectorTimestamp::MergeFrom(v9, v10);
    if ((a2[4].i32[0] & 0x40) != 0)
    {
LABEL_18:
      this[4].i32[0] |= 0x40u;
      v11 = (topotext::VectorTimestamp *)this[19];
      if (!v11)
      {
        v11 = (topotext::VectorTimestamp *)operator new();
        topotext::VectorTimestamp::VectorTimestamp(v11);
        this[19] = (int32x2_t)v11;
      }
      v12 = (int32x2_t *)a2[19];
      if (!v12)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)v5);
        v12 = *(int32x2_t **)(CRDT::Document::default_instance_ + 152);
      }
      topotext::VectorTimestamp::MergeFrom((int32x2_t *)v11, v12);
    }
  }
LABEL_23:
  v15 = a2[1];
  v14 = a2 + 1;
  v13 = (const std::string::value_type *)v15;
  v16 = v14[2].i8[7];
  if (v16 >= 0)
    v17 = (const std::string::value_type *)v14;
  else
    v17 = v13;
  if (v16 >= 0)
    v18 = v14[2].u8[7];
  else
    v18 = (std::string::size_type)v14[1];
  return std::string::append((std::string *)&this[1], v17, v18);
}

void sub_1BDAB3D40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x1093C4020A6E6BFLL);
  _Unwind_Resume(a1);
}

void CRDT::Document::~Document(CRDT::Document *this)
{
  *(_QWORD *)this = &off_1E76D0928;
  CRDT::Document::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 32);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 26);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 20);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 7);
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  CRDT::Document::~Document(this);
  JUMPOUT(0x1C3B7A848);
}

void CRDT::Document::SharedDtor(CRDT::Document *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Document *)CRDT::Document::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 19);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CRDT::Document::default_instance(CRDT::Document *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  return CRDT::Document::default_instance_;
}

CRDT::Document *CRDT::Document::New(CRDT::Document *this)
{
  CRDT::Document *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (CRDT::Document *)operator new();
  CRDT::Document::Document(v1, v2, v3);
  return v1;
}

void sub_1BDAB3EE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B7A848](v1, 0x10B3C408ACEAB29);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document::Clear(CRDT::Document *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x43) != 0)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *((_QWORD *)this + 5);
      if (v3)
      {
        CRDT::VectorTimestamp::Clear(v3);
        v2 = *((_DWORD *)this + 8);
      }
    }
    if ((v2 & 2) != 0)
    {
      v4 = *((_QWORD *)this + 6);
      if (v4)
      {
        CRDT::VectorTimestamp::Clear(v4);
        v2 = *((_DWORD *)this + 8);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      v5 = *((_QWORD *)this + 19);
      if (v5)
        topotext::VectorTimestamp::Clear(v5);
    }
  }
  if (*((int *)this + 16) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 7) + 8 * v6);
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *((int *)this + 16));
  }
  *((_DWORD *)this + 16) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 80);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 104);
  result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 128);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((_BYTE **)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
  }
  else
  {
    *((_BYTE *)this + 8) = 0;
    *((_BYTE *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Document::MergePartialFromCodedStream(int32x2_t *this, google::protobuf::io::CodedInputStream *a2)
{
  unint64_t TagFallback;
  google::protobuf::io::CodedOutputStream *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _BYTE *v26;
  int v27;
  uint64_t v28;
  int32x2_t v29;
  uint64_t v30;
  int32x2_t v31;
  int32x2_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  int32x2_t v42;
  std::string *v43;
  int32x2_t v44;
  int32x2_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int32x2_t v49;
  std::string *v50;
  int32x2_t v51;
  int32x2_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int32x2_t v56;
  std::string *v57;
  int32x2_t v58;
  int32x2_t v59;
  int v60;
  topotext::VectorTimestamp *v61;
  char *v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  _BYTE v70[32];
  _QWORD v71[2];
  unsigned int v72;

  google::protobuf::io::StringOutputStream::StringOutputStream(v71, (uint64_t)&this[1]);
  TagFallback = (unint64_t)google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v70, (google::protobuf::io::ZeroCopyOutputStream *)v71);
LABEL_2:
  while (2)
  {
    while (1)
    {
      v6 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v6 < *((_QWORD *)a2 + 2) && (char)*v6 >= 1)
        break;
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      v8 = TagFallback | ((unint64_t)((TagFallback - 1) < 0x7F) << 32);
      if ((v8 & 0x100000000) != 0)
        goto LABEL_6;
LABEL_13:
      if ((_DWORD)v8)
        v11 = (v8 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
LABEL_121:
        v68 = 1;
        goto LABEL_122;
      }
LABEL_32:
      TagFallback = google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v70, v5);
      if ((TagFallback & 1) == 0)
        goto LABEL_120;
    }
    v7 = *v6;
    *((_DWORD *)a2 + 8) = v7;
    *((_QWORD *)a2 + 1) = v6 + 1;
    v8 = v7 | 0x100000000;
LABEL_6:
    switch(v8 >> 3)
    {
      case 1u:
        if ((_DWORD)v8 != 10)
          goto LABEL_30;
        this[4].i32[0] |= 1u;
        v9 = (uint64_t)this[5];
        if (!v9)
        {
          v9 = operator new();
          *(_QWORD *)v9 = &off_1E76D0298;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(_OWORD *)(v9 + 40) = 0u;
          *(_DWORD *)(v9 + 56) = 0;
          this[5] = (int32x2_t)v9;
        }
        v72 = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v72))
            goto LABEL_120;
        }
        else
        {
          v72 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        v12 = *((_DWORD *)a2 + 14);
        v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13)
          goto LABEL_120;
        v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v72);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream((int32x2_t *)v9, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_120;
        }
        TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
        v15 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v15, 1);
        v17 = v15 - 1;
        if (v17 < 0 == v16)
          *((_DWORD *)a2 + 14) = v17;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_43:
        this[4].i32[0] |= 2u;
        v19 = (uint64_t)this[6];
        if (!v19)
        {
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E76D0298;
          *(_OWORD *)(v19 + 8) = 0u;
          *(_OWORD *)(v19 + 24) = 0u;
          *(_OWORD *)(v19 + 40) = 0u;
          *(_DWORD *)(v19 + 56) = 0;
          this[6] = (int32x2_t)v19;
        }
        v72 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v72))
            goto LABEL_120;
        }
        else
        {
          v72 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22)
          goto LABEL_120;
        v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v72);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream((int32x2_t *)v19, a2)
          || !*((_BYTE *)a2 + 36))
        {
          goto LABEL_120;
        }
        TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        v24 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v16)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 26)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_57:
          v27 = this[8].i32[1];
          v28 = this[8].i32[0];
          if ((int)v28 >= v27)
          {
            if (v27 == this[9].i32[0])
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[7], v27 + 1);
            v30 = operator new();
            *(_QWORD *)v30 = &off_1E76D08B0;
            *(_DWORD *)(v30 + 48) = 0;
            *(_OWORD *)(v30 + 8) = 0u;
            *(_OWORD *)(v30 + 24) = 0u;
            v31 = this[7];
            v32 = this[8];
            this[8] = vadd_s32(v32, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v31 + 8 * v32.i32[0]) = v30;
          }
          else
          {
            v29 = this[7];
            this[8].i32[0] = v28 + 1;
            v30 = *(_QWORD *)(*(_QWORD *)&v29 + 8 * v28);
          }
          v72 = 0;
          v33 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v72))
              goto LABEL_120;
          }
          else
          {
            v72 = *v33;
            *((_QWORD *)a2 + 1) = v33 + 1;
          }
          v34 = *((_DWORD *)a2 + 14);
          v35 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v34 + 1;
          if (v34 >= v35)
            goto LABEL_120;
          v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v72);
          if (!CRDT::Document_DocObject::MergePartialFromCodedStream((CRDT::Document_DocObject *)v30, a2)
            || !*((_BYTE *)a2 + 36))
          {
            goto LABEL_120;
          }
          TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v36);
          v37 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v37, 1);
          v38 = v37 - 1;
          if (v38 < 0 == v16)
            *((_DWORD *)a2 + 14) = v38;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v26 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v39 = *v26;
        }
        while (v39 == 26);
        if (v39 != 34)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_75:
          v40 = this[11].i32[1];
          v41 = this[11].i32[0];
          if ((int)v41 >= v40)
          {
            if (v40 == this[12].i32[0])
              TagFallback = (unint64_t)google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[10], v40 + 1);
            v43 = (std::string *)google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
            v44 = this[10];
            v45 = this[11];
            this[11] = vadd_s32(v45, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v44 + 8 * v45.i32[0]) = v43;
          }
          else
          {
            v42 = this[10];
            this[11].i32[0] = v41 + 1;
            v43 = *(std::string **)(*(_QWORD *)&v42 + 8 * v41);
          }
          TagFallback = google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v43);
          if (!(_DWORD)TagFallback)
            goto LABEL_120;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v26 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v46 = *v26;
        }
        while (v46 == 34);
        if (v46 != 42)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_85:
          v47 = this[14].i32[1];
          v48 = this[14].i32[0];
          if ((int)v48 >= v47)
          {
            if (v47 == this[15].i32[0])
              TagFallback = (unint64_t)google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[13], v47 + 1);
            v50 = (std::string *)google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
            v51 = this[13];
            v52 = this[14];
            this[14] = vadd_s32(v52, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v51 + 8 * v52.i32[0]) = v50;
          }
          else
          {
            v49 = this[13];
            this[14].i32[0] = v48 + 1;
            v50 = *(std::string **)(*(_QWORD *)&v49 + 8 * v48);
          }
          TagFallback = google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v50);
          if (!(_DWORD)TagFallback)
            goto LABEL_120;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v26 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v53 = *v26;
        }
        while (v53 == 42);
        if (v53 != 50)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_95:
          v54 = this[17].i32[1];
          v55 = this[17].i32[0];
          if ((int)v55 >= v54)
          {
            if (v54 == this[18].i32[0])
              TagFallback = (unint64_t)google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)&this[16], v54 + 1);
            v57 = (std::string *)google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
            v58 = this[16];
            v59 = this[17];
            this[17] = vadd_s32(v59, (int32x2_t)0x100000001);
            *(_QWORD *)(*(_QWORD *)&v58 + 8 * v59.i32[0]) = v57;
          }
          else
          {
            v56 = this[16];
            this[17].i32[0] = v55 + 1;
            v57 = *(std::string **)(*(_QWORD *)&v56 + 8 * v55);
          }
          TagFallback = google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v57);
          if (!(_DWORD)TagFallback)
            goto LABEL_120;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v26 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v60 = *v26;
        }
        while (v60 == 50);
        if (v60 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_105:
        this[4].i32[0] |= 0x40u;
        v61 = (topotext::VectorTimestamp *)this[19];
        if (!v61)
        {
          v61 = (topotext::VectorTimestamp *)operator new();
          topotext::VectorTimestamp::VectorTimestamp(v61);
          this[19] = (int32x2_t)v61;
        }
        v72 = 0;
        v62 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v62 >= *((_QWORD *)a2 + 2) || *v62 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v72))
            goto LABEL_120;
        }
        else
        {
          v72 = *v62;
          *((_QWORD *)a2 + 1) = v62 + 1;
        }
        v63 = *((_DWORD *)a2 + 14);
        v64 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v63 + 1;
        if (v63 >= v64
          || (v65 = google::protobuf::io::CodedInputStream::PushLimit(a2, v72),
              !topotext::VectorTimestamp::MergePartialFromCodedStream((int32x2_t *)v61, a2))
          || !*((_BYTE *)a2 + 36))
        {
LABEL_120:
          v68 = 0;
          goto LABEL_122;
        }
        TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v65);
        v66 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v66, 1);
        v67 = v66 - 1;
        if (v67 < 0 == v16)
          *((_DWORD *)a2 + 14) = v67;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        v68 = 1;
        *((_BYTE *)a2 + 36) = 1;
LABEL_122:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v70);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v71);
        return v68;
      case 2u:
        if ((_DWORD)v8 == 18)
          goto LABEL_43;
        goto LABEL_30;
      case 3u:
        if ((_DWORD)v8 == 26)
          goto LABEL_57;
        goto LABEL_30;
      case 4u:
        if ((_DWORD)v8 == 34)
          goto LABEL_75;
        goto LABEL_30;
      case 5u:
        if ((_DWORD)v8 == 42)
          goto LABEL_85;
        goto LABEL_30;
      case 6u:
        if ((_DWORD)v8 == 50)
          goto LABEL_95;
        goto LABEL_30;
      case 7u:
        if ((_DWORD)v8 == 58)
          goto LABEL_105;
LABEL_30:
        if ((_DWORD)v8 && (v8 & 7) != 4)
          goto LABEL_32;
        goto LABEL_121;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1BDAB4784(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  MEMORY[0x1C3B7A848](v2, 0x1093C4020A6E6BFLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document::SerializeWithCachedSizes(CRDT::Document *this, google::protobuf::io::CodedOutputStream *a2)
{
  CRDT::Document *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v3 = this;
  v4 = *((_DWORD *)this + 8);
  if ((v4 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v5 = *(_QWORD *)(CRDT::Document::default_instance_ + 40);
    }
    this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_QWORD *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v6 = *(_QWORD *)(CRDT::Document::default_instance_ + 48);
    }
    this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((int *)v3 + 16) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)v3 + 56, v7);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)v3 + 16));
  }
  if (*((int *)v3 + 22) >= 1)
  {
    v9 = 0;
    do
    {
      v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 80, v9);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteString(4, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v3 + 22));
  }
  if (*((int *)v3 + 28) >= 1)
  {
    v11 = 0;
    do
    {
      v12 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 104, v11);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteString(5, v12, a2);
      ++v11;
    }
    while (v11 < *((_DWORD *)v3 + 28));
  }
  if (*((int *)v3 + 34) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 128, v13);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteBytes(6, v14, a2);
      ++v13;
    }
    while (v13 < *((_DWORD *)v3 + 34));
  }
  if ((*((_BYTE *)v3 + 32) & 0x40) != 0)
  {
    v15 = *((_QWORD *)v3 + 19);
    if (!v15)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      v15 = *(_QWORD *)(CRDT::Document::default_instance_ + 152);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(7, v15, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    v16 = (char *)*((_QWORD *)v3 + 1);
    v17 = *((_QWORD *)v3 + 2);
  }
  else
  {
    v16 = (char *)v3 + 8;
    LODWORD(v17) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v16, v17);
}

uint64_t CRDT::Document::ByteSize(CRDT::Document *this)
{
  int v2;
  int v3;
  CRDT::VectorTimestamp *v4;
  google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  CRDT::VectorTimestamp *v8;
  google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  topotext::VectorTimestamp *v12;
  google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  CRDT::RegisterLatest **v19;
  google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_25;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = (CRDT::VectorTimestamp *)*((_QWORD *)this + 5);
    if (!v4)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v4 = *(CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 40);
    }
    v5 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v4);
    v6 = (int)v5;
    if (v5 >= 0x80)
      v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    else
      v7 = 1;
    v3 = v6 + v7 + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
LABEL_12:
    v8 = (CRDT::VectorTimestamp *)*((_QWORD *)this + 6);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v8 = *(CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 48);
    }
    v9 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *((_DWORD *)this + 8);
  }
LABEL_18:
  if ((v2 & 0x40) != 0)
  {
    v12 = (topotext::VectorTimestamp *)*((_QWORD *)this + 19);
    if (!v12)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      v12 = *(topotext::VectorTimestamp **)(CRDT::Document::default_instance_ + 152);
    }
    v13 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp::ByteSize(v12);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v3 += v14 + v15 + 1;
  }
LABEL_25:
  v16 = *((_DWORD *)this + 16);
  v17 = v16 + v3;
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (CRDT::RegisterLatest **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)this + 56, v18);
      v20 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_DocObject::ByteSize(v19);
      v21 = (int)v20;
      if (v20 >= 0x80)
        v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      else
        v22 = 1;
      v17 += v21 + v22;
      ++v18;
    }
    while (v18 < *((_DWORD *)this + 16));
  }
  v23 = *((_DWORD *)this + 22);
  v24 = v23 + v17;
  if (v23 >= 1)
  {
    v25 = 0;
    do
    {
      v26 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 80, v25);
      v27 = *(unsigned __int8 *)(v26 + 23);
      v28 = v27;
      v29 = *(_QWORD *)(v26 + 8);
      if ((v27 & 0x80u) == 0)
        v30 = *(unsigned __int8 *)(v26 + 23);
      else
        v30 = v29;
      if (v30 >= 0x80)
      {
        v31 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v30);
        v27 = *(unsigned __int8 *)(v26 + 23);
        v29 = *(_QWORD *)(v26 + 8);
        v28 = *(_BYTE *)(v26 + 23);
      }
      else
      {
        v31 = 1;
      }
      if (v28 < 0)
        v27 = v29;
      v24 += v31 + v27;
      ++v25;
    }
    while (v25 < *((_DWORD *)this + 22));
  }
  v32 = *((_DWORD *)this + 28);
  v33 = v32 + v24;
  if (v32 >= 1)
  {
    v34 = 0;
    do
    {
      v35 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 104, v34);
      v36 = *(unsigned __int8 *)(v35 + 23);
      v37 = v36;
      v38 = *(_QWORD *)(v35 + 8);
      if ((v36 & 0x80u) == 0)
        v39 = *(unsigned __int8 *)(v35 + 23);
      else
        v39 = v38;
      if (v39 >= 0x80)
      {
        v40 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v39);
        v36 = *(unsigned __int8 *)(v35 + 23);
        v38 = *(_QWORD *)(v35 + 8);
        v37 = *(_BYTE *)(v35 + 23);
      }
      else
      {
        v40 = 1;
      }
      if (v37 < 0)
        v36 = v38;
      v33 += v40 + v36;
      ++v34;
    }
    while (v34 < *((_DWORD *)this + 28));
  }
  v41 = *((_DWORD *)this + 34);
  v42 = v41 + v33;
  if (v41 >= 1)
  {
    v43 = 0;
    do
    {
      v44 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 128, v43);
      v45 = *(unsigned __int8 *)(v44 + 23);
      v46 = v45;
      v47 = *(_QWORD *)(v44 + 8);
      if ((v45 & 0x80u) == 0)
        v48 = *(unsigned __int8 *)(v44 + 23);
      else
        v48 = v47;
      if (v48 >= 0x80)
      {
        v49 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v48);
        v45 = *(unsigned __int8 *)(v44 + 23);
        v47 = *(_QWORD *)(v44 + 8);
        v46 = *(_BYTE *)(v44 + 23);
      }
      else
      {
        v49 = 1;
      }
      if (v46 < 0)
        v45 = v47;
      v42 += v49 + v45;
      ++v43;
    }
    while (v43 < *((_DWORD *)this + 34));
  }
  if (*((char *)this + 31) < 0)
    v50 = *((_QWORD *)this + 2);
  else
    LODWORD(v50) = *((unsigned __int8 *)this + 31);
  result = (v42 + v50);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document::CheckTypeAndMergeFrom(int32x2_t *this, int32x2_t *lpsrc)
{
  uint64_t v4;
  uint64_t v5;

  return CRDT::Document::MergeFrom(this, lpsrc);
}

BOOL CRDT::Document::IsInitialized(CRDT::Document *this)
{
  return google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>>((uint64_t)this + 56);
}

BOOL google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>>(uint64_t a1)
{
  int v2;
  int v3;
  BOOL v4;
  uint64_t v5;

  v2 = *(_DWORD *)(a1 + 8);
  do
  {
    v3 = v2;
    v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4)
      break;
    v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(a1, v2);
  }
  while (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5) & 1) != 0);
  return v3 < 1;
}

_QWORD *CRDT::Document::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document");
}

uint64_t CRDT::ObjectID::GetCachedSize(CRDT::ObjectID *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Timestamp::GetCachedSize(CRDT::Timestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::RegisterLatest::GetCachedSize(CRDT::RegisterLatest *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::VectorTimestamp_Element::GetCachedSize(CRDT::VectorTimestamp_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::VectorTimestamp::GetCachedSize(CRDT::VectorTimestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Dictionary_Element::GetCachedSize(CRDT::Dictionary_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Dictionary::GetCachedSize(CRDT::Dictionary *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Index_Element::GetCachedSize(CRDT::Index_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Index::GetCachedSize(CRDT::Index *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OneOf_Element::GetCachedSize(CRDT::OneOf_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OneOf::GetCachedSize(CRDT::OneOf *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::StringArray_ArrayAttachment::GetCachedSize(CRDT::StringArray_ArrayAttachment *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::StringArray::GetCachedSize(CRDT::StringArray *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Array::GetCachedSize(CRDT::Array *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OrderedSet::GetCachedSize(CRDT::OrderedSet *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_CustomObject_MapEntry::GetCachedSize(CRDT::Document_CustomObject_MapEntry *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_CustomObject::GetCachedSize(CRDT::Document_CustomObject *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_DocObject::GetCachedSize(CRDT::Document_DocObject *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document::GetCachedSize(CRDT::Document *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BDAB4EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BDAB4FA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BDAB5078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BDAB5150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)a1 + 8 * a2);
}

void sub_1BDAB5228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const CRDT::VectorTimestamp_Element *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const CRDT::VectorTimestamp_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76D0220;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_QWORD *)(v11 + 56) = 0;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = CRDT::VectorTimestamp_Element::MergeFrom((CRDT::VectorTimestamp_Element *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDAB53A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const CRDT::Dictionary_Element *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const CRDT::Dictionary_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76D0310;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_OWORD *)(v11 + 56) = 0u;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = CRDT::Dictionary_Element::MergeFrom((CRDT::Dictionary_Element *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDAB5520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const CRDT::Index_Element *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const CRDT::Index_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76D0400;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = CRDT::Index_Element::MergeFrom((CRDT::Index_Element *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDAB5694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const CRDT::OneOf_Element *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const CRDT::OneOf_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76D04F0;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = CRDT::OneOf_Element::MergeFrom((CRDT::OneOf_Element *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDAB5808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  uint64_t v7;
  const CRDT::StringArray_ArrayAttachment *v8;
  int v9;
  uint64_t v10;
  int32x2_t v11;
  CRDT::StringArray_ArrayAttachment *v12;
  int32x2_t v13;
  int32x2_t v14;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v8 = (const CRDT::StringArray_ArrayAttachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)a2, v6);
      v9 = this[1].i32[1];
      v10 = this[1].i32[0];
      if ((int)v10 >= v9)
      {
        if (v9 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v9 + 1);
        v12 = google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New();
        v13 = *this;
        v14 = this[1];
        this[1] = vadd_s32(v14, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v13 + 8 * v14.i32[0]) = v12;
      }
      else
      {
        v11 = *this;
        this[1].i32[0] = v10 + 1;
        v12 = *(CRDT::StringArray_ArrayAttachment **)(*(_QWORD *)&v11 + 8 * v10);
      }
      result = CRDT::StringArray_ArrayAttachment::MergeFrom(v12, v8, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDAB5944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const CRDT::Document_CustomObject_MapEntry *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76D07C0;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 36) = 0u;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = CRDT::Document_CustomObject_MapEntry::MergeFrom((CRDT::Document_CustomObject_MapEntry *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDAB5AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(int32x2_t *this, int32x2_t *a2)
{
  std::string *v4;
  void *result;
  int v6;
  const CRDT::Document_DocObject *v7;
  int v8;
  uint64_t v9;
  int32x2_t v10;
  uint64_t v11;
  int32x2_t v12;
  int32x2_t v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, a2[1].i32[0] + this[1].i32[0]);
  if (a2[1].i32[0] >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (const CRDT::Document_DocObject *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)a2, v6);
      v8 = this[1].i32[1];
      v9 = this[1].i32[0];
      if ((int)v9 >= v8)
      {
        if (v8 == this[2].i32[0])
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this, v8 + 1);
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E76D08B0;
        *(_DWORD *)(v11 + 48) = 0;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        v12 = *this;
        v13 = this[1];
        this[1] = vadd_s32(v13, (int32x2_t)0x100000001);
        *(_QWORD *)(*(_QWORD *)&v12 + 8 * v13.i32[0]) = v11;
      }
      else
      {
        v10 = *this;
        this[1].i32[0] = v9 + 1;
        v11 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9);
      }
      result = CRDT::Document_DocObject::MergeFrom((CRDT::Document_DocObject *)v11, v7);
      ++v6;
    }
    while (v6 < a2[1].i32[0]);
  }
  return result;
}

void sub_1BDAB5C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromICAttachmentsFilterSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8)
    return CFSTR("Unknown");
  else
    return off_1E76D0B58[a1 - 1];
}

void sub_1BDAB670C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAB6858(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1BDAB6948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDAB6A40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAB6B4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAB6C20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1BDAB6E94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t topotext::BoxedValue::jsonvalue(topotext::BoxedValue *this, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (*((_DWORD *)this + 12) == 7)
    return *((_QWORD *)this + 5);
  result = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_)
    versioned_document::Version::SharedCtor(0, a2, a3);
  return result;
}

void sub_1BDAB6F70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  topotext::WallClockMergeableValue::~WallClockMergeableValue((topotext::WallClockMergeableValue *)va);
  _Unwind_Resume(a1);
}

void sub_1BDAB7508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

std::string *topotext::BoxedValue::set_jsonvalue(topotext::BoxedValue *this, std::string *__str)
{
  std::string *v4;

  if (*((_DWORD *)this + 12) == 7)
  {
    v4 = (std::string *)*((_QWORD *)this + 5);
  }
  else
  {
    topotext::BoxedValue::clear_contents((uint64_t)this);
    *((_DWORD *)this + 12) = 7;
    v4 = (std::string *)operator new();
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 5) = v4;
  }
  return std::string::operator=(v4, __str);
}

void sub_1BDAB76F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BDAB77BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1BDAB78B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1BDAB7A50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v6 = a1[2];
  result = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(result - 8);
  if (v7 >= v6)
  {
    v11 = (uint64_t)(v7 - *a1) >> 5;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59)
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    v13 = v5 - *a1;
    if (v13 >> 4 > v12)
      v12 = v13 >> 4;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0)
      v14 = 0x7FFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    v20[4] = result;
    v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    v18 = *a2;
    *a2 = 0;
    *(_QWORD *)v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)v16 + 4) = *((_DWORD *)a2 + 4);
    v19 = a2[3];
    a2[3] = 0;
    *((_QWORD *)v16 + 3) = v19;
    v20[2] = v16 + 32;
    std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__swap_out_circular_buffer(a1, v20);
    v10 = a1[1];
    result = std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    v8 = *a2;
    *a2 = 0;
    *(_QWORD *)v7 = v8;
    *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
    *(_DWORD *)(v7 + 16) = *((_DWORD *)a2 + 4);
    v9 = a2[3];
    a2[3] = 0;
    *(_QWORD *)(v7 + 24) = v9;
    v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1BDAB7BAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1BDAB7F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_1BDAB80D4(_Unwind_Exception *a1)
{
  id *v1;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v8 = a7;
    do
    {
      v9 = *(_QWORD *)(a3 - 32);
      a3 -= 32;
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(v8 - 32) = v9;
      v8 -= 32;
      *(_DWORD *)(v8 + 8) = *(_DWORD *)(a3 + 8);
      *(_DWORD *)(v8 + 16) = *(_DWORD *)(a3 + 16);
      v10 = *(_QWORD *)(a3 + 24);
      *(_QWORD *)(a3 + 24) = 0;
      *(_QWORD *)(v8 + 24) = v10;
      v7 -= 32;
    }
    while (a3 != a5);
    *((_QWORD *)&v16 + 1) = v8;
    v11 = v16;
  }
  v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  return a1;
}

void sub_1BDAB9758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAB9928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAB9B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAB9C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDAB9FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABA3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABA6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABA8E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABABB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1BDABADD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABB0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABB220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABB398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABB6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1BDABC2FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABC4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABC824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABCB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABCEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABCFD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABD514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABD6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABDB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABDD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABDFE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1BDABE7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABEC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABF148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABF274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABF394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABF508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABF8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDABFA2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_11_1(uint64_t result, float a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(float *)a4 = a2;
  *(_QWORD *)(a4 + 4) = result;
  *(_WORD *)(a4 + 12) = 2112;
  *(_QWORD *)(a4 + 14) = v4;
  return result;
}

void OUTLINED_FUNCTION_21_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x1Cu);
}

Class __getCKRecordClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!CloudKitLibraryCore_frameworkLibrary)
  {
    CloudKitLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!CloudKitLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_6:
      __getCKRecordClass_block_invoke_cold_1();
    }
  }
  result = objc_getClass("CKRecord");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    goto LABEL_6;
  getCKRecordClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Swift::Void __swiftcall ICFolder.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _BYTE v9[8];
  uint64_t v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BDAC16F0((uint64_t)v9);
  sub_1BDAC1EBC(v9[0], v10, v11, (uint64_t)v4);
  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BDAC350C((uint64_t)v4, &qword_1ED23B1B0);
  }
  else
  {
    sub_1BDBFC8A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v1, sel_title);
  sub_1BDBFD6F8();

  sub_1BDAC2F74(MEMORY[0x1E0DEE9D8]);
  sub_1BDBFE028();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1BDAC16F0@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(char *);
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  os_log_type_t v37;
  char *v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  os_log_t v45;
  uint64_t result;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  os_log_t v50;
  uint64_t v51;
  void (*v52)(char *);
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  os_log_t v59;

  v3 = sub_1BDBFCE34();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v47 - v8;
  v10 = objc_msgSend(v1, sel_objectID);
  if (!objc_msgSend(v10, sel_ic_isModernType))
    objc_msgSend(v10, sel_ic_isLegacyType);

  v54 = v47;
  MEMORY[0x1E0C80A78](v11);
  v56 = v12;
  LOBYTE(v47[-2]) = v12;
  v13 = qword_1ED23B180;
  v14 = v1;
  if (v13 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED23B160);
  v16 = *(void (**)(char *))(v4 + 16);
  v55 = v15;
  v16(v9);
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = 2;
  if ((sub_1BDBB6748(v17, (uint64_t (*)(void))sub_1BDAC3718) & 1) != 0)
  {

    v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v9, v3);
    swift_release();
  }
  else
  {
    v52 = v16;
    v19 = sub_1BDBFDEF0();
    v20 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v20, v19))
    {
      v21 = swift_slowAlloc();
      v53 = a1;
      v22 = v21;
      v51 = swift_slowAlloc();
      v59 = (os_log_t)v51;
      *(_DWORD *)v22 = 136315650;
      v50 = v20;
      v23 = sub_1BDBFE34C();
      v57 = sub_1BDAE53FC(v23, v24, (uint64_t *)&v59);
      LODWORD(v49) = v19;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      v57 = 40;
      sub_1BDBFE100();
      *(_WORD *)(v22 + 22) = 2080;
      v47[1] = v22 + 24;
      v57 = 0;
      v58 = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v25 = objc_msgSend(v14, sel_ic_loggingDescription);
      sub_1BDBFD6F8();
      v48 = v4;

      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v57 = sub_1BDAE53FC(v57, v58, (uint64_t *)&v59);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      v26 = v50;
      _os_log_impl(&dword_1BD918000, v50, (os_log_type_t)v49, "Failed assertion at %s:%lu: %s", (uint8_t *)v22, 0x20u);
      v27 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v27, -1, -1);
      v28 = v22;
      a1 = v53;
      MEMORY[0x1C3B7B478](v28, -1, -1);

      v18 = *(void (**)(char *, uint64_t))(v48 + 8);
    }
    else
    {

      v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    }
    v18(v9, v3);
    swift_release();
    v16 = v52;
  }
  v29 = objc_msgSend(v14, sel_identifierURIPathComponent);
  if (v29)
  {
    v30 = v29;
    v31 = sub_1BDBFD6F8();
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0xE000000000000000;
  }
  v54 = v47;
  MEMORY[0x1E0C80A78](v29);
  v47[-2] = v31;
  v47[-1] = v33;
  ((void (*)(char *, uint64_t, uint64_t))v16)(v7, v55, v3);
  v34 = swift_allocObject();
  *(_BYTE *)(v34 + 16) = 2;
  v35 = v14;
  if ((sub_1BDBB6748(v34, sub_1BDAC3730) & 1) != 0)
  {

    v36 = v7;
LABEL_19:
    v18(v36, v3);
    goto LABEL_20;
  }
  v37 = sub_1BDBFDEF0();
  v38 = v7;
  v39 = sub_1BDBFCE1C();
  if (!os_log_type_enabled(v39, v37))
  {

    v36 = v38;
    goto LABEL_19;
  }
  v40 = swift_slowAlloc();
  LODWORD(v51) = v37;
  v41 = v40;
  v50 = (os_log_t)swift_slowAlloc();
  v59 = v50;
  *(_DWORD *)v41 = 136315650;
  v55 = (uint64_t)v38;
  v42 = sub_1BDBFE34C();
  v52 = (void (*)(char *))v18;
  v57 = sub_1BDAE53FC(v42, v43, (uint64_t *)&v59);
  v53 = a1;
  sub_1BDBFE100();
  swift_bridgeObjectRelease();
  *(_WORD *)(v41 + 12) = 2048;
  v57 = 42;
  sub_1BDBFE100();
  *(_WORD *)(v41 + 22) = 2080;
  v49 = v41 + 24;
  v57 = 0;
  v58 = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  v57 = 0xD000000000000028;
  v58 = 0x80000001BDC34CD0;
  v44 = objc_msgSend(v35, sel_ic_loggingDescription);
  sub_1BDBFD6F8();

  sub_1BDBFD7DC();
  a1 = v53;
  swift_bridgeObjectRelease();
  v57 = sub_1BDAE53FC(v57, v58, (uint64_t *)&v59);
  sub_1BDBFE100();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BD918000, v39, (os_log_type_t)v51, "Failed assertion at %s:%lu: %s", (uint8_t *)v41, 0x20u);
  v45 = v50;
  swift_arrayDestroy();
  MEMORY[0x1C3B7B478](v45, -1, -1);
  MEMORY[0x1C3B7B478](v41, -1, -1);

  ((void (*)(uint64_t, uint64_t))v52)(v55, v3);
LABEL_20:
  result = swift_release();
  *(_BYTE *)a1 = v56;
  *(_QWORD *)(a1 + 8) = v31;
  *(_QWORD *)(a1 + 16) = v33;
  return result;
}

uint64_t sub_1BDAC1E8C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1BDAC1EBC(a1, a2, a3, a4);
}

uint64_t sub_1BDAC1EA0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1BDAC1EBC(a1, a2, a3, a4);
}

uint64_t sub_1BDAC1EBC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(unint64_t, char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t result;
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  __CFString *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  int v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v73 = a2;
  v74 = a3;
  v71 = a1;
  v75 = a4;
  v4 = sub_1BDBFC5B8();
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  MEMORY[0x1E0C80A78](v4);
  v65 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v6);
  v69 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFD0F8();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BDBFC444();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v62 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v57 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v57 - v20;
  v22 = sub_1BDBFD0E0();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v68 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v60 = (char *)&v57 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v61 = (char *)&v57 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v70 = (char *)&v57 - v31;
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v57 - v32;
  sub_1BDBFD0EC();
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v34(v21, 1, v22) == 1)
  {
    v19 = v21;
  }
  else
  {
    v58 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v59 = v33;
    v58(v33, v21, v22);
    v76 = v73;
    v77 = v74;
    v35 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v36 = objc_msgSend(v35, sel_ic_uriIdentifierAllowedCharacterSet);
    sub_1BDBFC414();

    sub_1BDAC3548();
    sub_1BDBFE148();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_bridgeObjectRelease();
    if (v38)
    {
      sub_1BDBFD0EC();
      if (v34(v19, 1, v22) != 1)
      {
        v39 = v70;
        v58(v70, v19, v22);
        v40 = sub_1BDBFD098();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v69, 1, 1, v40);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1D0);
        v41 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1BDC16BA0;
        v43 = *(void (**)(unint64_t, char *, uint64_t))(v23 + 16);
        v44 = v59;
        v43(v42 + v41, v59, v22);
        v45 = v72;
        sub_1BDBFD0A4();
        v46 = v68;
        if ((v71 & 1) != 0)
        {
          v47 = v62;
          sub_1BDBFD0EC();
          result = v34(v47, 1, v22);
          if ((_DWORD)result == 1)
          {
            __break(1u);
            return result;
          }
          v49 = v60;
          v50 = v47;
          v51 = v58;
          v58(v60, v50, v22);
          v52 = v61;
          v51(v61, v49, v22);
          v43((unint64_t)v46, v52, v22);
          sub_1BDBFD0BC();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v52, v22);
        }
        v43((unint64_t)v46, v39, v22);
        sub_1BDBFD0BC();
        v53 = v65;
        sub_1BDBFC5AC();
        v54 = (id)ICNotesAppURLScheme();
        sub_1BDBFD6F8();

        sub_1BDBFC588();
        sub_1BDBFD0C8();
        sub_1BDBFC540();
        sub_1BDBFC510();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v53, v67);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v64);
        v55 = *(void (**)(char *, uint64_t))(v23 + 8);
        v55(v39, v22);
        return ((uint64_t (*)(char *, uint64_t))v55)(v44, v22);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v19, 1, 1, v22);
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v59, v22);
  }
  sub_1BDAC350C((uint64_t)v19, (uint64_t *)&unk_1ED23B1C0);
  v56 = sub_1BDBFC948();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v75, 1, 1, v56);
}

uint64_t sub_1BDAC246C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1BDAC1EBC(a1, a2, a3, a4);
}

uint64_t sub_1BDAC247C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1BDAC1EBC(a1, a2, a3, a4);
}

id sub_1BDAC2490()
{
  id *v0;

  return *v0;
}

uint64_t sub_1BDAC2498@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1BDAC24A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BDBFD6F8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BDAC24C8(uint64_t a1, uint64_t a2)
{
  return sub_1BDAC2E00(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1BDAC24E0(uint64_t a1, uint64_t a2)
{
  return sub_1BDAC2E00(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1BDAC24F4()
{
  sub_1BDAC31B0(&qword_1EF50B398, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC16DA0);
  return sub_1BDBFE9AC();
}

uint64_t sub_1BDAC2534()
{
  sub_1BDAC31B0(&qword_1EF50B398, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC16DA0);
  return sub_1BDBFE9A0();
}

uint64_t sub_1BDAC2578()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC17260);
  return sub_1BDBFC810();
}

uint64_t sub_1BDAC25B8(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1BDBFD6E0();
  *a2 = 0;
  return result;
}

uint64_t sub_1BDAC262C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1BDBFD6EC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1BDAC26A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BDBFD6F8();
  v2 = sub_1BDBFD6C8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BDAC26E8()
{
  sub_1BDAC31B0(&qword_1EF50B470, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC1752C);
  return sub_1BDBFE9AC();
}

uint64_t sub_1BDAC2728()
{
  sub_1BDAC31B0(&qword_1EF50B470, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC1752C);
  return sub_1BDBFE9A0();
}

uint64_t sub_1BDAC2768()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17718);
  return sub_1BDBFC810();
}

uint64_t sub_1BDAC27A8()
{
  return sub_1BDBFD6F8();
}

uint64_t sub_1BDAC27B8()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC17260);
  return sub_1BDBFC84C();
}

uint64_t sub_1BDAC27F8()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC17260);
  return sub_1BDBFC828();
}

uint64_t sub_1BDAC2838(void *a1)
{
  id v2;

  sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC17260);
  v2 = a1;
  return sub_1BDBFC81C();
}

uint64_t sub_1BDAC289C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1BDBFE088();

  return v2;
}

uint64_t sub_1BDAC28D0()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC17260);
  return sub_1BDBFC840();
}

_QWORD *sub_1BDAC2924@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1BDAC2934(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1BDAC2944()
{
  return sub_1BDBFD6F8();
}

uint64_t sub_1BDAC2954()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17718);
  return sub_1BDBFC84C();
}

uint64_t sub_1BDAC2994()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17718);
  return sub_1BDBFC828();
}

uint64_t sub_1BDAC29D4(void *a1)
{
  id v2;

  sub_1BDAC31B0((unint64_t *)&qword_1EF50B4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17718);
  v2 = a1;
  return sub_1BDBFC81C();
}

uint64_t sub_1BDAC2A38()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17718);
  return sub_1BDBFC840();
}

uint64_t sub_1BDAC2A88()
{
  sub_1BDBFEA0C();
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDAC2AE4()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC17260);
  return sub_1BDBFC834();
}

BOOL sub_1BDAC2B3C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BDAC2B54()
{
  sub_1BDAC31B0(&qword_1EF50B3F8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BDC16EB8);
  sub_1BDAC31B0((unint64_t *)&unk_1EF50B400, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BDC16E58);
  return sub_1BDBFE5C8();
}

uint64_t sub_1BDAC2BD8()
{
  sub_1BDAC31B0(&qword_1EF50B3E8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1BDC17010);
  sub_1BDAC31B0(&qword_1EF50B3F0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1BDC16FB0);
  return sub_1BDBFE5C8();
}

uint64_t sub_1BDAC2C5C()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BDC1721C);
  sub_1BDAC31B0(&qword_1EF50B3E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BDC17108);
  return sub_1BDBFE5C8();
}

uint64_t sub_1BDAC2CE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BDBFD6C8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BDAC2D24()
{
  sub_1BDAC31B0(&qword_1EF50B4A8, (uint64_t (*)(uint64_t))type metadata accessor for PDFDocumentWriteOption, (uint64_t)&unk_1BDC17690);
  sub_1BDAC31B0(&qword_1EF50B4B0, (uint64_t (*)(uint64_t))type metadata accessor for PDFDocumentWriteOption, (uint64_t)&unk_1BDC17638);
  return sub_1BDBFE5C8();
}

uint64_t sub_1BDAC2DA8()
{
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17718);
  return sub_1BDBFC834();
}

uint64_t sub_1BDAC2E00(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BDBFD6F8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BDAC2E3C()
{
  sub_1BDBFD6F8();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDAC2E7C()
{
  uint64_t v0;

  sub_1BDBFD6F8();
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  v0 = sub_1BDBFEA30();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BDAC2EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BDBFD6F8();
  v2 = v1;
  if (v0 == sub_1BDBFD6F8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1BDAC2F74(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510080);
  v2 = sub_1BDBFE598();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDAC35F0(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_1BDAC358C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BD942258(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void type metadata accessor for NotesVersion(uint64_t a1)
{
  sub_1BD9428D0(a1, (unint64_t *)&unk_1EF50B318);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1BDAC30C0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BDAC30E0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1BD9428D0(a1, qword_1ED239BD0);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1BD9428D0(a1, (unint64_t *)&unk_1EF50B328);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1ED23AB80);
}

void type metadata accessor for ICError(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B338);
}

uint64_t sub_1BDAC3158()
{
  return sub_1BDAC31B0(&qword_1EF50B340, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC16CB8);
}

uint64_t sub_1BDAC3184()
{
  return sub_1BDAC31B0(&qword_1EF50B348, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC16CE4);
}

uint64_t sub_1BDAC31B0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1C3B7B388](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDAC31F0()
{
  return sub_1BDAC31B0(&qword_1EF50B350, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BDC16E1C);
}

uint64_t sub_1BDAC321C()
{
  return sub_1BDAC31B0(&qword_1EF50B358, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BDC16DF0);
}

uint64_t sub_1BDAC3248()
{
  return sub_1BDAC31B0(&qword_1EF50B360, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1BDC16E8C);
}

uint64_t sub_1BDAC3274()
{
  return sub_1BDAC31B0(&qword_1EF50B368, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1BDC16F74);
}

uint64_t sub_1BDAC32A0()
{
  return sub_1BDAC31B0(&qword_1EF50B370, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1BDC16F48);
}

uint64_t sub_1BDAC32CC()
{
  return sub_1BDAC31B0(&qword_1EF50B378, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1BDC16FE4);
}

uint64_t sub_1BDAC32F8()
{
  return sub_1BDAC31B0(&qword_1EF50B380, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BDC170CC);
}

uint64_t sub_1BDAC3324()
{
  return sub_1BDAC31B0(&qword_1EF50B388, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BDC170A0);
}

uint64_t sub_1BDAC3350()
{
  return sub_1BDAC31B0(&qword_1EF50B390, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BDC1713C);
}

uint64_t sub_1BDAC337C()
{
  return sub_1BDAC31B0(&qword_1EF50B398, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC16DA0);
}

uint64_t sub_1BDAC33A8()
{
  return sub_1BDAC31B0(&qword_1EF50B3A0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC16D6C);
}

uint64_t sub_1BDAC33D4()
{
  return sub_1BDAC31B0(&qword_1EF50B3A8, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC16D28);
}

uint64_t sub_1BDAC3400()
{
  return sub_1BDAC31B0(&qword_1EF50B3B0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BDC17308);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B440);
}

uint64_t sub_1BDAC3440()
{
  return sub_1BDAC31B0(&qword_1EF50B3B8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BDC172CC);
}

unint64_t sub_1BDAC3470()
{
  unint64_t result;

  result = qword_1EF50B3C0;
  if (!qword_1EF50B3C0)
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF50B3C0);
  }
  return result;
}

uint64_t sub_1BDAC34B4()
{
  return sub_1BDAC31B0(&qword_1EF50B3C8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BDC17344);
}

uint64_t sub_1BDAC34E0()
{
  return sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC17260);
}

uint64_t sub_1BDAC350C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1BDAC3548()
{
  unint64_t result;

  result = qword_1ED23B258;
  if (!qword_1ED23B258)
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED23B258);
  }
  return result;
}

unint64_t sub_1BDAC358C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BDBFEA0C();
  sub_1BDBFD794();
  v4 = sub_1BDBFEA30();
  return sub_1BDAC3638(a1, a2, v4);
}

uint64_t sub_1BDAC35F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDAC3638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BDBFE874() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BDBFE874() & 1) == 0);
    }
  }
  return v6;
}

BOOL sub_1BDAC3718()
{
  uint64_t v0;

  return sub_1BDAE4D88(*(_BYTE *)(v0 + 16));
}

uint64_t sub_1BDAC3720()
{
  return swift_deallocObject();
}

uint64_t sub_1BDAC3730()
{
  uint64_t v0;

  return sub_1BDAE5A10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t _s7SummaryV12ParticipantsVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1BDAC377C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BDAC379C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B418);
}

void type metadata accessor for PDFDocumentWriteOption(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B420);
}

void type metadata accessor for FilterType(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B428);
}

void type metadata accessor for ICPaperDocumentError(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B430);
}

void type metadata accessor for CMSampleBuffer(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B438);
}

uint64_t sub_1BDAC3838()
{
  return sub_1BDAC31B0(&qword_1EF50B448, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17444);
}

uint64_t sub_1BDAC3864()
{
  return sub_1BDAC31B0(&qword_1EF50B450, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17470);
}

uint64_t sub_1BDAC3890()
{
  return sub_1BDAC31B0(&qword_1EF50B458, (uint64_t (*)(uint64_t))type metadata accessor for PDFDocumentWriteOption, (uint64_t)&unk_1BDC17600);
}

uint64_t sub_1BDAC38BC()
{
  return sub_1BDAC31B0(&qword_1EF50B460, (uint64_t (*)(uint64_t))type metadata accessor for PDFDocumentWriteOption, (uint64_t)&unk_1BDC175D8);
}

uint64_t sub_1BDAC38E8()
{
  return sub_1BDAC31B0(&qword_1EF50B468, (uint64_t (*)(uint64_t))type metadata accessor for PDFDocumentWriteOption, (uint64_t)&unk_1BDC17668);
}

uint64_t sub_1BDAC3914()
{
  return sub_1BDAC31B0(&qword_1EF50B470, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC1752C);
}

uint64_t sub_1BDAC3940()
{
  return sub_1BDAC31B0(&qword_1EF50B478, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC174F8);
}

uint64_t sub_1BDAC396C()
{
  return sub_1BDAC31B0(&qword_1EF50B480, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC174B4);
}

uint64_t sub_1BDAC3998()
{
  return sub_1BDAC31B0(&qword_1EF50B488, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1BDC177C0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B4B8);
}

uint64_t sub_1BDAC39D8()
{
  return sub_1BDAC31B0(&qword_1EF50B490, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1BDC17784);
}

uint64_t sub_1BDAC3A04()
{
  return sub_1BDAC31B0(&qword_1EF50B498, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1BDC177FC);
}

uint64_t sub_1BDAC3A30()
{
  return sub_1BDAC31B0((unint64_t *)&qword_1EF50B4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17718);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1BDAC3A70(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BDAC3A90(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B4C0);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_1BD9428D0(a1, &qword_1EF50B4C8);
}

ICTTAttachment __swiftcall ICTTAttachment.init(identifier:universalTypeIdentifier:)(Swift::String_optional identifier, Swift::String_optional universalTypeIdentifier)
{
  void *object;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  NSString *v8;
  NSString *v9;
  objc_class *v10;
  ICTTAttachment result;

  object = universalTypeIdentifier.value._object;
  v3 = identifier.value._object;
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v5 = v4;
  if (v3)
  {
    v6 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v4, sel_setAttachmentIdentifier_, v6);

  if (object)
  {
    v7 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v4, sel_setAttachmentUTI_, v7);

  v10 = (objc_class *)v4;
  result._attachmentUTI = v9;
  result._attachmentIdentifier = v8;
  result.super.isa = v10;
  return result;
}

uint64_t sub_1BDAC3BE0()
{
  sub_1BDAC3DA4(&qword_1EF50B658, (uint64_t)&unk_1BDC171B4);
  return sub_1BDBFD9B0();
}

uint64_t sub_1BDAC3C4C()
{
  sub_1BDAC3DA4(&qword_1EF50B658, (uint64_t)&unk_1BDC171B4);
  return sub_1BDBFD968();
}

BOOL static ICNotesVersion.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL sub_1BDAC3CB4(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_1BDAC3CC8(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1BDAC3CDC(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1BDAC3CF0(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t ICNotesVersion.description.getter()
{
  return sub_1BDBFE760();
}

uint64_t sub_1BDAC3D40()
{
  return sub_1BDAC3DA4(&qword_1EF50B650, (uint64_t)&unk_1BDC171F0);
}

uint64_t sub_1BDAC3D64()
{
  return sub_1BDBFE760();
}

uint64_t sub_1BDAC3DA4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for NotesVersion(255);
    result = MEMORY[0x1C3B7B388](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDAC3DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50B660);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50B660);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t ICAttachmentAudioModel.needsTranscription.getter()
{
  void *v0;
  void *v1;
  void *v2;
  unsigned int v3;
  uint64_t result;
  void *v5;
  unsigned __int8 v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v1 = v0;
  sub_1BDBFE01C();
  v2 = (void *)sub_1BDBFE010();
  v3 = objc_msgSend(v2, sel_supportsGeneralASR);

  if (!v3)
    return 0;
  result = (uint64_t)objc_msgSend(v1, sel_audioDocument);
  if (!result)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v5 = (void *)result;
  v6 = objc_msgSend((id)result, sel_isCallRecording);

  if ((v6 & 1) != 0)
    return 0;
  result = (uint64_t)objc_msgSend(v1, sel_audioDocument);
  if (!result)
    goto LABEL_25;
  v8 = (void *)result;
  v9 = ICTTAudioDocument.orderedFragments.getter();

  v21 = v1;
  if (v9 >> 62)
    goto LABEL_21;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v10)
  {
    v11 = 4;
    while (1)
    {
      v12 = (v9 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B79954](v11 - 4, v9) : *(id *)(v9 + 8 * v11);
      v13 = v12;
      v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1))
        break;
      v15 = objc_msgSend(v12, sel_transcript);
      v16 = objc_msgSend(v15, sel_allObjects);

      type metadata accessor for ICTTTranscriptSegment();
      v17 = sub_1BDBFD9E0();

      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        v19 = sub_1BDBFE574();

        swift_bridgeObjectRelease_n();
        if (!v19)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();

        if (!v18)
          goto LABEL_19;
      }
      ++v11;
      if (v14 == v10)
        goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    v10 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  result = (uint64_t)objc_msgSend(v21, sel_attachment);
  if (result)
  {
    v20 = (void *)result;
    v7 = objc_msgSend((id)result, sel_needsTranscription);

    return (uint64_t)v7;
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Void __swiftcall ICAttachmentAudioModel.transformNewlyAddedMediaAttachment()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  char *v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  _BOOL4 v61;
  uint8_t *v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  os_log_t v67;
  uint8_t *v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  char *v82;
  void *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  char *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99;
  id v100;
  void *v101;
  void *v102;
  void *v103;
  id v104;
  id v105;
  void *v106;
  id v107;
  id v108;
  NSObject *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  os_log_t v114;
  uint8_t *v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  id v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131[4];

  v1 = v0;
  v2 = sub_1BDBFCAC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BDBFCB40();
  v126 = *(_QWORD *)(v9 - 8);
  v127 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v123 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v125 = (char *)&v113 - v13;
  MEMORY[0x1E0C80A78](v12);
  v124 = (char *)&v113 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v113 - v19;
  v129 = sub_1BDBFC948();
  v21 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v128 = (uint64_t)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(v1, sel_audioDocument);
  if (!v23)
  {
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_isCallRecording);

  if ((v25 & 1) != 0)
    return;
  v26 = objc_msgSend(v1, sel_attachment);
  if (!v26)
    goto LABEL_51;
  v27 = v26;
  v28 = objc_msgSend(v26, sel_media);

  if (v28)
  {
    v29 = objc_msgSend(v28, sel_mediaURL);

    if (v29)
    {
      sub_1BDBFC90C();

      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
    v31 = v129;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v18, v30, 1, v129);
    sub_1BDAC75A0((uint64_t)v18, (uint64_t)v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v31) == 1)
      goto LABEL_10;
    v32 = v128;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v128, v20, v31);
    v33 = objc_msgSend(v1, sel_attachment);
    if (v33)
    {
      v34 = v33;
      v35 = objc_msgSend(v33, sel_note);

      if (!v35)
        goto LABEL_18;
      v122 = v35;
      v36 = objc_msgSend(v1, sel_attachment);
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v36, sel_identifier);

        if (v38)
        {
          sub_1BDBFD6F8();

          sub_1BDBFCAE0();
          swift_bridgeObjectRelease();
          v39 = v126;
          v40 = v127;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v8, 1, v127) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v32, v129);

            sub_1BDAC350C((uint64_t)v8, &qword_1ED23AD30);
            goto LABEL_19;
          }
          v45 = v124;
          (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v124, v8, v40);
          v46 = objc_msgSend(v1, sel_attachment);
          if (v46)
          {
            v47 = v46;
            v48 = objc_msgSend(v46, sel_managedObjectContext);

            v121 = v48;
            if (!v48)
            {

              (*(void (**)(char *, uint64_t))(v126 + 8))(v45, v40);
              (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v32, v129);
              goto LABEL_19;
            }
            v49 = (void *)sub_1BDBFCAF8();
            v50 = objc_msgSend(v1, sel_bitFlippeddUUIDWithUuid_, v49);

            sub_1BDBFCB10();
            sub_1BDBFCAEC();
            v51 = (void *)sub_1BDBFD6C8();
            swift_bridgeObjectRelease();
            v52 = objc_msgSend(v122, sel_addAudioAttachmentWithIdentifier_, v51);

            v53 = v52;
            v54 = objc_msgSend(v1, sel_attachment);
            objc_msgSend(v53, sel_setParentAttachment_, v54);

            if (qword_1EF50AFC0 != -1)
              swift_once();
            v55 = sub_1BDBFCE34();
            v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1EF50B660);
            v57 = v53;
            v58 = sub_1BDBFCE1C();
            v59 = sub_1BDBFDED8();
            v60 = v59;
            v61 = os_log_type_enabled(v58, v59);
            v118 = v56;
            v119 = v57;
            if (v61)
            {
              LODWORD(v120) = v60;
              v62 = (uint8_t *)swift_slowAlloc();
              v117 = swift_slowAlloc();
              v131[0] = v117;
              v116 = v62;
              *(_DWORD *)v62 = 136315138;
              v115 = v62 + 4;
              v63 = objc_msgSend(v57, sel_shortLoggingDescription);
              v64 = sub_1BDBFD6F8();
              v114 = v58;
              v66 = v65;

              v130 = sub_1BDAE53FC(v64, v66, v131);
              sub_1BDBFE100();

              swift_bridgeObjectRelease();
              v67 = v114;
              v68 = v116;
              _os_log_impl(&dword_1BD918000, v114, (os_log_type_t)v120, "Created subattachment %s", v116, 0xCu);
              v69 = v117;
              swift_arrayDestroy();
              MEMORY[0x1C3B7B478](v69, -1, -1);
              MEMORY[0x1C3B7B478](v68, -1, -1);

            }
            else
            {

            }
            v70 = objc_msgSend(v1, sel_audioDocument);
            if (v70)
            {
              v71 = v70;
              type metadata accessor for ICTTAudioRecording.Fragment();
              v72 = objc_msgSend(v71, sel_document);

              v73 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
              v74 = (void *)sub_1BDBFCAF8();
              v75 = objc_msgSend(v73, sel_initWithDocument_identity_, v72, v74);

              _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
              v76 = (void *)sub_1BDBFCA74();
              (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
              objc_msgSend(v75, sel_setCreatedDate_, v76);

              v77 = (void *)sub_1BDBFDD64();
              v120 = v75;
              objc_msgSend(v75, sel_setTranscriptVersion_, v77);

              v78 = objc_msgSend(v1, sel_audioDocument);
              if (v78)
              {
                v79 = v78;
                v80 = objc_msgSend(v78, sel_document);
                v81 = objc_msgSend(v80, sel_rootObject);

                v82 = v123;
                if (v81)
                {
                  objc_opt_self();
                  v83 = (void *)swift_dynamicCastObjCClass();
                  v84 = v127;
                  if (v83)
                  {
                    v85 = objc_msgSend(v83, sel_fragments);
                    swift_unknownObjectRelease();
                    objc_msgSend(v85, sel_addObject_, v120);

                  }
                  else
                  {

                    swift_unknownObjectRelease();
                  }
                }
                else
                {

                  v84 = v127;
                }
                v86 = v126;
                (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v82, v125, v84);
                v87 = sub_1BDBFCE1C();
                v88 = sub_1BDBFDED8();
                if (os_log_type_enabled(v87, v88))
                {
                  v89 = (uint8_t *)swift_slowAlloc();
                  v90 = swift_slowAlloc();
                  v131[0] = v90;
                  *(_DWORD *)v89 = 136315138;
                  v91 = sub_1BDBFCAEC();
                  v130 = sub_1BDAE53FC(v91, v92, v131);
                  sub_1BDBFE100();
                  swift_bridgeObjectRelease();
                  v93 = v82;
                  v94 = *(void (**)(char *, uint64_t))(v126 + 8);
                  v94(v93, v127);
                  _os_log_impl(&dword_1BD918000, v87, v88, "Appended fragment %s", v89, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1C3B7B478](v90, -1, -1);
                  MEMORY[0x1C3B7B478](v89, -1, -1);
                }
                else
                {
                  v95 = v82;
                  v94 = *(void (**)(char *, uint64_t))(v86 + 8);
                  v94(v95, v84);
                }

                v96 = v128;
                v97 = v121;
                v98 = (void *)sub_1BDBFC8D0();
                v99 = v119;

                objc_msgSend(v1, sel_setMergeableDataDirty_, 1);
                v100 = objc_msgSend(v1, sel_attachment);
                if (v100)
                {
                  v101 = v100;
                  v102 = (void *)sub_1BDBFD6C8();
                  objc_msgSend(v101, sel_updateChangeCountWithReason_, v102);

                  v103 = (void *)sub_1BDBFD6C8();
                  objc_msgSend(v99, sel_updateChangeCountWithReason_, v103);

                  objc_msgSend(v97, sel_ic_save);
                  if (!objc_msgSend(v1, sel_needsTranscription))
                  {

                    v112 = v127;
                    v94(v125, v127);
                    v94(v124, v112);
                    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v96, v129);
                    return;
                  }
                  if (qword_1EF50B1B0 != -1)
                    swift_once();
                  swift_beginAccess();
                  v104 = (id)qword_1EF50D328;
                  v105 = objc_msgSend(v1, sel_attachment);
                  if (v105)
                  {
                    v106 = v105;
                    v107 = objc_msgSend(v105, sel_objectID);

                    v108 = objc_msgSend(v99, sel_objectID);
                    v109 = swift_allocObject();
                    swift_unknownObjectWeakInit();
                    swift_retain();
                    v110 = v128;
                    sub_1BDB24F78(v128, v107, v108, sub_1BDAC760C, v109);

                    swift_release_n();
                    v111 = v127;
                    v94(v125, v127);
                    v94(v124, v111);
                    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v110, v129);
                    return;
                  }
                  goto LABEL_58;
                }
LABEL_57:
                __break(1u);
LABEL_58:
                __break(1u);
                return;
              }
LABEL_56:
              __break(1u);
              goto LABEL_57;
            }
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }

LABEL_18:
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v32, v31);
        goto LABEL_19;
      }
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v20, 1, 1, v129);
LABEL_10:
  sub_1BDAC350C((uint64_t)v20, &qword_1ED23B1B0);
LABEL_19:
  if (qword_1EF50AFC0 != -1)
    swift_once();
  v41 = sub_1BDBFCE34();
  __swift_project_value_buffer(v41, (uint64_t)qword_1EF50B660);
  v42 = sub_1BDBFCE1C();
  v43 = sub_1BDBFDEE4();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_1BD918000, v42, v43, "no media URL on imported attachment", v44, 2u);
    MEMORY[0x1C3B7B478](v44, -1, -1);
  }

}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.createSubattachmentForRecording()(ICAttachment *__return_ptr retstr)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint8_t *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  _BYTE *v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  char *v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  char *v63;
  void *v64;
  id v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint8_t *v77;
  id v78;
  uint64_t v79;
  id v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;

  v2 = v1;
  v3 = sub_1BDBFCAC8();
  v85 = *(_QWORD *)(v3 - 8);
  v86 = v3;
  MEMORY[0x1E0C80A78](v3);
  v84 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v5);
  v87 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFCB40();
  v88 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v83 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v76 - v10;
  v12 = sub_1BDBFCE10();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(v2, sel_attachment);
  if (!v16)
  {
    __break(1u);
    goto LABEL_28;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_note);

  v89 = v18;
  if (!v18)
  {
LABEL_10:
    sub_1BDAC7614();
    swift_allocError();
    *v43 = 7;
    swift_willThrow();
    return;
  }
  v19 = objc_msgSend(v2, sel_attachment);
  if (!v19)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, sel_managedObjectContext);

  if (!v21)
  {

    goto LABEL_10;
  }
  v81 = v11;
  v82 = v7;
  sub_1BDBFCDEC();
  sub_1BDBFCDE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v22 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v23 = (void *)sub_1BDBFC978();
  v24 = (void *)sub_1BDBFD6C8();
  v25 = objc_msgSend(v89, sel_addAttachmentWithUTI_data_filename_updateFileBasedAttributes_analytics_regulatoryLogging_, v22, v23, v24, 1, 1, 0);

  v26 = v25;
  v27 = objc_msgSend(v2, sel_attachment);
  objc_msgSend(v26, sel_setParentAttachment_, v27);

  if (qword_1EF50AFC0 != -1)
    swift_once();
  v28 = sub_1BDBFCE34();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EF50B660);
  v30 = v26;
  v31 = sub_1BDBFCE1C();
  v32 = sub_1BDBFDED8();
  v33 = os_log_type_enabled(v31, v32);
  v79 = v29;
  if (v33)
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v78 = (id)swift_slowAlloc();
    v91 = (uint64_t)v78;
    *(_DWORD *)v34 = 136315138;
    v77 = v34 + 4;
    v35 = v21;
    v36 = objc_msgSend(v30, sel_shortLoggingDescription);
    v37 = v30;
    v38 = sub_1BDBFD6F8();
    v80 = v2;
    v40 = v39;

    v21 = v35;
    v41 = v38;
    v30 = v37;
    v90 = sub_1BDAE53FC(v41, v40, &v91);
    sub_1BDBFE100();

    v2 = v80;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD918000, v31, v32, "Created subattachment %s", v34, 0xCu);
    v42 = v78;
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v42, -1, -1);
    MEMORY[0x1C3B7B478](v34, -1, -1);

  }
  else
  {

  }
  v44 = v82;
  v45 = objc_msgSend(v30, sel_identifier);
  if (!v45)
    goto LABEL_15;
  v46 = v45;
  sub_1BDBFD6F8();

  v47 = (uint64_t)v87;
  sub_1BDBFCAE0();
  swift_bridgeObjectRelease();
  v48 = v88;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v47, 1, v44) == 1)
  {
    sub_1BDAC350C(v47, &qword_1ED23AD30);
LABEL_15:
    sub_1BDAC7614();
    swift_allocError();
    *v49 = 7;
    swift_willThrow();

    return;
  }
  v77 = (uint8_t *)v30;
  v78 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v81, v47, v44);
  v50 = objc_msgSend(v2, sel_audioDocument);
  if (!v50)
    goto LABEL_29;
  v51 = v50;
  type metadata accessor for ICTTAudioRecording.Fragment();
  v52 = objc_msgSend(v51, sel_document);

  v53 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v54 = (void *)sub_1BDBFCAF8();
  v55 = objc_msgSend(v53, sel_initWithDocument_identity_, v52, v54);

  v56 = v84;
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  v57 = (void *)sub_1BDBFCA74();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v56, v86);
  objc_msgSend(v55, sel_setCreatedDate_, v57);

  v58 = (void *)sub_1BDBFDD64();
  objc_msgSend(v55, sel_setTranscriptVersion_, v58);

  v80 = v2;
  v59 = objc_msgSend(v2, sel_audioDocument);
  if (!v59)
  {
LABEL_30:
    __break(1u);
    return;
  }
  v60 = v59;
  v61 = objc_msgSend(v59, sel_document);
  v62 = objc_msgSend(v61, sel_rootObject);

  v63 = v83;
  if (v62)
  {
    objc_opt_self();
    v64 = (void *)swift_dynamicCastObjCClass();
    if (v64)
    {
      v65 = objc_msgSend(v64, sel_fragments);
      swift_unknownObjectRelease();
      objc_msgSend(v65, sel_addObject_, v55);

    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  else
  {

  }
  v66 = v88;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v63, v81, v44);
  v67 = sub_1BDBFCE1C();
  v68 = sub_1BDBFDED8();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc();
    v70 = swift_slowAlloc();
    v91 = v70;
    *(_DWORD *)v69 = 136315138;
    sub_1BDAC7658();
    v71 = sub_1BDBFE760();
    v90 = sub_1BDAE53FC(v71, v72, &v91);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    v73 = *(void (**)(char *, uint64_t))(v88 + 8);
    v73(v63, v82);
    _os_log_impl(&dword_1BD918000, v67, v68, "Appended fragment %s", v69, 0xCu);
    swift_arrayDestroy();
    v74 = v70;
    v44 = v82;
    MEMORY[0x1C3B7B478](v74, -1, -1);
    MEMORY[0x1C3B7B478](v69, -1, -1);
  }
  else
  {
    v73 = *(void (**)(char *, uint64_t))(v66 + 8);
    v73(v63, v44);
  }

  objc_msgSend(v80, sel_setMergeableDataDirty_, 1);
  v75 = v78;
  objc_msgSend(v78, sel_ic_save);

  v73(v81, v44);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.saveSummaryToAttachment(summary:)(NSAttributedString summary)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  _BYTE *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  id v76[2];

  v3 = v1;
  v76[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1BDBFCE34();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v74 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v68 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)-[objc_class length](summary.super.isa, sel_length) < 1)
  {
    sub_1BDAC7614();
    swift_allocError();
    *v26 = 8;
LABEL_43:
    swift_willThrow();
    return;
  }
  v71 = v2;
  v72 = v6;
  v14 = objc_msgSend(v3, sel_audioDocument);
  if (!v14)
  {
    __break(1u);
    goto LABEL_45;
  }
  v15 = v14;
  v73 = v5;
  v16 = objc_msgSend(v3, sel_attachment);
  if (!v16)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_currentReplicaID);

  sub_1BDBFCB10();
  v19 = sub_1BDBFCB40();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v13, 0, 1, v19);
  v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) != 1)
  {
    v21 = (void *)sub_1BDBFCAF8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v19);
  }
  v22 = objc_msgSend(objc_allocWithZone((Class)ICTTMergeableAttributedString), sel_initWithReplicaID_, v21);

  v23 = objc_msgSend(v15, sel_document);
  v24 = objc_msgSend(v23, sel_rootObject);

  if (v24)
  {
    objc_opt_self();
    v25 = (void *)swift_dynamicCastObjCClass();
    if (!v25)
      swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  objc_msgSend(v25, sel_setSummary_, v22);

  v27 = objc_msgSend(v3, sel_audioDocument);
  if (!v27)
    goto LABEL_46;
  v28 = v27;
  v29 = objc_msgSend(v27, sel_document);
  v30 = objc_msgSend(v29, sel_rootObject);

  v31 = v72;
  if (v30)
  {
    objc_opt_self();
    v32 = (void *)swift_dynamicCastObjCClass();
    if (!v32)
      swift_unknownObjectRelease();
  }
  else
  {
    v32 = 0;
  }
  v33 = objc_msgSend(v32, sel_summary);

  if (v33)
  {
    objc_msgSend(v33, sel_replaceCharactersInRange_withAttributedString_, 0, objc_msgSend(v33, sel_length), summary.super.isa);

  }
  v34 = v73;
  if (qword_1EF50AFC0 != -1)
    swift_once();
  v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EF50B660);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v36(v10, v35, v34);
  v3 = v3;
  v37 = sub_1BDBFCE1C();
  v38 = sub_1BDBFDED8();
  if (os_log_type_enabled(v37, v38))
  {
    v69 = v35;
    v70 = v36;
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = (void *)swift_slowAlloc();
    v76[0] = v40;
    *(_DWORD *)v39 = 136315138;
    v41 = objc_msgSend(v3, sel_attachment);
    if (!v41)
    {
LABEL_48:

      __break(1u);
      goto LABEL_49;
    }
    v42 = v41;
    v43 = objc_msgSend(v41, sel_identifier);

    if (v43)
    {
      v44 = sub_1BDBFD6F8();
      v46 = v45;

    }
    else
    {
      v44 = 0;
      v46 = 0xE000000000000000;
    }
    v75 = sub_1BDAE53FC(v44, v46, (uint64_t *)v76);
    sub_1BDBFE100();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD918000, v37, v38, "Wrote summary to attachment %s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v40, -1, -1);
    MEMORY[0x1C3B7B478](v39, -1, -1);

    v34 = v73;
    v47 = *(void (**)(char *, uint64_t))(v72 + 8);
    v47(v10, v73);
    v35 = v69;
    v36 = v70;
  }
  else
  {

    v47 = *(void (**)(char *, uint64_t))(v31 + 8);
    v47(v10, v34);
  }
  v48 = objc_msgSend(v3, sel_audioDocument);
  if (!v48)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, sel_document);
  v51 = objc_msgSend(v50, sel_rootObject);

  if (v51)
  {
    objc_opt_self();
    v52 = (void *)swift_dynamicCastObjCClass();

    if (!v52)
    {
      swift_unknownObjectRelease();
      goto LABEL_33;
    }
    v49 = (void *)sub_1BDBFDD64();
    objc_msgSend(v52, sel_setSummaryVersion_, v49);
    swift_unknownObjectRelease();
  }

LABEL_33:
  v53 = v74;
  v36(v74, v35, v34);
  v10 = (char *)v3;
  v54 = sub_1BDBFCE1C();
  v55 = sub_1BDBFDED8();
  if (!os_log_type_enabled(v54, v55))
  {

    v64 = v53;
    v65 = v34;
LABEL_40:
    v47(v64, v65);
    v76[0] = 0;
    if ((objc_msgSend(v10, sel_saveAttachmentAndReturnError_, v76) & 1) != 0)
    {
      v66 = v76[0];
      return;
    }
    v67 = v76[0];
    sub_1BDBFC87C();

    goto LABEL_43;
  }
  v56 = swift_slowAlloc();
  v57 = (void *)swift_slowAlloc();
  v76[0] = v57;
  *(_DWORD *)v56 = 136315394;
  v58 = objc_msgSend(v10, sel_attachment);
  if (v58)
  {
    v59 = v58;
    v60 = objc_msgSend(v58, sel_identifier);

    if (v60)
    {
      v61 = sub_1BDBFD6F8();
      v63 = v62;

    }
    else
    {
      v61 = 0;
      v63 = 0xE000000000000000;
    }
    v75 = sub_1BDAE53FC(v61, v63, (uint64_t *)v76);
    sub_1BDBFE100();

    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2048;
    v75 = 0;
    sub_1BDBFE100();
    _os_log_impl(&dword_1BD918000, v54, v55, "Wrote summary version to attachment %s version: %ld", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v57, -1, -1);
    MEMORY[0x1C3B7B478](v56, -1, -1);

    v65 = v73;
    v64 = v74;
    goto LABEL_40;
  }
LABEL_49:

  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.saveTopLineSummaryToAttachment(summary:)(Swift::String summary)
{
  void *v1;
  uint64_t v2;
  id v3;
  unint64_t object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  _BYTE *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v3 = v1;
  object = (unint64_t)summary._object;
  countAndFlagsBits = summary._countAndFlagsBits;
  v6 = sub_1BDBFCE34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BDBFD7A0() < 1)
  {
    sub_1BDAC7614();
    swift_allocError();
    *v26 = 8;
    swift_willThrow();
    return;
  }
  v13 = HIBYTE(object) & 0xF;
  if ((object & 0x2000000000000000) == 0)
    v13 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    v63 = v7;
    v64 = v6;
    v62 = v2;
    v14 = objc_msgSend(v3, sel_audioDocument);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v3, sel_attachment);
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v16, sel_currentReplicaID);

        sub_1BDBFCB10();
        v19 = sub_1BDBFCB40();
        v20 = *(_QWORD *)(v19 - 8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
        v21 = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v19) != 1)
        {
          v21 = (void *)sub_1BDBFCAF8();
          (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v19);
        }
        v22 = objc_msgSend(objc_allocWithZone((Class)ICTTMergeableAttributedString), sel_initWithReplicaID_, v21);

        v23 = objc_msgSend(v15, sel_document);
        v24 = objc_msgSend(v23, sel_rootObject);

        if (v24)
        {
          objc_opt_self();
          v25 = (void *)swift_dynamicCastObjCClass();
          if (!v25)
            swift_unknownObjectRelease();
        }
        else
        {
          v25 = 0;
        }
        objc_msgSend(v25, sel_setTopLineSummary_, v22);

        v27 = objc_msgSend(v3, sel_audioDocument);
        if (v27)
        {
          v28 = v27;
          v29 = objc_msgSend(v27, sel_document);
          v30 = objc_msgSend(v29, sel_rootObject);

          if (v30)
          {
            objc_opt_self();
            v31 = (void *)swift_dynamicCastObjCClass();
            if (!v31)
              swift_unknownObjectRelease();
          }
          else
          {
            v31 = 0;
          }
          v32 = objc_msgSend(v31, sel_topLineSummary);

          if (v32)
          {
            v33 = objc_msgSend(v32, sel_length);
            v34 = (void *)sub_1BDBFD6C8();
            objc_msgSend(v32, sel_replaceCharactersInRange_withString_, 0, v33, v34);

          }
          if (qword_1EF50AFC0 != -1)
            swift_once();
          v35 = v64;
          v36 = __swift_project_value_buffer(v64, (uint64_t)qword_1EF50B660);
          v37 = v63;
          (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v9, v36, v35);
          v3 = v3;
          v38 = sub_1BDBFCE1C();
          v39 = sub_1BDBFDED8();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = (uint8_t *)swift_slowAlloc();
            v41 = swift_slowAlloc();
            v66 = v41;
            *(_DWORD *)v40 = 136315138;
            v42 = objc_msgSend(v3, sel_attachment);
            if (!v42)
            {
LABEL_50:

              __break(1u);
              return;
            }
            v43 = v42;
            v44 = objc_msgSend(v42, sel_identifier);

            if (v44)
            {
              v45 = sub_1BDBFD6F8();
              v47 = v46;

            }
            else
            {
              v45 = 0;
              v47 = 0xE000000000000000;
            }
            v65 = sub_1BDAE53FC(v45, v47, &v66);
            sub_1BDBFE100();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BD918000, v38, v39, "Wrote top line summary to attachment %s", v40, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3B7B478](v41, -1, -1);
            MEMORY[0x1C3B7B478](v40, -1, -1);

            (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v64);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v35);
          }
          v48 = objc_msgSend(v3, sel_audioDocument);
          if (v48)
          {
            v49 = v48;
            v50 = objc_msgSend(v48, sel_document);
            v51 = objc_msgSend(v50, sel_rootObject);

            if (v51)
            {
              objc_opt_self();
              v52 = (void *)swift_dynamicCastObjCClass();

              if (!v52)
              {
                swift_unknownObjectRelease();
LABEL_36:
                v53 = objc_msgSend(v3, sel_attachment);
                if (v53)
                {
                  v54 = v53;
                  v55 = (void *)sub_1BDBFD6C8();
                  objc_msgSend(v54, sel_updateChangeCountWithReason_, v55);

                  v56 = objc_msgSend(v3, sel_attachment);
                  if (v56)
                  {
                    v57 = v56;
                    v58 = objc_msgSend(v56, sel_audioModel);

                    if (v58)
                    {
                      objc_msgSend(v58, sel_setMergeableDataDirty_, 1);

                    }
                    v59 = objc_msgSend(v3, sel_attachment);
                    if (v59)
                    {
                      v60 = v59;
                      v61 = objc_msgSend(v59, sel_managedObjectContext);

                      objc_msgSend(v61, sel_ic_save);
                      return;
                    }
                    goto LABEL_49;
                  }
LABEL_48:
                  __break(1u);
LABEL_49:
                  __break(1u);
                  goto LABEL_50;
                }
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
              v49 = (void *)sub_1BDBFDD64();
              objc_msgSend(v52, sel_setSummaryVersion_, v49);
              swift_unknownObjectRelease();
            }

            goto LABEL_36;
          }
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:)(Swift::OpaquePointer transcriptSegments, ICAttachment *subattachment)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  char **v21;
  char *v22;
  unint64_t v23;
  id v24;
  char ***v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char **v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, uint64_t);
  void *v39;
  _BYTE *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  os_log_t v49;
  void *v50;
  int v51;
  uint64_t v52;
  ICAttachment *v53;
  char *v54;
  char ***rawValue;
  uint64_t v56;
  id v57[2];

  v3 = v2;
  rawValue = (char ***)transcriptSegments._rawValue;
  v57[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v49 - v13;
  v15 = -[ICAttachment identifier](subattachment, sel_identifier);
  if (!v15)
    goto LABEL_17;
  v16 = v15;
  v53 = subattachment;
  v54 = v14;
  sub_1BDBFD6F8();

  sub_1BDBFCAE0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BDAC350C((uint64_t)v7, &qword_1ED23AD30);
LABEL_17:
    sub_1BDAC7614();
    swift_allocError();
    *v40 = 6;
    swift_willThrow();
    return;
  }
  v17 = (uint64_t)v54;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v7, v8);
  v18 = objc_msgSend(v3, sel_audioDocument);
  if (!v18)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v19 = v18;
  v20 = ICTTAudioDocument.fragment(for:)(v17);

  if (!v20)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    goto LABEL_17;
  }
  v52 = v8;
  v21 = &selRef_randomObject_;
  v22 = (char *)objc_msgSend(v20, sel_transcript);
  v23 = (unint64_t)objc_msgSend(v22, sel_count);

  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_14;
  }
  for (; v23; --v23)
  {
    v24 = objc_msgSend(v20, sel_transcript);
    objc_msgSend(v24, sel_removeObjectAtIndex_, 0);

  }
  v25 = rawValue;
  v21 = rawValue[2];
  if (v21)
  {
    v26 = *(_QWORD *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
    v27 = (uint64_t)v25 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    v28 = *(_QWORD *)(v26 + 72);
    swift_bridgeObjectRetain();
    v29 = v21;
    do
    {
      sub_1BDAC6F2C(v27, v3, v20);
      v27 += v28;
      v29 = (char **)((char *)v29 - 1);
    }
    while (v29);
    swift_bridgeObjectRelease();
    v30 = (void *)sub_1BDBFDD64();
    objc_msgSend(v20, sel_setTranscriptVersion_, v30);

  }
  v8 = v52;
  v22 = v54;
  if (qword_1EF50AFC0 != -1)
    goto LABEL_27;
LABEL_14:
  v31 = sub_1BDBFCE34();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EF50B660);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v22, v8);
  swift_bridgeObjectRetain();
  v32 = sub_1BDBFCE1C();
  v33 = sub_1BDBFDED8();
  v51 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v49 = v32;
    v35 = v34;
    v50 = (void *)swift_slowAlloc();
    v56 = (uint64_t)v21;
    v57[0] = v50;
    *(_DWORD *)v35 = 134218242;
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    rawValue = (char ***)(v35 + 14);
    sub_1BDAC7658();
    v36 = sub_1BDBFE760();
    v56 = sub_1BDAE53FC(v36, v37, (uint64_t *)v57);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v9 + 8);
    v38(v12, v8);
    v32 = v49;
    _os_log_impl(&dword_1BD918000, v49, (os_log_type_t)v51, "Wrote %ld transcript segments to fragment %s", (uint8_t *)v35, 0x16u);
    v39 = v50;
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v39, -1, -1);
    MEMORY[0x1C3B7B478](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v9 + 8);
    v38(v12, v8);
  }

  v41 = (void *)sub_1BDBFD6C8();
  -[ICCloudSyncingObject updateChangeCountWithReason:](v53, sel_updateChangeCountWithReason_, v41);

  v42 = objc_msgSend(v3, sel_attachment);
  if (!v42)
    goto LABEL_29;
  v43 = v42;
  v44 = objc_msgSend(v3, sel_audioDocument);
  if (!v44)
  {
LABEL_30:
    __break(1u);
    return;
  }
  v45 = v44;
  v46 = objc_msgSend(v44, sel_transcriptAsPlainText);

  if (!v46)
  {
    sub_1BDBFD6F8();
    v46 = (id)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v43, sel_setAdditionalIndexableText_, v46);

  v57[0] = 0;
  if ((objc_msgSend(v3, sel_saveAttachmentAndReturnError_, v57) & 1) != 0)
  {
    v47 = v57[0];
    v38(v54, v8);

  }
  else
  {
    v48 = v57[0];
    sub_1BDBFC87C();

    swift_willThrow();
    v38(v54, v8);
  }
}

void sub_1BDAC6F2C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  int *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;

  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a2, sel_audioDocument);
  if (v10)
  {
    v11 = v10;
    type metadata accessor for ICTTTranscriptSegment();
    v12 = objc_msgSend(v11, sel_document);

    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v14 = (void *)sub_1BDBFCAF8();
    v15 = objc_msgSend(v13, sel_initWithDocument_identity_, v12, v14);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v16 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
    v17 = (void *)sub_1BDBFD6C8();
    objc_msgSend(v15, sel_setText_, v17);

    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)(a1 + v16[6]));
    objc_msgSend(v15, sel_setTimestamp_, v18);

    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)(a1 + v16[7]));
    objc_msgSend(v15, sel_setDuration_, v19);

    if (*(_QWORD *)(a1 + v16[8] + 8))
    {
      v20 = (void *)sub_1BDBFD6C8();
      objc_msgSend(v15, sel_setSpeaker_, v20);

    }
    v21 = objc_msgSend(a3, sel_transcript);
    objc_msgSend(v21, sel_addObject_, v15);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.saveAttachment()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  _BYTE *v7;

  v1 = objc_msgSend(v0, sel_attachment);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_managedObjectContext);

    if (!v3)
    {
      sub_1BDAC7614();
      swift_allocError();
      *v7 = 6;
      swift_willThrow();
      return;
    }
    v4 = objc_msgSend(v0, sel_attachment);
    if (v4)
    {
      v5 = v4;
      v6 = (void *)sub_1BDBFD6C8();
      objc_msgSend(v5, sel_updateChangeCountWithReason_, v6);

      objc_msgSend(v0, sel_setMergeableDataDirty_, 1);
      objc_msgSend(v3, sel_ic_save);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t (*sub_1BDAC745C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BDAC7534(v6, a2, a3);
  return sub_1BDAC74B0;
}

uint64_t (*sub_1BDAC74B4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BDAC76A0(v6, a2, a3);
  return sub_1BDAC74B0;
}

void sub_1BDAC7508(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1BDAC7534(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1C3B79954](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1BDAC7714;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDAC75A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDAC75E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BDAC760C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BDB24F4C(a1, a2, v2);
}

unint64_t sub_1BDAC7614()
{
  unint64_t result;

  result = qword_1EF50BB30;
  if (!qword_1EF50BB30)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptionError, &type metadata for TranscriptionError);
    atomic_store(result, (unint64_t *)&qword_1EF50BB30);
  }
  return result;
}

unint64_t sub_1BDAC7658()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50D6A0;
  if (!qword_1EF50D6A0)
  {
    v1 = sub_1BDBFCB40();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CB09F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50D6A0);
  }
  return result;
}

void (*sub_1BDAC76A0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1C3B79954](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1BDAC770C;
  }
  __break(1u);
  return result;
}

void sub_1BDAC770C(id *a1)
{

}

double NSAttributedString.height(_:)(double a1)
{
  void *v1;
  CGRect v3;

  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 3, 0, a1, 1.79769313e308);
  return CGRectGetHeight(v3);
}

uint64_t ManagedEntityID.entityIdentifierString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ManagedEntityID.uriRepresentation.getter(a1, a2, (uint64_t)v6);
  v7 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BDAC350C((uint64_t)v6, &qword_1ED23B1B0);
    return 0;
  }
  else
  {
    v9 = sub_1BDBFC8A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

uint64_t sub_1BDAC7834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ManagedEntityID.init(url:)(a1, a2, a3);
}

uint64_t ManagedEntityID.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = sub_1BDBFC948();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
}

uint64_t ManagedEntityID.description.getter()
{
  return sub_1BDBFC354();
}

uint64_t ManagedEntityID.debugDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 24))(&v9);
  if (v9 != 2)
  {
    v2 = 1819112552;
    if ((v9 & 1) == 0)
      v2 = 0x6E7265646F6DLL;
    v3 = 0xE400000000000000;
    if ((v9 & 1) == 0)
      v3 = 0xE600000000000000;
    v9 = v2;
    v10 = v3;
    sub_1BDBFD74C();
  }
  v9 = sub_1BDBFC354();
  v10 = v4;
  sub_1BDBFD74C();
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_1BDBFE304();
  v5 = sub_1BDBFEB5C();
  v7 = v6;
  swift_bridgeObjectRelease();
  v9 = v5;
  v10 = v7;
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return v9;
}

uint64_t static ManagedEntityID.entityIdentifier(for:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  char *v83;
  uint64_t (**v84)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v85)(uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(unint64_t *, _QWORD);
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(unint64_t *__return_ptr, char *);
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  char *v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t (*v124)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v125;
  uint64_t v126;
  char *v127;
  unint64_t v128[2];
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t, uint64_t);
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  char v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;

  v158 = a4;
  v150 = sub_1BDBFD0E0();
  v155 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v134 = (char *)v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_1BDBFD080();
  v147 = *(_QWORD *)(v148 - 8);
  v10 = MEMORY[0x1E0C80A78](v148);
  v145 = (char *)v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v144 = (char *)v128 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v149 = (uint64_t)v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v154 = (char *)v128 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A8);
  MEMORY[0x1E0C80A78](v17);
  v143 = (char *)v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_1BDBFD08C();
  v157 = *(_QWORD *)(v146 - 8);
  MEMORY[0x1E0C80A78](v146);
  v156 = (char *)v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A0);
  MEMORY[0x1E0C80A78](v140);
  v141 = (char *)v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B198);
  MEMORY[0x1E0C80A78](v142);
  v153 = (char *)v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v22);
  v139 = (char *)v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BDBFD0F8();
  v160 = *(_QWORD *)(v24 - 8);
  v161 = v24;
  v25 = MEMORY[0x1E0C80A78](v24);
  v138 = (char *)v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v159 = (char *)v128 - v27;
  v133 = sub_1BDBFE0AC();
  v132 = *(_QWORD *)(v133 - 8);
  v28 = MEMORY[0x1E0C80A78](v133);
  v137 = (char *)v128 - v29;
  v30 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v28);
  v131 = (char *)v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1BDBFC948();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = MEMORY[0x1E0C80A78](v35);
  v135 = (char *)v128 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v136 = (char *)v128 - v39;
  v40 = a1;
  v169 = a1;
  v170 = a2;
  v41 = a2;
  v167 = 58;
  v168 = 0xE100000000000000;
  v42 = sub_1BDAC94FC();
  v152 = (void (*)(char *, uint64_t, uint64_t))sub_1BDAC9540();
  sub_1BDBFD65C();
  if ((v164 & 1) != 0)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(a5, 1, 1, a3);
  v128[1] = v42;
  v130 = v30;
  v129 = a5;
  v151 = a3;
  v128[0] = v163;
  swift_bridgeObjectRetain();
  v44 = sub_1BDBFD8B4();
  v46 = v45;
  v48 = v47;
  v50 = v49;
  swift_bridgeObjectRelease();
  MEMORY[0x1C3B78D30](v44, v46, v48, v50);
  swift_bridgeObjectRelease();
  v51 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  LODWORD(v44) = ICIsNotesURLScheme(v51);

  if (!(_DWORD)v44)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v130 + 56))(v129, 1, 1, v151);
  sub_1BDBFC930();
  v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
  v53 = v151;
  v54 = v41;
  v55 = v40;
  if (v52 == 1)
  {
    sub_1BDAC350C((uint64_t)v34, &qword_1ED23B1B0);
  }
  else
  {
    v56 = v136;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v136, v34, v35);
    v57 = v135;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v135, v56, v35);
    v58 = v137;
    (*(void (**)(char *, uint64_t))(v158 + 48))(v57, v53);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v56, v35);
    v59 = v130;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v58, 1, v53) != 1)
    {
      v112 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      v113 = v131;
      v112(v131, v58, v53);
      v114 = v129;
      v112(v129, v113, v53);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v114, 0, 1, v53);
    }
    (*(void (**)(char *, uint64_t))(v132 + 8))(v58, v133);
  }
  v167 = v55;
  v168 = v54;
  v165 = 63;
  v166 = 0xE100000000000000;
  sub_1BDBFD65C();
  v60 = v161;
  v61 = v153;
  v62 = v156;
  if ((v164 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v63 = sub_1BDAC876C(v128[0], v55, v54);
    v65 = v64;
    v67 = v66;
    v69 = v68;
    swift_bridgeObjectRelease();
    v70 = MEMORY[0x1C3B78D30](v63, v65, v67, v69);
    v72 = v71;
    v73 = v146;
    v74 = v157;
    goto LABEL_13;
  }
  result = v128[0];
  v74 = v157;
  if (v162 >> 14 >= v128[0] >> 14)
  {
    v75 = sub_1BDBFD8B4();
    v70 = MEMORY[0x1C3B78D30](v75);
    v72 = v76;
    v73 = v146;
LABEL_13:
    swift_bridgeObjectRelease();
    v169 = v70;
    v170 = v72;
    swift_bridgeObjectRetain();
    v77 = sub_1BDBFD86C();
    swift_bridgeObjectRelease();
    if ((v77 & 1) != 0)
      sub_1BDAC87B8(2);
    v78 = v159;
    sub_1BDBFD104();
    v79 = sub_1BDBFD098();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v139, 1, 1, v79);
    sub_1BDBFD0B0();
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v138, v78, v60);
    sub_1BDBFD074();
    v80 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    v81 = (uint64_t)v143;
    v80(v143, v62, v73);
    v82 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
    v83 = v141;
    v152 = v82;
    v82(v141, v81, v73);
    v84 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v83[*(int *)(v140 + 44)];
    *v84 = sub_1BDAC882C;
    v84[1] = 0;
    sub_1BDAC350C(v81, &qword_1ED23B1A8);
    v80(v62, v83, v73);
    v85 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0];
    sub_1BDAC31B0(&qword_1ED23B0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0], MEMORY[0x1E0DF00B0]);
    sub_1BDBFD8CC();
    v86 = &v61[*(int *)(v142 + 44)];
    *(_OWORD *)v86 = *(_OWORD *)v84;
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10);
    v88 = v147;
    v89 = v144;
    v90 = v148;
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v144, &v61[*(int *)(v87 + 36)], v148);
    sub_1BDAC31B0(&qword_1ED23B0F8, v85, MEMORY[0x1E0DF00B8]);
    v91 = (uint64_t)v61;
    v92 = v145;
    sub_1BDBFDDE8();
    sub_1BDAC31B0(&qword_1ED23AF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0090], MEMORY[0x1E0DF0098]);
    LOBYTE(v80) = sub_1BDBFD6BC();
    v93 = *(void (**)(char *, uint64_t))(v88 + 8);
    v94 = v92;
    v95 = v91;
    v93(v94, v90);
    v93(v89, v90);
    v96 = 1;
    v97 = v150;
    if ((v80 & 1) == 0)
    {
      v98 = (void (*)(unint64_t *, _QWORD))sub_1BDBFDE3C();
      (*(void (**)(char *))(v155 + 16))(v154);
      v98(&v162, 0);
      v99 = v156;
      v152(v156, v91, v73);
      sub_1BDBFDDF4();
      (*(void (**)(char *, uint64_t))(v157 + 8))(v99, v73);
      v96 = 0;
    }
    v100 = v154;
    v101 = v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v154, v96, 1, v97);
    v102 = *(void (**)(unint64_t *__return_ptr, char *))v86;
    v103 = (uint64_t)v100;
    v104 = v149;
    sub_1BDAC9584(v103, v149);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v104, 1, v97) == 1)
    {
      v105 = 0;
      v106 = 0;
    }
    else
    {
      v107 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v134, v104, v97);
      v102(&v162, v107);
      v105 = v162;
      v106 = v163;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v107, v97);
    }
    v108 = v151;
    v109 = v161;
    v110 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v158 + 8) + 32))(v151);
    if (v106)
    {
      if (v110 == v105 && v106 == v111)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v115 = sub_1BDBFE874();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v115 & 1) == 0)
          goto LABEL_31;
      }
      v116 = sub_1BDAC8B0C();
      if (v117)
      {
        v118 = v116;
        v119 = v117;
        swift_bridgeObjectRetain();
        v120 = sub_1BDBFE5D4();
        swift_bridgeObjectRelease();
        if (v120 > 1)
        {
          LOBYTE(v162) = 0;
          v127 = v129;
          (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v158 + 40))(&v162, v118, v119, v108);
          sub_1BDAC350C(v95, &qword_1ED23B198);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v109);
          v124 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56);
          v125 = v127;
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        v121 = sub_1BDAC8B0C();
        if (v122)
        {
          LOBYTE(v162) = v120;
          v123 = v129;
          (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v158 + 40))(&v162, v121, v122, v108);
          sub_1BDAC350C(v95, &qword_1ED23B198);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v109);
          v124 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56);
          v125 = v123;
LABEL_33:
          v126 = 0;
          return v124((uint64_t)v125, v126, 1, v108);
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_31:
    sub_1BDAC350C(v95, &qword_1ED23B198);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v109);
    v124 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56);
    v125 = v129;
    v126 = 1;
    return v124((uint64_t)v125, v126, 1, v108);
  }
  __break(1u);
  return result;
}

unint64_t sub_1BDAC876C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1BDBFD8B4();
  __break(1u);
  return result;
}

uint64_t sub_1BDAC87B8(uint64_t result)
{
  char v1;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      result = sub_1BDBFD7B8();
      if ((v1 & 1) == 0)
        return sub_1BDBFD770();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDAC882C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];

  v4 = sub_1BDBFD0E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1BDBFD0D4();
  v14[1] = v8;
  sub_1BDAC3548();
  v9 = sub_1BDBFE160();
  v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (!v11)
  {
    v9 = sub_1BDBFD0D4();
    v11 = v12;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

void sub_1BDAC8918()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  void (*v9)(void **__return_ptr, uint64_t *);
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  uint64_t v18;

  v1 = v0;
  v2 = *v0;
  if ((*v0 & 0x8000000000000000) != 0)
  {
    v10 = sub_1BDBFE250();
    if (v10)
    {
      v18 = v10;
      sub_1BDAC9634();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v7 = v17;
      swift_unknownObjectRelease();
      if (v17)
        goto LABEL_6;
    }
    return;
  }
  v4 = v0[3];
  v3 = v1[4];
  if (v3)
  {
    v5 = (v3 - 1) & v3;
    v6 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_4:
    v7 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v6);
    v8 = v7;
    goto LABEL_5;
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    return;
  }
  v12 = (unint64_t)(v1[2] + 64) >> 6;
  if (v11 >= v12)
  {
    v7 = 0;
    v5 = 0;
    goto LABEL_5;
  }
  v13 = v1[1];
  v14 = *(_QWORD *)(v13 + 8 * v11);
  if (v14)
  {
LABEL_13:
    v5 = (v14 - 1) & v14;
    v6 = __clz(__rbit64(v14)) + (v11 << 6);
    v4 = v11;
    goto LABEL_4;
  }
  v15 = v4 + 2;
  if (v4 + 2 >= v12)
    goto LABEL_29;
  v14 = *(_QWORD *)(v13 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v11 = v15;
    goto LABEL_13;
  }
  if (v4 + 3 >= v12)
    goto LABEL_30;
  v14 = *(_QWORD *)(v13 + 8 * (v4 + 3));
  if (v14)
  {
    v11 = v4 + 3;
    goto LABEL_13;
  }
  v15 = v4 + 4;
  if (v4 + 4 < v12)
  {
    v14 = *(_QWORD *)(v13 + 8 * v15);
    if (v14)
      goto LABEL_17;
    v11 = v4 + 5;
    if (v4 + 5 < v12)
    {
      v14 = *(_QWORD *)(v13 + 8 * v11);
      if (v14)
        goto LABEL_13;
      v11 = v12 - 1;
      v16 = v4 + 6;
      while (v12 != v16)
      {
        v14 = *(_QWORD *)(v13 + 8 * v16++);
        if (v14)
        {
          v11 = v16 - 1;
          goto LABEL_13;
        }
      }
LABEL_29:
      v7 = 0;
      v5 = 0;
      v4 = v11;
      goto LABEL_5;
    }
LABEL_30:
    v7 = 0;
    v5 = 0;
    v4 = v15;
    goto LABEL_5;
  }
  v7 = 0;
  v5 = 0;
  v4 += 3;
LABEL_5:
  v1[3] = v4;
  v1[4] = v5;
  if (v7)
  {
LABEL_6:
    v9 = (void (*)(void **__return_ptr, uint64_t *))v1[5];
    v18 = (uint64_t)v7;
    v9(&v17, &v18);

  }
}

uint64_t sub_1BDAC8B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, _QWORD);
  char *v27;
  uint64_t v28;
  void (*v29)(uint64_t *__return_ptr, char *);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = sub_1BDBFD0E0();
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  MEMORY[0x1E0C80A78](v1);
  v36 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BDBFD08C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0];
  v35 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BDBFD080();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v37 = (uint64_t)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v34 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v0 + *(int *)(v18 + 36), v6);
  sub_1BDAC31B0(&qword_1ED23B0F8, v4, MEMORY[0x1E0DF00B8]);
  v19 = v0;
  sub_1BDBFDDE8();
  sub_1BDAC31B0(&qword_1ED23AF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0090], MEMORY[0x1E0DF0098]);
  v20 = sub_1BDBFD6BC();
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v10, v6);
  v21(v12, v6);
  if ((v20 & 1) != 0)
  {
    v22 = 1;
    v24 = v38;
    v23 = v39;
  }
  else
  {
    v25 = v19;
    v26 = (void (*)(uint64_t *, _QWORD))sub_1BDBFDE3C();
    v24 = v38;
    v23 = v39;
    (*(void (**)(char *))(v38 + 16))(v17);
    v26(&v40, 0);
    v27 = v34;
    v28 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v25, v3);
    sub_1BDBFDDF4();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v3);
    v22 = 0;
    v19 = v25;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v17, v22, 1, v23);
  v29 = *(void (**)(uint64_t *__return_ptr, char *))(v19
                                                             + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B198)
                                                                      + 44));
  v30 = v37;
  sub_1BDAC9584((uint64_t)v17, v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v30, 1, v23) == 1)
    return 0;
  v32 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v36, v30, v23);
  v29(&v40, v32);
  v31 = v40;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v32, v23);
  return v31;
}

uint64_t ManagedEntityID.uriRepresentation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(unint64_t, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  __CFString *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  void (*v53)(uint64_t, char *, uint64_t);
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v65 = a3;
  v5 = sub_1BDBFC5B8();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BDBFD0F8();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v54 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v56 = (char *)&v52 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v52 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v52 - v20;
  v22 = sub_1BDBFD0E0();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v57 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v55 = (char *)&v52 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v64 = (char *)&v52 - v29;
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v52 - v30;
  (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 32))(a1);
  sub_1BDBFD0EC();
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v32(v21, 1, v22) == 1)
  {
    v19 = v21;
LABEL_5:
    sub_1BDAC350C((uint64_t)v19, (uint64_t *)&unk_1ED23B1C0);
    v35 = sub_1BDBFC948();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v65, 1, 1, v35);
  }
  v33 = v21;
  v34 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v34(v31, v33, v22);
  sub_1BDAC93C4(a1, a2, (uint64_t)v19);
  if (v32(v19, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v31, v22);
    goto LABEL_5;
  }
  v53 = (void (*)(uint64_t, char *, uint64_t))v34;
  v34(v64, v19, v22);
  v37 = sub_1BDBFD098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v9, 1, 1, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1D0);
  v38 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BDC16BA0;
  v40 = v39 + v38;
  v41 = *(void (**)(unint64_t, char *, uint64_t))(v23 + 16);
  v41(v40, v31, v22);
  v42 = v58;
  sub_1BDBFD0A4();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 24))(&v66, a1, a2);
  if (v66 == 2)
  {
    v43 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v56, 1, 1, v22);
    goto LABEL_13;
  }
  v43 = (uint64_t)v56;
  if ((v66 & 1) == 0)
  {
    v44 = 1;
    goto LABEL_12;
  }
  v45 = v54;
  sub_1BDBFD0EC();
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v45, 1, v22);
  if ((_DWORD)result != 1)
  {
    v53(v43, v45, v22);
    v44 = 0;
LABEL_12:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v43, v44, 1, v22);
    if (v32((char *)v43, 1, v22) != 1)
    {
      v47 = v55;
      v53((uint64_t)v55, (char *)v43, v22);
      v46 = v57;
      v41((unint64_t)v57, v47, v22);
      sub_1BDBFD0BC();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v47, v22);
      goto LABEL_15;
    }
LABEL_13:
    sub_1BDAC350C(v43, (uint64_t *)&unk_1ED23B1C0);
    v46 = v57;
LABEL_15:
    v48 = v64;
    v41((unint64_t)v46, v64, v22);
    sub_1BDBFD0BC();
    v49 = v61;
    sub_1BDBFC5AC();
    v50 = (id)ICNotesAppURLScheme();
    sub_1BDBFD6F8();

    sub_1BDBFC588();
    sub_1BDBFD0C8();
    sub_1BDBFC540();
    sub_1BDBFC510();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v63);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v60);
    v51 = *(void (**)(char *, uint64_t))(v23 + 8);
    v51(v48, v22);
    return ((uint64_t (*)(char *, uint64_t))v51)(v31, v22);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDAC93C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[2];

  v6 = sub_1BDBFC444();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v16[1] = v10;
  v11 = objc_msgSend((id)objc_opt_self(), sel_ic_uriIdentifierAllowedCharacterSet);
  sub_1BDBFC414();

  sub_1BDAC3548();
  sub_1BDBFE148();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  if (v13)
    return sub_1BDBFD0EC();
  v15 = sub_1BDBFD0E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
}

unint64_t sub_1BDAC94FC()
{
  unint64_t result;

  result = qword_1ED23B188;
  if (!qword_1ED23B188)
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED23B188);
  }
  return result;
}

unint64_t sub_1BDAC9540()
{
  unint64_t result;

  result = qword_1ED23B190;
  if (!qword_1ED23B190)
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED23B190);
  }
  return result;
}

uint64_t sub_1BDAC9584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of ManagedEntityID.contextType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ManagedEntityID.managedIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ManagedEntityID.init(contextType:managedIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ManagedEntityID.init(url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1BDAC95F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1BDBFC948();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

unint64_t sub_1BDAC9634()
{
  unint64_t result;

  result = qword_1EF50FED0;
  if (!qword_1EF50FED0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50FED0);
  }
  return result;
}

uint64_t (*AsyncSequence.uncheckedSendableMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v9 = *(_QWORD *)(a3 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a3;
  *((_QWORD *)v12 + 3) = a4;
  *((_QWORD *)v12 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v12[v11], (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  swift_retain();
  return sub_1BDAC9834;
}

uint64_t sub_1BDAC9758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1BDBFDC80();
}

uint64_t sub_1BDAC97DC()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1BDAC9834()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  return sub_1BDAC9758(v0 + ((v1 + 40) & ~v1));
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.base.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.base.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v1, a1, AssociatedTypeWitness);
}

void (*AsyncUncheckedSendableMapSequence.Iterator.base.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.transform.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  swift_retain();
  return v2;
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.transform.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 44));
  result = swift_release();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

void (*AsyncUncheckedSendableMapSequence.Iterator.transform.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.init(base:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  _QWORD *v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a7, a1, AssociatedTypeWitness);
  result = type metadata accessor for AsyncUncheckedSendableMapSequence.Iterator(0, a4, a5, a6);
  v16 = (_QWORD *)(a7 + *(int *)(result + 44));
  *v16 = a2;
  v16[1] = a3;
  return result;
}

uint64_t type metadata accessor for AsyncUncheckedSendableMapSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncUncheckedSendableMapSequence.Iterator);
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  _QWORD *v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[5] = AssociatedTypeWitness;
  v5 = sub_1BDBFE0AC();
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[10] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)swift_task_alloc();
  v3[11] = v6;
  *v6 = v3;
  v6[1] = sub_1BDAC9B70;
  return sub_1BDBFDB30();
}

uint64_t sub_1BDAC9B70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDAC9BD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (uint64_t *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = (_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v4) == 1)
  {
    v1 = (uint64_t *)(v0 + 56);
    v5 = (_QWORD *)(v0 + 48);
    v6 = 1;
    v7 = v3;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 24);
    v9 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v3, v4);
    (*(void (**)(uint64_t))(v9 + *(int *)(v10 + 44)))(v8);
    v6 = 0;
    v7 = *(_QWORD *)(v0 + 80);
  }
  v11 = *v1;
  v12 = *(_QWORD *)(v0 + 16);
  v13 = *(_QWORD *)(v0 + 24);
  (*(void (**)(uint64_t, _QWORD))(v11 + 8))(v7, *v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v13 + 24) - 8) + 56))(v12, v6, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAC9CF0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDAC9D30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDAC9D90;
  return AsyncUncheckedSendableMapSequence.Iterator.next()(a1, a2);
}

uint64_t sub_1BDAC9D90()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDAC9DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1BDAC9EB0;
  return sub_1BDBFDB48();
}

uint64_t sub_1BDAC9EB0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  swift_task_dealloc();
  return ((uint64_t (*)(void))v3[1])();
}

uint64_t AsyncUncheckedSendableMapSequence.makeBaseIterator.getter(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t AsyncUncheckedSendableMapSequence.makeBaseIterator.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

void (*AsyncUncheckedSendableMapSequence.makeBaseIterator.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AsyncUncheckedSendableMapSequence.transform.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  return a3;
}

uint64_t AsyncUncheckedSendableMapSequence.transform.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

void (*AsyncUncheckedSendableMapSequence.transform.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AsyncUncheckedSendableMapSequence.makeAsyncIterator()@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v17 = (char *)&v19 - v16;
  a1(v15);
  AsyncUncheckedSendableMapSequence.Iterator.init(base:transform:)((uint64_t)v17, a2, a3, a4, a5, a6, a7);
  return swift_retain();
}

uint64_t sub_1BDACA0E4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_1BDACA174()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t sub_1BDACA184@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  AsyncUncheckedSendableMapSequence.makeAsyncIterator()(*(void (**)(uint64_t))v2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1[2], a1[3], a1[4], a2);
  swift_release();
  return swift_release();
}

uint64_t sub_1BDACA1C8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BDACA1D0()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1BDACA1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1BDACA240(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *sub_1BDACA2A8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t _s7SummaryV12ParticipantsVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7SummaryV12ParticipantsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AsyncUncheckedSendableMapSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncUncheckedSendableMapSequence);
}

uint64_t sub_1BDACA380()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BDACA40C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1BDACA4DC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_1BDACA544(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_1BDACA5CC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BDACA660(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BDACA6E4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BDACA770(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_1BDACA8BC(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0u;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1BDACA9D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BDACAA50);
}

void sub_1BDACA9DC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1BDACA9E4);
  JUMPOUT(0x1BDACAA50);
}

void sub_1BDACAA28()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BDACAA50);
}

void sub_1BDACAA30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BDACAA50);
}

uint64_t sub_1BDACAA38@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x1BDACAA50);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x1BDACAA4CLL);
    JUMPOUT(0x1BDACAA44);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1BDACAA68()
{
  google::protobuf::io::ZeroCopyOutputStream *v0;

  v0 = (google::protobuf::io::ZeroCopyOutputStream *)sub_1BDBFDAAC();
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v0);
}

BOOL static ICObjectReferences.Types.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ICObjectReferences.Types.hash(into:)()
{
  return sub_1BDBFEA18();
}

uint64_t ICObjectReferences.Types.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDACAB2C()
{
  sub_1BDBFEA0C();
  ICObjectReferences.Types.hash(into:)();
  return sub_1BDBFEA30();
}

void ICObjectReferences.type.getter(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1 >> 62;
}

void ICObjectReferences.identifier.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDACABAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  sub_1BDBFDAAC();
  v4 = swift_projectBox();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v2, v4, v3);
}

void ICObjectReferences.title.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDACAC3C()
{
  uint64_t v0;
  uint64_t TupleTypeMetadata3;
  _QWORD *v2;
  uint64_t v3;

  sub_1BDBFDAAC();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v2 = (_QWORD *)(swift_projectBox() + *(int *)(TupleTypeMetadata3 + 48));
  v3 = v2[1];
  *(_QWORD *)(v0 - 80) = *v2;
  *(_QWORD *)(v0 - 72) = v3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510150);
  swift_dynamicCast();
  return *(_QWORD *)(v0 - 64);
}

uint64_t ICObjectReferences.children.getter()
{
  sub_1BDACC9A4();
  return swift_bridgeObjectRetain();
}

uint64_t ICObjectReferences.recursiveIdentifiers.getter(uint64_t a1)
{
  google::protobuf::io::ZeroCopyOutputStream *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BDACC958(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 16));
  swift_allocObject();
  sub_1BDBFDA04();
  ICObjectReferences.identifier.getter();
  v1 = (google::protobuf::io::ZeroCopyOutputStream *)sub_1BDBFDAAC();
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v1);
  sub_1BDACC9A4();
  v2 = sub_1BDBFDAAC();
  v3 = sub_1BDBFDD4C();
  swift_bridgeObjectRetain();
  v4 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v2);
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEB3D0], v3);
  sub_1BDBFD920();
  swift_bridgeObjectRelease();
  sub_1BDBFDA28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MEMORY[0x1C3B7B388](v4, v1);
  return sub_1BDBFDD58();
}

uint64_t ICObjectReferences.recursiveNoteCount.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *v0;
  if ((unint64_t)*v0 >> 62 != 2)
    goto LABEL_5;
  v7 = *v0;
  sub_1BDACC9A4();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BDBFDAAC();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v3);
  sub_1BDBFD914();
  swift_bridgeObjectRelease();
  v1 = v7;
  result = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_5:
    v8 = v1;
    sub_1BDACC9A4();
    MEMORY[0x1E0C80A78](v5);
    v6 = sub_1BDBFDAAC();
    swift_bridgeObjectRetain();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v6);
    sub_1BDBFD914();
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t ICObjectReferences.recursiveAttachmentCount.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *v0;
  if ((unint64_t)*v0 >> 62 != 3)
    goto LABEL_5;
  v7 = *v0;
  sub_1BDACC9A4();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BDBFDAAC();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v3);
  sub_1BDBFD914();
  swift_bridgeObjectRelease();
  v1 = v7;
  result = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_5:
    v8 = v1;
    sub_1BDACC9A4();
    MEMORY[0x1E0C80A78](v5);
    v6 = sub_1BDBFDAAC();
    swift_bridgeObjectRetain();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v6);
    sub_1BDBFD914();
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1BDACB300@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(uint64_t)@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = *a1;
  v8 = type metadata accessor for ICObjectReferences(0, a2, a3, a3);
  result = a4(v8);
  if (__OFADD__(v7, result))
    __break(1u);
  else
    *a5 = v7 + result;
  return result;
}

uint64_t ICObjectReferences.recursiveChildren.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  google::protobuf::io::ZeroCopyOutputStream *v3;
  uint64_t v4;

  v1 = *v0;
  sub_1BDBFE76C();
  swift_allocObject();
  sub_1BDBFDA04();
  *v2 = v1;
  v3 = (google::protobuf::io::ZeroCopyOutputStream *)sub_1BDBFDAAC();
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v3);
  sub_1BDACC9A4();
  swift_retain();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v3);
  sub_1BDBFD920();
  swift_bridgeObjectRelease();
  v4 = sub_1BDBFDA28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t ICObjectReferences.filterChildren(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v10 = *v4;
  sub_1BDACC9A4();
  v21 = v11;
  v12 = sub_1BDBFDAAC();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF60], v12);
  result = sub_1BDBFE43C();
  if (!v5)
  {
    v19 = a4;
    v21 = result;
    MEMORY[0x1E0C80A78](result);
    v20 = *(_OWORD *)(a3 + 16);
    v16[1] = v20;
    v17 = a1;
    v18 = a2;
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
    v15 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v12);
    sub_1BDACB9A8((void (*)(char *, char *))sub_1BDACCC20, (uint64_t)v16, v12, a3, v14, v15, MEMORY[0x1E0DEDB38], (uint64_t)&v22);
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BDACB924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t result;

  v10 = type metadata accessor for ICObjectReferences(0, a4, a5, a4);
  result = ICObjectReferences.filterChildren(_:)(a2, a3, v10);
  if (v6)
    *a6 = v6;
  return result;
}

uint64_t sub_1BDACB9A8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_1BDBFDDD0();
  if (!v20)
    return sub_1BDBFDA40();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_1BDBFE49C();
  v34 = sub_1BDBFE4A8();
  sub_1BDBFE460();
  v37 = v8;
  result = sub_1BDBFDDC4();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_1BDBFDE3C();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_1BDBFE490();
      result = sub_1BDBFDDF4();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ICObjectReferences.mapIdentifiers<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  char *v29;
  _QWORD v30[11];
  uint64_t v31;
  char v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v30[5] = a6;
  v12 = *(_QWORD *)(a3 + 16);
  v30[7] = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v30[4] = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v30[9] = (char *)v30 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v30[8] = (char *)v30 - v18;
  MEMORY[0x1E0C80A78](v17);
  v19 = *v6;
  v39 = *v6;
  sub_1BDACC9A4();
  v39 = v20;
  v33 = v12;
  v34 = a4;
  v35 = *(_QWORD *)(a3 + 24);
  v36 = a5;
  v30[10] = a1;
  v37 = a1;
  v38 = a2;
  v30[6] = a2;
  v21 = sub_1BDBFDAAC();
  v23 = type metadata accessor for ICObjectReferences(0, a4, a5, v22);
  swift_bridgeObjectRetain();
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  v25 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v21);
  v26 = v31;
  v27 = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDACCC40, (uint64_t)v32, v21, v23, v24, v25, MEMORY[0x1E0DEDB38], (uint64_t)&v40);
  result = swift_bridgeObjectRelease();
  if (!v26)
  {
    v30[2] = v23;
    v30[3] = a4;
    v29 = (char *)&loc_1BDACBE7C + 4 * byte_1BDC17A9C[v19 >> 62];
    v31 = v27;
    v30[1] = 0;
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BDACC464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t result;

  v14 = type metadata accessor for ICObjectReferences(0, a4, a6, a4);
  result = ICObjectReferences.mapIdentifiers<A>(_:)(a2, a3, v14, a5, a7);
  if (v8)
    *a8 = v8;
  return result;
}

uint64_t ICObjectReferences.leastCommonFolderOrNote.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = *v2;
  if (*v2 < 0)
  {
    *a2 = v4;
    return swift_retain();
  }
  else
  {
    v10 = *v2;
    sub_1BDACC9A4();
    v6 = sub_1BDBFDAAC();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v6);
    sub_1BDBFDE18();
    if ((~v10 & 0xF000000000000007) != 0)
    {
      sub_1BDACC9A4();
      v7 = swift_bridgeObjectRetain();
      v8 = MEMORY[0x1C3B7903C](v7, a1);
      swift_bridgeObjectRelease();
      if (v8 == 1)
      {
        ICObjectReferences.leastCommonFolderOrNote.getter(a1);
        return sub_1BDACCC70(v10);
      }
      sub_1BDACCC70(v10);
    }
    *a2 = v4;
    return swift_retain();
  }
}

uint64_t ICObjectReferences.hash(into:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[2];

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *v2;
  ICObjectReferences.identifier.getter();
  sub_1BDBFD620();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t static ICObjectReferences.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v18 - v9;
  v12 = *v11;
  v19 = *v8;
  type metadata accessor for ICObjectReferences(0, v13, v14, v14);
  ICObjectReferences.identifier.getter();
  v19 = v12;
  ICObjectReferences.identifier.getter();
  v15 = sub_1BDBFD6BC();
  v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v7, a3);
  v16(v10, a3);
  return v15 & 1;
}

uint64_t ICObjectReferences.hashValue.getter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD v4[10];

  v4[9] = *v1;
  sub_1BDBFEA0C();
  ICObjectReferences.hash(into:)((uint64_t)v4, a1);
  return sub_1BDBFEA30();
}

uint64_t sub_1BDACC818(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_1BDBFEA0C();
  ICObjectReferences.hash(into:)((uint64_t)v4, a2);
  return sub_1BDBFEA30();
}

uint64_t sub_1BDACC858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ICObjectReferences.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

BOOL static ICObjectReferences.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for ICObjectReferences(0, a3, a4, a4);
  ICObjectReferences.title.getter();
  if (!v4)
    return 1;
  ICObjectReferences.title.getter();
  if (v5)
  {
    sub_1BDAC3548();
    v6 = sub_1BDBFE16C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6 == -1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

BOOL sub_1BDACC940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ICObjectReferences.< infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BDACC958(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAF0);
  else
    return sub_1BDBFE76C();
}

void sub_1BDACC9A4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDACC9DC()
{
  uint64_t TupleTypeMetadata3;

  sub_1BDBFDAAC();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  return *(_QWORD *)(swift_projectBox() + *(int *)(TupleTypeMetadata3 + 64));
}

uint64_t sub_1BDACCB50@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  return sub_1BDACCBC8((uint64_t (*)(uint64_t))ICObjectReferences.recursiveIdentifiers.getter, a1, a2);
}

uint64_t sub_1BDACCB6C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BDACB300(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t (*)(uint64_t))ICObjectReferences.recursiveNoteCount.getter, a2);
}

uint64_t sub_1BDACCB8C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BDACB300(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t (*)(uint64_t))ICObjectReferences.recursiveAttachmentCount.getter, a2);
}

uint64_t sub_1BDACCBAC@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  return sub_1BDACCBC8((uint64_t (*)(uint64_t))ICObjectReferences.recursiveChildren.getter, a1, a2);
}

uint64_t sub_1BDACCBC8@<X0>(uint64_t (*a1)(uint64_t)@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;

  v6 = type metadata accessor for ICObjectReferences(0, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2);
  result = a1(v6);
  *a3 = result;
  return result;
}

uint64_t sub_1BDACCC20(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_1BDACB924(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

uint64_t sub_1BDACCC40(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_1BDACC464(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t type metadata accessor for ICObjectReferences(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ICObjectReferences);
}

uint64_t sub_1BDACCC70(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

void sub_1BDACCC88()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDACCC98()
{
  JUMPOUT(0x1C3B7B388);
}

_QWORD *_s9SelectionOwCP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s9SelectionOwxx()
{
  return swift_release();
}

_QWORD *_s9SelectionOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *_s9SelectionOwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s9SelectionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 125);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s9SelectionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BDACCE10(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_1BDACCE1C(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1BDACCE2C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PersistedActivityEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1BDACCEDC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BDACCF28 + 4 * byte_1BDC17AA9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BDACCF5C + 4 * byte_1BDC17AA4[v4]))();
}

uint64_t sub_1BDACCF5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDACCF64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDACCF6CLL);
  return result;
}

uint64_t sub_1BDACCF78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDACCF80);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BDACCF84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDACCF8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDACCF98(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1BDACCFA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t type metadata accessor for ICObjectReferences.Types(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ICObjectReferences.Types);
}

uint64_t sub_1BDACCFB4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BDACCB6C(a1, a2);
}

uint64_t sub_1BDACCFC8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BDACCB8C(a1, a2);
}

void static NSObject<>.ic_fetchRequest()()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  v1 = objc_msgSend(v0, sel_name);

  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A960);
    sub_1BDBFD6F8();

    v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    sub_1BDACD094();
  }
  else
  {
    __break(1u);
  }
}

id sub_1BDACD094()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

Swift::Void __swiftcall ICAttachment.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v3);
  v7 = &v15[-v6 - 8];
  if (objc_msgSend(v1, sel_attachmentType) == 12)
  {
    sub_1BDACD408((uint64_t (*)(void))sub_1BDAC3718, (uint64_t (*)(void))sub_1BDACDBFC, 0x5A, 0x58, v15);
    sub_1BDAC247C(v15[0], v16, v17, (uint64_t)v7);
    v8 = sub_1BDBFC948();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1BDACDBAC((uint64_t)v7);
    }
    else
    {
      sub_1BDBFC8A0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v1, sel_title);
    if (v12)
    {
LABEL_11:
      v13 = v12;
      sub_1BDBFD6F8();

    }
  }
  else
  {
    sub_1BDACD408((uint64_t (*)(void))sub_1BDAC3718, sub_1BDAC3730, 0x1E, 0x1C, v15);
    sub_1BDAC1EA0(v15[0], v16, v17, (uint64_t)v5);
    v10 = sub_1BDBFC948();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
    {
      sub_1BDACDBAC((uint64_t)v5);
    }
    else
    {
      sub_1BDBFC8A0();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
    }
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v1, sel_title);
    if (v12)
      goto LABEL_11;
  }
  sub_1BDAC2F74(MEMORY[0x1E0DEE9D8]);
  sub_1BDBFE034();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1BDACD408@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, NSObject *a3@<X2>, NSObject *a4@<X3>, _BYTE *a5@<X8>)
{
  void *v5;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void (*isa)(char *);
  uint64_t v21;
  Class v22;
  os_log_type_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  os_log_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  os_log_type_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t result;
  _BYTE *v47;
  _QWORD v48[2];
  int v49;
  os_log_t v50;
  uint64_t v51;
  void (*v52)(char *);
  os_log_t v53;
  os_log_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t (*v57)(void);
  int v58;
  _BYTE *v59;
  os_log_t v60;
  unint64_t v61;
  uint64_t v62;

  v53 = a4;
  v54 = a3;
  v57 = a2;
  v59 = a5;
  v7 = sub_1BDBFCE34();
  v8 = *(NSObject **)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = ((char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v48 - v12;
  v14 = objc_msgSend(v5, sel_objectID);
  if (!objc_msgSend(v14, sel_ic_isModernType))
    objc_msgSend(v14, sel_ic_isLegacyType);

  v55 = v48;
  MEMORY[0x1E0C80A78](v15);
  v58 = v16;
  LOBYTE(v48[-2]) = v16;
  v17 = qword_1ED23B180;
  v18 = v5;
  if (v17 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED23B160);
  isa = (void (*)(char *))v8[2].isa;
  v56 = v19;
  isa(v13);
  v21 = swift_allocObject();
  *(_BYTE *)(v21 + 16) = 2;
  if ((sub_1BDBB6748(v21, a1) & 1) != 0)
  {

    v22 = v8[1].isa;
    ((void (*)(char *, uint64_t))v22)(v13, v7);
    swift_release();
  }
  else
  {
    v52 = isa;
    v23 = sub_1BDBFDEF0();
    v24 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v24, v23))
    {
      v25 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v62 = v51;
      *(_DWORD *)v25 = 136315650;
      v50 = v24;
      v26 = sub_1BDBFE34C();
      v60 = (os_log_t)sub_1BDAE53FC(v26, v27, &v62);
      v49 = v23;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2048;
      v60 = v53;
      sub_1BDBFE100();
      *(_WORD *)(v25 + 22) = 2080;
      v48[1] = v25 + 24;
      v60 = 0;
      v61 = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v28 = objc_msgSend(v18, sel_ic_loggingDescription);
      sub_1BDBFD6F8();
      v53 = v8;

      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v60 = (os_log_t)sub_1BDAE53FC((uint64_t)v60, v61, &v62);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      v29 = v50;
      _os_log_impl(&dword_1BD918000, v50, (os_log_type_t)v49, "Failed assertion at %s:%lu: %s", (uint8_t *)v25, 0x20u);
      v30 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v30, -1, -1);
      MEMORY[0x1C3B7B478](v25, -1, -1);

      v22 = v53[1].isa;
    }
    else
    {

      v22 = v8[1].isa;
    }
    ((void (*)(char *, uint64_t))v22)(v13, v7);
    swift_release();
    isa = v52;
  }
  v31 = objc_msgSend(v18, sel_identifierURIPathComponent);
  if (v31)
  {
    v32 = v31;
    v33 = sub_1BDBFD6F8();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0xE000000000000000;
  }
  v55 = v48;
  MEMORY[0x1E0C80A78](v31);
  v48[-2] = v33;
  v48[-1] = v35;
  ((void (*)(NSObject *, uint64_t, uint64_t))isa)(v11, v56, v7);
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = 2;
  v37 = v18;
  if ((sub_1BDBB6748(v36, v57) & 1) != 0)
  {

LABEL_19:
    ((void (*)(NSObject *, uint64_t))v22)(v11, v7);
    goto LABEL_20;
  }
  v38 = sub_1BDBFDEF0();
  v39 = sub_1BDBFCE1C();
  if (!os_log_type_enabled(v39, v38))
  {

    goto LABEL_19;
  }
  v40 = swift_slowAlloc();
  v56 = swift_slowAlloc();
  v62 = v56;
  *(_DWORD *)v40 = 136315650;
  v53 = v39;
  v41 = sub_1BDBFE34C();
  v57 = (uint64_t (*)(void))v22;
  v60 = (os_log_t)sub_1BDAE53FC(v41, v42, &v62);
  LODWORD(v52) = v38;
  sub_1BDBFE100();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 12) = 2048;
  v60 = v54;
  sub_1BDBFE100();
  *(_WORD *)(v40 + 22) = 2080;
  v51 = v40 + 24;
  v60 = 0;
  v61 = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  v60 = (os_log_t)0xD00000000000002CLL;
  v61 = 0x80000001BDC34E70;
  v43 = objc_msgSend(v37, sel_ic_loggingDescription);
  sub_1BDBFD6F8();
  v54 = v11;

  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v60 = (os_log_t)sub_1BDAE53FC((uint64_t)v60, v61, &v62);
  sub_1BDBFE100();
  swift_bridgeObjectRelease();
  v44 = v53;
  _os_log_impl(&dword_1BD918000, v53, (os_log_type_t)v52, "Failed assertion at %s:%lu: %s", (uint8_t *)v40, 0x20u);
  v45 = v56;
  swift_arrayDestroy();
  MEMORY[0x1C3B7B478](v45, -1, -1);
  MEMORY[0x1C3B7B478](v40, -1, -1);

  ((void (*)(os_log_t, uint64_t))v57)(v54, v7);
LABEL_20:
  result = swift_release();
  v47 = v59;
  *v59 = v58;
  *((_QWORD *)v47 + 1) = v33;
  *((_QWORD *)v47 + 2) = v35;
  return result;
}

uint64_t sub_1BDACDBAC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDACDBEC()
{
  return swift_deallocObject();
}

BOOL sub_1BDACDBFC()
{
  uint64_t v0;

  return sub_1BDAE4FC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t Result.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 16));
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v9 + 32))(a2, v6, *(_QWORD *)(a1 + 16));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
}

uint64_t Result.error.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v9 + 32))(a2, v6, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
}

id ICTTTextEdit.init(timestamp:replicaID:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDACDF20(a1, (uint64_t)v10);
  v11 = sub_1BDBFCAC8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    v13 = (void *)sub_1BDBFCA74();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v15 = (void *)sub_1BDBFCAF8();
  v16 = objc_msgSend(v14, sel_initWithTimestamp_replicaID_range_, v13, v15, a3, a4);

  v17 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  sub_1BDACDF68(a1);
  return v16;
}

uint64_t sub_1BDACDF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDACDF68(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static TagID.uriTypeName.getter()
{
  return 6775156;
}

uint64_t TagID.displayText.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TagID.displayText.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

void (*TagID.displayText.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

NotesShared::TagID __swiftcall TagID.init(displayText:)(NotesShared::TagID displayText)
{
  NotesShared::TagID *v1;

  *v1 = displayText;
  return displayText;
}

uint64_t TagID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t static TagID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BDBFE874();
}

uint64_t TagID.hashValue.getter()
{
  sub_1BDBFEA0C();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDACE0FC()
{
  return 6775156;
}

uint64_t sub_1BDACE10C()
{
  sub_1BDBFEA0C();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDACE164()
{
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDACE1A8()
{
  sub_1BDBFEA0C();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDACE1FC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BDBFE874();
}

uint64_t _s11NotesShared5TagIDV11descriptionSSvg_0()
{
  uint64_t v1;

  v1 = sub_1BDBFD6F8();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static TagID.entityIdentifier(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  char *v33;
  uint64_t v34;
  void *v35;
  char v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(_BYTE *, _QWORD);
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  char *v62;
  char v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char v67;
  uint64_t *v68;
  void (*v69)(_BYTE *, _QWORD);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *);
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  char *v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE v99[40];

  v97 = a1;
  v98 = a2;
  v96 = a3;
  v3 = sub_1BDBFD0E0();
  v85 = *(void (**)(char *, uint64_t))(v3 - 8);
  v86 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v83 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v84 = (char *)&v76 - v6;
  v93 = sub_1BDBFD080();
  v90 = *(_QWORD *)(v93 - 8);
  v7 = MEMORY[0x1E0C80A78](v93);
  v92 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v91 = (char *)&v76 - v9;
  v95 = sub_1BDBFD08C();
  v88 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v94 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10);
  v11 = MEMORY[0x1E0C80A78](v89);
  v87 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v76 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (void (*)(char *, char *, uint64_t))((char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_1BDBFD0F8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (void (*)(char *))((char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v76 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B150);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1BDBFC5B8();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC594();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) != 1)
  {
    v80 = v22;
    v81 = v17;
    v82 = v24;
    v97 = v19;
    v98 = v18;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
    sub_1BDBFC57C();
    v33 = v31;
    if (!v34
      || (v35 = (void *)sub_1BDBFD6C8(),
          swift_bridgeObjectRelease(),
          v36 = ICIsNotesURLScheme(v35),
          v35,
          (v36 & 1) == 0))
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v33, v28);
      goto LABEL_13;
    }
    v78 = v29;
    v79 = v28;
    v77 = v33;
    sub_1BDBFC534();
    v37 = v82;
    sub_1BDBFD104();
    v38 = sub_1BDBFD098();
    (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v81, 1, 1, v38);
    sub_1BDBFD0B0();
    (*(void (**)(void (*)(char *), char *, uint64_t))(v97 + 16))(v80, v37, v98);
    v39 = v94;
    sub_1BDBFD074();
    v41 = v87;
    v40 = v88;
    v42 = v95;
    v81 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
    v81(v87, v39, v95);
    v43 = sub_1BDAC31B0(&qword_1ED23B0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0], MEMORY[0x1E0DF00B8]);
    v44 = v91;
    sub_1BDBFDDC4();
    v88 = *(_QWORD *)(v40 + 8);
    ((void (*)(char *, uint64_t))v88)(v39, v42);
    v45 = v89;
    v46 = v90;
    v47 = v93;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(&v41[*(int *)(v89 + 36)], v44, v93);
    v48 = (uint64_t)v41;
    v49 = (uint64_t)v14;
    sub_1BDACEA88(v48, (uint64_t)v14);
    v50 = &v14[*(int *)(v45 + 36)];
    v89 = *(_QWORD *)(v46 + 16);
    ((void (*)(char *, char *, uint64_t))v89)(v44, v50, v47);
    v51 = v92;
    sub_1BDBFDDE8();
    v87 = (char *)sub_1BDAC31B0(&qword_1ED23AF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0090], MEMORY[0x1E0DF0098]);
    LOBYTE(v45) = sub_1BDBFD6BC();
    v52 = *(void (**)(char *, uint64_t))(v46 + 8);
    v52(v51, v47);
    v52(v44, v47);
    if ((v45 & 1) == 0)
    {
      v53 = (void (*)(_BYTE *, _QWORD))sub_1BDBFDE3C();
      v55 = v84;
      v54 = v85;
      v56 = v86;
      v80 = (void (*)(char *))*((_QWORD *)v85 + 2);
      v80(v84);
      v53(v99, 0);
      v81(v39, (char *)v49, v42);
      v90 = v43;
      sub_1BDBFDDF4();
      ((void (*)(char *, uint64_t))v88)(v39, v42);
      v57 = sub_1BDBFD0D4();
      v59 = v58;
      v60 = (void (*)(char *, uint64_t))*((_QWORD *)v54 + 1);
      v60(v55, v56);
      v85 = v60;
      if (v57 == 6775156 && v59 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        v62 = v94;
        v61 = v95;
        goto LABEL_11;
      }
      v63 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      v62 = v94;
      v61 = v95;
      if ((v63 & 1) != 0)
      {
LABEL_11:
        v64 = v91;
        v65 = v93;
        ((void (*)(char *, char *, uint64_t))v89)(v91, v50, v93);
        v66 = v92;
        sub_1BDBFDDE8();
        v67 = sub_1BDBFD6BC();
        v52(v66, v65);
        v52(v64, v65);
        if ((v67 & 1) == 0)
        {
          v69 = (void (*)(_BYTE *, _QWORD))sub_1BDBFDE3C();
          v70 = v83;
          v71 = v86;
          v80(v83);
          v69(v99, 0);
          v81(v62, (char *)v49, v61);
          sub_1BDBFDDF4();
          ((void (*)(char *, uint64_t))v88)(v62, v61);
          v72 = sub_1BDBFD0D4();
          v74 = v73;
          sub_1BDAC350C(v49, &qword_1ED23AF10);
          (*(void (**)(char *, uint64_t))(v97 + 8))(v82, v98);
          (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
          result = ((uint64_t (*)(char *, uint64_t))v85)(v70, v71);
          v75 = v96;
          *v96 = v72;
          v75[1] = v74;
          return result;
        }
      }
    }
    sub_1BDAC350C(v49, &qword_1ED23AF10);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v82, v98);
    result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v77, v79);
    goto LABEL_13;
  }
  result = sub_1BDAC350C((uint64_t)v27, &qword_1ED23B150);
LABEL_13:
  v68 = v96;
  *v96 = 0;
  v68[1] = 0;
  return result;
}

uint64_t sub_1BDACEA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

NotesShared::TagID __swiftcall TagID.init(_:)(ICHashtag *a1)
{
  uint64_t *v1;
  uint64_t *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NotesShared::TagID result;

  v3 = v1;
  v4 = -[ICHashtag displayText](a1, sel_displayText);
  if (v4)
  {
    v6 = v4;
    v7 = sub_1BDBFD6F8();
    v9 = v8;

    *v3 = v7;
    v3[1] = v9;
  }
  else
  {
    __break(1u);
  }
  result.displayText._object = v5;
  result.displayText._countAndFlagsBits = (uint64_t)v4;
  return result;
}

unint64_t sub_1BDACEB3C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BDACEB70();
  a1[2] = sub_1BDACEBB4();
  result = sub_1BDACEBF8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BDACEB70()
{
  unint64_t result;

  result = qword_1EF50B790;
  if (!qword_1EF50B790)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TagID, &type metadata for TagID);
    atomic_store(result, (unint64_t *)&qword_1EF50B790);
  }
  return result;
}

unint64_t sub_1BDACEBB4()
{
  unint64_t result;

  result = qword_1EF50B798;
  if (!qword_1EF50B798)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TagID, &type metadata for TagID);
    atomic_store(result, (unint64_t *)&qword_1EF50B798);
  }
  return result;
}

unint64_t sub_1BDACEBF8()
{
  unint64_t result;

  result = qword_1EF50B7A0;
  if (!qword_1EF50B7A0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TagID, &type metadata for TagID);
    atomic_store(result, (unint64_t *)&qword_1EF50B7A0);
  }
  return result;
}

unint64_t sub_1BDACEC40()
{
  unint64_t result;

  result = qword_1EF50B7A8[0];
  if (!qword_1EF50B7A8[0])
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TagID, &type metadata for TagID);
    atomic_store(result, qword_1EF50B7A8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TagID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TagID()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for TagID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for TagID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TagID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TagID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TagID()
{
  return &type metadata for TagID;
}

Swift::Void __swiftcall ICNote.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  _BYTE v10[8];
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BDACEFA4((uint64_t (*)(void))sub_1BDACF768, sub_1BDACF764, (void (*)(char *, uint64_t, uint64_t))v10);
  sub_1BDAC246C(v10[0], v11, v12, (uint64_t)v4);
  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BDACDBAC((uint64_t)v4);
  }
  else
  {
    sub_1BDBFC8A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v1, sel_title);
  if (v7)
  {
    v8 = v7;
    sub_1BDBFD6F8();

  }
  sub_1BDAC2F74(MEMORY[0x1E0DEE9D8]);
  sub_1BDBFE034();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1BDACEF7C@<X0>(void (*a1)(char *, uint64_t, uint64_t)@<X8>)
{
  return sub_1BDACEFA4((uint64_t (*)(void))sub_1BDACF768, sub_1BDACF764, a1);
}

uint64_t sub_1BDACEF90@<X0>(void (*a1)(char *, uint64_t, uint64_t)@<X8>)
{
  return sub_1BDACEFA4((uint64_t (*)(void))sub_1BDAC3718, sub_1BDAC3730, a1);
}

uint64_t sub_1BDACEFA4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(char *, uint64_t, uint64_t)@<X8>)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  os_log_t v28;
  uint64_t v29;
  NSObject *v30;
  char *v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t result;
  os_log_type_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_t v53;
  uint64_t v54;
  os_log_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t (*v58)(void);
  int v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v58 = a2;
  v6 = sub_1BDBFCE34();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v50 - v11;
  v13 = objc_msgSend(v3, sel_objectID);
  v14 = objc_msgSend(v13, sel_ic_isModernType);
  v60 = v10;
  if (!v14)
    objc_msgSend(v13, sel_ic_isLegacyType);

  v55 = (os_log_t)&v50;
  MEMORY[0x1E0C80A78](v15);
  v59 = v16;
  *((_BYTE *)&v50 - 16) = v16;
  v17 = qword_1ED23B180;
  v18 = v3;
  if (v17 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED23B160);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v56 = v19;
  v57 = v20;
  ((void (*)(char *))v20)(v12);
  v21 = swift_allocObject();
  *(_BYTE *)(v21 + 16) = 2;
  if ((sub_1BDBB6748(v21, a1) & 1) != 0)
  {

  }
  else
  {
    v22 = sub_1BDBFDEF0();
    v23 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v23, v22))
    {
      v24 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v63 = v54;
      *(_DWORD *)v24 = 136315650;
      v53 = v23;
      v25 = sub_1BDBFE34C();
      v61 = sub_1BDAE53FC(v25, v26, &v63);
      LODWORD(v52) = v22;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      v61 = 16;
      sub_1BDBFE100();
      *(_WORD *)(v24 + 22) = 2080;
      v50 = v24 + 24;
      v61 = 0;
      v62 = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v27 = objc_msgSend(v18, sel_ic_loggingDescription);
      sub_1BDBFD6F8();
      v51 = v7;

      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v61 = sub_1BDAE53FC(v61, v62, &v63);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      v28 = v53;
      _os_log_impl(&dword_1BD918000, v53, (os_log_type_t)v52, "Failed assertion at %s:%lu: %s", (uint8_t *)v24, 0x20u);
      v29 = v54;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v29, -1, -1);
      MEMORY[0x1C3B7B478](v24, -1, -1);

      v30 = *(NSObject **)(v51 + 8);
      ((void (*)(char *, uint64_t))v30)(v12, v6);
      goto LABEL_11;
    }

  }
  v30 = *(NSObject **)(v7 + 8);
  ((void (*)(char *, uint64_t))v30)(v12, v6);
LABEL_11:
  swift_release();
  v31 = v60;
  v32 = objc_msgSend(v18, sel_identifier);
  if (v32)
  {
    v33 = v32;
    sub_1BDBFD6F8();

    v34 = sub_1BDBFD740();
    v36 = v35;
    v32 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    v34 = 0;
    v36 = 0xE000000000000000;
  }
  MEMORY[0x1E0C80A78](v32);
  *(&v50 - 2) = v34;
  *(&v50 - 1) = v36;
  v57(v31, v56, v6);
  v37 = swift_allocObject();
  *(_BYTE *)(v37 + 16) = 2;
  v38 = v18;
  if ((sub_1BDBB6748(v37, v58) & 1) != 0)
  {

    ((void (*)(char *, uint64_t))v30)(v31, v6);
    result = swift_release();
  }
  else
  {
    v58 = (uint64_t (*)(void))&v50;
    v40 = sub_1BDBFDEF0();
    v41 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v41, v40))
    {
      v42 = swift_slowAlloc();
      v57 = a3;
      v43 = v42;
      v56 = swift_slowAlloc();
      v63 = v56;
      *(_DWORD *)v43 = 136315650;
      v55 = v41;
      v44 = sub_1BDBFE34C();
      v61 = sub_1BDAE53FC(v44, v45, &v63);
      LODWORD(v54) = v40;
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2048;
      v61 = 18;
      sub_1BDBFE100();
      *(_WORD *)(v43 + 22) = 2080;
      v52 = v43 + 24;
      v61 = 0;
      v62 = 0xE000000000000000;
      sub_1BDBFE304();
      swift_bridgeObjectRelease();
      v61 = 0xD000000000000026;
      v62 = 0x80000001BDC34EF0;
      v46 = objc_msgSend(v38, sel_ic_loggingDescription);
      sub_1BDBFD6F8();
      v53 = v30;

      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      v61 = sub_1BDAE53FC(v61, v62, &v63);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      v47 = v55;
      _os_log_impl(&dword_1BD918000, v55, (os_log_type_t)v54, "Failed assertion at %s:%lu: %s", (uint8_t *)v43, 0x20u);
      v48 = v56;
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v48, -1, -1);
      v49 = v43;
      a3 = v57;
      MEMORY[0x1C3B7B478](v49, -1, -1);

      ((void (*)(char *, uint64_t))v53)(v60, v6);
    }
    else
    {

      ((void (*)(char *, uint64_t))v30)(v31, v6);
    }
    result = swift_release();
  }
  *(_BYTE *)a3 = v59;
  *((_QWORD *)a3 + 1) = v34;
  *((_QWORD *)a3 + 2) = v36;
  return result;
}

uint64_t sub_1BDACF754()
{
  return swift_deallocObject();
}

uint64_t sub_1BDACF76C()
{
  return swift_allocateGenericValueMetadata();
}

_OWORD *sub_1BDACF774(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDecoder.Parameters(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDecoder.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for UnknownCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnknownCommand);
}

uint64_t sub_1BDACF834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;

  result = sub_1BDB362CC(a3, a4);
  if (!v4)
  {
    if (v10)
    {
      sub_1BDBFE304();
      sub_1BDACFAD4(a1, a2, a3, a4);
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      return 0;
    }
    else
    {
      return sub_1BDACFAD4(a1, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_1BDACFAB4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BDACF834(*v1, v1[1], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1BDACFAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 8))(a3);
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
  }
  else
  {
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 8))(a3);
  }
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return 0x20919B9FF020;
}

uint64_t static FastSync.Notes.messageIdentifier.getter()
{
  return 0x7365746F4ELL;
}

uint64_t sub_1BDACFD84()
{
  return 0x7365746F4ELL;
}

uint64_t static FastSync.PaperKit.messageIdentifier.getter()
{
  return 0x74694B7265706150;
}

uint64_t sub_1BDACFDB0()
{
  return 0x74694B7265706150;
}

ValueMetadata *type metadata accessor for FastSync()
{
  return &type metadata for FastSync;
}

ValueMetadata *type metadata accessor for FastSync.Notes()
{
  return &type metadata for FastSync.Notes;
}

ValueMetadata *type metadata accessor for FastSync.PaperKit()
{
  return &type metadata for FastSync.PaperKit;
}

NotesShared::NotesServiceConnection::Environment_optional __swiftcall NotesServiceConnection.Environment.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (NotesShared::NotesServiceConnection::Environment_optional)rawValue;
}

uint64_t NotesServiceConnection.Environment.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

BOOL sub_1BDACFE28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1BDACFE40()
{
  unint64_t result;

  result = qword_1EF50B830;
  if (!qword_1EF50B830)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NotesServiceConnection.Environment, &type metadata for NotesServiceConnection.Environment);
    atomic_store(result, (unint64_t *)&qword_1EF50B830);
  }
  return result;
}

uint64_t sub_1BDACFE84()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDACFEC8()
{
  return sub_1BDBFEA18();
}

uint64_t sub_1BDACFEF4()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

NotesShared::NotesServiceConnection::Environment_optional sub_1BDACFF34(Swift::Int *a1)
{
  return NotesServiceConnection.Environment.init(rawValue:)(*a1);
}

void sub_1BDACFF3C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

ValueMetadata *type metadata accessor for NotesServiceConnection()
{
  return &type metadata for NotesServiceConnection;
}

uint64_t getEnumTagSinglePayload for NotesServiceConnection.Environment(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NotesServiceConnection.Environment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDAD0038 + 4 * byte_1BDC17DE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDAD006C + 4 * asc_1BDC17DE0[v4]))();
}

uint64_t sub_1BDAD006C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAD0074(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDAD007CLL);
  return result;
}

uint64_t sub_1BDAD0088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDAD0090);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDAD0094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDAD009C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotesServiceConnection.Environment()
{
  return &type metadata for NotesServiceConnection.Environment;
}

uint64_t sub_1BDAD00B8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_1BDB226A4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v14;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1C3B79954](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_range);
      v10 = v9;

      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1BDB226A4(v11 > 1, v12 + 1, 1);
      ++v5;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDAD021C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BDB226C0(0, v1, 0);
    v2 = v18;
    v4 = type metadata accessor for PersistedActivityEvent();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v16 = *(_QWORD *)(v5 + 72);
    v17 = v4;
    do
    {
      v7 = (uint64_t *)(v6 + *(int *)(v17 + 24));
      v8 = *v7;
      v9 = v7[1];
      v10 = v7[2];
      v11 = v7[3];
      v13 = *(_QWORD *)(v18 + 16);
      v12 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_1BDB226C0(v12 > 1, v13 + 1, 1);
      v6 += v16;
      *(_QWORD *)(v18 + 16) = v13 + 1;
      v14 = (_QWORD *)(v18 + 32 * v13);
      v14[4] = v8;
      v14[5] = v9;
      v14[6] = v10;
      v14[7] = v11;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDAD0338(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD v16[4];
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BDB226C0(0, v1, 0);
    v2 = v17;
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      v5 = v4[3];
      v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 48))(v16, v5, v6);
      v7 = v16[0];
      v8 = v16[1];
      v10 = v16[2];
      v9 = v16[3];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = v2;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BDB226C0(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v17;
      }
      v13 = *(_QWORD *)(v2 + 16);
      v12 = *(_QWORD *)(v2 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BDB226C0(v12 > 1, v13 + 1, 1);
        v2 = v17;
      }
      *(_QWORD *)(v2 + 16) = v13 + 1;
      v14 = (_QWORD *)(v2 + 32 * v13);
      v14[4] = v7;
      v14[5] = v8;
      v14[6] = v10;
      v14[7] = v9;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDAD0474(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BDB224F4(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1BDB224F4(v7 > 1, v8 + 1, 1);
      v4 += 4;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDAD0548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50B838);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50B838);
  if (qword_1ED23B0E8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23AEF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL static ICActivityStreamDigest.Summary.Formats.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ICActivityStreamDigest.Summary.Formats.hash(into:)()
{
  return sub_1BDBFEA18();
}

void *static ICActivityStreamDigest.Summary.Formats.allCases.getter()
{
  return &unk_1E76D0FD0;
}

uint64_t ICActivityStreamDigest.Summary.Formats.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

BOOL sub_1BDAD0668(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s11NotesShared18TranscriptionStateO9hashValueSivg_0()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDAD06C4()
{
  return sub_1BDBFEA18();
}

uint64_t sub_1BDAD06EC()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

void sub_1BDAD072C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E76D0FF8;
}

uint64_t ICActivityStreamDigest.Summary.Participants.userIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ICActivityStreamDigest.Summary.Participants.userIds.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.userIds.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.Participants.containsCurrentUser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ICActivityStreamDigest.Summary.Participants.containsCurrentUser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.containsCurrentUser.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.Participants.containsEveryone.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t ICActivityStreamDigest.Summary.Participants.containsEveryone.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.containsEveryone.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.Participants.unknownUserCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ICActivityStreamDigest.Summary.Participants.unknownUserCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.unknownUserCount.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.Participants.names.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ICActivityStreamDigest.Summary.Participants.names.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.names.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void ICActivityStreamDigest.Summary.format.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ICActivityStreamDigest.Summary.format.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void (*ICActivityStreamDigest.Summary.format.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.markdown.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ICActivityStreamDigest.Summary.markdown.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

void (*ICActivityStreamDigest.Summary.markdown.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.participants.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_BYTE *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 33);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ICActivityStreamDigest.Summary.participants.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *((_BYTE *)a1 + 9);
  v5 = a1[2];
  v6 = a1[3];
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_BYTE *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 33) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  *(_QWORD *)(v1 + 48) = v6;
  return result;
}

void (*ICActivityStreamDigest.Summary.participants.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.isNavigable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t ICActivityStreamDigest.Summary.isNavigable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

void (*ICActivityStreamDigest.Summary.isNavigable.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.init(resolver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t ObjectType;
  id v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  char *v55;
  void (*v56)(char *, uint64_t);
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t KeyPath;
  void *v61;
  uint64_t result;
  id v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  _QWORD *v71;

  v4 = sub_1BDBFCAC8();
  v67 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v63 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v66 = (char *)&v63 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v63 - v15;
  v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  ObjectType = swift_getObjectType();
  v19 = objc_msgSend(v17, sel_initWithResolver_, a1);
  if (v19)
  {
    v20 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
    v21 = v19;
    v69 = ObjectType;
    v70 = v20;
    v22 = v20(ObjectType, a2);
    v68 = a2;
    if (v22)
    {
      v23 = (void *)v22;
      objc_opt_self();
      v24 = swift_dynamicCastObjCClass();
      if (v24)
      {
        v25 = (void *)v24;
        v26 = v23;
        v27 = objc_msgSend(v25, sel_lastActivitySummaryViewedDate);
        if (v27)
        {
          v63 = v26;
          v28 = v65;
          sub_1BDBFCAA4();

          v29 = v67;
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v16, v28, v4);
          v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
          v64(v16, 0, 1, v4);
          v30 = v21;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v4) == 1)
          {
            v27 = 0;
          }
          else
          {
            v27 = (id)sub_1BDBFCA74();
            (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v4);
          }
          v47 = v66;
          v26 = v63;
        }
        else
        {
          v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
          v64(v16, 1, 1, v4);
          v30 = v21;
          v47 = v66;
        }
        objc_msgSend(v30, sel_setLastActivitySummaryViewedDate_, v27);

        v48 = objc_msgSend(v25, sel_recentUpdatesGenerationDate);
        if (v48)
        {
          v49 = v48;
          sub_1BDBFCAA4();

          v50 = 0;
        }
        else
        {
          v50 = 1;
        }
        v51 = v67;
        v52 = v64;
        v64(v9, v50, 1, v4);
        sub_1BDADECA8((uint64_t)v9, (uint64_t)v12);
        v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
        if (v53(v12, 1, v4))
        {
          sub_1BDAC350C((uint64_t)v12, &qword_1ED239CD8);
          v52(v47, 1, 1, v4);
          v44 = 0;
        }
        else
        {
          v54 = v52;
          v55 = v65;
          (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v65, v12, v4);
          sub_1BDAC350C((uint64_t)v12, &qword_1ED239CD8);
          sub_1BDBFC9FC();
          v56 = *(void (**)(char *, uint64_t))(v51 + 8);
          v56(v55, v4);
          v54(v47, 0, 1, v4);
          if (v53(v47, 1, v4) == 1)
          {
            v44 = 0;
          }
          else
          {
            v44 = sub_1BDBFCA74();
            v56(v47, v4);
          }
        }
        v42 = v68;
        v31 = v69;
        objc_msgSend(v30, sel_setRecentUpdatesGenerationDate_, v44);

        goto LABEL_31;
      }

      a2 = v68;
    }
    v30 = v21;
    objc_msgSend(v21, sel_setLastActivitySummaryViewedDate_, 0);
    objc_msgSend(v21, sel_setRecentUpdatesGenerationDate_, 0);
    v31 = v69;
    v32 = v70(v69, a2);
    if (v32)
    {
      v33 = (void *)v32;
      if (qword_1EF50AFC8 != -1)
        swift_once();
      v34 = sub_1BDBFCE34();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EF50B838);
      v35 = v33;
      v36 = sub_1BDBFCE1C();
      v37 = sub_1BDBFDECC();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v39 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v38 = 138412290;
        v40 = objc_msgSend(v35, sel_objectID);
        v71 = v40;
        sub_1BDBFE100();
        *v39 = v40;

        _os_log_impl(&dword_1BD918000, v36, v37, "Object does not support activity digests {objectID: %@}", v38, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
        swift_arrayDestroy();
        v41 = v39;
        v31 = v69;
        MEMORY[0x1C3B7B478](v41, -1, -1);
        MEMORY[0x1C3B7B478](v38, -1, -1);

      }
      else
      {

      }
      v42 = v68;
      goto LABEL_32;
    }
    v42 = a2;
    if (qword_1EF50AFC8 != -1)
      swift_once();
    v43 = sub_1BDBFCE34();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EF50B838);
    v44 = sub_1BDBFCE1C();
    v45 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_1BD918000, v44, v45, "Cannot create activity digest without object", v46, 2u);
      MEMORY[0x1C3B7B478](v46, -1, -1);
    }
LABEL_31:

LABEL_32:
    v57 = (void *)v70(v31, v42);
    v58 = sub_1BDAD10F4(v57);

    swift_unknownObjectRetain();
    v59 = (_QWORD *)sub_1BDADEABC(v58, a1, v42);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    KeyPath = swift_getKeyPath();
    v71 = v59;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BDADEA04(&v71, (uint64_t (*)(uint64_t, char *))sub_1BDAE16AC, 0, KeyPath);
    swift_bridgeObjectRelease();
    swift_release_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
    v61 = (void *)sub_1BDBFD9C8();
    swift_release();
    objc_msgSend(v30, sel_setRecentActivityEventsStorage_, v61);

    swift_unknownObjectRelease();
    return (uint64_t)v30;
  }
  __break(1u);
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BDAD10F4(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v52 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1E0C80A78](v52);
  v5 = (id *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v49 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v49 - v13;
  v15 = sub_1BDBFCAC8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v49 - v20;
  v22 = objc_msgSend(v2, sel_recentUpdatesGenerationDate);
  if (v22)
  {
    v23 = v22;
    sub_1BDBFCAA4();

    v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v24(v14, v19, v15);
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v25(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v24(v21, v14, v15);
      if (a1)
      {
        v26 = ICCloudSyncingObject.sharedRootActivityEvents.getter();
        MEMORY[0x1E0C80A78](v26);
        *(&v49 - 2) = v21;
        v51 = sub_1BDBC26E0((uint64_t)sub_1BDAE1694, (uint64_t)(&v49 - 4), v27);
        v28 = ICCloudSyncingObject.persistedActivityEvents.getter();
        MEMORY[0x1E0C80A78](v28);
        *(&v49 - 2) = v21;
        v50 = sub_1BDBC26E0((uint64_t)sub_1BDAE15CC, (uint64_t)(&v49 - 4), v29);
        objc_opt_self();
        v30 = swift_dynamicCastObjCClass();
        if (v30)
        {
          v31 = (void *)v30;
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v21, v15);
          v25(v12, 0, 1, v15);
          v25(v9, 1, 1, v15);
          v49 = a1;
          v32 = objc_msgSend(v31, sel_mergeableString);
          objc_opt_self();
          v33 = swift_dynamicCastObjCClass();
          if (v33)
          {
            v34 = (void *)v33;
            *v5 = v31;
            swift_storeEnumTagMultiPayload();
            v35 = v49;
            v36 = _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v34, (uint64_t)v5, (uint64_t)v12, (uint64_t)v9);

            sub_1BDAE1658((uint64_t)v5, type metadata accessor for NoteEditActivityEvent.Parents);
          }
          else
          {

            v36 = MEMORY[0x1E0DEE9D8];
          }
          sub_1BDAC350C((uint64_t)v9, &qword_1ED239CD8);
          sub_1BDAC350C((uint64_t)v12, &qword_1ED239CD8);
          v40 = objc_msgSend(v31, sel_visibleAttachments);
          sub_1BD942914(0, (unint64_t *)&qword_1EF50FED0);
          sub_1BDAE15E8();
          v41 = sub_1BDBFDD10();

          MEMORY[0x1E0C80A78](v42);
          *(&v49 - 2) = v21;
          v43 = sub_1BDBC2290((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BDAE1640, (uint64_t)(&v49 - 4), v41);
          swift_bridgeObjectRelease();
          v53 = v51;
          sub_1BDBC3D04(v50);
          v44 = v53;
          v45 = sub_1BDBC35F0(v36);
          swift_bridgeObjectRelease();
          v53 = v44;
          sub_1BDBC3D04(v45);
          v46 = v53;
          v47 = sub_1BDBC35F0(v43);
          swift_bridgeObjectRelease();
          v53 = v46;
          sub_1BDBC3D04(v47);

          goto LABEL_14;
        }
        v38 = v50;
        v39 = v51;
      }
      else
      {
        v38 = MEMORY[0x1E0DEE9D8];
        v39 = MEMORY[0x1E0DEE9D8];
      }
      v53 = v39;
      sub_1BDBC3D04(v38);
LABEL_14:
      v37 = v53;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      return v37;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1BDAC350C((uint64_t)v14, &qword_1ED239CD8);
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BDAD15CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1BDAD1614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1BDBFCAC8();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v8);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v8, v9);
}

uint64_t sub_1BDAD16B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1BDBFCAC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  LOBYTE(a1) = sub_1BDBFCA80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

uint64_t sub_1BDAD1780@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v18 - v10;
  v12 = *a1;
  v13 = sub_1BDBFCAC8();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a2, v13);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(v11, 0, 1, v13);
  v15(v9, 1, 1, v13);
  v16 = _s11NotesShared21NoteEditActivityEventV6events3for14afterTimestamp06recentJ0SayACGSo12ICAttachmentC_10Foundation4DateVSgANtFZ_0(v12, (uint64_t)v11, (uint64_t)v9);
  sub_1BDAC350C((uint64_t)v9, &qword_1ED239CD8);
  result = sub_1BDAC350C((uint64_t)v11, &qword_1ED239CD8);
  *a3 = v16;
  return result;
}

id ICActivityStreamDigest.recentUpdatesFilter.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  _QWORD v24[4];
  _OWORD v25[2];
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v24 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v24 - v9;
  v11 = sub_1BDBFCAC8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v0, sel_recentActivityEventsStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  v24[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v24[0] = swift_allocObject();
  sub_1BDADED1C((uint64_t)v25, v24[0] + 16);
  v15 = sub_1BDADD014((uint64_t)v24, (uint64_t *)&unk_1ED23AAE0, &qword_1EF50B950);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
  sub_1BDAC350C((uint64_t)v25, qword_1ED239CF8);
  if (*(_QWORD *)(v15 + 16))
  {
    sub_1BDADED64(v15 + 32, (uint64_t)&v26);
  }
  else
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)&v27 + 1);
  if (!*((_QWORD *)&v27 + 1))
  {
    sub_1BDAC350C((uint64_t)&v26, &qword_1ED23AA18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_12;
  }
  v17 = v28;
  __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v18(v10, 0, 1, v11);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_12:
    sub_1BDAC350C((uint64_t)v10, &qword_1ED239CD8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v19 = objc_msgSend(v1, sel_recentUpdatesGenerationDate);
  if (v19)
  {
    v20 = v19;
    sub_1BDBFCAA4();

    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  v18(v8, v21, 1, v11);
  sub_1BD942914(0, (unint64_t *)&qword_1EF50B850);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v5, v14, v11);
  v18(v5, 0, 1, v11);
  v22 = ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(0, 0, 0, 0, (uint64_t)v8, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v22;
}

uint64_t sub_1BDAD1C18(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  _QWORD v11[4];
  _OWORD v12[2];

  if (objc_msgSend(v1, sel_resolverStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  v11[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v11[0] = swift_allocObject();
  sub_1BDADED1C((uint64_t)v12, v11[0] + 16);
  sub_1BDADB2D0((uint64_t)v11);
  v4 = v3;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  sub_1BDAC350C((uint64_t)v12, qword_1ED239CF8);
  ObjectType = swift_getObjectType();
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  swift_unknownObjectRelease();
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  v7 = ICCloudSyncingObject.activityEvents.getter();

  v8 = a1;
  v9 = sub_1BDADEDEC((uint64_t)v7, (uint64_t)v8, (uint64_t (*)(__int128 *, uint64_t))sub_1BDAD1D48);

  return v9;
}

BOOL sub_1BDAD1D48(_QWORD *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  id v42;
  void *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD v57[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v55 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v51 - v7;
  v9 = sub_1BDBFCAC8();
  v56 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v53 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v51 - v13;
  MEMORY[0x1E0C80A78](v12);
  v54 = (char *)&v51 - v15;
  v16 = objc_msgSend(a2, sel_allowedUserIDs);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1BDBFDD10();

    v20 = a1[3];
    v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 48))(v57, v20, v19);
    v21 = v57[0];
    v22 = v57[1];
    swift_bridgeObjectRelease();
    LOBYTE(v21) = sub_1BDAD221C(v21, v22, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      return 0;
  }
  v23 = objc_msgSend(a2, sel_allowedAttachmentIDs);
  if (v23)
  {
    v24 = v23;
    v25 = sub_1BDBFDD10();

    v26 = a1[3];
    v27 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v26);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
    LOBYTE(v26) = sub_1BDAD24D4(v28, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
      return 0;
  }
  v29 = objc_msgSend(a2, sel_fromDate);
  if (!v29)
  {
    v31 = v56;
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
    v33(v8, 1, 1, v9);
    goto LABEL_10;
  }
  v30 = v29;
  sub_1BDBFCAA4();

  v31 = v56;
  v32 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
  v32(v8, v14, v9);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v33(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v9) == 1)
  {
LABEL_10:
    sub_1BDAC350C((uint64_t)v8, &qword_1ED239CD8);
    goto LABEL_11;
  }
  v52 = v33;
  v34 = v54;
  v32(v54, v8, v9);
  v35 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  v37 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v38 = v36;
  v31 = v56;
  v37(v35, v38);
  sub_1BDAC31B0((unint64_t *)&unk_1EF50FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  LOBYTE(v35) = sub_1BDBFD680();
  v39 = *(void (**)(char *, uint64_t))(v31 + 8);
  v39(v14, v9);
  v40 = v34;
  v33 = v52;
  v39(v40, v9);
  if ((v35 & 1) != 0)
    return 0;
LABEL_11:
  v42 = objc_msgSend(a2, sel_toDate);
  if (!v42)
  {
    v45 = (uint64_t)v55;
    v33(v55, 1, 1, v9);
    goto LABEL_16;
  }
  v43 = v42;
  sub_1BDBFCAA4();

  v44 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v45 = (uint64_t)v55;
  v44(v55, v14, v9);
  v33((char *)v45, 0, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v45, 1, v9) == 1)
  {
LABEL_16:
    sub_1BDAC350C(v45, &qword_1ED239CD8);
    return 1;
  }
  v46 = v53;
  v44(v53, (char *)v45, v9);
  v47 = v31;
  v48 = a1[3];
  v49 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v48);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v49);
  sub_1BDAC31B0((unint64_t *)&unk_1EF50FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  LOBYTE(v48) = sub_1BDBFD680();
  v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  v50(v14, v9);
  v50(v46, v9);
  return (v48 & 1) == 0;
}

uint64_t sub_1BDAD221C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BDBFEA0C();
    sub_1BDBFD794();
    v6 = sub_1BDBFEA30();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1BDBFE874() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1BDBFE874() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1BDAD2350(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1BDBFCB40();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]), v6 = sub_1BDBFD614(), v7 = -1 << *(_BYTE *)(a2 + 32), v8 = v6 & ~v7, ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1BDAC31B0(&qword_1ED23AD28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v12 = sub_1BDBFD6BC();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1BDAD24D4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v32 = v4;
  v33 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v12 = v11;
      if (!v8)
        break;
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_31;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v12 + 2;
      if (v12 + 2 >= v31)
        goto LABEL_48;
      v16 = *(_QWORD *)(v33 + 8 * v11);
      if (!v16)
      {
        v11 = v12 + 3;
        if (v12 + 3 >= v31)
          goto LABEL_48;
        v16 = *(_QWORD *)(v33 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_30:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_31:
      v18 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v14);
      v20 = *v18;
      v19 = v18[1];
      sub_1BDBFEA0C();
      swift_bridgeObjectRetain();
      sub_1BDBFD794();
      v21 = sub_1BDBFEA30();
      v22 = -1 << *(_BYTE *)(v5 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + 48);
        v25 = (_QWORD *)(v24 + 16 * v23);
        v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_1BDBFE874() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = 0;
LABEL_45:
          sub_1BDAE1514();
          return v30;
        }
        v27 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v27;
          if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v28 = (_QWORD *)(v24 + 16 * v23);
          v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_1BDBFE874() & 1) != 0)
            goto LABEL_44;
        }
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    v30 = 1;
    goto LABEL_45;
  }
  v16 = *(_QWORD *)(v33 + 8 * v17);
  if (v16)
  {
    v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_30;
  }
LABEL_50:
  __break(1u);
  return result;
}

id ICActivityStreamDigest.hasUnseenHighlights.getter()
{
  void *v0;
  id result;
  char v2;

  result = objc_msgSend(v0, sel_objc_hasUnseenSummary);
  if ((_DWORD)result)
  {
    ICActivityStreamDigest.recentUpdatesRange.getter();
    return (id)((v2 & 1) == 0);
  }
  return result;
}

uint64_t ICActivityStreamDigest.recentUpdatesRange.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  _OWORD v16[2];

  if (objc_msgSend(v0, sel_resolverStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  v15[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v15[0] = swift_allocObject();
  sub_1BDADED1C((uint64_t)v16, v15[0] + 16);
  sub_1BDADB2D0((uint64_t)v15);
  v2 = v1;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  sub_1BDAC350C((uint64_t)v16, qword_1ED239CF8);
  ObjectType = swift_getObjectType();
  v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  swift_unknownObjectRelease();
  if (!v4)
    return 0;
  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (!v5
    || (v6 = v5, (v7 = objc_msgSend(v0, sel_objc_recentUpdatesFilter)) == 0))
  {

    return 0;
  }
  v8 = v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)ICTTTextEditGrouper), sel_initWithNote_, v6);
  objc_msgSend(v9, sel_setJoinsWhitespaceAndNewlineGaps_, 1);
  objc_msgSend(v9, sel_setFilter_, v8);
  v10 = objc_msgSend(v9, sel_groupedEdits);
  sub_1BD942914(0, &qword_1EF50B858);
  v11 = sub_1BDBFD9E0();

  v12 = sub_1BDAD00B8(v11);
  swift_bridgeObjectRelease();
  v13 = sub_1BDBBCFCC(v12);

  return v13;
}

uint64_t ICActivityStreamDigest.hasUnseenSummary.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _QWORD v38[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v33 - v6;
  v8 = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  if (objc_msgSend(v1, sel_recentActivityEventsStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  v38[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v38[0] = swift_allocObject();
  sub_1BDADED1C((uint64_t)&v35, v38[0] + 16);
  v18 = sub_1BDADD014((uint64_t)v38, (uint64_t *)&unk_1ED23AAE0, &qword_1EF50B950);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v38);
  sub_1BDAC350C((uint64_t)&v35, qword_1ED239CF8);
  v19 = v1;
  v20 = sub_1BDADEDEC(v18, (uint64_t)v19, (uint64_t (*)(__int128 *, uint64_t))sub_1BDAD2E28);

  v21 = objc_msgSend(v19, sel_lastActivitySummaryViewedDate);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_9;
  }
  v22 = v21;
  v34 = v12;
  sub_1BDBFCAA4();

  v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v23(v7, v15, v8);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v24(v7, 0, 1, v8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v25(v7, 1, v8) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v26 = (uint64_t)v7;
LABEL_16:
    sub_1BDAC350C(v26, &qword_1ED239CD8);
    v30 = 0;
    return v30 & 1;
  }
  v23(v17, v7, v8);
  if (*(_QWORD *)(v20 + 16))
  {
    sub_1BDADED64(v20 + 32, (uint64_t)&v35);
  }
  else
  {
    v37 = 0;
    v35 = 0u;
    v36 = 0u;
  }
  swift_bridgeObjectRelease();
  v27 = *((_QWORD *)&v36 + 1);
  if (!*((_QWORD *)&v36 + 1))
  {
    sub_1BDAC350C((uint64_t)&v35, &qword_1ED23AA18);
    v24(v5, 1, 1, v8);
    goto LABEL_15;
  }
  v28 = v37;
  __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
  v24(v5, 0, 1, v8);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v35);
  if (v25(v5, 1, v8) == 1)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    v26 = (uint64_t)v5;
    goto LABEL_16;
  }
  v29 = v34;
  v23(v34, v5, v8);
  v30 = sub_1BDBFC9E4();
  v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31(v29, v8);
  v31(v17, v8);
  return v30 & 1;
}

BOOL sub_1BDAD2E28(_QWORD *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v20[4];
  _OWORD v21[2];
  _QWORD v22[3];

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v22, v3, v4);
  v6 = v22[0];
  v5 = v22[1];
  if (objc_msgSend(a2, sel_resolverStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  v20[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v20[0] = swift_allocObject();
  sub_1BDADED1C((uint64_t)v21, v20[0] + 16);
  sub_1BDADB2D0((uint64_t)v20);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
  sub_1BDAC350C((uint64_t)v21, qword_1ED239CF8);
  ObjectType = swift_getObjectType();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v11 = (void *)v10(ObjectType, v8);
  if (v11
    && (v12 = v11,
        v13 = objc_msgSend(v11, sel_cloudAccount, v20[0]),
        v12,
        v13))
  {
    v14 = objc_msgSend(v13, sel_userRecordName);

    v15 = sub_1BDBFD6F8();
    v17 = v16;

    if (v6 == v15 && v5 == v17)
      v18 = 1;
    else
      v18 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v18 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v18 & 1) == 0;
}

BOOL ICActivityStreamDigest.hasRecentUpdates.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];
  __int128 v5;
  __int128 v6;

  if (objc_msgSend(v0, sel_recentActivityEventsStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v4[0] = swift_allocObject();
  sub_1BDADED1C((uint64_t)&v5, v4[0] + 16);
  v1 = sub_1BDADD014((uint64_t)v4, (uint64_t *)&unk_1ED23AAE0, &qword_1EF50B950);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  sub_1BDAC350C((uint64_t)&v5, qword_1ED239CF8);
  LOBYTE(v4[0]) = 1;
  ICActivityStreamDigest.summary(for:format:)(v1, (unsigned __int8 *)v4, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  v2 = v6;
  if ((_QWORD)v6)
    sub_1BDADF648(v5, *((uint64_t *)&v5 + 1), v6);
  return v2 != 0;
}

uint64_t ICActivityStreamDigest.summary(for:format:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void *v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t ObjectType;
  uint64_t (*v39)(uint64_t, unint64_t);
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  _WORD v113[8];
  _BYTE v114[32];
  _QWORD v115[4];
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  _QWORD *v119;

  v4 = v3;
  v99 = sub_1BDBFEA78();
  v97 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v98 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v118 = MEMORY[0x1E0DEE9D8];
  v119 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v116 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BDADEA04((_QWORD **)&v116, (uint64_t (*)(uint64_t, char *))sub_1BDAD471C, 0, KeyPath);
  swift_release();
  swift_release();
  v11 = (char *)v116;
  LOBYTE(v116) = v9;
  v12 = sub_1BDADFE48((uint64_t)v11, (unsigned __int8 *)&v116);
  v106 = sub_1BDADF684(v11);
  v105 = v13;
  v14 = sub_1BDAE00A8(v11);
  swift_bridgeObjectRetain();
  v104 = sub_1BDADEFD0(v14, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = sub_1BDAE0894((uint64_t)v11);
  swift_release();
  swift_bridgeObjectRetain();
  v103 = sub_1BDADEFD0(v15, v12);
  v102 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v116) = v9;
  v16 = sub_1BDAD4744(v12, (char *)&v116);
  v18 = v17 != 0;
  if (v17)
  {
    v19 = v16;
    v20 = v17;
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_1BDBCBCC4(0, v21[2] + 1, 1, v21);
    v23 = v21[2];
    v22 = v21[3];
    if (v23 >= v22 >> 1)
      v21 = sub_1BDBCBCC4((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
    v21[2] = v23 + 1;
    v24 = &v21[2 * v23];
    v24[4] = v19;
    v24[5] = v20;
    v119 = v21;
    sub_1BDBC3E90(v12);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  LOBYTE(v116) = v9;
  v25 = v106;
  swift_bridgeObjectRetain();
  v26 = v105;
  swift_bridgeObjectRetain();
  v27 = sub_1BDAD554C(v25, v26, (char *)&v116);
  v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
LABEL_41:
    v57 = sub_1BDADA850();
    if (v58)
    {
      v59 = v57;
      v60 = v58;
      swift_bridgeObjectRelease();
      v61 = v119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v61 = sub_1BDBCBCC4(0, v61[2] + 1, 1, v61);
      v63 = v61[2];
      v62 = v61[3];
      if (v63 >= v62 >> 1)
        v61 = sub_1BDBCBCC4((_QWORD *)(v62 > 1), v63 + 1, 1, v61);
      v61[2] = v63 + 1;
      v64 = &v61[2 * v63];
      v64[4] = v59;
      v64[5] = v60;
      v119 = v61;
      v65 = v104;
LABEL_54:
      sub_1BDBC3E90(v65);
      goto LABEL_56;
    }
    swift_bridgeObjectRelease();
    v66 = sub_1BDADB0CC();
    if (v67)
    {
      v68 = v66;
      v69 = v67;
      v70 = v119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v70 = sub_1BDBCBCC4(0, v70[2] + 1, 1, v70);
      v71 = v103;
      v73 = v70[2];
      v72 = v70[3];
      if (v73 >= v72 >> 1)
      {
        v90 = sub_1BDBCBCC4((_QWORD *)(v72 > 1), v73 + 1, 1, v70);
        v71 = v103;
        v70 = v90;
      }
      v70[2] = v73 + 1;
      v74 = &v70[2 * v73];
      v74[4] = v68;
      v74[5] = v69;
      v119 = v70;
      v65 = v71;
      goto LABEL_54;
    }
LABEL_55:
    swift_bridgeObjectRelease();
LABEL_56:
    v75 = (uint64_t)v119;
    if (!v119[2])
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(_OWORD *)(a3 + 41) = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)a3 = 0u;
      return result;
    }
    if ((v9 & 1) != 0)
    {
      v76 = (uint64_t)v119;
LABEL_66:
      *(_QWORD *)&v116 = v76;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
      sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
      v80 = sub_1BDBFD674();
      v82 = v81;
      swift_bridgeObjectRelease();
      sub_1BDAD4010((uint64_t)&v116);
      result = swift_bridgeObjectRelease();
      v83 = v116;
      v84 = v117;
      v85 = 256;
      if (!BYTE9(v116))
        v85 = 0;
      v86 = v85 | BYTE8(v116);
      *(_QWORD *)a3 = v9;
      *(_QWORD *)(a3 + 8) = v80;
      *(_QWORD *)(a3 + 16) = v82;
      *(_QWORD *)(a3 + 24) = v83;
      *(_QWORD *)(a3 + 32) = v86;
      *(_OWORD *)(a3 + 40) = v84;
      *(_BYTE *)(a3 + 56) = v18;
      return result;
    }
    sub_1BDBFE8C8();
    swift_unknownObjectRetain_n();
    v78 = swift_dynamicCastClass();
    if (!v78)
    {
      swift_bridgeObjectRelease();
      v78 = MEMORY[0x1E0DEE9D8];
    }
    v79 = *(_QWORD *)(v78 + 16);
    swift_release();
    if (v79 == 1)
    {
      v76 = swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      if (v76)
        goto LABEL_66;
      v76 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v76 = sub_1BDAE98B0(v75, v75 + 32, 0, 3uLL);
    }
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  v100 = v27;
  v101 = v29;
  v30 = *(_QWORD *)(v26 + 16);
  v31 = v26;
  if (!v30)
  {
    v48 = 0;
LABEL_30:
    v49 = v106;
    swift_bridgeObjectRetain();
    v50 = v4;
    v51 = sub_1BDADF160(v49, v50);
    swift_bridgeObjectRelease();

    if ((v48 & 1) == 0)
      goto LABEL_37;
    if (*(_QWORD *)(v51 + 16))
    {
      *(_QWORD *)&v116 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B878);
      sub_1BDAE0C94(&qword_1EF50B880, &qword_1EF50B878, MEMORY[0x1E0DEAF38]);
      sub_1BDAE0BDC();
      v52 = *(_QWORD *)(sub_1BDBFD8C0() + 16);
      swift_bridgeObjectRelease();
      if (v52 == 2)
      {
        if ((_DWORD)v9)
        {
          v53 = 0;
          v54 = 0;
        }
        else
        {
          v53 = v119[2];
          v54 = v53;
        }
        sub_1BDADD410(v53, v54, v100, v101);
        v49 = v51;
      }
      else
      {
        *(_QWORD *)&v116 = v106;
        v87 = *(_QWORD *)(sub_1BDBFD8C0() + 16);
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
        {
          v88 = 0;
          v89 = 0;
        }
        else
        {
          v88 = v119[2];
          v89 = v88;
        }
        sub_1BDADD410(v88, v89, v100, v101);
        v49 = v106;
        if (v87 == 2)
          v49 = v51;
      }
      goto LABEL_39;
    }
    if (v9)
    {
      v55 = 0;
      v56 = 0;
    }
    else
    {
LABEL_37:
      v55 = v119[2];
      v56 = v55;
    }
    sub_1BDADD410(v55, v56, v100, v101);
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDBC3E90(v49);
    if ((v9 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = 1;
      goto LABEL_56;
    }
    v18 = 1;
    goto LABEL_41;
  }
  v95 = v9;
  v96 = a3;
  swift_bridgeObjectRetain();
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B868);
  v32 = v26 + 56;
  v33 = qword_1ED239CF8;
  v107 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    v34 = *(_QWORD *)(v32 - 16);
    v109 = *(_QWORD *)(v32 - 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (objc_msgSend(v4, sel_resolverStorage))
    {
      sub_1BDBFE184();
      swift_unknownObjectRelease();
    }
    else
    {
      v116 = 0u;
      v117 = 0u;
    }
    v35 = v4;
    v115[3] = __swift_instantiateConcreteTypeFromMangledName(v33);
    v115[0] = swift_allocObject();
    sub_1BDADED1C((uint64_t)&v116, v115[0] + 16);
    sub_1BDAE0BA0((uint64_t)v115, (uint64_t)v114);
    if (!swift_dynamicCast())
      break;
    v36 = v111;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v115);
    v37 = v33;
    sub_1BDAC350C((uint64_t)&v116, v33);
    ObjectType = swift_getObjectType();
    v39 = *(uint64_t (**)(uint64_t, unint64_t))(v36 + 8);
    swift_bridgeObjectRetain();
    v40 = (void *)v39(ObjectType, v36);
    if (v40
      && (v41 = v40,
          v42 = objc_msgSend(v40, sel_cloudAccount),
          v41,
          v42))
    {
      v43 = objc_msgSend(v42, sel_userRecordName);

      v44 = sub_1BDBFD6F8();
      v46 = v45;

      if (v109 == v44 && v34 == v46)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_28:
        v31 = v105;
        swift_bridgeObjectRelease();
        v48 = 1;
        a3 = v96;
        v4 = v35;
LABEL_29:
        v9 = v95;
        goto LABEL_30;
      }
      v47 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if ((v47 & 1) != 0)
        goto LABEL_28;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    v32 += 32;
    --v30;
    v4 = v35;
    v33 = v37;
    if (!v30)
    {
      v31 = v105;
      swift_bridgeObjectRelease();
      v48 = 0;
      a3 = v96;
      goto LABEL_29;
    }
  }
  sub_1BDAE0BA0((uint64_t)v115, (uint64_t)v114);
  v110 = 0;
  v111 = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  strcpy((char *)v113, "Cannot cast ");
  HIBYTE(v113[6]) = 0;
  v113[7] = -5120;
  sub_1BDAE0BA0((uint64_t)v114, (uint64_t)&v110);
  v91 = v98;
  sub_1BDBFEA3C();
  v92 = v99;
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v93 = *(void (**)(char *, uint64_t))(v97 + 8);
  v93(v91, v92);
  sub_1BDBFD7DC();
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B870);
  v110 = v108;
  sub_1BDBFEA3C();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v93(v91, v92);
  sub_1BDBFE52C();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

id ICActivityStreamDigest.recentUpdatesRangeValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v0 = ICActivityStreamDigest.recentUpdatesRange.getter();
  if ((v2 & 1) != 0)
    return 0;
  else
    return objc_msgSend((id)objc_opt_self(), sel_valueWithRange_, v0, v1);
}

uint64_t ICActivityStreamDigest.isCurrentUserMentionedInRecentSummary.getter()
{
  void *v0;
  id v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  _QWORD *v8;
  id v9;
  char *v10;
  char v11;
  char v12;
  _QWORD v14[4];
  _OWORD v15[2];

  v1 = objc_msgSend(v0, sel_objc_recentUpdatesFilter);
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v0, sel_resolverStorage))
    {
      sub_1BDBFE184();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v15, 0, sizeof(v15));
    }
    v14[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
    v14[0] = swift_allocObject();
    sub_1BDADED1C((uint64_t)v15, v14[0] + 16);
    sub_1BDADB2D0((uint64_t)v14);
    v5 = v4;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
    sub_1BDAC350C((uint64_t)v15, qword_1ED239CF8);
    ObjectType = swift_getObjectType();
    v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    swift_unknownObjectRelease();
    if (v7)
    {
      v8 = ICCloudSyncingObject.activityEvents.getter();

      v9 = v2;
      v10 = (char *)sub_1BDADEDEC((uint64_t)v8, (uint64_t)v9, (uint64_t (*)(__int128 *, uint64_t))sub_1BDAD1D48);

    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
    }
    sub_1BDADF684(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDAD4010((uint64_t)v15);
    swift_bridgeObjectRelease();

    v11 = BYTE8(v15[0]);
    v12 = BYTE9(v15[0]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v11 | v12;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1BDAD4010@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B878);
  sub_1BDAE0C94(&qword_1EF50B880, &qword_1EF50B878, MEMORY[0x1E0DEAF38]);
  sub_1BDAE0BDC();
  v4 = sub_1BDBFD8C0();
  v5 = v2;
  v6 = sub_1BDADF480(v4, v5);

  v7 = sub_1BDAD0474(v4);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v6 + 16);
  if (!v8)
  {
    v20 = 0;
    v21 = 0;
    v22 = MEMORY[0x1E0DEE9D8];
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  v9 = (unint64_t *)(v6 + 40);
  v10 = v8;
  v34 = v7;
  do
  {
    v11 = *(v9 - 1);
    v12 = *v9;
    if (*v9 != 1 && v12 != 2)
    {
      if (!v12)
      {
        sub_1BDAE151C(*(v9 - 1), 0);
        sub_1BDAE151C(0, 0);
        v33 = 1;
        goto LABEL_10;
      }
      swift_bridgeObjectRetain();
    }
    v9 += 2;
    sub_1BDAE151C(v11, v12);
    sub_1BDAE151C(0, 0);
    --v10;
  }
  while (v10);
  v33 = 0;
LABEL_10:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRetain();
  v14 = 0;
  v15 = (unint64_t *)(v6 + 40);
  while (1)
  {
    v16 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      return result;
    }
    v17 = *(v15 - 1);
    v18 = *v15;
    if (!*v15 || v18 == 1)
      goto LABEL_11;
    if (v18 == 2)
      break;
    swift_bridgeObjectRetain();
LABEL_11:
    v15 += 2;
    sub_1BDAE151C(v17, v18);
    result = sub_1BDAE151C(0, 2uLL);
    ++v14;
    if (v16 == v8)
    {
      v19 = 0;
      goto LABEL_20;
    }
  }
  sub_1BDAE151C(*(v15 - 1), 2uLL);
  sub_1BDAE151C(0, 2uLL);
  v19 = 1;
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v23 = (unint64_t *)(v6 + 40);
  v22 = MEMORY[0x1E0DEE9D8];
  while (2)
  {
    v26 = *(v23 - 1);
    v27 = *v23;
    if (!*v23)
    {
      v24 = *(v23 - 1);
      v25 = 0;
      goto LABEL_22;
    }
    if (v27 == 1)
    {
      sub_1BDAE151C(*(v23 - 1), 1uLL);
      sub_1BDAE151C(0, 1uLL);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1BDB226DC(0, *(_QWORD *)(v22 + 16) + 1, 1);
      v29 = *(_QWORD *)(v22 + 16);
      v28 = *(_QWORD *)(v22 + 24);
      if (v29 >= v28 >> 1)
        sub_1BDB226DC(v28 > 1, v29 + 1, 1);
      *(_QWORD *)(v22 + 16) = v29 + 1;
      v30 = v22 + 16 * v29;
      *(_QWORD *)(v30 + 32) = v26;
      *(_QWORD *)(v30 + 40) = 1;
    }
    else
    {
      if (v27 == 2)
      {
        v24 = *(v23 - 1);
        v25 = 2;
      }
      else
      {
        swift_bridgeObjectRetain();
        v24 = v26;
        v25 = v27;
      }
LABEL_22:
      sub_1BDAE151C(v24, v25);
      sub_1BDAE151C(0, 1uLL);
    }
    v23 += 2;
    if (--v8)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v20 = v33;
  v21 = v19;
  v7 = v34;
LABEL_35:
  v31 = *(_QWORD *)(v22 + 16);
  swift_release();
  v32 = sub_1BDADB1C8(v6);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v20;
  *(_BYTE *)(a1 + 9) = v21;
  *(_QWORD *)(a1 + 16) = v31;
  *(_QWORD *)(a1 + 24) = v32;
  return result;
}

Swift::Bool __swiftcall ICActivityStreamDigest.isCurrentUserMentioned(in:)(ICTTTextEditFilter *in)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  _QWORD *v7;
  ICTTTextEditFilter *v8;
  char *v9;
  char v10;
  char v11;
  _QWORD v13[4];
  _OWORD v14[2];

  if (objc_msgSend(v1, sel_resolverStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  v13[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v13[0] = swift_allocObject();
  sub_1BDADED1C((uint64_t)v14, v13[0] + 16);
  sub_1BDADB2D0((uint64_t)v13);
  v4 = v3;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  sub_1BDAC350C((uint64_t)v14, qword_1ED239CF8);
  ObjectType = swift_getObjectType();
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  swift_unknownObjectRelease();
  if (v6)
  {
    v7 = ICCloudSyncingObject.activityEvents.getter();

    v8 = in;
    v9 = (char *)sub_1BDADEDEC((uint64_t)v7, (uint64_t)v8, (uint64_t (*)(__int128 *, uint64_t))sub_1BDAD1D48);

  }
  else
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BDADF684(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDAD4010((uint64_t)v14);
  swift_bridgeObjectRelease();
  v10 = BYTE8(v14[0]);
  v11 = BYTE9(v14[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v10 | v11) & 1;
}

uint64_t ICActivityStreamDigest.summary(for:format:)@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  _QWORD v15[4];
  _OWORD v16[2];

  v6 = *a2;
  if (objc_msgSend(v3, sel_resolverStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  v15[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  v15[0] = swift_allocObject();
  sub_1BDADED1C((uint64_t)v16, v15[0] + 16);
  sub_1BDADB2D0((uint64_t)v15);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  sub_1BDAC350C((uint64_t)v16, qword_1ED239CF8);
  ObjectType = swift_getObjectType();
  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  swift_unknownObjectRelease();
  if (v10)
  {
    v11 = ICCloudSyncingObject.activityEvents.getter();

    v12 = a1;
    v13 = sub_1BDADEDEC((uint64_t)v11, (uint64_t)v12, (uint64_t (*)(__int128 *, uint64_t))sub_1BDAD1D48);

  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  LOBYTE(v16[0]) = v6;
  ICActivityStreamDigest.summary(for:format:)(v13, (unsigned __int8 *)v16, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDAD471C()
{
  return sub_1BDBFCA80() & 1;
}

uint64_t sub_1BDAD4744(uint64_t a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  _QWORD *v73;

  v2 = *a2;
  sub_1BDAD4010((uint64_t)&v71);
  v3 = *(_QWORD *)(v71 + 16);
  if (v3 == 2)
  {
    v5 = v73[2];
    if (v72)
    {
      if (v5)
      {
LABEL_7:
        v6 = v73[4];
        v7 = v73[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1BDC16BA0;
        *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
        v9 = sub_1BD942A90();
        *(_QWORD *)(v8 + 32) = v6;
        *(_QWORD *)(v8 + 64) = v9;
        *(_QWORD *)(v8 + 40) = v7;
        v10 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v11 = (void *)sub_1BDBFD6C8();
        v36 = objc_msgSend(v10, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v11, 0, 0, 1);

        v37 = sub_1BDBFD6F8();
        v39 = v38;

        swift_bridgeObjectRetain();
        v3 = (uint64_t)sub_1BDB09360(v8, v37, v39);
        swift_bridgeObjectRelease_n();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
        goto LABEL_22;
      }
    }
    else if (v5)
    {
      v20 = v73[4];
      v19 = v73[5];
      if (v5 == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BDC17EC0;
        *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
        v22 = sub_1BD942A90();
        *(_QWORD *)(inited + 32) = v20;
        *(_QWORD *)(inited + 40) = v19;
        v23 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(inited + 104) = v23;
        *(_QWORD *)(inited + 64) = v22;
        *(_QWORD *)(inited + 72) = 1;
        v24 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v25 = (void *)sub_1BDBFD6C8();
        v26 = objc_msgSend(v24, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v25, 0, 0, 0);
LABEL_26:
        v57 = v26;

        v58 = sub_1BDBFD6F8();
        v60 = v59;

        swift_bridgeObjectRetain();
        v51 = sub_1BDB8F750(inited, v58, v60);
        goto LABEL_27;
      }
      v41 = v73[6];
      v40 = v73[7];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      if ((v2 & 1) != 0)
      {
        v42 = swift_initStackObject();
        *(_OWORD *)(v42 + 16) = xmmword_1BDC17EC0;
        v43 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEA968];
        v44 = sub_1BD942A90();
        *(_QWORD *)(v42 + 32) = v20;
        *(_QWORD *)(v42 + 40) = v19;
        *(_QWORD *)(v42 + 96) = v43;
        *(_QWORD *)(v42 + 104) = v44;
        *(_QWORD *)(v42 + 64) = v44;
        *(_QWORD *)(v42 + 72) = v41;
        *(_QWORD *)(v42 + 80) = v40;
        v45 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46 = (void *)sub_1BDBFD6C8();
        v47 = objc_msgSend(v45, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v46, 0, 0, 1);

        v48 = sub_1BDBFD6F8();
        v50 = v49;

        swift_bridgeObjectRetain();
        v51 = sub_1BDB09360(v42, v48, v50);
LABEL_27:
        v3 = (uint64_t)v51;
        swift_bridgeObjectRelease_n();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
        goto LABEL_28;
      }
      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_1BDC17EC0;
      v63 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v62 + 56) = MEMORY[0x1E0DEA968];
      v64 = sub_1BD942A90();
      *(_QWORD *)(v62 + 32) = v20;
      *(_QWORD *)(v62 + 40) = v19;
      *(_QWORD *)(v62 + 96) = v63;
      *(_QWORD *)(v62 + 104) = v64;
      *(_QWORD *)(v62 + 64) = v64;
      *(_QWORD *)(v62 + 72) = v41;
      *(_QWORD *)(v62 + 80) = v40;
      v65 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66 = (void *)sub_1BDBFD6C8();
      v67 = objc_msgSend(v65, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v66, 0, 0, 1);

      v68 = sub_1BDBFD6F8();
      v70 = v69;

      swift_bridgeObjectRetain();
      v3 = (uint64_t)sub_1BDB09360(v62, v68, v70);
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
LABEL_22:
      swift_arrayDestroy();
      swift_deallocClassInstance();
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BDC16BA0;
    v32 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v14 + 64) = v32;
    *(_QWORD *)(v14 + 32) = 2;
    v33 = (void *)objc_opt_self();
    v17 = (void *)sub_1BDBFD6C8();
    v18 = objc_msgSend(v33, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v17, 0, 0, 0);
    goto LABEL_25;
  }
  v4 = v3 - 1;
  if (v3 != 1)
  {
    if (!v3)
      goto LABEL_29;
    if (v72)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BDC16BA0;
      v15 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v14 + 64) = v15;
      *(_QWORD *)(v14 + 32) = v4;
      v16 = (void *)objc_opt_self();
      v17 = (void *)sub_1BDBFD6C8();
      v18 = objc_msgSend(v16, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v17, 0, 0, 0);
LABEL_25:
      v53 = v18;

      v54 = sub_1BDBFD6F8();
      v56 = v55;

      swift_bridgeObjectRetain();
      v3 = (uint64_t)sub_1BDB8F750(v14, v54, v56);
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
LABEL_28:
      swift_arrayDestroy();
      goto LABEL_29;
    }
    if (!v73[2])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BDC16BA0;
      v34 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v14 + 64) = v34;
      *(_QWORD *)(v14 + 32) = v3;
      v35 = (void *)objc_opt_self();
      v17 = (void *)sub_1BDBFD6C8();
      v18 = objc_msgSend(v35, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v17, 0, 0, 0);
      goto LABEL_25;
    }
    v28 = v73[4];
    v27 = v73[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
    v29 = sub_1BD942A90();
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v27;
    v30 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 104) = v30;
    *(_QWORD *)(inited + 64) = v29;
    *(_QWORD *)(inited + 72) = v4;
    v31 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v25 = (void *)sub_1BDBFD6C8();
    v26 = objc_msgSend(v31, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v25, 0, 0, 0);
    goto LABEL_26;
  }
  if (!v72 && v73[2])
    goto LABEL_7;
  v12 = (void *)objc_opt_self();
  v13 = (void *)sub_1BDBFD6C8();
  v52 = objc_msgSend(v12, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v13, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1BDAD554C(uint64_t a1, uint64_t a2, char *a3)
{
  char v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  void *v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  void *v135;
  void *v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  void *v143;
  void *v144;
  id v145;
  uint64_t v146;
  uint64_t inited;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  void *v151;
  void *v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  void *v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  void *v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  void *v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  void *v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  void *v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  void *v218;
  void *v219;
  void *v220;
  void *v221;
  id v222;
  uint64_t v223;
  void *v224;
  void *v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  id v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  void *v248;
  void *v249;
  id v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void *v258;
  void *v259;
  id v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  unint64_t v268;
  uint64_t v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t v274;
  void *v275;
  void *v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  void *v280;
  id v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  id v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  void *v297;
  void *v298;
  id v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  void *v303;
  void *v304;
  id v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  id v309;
  uint64_t v310;
  void *v311;
  id v312;
  uint64_t v313;
  uint64_t v314;
  void *v315;
  id v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  unint64_t v325;
  void *v326;
  unint64_t v327;
  uint64_t v328;
  unint64_t v329;
  uint64_t v330;
  id v331;
  uint64_t v332;
  uint64_t v333;
  id v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  id v340;
  uint64_t v341;
  uint64_t v342;
  id v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  id v347;
  uint64_t v348;
  uint64_t v349;
  id v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  id v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  unsigned __int8 v362;
  char v363;
  _QWORD *v364;

  v3 = *a3;
  sub_1BDAD4010((uint64_t)&v361);
  v4 = v361;
  v5 = v362;
  v6 = v364;
  sub_1BDAD4010((uint64_t)&v361);
  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v361 + 16);
  if (v7 == 2)
  {
    if (v8 != 1)
      goto LABEL_20;
    v10 = v6[2];
    if (v5)
    {
      if (v10)
      {
        v11 = v6[4];
        v12 = v6[5];
        if (v363 || v362 || !v364[2])
        {
LABEL_173:
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v80 = swift_allocObject();
          *(_OWORD *)(v80 + 16) = xmmword_1BDC16BA0;
          *(_QWORD *)(v80 + 56) = MEMORY[0x1E0DEA968];
          v264 = sub_1BD942A90();
          *(_QWORD *)(v80 + 32) = v11;
          *(_QWORD *)(v80 + 64) = v264;
          *(_QWORD *)(v80 + 40) = v12;
          v82 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
          goto LABEL_174;
        }
        v139 = v364[4];
        v138 = v364[5];
        if ((v3 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v170 = swift_allocObject();
          *(_OWORD *)(v170 + 16) = xmmword_1BDC16BA0;
          *(_QWORD *)(v170 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v170 + 64) = sub_1BD942A90();
          *(_QWORD *)(v170 + 32) = v139;
          *(_QWORD *)(v170 + 40) = v138;
          v220 = (void *)objc_opt_self();
          v221 = (void *)sub_1BDBFD6C8();
          v222 = objc_msgSend(v220, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v221, 0, 0, 1);
LABEL_211:
          v347 = v222;

          v348 = sub_1BDBFD6F8();
          v319 = v349;

          v320 = v170;
          v321 = v348;
          goto LABEL_212;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v140 = swift_allocObject();
        *(_OWORD *)(v140 + 16) = xmmword_1BDC17EC0;
        v141 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v140 + 56) = MEMORY[0x1E0DEA968];
        v142 = sub_1BD942A90();
        *(_QWORD *)(v140 + 32) = v11;
        *(_QWORD *)(v140 + 40) = v12;
        *(_QWORD *)(v140 + 96) = v141;
        *(_QWORD *)(v140 + 104) = v142;
        *(_QWORD *)(v140 + 64) = v142;
        *(_QWORD *)(v140 + 72) = v139;
        *(_QWORD *)(v140 + 80) = v138;
        v143 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v144 = (void *)sub_1BDBFD6C8();
        v145 = objc_msgSend(v143, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v144, 0, 0, 1);
        goto LABEL_206;
      }
      if (v363)
        goto LABEL_194;
      if (v362)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1BDC16BA0;
        v121 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v73 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v73 + 64) = v121;
        *(_QWORD *)(v73 + 32) = 2;
        v122 = (void *)objc_opt_self();
        v76 = (void *)sub_1BDBFD6C8();
        v77 = objc_msgSend(v122, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
        goto LABEL_125;
      }
      if (!v364[2])
        goto LABEL_194;
      v173 = v364[4];
      v174 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v175 = swift_allocObject();
      v97 = v175;
      *(_OWORD *)(v175 + 16) = xmmword_1BDC17EC0;
      if ((v3 & 1) != 0)
        goto LABEL_133;
    }
    else
    {
      if (v10)
      {
        v46 = v6[4];
        v45 = v6[5];
        if (v10 == 1)
        {
          if ((v363 & 1) == 0)
          {
            if (v362)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
              v124 = swift_allocObject();
              *(_OWORD *)(v124 + 16) = xmmword_1BDC17EC0;
              *(_QWORD *)(v124 + 56) = MEMORY[0x1E0DEA968];
              v125 = sub_1BD942A90();
              *(_QWORD *)(v124 + 32) = v46;
              *(_QWORD *)(v124 + 40) = v45;
              v126 = MEMORY[0x1E0DEB490];
              *(_QWORD *)(v124 + 96) = MEMORY[0x1E0DEB418];
              *(_QWORD *)(v124 + 104) = v126;
              *(_QWORD *)(v124 + 64) = v125;
              *(_QWORD *)(v124 + 72) = 1;
              v127 = (void *)objc_opt_self();
              swift_bridgeObjectRetain();
              v128 = (void *)sub_1BDBFD6C8();
              v237 = objc_msgSend(v127, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v128, 0, 0, 0);

              v238 = sub_1BDBFD6F8();
              v240 = v239;

              v241 = v124;
              v242 = v238;
              goto LABEL_205;
            }
            if (v364[2])
            {
              v186 = v364[4];
              v187 = v364[5];
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
              v188 = swift_allocObject();
              *(_OWORD *)(v188 + 16) = xmmword_1BDC17ED0;
              v189 = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v188 + 56) = MEMORY[0x1E0DEA968];
              v190 = sub_1BD942A90();
              *(_QWORD *)(v188 + 64) = v190;
              if ((v3 & 1) != 0)
              {
                *(_QWORD *)(v188 + 32) = v186;
                *(_QWORD *)(v188 + 40) = v187;
                *(_QWORD *)(v188 + 96) = v189;
                *(_QWORD *)(v188 + 104) = v190;
                *(_QWORD *)(v188 + 72) = v46;
                *(_QWORD *)(v188 + 80) = v45;
                v191 = MEMORY[0x1E0DEB490];
                *(_QWORD *)(v188 + 136) = MEMORY[0x1E0DEB418];
                *(_QWORD *)(v188 + 144) = v191;
                *(_QWORD *)(v188 + 112) = 1;
              }
              else
              {
                *(_QWORD *)(v188 + 32) = v46;
                *(_QWORD *)(v188 + 40) = v45;
                v285 = MEMORY[0x1E0DEB490];
                *(_QWORD *)(v188 + 96) = MEMORY[0x1E0DEB418];
                *(_QWORD *)(v188 + 104) = v285;
                *(_QWORD *)(v188 + 72) = 1;
                *(_QWORD *)(v188 + 136) = v189;
                *(_QWORD *)(v188 + 144) = v190;
                *(_QWORD *)(v188 + 112) = v186;
                *(_QWORD *)(v188 + 120) = v187;
              }
              v192 = (void *)objc_opt_self();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v193 = (void *)sub_1BDBFD6C8();
              v286 = objc_msgSend(v192, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v193, 0, 0, 0);

              v287 = sub_1BDBFD6F8();
              v289 = v288;

              v290 = v188;
              v291 = v287;
              goto LABEL_209;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v97 = swift_allocObject();
          *(_OWORD *)(v97 + 16) = xmmword_1BDC17EC0;
          *(_QWORD *)(v97 + 56) = MEMORY[0x1E0DEA968];
          v270 = sub_1BD942A90();
          *(_QWORD *)(v97 + 32) = v46;
          *(_QWORD *)(v97 + 40) = v45;
          v271 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v97 + 96) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v97 + 104) = v271;
          *(_QWORD *)(v97 + 64) = v270;
          *(_QWORD *)(v97 + 72) = 1;
          v100 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
          goto LABEL_182;
        }
        v96 = v6[7];
        if (!v363 && !v362 && v364[2])
        {
          v207 = v364[4];
          v206 = v364[5];
          if ((v3 & 1) != 0)
          {
            v360 = v6[6];
            v208 = (void *)objc_opt_self();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v209 = (void *)sub_1BDBFD6C8();
            v210 = objc_msgSend(v208, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v209, 0, 0, 1);

            sub_1BDBFD6F8();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
            v211 = swift_allocObject();
            *(_OWORD *)(v211 + 16) = xmmword_1BDC17ED0;
            v212 = v207;
            v213 = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v211 + 56) = MEMORY[0x1E0DEA968];
            v214 = sub_1BD942A90();
            *(_QWORD *)(v211 + 32) = v46;
            *(_QWORD *)(v211 + 40) = v45;
            *(_QWORD *)(v211 + 96) = v213;
            *(_QWORD *)(v211 + 104) = v214;
            *(_QWORD *)(v211 + 64) = v214;
            *(_QWORD *)(v211 + 72) = v360;
            *(_QWORD *)(v211 + 80) = v96;
            *(_QWORD *)(v211 + 136) = v213;
            *(_QWORD *)(v211 + 144) = v214;
            *(_QWORD *)(v211 + 112) = v212;
            *(_QWORD *)(v211 + 120) = v206;
            v14 = sub_1BDBFD6D4();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_218;
          }
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v302 = swift_allocObject();
          *(_OWORD *)(v302 + 16) = xmmword_1BDC16BA0;
          *(_QWORD *)(v302 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v302 + 64) = sub_1BD942A90();
          *(_QWORD *)(v302 + 32) = v207;
          *(_QWORD *)(v302 + 40) = v206;
          v303 = (void *)objc_opt_self();
          v304 = (void *)sub_1BDBFD6C8();
          v305 = objc_msgSend(v303, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v304, 0, 0, 1);

          v306 = sub_1BDBFD6F8();
          v308 = v307;

          v14 = (uint64_t)sub_1BDB09360(v302, v306, v308);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
          swift_arrayDestroy();
LABEL_216:
          swift_deallocClassInstance();
          goto LABEL_217;
        }
        v277 = v6[6];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v140 = swift_allocObject();
        *(_OWORD *)(v140 + 16) = xmmword_1BDC17EC0;
        v278 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v140 + 56) = MEMORY[0x1E0DEA968];
        v279 = sub_1BD942A90();
        *(_QWORD *)(v140 + 32) = v46;
        *(_QWORD *)(v140 + 40) = v45;
        *(_QWORD *)(v140 + 96) = v278;
        *(_QWORD *)(v140 + 104) = v279;
        *(_QWORD *)(v140 + 64) = v279;
        *(_QWORD *)(v140 + 72) = v277;
        *(_QWORD *)(v140 + 80) = v96;
        v280 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v144 = (void *)sub_1BDBFD6C8();
        v145 = objc_msgSend(v280, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v144, 0, 0, 1);
LABEL_206:
        v334 = v145;

        v335 = sub_1BDBFD6F8();
        v337 = v336;

        v338 = sub_1BDB09360(v140, v335, v337);
LABEL_214:
        v14 = (uint64_t)v338;
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
        goto LABEL_215;
      }
      if ((v363 & 1) != 0 || v362 || !v364[2])
        goto LABEL_93;
      v173 = v364[4];
      v174 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v175 = swift_allocObject();
      v97 = v175;
      *(_OWORD *)(v175 + 16) = xmmword_1BDC17EC0;
      if ((v3 & 1) == 0)
      {
LABEL_133:
        *(_QWORD *)(v175 + 56) = MEMORY[0x1E0DEA968];
        v176 = sub_1BD942A90();
        *(_QWORD *)(v97 + 32) = v173;
        *(_QWORD *)(v97 + 40) = v174;
        v177 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v97 + 96) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v97 + 104) = v177;
        *(_QWORD *)(v97 + 64) = v176;
        *(_QWORD *)(v97 + 72) = 1;
        goto LABEL_177;
      }
    }
    v178 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v175 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v175 + 64) = v178;
    *(_QWORD *)(v175 + 32) = 1;
    *(_QWORD *)(v175 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v175 + 104) = sub_1BD942A90();
    *(_QWORD *)(v97 + 72) = v173;
    *(_QWORD *)(v97 + 80) = v174;
    goto LABEL_177;
  }
  v9 = v7 - 1;
  if (v7 != 1)
  {
    if (!v7)
    {
      if (v8 >= 2)
        goto LABEL_20;
      goto LABEL_14;
    }
    if (v8 == 1)
    {
      if (v5)
      {
        if (v363)
        {
          if ((v3 & 1) != 0)
            goto LABEL_50;
          goto LABEL_42;
        }
        if (v362)
        {
          if ((v3 & 1) != 0)
          {
LABEL_50:
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
            v73 = swift_allocObject();
            *(_OWORD *)(v73 + 16) = xmmword_1BDC16BA0;
            v74 = MEMORY[0x1E0DEB490];
            *(_QWORD *)(v73 + 56) = MEMORY[0x1E0DEB418];
            *(_QWORD *)(v73 + 64) = v74;
            *(_QWORD *)(v73 + 32) = v7;
            v75 = (void *)objc_opt_self();
            v76 = (void *)sub_1BDBFD6C8();
            v77 = objc_msgSend(v75, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
LABEL_125:
            v163 = v77;

            v164 = sub_1BDBFD6F8();
            v166 = v165;

            v14 = (uint64_t)sub_1BDB8F750(v73, v164, v166);
            swift_bridgeObjectRelease();
            swift_setDeallocating();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
            goto LABEL_85;
          }
LABEL_42:
          v47 = (void *)objc_opt_self();
          v48 = (void *)sub_1BDBFD6C8();
          v309 = objc_msgSend(v47, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v48, 0, 0, 1);

          v14 = sub_1BDBFD6F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return v14;
        }
        if (!v364[2])
        {
          if ((v3 & 1) != 0)
            goto LABEL_50;
          goto LABEL_42;
        }
        v105 = v364[4];
        v104 = v364[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        if ((v3 & 1) != 0)
        {
          v97 = swift_allocObject();
          *(_OWORD *)(v97 + 16) = xmmword_1BDC17EC0;
          v106 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v97 + 56) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v97 + 64) = v106;
          *(_QWORD *)(v97 + 32) = v9;
          *(_QWORD *)(v97 + 96) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v97 + 104) = sub_1BD942A90();
          *(_QWORD *)(v97 + 72) = v105;
          *(_QWORD *)(v97 + 80) = v104;
          v107 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
          v108 = (void *)sub_1BDBFD6C8();
          v109 = objc_msgSend(v107, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v108, 0, 0, 0);
LABEL_213:
          v350 = v109;

          v351 = sub_1BDBFD6F8();
          v353 = v352;

          v338 = sub_1BDB8F750(v97, v351, v353);
          goto LABEL_214;
        }
        v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1BDC16BA0;
        *(_QWORD *)(v80 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v80 + 64) = sub_1BD942A90();
        *(_QWORD *)(v80 + 32) = v105;
        *(_QWORD *)(v80 + 40) = v104;
        v183 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v184 = (void *)sub_1BDBFD6C8();
        v185 = objc_msgSend(v183, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v184, 0, 0, 1);
        goto LABEL_200;
      }
      if (v6[2])
      {
        v49 = v6[4];
        v50 = v6[5];
        if ((v363 & 1) != 0)
        {
          if ((v3 & 1) == 0)
            goto LABEL_42;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v51 = swift_allocObject();
          *(_OWORD *)(v51 + 16) = xmmword_1BDC17EC0;
          *(_QWORD *)(v51 + 56) = MEMORY[0x1E0DEA968];
          v52 = sub_1BD942A90();
          *(_QWORD *)(v51 + 32) = v49;
          *(_QWORD *)(v51 + 40) = v50;
          v53 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v51 + 96) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v51 + 104) = v53;
          *(_QWORD *)(v51 + 64) = v52;
          *(_QWORD *)(v51 + 72) = v9;
          v54 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
          v55 = (void *)sub_1BDBFD6C8();
          v56 = objc_msgSend(v54, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v55, 0, 0, 0);

          v57 = sub_1BDBFD6F8();
          v59 = v58;

          v14 = (uint64_t)sub_1BDB8F750(v51, v57, v59);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
          goto LABEL_85;
        }
        if (v362)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v97 = swift_allocObject();
          *(_OWORD *)(v97 + 16) = xmmword_1BDC17EC0;
          *(_QWORD *)(v97 + 56) = MEMORY[0x1E0DEA968];
          v98 = sub_1BD942A90();
          *(_QWORD *)(v97 + 32) = v49;
          *(_QWORD *)(v97 + 40) = v50;
          v99 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v97 + 96) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v97 + 104) = v99;
          *(_QWORD *)(v97 + 64) = v98;
          *(_QWORD *)(v97 + 72) = v9;
          v100 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
LABEL_182:
          v108 = (void *)sub_1BDBFD6C8();
          v109 = objc_msgSend(v100, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v108, 0, 0, 0);
          goto LABEL_213;
        }
        if (v364[2])
        {
          v146 = v364[5];
          v359 = v364[4];
          if ((v3 & 1) != 0)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1BDC17ED0;
            v148 = MEMORY[0x1E0DEA968];
            *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
            v149 = sub_1BD942A90();
            *(_QWORD *)(inited + 32) = v49;
            *(_QWORD *)(inited + 40) = v50;
            v150 = MEMORY[0x1E0DEB490];
            *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEB418];
            *(_QWORD *)(inited + 104) = v150;
            *(_QWORD *)(inited + 64) = v149;
            *(_QWORD *)(inited + 72) = v9;
            *(_QWORD *)(inited + 136) = v148;
            *(_QWORD *)(inited + 144) = v149;
            *(_QWORD *)(inited + 112) = v359;
            *(_QWORD *)(inited + 120) = v146;
            v151 = (void *)objc_opt_self();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v152 = (void *)sub_1BDBFD6C8();
            v153 = objc_msgSend(v151, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v152, 0, 0, 0);

            v154 = sub_1BDBFD6F8();
            v156 = v155;

            v14 = (uint64_t)sub_1BDB8F750(inited, v154, v156);
          }
          else
          {
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
            v223 = swift_initStackObject();
            *(_OWORD *)(v223 + 16) = xmmword_1BDC16BA0;
            *(_QWORD *)(v223 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v223 + 64) = sub_1BD942A90();
            *(_QWORD *)(v223 + 32) = v359;
            *(_QWORD *)(v223 + 40) = v146;
            v224 = (void *)objc_opt_self();
            v225 = (void *)sub_1BDBFD6C8();
            v226 = objc_msgSend(v224, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v225, 0, 0, 1);

            v227 = sub_1BDBFD6F8();
            v229 = v228;

            v14 = (uint64_t)sub_1BDB09360(v223, v227, v229);
          }
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v215 = swift_initStackObject();
          *(_OWORD *)(v215 + 16) = xmmword_1BDC17EC0;
          *(_QWORD *)(v215 + 56) = MEMORY[0x1E0DEA968];
          v216 = sub_1BD942A90();
          *(_QWORD *)(v215 + 32) = v49;
          *(_QWORD *)(v215 + 40) = v50;
          v217 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v215 + 96) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v215 + 104) = v217;
          *(_QWORD *)(v215 + 64) = v216;
          *(_QWORD *)(v215 + 72) = v9;
          v218 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
          v219 = (void *)sub_1BDBFD6C8();
          v281 = objc_msgSend(v218, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v219, 0, 0, 0);

          v282 = sub_1BDBFD6F8();
          v284 = v283;

          v14 = (uint64_t)sub_1BDB8F750(v215, v282, v284);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
        }
LABEL_186:
        swift_arrayDestroy();
        goto LABEL_217;
      }
      if ((v363 & 1) != 0 || v362)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = xmmword_1BDC16BA0;
        *(_QWORD *)(v93 + 32) = v7;
        v94 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v93 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v93 + 64) = v94;
        v95 = (void *)objc_opt_self();
LABEL_195:
        v311 = (void *)sub_1BDBFD6C8();
        v312 = objc_msgSend(v95, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v311, 0, 0, 0);
LABEL_210:
        v343 = v312;

        v344 = sub_1BDBFD6F8();
        v346 = v345;

        v338 = sub_1BDB8F750(v93, v344, v346);
        goto LABEL_214;
      }
      if (!v364[2])
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        if ((v3 & 1) != 0)
        {
          v256 = swift_initStackObject();
          *(_OWORD *)(v256 + 16) = xmmword_1BDC16BA0;
          v257 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v256 + 56) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v256 + 64) = v257;
          *(_QWORD *)(v256 + 32) = v7;
          v258 = (void *)objc_opt_self();
          v259 = (void *)sub_1BDBFD6C8();
          v260 = objc_msgSend(v258, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v259, 0, 0, 0);

          v261 = sub_1BDBFD6F8();
          v263 = v262;

          v14 = (uint64_t)sub_1BDB8F750(v256, v261, v263);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
          goto LABEL_186;
        }
        v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = xmmword_1BDC16BA0;
        v314 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v93 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v93 + 64) = v314;
        *(_QWORD *)(v93 + 32) = v7;
        v315 = (void *)objc_opt_self();
        v311 = (void *)sub_1BDBFD6C8();
        v312 = objc_msgSend(v315, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v311, 0, 0, 0);
        goto LABEL_210;
      }
      v179 = v364[4];
      v180 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v181 = swift_allocObject();
      v97 = v181;
      *(_OWORD *)(v181 + 16) = xmmword_1BDC17EC0;
      if ((v3 & 1) != 0)
      {
        v182 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v181 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v181 + 64) = v182;
        *(_QWORD *)(v181 + 32) = v9;
        *(_QWORD *)(v181 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v181 + 104) = sub_1BD942A90();
        *(_QWORD *)(v97 + 72) = v179;
        *(_QWORD *)(v97 + 80) = v180;
      }
      else
      {
        *(_QWORD *)(v181 + 56) = MEMORY[0x1E0DEA968];
        v268 = sub_1BD942A90();
        *(_QWORD *)(v97 + 32) = v179;
        *(_QWORD *)(v97 + 40) = v180;
        v269 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v97 + 96) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v97 + 104) = v269;
        *(_QWORD *)(v97 + 64) = v268;
        *(_QWORD *)(v97 + 72) = v9;
      }
LABEL_177:
      v267 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v108 = (void *)sub_1BDBFD6C8();
      v109 = objc_msgSend(v267, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v108, 0, 0, 0);
      goto LABEL_213;
    }
LABEL_20:
    if (v363)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1BDC16BA0;
      v16 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v15 + 64) = v16;
      *(_QWORD *)(v15 + 32) = v7;
      v17 = (void *)objc_opt_self();
      v18 = (void *)sub_1BDBFD6C8();
      v19 = objc_msgSend(v17, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v18, 0, 0, 0);

      v20 = sub_1BDBFD6F8();
      v22 = v21;

      v14 = (uint64_t)sub_1BDB8F750(v15, v20, v22);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
      swift_arrayDestroy();
LABEL_217:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_218;
    }
    if (v362)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1BDC16BA0;
      v24 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v23 + 64) = v24;
      *(_QWORD *)(v23 + 32) = v8 - 1;
      v25 = (void *)objc_opt_self();
      v26 = (void *)sub_1BDBFD6C8();
      v27 = objc_msgSend(v25, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v26, 0, 0, 0);
LABEL_24:
      v28 = v27;

      v29 = sub_1BDBFD6F8();
      v31 = v30;

      v14 = (uint64_t)sub_1BDB8F750(v23, v29, v31);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
      swift_arrayDestroy();
      goto LABEL_217;
    }
    v32 = v364[2];
    if (v8 != 2 || v32 < 2)
    {
      if (v32)
      {
        v34 = v364[4];
        v35 = v364[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v36 = swift_initStackObject();
        *(_OWORD *)(v36 + 16) = xmmword_1BDC17EC0;
        *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
        v37 = sub_1BD942A90();
        *(_QWORD *)(v36 + 32) = v34;
        *(_QWORD *)(v36 + 40) = v35;
        v38 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v36 + 96) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v36 + 104) = v38;
        *(_QWORD *)(v36 + 64) = v37;
        *(_QWORD *)(v36 + 72) = v8 - 1;
        v39 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v40 = (void *)sub_1BDBFD6C8();
        v41 = objc_msgSend(v39, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v40, 0, 0, 0);

        v42 = sub_1BDBFD6F8();
        v44 = v43;

        v14 = (uint64_t)sub_1BDB8F750(v36, v42, v44);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
        swift_arrayDestroy();
        goto LABEL_217;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1BDC16BA0;
      v101 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v23 + 64) = v101;
      *(_QWORD *)(v23 + 32) = v8;
      v102 = (void *)objc_opt_self();
      v26 = (void *)sub_1BDBFD6C8();
      v27 = objc_msgSend(v102, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v26, 0, 0, 0);
      goto LABEL_24;
    }
    v61 = v364[4];
    v60 = v364[5];
    v63 = v364[6];
    v62 = v364[7];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
    v64 = swift_initStackObject();
    *(_OWORD *)(v64 + 16) = xmmword_1BDC17EC0;
    v65 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v64 + 56) = MEMORY[0x1E0DEA968];
    v66 = sub_1BD942A90();
    *(_QWORD *)(v64 + 32) = v61;
    *(_QWORD *)(v64 + 40) = v60;
    *(_QWORD *)(v64 + 96) = v65;
    *(_QWORD *)(v64 + 104) = v66;
    *(_QWORD *)(v64 + 64) = v66;
    *(_QWORD *)(v64 + 72) = v63;
    *(_QWORD *)(v64 + 80) = v62;
    v67 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v68 = (void *)sub_1BDBFD6C8();
    v69 = objc_msgSend(v67, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v68, 0, 0, 1);

    v70 = sub_1BDBFD6F8();
    v72 = v71;

    v14 = (uint64_t)sub_1BDB09360(v64, v70, v72);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_218:
    swift_bridgeObjectRelease();
    return v14;
  }
  if (v8 == 2)
  {
    if (v5)
    {
      if (v363)
        goto LABEL_42;
      v103 = v364[2];
      if (v362)
      {
        if (v103)
          goto LABEL_128;
LABEL_93:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = xmmword_1BDC16BA0;
        *(_QWORD *)(v93 + 32) = 2;
        v123 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v93 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v93 + 64) = v123;
        v95 = (void *)objc_opt_self();
        goto LABEL_195;
      }
      if (v103)
      {
        v157 = v364[4];
        v158 = v364[5];
        if (v103 == 1)
          goto LABEL_165;
        v244 = v364[6];
        v243 = v364[7];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v245 = swift_allocObject();
        *(_OWORD *)(v245 + 16) = xmmword_1BDC17EC0;
        v246 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v245 + 56) = MEMORY[0x1E0DEA968];
        v247 = sub_1BD942A90();
        *(_QWORD *)(v245 + 32) = v157;
        *(_QWORD *)(v245 + 40) = v158;
        *(_QWORD *)(v245 + 96) = v246;
        *(_QWORD *)(v245 + 104) = v247;
        *(_QWORD *)(v245 + 64) = v247;
        *(_QWORD *)(v245 + 72) = v244;
        *(_QWORD *)(v245 + 80) = v243;
        v248 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v249 = (void *)sub_1BDBFD6C8();
        v250 = objc_msgSend(v248, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v249, 0, 0, 1);

        v251 = sub_1BDBFD6F8();
        v253 = v252;

        v254 = v245;
        v255 = v251;
LABEL_191:
        v14 = (uint64_t)sub_1BDB09360(v254, v255, v253);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        goto LABEL_217;
      }
LABEL_160:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(v73 + 32) = 2;
      v230 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v73 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v73 + 64) = v230;
      v231 = (void *)objc_opt_self();
      v76 = (void *)sub_1BDBFD6C8();
      v77 = objc_msgSend(v231, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
      goto LABEL_125;
    }
    if (v6[2])
    {
      v79 = v6[4];
      v78 = v6[5];
      if ((v363 & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1BDC16BA0;
        *(_QWORD *)(v80 + 56) = MEMORY[0x1E0DEA968];
        v81 = sub_1BD942A90();
        *(_QWORD *)(v80 + 32) = v79;
        *(_QWORD *)(v80 + 64) = v81;
        *(_QWORD *)(v80 + 40) = v78;
        v82 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
LABEL_174:
        v184 = (void *)sub_1BDBFD6C8();
        v185 = objc_msgSend(v82, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v184, 0, 0, 1);
LABEL_200:
        v316 = v185;

        v317 = sub_1BDBFD6F8();
        v319 = v318;

        v320 = v80;
        v321 = v317;
LABEL_212:
        v338 = sub_1BDB09360(v320, v321, v319);
        goto LABEL_214;
      }
      v129 = v364[2];
      if (v362)
      {
        if (!v129)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v265 = swift_allocObject();
          v97 = v265;
          *(_OWORD *)(v265 + 16) = xmmword_1BDC17EC0;
          if ((v3 & 1) != 0)
          {
            v266 = MEMORY[0x1E0DEB490];
            *(_QWORD *)(v265 + 56) = MEMORY[0x1E0DEB418];
            *(_QWORD *)(v265 + 64) = v266;
            *(_QWORD *)(v265 + 32) = 1;
            *(_QWORD *)(v265 + 96) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v265 + 104) = sub_1BD942A90();
            *(_QWORD *)(v97 + 72) = v79;
            *(_QWORD *)(v97 + 80) = v78;
          }
          else
          {
            *(_QWORD *)(v265 + 56) = MEMORY[0x1E0DEA968];
            v327 = sub_1BD942A90();
            *(_QWORD *)(v97 + 32) = v79;
            *(_QWORD *)(v97 + 40) = v78;
            v328 = MEMORY[0x1E0DEB490];
            *(_QWORD *)(v97 + 96) = MEMORY[0x1E0DEB418];
            *(_QWORD *)(v97 + 104) = v328;
            *(_QWORD *)(v97 + 64) = v327;
            *(_QWORD *)(v97 + 72) = 1;
          }
          goto LABEL_177;
        }
        v130 = v364[4];
        v131 = v364[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v132 = swift_allocObject();
        *(_OWORD *)(v132 + 16) = xmmword_1BDC17EC0;
        v133 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v132 + 56) = MEMORY[0x1E0DEA968];
        v134 = sub_1BD942A90();
        *(_QWORD *)(v132 + 64) = v134;
        if ((v3 & 1) != 0)
        {
          *(_QWORD *)(v132 + 32) = v79;
          *(_QWORD *)(v132 + 40) = v78;
          *(_QWORD *)(v132 + 96) = v133;
          *(_QWORD *)(v132 + 104) = v134;
          *(_QWORD *)(v132 + 72) = v130;
          *(_QWORD *)(v132 + 80) = v131;
        }
        else
        {
          *(_QWORD *)(v132 + 32) = v130;
          *(_QWORD *)(v132 + 40) = v131;
          *(_QWORD *)(v132 + 96) = v133;
          *(_QWORD *)(v132 + 104) = v134;
          *(_QWORD *)(v132 + 72) = v79;
          *(_QWORD *)(v132 + 80) = v78;
        }
        goto LABEL_103;
      }
      if (v129)
      {
        v194 = v364[4];
        v195 = v364[5];
        if (v129 != 1)
        {
          v293 = v364[6];
          v292 = v364[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v294 = swift_allocObject();
          *(_OWORD *)(v294 + 16) = xmmword_1BDC17EC0;
          v295 = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v294 + 56) = MEMORY[0x1E0DEA968];
          v296 = sub_1BD942A90();
          *(_QWORD *)(v294 + 32) = v194;
          *(_QWORD *)(v294 + 40) = v195;
          *(_QWORD *)(v294 + 96) = v295;
          *(_QWORD *)(v294 + 104) = v296;
          *(_QWORD *)(v294 + 64) = v296;
          *(_QWORD *)(v294 + 72) = v293;
          *(_QWORD *)(v294 + 80) = v292;
          v297 = (void *)objc_opt_self();
          v298 = (void *)sub_1BDBFD6C8();
          v299 = objc_msgSend(v297, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v298, 0, 0, 1);

          v300 = sub_1BDBFD6F8();
          v253 = v301;

          v254 = v294;
          v255 = v300;
          goto LABEL_191;
        }
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v196 = swift_allocObject();
        *(_OWORD *)(v196 + 16) = xmmword_1BDC17ED0;
        v197 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v196 + 56) = MEMORY[0x1E0DEA968];
        v198 = sub_1BD942A90();
        *(_QWORD *)(v196 + 64) = v198;
        if ((v3 & 1) != 0)
        {
          *(_QWORD *)(v196 + 32) = v194;
          *(_QWORD *)(v196 + 40) = v195;
          v199 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v196 + 96) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v196 + 104) = v199;
          *(_QWORD *)(v196 + 72) = 1;
          *(_QWORD *)(v196 + 136) = v197;
          *(_QWORD *)(v196 + 144) = v198;
          *(_QWORD *)(v196 + 112) = v79;
          *(_QWORD *)(v196 + 120) = v78;
        }
        else
        {
          *(_QWORD *)(v196 + 32) = v79;
          *(_QWORD *)(v196 + 40) = v78;
          *(_QWORD *)(v196 + 96) = v197;
          *(_QWORD *)(v196 + 104) = v198;
          *(_QWORD *)(v196 + 72) = v194;
          *(_QWORD *)(v196 + 80) = v195;
          v339 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v196 + 136) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v196 + 144) = v339;
          *(_QWORD *)(v196 + 112) = 1;
        }
        v200 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v201 = (void *)sub_1BDBFD6C8();
        v340 = objc_msgSend(v200, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v201, 0, 0, 0);

        v341 = sub_1BDBFD6F8();
        v289 = v342;

        v290 = v196;
        v291 = v341;
LABEL_209:
        v14 = (uint64_t)sub_1BDB8F750(v290, v291, v289);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
LABEL_215:
        swift_arrayDestroy();
        goto LABEL_216;
      }
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v272 = swift_allocObject();
      v273 = (_QWORD *)v272;
      *(_OWORD *)(v272 + 16) = xmmword_1BDC17EC0;
      if ((v3 & 1) != 0)
      {
        v274 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v272 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v272 + 64) = v274;
        *(_QWORD *)(v272 + 32) = 2;
        *(_QWORD *)(v272 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v272 + 104) = sub_1BD942A90();
        v273[9] = v79;
        v273[10] = v78;
      }
      else
      {
        *(_QWORD *)(v272 + 56) = MEMORY[0x1E0DEA968];
        v329 = sub_1BD942A90();
        v273[4] = v79;
        v273[5] = v78;
        v330 = MEMORY[0x1E0DEB490];
        v273[12] = MEMORY[0x1E0DEB418];
        v273[13] = v330;
        v273[8] = v329;
        v273[9] = 2;
      }
      v275 = (void *)objc_opt_self();
      v276 = (void *)sub_1BDBFD6C8();
      v331 = objc_msgSend(v275, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v276, 0, 0, 0);

      v332 = sub_1BDBFD6F8();
      v240 = v333;

      v241 = (uint64_t)v273;
      v242 = v332;
LABEL_205:
      v14 = (uint64_t)sub_1BDB8F750(v241, v242, v240);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
      goto LABEL_85;
    }
    if ((v363 & 1) != 0)
      goto LABEL_42;
    v167 = v364[2];
    if (!v362)
    {
      if (v167)
      {
        v157 = v364[4];
        v158 = v364[5];
        if (v167 != 1)
        {
          v322 = v364[6];
          v323 = v364[7];
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
          v132 = swift_allocObject();
          *(_OWORD *)(v132 + 16) = xmmword_1BDC17EC0;
          v324 = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v132 + 56) = MEMORY[0x1E0DEA968];
          v325 = sub_1BD942A90();
          *(_QWORD *)(v132 + 32) = v157;
          *(_QWORD *)(v132 + 40) = v158;
          *(_QWORD *)(v132 + 96) = v324;
          *(_QWORD *)(v132 + 104) = v325;
          *(_QWORD *)(v132 + 64) = v325;
          *(_QWORD *)(v132 + 72) = v322;
          *(_QWORD *)(v132 + 80) = v323;
          v326 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v136 = (void *)sub_1BDBFD6C8();
          v137 = objc_msgSend(v326, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v136, 0, 0, 1);
          goto LABEL_220;
        }
LABEL_165:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v97 = swift_allocObject();
        *(_OWORD *)(v97 + 16) = xmmword_1BDC17EC0;
        *(_QWORD *)(v97 + 56) = MEMORY[0x1E0DEA968];
        v232 = sub_1BD942A90();
        *(_QWORD *)(v97 + 32) = v157;
        *(_QWORD *)(v97 + 40) = v158;
        v233 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v97 + 96) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v97 + 104) = v233;
        *(_QWORD *)(v97 + 64) = v232;
        *(_QWORD *)(v97 + 72) = 1;
        v100 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        goto LABEL_182;
      }
      goto LABEL_160;
    }
    if (v167)
    {
LABEL_128:
      v168 = v364[4];
      v169 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v170 = swift_allocObject();
      *(_OWORD *)(v170 + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(v170 + 56) = MEMORY[0x1E0DEA968];
      v171 = sub_1BD942A90();
      *(_QWORD *)(v170 + 32) = v168;
      *(_QWORD *)(v170 + 64) = v171;
      *(_QWORD *)(v170 + 40) = v169;
      v172 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
LABEL_198:
      v221 = (void *)sub_1BDBFD6C8();
      v222 = objc_msgSend(v172, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v221, 0, 0, 1);
      goto LABEL_211;
    }
LABEL_194:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
    v93 = swift_allocObject();
    *(_OWORD *)(v93 + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(v93 + 32) = 1;
    v310 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v93 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v93 + 64) = v310;
    v95 = (void *)objc_opt_self();
    goto LABEL_195;
  }
  v13 = v8 - 1;
  if (v8 == 1)
  {
    if (v5)
    {
      if (v363)
        goto LABEL_42;
      if (v362)
      {
        if ((v3 & 1) == 0)
          goto LABEL_42;
        goto LABEL_14;
      }
      if (!v364[2])
        goto LABEL_42;
      goto LABEL_128;
    }
    if (!v6[2])
    {
      if ((v363 & 1) != 0 || v362)
        goto LABEL_42;
      if (v364[2])
      {
        v234 = v364[4];
        v235 = v364[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v170 = swift_allocObject();
        *(_OWORD *)(v170 + 16) = xmmword_1BDC16BA0;
        *(_QWORD *)(v170 + 56) = MEMORY[0x1E0DEA968];
        v236 = sub_1BD942A90();
        *(_QWORD *)(v170 + 32) = v234;
        *(_QWORD *)(v170 + 64) = v236;
        *(_QWORD *)(v170 + 40) = v235;
        v172 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v170 = swift_allocObject();
        *(_OWORD *)(v170 + 16) = xmmword_1BDC16BA0;
        *(_QWORD *)(v170 + 32) = 1;
        v313 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v170 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v170 + 64) = v313;
        v172 = (void *)objc_opt_self();
      }
      goto LABEL_198;
    }
    v11 = v6[4];
    v12 = v6[5];
    if ((v363 & 1) == 0 && !v362 && v364[2])
    {
      v203 = v364[4];
      v202 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v132 = swift_allocObject();
      *(_OWORD *)(v132 + 16) = xmmword_1BDC17EC0;
      v204 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v132 + 56) = MEMORY[0x1E0DEA968];
      v205 = sub_1BD942A90();
      *(_QWORD *)(v132 + 64) = v205;
      if ((v3 & 1) != 0)
      {
        *(_QWORD *)(v132 + 32) = v203;
        *(_QWORD *)(v132 + 40) = v202;
        *(_QWORD *)(v132 + 96) = v204;
        *(_QWORD *)(v132 + 104) = v205;
        *(_QWORD *)(v132 + 72) = v11;
        *(_QWORD *)(v132 + 80) = v12;
      }
      else
      {
        *(_QWORD *)(v132 + 32) = v11;
        *(_QWORD *)(v132 + 40) = v12;
        *(_QWORD *)(v132 + 96) = v204;
        *(_QWORD *)(v132 + 104) = v205;
        *(_QWORD *)(v132 + 72) = v203;
        *(_QWORD *)(v132 + 80) = v202;
      }
LABEL_103:
      v135 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v136 = (void *)sub_1BDBFD6C8();
      v137 = objc_msgSend(v135, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v136, 0, 0, 1);
LABEL_220:
      v355 = v137;

      v356 = sub_1BDBFD6F8();
      v358 = v357;

      v14 = (uint64_t)sub_1BDB09360(v132, v356, v358);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
      goto LABEL_215;
    }
    goto LABEL_173;
  }
  if (v8)
  {
    if (v363)
      goto LABEL_42;
    v83 = v364[2];
    if (v362)
    {
      if (!v83)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1BDC16BA0;
        v159 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v73 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v73 + 64) = v159;
        *(_QWORD *)(v73 + 32) = v13;
        v160 = (void *)objc_opt_self();
        v76 = (void *)sub_1BDBFD6C8();
        v77 = objc_msgSend(v160, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
        goto LABEL_125;
      }
      v84 = v364[4];
      v85 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v86 = swift_allocObject();
      *(_OWORD *)(v86 + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(v86 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v86 + 64) = sub_1BD942A90();
      *(_QWORD *)(v86 + 32) = v84;
      *(_QWORD *)(v86 + 40) = v85;
      v87 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v88 = (void *)sub_1BDBFD6C8();
      v89 = objc_msgSend(v87, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v88, 0, 0, 1);

      v90 = sub_1BDBFD6F8();
      v92 = v91;

      v14 = (uint64_t)sub_1BDB09360(v86, v90, v92);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
    }
    else
    {
      if (!v83)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
        v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1BDC16BA0;
        v161 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v73 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v73 + 64) = v161;
        *(_QWORD *)(v73 + 32) = v8;
        v162 = (void *)objc_opt_self();
        v76 = (void *)sub_1BDBFD6C8();
        v77 = objc_msgSend(v162, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
        goto LABEL_125;
      }
      v111 = v364[4];
      v110 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
      v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = xmmword_1BDC17EC0;
      *(_QWORD *)(v112 + 56) = MEMORY[0x1E0DEA968];
      v113 = sub_1BD942A90();
      *(_QWORD *)(v112 + 32) = v111;
      *(_QWORD *)(v112 + 40) = v110;
      v114 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v112 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v112 + 104) = v114;
      *(_QWORD *)(v112 + 64) = v113;
      *(_QWORD *)(v112 + 72) = v13;
      v115 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v116 = (void *)sub_1BDBFD6C8();
      v117 = objc_msgSend(v115, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v116, 0, 0, 0);

      v118 = sub_1BDBFD6F8();
      v120 = v119;

      v14 = (uint64_t)sub_1BDB8F750(v112, v118, v120);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
    }
LABEL_85:
    swift_arrayDestroy();
    swift_deallocClassInstance();
    goto LABEL_217;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

