unint64_t sub_1BDB6B254(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1BDAC31B0(v21, v20, v22);
      v17 = sub_1BDBFD6BC();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1BDB6B384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1BDAF52F4();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1BDBFE070();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1BDBFE070();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

double sub_1BDB6B48C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BDB6AD34(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BDBCD81C();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1BDBFC948();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_1BDB35FB0(*(_QWORD *)(v9 + 56) + 40 * v6, a2, &qword_1ED23AEA0);
    sub_1BDB6B924(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_BYTE *)(a2 + 32) = -1;
  }
  return result;
}

uint64_t sub_1BDB6B58C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BDB6AD34(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BDBCDA74();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1BDBFC948();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1BDB6BBE4(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1BDB6B664@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BDB6AB9C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BDBCDCA4();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1BDBFCB40();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    *a2 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
    sub_1BDB6BE84(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = xmmword_1BDC1C3D0;
  }
  return result;
}

unint64_t sub_1BDB6B750(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BDBFE1C0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BDBFEA0C();
        swift_bridgeObjectRetain();
        sub_1BDBFD794();
        v9 = sub_1BDBFEA30();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BDB6B924(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 *v25;
  BOOL v26;
  __int128 v27;
  __int128 v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = sub_1BDBFC948();
  v38 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1BDBFE1C0();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v37 = (result + 1) & v11;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v36(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1BDAC31B0(&qword_1ED23ACF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
        v18 = sub_1BDBFD614();
        result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = v23 + 40 * a1;
            v25 = (__int128 *)(v23 + 40 * v10);
            if (40 * a1 < (uint64_t)(40 * v10) || v24 >= (unint64_t)v25 + 40 || (v26 = a1 == v10, a1 = v10, !v26))
            {
              v27 = *v25;
              v28 = v25[1];
              *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
              *(_OWORD *)v24 = v27;
              *(_OWORD *)(v24 + 16) = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BDB6BBE4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_1BDBFC948();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1BDBFE1C0();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1BDAC31B0(&qword_1ED23ACF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
        v18 = sub_1BDBFD614();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BDB6BE84(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_1BDBFCB40();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1BDBFE1C0();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1BDBFD614();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 16 * a1);
            v25 = (_OWORD *)(v23 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1BDB6C124(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BDAC358C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
        return sub_1BD942258(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BDBCD24C();
      goto LABEL_7;
    }
    sub_1BDBCEB3C(v15, a4 & 1);
    v21 = sub_1BDAC358C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BDB6C804(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1BDBFE994();
  __break(1u);
  return result;
}

uint64_t sub_1BDB6C254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1BDAC358C(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1BDBCD430();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BDBCEE38(v17, a5 & 1);
  v23 = sub_1BDAC358C(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BDBFE994();
  __break(1u);
  return result;
}

uint64_t sub_1BDB6C3C8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1BDBFC948();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BDB6AD34(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_1BDB6DB44(a1, v20[7] + 40 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1BDBCD81C();
      goto LABEL_7;
    }
    sub_1BDBCF6B0(v17, a3 & 1);
    v22 = sub_1BDB6AD34(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_1BDB6DB44(a1, v20[7] + 40 * v14);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1BDB6C8BC(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1BDBFE994();
  __break(1u);
  return result;
}

uint64_t sub_1BDB6C53C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1BDBFC948();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BDB6AD34(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1BDBCDA74();
    goto LABEL_7;
  }
  sub_1BDBCFA70(v17, a3 & 1);
  v23 = sub_1BDB6AD34(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1BDBFE994();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1BDB6C968(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1BDB6C698(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = (_QWORD **)v4;
  v28 = a2;
  v9 = sub_1BDBFCB40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_1BDB6AB9C(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7] + 16 * v15;
      result = sub_1BDAEB7EC(*(_QWORD *)v22, *(_QWORD *)(v22 + 8));
      v24 = v28;
      *(_QWORD *)v22 = a1;
      *(_QWORD *)(v22 + 8) = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1BDBCDCA4();
    goto LABEL_7;
  }
  sub_1BDBCFE04(v18, a4 & 1);
  v25 = sub_1BDB6AB9C(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_1BDBFE994();
    __break(1u);
    return result;
  }
  v15 = v25;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_1BDB6CA00(v15, (uint64_t)v12, a1, v28, v21);
}

_OWORD *sub_1BDB6C804(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BD942258(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_1BDB6C86C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_1BDB6C8BC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BDBFC948();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_1BDB35FB0(a3, a4[7] + 40 * a1, &qword_1ED23AEA0);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1BDB6C968(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BDBFC948();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1BDB6CA00(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_1BDBFCB40();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

void sub_1BDB6CAA0(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x1E0C80C00];
  v3[3] = MEMORY[0x1E0CB0338];
  v3[4] = MEMORY[0x1E0CB0318];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_1BDB6CB04
     + *((int *)qword_1BDB6CCA8 + (__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x1E0CB0338])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_1BDB6CB14()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1BDB4EB54(v1, v0);
  sub_1BDBFC96C();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v3);
}

uint64_t sub_1BDB6CCB8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BDBFC5C4();
  if (!result || (result = sub_1BDBFC5DC(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1BDBFC5D0();
      return sub_1BDBFC96C();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB6CD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1BDB6A8DC((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1BDB6CE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1BDBFC5C4();
  v11 = result;
  if (result)
  {
    result = sub_1BDBFC5DC();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1BDBFC5D0();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1BDB6A8DC(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1BDB6CED0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1BDB6CF1C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1BDB6CF50 + *((int *)qword_1BDB6D128 + (v0 >> 62))))();
}

uint64_t sub_1BDB6CF60@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t type metadata accessor for MessageChunking.Message.PartialCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageChunking.Message.PartialCodingKeys);
}

uint64_t type metadata accessor for MessageChunking.Message.CompleteCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageChunking.Message.CompleteCodingKeys);
}

uint64_t type metadata accessor for MessageChunking.Message.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageChunking.Message.CodingKeys);
}

unint64_t sub_1BDB6D16C()
{
  unint64_t result;

  result = qword_1EF50E368;
  if (!qword_1EF50E368)
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF50E368);
  }
  return result;
}

unint64_t sub_1BDB6D1B0()
{
  unint64_t result;

  result = qword_1EF50E370[0];
  if (!qword_1EF50E370[0])
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, qword_1EF50E370);
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageChunking()
{
  return &type metadata for MessageChunking;
}

uint64_t sub_1BDB6D204()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  void *v3;
  char *v4;

  v3 = &unk_1BDC1C870;
  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    v4 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1BDB6D2A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BDBFCB40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
      *(uint64_t *)((char *)a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
      *(uint64_t *)((char *)a1 + v7[16]) = *(uint64_t *)((char *)a2 + v7[16]);
      v8 = v7[20];
      v9 = (uint64_t *)((char *)a1 + v8);
      v10 = (uint64_t *)((char *)a2 + v8);
      v11 = *v10;
      v12 = v10[1];
      sub_1BDB4EB54(*v10, v12);
      *v9 = v11;
      v9[1] = v12;
    }
    else
    {
      v15 = *a2;
      v14 = a2[1];
      sub_1BDB4EB54(v15, v14);
      *a1 = v15;
      a1[1] = v14;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BDB6D3B0(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1BDBFCB40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360) + 80);
  }
  return sub_1BDAEB7EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *sub_1BDB6D40C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1BDBFCB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
    *(uint64_t *)((char *)a1 + v5[12]) = *(uint64_t *)((char *)a2 + v5[12]);
    *(uint64_t *)((char *)a1 + v5[16]) = *(uint64_t *)((char *)a2 + v5[16]);
    v6 = v5[20];
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = *v8;
    v10 = v8[1];
    sub_1BDB4EB54(*v8, v10);
    *v7 = v9;
    v7[1] = v10;
  }
  else
  {
    v12 = *a2;
    v11 = a2[1];
    sub_1BDB4EB54(v12, v11);
    *a1 = v12;
    a1[1] = v11;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1BDB6D4F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_1BDBFCB40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
      *(uint64_t *)((char *)a1 + v6[12]) = *(uint64_t *)((char *)a2 + v6[12]);
      *(uint64_t *)((char *)a1 + v6[16]) = *(uint64_t *)((char *)a2 + v6[16]);
      v7 = v6[20];
      v8 = (uint64_t *)((char *)a1 + v7);
      v9 = (uint64_t *)((char *)a2 + v7);
      v10 = *v9;
      v11 = v9[1];
      sub_1BDB4EB54(*v9, v11);
      *v8 = v10;
      v8[1] = v11;
    }
    else
    {
      v13 = *a2;
      v12 = a2[1];
      sub_1BDB4EB54(v13, v12);
      *a1 = v13;
      a1[1] = v12;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1BDB6D5F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BDBFCB40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
    *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
    *(_QWORD *)&a1[v7[16]] = *(_QWORD *)&a2[v7[16]];
    *(_OWORD *)&a1[v7[20]] = *(_OWORD *)&a2[v7[20]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1BDB6D6AC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BDBFCB40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E360);
      *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
      *(_QWORD *)&a1[v7[16]] = *(_QWORD *)&a2[v7[16]];
      *(_OWORD *)&a1[v7[20]] = *(_OWORD *)&a2[v7[20]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for MessageChunking.UnsafeAppendingAccumulator()
{
  return &type metadata for MessageChunking.UnsafeAppendingAccumulator;
}

uint64_t sub_1BDB6D790(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDB6D7DC + 4 * byte_1BDC1C755[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDB6D810 + 4 * byte_1BDC1C750[v4]))();
}

uint64_t sub_1BDB6D810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB6D818(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB6D820);
  return result;
}

uint64_t sub_1BDB6D82C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB6D834);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDB6D838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB6D840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for ICQueryEntity(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_1BDB6D8A0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BDB6D8E0 + 4 * byte_1BDC1C75A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BDB6D900 + 4 * byte_1BDC1C75F[v4]))();
}

_BYTE *sub_1BDB6D8E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BDB6D900(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDB6D908(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDB6D910(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDB6D918(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDB6D920(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1BDB6D92C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BDB6D978 + 4 * byte_1BDC1C769[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BDB6D9AC + 4 * byte_1BDC1C764[v4]))();
}

uint64_t sub_1BDB6D9AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB6D9B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB6D9BCLL);
  return result;
}

uint64_t sub_1BDB6D9C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB6D9D0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BDB6D9D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB6D9DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BDB6D9E8()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDB6D9F8()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDB6DA08()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDB6DA18()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDB6DA28()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDB6DA38()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDB6DA48()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDB6DA58()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDB6DA68()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t sub_1BDB6DA78()
{
  return 4;
}

uint64_t sub_1BDB6DA80(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1BDB6DABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB6DB04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510090);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDB6DB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AEA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB6DB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB6DBD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static DispatchTimeInterval.timeInterval(_:)(_QWORD *a1@<X8>, double a2@<D0>)
{
  double v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2 * 1000000000.0;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
  {
    *a1 = (uint64_t)v3;
    v4 = *MEMORY[0x1E0DEF480];
    v5 = sub_1BDBFD1C4();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t AnyCommand.isHidden.getter()
{
  return 0;
}

uint64_t sub_1BDB6DCB0()
{
  return 0;
}

uint64_t AnyCommand.summary.getter()
{
  return 0;
}

uint64_t AnyCommand.prose.getter()
{
  return 0;
}

uint64_t sub_1BDB6DCD4()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t AnyCommand.additionalArgumentSummaries.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BDB6DCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  id v18;
  void *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  _QWORD v32[6];
  uint64_t v33;
  uint64_t v34;

  v33 = a10;
  v34 = a11;
  objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  swift_bridgeObjectRetain();
  v18 = sub_1BDBC1C88(a1, a2, a8);
  if (!v11)
  {
    v19 = v18;
    MEMORY[0x1E0C80A78](v18);
    v32[2] = &v33;
    v21 = sub_1BDBC10F8((_QWORD *(*)(uint64_t *__return_ptr, _QWORD *))sub_1BDB6E5DC, (uint64_t)v32, a3, a4, v20);
    v24 = v33;
    v23 = v34;
    if ((v25 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v27 = sub_1BDBFD7A0();
      swift_bridgeObjectRelease();
      v26 = 0;
    }
    else
    {
      v26 = v21;
      v27 = v22;
    }
    v32[4] = v24;
    v32[5] = v23;
    swift_bridgeObjectRetain();
    sub_1BDBFD8A8();
    v28 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    v29 = (void *)sub_1BDBFD6C8();
    v30 = objc_msgSend(v19, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v28, a9, v26, v27, v29);

    a7 = sub_1BDBFD6F8();
  }
  return a7;
}

uint64_t Command.run()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BDB6DEEC()
{
  _QWORD *v0;
  uint64_t *v1;
  int *v2;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v4;
  int *v6;

  v1 = (uint64_t *)v0[2];
  v2 = *(int **)(v0[4] + 32);
  v1[3] = swift_getAssociatedTypeWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
  v6 = (int *)((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_1BDB6DF84;
  return ((uint64_t (*)(uint64_t *, _QWORD, _QWORD))v6)(boxed_opaque_existential_1, v0[3], v0[4]);
}

uint64_t sub_1BDB6DF84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BDB6DFF0()
{
  uint64_t v0;

  __swift_deallocate_boxed_opaque_existential_0(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static AnyCommands.prose.getter()
{
  return 0;
}

uint64_t static Commands.commandNames.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  v9[5] = (*(uint64_t (**)(void))(a2 + 16))();
  v9[2] = a1;
  v9[3] = a2;
  v4 = sub_1BDBFDAAC();
  v5 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF50], v4);
  v7 = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDB6E0D8, (uint64_t)v9, v4, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v5, MEMORY[0x1E0DEDD18], v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BDB6E0D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 24) + 8) + 32))(*(_QWORD *)(v1 + 16));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t static Commands<>.allCommands.getter()
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  sub_1BDBFDE60();
  swift_getAssociatedConformanceWitness();
  return sub_1BDBFDAB8();
}

uint64_t Commands<>.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BDBFD938();
  swift_bridgeObjectRetain();
  v0 = sub_1BDBFD8A8();
  v2 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v0, v1);
  sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v2, v3);
  swift_bridgeObjectRelease();
  v4 = sub_1BDBFD740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t dispatch thunk of AnyCommand.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyCommand.isHidden.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnyCommand.summary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyCommand.prose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnyCommand.additionalArgumentSummaries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AnyCommand.run()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BDAC9D90;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of Command.run()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BDAE2208;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of static AnyCommands.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static AnyCommands.prose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static AnyCommands.commandNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyCommands.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of static Commands.allCommands.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BDB6E550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E598);
  sub_1BDB6E5F8();
  sub_1BDAC3548();
  result = sub_1BDBFE0A0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BDB6E5DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BDB6E550(a1);
}

unint64_t sub_1BDB6E5F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50E5A0;
  if (!qword_1EF50E5A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50E598);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEB8A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50E5A0);
  }
  return result;
}

void __swiftcall ICQueryType.filterSelection(managedObjectContext:accountObjectID:)(ICFilterSelection *__return_ptr retstr, NSManagedObjectContext managedObjectContext, NSManagedObjectID accountObjectID)
{
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t inited;
  NSManagedObjectContext_optional v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ICTagSelection *v20;
  void *v21;
  void *v22;
  objc_class *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  objc_class *v44;
  void *v45;
  id v46;
  uint64_t v47;
  char v48;
  _BOOL8 v49;
  __objc2_class *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  objc_class *v56;
  uint64_t v57;
  uint64_t v58;
  __objc2_class *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  Class isa;
  uint64_t v83;
  objc_class *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;

  isa = accountObjectID.super.isa;
  v84 = managedObjectContext.super.isa;
  v79 = type metadata accessor for ICQueryType.DateRange(0);
  v4 = MEMORY[0x1E0C80A78](v79);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v76 - v7;
  v9 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v81 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v80 = (uint64_t)&v76 - v12;
  v14 = MEMORY[0x1E0DEE9D8];
  v90 = *v3;
  v13 = v90;
  v91 = MEMORY[0x1E0DEE9D8];
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
  inited = swift_initStackObject();
  v88 = xmmword_1BDC16BA0;
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(inited + 32) = v13;
  v87 = v13 & 0xFFFFFFFFFFFFFFBLL;
  swift_retain();
  sub_1BDB70EC8(inited, (uint64_t)&v91);
  swift_setDeallocating();
  swift_arrayDestroy();
  v17 = v91;
  v91 = v14;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v77 = v8;
    v78 = v6;
    v19 = 0;
    v83 = v18;
    v85 = v17;
    do
    {
      v20 = *(ICTagSelection **)(v17 + 8 * v19 + 32);
      switch((unint64_t)v20)
      {
        case 0uLL:
          v90 = v13;
          v16.value.super.isa = v84;
          ICQueryType.tagSelection(managedObjectContext:)(v20, v16);
          v22 = v21;
          if (objc_msgSend(v21, sel_isNonEmpty))
          {
            v23 = v22;
            goto LABEL_18;
          }

          break;
        case 1uLL:
          v89 = v13;
          v24 = swift_initStackObject();
          *(_OWORD *)(v24 + 16) = v88;
          *(_QWORD *)(v24 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(1, v24, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          v25 = v90;
          if ((~v90 & 0xF000000000000007) != 0)
          {
            if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) == 9)
            {
              v26 = swift_projectBox();
              v27 = v80;
              sub_1BDAE1544(v26, v80, type metadata accessor for ICQueryType.RelativeDateRange);
              sub_1BDB71E88(v25);
              __asm { BR              X8 }
            }
            sub_1BDB71E88(v90);
          }
          v89 = v13;
          v55 = swift_initStackObject();
          *(_OWORD *)(v55 + 16) = v88;
          *(_QWORD *)(v55 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(1, v55, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          v56 = (objc_class *)v90;
          if ((~v90 & 0xF000000000000007) == 0)
            goto LABEL_54;
          v18 = v83;
          v17 = v85;
          if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) != 8)
            goto LABEL_60;
          v57 = swift_projectBox();
          v58 = (uint64_t)v77;
          sub_1BDAE1544(v57, (uint64_t)v77, type metadata accessor for ICQueryType.DateRange);
          sub_1BDB71E88((uint64_t)v56);
          v59 = ICDateCreatedFilterTypeSelection;
          goto LABEL_57;
        case 2uLL:
          v89 = v13;
          v28 = swift_initStackObject();
          *(_OWORD *)(v28 + 16) = v88;
          *(_QWORD *)(v28 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(2, v28, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          v29 = v90;
          if ((~v90 & 0xF000000000000007) != 0)
          {
            if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) == 0xF)
            {
              v30 = swift_projectBox();
              v31 = v81;
              sub_1BDAE1544(v30, v81, type metadata accessor for ICQueryType.RelativeDateRange);
              sub_1BDB71E88(v29);
              __asm { BR              X8 }
            }
            sub_1BDB71E88(v90);
          }
          v89 = v13;
          v60 = swift_initStackObject();
          *(_OWORD *)(v60 + 16) = v88;
          *(_QWORD *)(v60 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(2, v60, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          v56 = (objc_class *)v90;
          if ((~v90 & 0xF000000000000007) == 0)
          {
LABEL_54:
            v18 = v83;
            v17 = v85;
            break;
          }
          v18 = v83;
          v17 = v85;
          if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) != 0xE)
          {
LABEL_60:
            v16.value.super.isa = v56;
            goto LABEL_79;
          }
          v61 = swift_projectBox();
          v58 = (uint64_t)v78;
          sub_1BDAE1544(v61, (uint64_t)v78, type metadata accessor for ICQueryType.DateRange);
          sub_1BDB71E88((uint64_t)v56);
          v59 = ICDateEditedFilterTypeSelection;
LABEL_57:
          v62 = objc_msgSend(objc_allocWithZone((Class)v59), sel_initWithSelectionType_, 7);
          v63 = (void *)sub_1BDBFCA74();
          v64 = (void *)sub_1BDBFCA74();
          objc_msgSend(v62, sel_setSpecificDateRangeFrom_to_, v63, v64);

          v65 = v62;
          MEMORY[0x1C3B78F88]();
          if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BDBFDA1C();
          sub_1BDBFDA64();
          sub_1BDBFD9F8();

          sub_1BDAE1658(v58, type metadata accessor for ICQueryType.DateRange);
          break;
        case 3uLL:
          v90 = v13;
          v32 = 3;
          goto LABEL_16;
        case 4uLL:
          v90 = v13;
          v32 = 4;
LABEL_16:
          v16.value.super.isa = (Class)ICQueryType.participantsSelection(filterType:managedObjectContext:accountObjectID:)(v32, (uint64_t)v84, (uint64_t)isa);
          if (!v16.value.super.isa)
            break;
          v23 = v16.value.super.isa;
LABEL_18:
          v33 = v23;
          MEMORY[0x1C3B78F88]();
          if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BDBFDA1C();
          goto LABEL_20;
        case 5uLL:
          v89 = v13;
          v34 = swift_initStackObject();
          *(_OWORD *)(v34 + 16) = v88;
          *(_QWORD *)(v34 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(5, v34, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          if ((~v90 & 0xF000000000000007) == 0)
            goto LABEL_62;
          if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) == 5)
          {
            v35 = *(unsigned __int8 *)((v90 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
            sub_1BDB71E88(v90);
            if (v35)
              v36 = 0;
            else
              v36 = 3;
            objc_msgSend(objc_allocWithZone((Class)ICChecklistsFilterTypeSelection), sel_initWithSelectionType_, v36);
            goto LABEL_30;
          }
          sub_1BDB71E88(v90);
LABEL_62:
          v89 = v13;
          v66 = swift_initStackObject();
          *(_OWORD *)(v66 + 16) = v88;
          *(_QWORD *)(v66 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(5, v66, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          if ((~v90 & 0xF000000000000007) != 0)
          {
            v67 = (v90 >> 59) & 0x1E | (v90 >> 2) & 1;
            sub_1BDB71E88(v90);
            if (v67 == 6)
            {
              objc_msgSend(objc_allocWithZone((Class)ICChecklistsFilterTypeSelection), sel_initWithSelectionType_, 1);
              MEMORY[0x1C3B78F88]();
              v18 = v83;
              v17 = v85;
              if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                goto LABEL_78;
              goto LABEL_65;
            }
          }
          v89 = v13;
          v68 = swift_initStackObject();
          *(_OWORD *)(v68 + 16) = v88;
          *(_QWORD *)(v68 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(5, v68, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          v18 = v83;
          v17 = v85;
          if ((~v90 & 0xF000000000000007) != 0)
          {
            v69 = (v90 >> 59) & 0x1E | (v90 >> 2) & 1;
            sub_1BDB71E88(v90);
            if (v69 == 7)
            {
              objc_msgSend(objc_allocWithZone((Class)ICChecklistsFilterTypeSelection), sel_initWithSelectionType_, 2);
              goto LABEL_77;
            }
          }
          break;
        case 6uLL:
          v89 = v13;
          v37 = swift_initStackObject();
          *(_OWORD *)(v37 + 16) = v88;
          *(_QWORD *)(v37 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(6, v37, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          if ((~v90 & 0xF000000000000007) == 0)
            goto LABEL_70;
          if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) == 4)
          {
            v38 = *(__int16 *)((v90 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
            sub_1BDB71E88(v90);
            objc_msgSend(objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection), sel_initWithAttachmentSection_, v38);
LABEL_30:
            MEMORY[0x1C3B78F88]();
            if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BDBFDA1C();
            sub_1BDBFDA64();
            sub_1BDBFD9F8();
            v17 = v85;
          }
          else
          {
            sub_1BDB71E88(v90);
LABEL_70:
            v89 = v13;
            v70 = swift_initStackObject();
            *(_OWORD *)(v70 + 16) = v88;
            *(_QWORD *)(v70 + 32) = v13;
            swift_retain();
            sub_1BDB6FB84(6, v70, &v90);
            swift_setDeallocating();
            swift_arrayDestroy();
            v16.value.super.isa = (Class)v90;
            if ((~v90 & 0xF000000000000007) != 0)
            {
              v17 = v85;
              if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) == 3)
              {
                v71 = *(unsigned __int8 *)((v90 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                sub_1BDB71E88(v90);
                if (v71)
                  v72 = 1;
                else
                  v72 = 9;
                objc_msgSend(objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection), sel_initWithSelectionType_, v72);
LABEL_77:
                MEMORY[0x1C3B78F88]();
                if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_65:
                  sub_1BDBFDA1C();
LABEL_78:
                sub_1BDBFDA64();
                sub_1BDBFD9F8();
              }
              else
              {
LABEL_79:
                sub_1BDB71E88((uint64_t)v16.value.super.isa);
              }
            }
            else
            {
              v17 = v85;
            }
          }
          break;
        case 7uLL:
          v90 = v13;
          v39 = swift_initStackObject();
          *(_OWORD *)(v39 + 16) = v88;
          *(_QWORD *)(v39 + 32) = v13;
          swift_retain();
          v40 = sub_1BDB70228(v39, 0);
          v42 = v41;
          swift_setDeallocating();
          swift_arrayDestroy();
          if (!v42)
            break;
          v43 = objc_allocWithZone((Class)ICFoldersFilterTypeSelection);
          swift_bridgeObjectRetain();
          v44 = v84;
          v45 = (void *)sub_1BDBFD9C8();
          swift_bridgeObjectRelease();
          v46 = objc_msgSend(v43, sel_initWithManagedObjectContext_inclusionType_folderIdentifiers_, v44, v40, v45);
          swift_bridgeObjectRelease();

          v33 = (objc_class *)v46;
          MEMORY[0x1C3B78F88]();
          if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BDBFDA1C();
LABEL_20:
          sub_1BDBFDA64();
          sub_1BDBFD9F8();

          break;
        case 8uLL:
          v89 = v13;
          v47 = swift_initStackObject();
          *(_OWORD *)(v47 + 16) = v88;
          *(_QWORD *)(v47 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(8, v47, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          v16.value.super.isa = (Class)v90;
          if ((~v90 & 0xF000000000000007) == 0)
            break;
          if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) != 0x14)
            goto LABEL_79;
          v48 = *(_BYTE *)((v90 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          sub_1BDB71E88(v90);
          v49 = (v48 & 1) == 0;
          v50 = ICQuickNotesFilterTypeSelection;
          goto LABEL_46;
        case 9uLL:
          v89 = v13;
          v51 = swift_initStackObject();
          *(_OWORD *)(v51 + 16) = v88;
          *(_QWORD *)(v51 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(9, v51, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          v16.value.super.isa = (Class)v90;
          if ((~v90 & 0xF000000000000007) == 0)
            break;
          if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) != 0x11)
            goto LABEL_79;
          v52 = *(_BYTE *)((v90 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          sub_1BDB71E88(v90);
          v49 = (v52 & 1) == 0;
          v50 = ICPinnedNotesFilterTypeSelection;
          goto LABEL_46;
        case 0xAuLL:
          v89 = v13;
          v53 = swift_initStackObject();
          *(_OWORD *)(v53 + 16) = v88;
          *(_QWORD *)(v53 + 32) = v13;
          swift_retain();
          sub_1BDB6FB84(10, v53, &v90);
          swift_setDeallocating();
          swift_arrayDestroy();
          v16.value.super.isa = (Class)v90;
          if ((~v90 & 0xF000000000000007) == 0)
            break;
          if (((v90 >> 59) & 0x1E | (v90 >> 2) & 1) != 0x10)
            goto LABEL_79;
          v54 = *(_BYTE *)((v90 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          sub_1BDB71E88(v90);
          v49 = (v54 & 1) == 0;
          v50 = ICLockedNotesFilterTypeSelection;
LABEL_46:
          objc_msgSend(objc_allocWithZone((Class)v50), sel_initWithInclusionType_, v49);
          goto LABEL_77;
        default:
          break;
      }
      ++v19;
    }
    while (v18 != v19);
  }
  swift_bridgeObjectRelease();
  v90 = v13;
  v73 = sub_1BDB70468();
  v74 = objc_allocWithZone((Class)ICFilterSelection);
  sub_1BD942914(0, (unint64_t *)&qword_1EF50E5A8);
  v75 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v74, sel_initWithFilterTypeSelections_joinOperator_, v75, v73);

}

void __swiftcall ICQueryType.tagSelection(managedObjectContext:)(ICTagSelection *__return_ptr retstr, NSManagedObjectContext_optional managedObjectContext)
{
  uint64_t *v2;
  Class isa;
  uint64_t v4;
  id v5;
  uint64_t inited;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  objc_class *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26[2];

  isa = managedObjectContext.value.super.isa;
  v4 = *v2;
  v5 = objc_msgSend(objc_allocWithZone((Class)ICTagSelection), sel_initWithManagedObjectContext_, managedObjectContext.value.super.isa);
  if (isa)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(inited + 32) = v4;
    swift_retain();
    v7 = isa;
    sub_1BDB7061C(inited, v26);
    swift_setDeallocating();
    swift_arrayDestroy();
    v8 = v26[0];
    if ((~v26[0] & 0xF000000000000007) != 0)
    {
      objc_msgSend(v5, sel_setMode_, sub_1BDB708D8());
      v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(v9 + 32) = v8;
      swift_retain_n();
      sub_1BDB7061C(v9, v26);
      swift_setDeallocating();
      swift_arrayDestroy();
      if ((~v26[0] & 0xF000000000000007) != 0)
      {
        v10 = v26[1];
        sub_1BDB71E88(v26[0]);
      }
      else
      {
        v10 = 1;
      }
      sub_1BDB71E88(v8);
      objc_msgSend(v5, sel_setTagOperator_, v10);
      v26[0] = v8;
      v11 = swift_retain();
      v12 = sub_1BDB71BD8(v11);
      v13 = sub_1BDB71EA4(v12);
      sub_1BDB71E88(v8);
      swift_bridgeObjectRelease();
      v26[0] = v13;
      v14 = v7;
      v15 = swift_bridgeObjectRetain();
      v16 = sub_1BDB7209C(v15, (uint64_t)v14, (uint64_t)v26);

      sub_1BDAF3DD0(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v26[0];
      sub_1BD942914(0, (unint64_t *)&qword_1EF50FF20);
      sub_1BDB4CBD8();
      swift_bridgeObjectRetain();
      v18 = (void *)sub_1BDBFDD04();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setIncludedObjectIDs_, v18);
      swift_bridgeObjectRelease();

      sub_1BDAF3D3C(v17);
      swift_bridgeObjectRelease();
      v19 = (void *)sub_1BDBFDD04();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setUnresolvedIncludedTagIdentifiers_, v19);

      v26[0] = v8;
      v26[0] = sub_1BDB709B8();
      v20 = v14;
      v21 = swift_bridgeObjectRetain();
      v22 = sub_1BDB7209C(v21, (uint64_t)v20, (uint64_t)v26);

      sub_1BDAF3DD0(v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v26[0];
      swift_bridgeObjectRetain();
      v24 = (void *)sub_1BDBFDD04();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setExcludedObjectIDs_, v24);
      swift_bridgeObjectRelease();

      sub_1BDAF3D3C(v23);
      swift_bridgeObjectRelease();
      v25 = (void *)sub_1BDBFDD04();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setUnresolvedExcludedTagIdentifiers_, v25);

      sub_1BDB71E88(v8);
    }
    else
    {

    }
  }
}

uint64_t sub_1BDB6FB84@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v6 = result;
    swift_bridgeObjectRetain();
    v7 = 0;
    while (2)
    {
      v8 = *(_QWORD *)(a2 + 8 * v7 + 32);
      switch((v8 >> 59) & 0x1E | (v8 >> 2) & 1)
      {
        case 0uLL:
          goto LABEL_19;
        case 1uLL:
          v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
          *(_QWORD *)(inited + 32) = v9;
          swift_retain();
          swift_retain();
          sub_1BDB6FB84(&v13, v6, inited);
          swift_setDeallocating();
          swift_arrayDestroy();
          v8 = v13;
          v11 = ~v13 & 0xF000000000000007;
          swift_release();
          if (!v11)
            goto LABEL_4;
          goto LABEL_29;
        case 2uLL:
          v8 &= 0xFFFFFFFFFFFFFFBuLL;
LABEL_19:
          v12 = *(_QWORD *)(v8 + 16);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1BDB6FB84(&v13, v6, v12);
          swift_release();
          swift_bridgeObjectRelease();
          v8 = v13;
          if ((~v13 & 0xF000000000000007) != 0)
            goto LABEL_29;
          goto LABEL_4;
        case 3uLL:
        case 4uLL:
          if (v6 == 6)
            goto LABEL_28;
          goto LABEL_4;
        case 5uLL:
        case 6uLL:
        case 7uLL:
          if (v6 == 5)
            goto LABEL_28;
          goto LABEL_4;
        case 8uLL:
        case 9uLL:
          if (v6 == 1)
            goto LABEL_28;
          goto LABEL_4;
        case 0xBuLL:
          if (v6 == 7)
            goto LABEL_28;
          goto LABEL_4;
        case 0xCuLL:
        case 0xDuLL:
          if (v6 == 4)
            goto LABEL_28;
          goto LABEL_4;
        case 0xEuLL:
        case 0xFuLL:
          if (v6 == 2)
            goto LABEL_28;
          goto LABEL_4;
        case 0x10uLL:
          if (v6 == 10)
            goto LABEL_28;
          goto LABEL_4;
        case 0x11uLL:
          if (v6 == 9)
            goto LABEL_28;
          goto LABEL_4;
        case 0x12uLL:
        case 0x13uLL:
          if (v6 != 3)
            goto LABEL_4;
          goto LABEL_28;
        case 0x14uLL:
          if (v6 != 8)
            goto LABEL_4;
LABEL_28:
          swift_retain();
LABEL_29:
          result = swift_bridgeObjectRelease();
          goto LABEL_32;
        default:
LABEL_4:
          if (v4 != ++v7)
            continue;
          result = swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  v8 = 0xF000000000000007;
LABEL_32:
  *a3 = v8;
  return result;
}

id ICQueryType.participantsSelection(filterType:managedObjectContext:accountObjectID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  __objc2_class **v6;
  id v7;
  uint64_t inited;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char v31;
  uint64_t v32;
  unint64_t v33[2];

  v5 = *v3;
  if (a1 == 3)
  {
    v6 = off_1E76C6028;
LABEL_5:
    v7 = objc_msgSend(objc_allocWithZone((Class)*v6), sel_initWithManagedObjectContext_accountObjectID_, a2, a3);
    v33[0] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
    inited = swift_initStackObject();
    v32 = 1;
    *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(inited + 32) = v5;
    swift_retain();
    v9 = v7;
    v10 = sub_1BDB70ADC(inited, a1);
    v12 = v11;
    swift_setDeallocating();
    swift_arrayDestroy();
    if (v12)
    {
      if (v12[2] == 1 && v10 == 1)
      {
        objc_opt_self();
        v14 = swift_dynamicCastObjCClass();
        if (v14)
        {
          v15 = (void *)v14;
          v16 = v12[4];
          v17 = v12[5];
          swift_bridgeObjectRetain();
          v18 = v9;
          v19 = objc_msgSend(v15, sel_currentUserID);
          if (v19)
          {
            v20 = v19;
            v32 = v16;
            v21 = sub_1BDBFD6F8();
            v23 = v22;

            if (v17)
            {
              if (v23)
              {
                if (v32 == v21 && v23 == v17)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
LABEL_38:
                  swift_bridgeObjectRelease();
                  objc_msgSend(v15, sel_setSelectionType_, 0);

                  return v7;
                }
                v31 = sub_1BDBFE874();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v31 & 1) != 0)
                  goto LABEL_38;

                goto LABEL_33;
              }
            }
            else if (!v23)
            {
              goto LABEL_38;
            }
          }
          else if (!v17)
          {
            goto LABEL_38;
          }

          swift_bridgeObjectRelease();
        }
      }
LABEL_33:
      objc_msgSend(v9, sel_setSelectionType_, 2, v32);
      objc_msgSend(v9, sel_setJoinOperator_, v10);
      sub_1BDAF3D3C((uint64_t)v12);
      swift_bridgeObjectRelease();
      v29 = (void *)sub_1BDBFDD04();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setParticipantUserIDs_, v29);

      goto LABEL_34;
    }
    if (a1 == 3)
    {
      v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(v28 + 32) = v5;
      swift_retain();
      sub_1BDB6FB84(3, v28, v33);
      swift_setDeallocating();
      swift_arrayDestroy();
      v25 = v33[0];
      if ((~v33[0] & 0xF000000000000007) != 0)
      {
        if (((v33[0] >> 59) & 0x1E | (LODWORD(v33[0]) >> 2) & 1) == 0x12)
          goto LABEL_22;
LABEL_28:
        sub_1BDB71E88(v25);
      }
    }
    else
    {
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(v24 + 32) = v5;
      swift_retain();
      sub_1BDB6FB84(4, v24, v33);
      swift_setDeallocating();
      swift_arrayDestroy();
      v25 = v33[0];
      if ((~v33[0] & 0xF000000000000007) != 0)
      {
        if (((v33[0] >> 59) & 0x1E | (LODWORD(v33[0]) >> 2) & 1) == 0xC)
        {
LABEL_22:
          v26 = *(unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          sub_1BDB71E88(v25);
          if (v26)
            v27 = 1;
          else
            v27 = 3;
          objc_msgSend(v9, sel_setSelectionType_, v27, 1);
          goto LABEL_34;
        }
        goto LABEL_28;
      }
    }
LABEL_34:

    return v7;
  }
  if (a1 == 4)
  {
    v6 = off_1E76C5E58;
    goto LABEL_5;
  }
  return 0;
}

uint64_t sub_1BDB70228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
    v7 = (v6 >> 59) & 0x1E | (v6 >> 2) & 1;
    if (!v7)
    {
      v14 = *(_QWORD *)(v6 + 16);
      swift_retain();
      v15 = sub_1BDB70228(v14, a2);
      if (v16)
      {
        v19 = v15;
        swift_bridgeObjectRelease();
        swift_release();
        return v19;
      }
      swift_release();
      goto LABEL_4;
    }
    if (v7 == 1)
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
      v9 = a2;
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(inited + 32) = v8;
      swift_retain();
      swift_retain();
      v11 = sub_1BDB70228(inited, 1);
      v13 = v12;
      swift_setDeallocating();
      a2 = v9;
      swift_arrayDestroy();
      swift_release();
      if (v13)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
      goto LABEL_4;
    }
    if (v7 == 2)
      break;
LABEL_4:
    if (v2 == ++v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_retain();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  if (sub_1BDB71AC0(v18)[2] != *(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRelease();
    a2 = sub_1BDB70228(v18, a2);
  }
  swift_release();
  return a2;
}

unint64_t sub_1BDB70468()
{
  uint64_t v0;
  _BOOL8 v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  BOOL v14;
  unint64_t v15;

  if ((*(_QWORD *)v0 >> 59) & 0x1E | (*(_QWORD *)v0 >> 2) & 1)
    return 0;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    return 0;
  result = swift_bridgeObjectRetain();
  v5 = 0;
  v6 = 0;
  v7 = 0xF000000000000007;
  while (1)
  {
    v8 = *(_QWORD *)(v3 + 16);
    v9 = v6;
LABEL_7:
    if (v9 <= v8)
      v10 = *(_QWORD *)(v3 + 16);
    else
      v10 = v9;
    if (v9 >= v8)
      goto LABEL_39;
    result = *(_QWORD *)(v3 + 32 + 8 * v9);
    v6 = v9 + 1;
    v11 = (result >> 59) & 0x1E | (result >> 2) & 1;
    if (v11 == 10)
      break;
    if (v11)
    {
      if (v11 != 2)
        goto LABEL_28;
LABEL_26:
      v15 = result;
    }
    else
    {
LABEL_24:
      v15 = result;
    }
    swift_retain();
    result = sub_1BDB71E88(v7);
    v7 = v15;
LABEL_28:
    if (v6 == v4)
    {
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0)
      {
        v1 = 0;
LABEL_36:
        sub_1BDB71E88(v7);
        return v1;
      }
LABEL_34:
      if ((~v7 & 0xF000000000000007) == 0)
        return 0;
      v1 = ((v7 >> 59) & 0x1E | (v7 >> 2) & 1) == 2;
      goto LABEL_36;
    }
  }
  if (v6 == v4)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  v12 = v10 - 1;
  while (v12 != v9)
  {
    result = *(_QWORD *)(v3 + 40 + 8 * v9);
    v13 = (result >> 59) & 0x1E | (result >> 2) & 1;
    if (v13 != 10)
    {
      if (!v13)
      {
        v6 = v9 + 2;
        v5 = 1;
        goto LABEL_24;
      }
      if (v13 == 2)
      {
        v6 = v9 + 2;
        v5 = 1;
        goto LABEL_26;
      }
      v5 = 1;
      v14 = v4 - 2 == v9;
      v9 += 2;
      if (v14)
        goto LABEL_33;
      goto LABEL_7;
    }
    if (v4 - 1 == ++v9)
      goto LABEL_33;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BDB7061C@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
  {
    v15 = 0;
    v5 = 0xF000000000000007;
    goto LABEL_30;
  }
  v3 = result;
  v16 = a2;
  swift_bridgeObjectRetain();
  v4 = 0;
  while (1)
  {
    v5 = *(_QWORD *)(v3 + 8 * v4 + 32);
    v6 = (v5 >> 59) & 0x1E | (v5 >> 2) & 1;
    if (v6 == 2)
      break;
    if (v6 == 1)
    {
      v13 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(inited + 32) = v13;
      swift_retain();
      swift_retain();
      sub_1BDB7061C(&v17, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
LABEL_20:
      v5 = v17;
      if ((~v17 & 0xF000000000000007) != 0)
      {
        v15 = v18;
LABEL_27:
        swift_release();
        result = swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      goto LABEL_13;
    }
    if (v6)
    {
      if (((v5 >> 59) & 0x1E) == 0x16)
        goto LABEL_25;
    }
    else
    {
      v7 = *(_QWORD *)(v5 + 16);
      if (*(_QWORD *)(v7 + 16))
      {
        v8 = *(_QWORD *)(v7 + 32);
        v9 = v8;
        if (((v8 >> 59) & 0x1E | (v8 >> 2) & 1) == 1)
          v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        if (v9 >> 60 == 11)
        {
LABEL_25:
          swift_retain();
          result = swift_bridgeObjectRelease();
          v15 = 1;
          goto LABEL_29;
        }
        swift_retain();
        swift_retain();
        sub_1BDB7061C(&v17, v7);
        swift_release();
        v5 = v17;
        if ((~v17 & 0xF000000000000007) != 0)
        {
          v15 = v18;
          goto LABEL_27;
        }
LABEL_13:
        swift_release();
      }
    }
LABEL_4:
    if (v2 == ++v4)
    {
      result = swift_bridgeObjectRelease();
      v15 = 0;
      v5 = 0xF000000000000007;
      goto LABEL_29;
    }
  }
  v10 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_4;
  v11 = *(_QWORD *)(v10 + 32);
  v12 = v11;
  if (((v11 >> 59) & 0x1E | (v11 >> 2) & 1) == 1)
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  if (v12 >> 60 != 11)
  {
    swift_retain();
    swift_retain();
    sub_1BDB7061C(&v17, v10);
    swift_release();
    goto LABEL_20;
  }
  swift_retain();
  result = swift_bridgeObjectRelease();
  v15 = 2;
LABEL_29:
  a2 = v16;
LABEL_30:
  *a2 = v5;
  a2[1] = v15;
  return result;
}

uint64_t sub_1BDB708D8()
{
  uint64_t *v0;
  uint64_t inited;
  int v2;
  uint64_t v4;
  unint64_t v5;

  v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(inited + 32) = v4;
  swift_retain();
  sub_1BDB71CF4(inited, &v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  if ((~v5 & 0xF000000000000007) == 0)
    return 0;
  if (((v5 >> 59) & 0x1E | (v5 >> 2) & 1) != 0x17)
  {
    sub_1BDB71E88(v5);
    return 0;
  }
  v2 = *(unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1BDB71E88(v5);
  if (v2)
    return 1;
  else
    return 2;
}

uint64_t sub_1BDB709B8()
{
  uint64_t *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *v0;
  v2 = ((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1;
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    if (v2 == 1)
    {
      v8 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
      if (((v8 >> 59) & 0x1E | (v8 >> 2) & 1) != 0x16)
        return ((uint64_t (*)(void))sub_1BDB709B8)();
      v9 = v8 & 0xFFFFFFFFFFFFFFBLL;
      v11 = *(_QWORD *)(v9 + 16);
      v10 = *(_QWORD *)(v9 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(v3 + 32) = v11;
      *(_QWORD *)(v3 + 40) = v10;
      swift_bridgeObjectRetain();
      return v3;
    }
    if (v2 != 2)
      return v3;
    v1 &= 0xFFFFFFFFFFFFFFBuLL;
  }
  v13 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  if (v4)
  {
    v5 = swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      v7 = sub_1BDB709B8(v5);
      v5 = sub_1BDBC44D0(v7);
    }
    swift_bridgeObjectRelease();
    return v13;
  }
  return v3;
}

uint64_t sub_1BDB70ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v38 = a1 + 32;
  swift_bridgeObjectRetain();
  v4 = 0;
  v37 = v2;
  while (1)
  {
    v5 = *(_QWORD *)(v38 + 8 * v4);
    v6 = (v5 >> 59) & 0x1E | (v5 >> 2) & 1;
    if (v6 == 2)
      break;
    if (v6)
      goto LABEL_4;
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v9 = 0;
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v12 = *(_QWORD *)(v7 + 8 * v9 + 32);
        if (a2 == 3)
        {
          if (((v12 >> 59) & 0x1E | (v12 >> 2) & 1) == 0x13)
            goto LABEL_16;
        }
        else if (a2 == 4 && ((v12 >> 59) & 0x1E | (v12 >> 2) & 1) == 0xD)
        {
LABEL_16:
          v13 = v12 & 0xFFFFFFFFFFFFFFBLL;
          v15 = *(_QWORD *)(v13 + 16);
          v14 = *(_QWORD *)(v13 + 24);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_1BDBCBCC4(0, v10[2] + 1, 1, v10);
          v17 = v10[2];
          v16 = v10[3];
          if (v17 >= v16 >> 1)
            v10 = sub_1BDBCBCC4((_QWORD *)(v16 > 1), v17 + 1, 1, v10);
          v10[2] = v17 + 1;
          v11 = &v10[2 * v17];
          v11[4] = v15;
          v11[5] = v14;
        }
        if (v8 == ++v9)
        {
          swift_bridgeObjectRelease();
          v29 = *(_QWORD *)(v7 + 16);
          v2 = v37;
          goto LABEL_36;
        }
      }
    }
    swift_retain();
    v29 = 0;
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_36:
    if (v10[2] == v29)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 1;
    }
    swift_bridgeObjectRelease();
    v31 = sub_1BDB70ADC(v7, a2);
    if (v32)
    {
      v35 = v31;
      swift_bridgeObjectRelease();
      swift_release();
      return v35;
    }
LABEL_3:
    swift_release();
LABEL_4:
    if (++v4 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v18 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v20 = 0;
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v23 = *(_QWORD *)(v18 + 8 * v20 + 32);
      if (a2 == 3)
      {
        if (((v23 >> 59) & 0x1E | (v23 >> 2) & 1) == 0x13)
          goto LABEL_29;
      }
      else if (a2 == 4 && ((v23 >> 59) & 0x1E | (v23 >> 2) & 1) == 0xD)
      {
LABEL_29:
        v24 = v23 & 0xFFFFFFFFFFFFFFBLL;
        v26 = *(_QWORD *)(v24 + 16);
        v25 = *(_QWORD *)(v24 + 24);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1BDBCBCC4(0, v21[2] + 1, 1, v21);
        v28 = v21[2];
        v27 = v21[3];
        if (v28 >= v27 >> 1)
          v21 = sub_1BDBCBCC4((_QWORD *)(v27 > 1), v28 + 1, 1, v21);
        v21[2] = v28 + 1;
        v22 = &v21[2 * v28];
        v22[4] = v26;
        v22[5] = v25;
      }
      if (v19 == ++v20)
      {
        swift_bridgeObjectRelease();
        v30 = *(_QWORD *)(v18 + 16);
        v2 = v37;
        goto LABEL_40;
      }
    }
  }
  swift_retain();
  v30 = 0;
  v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_40:
  if (v21[2] == v30)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 2;
  }
  swift_bridgeObjectRelease();
  v33 = sub_1BDB70ADC(v18, a2);
  if (!v34)
    goto LABEL_3;
  v35 = v33;
  swift_release();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1BDB70EC8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = result + 32;
    swift_bridgeObjectRetain();
    for (i = 0; i != v2; ++i)
    {
      v8 = *(_QWORD *)(v4 + 8 * i);
      switch((v8 >> 59) & 0x1E | (v8 >> 2) & 1)
      {
        case 0uLL:
          goto LABEL_81;
        case 1uLL:
          v35 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
          *(_QWORD *)(inited + 32) = v35;
          swift_retain();
          swift_retain();
          sub_1BDB70EC8(inited, a2);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_release();
          continue;
        case 2uLL:
          v8 &= 0xFFFFFFFFFFFFFFBuLL;
LABEL_81:
          v37 = *(_QWORD *)(v8 + 16);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1BDB70EC8(v37, a2);
          swift_release();
          swift_bridgeObjectRelease();
          continue;
        case 3uLL:
        case 4uLL:
          v9 = *(_QWORD **)a2;
          v15 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v15)
            goto LABEL_26;
          if (v9[4] == 6)
            continue;
          if (v15 == 1)
            goto LABEL_26;
          if (v9[5] == 6)
            continue;
          if (v15 == 2)
            goto LABEL_26;
          if (v9[6] == 6)
            continue;
          if (v15 == 3)
            goto LABEL_26;
          v58 = 7;
          do
          {
            v59 = v58 - 3;
            if (__OFADD__(v58 - 4, 1))
              goto LABEL_195;
            if (v9[v58] == 6)
              goto LABEL_6;
            ++v58;
          }
          while (v59 != v15);
LABEL_26:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v15 + 1, 1, v9);
          v17 = v9[2];
          v16 = v9[3];
          if (v17 >= v16 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v16 > 1), v17 + 1, 1, v9);
          v9[2] = v17 + 1;
          v6 = &v9[v17];
          v7 = 6;
          goto LABEL_4;
        case 5uLL:
        case 6uLL:
        case 7uLL:
          v9 = *(_QWORD **)a2;
          v10 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v10)
            goto LABEL_19;
          if (v9[4] == 5)
            continue;
          if (v10 == 1)
            goto LABEL_19;
          if (v9[5] == 5)
            continue;
          if (v10 == 2)
            goto LABEL_19;
          if (v9[6] == 5)
            continue;
          if (v10 == 3)
            goto LABEL_19;
          v11 = 7;
          do
          {
            v12 = v11 - 3;
            if (__OFADD__(v11 - 4, 1))
              goto LABEL_194;
            if (v9[v11] == 5)
              goto LABEL_6;
            ++v11;
          }
          while (v12 != v10);
LABEL_19:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v10 + 1, 1, v9);
          v14 = v9[2];
          v13 = v9[3];
          if (v14 >= v13 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
          v9[2] = v14 + 1;
          v6 = &v9[v14];
          v7 = 5;
          goto LABEL_4;
        case 8uLL:
        case 9uLL:
          v9 = *(_QWORD **)a2;
          v18 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v18)
            goto LABEL_34;
          if (v9[4] == 1)
            continue;
          if (v18 == 1)
            goto LABEL_34;
          if (v9[5] == 1)
            continue;
          if (v18 == 2)
            goto LABEL_34;
          if (v9[6] == 1)
            continue;
          if (v18 == 3)
            goto LABEL_34;
          v60 = 7;
          do
          {
            v61 = v60 - 3;
            if (__OFADD__(v60 - 4, 1))
              goto LABEL_196;
            if (v9[v60] == 1)
              goto LABEL_6;
            ++v60;
          }
          while (v61 != v18);
LABEL_34:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v18 + 1, 1, v9);
          v20 = v9[2];
          v19 = v9[3];
          if (v20 >= v19 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v19 > 1), v20 + 1, 1, v9);
          v9[2] = v20 + 1;
          v6 = &v9[v20];
          v7 = 1;
          goto LABEL_4;
        case 0xBuLL:
          v9 = *(_QWORD **)a2;
          v38 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v38)
            goto LABEL_93;
          if (v9[4] == 7)
            continue;
          if (v38 == 1)
            goto LABEL_93;
          if (v9[5] == 7)
            continue;
          if (v38 == 2)
            goto LABEL_93;
          if (v9[6] == 7)
            continue;
          if (v38 == 3)
            goto LABEL_93;
          v39 = 7;
          do
          {
            v40 = v39 - 3;
            if (__OFADD__(v39 - 4, 1))
              goto LABEL_200;
            if (v9[v39] == 7)
              goto LABEL_6;
            ++v39;
          }
          while (v40 != v38);
LABEL_93:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v38 + 1, 1, v9);
          v42 = v9[2];
          v41 = v9[3];
          if (v42 >= v41 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v41 > 1), v42 + 1, 1, v9);
          v9[2] = v42 + 1;
          v6 = &v9[v42];
          v7 = 7;
          goto LABEL_4;
        case 0xCuLL:
        case 0xDuLL:
          v9 = *(_QWORD **)a2;
          v21 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v21)
            goto LABEL_42;
          if (v9[4] == 4)
            continue;
          if (v21 == 1)
            goto LABEL_42;
          if (v9[5] == 4)
            continue;
          if (v21 == 2)
            goto LABEL_42;
          if (v9[6] == 4)
            continue;
          if (v21 == 3)
            goto LABEL_42;
          v62 = 7;
          do
          {
            v63 = v62 - 3;
            if (__OFADD__(v62 - 4, 1))
              goto LABEL_197;
            if (v9[v62] == 4)
              goto LABEL_6;
            ++v62;
          }
          while (v63 != v21);
LABEL_42:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v21 + 1, 1, v9);
          v23 = v9[2];
          v22 = v9[3];
          if (v23 >= v22 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v22 > 1), v23 + 1, 1, v9);
          v9[2] = v23 + 1;
          v6 = &v9[v23];
          v7 = 4;
          goto LABEL_4;
        case 0xEuLL:
        case 0xFuLL:
          v9 = *(_QWORD **)a2;
          v24 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v24)
            goto LABEL_50;
          if (v9[4] == 2)
            continue;
          if (v24 == 1)
            goto LABEL_50;
          if (v9[5] == 2)
            continue;
          if (v24 == 2)
            goto LABEL_50;
          if (v9[6] == 2)
            continue;
          if (v24 == 3)
            goto LABEL_50;
          v64 = 7;
          do
          {
            v65 = v64 - 3;
            if (__OFADD__(v64 - 4, 1))
              goto LABEL_198;
            if (v9[v64] == 2)
              goto LABEL_6;
            ++v64;
          }
          while (v65 != v24);
LABEL_50:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v24 + 1, 1, v9);
          v26 = v9[2];
          v25 = v9[3];
          if (v26 >= v25 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v25 > 1), v26 + 1, 1, v9);
          v9[2] = v26 + 1;
          v6 = &v9[v26];
          v7 = 2;
          goto LABEL_4;
        case 0x10uLL:
          v9 = *(_QWORD **)a2;
          v43 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v43)
            goto LABEL_109;
          if (v9[4] == 10)
            continue;
          if (v43 == 1)
            goto LABEL_109;
          if (v9[5] == 10)
            continue;
          if (v43 == 2)
            goto LABEL_109;
          if (v9[6] == 10)
            continue;
          if (v43 == 3)
            goto LABEL_109;
          v44 = 7;
          do
          {
            v45 = v44 - 3;
            if (__OFADD__(v44 - 4, 1))
              goto LABEL_201;
            if (v9[v44] == 10)
              goto LABEL_6;
            ++v44;
          }
          while (v45 != v43);
LABEL_109:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v43 + 1, 1, v9);
          v47 = v9[2];
          v46 = v9[3];
          if (v47 >= v46 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v46 > 1), v47 + 1, 1, v9);
          v9[2] = v47 + 1;
          v6 = &v9[v47];
          v7 = 10;
          goto LABEL_4;
        case 0x11uLL:
          v9 = *(_QWORD **)a2;
          v48 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v48)
            goto LABEL_125;
          if (v9[4] == 9)
            continue;
          if (v48 == 1)
            goto LABEL_125;
          if (v9[5] == 9)
            continue;
          if (v48 == 2)
            goto LABEL_125;
          if (v9[6] == 9)
            continue;
          if (v48 == 3)
            goto LABEL_125;
          v49 = 7;
          do
          {
            v50 = v49 - 3;
            if (__OFADD__(v49 - 4, 1))
              goto LABEL_202;
            if (v9[v49] == 9)
              goto LABEL_6;
            ++v49;
          }
          while (v50 != v48);
LABEL_125:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v48 + 1, 1, v9);
          v52 = v9[2];
          v51 = v9[3];
          if (v52 >= v51 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v51 > 1), v52 + 1, 1, v9);
          v9[2] = v52 + 1;
          v6 = &v9[v52];
          v7 = 9;
          goto LABEL_4;
        case 0x12uLL:
        case 0x13uLL:
          v9 = *(_QWORD **)a2;
          v27 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v27)
            goto LABEL_58;
          if (v9[4] == 3)
            continue;
          if (v27 == 1)
            goto LABEL_58;
          if (v9[5] == 3)
            continue;
          if (v27 == 2)
            goto LABEL_58;
          if (v9[6] == 3)
            continue;
          if (v27 == 3)
            goto LABEL_58;
          v66 = 7;
          do
          {
            v67 = v66 - 3;
            if (__OFADD__(v66 - 4, 1))
              goto LABEL_199;
            if (v9[v66] == 3)
              goto LABEL_6;
            ++v66;
          }
          while (v67 != v27);
LABEL_58:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v27 + 1, 1, v9);
          v29 = v9[2];
          v28 = v9[3];
          if (v29 >= v28 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v28 > 1), v29 + 1, 1, v9);
          v9[2] = v29 + 1;
          v6 = &v9[v29];
          v7 = 3;
          goto LABEL_4;
        case 0x14uLL:
          v9 = *(_QWORD **)a2;
          v53 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v53)
            goto LABEL_141;
          if (v9[4] == 8)
            continue;
          if (v53 == 1)
            goto LABEL_141;
          if (v9[5] == 8)
            continue;
          if (v53 == 2)
            goto LABEL_141;
          if (v9[6] == 8)
            continue;
          if (v53 == 3)
            goto LABEL_141;
          v54 = 7;
          do
          {
            v55 = v54 - 3;
            if (__OFADD__(v54 - 4, 1))
              goto LABEL_203;
            if (v9[v54] == 8)
              goto LABEL_6;
            ++v54;
          }
          while (v55 != v53);
LABEL_141:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v53 + 1, 1, v9);
          v57 = v9[2];
          v56 = v9[3];
          if (v57 >= v56 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v56 > 1), v57 + 1, 1, v9);
          v9[2] = v57 + 1;
          v6 = &v9[v57];
          v7 = 8;
LABEL_4:
          v6[4] = v7;
          goto LABEL_5;
        case 0x16uLL:
        case 0x17uLL:
          v9 = *(_QWORD **)a2;
          v30 = *(_QWORD *)(*(_QWORD *)a2 + 16);
          if (!v30)
            goto LABEL_74;
          if (!v9[4])
            continue;
          if (v30 == 1)
            goto LABEL_74;
          if (!v9[5])
            continue;
          if (v30 == 2)
            goto LABEL_74;
          if (!v9[6])
            continue;
          if (v30 == 3)
            goto LABEL_74;
          v31 = 7;
          break;
        default:
          continue;
      }
      while (1)
      {
        v32 = v31 - 3;
        if (__OFADD__(v31 - 4, 1))
        {
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
          JUMPOUT(0x1BDB71A60);
        }
        if (!v9[v31])
          break;
        ++v31;
        if (v32 == v30)
        {
LABEL_74:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBCC6EC(0, v30 + 1, 1, v9);
          v34 = v9[2];
          v33 = v9[3];
          if (v34 >= v33 >> 1)
            v9 = sub_1BDBCC6EC((_QWORD *)(v33 > 1), v34 + 1, 1, v9);
          v9[2] = v34 + 1;
          v9[v34 + 4] = 0;
LABEL_5:
          swift_release();
          *(_QWORD *)a2 = v9;
          break;
        }
      }
LABEL_6:
      ;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BDB71AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v6 = *(_QWORD *)(a1 + 8 * v3 + 32);
    if (((v6 >> 59) & 0x1E | (v6 >> 2) & 1) == 0xB)
    {
      v7 = v6 & 0xFFFFFFFFFFFFFFBLL;
      v9 = *(_QWORD *)(v7 + 16);
      v8 = *(_QWORD *)(v7 + 24);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1BDBCBCC4(0, v4[2] + 1, 1, v4);
      v11 = v4[2];
      v10 = v4[3];
      if (v11 >= v10 >> 1)
        v4 = sub_1BDBCBCC4((_QWORD *)(v10 > 1), v11 + 1, 1, v4);
      v4[2] = v11 + 1;
      v5 = &v4[2 * v11];
      v5[4] = v9;
      v5[5] = v8;
    }
    ++v3;
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BDB71BD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *v1;
  v3 = MEMORY[0x1E0DEE9D8];
  switch(((unint64_t)*v1 >> 59) & 0x1E | (*v1 >> 2) & 1)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      v3 = sub_1BDB71BD8(a1);
      break;
    case 2uLL:
      v2 &= 0xFFFFFFFFFFFFFFBuLL;
LABEL_4:
      v12 = MEMORY[0x1E0DEE9D8];
      v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
      if (v4)
      {
        v5 = swift_bridgeObjectRetain();
        for (i = 0; i != v4; ++i)
        {
          v7 = sub_1BDB71BD8(v5);
          v5 = sub_1BDBC44D0(v7);
        }
        swift_bridgeObjectRelease();
        v3 = v12;
      }
      break;
    case 0x16uLL:
      v8 = v2 & 0xFFFFFFFFFFFFFFBLL;
      v10 = *(_QWORD *)(v8 + 16);
      v9 = *(_QWORD *)(v8 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1BDC16BA0;
      *(_QWORD *)(v3 + 32) = v10;
      *(_QWORD *)(v3 + 40) = v9;
      swift_bridgeObjectRetain();
      break;
    default:
      return v3;
  }
  return v3;
}

uint64_t sub_1BDB71CF4@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = (unint64_t *)(result + 32);
    while (2)
    {
      v6 = *v4++;
      v5 = v6;
      switch((v6 >> 59) & 0x1E | (v6 >> 2) & 1)
      {
        case 0uLL:
          goto LABEL_8;
        case 1uLL:
          v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
          *(_QWORD *)(inited + 32) = v7;
          swift_retain();
          swift_retain();
          sub_1BDB71CF4(inited);
          swift_setDeallocating();
          swift_arrayDestroy();
          return swift_release();
        case 2uLL:
          v5 &= 0xFFFFFFFFFFFFFFBuLL;
LABEL_8:
          v9 = *(_QWORD *)(v5 + 16);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1BDB71CF4(v9);
          swift_release();
          result = swift_bridgeObjectRelease();
          break;
        case 0x17uLL:
          *a2 = v5;
          result = swift_retain();
          break;
        default:
          if (--v3)
            continue;
          goto LABEL_5;
      }
      break;
    }
  }
  else
  {
LABEL_5:
    *a2 = 0xF000000000000007;
  }
  return result;
}

uint64_t sub_1BDB71E88(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_1BDB71EA4(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = 0;
  v22 = result + 32;
  v21 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v2 <= v1)
      v3 = v1;
    else
      v3 = v2;
    v23 = v3;
    while (1)
    {
      if (v2 == v23)
        goto LABEL_35;
      v4 = (uint64_t *)(v22 + 16 * v2);
      v6 = *v4;
      v5 = v4[1];
      ++v2;
      swift_bridgeObjectRetain();
      v7 = (_QWORD *)sub_1BDB709B8();
      v8 = v7;
      v9 = v7[2];
      if (!v9)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      v10 = v1;
      if (v7[4] != v6 || v7[5] != v5)
      {
        result = sub_1BDBFE874();
        if ((result & 1) == 0)
          break;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v1 = v10;
      if (v2 == v10)
        return v21;
    }
    if (v9 != 1)
    {
      v12 = v8 + 7;
      v13 = 1;
      while (1)
      {
        v14 = v13 + 1;
        if (__OFADD__(v13, 1))
          break;
        if (*(v12 - 1) == v6 && *v12 == v5)
          goto LABEL_7;
        result = sub_1BDBFE874();
        if ((result & 1) != 0)
          goto LABEL_7;
        v12 += 2;
        ++v13;
        if (v14 == v9)
          goto LABEL_24;
      }
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    v1 = v10;
LABEL_26:
    result = swift_isUniquelyReferenced_nonNull_native();
    v16 = v21;
    if ((result & 1) == 0)
    {
      result = sub_1BDB224F4(0, *(_QWORD *)(v21 + 16) + 1, 1);
      v16 = v21;
    }
    v17 = v16;
    v19 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    if (v19 >= v18 >> 1)
    {
      result = sub_1BDB224F4(v18 > 1, v19 + 1, 1);
      v17 = v21;
    }
    *(_QWORD *)(v17 + 16) = v19 + 1;
    v21 = v17;
    v20 = v17 + 16 * v19;
    *(_QWORD *)(v20 + 32) = v6;
    *(_QWORD *)(v20 + 40) = v5;
  }
  while (v2 != v1);
  return v21;
}

uint64_t sub_1BDB7209C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;

  result = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return result;
  v29 = a1 + 32;
  swift_bridgeObjectRetain();
  v27 = a2;
  v28 = (id)objc_opt_self();
  v8 = 0;
  v26 = a3;
  while (1)
  {
    v9 = (uint64_t *)(v29 + 16 * v8);
    v11 = *v9;
    v10 = v9[1];
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1BDBFD6C8();
    v13 = objc_msgSend(v28, sel_hashtagObjectIDWithStandardizedContent_context_, v12, a2);

    if (v13)
      break;
    swift_bridgeObjectRelease();
LABEL_4:
    if (++v8 == v5)
    {
      swift_bridgeObjectRelease();
      return v30;
    }
  }
  v14 = *(_QWORD **)a3;
  v15 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  if (!v15)
  {
LABEL_17:
    v21 = swift_bridgeObjectRelease();
    MEMORY[0x1C3B78F88](v21);
    if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BDBFDA1C();
    sub_1BDBFDA64();
    sub_1BDBFD9F8();
    goto LABEL_4;
  }
  v16 = v14[4] == v11 && v14[5] == v10;
  if (v16 || (sub_1BDBFE874() & 1) != 0)
  {
    v17 = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_13;
  }
  else
  {
    v22 = v14 + 7;
    v23 = 1;
    do
    {
      if (v15 == v23)
      {
        a3 = v26;
        goto LABEL_16;
      }
      v17 = v23;
      if (*(v22 - 1) == v11 && *v22 == v10)
        break;
      v25 = sub_1BDBFE874();
      v23 = v17 + 1;
      v22 += 2;
    }
    while ((v25 & 1) == 0);
    a3 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_13;
  }
  v14 = sub_1BDBBCF2C(v14);
LABEL_13:
  v18 = v14[2];
  if (v17 < v18)
  {
    v19 = v18 - 1;
    v20 = v18 - 1 - v17;
    if (v20 < 0)
      goto LABEL_33;
    memmove(&v14[2 * v17 + 4], &v14[2 * v17 + 6], 16 * v20);
    v14[2] = v19;
    *(_QWORD *)a3 = v14;
    swift_bridgeObjectRelease();
LABEL_16:
    a2 = v27;
    goto LABEL_17;
  }
  __break(1u);
LABEL_33:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDB72330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  objc_class *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  objc_super v26;
  uint64_t v27;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = *v14;
    v15 = v14[1];
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v15;
    v18 = v17 | 0x9000000000000004;
    v19 = (objc_class *)type metadata accessor for ICQuery();
    v20 = (char *)objc_allocWithZone(v19);
    *(_QWORD *)&v20[OBJC_IVAR___ICQueryObjC_type] = v18;
    v26.receiver = v20;
    v26.super_class = v19;
    swift_bridgeObjectRetain_n();
    v21 = (char *)objc_msgSendSuper2(&v26, sel_init);
    v22 = &v21[OBJC_IVAR___ICQueryObjC_type];
    swift_beginAccess();
    v23 = *(_QWORD *)v22;
    swift_retain();
    swift_bridgeObjectRelease();

    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BDBCC370(0, v8[2] + 1, 1, v8);
      v8 = (_QWORD *)result;
    }
    v25 = v8[2];
    v24 = v8[3];
    if (v25 >= v24 >> 1)
    {
      result = (uint64_t)sub_1BDBCC370((_QWORD *)(v24 > 1), v25 + 1, 1, v8);
      v8 = (_QWORD *)result;
    }
    v8[2] = v25 + 1;
    v8[v25 + 4] = v23;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v27 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v5)
        goto LABEL_27;
      v12 = *(_QWORD *)(v27 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v5)
          goto LABEL_27;
        v12 = *(_QWORD *)(v27 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 3;
          if (v11 + 3 >= v5)
            goto LABEL_27;
          v12 = *(_QWORD *)(v27 + 8 * v7);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  v12 = *(_QWORD *)(v27 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v27 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BDB725C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  objc_super v26;
  uint64_t v27;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = *v14;
    v15 = v14[1];
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v15;
    v18 = v17 | 0x6000000000000004;
    v19 = (objc_class *)type metadata accessor for ICQuery();
    v20 = (char *)objc_allocWithZone(v19);
    *(_QWORD *)&v20[OBJC_IVAR___ICQueryObjC_type] = v18;
    v26.receiver = v20;
    v26.super_class = v19;
    swift_bridgeObjectRetain_n();
    v21 = (char *)objc_msgSendSuper2(&v26, sel_init);
    v22 = &v21[OBJC_IVAR___ICQueryObjC_type];
    swift_beginAccess();
    v23 = *(_QWORD *)v22;
    swift_retain();
    swift_bridgeObjectRelease();

    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BDBCC370(0, v8[2] + 1, 1, v8);
      v8 = (_QWORD *)result;
    }
    v25 = v8[2];
    v24 = v8[3];
    if (v25 >= v24 >> 1)
    {
      result = (uint64_t)sub_1BDBCC370((_QWORD *)(v24 > 1), v25 + 1, 1, v8);
      v8 = (_QWORD *)result;
    }
    v8[2] = v25 + 1;
    v8[v25 + 4] = v23;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v27 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v5)
        goto LABEL_27;
      v12 = *(_QWORD *)(v27 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v5)
          goto LABEL_27;
        v12 = *(_QWORD *)(v27 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 3;
          if (v11 + 3 >= v5)
            goto LABEL_27;
          v12 = *(_QWORD *)(v27 + 8 * v7);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  v12 = *(_QWORD *)(v27 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v5)
      goto LABEL_27;
    v12 = *(_QWORD *)(v27 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

void (*sub_1BDB72858())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1BDB72864(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BDB728D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  *a1 = *v3;
  return swift_retain();
}

uint64_t sub_1BDB72928(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  *v3 = v2;
  return swift_release();
}

uint64_t (*sub_1BDB72988())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BDB72A1C()
{
  return sub_1BDB72B14((uint64_t (*)(uint64_t))ICQueryType.minimumSupportedVersion.getter);
}

uint64_t sub_1BDB72A7C()
{
  uint64_t v0;

  v0 = swift_beginAccess();
  return ICQueryType.canBeEdited.getter(v0) & 1;
}

uint64_t sub_1BDB72AF4()
{
  return 0x65746F4E4349;
}

uint64_t sub_1BDB72B08()
{
  return sub_1BDB72B14((uint64_t (*)(uint64_t))ICQueryType.predicate.getter);
}

uint64_t sub_1BDB72B14(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  v2 = swift_beginAccess();
  return a1(v2);
}

id ICQuery.__allocating_init(entity:type:)(uint64_t a1, _QWORD *a2)
{
  objc_class *v2;
  char *v4;
  objc_super v6;

  v4 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v4[OBJC_IVAR___ICQueryObjC_type] = *a2;
  v6.receiver = v4;
  v6.super_class = v2;
  return objc_msgSendSuper2(&v6, sel_init);
}

id ICQuery.init(entity:type:)(uint64_t a1, _QWORD *a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___ICQueryObjC_type] = *a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ICQuery();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1BDB72C4C()
{
  void *v0;
  id v1;
  objc_super v3;
  uint64_t v4;
  unint64_t v5;

  sub_1BDBFE304();
  v4 = 0;
  v5 = 0xE000000000000000;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ICQuery();
  v1 = objc_msgSendSuper2(&v3, sel_debugDescription);
  sub_1BDBFD6F8();

  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFE4E4();
  sub_1BDBFD7DC();
  swift_beginAccess();
  sub_1BDBFE4E4();
  return v4;
}

uint64_t sub_1BDB72D94(uint64_t a1)
{
  char *v1;
  char v2;
  char v3;
  char *v5;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  sub_1BDADED1C(a1, (uint64_t)v7);
  if (!v8)
  {
    sub_1BDAC350C((uint64_t)v7, qword_1ED239CF8);
    goto LABEL_5;
  }
  type metadata accessor for ICQuery();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v3 = 0;
    return v3 & 1;
  }
  v1 = &v5[OBJC_IVAR___ICQueryObjC_type];
  swift_beginAccess();
  v6 = *(_QWORD *)v1;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  static ICQueryType.== infix(_:_:)((uint64_t)&v6);
  v3 = v2;
  swift_release();
  swift_release();

  return v3 & 1;
}

id ICQuery.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ICQuery.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BDB72FA0()
{
  _BYTE *v0;

  if (*v0)
    return 1701869940;
  else
    return 0x797469746E65;
}

uint64_t sub_1BDB72FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDB76134(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDB72FF4()
{
  sub_1BDB75FF8();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB7301C()
{
  sub_1BDB75FF8();
  return sub_1BDBFEB50();
}

id ICQuery.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICQuery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BDB73074(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t *v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E5B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB75FF8();
  sub_1BDBFEACC();
  v13 = 0;
  sub_1BDB7603C();
  sub_1BDBFE718();
  if (!v2)
  {
    v9 = (uint64_t *)(v3 + OBJC_IVAR___ICQueryObjC_type);
    swift_beginAccess();
    v12 = *v9;
    v11[15] = 1;
    sub_1BDAFE320();
    sub_1BDBFE718();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void (**ICQuery.__allocating_init(from:)(_QWORD *a1))(_QWORD, uint64_t)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ICQuery.init(from:)(a1);
}

void (**ICQuery.init(from:)(_QWORD *a1))(_QWORD, uint64_t)
{
  void *v1;
  uint64_t v2;
  void (**v4)(_QWORD, uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (**v11)(_QWORD, uint64_t);
  objc_class *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  objc_super v17;
  char v18;
  uint64_t v19;

  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E5D0);
  v4 = *(void (***)(_QWORD, uint64_t))(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v16 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1BDB75FF8();
  v8 = v1;
  v14 = v6;
  sub_1BDBFEAB4();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
    type metadata accessor for ICQuery();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v19) = 0;
    sub_1BDB76080();
    v9 = v14;
    v10 = v15;
    sub_1BDBFE670();
    v18 = 1;
    sub_1BDAFE1E0();
    sub_1BDBFE670();
    v11 = v4;
    *(_QWORD *)&v8[OBJC_IVAR___ICQueryObjC_type] = v19;

    v13 = (objc_class *)type metadata accessor for ICQuery();
    v17.receiver = v8;
    v17.super_class = v13;
    v4 = (void (**)(_QWORD, uint64_t))objc_msgSendSuper2(&v17, sel_init);
    ((void (**)(char *, uint64_t))v11)[1](v9, v10);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  }
  return v4;
}

void (**sub_1BDB733F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>))(_QWORD, uint64_t)
{
  uint64_t v2;
  id v5;
  void (**result)(_QWORD, uint64_t);

  v5 = objc_allocWithZone((Class)type metadata accessor for ICQuery());
  result = ICQuery.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BDB73448(_QWORD *a1)
{
  return sub_1BDB73074(a1);
}

id static ICQuery.makeQueryForNotesMatching(_:)(void *a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  char *v21;
  id v22;
  objc_super v23;
  uint64_t v24;
  void *v25;

  v3 = objc_msgSend(a1, sel_filterTypeSelections);
  sub_1BDB760C4();
  v4 = sub_1BDBFD9E0();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_1BDBFE574();
    v5 = (uint64_t)result;
    v22 = a1;
    if (result)
      goto LABEL_3;
LABEL_16:
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain();
  v22 = a1;
  if (!v5)
    goto LABEL_16;
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x1C3B79954](v7, v4);
    else
      v9 = *(id *)(v4 + 8 * v7 + 32);
    v10 = v9;
    v25 = v9;
    sub_1BDB73708(&v25, v1, &v24);

    v11 = v24;
    if ((~v24 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BDBCC370(0, v8[2] + 1, 1, v8);
      v13 = v8[2];
      v12 = v8[3];
      if (v13 >= v12 >> 1)
        v8 = sub_1BDBCC370((_QWORD *)(v12 > 1), v13 + 1, 1, v8);
      v8[2] = v13 + 1;
      v8[v13 + 4] = v11;
    }
    ++v7;
  }
  while (v5 != v7);
LABEL_17:
  swift_bridgeObjectRelease_n();
  v14 = objc_msgSend(v22, sel_joinOperator);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v8;
  if (v14)
    v16 = v15 | 0x1000000000000000;
  else
    v16 = v15;
  v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BDC17EC0;
  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 16) = objc_msgSend(v22, sel_includeRecentlyDeleted);
  *(_QWORD *)(v18 + 32) = v19 | 0x5000000000000000;
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v17 + 16) = v18;
  v20 = (objc_class *)type metadata accessor for ICQuery();
  v21 = (char *)objc_allocWithZone(v20);
  *(_QWORD *)&v21[OBJC_IVAR___ICQueryObjC_type] = v17;
  v23.receiver = v21;
  v23.super_class = v20;
  return objc_msgSendSuper2(&v23, sel_init);
}

void sub_1BDB73708(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  void *v68;
  uint64_t v69;
  void *v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  _QWORD *v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  objc_class *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  id v106;
  objc_class *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  objc_class *v114;
  char *v115;
  uint64_t *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  objc_class *v120;
  char *v121;
  id v122;
  void *v123;
  char *v124;
  _QWORD *v125;
  void (*v126)(char *, char *, uint64_t);
  char *v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v130)(char *, uint64_t, uint64_t);
  id v131;
  void *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, char *, uint64_t);
  objc_class *v139;
  char *v140;
  void (*v141)(char *, uint64_t);
  char *v142;
  id v143;
  void *v144;
  char *v145;
  _QWORD *v146;
  void (*v147)(char *, char *, uint64_t);
  void (*v148)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v149)(char *, uint64_t, uint64_t);
  id v150;
  void *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(uint64_t, char *, uint64_t);
  objc_class *v158;
  char *v159;
  id v160;
  void *v161;
  char *v162;
  uint64_t v163;
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  unint64_t v170;
  objc_class *v171;
  char *v172;
  id v173;
  void *v174;
  char *v175;
  uint64_t v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  objc_class *v184;
  char *v185;
  uint64_t v186;
  void *v187;
  uint64_t v188;
  objc_class *v189;
  char *v190;
  id v191;
  void *v192;
  void (*v193)(void);
  void (*v194)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v195)(char *, uint64_t, uint64_t);
  id v196;
  void *v197;
  void (*v198)(char *, _QWORD, uint64_t, uint64_t);
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(uint64_t, char *, uint64_t);
  objc_class *v206;
  char *v207;
  id v208;
  void *v209;
  void (*v210)(void);
  void (*v211)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v212)(char *, uint64_t, uint64_t);
  id v213;
  void *v214;
  void (*v215)(char *, _QWORD, uint64_t, uint64_t);
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(uint64_t, char *, uint64_t);
  objc_class *v223;
  char *v224;
  id v225;
  void *v226;
  char *v227;
  void (*v228)(char *, char *, uint64_t);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  objc_class *v235;
  char *v236;
  id v237;
  void *v238;
  char *v239;
  void (*v240)(uint64_t, char *, uint64_t);
  uint64_t v241;
  char *v242;
  uint64_t v243;
  void (*v244)(uint64_t, char *, uint64_t);
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  objc_class *v248;
  char *v249;
  uint64_t v250;
  void *v251;
  id v252;
  uint64_t v253;
  uint64_t v254;
  objc_class *v255;
  char *v256;
  char *v257;
  uint64_t v258;
  void *v259;
  uint64_t v260;
  uint64_t v261;
  objc_class *v262;
  char *v263;
  uint64_t v264;
  void *v265;
  id v266;
  id v267;
  uint64_t v268;
  uint64_t v269;
  id v270;
  uint64_t v271;
  int64_t v272;
  uint64_t v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  objc_class *v279;
  char *v280;
  char *v281;
  char *v282;
  uint64_t v283;
  unint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  objc_class *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  objc_class *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  objc_class *v296;
  char *v297;
  char *v298;
  uint64_t *v299;
  uint64_t v300;
  void *v301;
  id v302;
  uint64_t v303;
  unint64_t v304;
  objc_class *v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  objc_class *v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  objc_class *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  objc_class *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  objc_class *v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  objc_class *v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  objc_class *v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  objc_class *v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  objc_class *v337;
  char *v338;
  uint64_t v339;
  id v340;
  uint64_t v341;
  uint64_t v342;
  void *v343;
  id v344;
  void *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  objc_class *v351;
  char *v352;
  uint64_t v353;
  unint64_t v354;
  objc_class *v355;
  char *v356;
  id v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  id v361;
  uint64_t v362;
  uint64_t v363;
  objc_class *v364;
  char *v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  objc_class *v369;
  char *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  id v375;
  uint64_t v376;
  uint64_t v377;
  objc_class *v378;
  char *v379;
  uint64_t *v380;
  uint64_t v381;
  uint64_t v382;
  objc_class *v383;
  char *v384;
  uint64_t v385;
  char *v386;
  char *v387;
  char *v388;
  char *v389;
  uint64_t v390;
  char *v391;
  char *v392;
  char *v393;
  char *v394;
  char *v395;
  char *v396;
  char *v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  char *v402;
  char *v403;
  char *v404;
  char *v405;
  char *v406;
  char *v407;
  char *v408;
  char *v409;
  char *v410;
  char *v411;
  char *v412;
  char *v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  id v418;
  uint64_t *v419;
  uint64_t v420;
  objc_super v421;
  objc_super v422;
  objc_super v423;
  objc_super v424;
  objc_super v425;
  objc_super v426;
  objc_super v427;
  objc_super v428;
  objc_super v429;
  objc_super v430;
  objc_super v431;
  objc_super v432;
  objc_super v433;
  objc_super v434;
  objc_super v435;
  objc_super v436;
  objc_super v437;
  objc_super v438;
  objc_super v439;
  objc_super v440;
  objc_super v441;
  objc_super v442;
  objc_super v443;
  objc_super v444;
  objc_super v445;
  objc_super v446;
  objc_super v447;
  objc_super v448;
  objc_super v449;
  objc_super v450;
  objc_super v451;
  objc_super v452;
  objc_super v453;
  objc_super v454;
  uint64_t v455;

  v419 = a3;
  v418 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v417 = (uint64_t)&v385 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v406 = (char *)&v385 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v397 = (char *)&v385 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v405 = (char *)&v385 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v396 = (char *)&v385 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v404 = (char *)&v385 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v413 = (char *)&v385 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v412 = (char *)&v385 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v401 = (char *)&v385 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v411 = (char *)&v385 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v400 = (char *)&v385 - v26;
  MEMORY[0x1E0C80A78](v25);
  v410 = (char *)&v385 - v27;
  v28 = sub_1BDBFCAC8();
  v29 = *(_QWORD *)(v28 - 8);
  v415 = v28;
  v416 = v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v395 = (char *)&v385 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v403 = (char *)&v385 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v392 = (char *)&v385 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v399 = (char *)&v385 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v391 = (char *)&v385 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v398 = (char *)&v385 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v402 = (char *)&v385 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v407 = (char *)&v385 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v394 = (char *)&v385 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v409 = (char *)&v385 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v393 = (char *)&v385 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v414 = (char *)&v385 - v53;
  MEMORY[0x1E0C80A78](v52);
  v408 = (char *)&v385 - v54;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C4B8);
  v56 = MEMORY[0x1E0C80A78](v55);
  v58 = (char *)&v385 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v56);
  v60 = (char *)&v385 - v59;
  v61 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = MEMORY[0x1E0C80A78](v61);
  v65 = (char *)&v385 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v63);
  v67 = (char *)&v385 - v66;
  v68 = *a1;
  objc_opt_self();
  v69 = swift_dynamicCastObjCClass();
  if (v69)
  {
    v70 = (void *)v69;
    v71 = v68;
    v72 = _s11NotesShared7ICQueryC012makeQueryForA8MatchingyACSo14ICTagSelectionCFZ_0(v70);

    v73 = OBJC_IVAR___ICQueryObjC_type;
LABEL_3:
    v74 = (uint64_t *)&v72[v73];
    swift_beginAccess();
    v75 = *v74;
    swift_retain();

LABEL_4:
    v76 = v419;
    goto LABEL_70;
  }
  v388 = v67;
  v389 = v60;
  v390 = v62;
  v386 = v65;
  v387 = v58;
  v77 = v417;
  v78 = v416;
  objc_opt_self();
  v79 = swift_dynamicCastObjCClass();
  if (v79)
  {
    v80 = (void *)v79;
    v81 = v68;
    v82 = objc_msgSend(v80, sel_selectionType);
    v83 = v390;
    switch((unint64_t)v82)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 7uLL:
        v84 = (uint64_t)v389;
        sub_1BDB759D4(v80, (uint64_t)v389);
        v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v84, 1, v61);
        v76 = v419;
        if (v85 == 1)
        {

          v86 = &qword_1EF50C4B8;
          v87 = v84;
          goto LABEL_69;
        }
        v94 = v84;
        v95 = (uint64_t)v388;
        sub_1BDB77234(v94, (uint64_t)v388);
        v96 = swift_allocBox();
        sub_1BDB77278(v95, v97);
        v98 = v96 | 0x4000000000000004;
        v99 = (objc_class *)type metadata accessor for ICQuery();
        v100 = (char *)objc_allocWithZone(v99);
        *(_QWORD *)&v100[OBJC_IVAR___ICQueryObjC_type] = v98;
        v421.receiver = v100;
        v421.super_class = v99;
        v101 = (char *)objc_msgSendSuper2(&v421, sel_init);

        sub_1BDB772BC(v95);
        break;
      case 6uLL:
        v418 = v81;
        v122 = objc_msgSend(v80, sel_primaryDate);
        v76 = v419;
        if (!v122)
        {
          v127 = v411;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v411, 1, 1, v415);
          goto LABEL_67;
        }
        v123 = v122;
        v417 = (uint64_t)v80;
        v124 = v414;
        sub_1BDBFCAA4();

        v125 = (_QWORD *)v78;
        v126 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
        v127 = v411;
        v128 = v415;
        v126(v411, v124, v415);
        v129 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v125[7];
        v129(v127, 0, 1, v128);
        v130 = (unsigned int (*)(char *, uint64_t, uint64_t))v125[6];
        if (v130(v127, 1, v128) == 1)
          goto LABEL_67;
        v126(v409, v127, v128);
        v131 = objc_msgSend((id)v417, sel_secondaryDate);
        if (v131)
        {
          v132 = v131;
          sub_1BDBFCAA4();

          v127 = v401;
          v126(v401, v124, v128);
          v129(v127, 0, 1, v128);
          if (v130(v127, 1, v128) != 1)
          {
            v133 = v394;
            v126(v394, v127, v128);
            v134 = type metadata accessor for ICQueryType.DateRange(0);
            v135 = swift_allocBox();
            v137 = v136;
            v138 = (void (*)(uint64_t, char *, uint64_t))v125[2];
            v138(v136, v409, v128);
            v138(v137 + *(int *)(v134 + 20), v133, v128);
            v139 = (objc_class *)type metadata accessor for ICQuery();
            v140 = (char *)objc_allocWithZone(v139);
            *(_QWORD *)&v140[OBJC_IVAR___ICQueryObjC_type] = v135 | 0x4000000000000000;
            v423.receiver = v140;
            v423.super_class = v139;
            v101 = (char *)objc_msgSendSuper2(&v423, sel_init);

            v141 = (void (*)(char *, uint64_t))v125[1];
            v141(v133, v128);
            v142 = v409;
            goto LABEL_50;
          }
        }
        else
        {
          v127 = v401;
          v129(v401, 1, 1, v128);
        }

        ((void (*)(char *, uint64_t))v125[1])(v409, v128);
        goto LABEL_68;
      case 8uLL:
        v418 = v81;
        v143 = objc_msgSend(v80, sel_primaryDate);
        v76 = v419;
        if (!v143)
        {
          v127 = v410;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v410, 1, 1, v415);
          goto LABEL_67;
        }
        v144 = v143;
        v417 = (uint64_t)v80;
        v145 = v414;
        sub_1BDBFCAA4();

        v146 = (_QWORD *)v78;
        v147 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
        v127 = v410;
        v128 = v415;
        v147(v410, v145, v415);
        v148 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v146[7];
        v148(v127, 0, 1, v128);
        v149 = (unsigned int (*)(char *, uint64_t, uint64_t))v146[6];
        if (v149(v127, 1, v128) == 1)
          goto LABEL_67;
        v147(v408, v127, v128);
        v150 = objc_msgSend((id)v417, sel_secondaryDate);
        if (v150)
        {
          v151 = v150;
          sub_1BDBFCAA4();

          v127 = v400;
          v147(v400, v145, v128);
          v148(v127, 0, 1, v128);
          if (v149(v127, 1, v128) != 1)
          {
            v152 = v393;
            v147(v393, v127, v128);
            v153 = type metadata accessor for ICQueryType.DateRange(0);
            v154 = swift_allocBox();
            v156 = v155;
            v157 = (void (*)(uint64_t, char *, uint64_t))v146[2];
            v157(v155, v408, v128);
            v157(v156 + *(int *)(v153 + 20), v152, v128);
            v158 = (objc_class *)type metadata accessor for ICQuery();
            v159 = (char *)objc_allocWithZone(v158);
            *(_QWORD *)&v159[OBJC_IVAR___ICQueryObjC_type] = v154 | 0x4000000000000000;
            v422.receiver = v159;
            v422.super_class = v158;
            v101 = (char *)objc_msgSendSuper2(&v422, sel_init);

            v141 = (void (*)(char *, uint64_t))v146[1];
            v141(v152, v128);
            v142 = v408;
            goto LABEL_50;
          }
        }
        else
        {
          v127 = v400;
          v148(v400, 1, 1, v128);
        }

        ((void (*)(char *, uint64_t))v146[1])(v408, v128);
        goto LABEL_68;
      case 9uLL:
        v160 = objc_msgSend(v80, sel_primaryDate);
        v76 = v419;
        if (v160)
        {
          v161 = v160;
          v162 = v414;
          sub_1BDBFCAA4();

          v163 = v78;
          v164 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
          v127 = v412;
          v165 = v415;
          v164(v412, v162, v415);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v127, 0, 1, v165);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v127, 1, v165) != 1)
          {
            v166 = v407;
            v164(v407, v127, v165);
            v167 = type metadata accessor for ICQueryType.DateRange(0);
            v417 = swift_allocBox();
            v418 = v81;
            v169 = v168;
            sub_1BDBFC9C0();
            (*(void (**)(char *, char *, uint64_t))(v163 + 16))(&v169[*(int *)(v167 + 20)], v166, v165);
            v164(v169, v162, v165);
            v170 = v417 | 0x4000000000000000;
            v171 = (objc_class *)type metadata accessor for ICQuery();
            v172 = (char *)objc_allocWithZone(v171);
            *(_QWORD *)&v172[OBJC_IVAR___ICQueryObjC_type] = v170;
            v424.receiver = v172;
            v424.super_class = v171;
            v101 = (char *)objc_msgSendSuper2(&v424, sel_init);

            (*(void (**)(char *, uint64_t))(v163 + 8))(v407, v165);
            break;
          }
        }
        else
        {
          v127 = v412;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v412, 1, 1, v415);
        }

        goto LABEL_68;
      case 0xAuLL:
        v418 = v81;
        v173 = objc_msgSend(v80, sel_primaryDate);
        v76 = v419;
        if (!v173)
        {
          v127 = v413;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v413, 1, 1, v415);
          goto LABEL_67;
        }
        v174 = v173;
        v175 = v414;
        sub_1BDBFCAA4();

        v176 = v78;
        v177 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
        v127 = v413;
        v178 = v415;
        v177(v413, v175, v415);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v127, 0, 1, v178);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v127, 1, v178) == 1)
          goto LABEL_67;
        v179 = v402;
        v177(v402, v127, v178);
        v180 = type metadata accessor for ICQueryType.DateRange(0);
        v417 = swift_allocBox();
        v182 = v181;
        sub_1BDBFCA14();
        (*(void (**)(uint64_t, char *, uint64_t))(v176 + 16))(v182, v179, v178);
        v177((char *)(v182 + *(int *)(v180 + 20)), v175, v178);
        v183 = v417 | 0x4000000000000000;
        v184 = (objc_class *)type metadata accessor for ICQuery();
        v185 = (char *)objc_allocWithZone(v184);
        *(_QWORD *)&v185[OBJC_IVAR___ICQueryObjC_type] = v183;
        v425.receiver = v185;
        v425.super_class = v184;
        v101 = (char *)objc_msgSendSuper2(&v425, sel_init);

        (*(void (**)(char *, uint64_t))(v176 + 8))(v179, v178);
        break;
      default:
        goto LABEL_133;
    }
LABEL_14:
    v102 = OBJC_IVAR___ICQueryObjC_type;
LABEL_18:
    v116 = (uint64_t *)&v101[v102];
    swift_beginAccess();
    v75 = *v116;
    swift_retain();

    goto LABEL_70;
  }
  objc_opt_self();
  v88 = swift_dynamicCastObjCClass();
  if (!v88)
  {
    objc_opt_self();
    v103 = swift_dynamicCastObjCClass();
    if (v103)
    {
      v104 = (void *)v103;
      v105 = swift_allocObject();
      v106 = v68;
      *(_BYTE *)(v105 + 16) = objc_msgSend(v104, sel_inclusionType) == 0;
      v107 = (objc_class *)type metadata accessor for ICQuery();
      v108 = (char *)objc_allocWithZone(v107);
      *(_QWORD *)&v108[OBJC_IVAR___ICQueryObjC_type] = v105 | 0x8000000000000004;
      v431.receiver = v108;
      v431.super_class = v107;
      v109 = (char *)objc_msgSendSuper2(&v431, sel_init);
LABEL_39:
      v72 = v109;

      v73 = OBJC_IVAR___ICQueryObjC_type;
      goto LABEL_3;
    }
    objc_opt_self();
    v117 = swift_dynamicCastObjCClass();
    if (v117)
    {
      v118 = (void *)v117;
      v119 = swift_allocObject();
      v106 = v68;
      *(_BYTE *)(v119 + 16) = objc_msgSend(v118, sel_inclusionType) == 0;
      v120 = (objc_class *)type metadata accessor for ICQuery();
      v121 = (char *)objc_allocWithZone(v120);
      *(_QWORD *)&v121[OBJC_IVAR___ICQueryObjC_type] = v119 | 0x8000000000000000;
      v432.receiver = v121;
      v432.super_class = v120;
      v109 = (char *)objc_msgSendSuper2(&v432, sel_init);
      goto LABEL_39;
    }
    objc_opt_self();
    v186 = swift_dynamicCastObjCClass();
    if (v186)
    {
      v187 = (void *)v186;
      v188 = swift_allocObject();
      v106 = v68;
      *(_BYTE *)(v188 + 16) = objc_msgSend(v187, sel_inclusionType) == 0;
      v189 = (objc_class *)type metadata accessor for ICQuery();
      v190 = (char *)objc_allocWithZone(v189);
      *(_QWORD *)&v190[OBJC_IVAR___ICQueryObjC_type] = v188 | 0xA000000000000000;
      v433.receiver = v190;
      v433.super_class = v189;
      v109 = (char *)objc_msgSendSuper2(&v433, sel_init);
      goto LABEL_39;
    }
    objc_opt_self();
    v250 = swift_dynamicCastObjCClass();
    if (v250)
    {
      v251 = (void *)v250;
      v252 = v68;
      switch((unint64_t)objc_msgSend(v251, sel_selectionType))
      {
        case 0uLL:
          v253 = swift_allocObject();
          *(_BYTE *)(v253 + 16) = 1;
          v254 = v253 | 0x2000000000000004;
          v255 = (objc_class *)type metadata accessor for ICQuery();
          v256 = (char *)objc_allocWithZone(v255);
          *(_QWORD *)&v256[OBJC_IVAR___ICQueryObjC_type] = v254;
          v434.receiver = v256;
          v434.super_class = v255;
          v257 = (char *)objc_msgSendSuper2(&v434, sel_init);
          goto LABEL_96;
        case 1uLL:
          v286 = swift_allocObject();
          *(_BYTE *)(v286 + 16) = 1;
          v287 = v286 | 0x3000000000000000;
          v288 = (objc_class *)type metadata accessor for ICQuery();
          v289 = (char *)objc_allocWithZone(v288);
          *(_QWORD *)&v289[OBJC_IVAR___ICQueryObjC_type] = v287;
          v435.receiver = v289;
          v435.super_class = v288;
          v257 = (char *)objc_msgSendSuper2(&v435, sel_init);
          goto LABEL_96;
        case 2uLL:
          v290 = swift_allocObject();
          *(_BYTE *)(v290 + 16) = 1;
          v291 = v290 | 0x3000000000000004;
          v292 = (objc_class *)type metadata accessor for ICQuery();
          v293 = (char *)objc_allocWithZone(v292);
          *(_QWORD *)&v293[OBJC_IVAR___ICQueryObjC_type] = v291;
          v436.receiver = v293;
          v436.super_class = v292;
          v257 = (char *)objc_msgSendSuper2(&v436, sel_init);
          goto LABEL_96;
        case 3uLL:
          v294 = swift_allocObject();
          *(_BYTE *)(v294 + 16) = 0;
          v295 = v294 | 0x2000000000000004;
          v296 = (objc_class *)type metadata accessor for ICQuery();
          v297 = (char *)objc_allocWithZone(v296);
          *(_QWORD *)&v297[OBJC_IVAR___ICQueryObjC_type] = v295;
          v437.receiver = v297;
          v437.super_class = v296;
          v257 = (char *)objc_msgSendSuper2(&v437, sel_init);
          goto LABEL_96;
        default:
          goto LABEL_133;
      }
    }
    objc_opt_self();
    v258 = swift_dynamicCastObjCClass();
    if (v258)
    {
      v259 = (void *)v258;
      v252 = v68;
      switch((unint64_t)objc_msgSend(v259, sel_selectionType))
      {
        case 1uLL:
          v260 = swift_allocObject();
          *(_BYTE *)(v260 + 16) = 1;
          v261 = v260 | 0x1000000000000004;
          v262 = (objc_class *)type metadata accessor for ICQuery();
          v263 = (char *)objc_allocWithZone(v262);
          *(_QWORD *)&v263[OBJC_IVAR___ICQueryObjC_type] = v261;
          v438.receiver = v263;
          v438.super_class = v262;
          v257 = (char *)objc_msgSendSuper2(&v438, sel_init);
          goto LABEL_96;
        case 2uLL:
          v307 = swift_allocObject();
          *(_WORD *)(v307 + 16) = 1;
          v308 = v307 | 0x2000000000000000;
          v309 = (objc_class *)type metadata accessor for ICQuery();
          v310 = (char *)objc_allocWithZone(v309);
          *(_QWORD *)&v310[OBJC_IVAR___ICQueryObjC_type] = v308;
          v440.receiver = v310;
          v440.super_class = v309;
          v257 = (char *)objc_msgSendSuper2(&v440, sel_init);
          goto LABEL_96;
        case 3uLL:
          v311 = swift_allocObject();
          *(_WORD *)(v311 + 16) = 7;
          v312 = v311 | 0x2000000000000000;
          v313 = (objc_class *)type metadata accessor for ICQuery();
          v314 = (char *)objc_allocWithZone(v313);
          *(_QWORD *)&v314[OBJC_IVAR___ICQueryObjC_type] = v312;
          v441.receiver = v314;
          v441.super_class = v313;
          v257 = (char *)objc_msgSendSuper2(&v441, sel_init);
          goto LABEL_96;
        case 4uLL:
          v315 = swift_allocObject();
          *(_WORD *)(v315 + 16) = 2;
          v316 = v315 | 0x2000000000000000;
          v317 = (objc_class *)type metadata accessor for ICQuery();
          v318 = (char *)objc_allocWithZone(v317);
          *(_QWORD *)&v318[OBJC_IVAR___ICQueryObjC_type] = v316;
          v442.receiver = v318;
          v442.super_class = v317;
          v257 = (char *)objc_msgSendSuper2(&v442, sel_init);
          goto LABEL_96;
        case 5uLL:
          v319 = swift_allocObject();
          *(_WORD *)(v319 + 16) = 3;
          v320 = v319 | 0x2000000000000000;
          v321 = (objc_class *)type metadata accessor for ICQuery();
          v322 = (char *)objc_allocWithZone(v321);
          *(_QWORD *)&v322[OBJC_IVAR___ICQueryObjC_type] = v320;
          v443.receiver = v322;
          v443.super_class = v321;
          v257 = (char *)objc_msgSendSuper2(&v443, sel_init);
          goto LABEL_96;
        case 6uLL:
          v323 = swift_allocObject();
          *(_WORD *)(v323 + 16) = 4;
          v324 = v323 | 0x2000000000000000;
          v325 = (objc_class *)type metadata accessor for ICQuery();
          v326 = (char *)objc_allocWithZone(v325);
          *(_QWORD *)&v326[OBJC_IVAR___ICQueryObjC_type] = v324;
          v444.receiver = v326;
          v444.super_class = v325;
          v257 = (char *)objc_msgSendSuper2(&v444, sel_init);
          goto LABEL_96;
        case 7uLL:
          v327 = swift_allocObject();
          *(_WORD *)(v327 + 16) = 5;
          v328 = v327 | 0x2000000000000000;
          v329 = (objc_class *)type metadata accessor for ICQuery();
          v330 = (char *)objc_allocWithZone(v329);
          *(_QWORD *)&v330[OBJC_IVAR___ICQueryObjC_type] = v328;
          v445.receiver = v330;
          v445.super_class = v329;
          v257 = (char *)objc_msgSendSuper2(&v445, sel_init);
          goto LABEL_96;
        case 8uLL:
          v331 = swift_allocObject();
          *(_WORD *)(v331 + 16) = 6;
          v332 = v331 | 0x2000000000000000;
          v333 = (objc_class *)type metadata accessor for ICQuery();
          v334 = (char *)objc_allocWithZone(v333);
          *(_QWORD *)&v334[OBJC_IVAR___ICQueryObjC_type] = v332;
          v446.receiver = v334;
          v446.super_class = v333;
          v257 = (char *)objc_msgSendSuper2(&v446, sel_init);
          goto LABEL_96;
        case 9uLL:
          v335 = swift_allocObject();
          *(_BYTE *)(v335 + 16) = 0;
          v336 = v335 | 0x1000000000000004;
          v337 = (objc_class *)type metadata accessor for ICQuery();
          v338 = (char *)objc_allocWithZone(v337);
          *(_QWORD *)&v338[OBJC_IVAR___ICQueryObjC_type] = v336;
          v439.receiver = v338;
          v439.super_class = v337;
          v257 = (char *)objc_msgSendSuper2(&v439, sel_init);
          goto LABEL_96;
        default:
          goto LABEL_133;
      }
    }
    objc_opt_self();
    v264 = swift_dynamicCastObjCClass();
    if (v264)
    {
      v265 = (void *)v264;
      v266 = v68;
      v267 = objc_msgSend(v265, sel_folderIdentifiers);
      v268 = sub_1BDBFD9E0();

      v269 = *(_QWORD *)(v268 + 16);
      swift_bridgeObjectRelease();
      if (v269)
      {
        v417 = (uint64_t)v265;
        v418 = v266;
        v270 = objc_msgSend(v265, sel_folderIdentifiers);
        v271 = sub_1BDBFD9E0();

        v272 = *(_QWORD *)(v271 + 16);
        if (v272)
        {
          v455 = MEMORY[0x1E0DEE9D8];
          sub_1BDB2274C(0, v272, 0);
          v273 = v455;
          v416 = v271;
          v274 = (uint64_t *)(v271 + 40);
          do
          {
            v276 = *(v274 - 1);
            v275 = *v274;
            v277 = swift_allocObject();
            *(_QWORD *)(v277 + 16) = v276;
            *(_QWORD *)(v277 + 24) = v275;
            v278 = v277 | 0x5000000000000004;
            v279 = (objc_class *)type metadata accessor for ICQuery();
            v280 = (char *)objc_allocWithZone(v279);
            *(_QWORD *)&v280[OBJC_IVAR___ICQueryObjC_type] = v278;
            v447.receiver = v280;
            v447.super_class = v279;
            swift_bridgeObjectRetain_n();
            v281 = (char *)objc_msgSendSuper2(&v447, sel_init);
            v282 = &v281[OBJC_IVAR___ICQueryObjC_type];
            swift_beginAccess();
            v283 = *(_QWORD *)v282;
            swift_retain();
            swift_bridgeObjectRelease();

            v455 = v273;
            v285 = *(_QWORD *)(v273 + 16);
            v284 = *(_QWORD *)(v273 + 24);
            if (v285 >= v284 >> 1)
            {
              sub_1BDB2274C(v284 > 1, v285 + 1, 1);
              v273 = v455;
            }
            v274 += 2;
            *(_QWORD *)(v273 + 16) = v285 + 1;
            *(_QWORD *)(v273 + 8 * v285 + 32) = v283;
            --v272;
          }
          while (v272);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v273 = MEMORY[0x1E0DEE9D8];
        }
        v76 = v419;
        v339 = swift_allocObject();
        *(_QWORD *)(v339 + 16) = v273;
        v75 = v339 | 0x1000000000000000;
        v340 = objc_msgSend((id)v417, sel_inclusionType);

        if (v340 == (id)1)
        {
          v341 = swift_allocObject();
          *(_QWORD *)(v341 + 16) = v75;
          v75 = v341 | 4;
        }
        goto LABEL_70;
      }

LABEL_134:
      v75 = 0xF000000000000007;
      goto LABEL_4;
    }
    objc_opt_self();
    v300 = swift_dynamicCastObjCClass();
    if (!v300)
    {
      objc_opt_self();
      v342 = swift_dynamicCastObjCClass();
      if (v342)
      {
        v343 = (void *)v342;
        v252 = v68;
        switch((unint64_t)objc_msgSend(v343, sel_selectionType))
        {
          case 0uLL:
            v344 = objc_msgSend(v343, sel_currentUserID);
            if (!v344)
              goto LABEL_133;
            v345 = v344;
            v346 = sub_1BDBFD6F8();
            v348 = v347;

            v349 = swift_allocObject();
            *(_QWORD *)(v349 + 16) = v346;
            *(_QWORD *)(v349 + 24) = v348;
            v350 = v349 | 0x6000000000000004;
            v351 = (objc_class *)type metadata accessor for ICQuery();
            v352 = (char *)objc_allocWithZone(v351);
            *(_QWORD *)&v352[OBJC_IVAR___ICQueryObjC_type] = v350;
            v451.receiver = v352;
            v451.super_class = v351;
            v257 = (char *)objc_msgSendSuper2(&v451, sel_init);
            goto LABEL_96;
          case 1uLL:
            v367 = swift_allocObject();
            *(_BYTE *)(v367 + 16) = 1;
            v368 = v367 | 0x6000000000000000;
            v369 = (objc_class *)type metadata accessor for ICQuery();
            v370 = (char *)objc_allocWithZone(v369);
            *(_QWORD *)&v370[OBJC_IVAR___ICQueryObjC_type] = v368;
            v452.receiver = v370;
            v452.super_class = v369;
            v257 = (char *)objc_msgSendSuper2(&v452, sel_init);
            goto LABEL_96;
          case 2uLL:
            if ((char *)objc_msgSend(v343, sel_joinOperator) - 1 > (char *)1)
              goto LABEL_133;
            v371 = objc_msgSend(v343, sel_participantUserIDs);
            v372 = sub_1BDBFDD10();

            v373 = v420;
            v374 = sub_1BDB725C4(v372);
            v420 = v373;
            swift_bridgeObjectRelease();
            v375 = objc_msgSend(v343, sel_joinOperator);
            v376 = swift_allocObject();
            *(_QWORD *)(v376 + 16) = v374;
            if (v375 == (id)1)
              v377 = v376;
            else
              v377 = v376 | 0x1000000000000000;
            v378 = (objc_class *)type metadata accessor for ICQuery();
            v379 = (char *)objc_allocWithZone(v378);
            *(_QWORD *)&v379[OBJC_IVAR___ICQueryObjC_type] = v377;
            v453.receiver = v379;
            v453.super_class = v378;
            swift_retain();
            v366 = (char *)objc_msgSendSuper2(&v453, sel_init);
            goto LABEL_132;
          case 3uLL:
            v381 = swift_allocObject();
            *(_BYTE *)(v381 + 16) = 0;
            v382 = v381 | 0x6000000000000000;
            v383 = (objc_class *)type metadata accessor for ICQuery();
            v384 = (char *)objc_allocWithZone(v383);
            *(_QWORD *)&v384[OBJC_IVAR___ICQueryObjC_type] = v382;
            v454.receiver = v384;
            v454.super_class = v383;
            v257 = (char *)objc_msgSendSuper2(&v454, sel_init);
            goto LABEL_96;
          default:
            goto LABEL_133;
        }
      }
      goto LABEL_134;
    }
    v301 = (void *)v300;
    v252 = v68;
    v302 = objc_msgSend(v301, sel_selectionType);
    if (v302 != (id)3)
    {
      if (v302 == (id)2)
      {
        if ((char *)objc_msgSend(v301, sel_joinOperator) - 1 <= (char *)1)
        {
          v357 = objc_msgSend(v301, sel_participantUserIDs);
          v358 = sub_1BDBFDD10();

          v359 = v420;
          v360 = sub_1BDB72330(v358);
          v420 = v359;
          swift_bridgeObjectRelease();
          v361 = objc_msgSend(v301, sel_joinOperator);
          v362 = swift_allocObject();
          *(_QWORD *)(v362 + 16) = v360;
          if (v361 == (id)1)
            v363 = v362;
          else
            v363 = v362 | 0x1000000000000000;
          v364 = (objc_class *)type metadata accessor for ICQuery();
          v365 = (char *)objc_allocWithZone(v364);
          *(_QWORD *)&v365[OBJC_IVAR___ICQueryObjC_type] = v363;
          v449.receiver = v365;
          v449.super_class = v364;
          swift_retain();
          v366 = (char *)objc_msgSendSuper2(&v449, sel_init);
LABEL_132:
          v298 = v366;
          swift_release();

          v380 = (uint64_t *)&v298[OBJC_IVAR___ICQueryObjC_type];
          swift_beginAccess();
          v75 = *v380;
          goto LABEL_97;
        }
      }
      else if (v302 == (id)1)
      {
        v303 = swift_allocObject();
        *(_BYTE *)(v303 + 16) = 1;
        v304 = v303 | 0x9000000000000000;
        v305 = (objc_class *)type metadata accessor for ICQuery();
        v306 = (char *)objc_allocWithZone(v305);
        *(_QWORD *)&v306[OBJC_IVAR___ICQueryObjC_type] = v304;
        v448.receiver = v306;
        v448.super_class = v305;
        v257 = (char *)objc_msgSendSuper2(&v448, sel_init);
LABEL_96:
        v298 = v257;

        v299 = (uint64_t *)&v298[OBJC_IVAR___ICQueryObjC_type];
        swift_beginAccess();
        v75 = *v299;
LABEL_97:
        swift_retain();

        goto LABEL_4;
      }
LABEL_133:

      goto LABEL_134;
    }
    v353 = swift_allocObject();
    *(_BYTE *)(v353 + 16) = 0;
    v354 = v353 | 0x9000000000000000;
    v355 = (objc_class *)type metadata accessor for ICQuery();
    v356 = (char *)objc_allocWithZone(v355);
    *(_QWORD *)&v356[OBJC_IVAR___ICQueryObjC_type] = v354;
    v450.receiver = v356;
    v450.super_class = v355;
    v257 = (char *)objc_msgSendSuper2(&v450, sel_init);
    goto LABEL_96;
  }
  v89 = (void *)v88;
  v90 = v68;
  v91 = (_QWORD *)v78;
  switch((unint64_t)objc_msgSend(v89, sel_selectionType))
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 7uLL:
      v92 = (uint64_t)v387;
      sub_1BDB759D4(v89, (uint64_t)v387);
      v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v390 + 48))(v92, 1, v61);
      v76 = v419;
      if (v93 == 1)
      {

        v86 = &qword_1EF50C4B8;
        v87 = v92;
        goto LABEL_69;
      }
      v110 = (uint64_t)v386;
      sub_1BDB77234(v92, (uint64_t)v386);
      v111 = swift_allocBox();
      sub_1BDB77278(v110, v112);
      v113 = v111 | 0x7000000000000004;
      v114 = (objc_class *)type metadata accessor for ICQuery();
      v115 = (char *)objc_allocWithZone(v114);
      *(_QWORD *)&v115[OBJC_IVAR___ICQueryObjC_type] = v113;
      v426.receiver = v115;
      v426.super_class = v114;
      v101 = (char *)objc_msgSendSuper2(&v426, sel_init);

      sub_1BDB772BC(v110);
      v102 = OBJC_IVAR___ICQueryObjC_type;
      goto LABEL_18;
    case 6uLL:
      v418 = v90;
      v191 = objc_msgSend(v89, sel_primaryDate);
      v76 = v419;
      if (!v191)
      {
        v127 = v405;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v405, 1, 1, v415);
        goto LABEL_67;
      }
      v192 = v191;
      sub_1BDBFCAA4();

      v193 = *(void (**)(void))(v78 + 32);
      v127 = v405;
      v128 = v415;
      v193();
      v194 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v91[7];
      v194(v127, 0, 1, v128);
      v195 = (unsigned int (*)(char *, uint64_t, uint64_t))v91[6];
      if (v195(v127, 1, v128) == 1)
        goto LABEL_67;
      ((void (*)(char *, char *, uint64_t))v193)(v399, v127, v128);
      v196 = objc_msgSend(v89, sel_secondaryDate);
      if (v196)
      {
        v197 = v196;
        v198 = v194;
        v199 = v414;
        sub_1BDBFCAA4();

        v127 = v397;
        ((void (*)(char *, char *, uint64_t))v193)(v397, v199, v128);
        v198(v127, 0, 1, v128);
        if (v195(v127, 1, v128) != 1)
        {
          v200 = v392;
          ((void (*)(char *, char *, uint64_t))v193)(v392, v127, v128);
          v201 = type metadata accessor for ICQueryType.DateRange(0);
          v202 = swift_allocBox();
          v204 = v203;
          v205 = (void (*)(uint64_t, char *, uint64_t))v91[2];
          v205(v203, v399, v128);
          v205(v204 + *(int *)(v201 + 20), v200, v128);
          v206 = (objc_class *)type metadata accessor for ICQuery();
          v207 = (char *)objc_allocWithZone(v206);
          *(_QWORD *)&v207[OBJC_IVAR___ICQueryObjC_type] = v202 | 0x7000000000000000;
          v428.receiver = v207;
          v428.super_class = v206;
          v101 = (char *)objc_msgSendSuper2(&v428, sel_init);

          v141 = (void (*)(char *, uint64_t))v91[1];
          v141(v200, v128);
          v142 = v399;
          goto LABEL_50;
        }
      }
      else
      {
        v127 = v397;
        v194(v397, 1, 1, v128);
      }

      ((void (*)(char *, uint64_t))v91[1])(v399, v128);
      goto LABEL_68;
    case 8uLL:
      v418 = v90;
      v208 = objc_msgSend(v89, sel_primaryDate);
      v76 = v419;
      if (!v208)
      {
        v127 = v404;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v404, 1, 1, v415);
        goto LABEL_67;
      }
      v209 = v208;
      sub_1BDBFCAA4();

      v210 = *(void (**)(void))(v78 + 32);
      v127 = v404;
      v128 = v415;
      v210();
      v211 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v91[7];
      v211(v127, 0, 1, v128);
      v212 = (unsigned int (*)(char *, uint64_t, uint64_t))v91[6];
      if (v212(v127, 1, v128) == 1)
      {
LABEL_67:

        goto LABEL_68;
      }
      ((void (*)(char *, char *, uint64_t))v210)(v398, v127, v128);
      v213 = objc_msgSend(v89, sel_secondaryDate);
      if (v213)
      {
        v214 = v213;
        v215 = v211;
        v216 = v414;
        sub_1BDBFCAA4();

        v127 = v396;
        ((void (*)(char *, char *, uint64_t))v210)(v396, v216, v128);
        v215(v127, 0, 1, v128);
        if (v212(v127, 1, v128) != 1)
        {
          v217 = v391;
          ((void (*)(char *, char *, uint64_t))v210)(v391, v127, v128);
          v218 = type metadata accessor for ICQueryType.DateRange(0);
          v219 = swift_allocBox();
          v221 = v220;
          v222 = (void (*)(uint64_t, char *, uint64_t))v91[2];
          v222(v220, v398, v128);
          v222(v221 + *(int *)(v218 + 20), v217, v128);
          v223 = (objc_class *)type metadata accessor for ICQuery();
          v224 = (char *)objc_allocWithZone(v223);
          *(_QWORD *)&v224[OBJC_IVAR___ICQueryObjC_type] = v219 | 0x7000000000000000;
          v427.receiver = v224;
          v427.super_class = v223;
          v101 = (char *)objc_msgSendSuper2(&v427, sel_init);

          v141 = (void (*)(char *, uint64_t))v91[1];
          v141(v217, v128);
          v142 = v398;
LABEL_50:
          v141(v142, v128);
          goto LABEL_14;
        }
      }
      else
      {
        v127 = v396;
        v211(v396, 1, 1, v128);
      }

      ((void (*)(char *, uint64_t))v91[1])(v398, v128);
LABEL_68:
      v86 = &qword_1ED239CD8;
      v87 = (uint64_t)v127;
LABEL_69:
      sub_1BDAC350C(v87, v86);
      v75 = 0xF000000000000007;
LABEL_70:
      *v76 = v75;
      return;
    case 9uLL:
      v225 = objc_msgSend(v89, sel_primaryDate);
      v76 = v419;
      if (!v225)
      {
        v127 = v406;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v406, 1, 1, v415);
        goto LABEL_73;
      }
      v226 = v225;
      v227 = v414;
      sub_1BDBFCAA4();

      v228 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
      v127 = v406;
      v229 = v415;
      v228(v406, v227, v415);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v91[7])(v127, 0, 1, v229);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v91[6])(v127, 1, v229) == 1)
        goto LABEL_73;
      v228(v403, v127, v229);
      v230 = type metadata accessor for ICQueryType.DateRange(0);
      v231 = swift_allocBox();
      v418 = v90;
      v232 = v231;
      v234 = v233;
      sub_1BDBFC9C0();
      ((void (*)(char *, char *, uint64_t))v91[2])(&v234[*(int *)(v230 + 20)], v403, v229);
      v228(v234, v227, v229);
      v235 = (objc_class *)type metadata accessor for ICQuery();
      v236 = (char *)objc_allocWithZone(v235);
      *(_QWORD *)&v236[OBJC_IVAR___ICQueryObjC_type] = v232 | 0x7000000000000000;
      v429.receiver = v236;
      v429.super_class = v235;
      v101 = (char *)objc_msgSendSuper2(&v429, sel_init);

      ((void (*)(char *, uint64_t))v91[1])(v403, v229);
      goto LABEL_14;
    case 0xAuLL:
      v237 = objc_msgSend(v89, sel_primaryDate);
      v76 = v419;
      if (v237)
      {
        v238 = v237;
        v239 = v414;
        sub_1BDBFCAA4();

        v240 = *(void (**)(uint64_t, char *, uint64_t))(v78 + 32);
        v127 = (char *)v77;
        v241 = v415;
        v240(v77, v239, v415);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v91[7])(v77, 0, 1, v241);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v91[6])(v77, 1, v241) != 1)
        {
          v242 = v395;
          v240((uint64_t)v395, v127, v241);
          v243 = type metadata accessor for ICQueryType.DateRange(0);
          v417 = swift_allocBox();
          v418 = v90;
          v244 = v240;
          v246 = v245;
          sub_1BDBFCA14();
          ((void (*)(uint64_t, char *, uint64_t))v91[2])(v246, v242, v241);
          v244(v246 + *(int *)(v243 + 20), v239, v241);
          v247 = v417 | 0x7000000000000000;
          v248 = (objc_class *)type metadata accessor for ICQuery();
          v249 = (char *)objc_allocWithZone(v248);
          *(_QWORD *)&v249[OBJC_IVAR___ICQueryObjC_type] = v247;
          v430.receiver = v249;
          v430.super_class = v248;
          v101 = (char *)objc_msgSendSuper2(&v430, sel_init);

          ((void (*)(char *, uint64_t))v91[1])(v242, v241);
          goto LABEL_14;
        }
      }
      else
      {
        v127 = (char *)v77;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v77, 1, 1, v415);
      }
LABEL_73:

      goto LABEL_68;
    default:
      goto LABEL_133;
  }
}

uint64_t sub_1BDB759D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  void *v10;
  uint64_t v11;

  v4 = 1;
  switch((unint64_t)objc_msgSend(a1, sel_selectionType))
  {
    case 0uLL:
      v4 = 0;
      goto LABEL_7;
    case 1uLL:
      goto LABEL_7;
    case 2uLL:
      v4 = 2;
      goto LABEL_7;
    case 3uLL:
      v4 = 3;
      goto LABEL_7;
    case 4uLL:
      v4 = 4;
      goto LABEL_7;
    case 5uLL:
      v4 = 5;
LABEL_7:
      v5 = type metadata accessor for ICQueryType.RelativeDateRange(0);
      v6 = a2 + *(int *)(v5 + 28);
      v7 = sub_1BDBFCAC8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
      *(_BYTE *)a2 = v4;
      *(_BYTE *)(a2 + 1) = 5;
      *(_QWORD *)(a2 + 8) = 0;
      *(_BYTE *)(a2 + 16) = 1;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 0, 1, v5);
    case 7uLL:
      if ((char *)objc_msgSend(a1, sel_relativeRangeSelectionType) - 1 < (char *)5)
      {
        v9 = objc_msgSend(a1, sel_relativeRangeAmount);
        if (v9)
        {
          v10 = v9;
          sub_1BDBFDD70();

        }
      }
      goto LABEL_11;
    default:
LABEL_11:
      v11 = type metadata accessor for ICQueryType.RelativeDateRange(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

id static ICQuery.makeQueryForNonDeletedNotes()()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  char *v3;
  objc_super v5;

  v0 = swift_allocObject();
  *(_BYTE *)(v0 + 16) = 0;
  v1 = v0 | 0x5000000000000000;
  v2 = (objc_class *)type metadata accessor for ICQuery();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR___ICQueryObjC_type] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ICQuery.replacing(tagIdentifier:withNewTagIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  objc_super v14;
  uint64_t v15;
  uint64_t v16;

  v9 = (uint64_t *)(v4 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  v15 = *v9;
  swift_retain();
  sub_1BDAFA7D8(a1, a2, a3, a4, &v16);
  swift_release();
  v10 = v16;
  v11 = (objc_class *)type metadata accessor for ICQuery();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR___ICQueryObjC_type] = v10;
  v14.receiver = v12;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, sel_init);
}

id ICQuery.removing(tagIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  id result;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  objc_super v10;
  uint64_t v11;
  uint64_t v12;

  v5 = (uint64_t *)(v2 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  v11 = *v5;
  swift_retain();
  sub_1BDAFAA2C(a1, a2, &v12);
  swift_release();
  result = 0;
  v7 = v12;
  if ((~v12 & 0xF000000000000007) != 0)
  {
    v8 = (objc_class *)type metadata accessor for ICQuery();
    v9 = (char *)objc_allocWithZone(v8);
    *(_QWORD *)&v9[OBJC_IVAR___ICQueryObjC_type] = v7;
    v10.receiver = v9;
    v10.super_class = v8;
    return objc_msgSendSuper2(&v10, sel_init);
  }
  return result;
}

unint64_t sub_1BDB75FF8()
{
  unint64_t result;

  result = qword_1EF50E5C0;
  if (!qword_1EF50E5C0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1CF24, &type metadata for ICQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E5C0);
  }
  return result;
}

unint64_t sub_1BDB7603C()
{
  unint64_t result;

  result = qword_1EF50E5C8;
  if (!qword_1EF50E5C8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryEntity, &type metadata for ICQueryEntity);
    atomic_store(result, (unint64_t *)&qword_1EF50E5C8);
  }
  return result;
}

unint64_t sub_1BDB76080()
{
  unint64_t result;

  result = qword_1EF50E5D8;
  if (!qword_1EF50E5D8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryEntity, &type metadata for ICQueryEntity);
    atomic_store(result, (unint64_t *)&qword_1EF50E5D8);
  }
  return result;
}

unint64_t sub_1BDB760C4()
{
  unint64_t result;

  result = qword_1EF50E5A8;
  if (!qword_1EF50E5A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50E5A8);
  }
  return result;
}

uint64_t sub_1BDB76100()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDB76124()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB76134(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x797469746E65 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_1BDB7620C(char a1, char a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  objc_super v12;

  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = a1;
  v5 = v4 | 0xB000000000000004;
  if ((a2 & 1) == 0)
  {
    v6 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v7 + 32) = v5;
    v8 = swift_allocObject();
    *(_BYTE *)(v8 + 16) = 0;
    *(_QWORD *)(v7 + 40) = v8 | 0x5000000000000000;
    *(_QWORD *)(v6 + 16) = v7;
    v5 = v6;
  }
  v9 = (objc_class *)type metadata accessor for ICQuery();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR___ICQueryObjC_type] = v5;
  v12.receiver = v10;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

char *_s11NotesShared7ICQueryC012makeQueryForA8MatchingyACSo14ICTagSelectionCFZ_0(void *a1)
{
  void *v1;
  id v2;
  char *result;
  id v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char **v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  objc_class *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  objc_class *v32;
  char *v33;
  _QWORD *v34;
  char **v35;
  const char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  char *v49;
  const char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  id v57;
  id v58;
  objc_super v59;
  uint64_t v60;
  objc_super v61;
  objc_super v62;
  uint64_t v63;
  objc_super v64;
  objc_super v65;
  uint64_t v66;

  v1 = a1;
  v2 = objc_msgSend(a1, sel_mode);
  if (v2)
  {
    if (v2 == (id)2)
    {
      return (char *)sub_1BDB7620C(0, (char)objc_msgSend(v1, sel_allowsRecentlyDeleted));
    }
    else if (v2 == (id)1)
    {
      return (char *)sub_1BDB7620C(1, (char)objc_msgSend(v1, sel_allowsRecentlyDeleted));
    }
    else
    {
      result = (char *)sub_1BDBFE52C();
      __break(1u);
    }
  }
  else
  {
    v4 = objc_msgSend(v1, sel_includedTagIdentifiers);
    v5 = sub_1BDBFD9E0();

    v6 = *(_QWORD *)(v5 + 16);
    v7 = MEMORY[0x1E0DEE9D8];
    v8 = &unk_1EF50E000;
    v9 = &selRef_ic_unsignedIntegerValue;
    v58 = v1;
    if (v6)
    {
      v63 = MEMORY[0x1E0DEE9D8];
      sub_1BDB2274C(0, v6, 0);
      v10 = v63;
      v11 = (uint64_t *)(v5 + 40);
      do
      {
        v13 = *(v11 - 1);
        v12 = *v11;
        v14 = swift_allocObject();
        *(_QWORD *)(v14 + 16) = v13;
        *(_QWORD *)(v14 + 24) = v12;
        v15 = v14 | 0xB000000000000000;
        v16 = (objc_class *)type metadata accessor for ICQuery();
        v17 = (char *)objc_allocWithZone(v16);
        *(_QWORD *)&v17[OBJC_IVAR___ICQueryObjC_type] = v15;
        v65.receiver = v17;
        v65.super_class = v16;
        swift_bridgeObjectRetain_n();
        v18 = (char *)objc_msgSendSuper2(&v65, sel_init);
        v19 = &v18[OBJC_IVAR___ICQueryObjC_type];
        swift_beginAccess();
        v20 = *(_QWORD *)v19;
        swift_retain();
        swift_bridgeObjectRelease();

        v63 = v10;
        v22 = *(_QWORD *)(v10 + 16);
        v21 = *(_QWORD *)(v10 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1BDB2274C(v21 > 1, v22 + 1, 1);
          v10 = v63;
        }
        v11 += 2;
        *(_QWORD *)(v10 + 16) = v22 + 1;
        *(_QWORD *)(v10 + 8 * v22 + 32) = v20;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      v9 = &selRef_ic_unsignedIntegerValue;
      v1 = v58;
      v7 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v10 = MEMORY[0x1E0DEE9D8];
    }
    v66 = v10;
    v23 = objc_msgSend(v1, sel_excludedTagIdentifiers);
    v24 = sub_1BDBFD9E0();

    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v60 = v7;
      sub_1BDB2274C(0, v25, 0);
      v26 = (uint64_t *)(v24 + 40);
      do
      {
        v28 = *(v26 - 1);
        v27 = *v26;
        v29 = swift_allocObject();
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = v28;
        *(_QWORD *)(v30 + 24) = v27;
        v31 = v30 | 0xB000000000000000;
        v32 = (objc_class *)type metadata accessor for ICQuery();
        v33 = (char *)objc_allocWithZone(v32);
        *(_QWORD *)&v33[v8[182]] = v31;
        v64.receiver = v33;
        v64.super_class = v32;
        v34 = v8;
        v35 = v9;
        v36 = v9[69];
        swift_bridgeObjectRetain_n();
        v37 = (char *)objc_msgSendSuper2(&v64, v36);
        v38 = &v37[v34[182]];
        swift_beginAccess();
        *(_QWORD *)(v29 + 16) = *(_QWORD *)v38;
        swift_retain();

        v9 = v35;
        v8 = v34;
        v39 = (char *)objc_allocWithZone(v32);
        *(_QWORD *)&v39[v34[182]] = v29 | 4;
        v62.receiver = v39;
        v62.super_class = v32;
        v40 = (char *)objc_msgSendSuper2(&v62, (SEL)v9 + 3528);
        v41 = &v40[v34[182]];
        swift_beginAccess();
        v42 = *(_QWORD *)v41;
        swift_retain();
        swift_bridgeObjectRelease();

        v60 = v7;
        v44 = *(_QWORD *)(v7 + 16);
        v43 = *(_QWORD *)(v7 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_1BDB2274C(v43 > 1, v44 + 1, 1);
          v7 = v60;
        }
        v26 += 2;
        *(_QWORD *)(v7 + 16) = v44 + 1;
        *(_QWORD *)(v7 + 8 * v44 + 32) = v42;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease();
      v1 = v58;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1BDBC4D74(v7);
    v45 = objc_msgSend(v1, sel_tagOperator);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v66;
    if (v45 == (id)1)
      v47 = v46;
    else
      v47 = v46 | 0x1000000000000000;
    v48 = (objc_class *)type metadata accessor for ICQuery();
    v49 = (char *)objc_allocWithZone(v48);
    *(_QWORD *)&v49[v8[182]] = v47;
    v61.receiver = v49;
    v61.super_class = v48;
    v50 = v9[69];
    swift_retain();
    v51 = (char *)objc_msgSendSuper2(&v61, v50);
    if ((objc_msgSend(v1, sel_allowsRecentlyDeleted) & 1) != 0)
    {

      swift_release();
    }
    else
    {
      v52 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1BDC17EC0;
      v54 = swift_allocObject();
      *(_BYTE *)(v54 + 16) = 0;
      *(_QWORD *)(v53 + 32) = v54 | 0x5000000000000000;
      v55 = &v51[v8[182]];
      swift_beginAccess();
      *(_QWORD *)(v53 + 40) = *(_QWORD *)v55;
      swift_retain();

      *(_QWORD *)(v52 + 16) = v53;
      v56 = (char *)objc_allocWithZone(v48);
      *(_QWORD *)&v56[v8[182]] = v52;
      v59.receiver = v56;
      v59.super_class = v48;
      v57 = objc_msgSendSuper2(&v59, v9[69]);
      swift_release();

      return (char *)v57;
    }
    return v51;
  }
  return result;
}

id _s11NotesShared7ICQueryC016makeQueryForMathA021allowsRecentlyDeletedACSb_tFZ_0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  objc_super v15;

  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BDC17EC0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BDBFD6F8();
  *(_QWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v3 + 32) = v4 | 0xA000000000000004;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1BDBFD6F8();
  *(_QWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v3 + 40) = v6 | 0xA000000000000004;
  *(_QWORD *)(v2 + 16) = v3;
  v8 = v2 | 0x1000000000000000;
  if ((a1 & 1) == 0)
  {
    v9 = swift_allocObject();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v10 + 32) = v8;
    v11 = swift_allocObject();
    *(_BYTE *)(v11 + 16) = 0;
    *(_QWORD *)(v10 + 40) = v11 | 0x5000000000000000;
    *(_QWORD *)(v9 + 16) = v10;
    v8 = v9;
  }
  v12 = (objc_class *)type metadata accessor for ICQuery();
  v13 = (char *)objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR___ICQueryObjC_type] = v8;
  v15.receiver = v13;
  v15.super_class = v12;
  return objc_msgSendSuper2(&v15, sel_init);
}

id _s11NotesShared7ICQueryC016makeQueryForCallA021allowsRecentlyDeletedACSb_tFZ_0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  objc_super v13;

  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BDC16BA0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BDBFD6F8();
  *(_QWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v3 + 32) = v4 | 0xA000000000000004;
  *(_QWORD *)(v2 + 16) = v3;
  v6 = v2 | 0x1000000000000000;
  if ((a1 & 1) == 0)
  {
    v7 = swift_allocObject();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v8 + 32) = v6;
    v9 = swift_allocObject();
    *(_BYTE *)(v9 + 16) = 0;
    *(_QWORD *)(v8 + 40) = v9 | 0x5000000000000000;
    *(_QWORD *)(v7 + 16) = v8;
    v6 = v7;
  }
  v10 = (objc_class *)type metadata accessor for ICQuery();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR___ICQueryObjC_type] = v6;
  v13.receiver = v11;
  v13.super_class = v10;
  return objc_msgSendSuper2(&v13, sel_init);
}

id _s11NotesShared7ICQueryC031makeQueryForRecentlyDeletedMathA0ACyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  objc_super v12;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BDC17EC0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1BDBFD6F8();
  *(_QWORD *)(v2 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v2 | 0xA000000000000004;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BDBFD6F8();
  *(_QWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v1 + 40) = v4 | 0xA000000000000004;
  *(_QWORD *)(v0 + 16) = v1;
  v6 = swift_allocObject();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BDC17EC0;
  *(_QWORD *)(v7 + 32) = v0 | 0x1000000000000000;
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 1;
  *(_QWORD *)(v7 + 40) = v8 | 0x5000000000000000;
  *(_QWORD *)(v6 + 16) = v7;
  v9 = (objc_class *)type metadata accessor for ICQuery();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR___ICQueryObjC_type] = v6;
  v12.receiver = v10;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

id _s11NotesShared7ICQueryC018makeQueryForPinnedA0_21allowsRecentlyDeletedACSb_SbtFZ_0(char a1, char a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  objc_super v12;

  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = a1;
  v5 = v4 | 0x8000000000000004;
  if ((a2 & 1) == 0)
  {
    v6 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A640);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BDC17EC0;
    *(_QWORD *)(v7 + 32) = v5;
    v8 = swift_allocObject();
    *(_BYTE *)(v8 + 16) = 0;
    *(_QWORD *)(v7 + 40) = v8 | 0x5000000000000000;
    *(_QWORD *)(v6 + 16) = v7;
    v5 = v6;
  }
  v9 = (objc_class *)type metadata accessor for ICQuery();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR___ICQueryObjC_type] = v5;
  v12.receiver = v10;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1BDB76E60@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t method lookup function for ICQuery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ICQuery.entity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ICQuery.entity.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ICQuery.entity.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ICQuery.type.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ICQuery.type.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ICQuery.type.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ICQuery.minimumSupportedVersion.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ICQuery.canBeEdited.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ICQuery.entityName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ICQuery.predicate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ICQuery.__allocating_init(entity:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ICQuery.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ICQuery.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t storeEnumTagSinglePayload for ICQuery.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDB7707C + 4 * byte_1BDC1CDE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDB770B0 + 4 * byte_1BDC1CDE0[v4]))();
}

uint64_t sub_1BDB770B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB770B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB770C0);
  return result;
}

uint64_t sub_1BDB770CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB770D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDB770D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB770E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICQuery.CodingKeys()
{
  return &type metadata for ICQuery.CodingKeys;
}

unint64_t sub_1BDB77100()
{
  unint64_t result;

  result = qword_1EF50E5E0;
  if (!qword_1EF50E5E0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1CEFC, &type metadata for ICQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E5E0);
  }
  return result;
}

unint64_t sub_1BDB77148()
{
  unint64_t result;

  result = qword_1EF50E5E8;
  if (!qword_1EF50E5E8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1CE6C, &type metadata for ICQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E5E8);
  }
  return result;
}

unint64_t sub_1BDB77190()
{
  unint64_t result;

  result = qword_1EF50E5F0;
  if (!qword_1EF50E5F0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1CE94, &type metadata for ICQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E5F0);
  }
  return result;
}

uint64_t sub_1BDB771D4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDB771F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB77224()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB77234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB77278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB772BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BDB77300(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  int v46;
  _QWORD *v47;
  unint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t (**v76)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v77)(uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(__int128 *, _QWORD);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(__int128 *__return_ptr, char *);
  uint64_t v95;
  int v96;
  _QWORD *v97;
  char *v98;
  __int128 v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109[2];
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  _QWORD *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;

  v6 = sub_1BDBFD0E0();
  v128 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v112 = (char *)v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_1BDBFD080();
  v125 = *(_QWORD *)(v126 - 8);
  v8 = MEMORY[0x1E0C80A78](v126);
  v124 = (char *)v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v123 = (char *)v109 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v127 = (uint64_t)v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v131 = (char *)v109 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A8);
  MEMORY[0x1E0C80A78](v15);
  v122 = (char *)v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_1BDBFD08C();
  v133 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v132 = (char *)v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A0);
  MEMORY[0x1E0C80A78](v119);
  v120 = (char *)v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B198);
  MEMORY[0x1E0C80A78](v121);
  v130 = (char *)v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v20);
  v118 = (char *)v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1BDBFD0F8();
  v135 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v117 = (char *)v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v134 = (char *)v109 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1BDBFC948();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v114 = (char *)v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v113 = (char *)v109 - v33;
  v34 = a1;
  v142 = a1;
  v143 = a2;
  v35 = a2;
  v140 = 58;
  v141 = 0xE100000000000000;
  v36 = sub_1BDAC94FC();
  v129 = sub_1BDAC9540();
  sub_1BDBFD65C();
  if ((v137 & 1) != 0)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  v109[1] = v36;
  v111 = v22;
  v110 = v6;
  v115 = a3;
  v109[0] = *((_QWORD *)&v136 + 1);
  swift_bridgeObjectRetain();
  v37 = sub_1BDBFD8B4();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  swift_bridgeObjectRelease();
  MEMORY[0x1C3B78D30](v37, v39, v41, v43);
  swift_bridgeObjectRelease();
  v44 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  LOBYTE(v37) = ICIsNotesURLScheme(v44);

  if ((v37 & 1) == 0)
  {
    v49 = v115;
    *v115 = 0;
    v49[1] = 0;
    v49[2] = 0;
    return;
  }
  v45 = v34;
  sub_1BDBFC930();
  v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  v47 = v115;
  v48 = v35;
  if (v46 == 1)
  {
    sub_1BDAC350C((uint64_t)v28, &qword_1ED23B1B0);
  }
  else
  {
    v50 = v113;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v113, v28, v29);
    v51 = (uint64_t)v114;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v114, v50, v29);
    FolderID.init(url:)(v51, &v136);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v50, v29);
    v52 = v137;
    if (v137)
    {
      *(_OWORD *)v47 = v136;
      v47[2] = v52;
      return;
    }
  }
  v140 = v45;
  v141 = v35;
  v138 = 63;
  v139 = 0xE100000000000000;
  sub_1BDBFD65C();
  v53 = v135;
  v55 = v132;
  v54 = v133;
  if ((v137 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v56 = sub_1BDAC876C(v109[0], v45, v48);
    v58 = v57;
    v60 = v59;
    v62 = v61;
    swift_bridgeObjectRelease();
    v63 = MEMORY[0x1C3B78D30](v56, v58, v60, v62);
    v65 = v64;
    v66 = v130;
  }
  else
  {
    v66 = v130;
    if ((unint64_t)v136 >> 14 < v109[0] >> 14)
    {
      __break(1u);
      return;
    }
    v67 = sub_1BDBFD8B4();
    v63 = MEMORY[0x1C3B78D30](v67);
    v65 = v68;
  }
  v69 = v116;
  swift_bridgeObjectRelease();
  v142 = v63;
  v143 = v65;
  swift_bridgeObjectRetain();
  v70 = sub_1BDBFD86C();
  swift_bridgeObjectRelease();
  if ((v70 & 1) != 0)
    sub_1BDAC87B8(2);
  v71 = v134;
  sub_1BDBFD104();
  v72 = sub_1BDBFD098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v118, 1, 1, v72);
  sub_1BDBFD0B0();
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v117, v71, v111);
  sub_1BDBFD074();
  v73 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  v74 = (uint64_t)v122;
  v73(v122, v55, v69);
  v75 = v120;
  v130 = *(char **)(v54 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v130)(v120, v74, v69);
  v76 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v75[*(int *)(v119 + 44)];
  *v76 = sub_1BDAC882C;
  v76[1] = 0;
  sub_1BDAC350C(v74, &qword_1ED23B1A8);
  v73(v55, v75, v69);
  v77 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0];
  sub_1BDAC31B0(&qword_1ED23B0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0], MEMORY[0x1E0DF00B0]);
  sub_1BDBFD8CC();
  v78 = &v66[*(int *)(v121 + 44)];
  *(_OWORD *)v78 = *(_OWORD *)v76;
  v79 = &v66[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10) + 36)];
  v80 = v125;
  v81 = v123;
  v82 = (uint64_t)v66;
  v83 = v126;
  (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v123, v79, v126);
  sub_1BDAC31B0(&qword_1ED23B0F8, v77, MEMORY[0x1E0DF00B8]);
  v84 = v124;
  sub_1BDBFDDE8();
  sub_1BDAC31B0(&qword_1ED23AF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0090], MEMORY[0x1E0DF0098]);
  LOBYTE(v73) = sub_1BDBFD6BC();
  v85 = *(void (**)(char *, uint64_t))(v80 + 8);
  v85(v84, v83);
  v86 = v83;
  v87 = v82;
  v85(v81, v86);
  v88 = 1;
  v89 = v128;
  if ((v73 & 1) == 0)
  {
    v90 = (void (*)(__int128 *, _QWORD))sub_1BDBFDE3C();
    (*(void (**)(char *))(v89 + 16))(v131);
    v90(&v136, 0);
    v91 = v132;
    ((void (*)(char *, uint64_t, uint64_t))v130)(v132, v82, v69);
    sub_1BDBFDDF4();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v91, v69);
    v88 = 0;
  }
  v92 = (uint64_t)v131;
  v93 = v110;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v131, v88, 1, v110);
  v94 = *(void (**)(__int128 *__return_ptr, char *))v78;
  v95 = v127;
  sub_1BDAC9584(v92, v127);
  v96 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v95, 1, v93);
  v97 = v115;
  if (v96 == 1)
    goto LABEL_25;
  v98 = v112;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v112, v95, v93);
  v94(&v136, v98);
  v99 = v136;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v98, v93);
  if (v99 == __PAIR128__(0xE600000000000000, 0x7265646C6F66))
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v100 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  if ((v100 & 1) == 0)
  {
LABEL_25:
    sub_1BDAC350C(v87, &qword_1ED23B198);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v134, v111);
LABEL_26:
    *v97 = 0;
    v97[1] = 0;
    v97[2] = 0;
    return;
  }
LABEL_21:
  v101 = sub_1BDAC8B0C();
  if (!v102)
    goto LABEL_25;
  v103 = v101;
  v104 = v102;
  swift_bridgeObjectRetain();
  v105 = sub_1BDBFE5D4();
  swift_bridgeObjectRelease();
  if (v105 <= 1)
  {
    v106 = v135;
    swift_bridgeObjectRelease();
    v107 = sub_1BDAC8B0C();
    if (v108)
    {
      *(_BYTE *)v97 = v105;
      v97[1] = v107;
      v97[2] = v108;
      sub_1BDAC350C(v87, &qword_1ED23B198);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v134, v111);
      return;
    }
    sub_1BDAC350C(v87, &qword_1ED23B198);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v134, v111);
    goto LABEL_26;
  }
  *(_BYTE *)v97 = 0;
  v97[1] = v103;
  v97[2] = v104;
  sub_1BDAC350C(v87, &qword_1ED23B198);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v134, v111);
}

void sub_1BDB77E44(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, _QWORD *);
  uint64_t v60;
  char *v61;
  uint64_t (**v62)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v63)(uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(unint64_t *, _QWORD);
  char *v78;
  uint64_t v79;
  void (*v80)(unint64_t *__return_ptr, char *);
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;

  v6 = sub_1BDBFD0E0();
  v115 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v103 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFD080();
  v111 = *(_QWORD *)(v8 - 8);
  v112 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v110 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v109 = (char *)&v99 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v113 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v117 = (char *)&v99 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A8);
  MEMORY[0x1E0C80A78](v16);
  v108 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = (_QWORD *)sub_1BDBFD08C();
  v119 = *(v116 - 1);
  MEMORY[0x1E0C80A78](v116);
  v118 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A0);
  MEMORY[0x1E0C80A78](v105);
  v106 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B198);
  MEMORY[0x1E0C80A78](v107);
  v114 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v21);
  v104 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BDBFD0F8();
  v121 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v120 = (char *)&v99 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = a1;
  v130 = a2;
  v127 = 58;
  v128 = 0xE100000000000000;
  sub_1BDAC94FC();
  sub_1BDAC9540();
  sub_1BDBFD65C();
  if ((v124 & 1) != 0)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  v101 = v23;
  v99 = v6;
  v102 = a3;
  v100 = v123;
  swift_bridgeObjectRetain();
  v31 = sub_1BDBFD8B4();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease();
  MEMORY[0x1C3B78D30](v31, v33, v35, v37);
  swift_bridgeObjectRelease();
  v38 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  LOBYTE(v31) = ICIsNotesURLScheme(v38);

  if ((v31 & 1) == 0)
    goto LABEL_22;
  sub_1BDBFC930();
  sub_1BDAC350C((uint64_t)v30, &qword_1ED23B1B0);
  v127 = a1;
  v128 = a2;
  v125 = 63;
  v126 = 0xE100000000000000;
  sub_1BDBFD65C();
  if ((v124 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1BDAC876C(v100, a1, a2);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    swift_bridgeObjectRelease();
    v46 = MEMORY[0x1C3B78D30](v39, v41, v43, v45);
    v48 = v47;
    v49 = v101;
    v50 = v121;
    v51 = v116;
    v53 = v118;
    v52 = v119;
  }
  else
  {
    v50 = v121;
    v49 = v101;
    v51 = v116;
    v53 = v118;
    v52 = v119;
    if (v122 >> 14 < v100 >> 14)
    {
      __break(1u);
      return;
    }
    v54 = sub_1BDBFD8B4();
    v46 = MEMORY[0x1C3B78D30](v54);
    v48 = v55;
  }
  swift_bridgeObjectRelease();
  v129 = v46;
  v130 = v48;
  swift_bridgeObjectRetain();
  v56 = sub_1BDBFD86C();
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
    sub_1BDAC87B8(2);
  v57 = v120;
  sub_1BDBFD104();
  v58 = sub_1BDBFD098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v104, 1, 1, v58);
  sub_1BDBFD0B0();
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v26, v57, v49);
  sub_1BDBFD074();
  v59 = *(void (**)(char *, char *, _QWORD *))(v52 + 32);
  v60 = (uint64_t)v108;
  v59(v108, v53, v51);
  v61 = v106;
  v116 = *(_QWORD **)(v52 + 16);
  ((void (*)(char *, uint64_t, _QWORD *))v116)(v106, v60, v51);
  v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v61[*(int *)(v105 + 44)];
  *v62 = sub_1BDAC882C;
  v62[1] = 0;
  sub_1BDAC350C(v60, &qword_1ED23B1A8);
  v59(v53, v61, v51);
  v63 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0];
  sub_1BDAC31B0(&qword_1ED23B0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0], MEMORY[0x1E0DF00B0]);
  v64 = v114;
  sub_1BDBFD8CC();
  v65 = &v64[*(int *)(v107 + 44)];
  *(_OWORD *)v65 = *(_OWORD *)v62;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10);
  v67 = v111;
  v68 = v112;
  v69 = v109;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v109, &v64[*(int *)(v66 + 36)], v112);
  sub_1BDAC31B0(&qword_1ED23B0F8, v63, MEMORY[0x1E0DF00B8]);
  v70 = v110;
  sub_1BDBFDDE8();
  sub_1BDAC31B0(&qword_1ED23AF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0090], MEMORY[0x1E0DF0098]);
  LOBYTE(v60) = sub_1BDBFD6BC();
  v71 = *(void (**)(char *, uint64_t))(v67 + 8);
  v71(v70, v68);
  v72 = v68;
  v73 = (uint64_t)v64;
  v71(v69, v72);
  v74 = 1;
  v75 = v99;
  v76 = v115;
  if ((v60 & 1) == 0)
  {
    v77 = (void (*)(unint64_t *, _QWORD))sub_1BDBFDE3C();
    (*(void (**)(char *))(v76 + 16))(v117);
    v77(&v122, 0);
    v78 = v118;
    ((void (*)(char *, uint64_t, _QWORD *))v116)(v118, v73, v51);
    sub_1BDBFDDF4();
    (*(void (**)(char *, _QWORD *))(v119 + 8))(v78, v51);
    v74 = 0;
  }
  v79 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v117, v74, 1, v75);
  v80 = *(void (**)(unint64_t *__return_ptr, char *))v65;
  v81 = v113;
  sub_1BDAC9584(v79, v113);
  v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v81, 1, v75);
  v83 = v121;
  if (v82 != 1)
  {
    v84 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v103, v81, v75);
    v80(&v122, v84);
    v86 = v122;
    v85 = v123;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v84, v75);
    if (v86 == 1702129518 && v85 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v87 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v87 & 1) != 0)
    {
LABEL_17:
      v88 = sub_1BDAC8B0C();
      if (v89)
      {
        v90 = v88;
        v91 = v89;
        swift_bridgeObjectRetain();
        v92 = sub_1BDBFE5D4();
        swift_bridgeObjectRelease();
        if (v92 > 1)
        {
          v98 = v102;
          *v102 = 0;
          *((_QWORD *)v98 + 1) = v90;
          *((_QWORD *)v98 + 2) = v91;
          sub_1BDAC350C(v73, &qword_1ED23B198);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v101);
          return;
        }
        v93 = v101;
        swift_bridgeObjectRelease();
        v94 = sub_1BDAC8B0C();
        if (v95)
        {
          v96 = v102;
          *v102 = v92;
          *((_QWORD *)v96 + 1) = v94;
          *((_QWORD *)v96 + 2) = v95;
          sub_1BDAC350C(v73, &qword_1ED23B198);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v93);
          return;
        }
        sub_1BDAC350C(v73, &qword_1ED23B198);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v93);
        goto LABEL_22;
      }
    }
  }
  sub_1BDAC350C(v73, &qword_1ED23B198);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v101);
LABEL_22:
  v97 = v102;
  *(_QWORD *)v102 = 0;
  *((_QWORD *)v97 + 1) = 0;
  *((_QWORD *)v97 + 2) = 0;
}

void sub_1BDB78850(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, _QWORD *);
  uint64_t v60;
  char *v61;
  uint64_t (**v62)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v63)(uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(unint64_t *, _QWORD);
  char *v78;
  uint64_t v79;
  void (*v80)(unint64_t *__return_ptr, char *);
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;

  v6 = sub_1BDBFD0E0();
  v115 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v103 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFD080();
  v111 = *(_QWORD *)(v8 - 8);
  v112 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v110 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v109 = (char *)&v99 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v113 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v117 = (char *)&v99 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A8);
  MEMORY[0x1E0C80A78](v16);
  v108 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = (_QWORD *)sub_1BDBFD08C();
  v119 = *(v116 - 1);
  MEMORY[0x1E0C80A78](v116);
  v118 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A0);
  MEMORY[0x1E0C80A78](v105);
  v106 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B198);
  MEMORY[0x1E0C80A78](v107);
  v114 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v21);
  v104 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BDBFD0F8();
  v121 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v120 = (char *)&v99 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = a1;
  v130 = a2;
  v127 = 58;
  v128 = 0xE100000000000000;
  sub_1BDAC94FC();
  sub_1BDAC9540();
  sub_1BDBFD65C();
  if ((v124 & 1) != 0)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  v101 = v23;
  v99 = v6;
  v102 = a3;
  v100 = v123;
  swift_bridgeObjectRetain();
  v31 = sub_1BDBFD8B4();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease();
  MEMORY[0x1C3B78D30](v31, v33, v35, v37);
  swift_bridgeObjectRelease();
  v38 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  LOBYTE(v31) = ICIsNotesURLScheme(v38);

  if ((v31 & 1) == 0)
    goto LABEL_22;
  sub_1BDBFC930();
  sub_1BDAC350C((uint64_t)v30, &qword_1ED23B1B0);
  v127 = a1;
  v128 = a2;
  v125 = 63;
  v126 = 0xE100000000000000;
  sub_1BDBFD65C();
  if ((v124 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1BDAC876C(v100, a1, a2);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    swift_bridgeObjectRelease();
    v46 = MEMORY[0x1C3B78D30](v39, v41, v43, v45);
    v48 = v47;
    v49 = v101;
    v50 = v121;
    v51 = v116;
    v53 = v118;
    v52 = v119;
  }
  else
  {
    v50 = v121;
    v49 = v101;
    v51 = v116;
    v53 = v118;
    v52 = v119;
    if (v122 >> 14 < v100 >> 14)
    {
      __break(1u);
      return;
    }
    v54 = sub_1BDBFD8B4();
    v46 = MEMORY[0x1C3B78D30](v54);
    v48 = v55;
  }
  swift_bridgeObjectRelease();
  v129 = v46;
  v130 = v48;
  swift_bridgeObjectRetain();
  v56 = sub_1BDBFD86C();
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
    sub_1BDAC87B8(2);
  v57 = v120;
  sub_1BDBFD104();
  v58 = sub_1BDBFD098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v104, 1, 1, v58);
  sub_1BDBFD0B0();
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v26, v57, v49);
  sub_1BDBFD074();
  v59 = *(void (**)(char *, char *, _QWORD *))(v52 + 32);
  v60 = (uint64_t)v108;
  v59(v108, v53, v51);
  v61 = v106;
  v116 = *(_QWORD **)(v52 + 16);
  ((void (*)(char *, uint64_t, _QWORD *))v116)(v106, v60, v51);
  v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v61[*(int *)(v105 + 44)];
  *v62 = sub_1BDAC882C;
  v62[1] = 0;
  sub_1BDAC350C(v60, &qword_1ED23B1A8);
  v59(v53, v61, v51);
  v63 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0];
  sub_1BDAC31B0(&qword_1ED23B0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0], MEMORY[0x1E0DF00B0]);
  v64 = v114;
  sub_1BDBFD8CC();
  v65 = &v64[*(int *)(v107 + 44)];
  *(_OWORD *)v65 = *(_OWORD *)v62;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10);
  v67 = v111;
  v68 = v112;
  v69 = v109;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v109, &v64[*(int *)(v66 + 36)], v112);
  sub_1BDAC31B0(&qword_1ED23B0F8, v63, MEMORY[0x1E0DF00B8]);
  v70 = v110;
  sub_1BDBFDDE8();
  sub_1BDAC31B0(&qword_1ED23AF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0090], MEMORY[0x1E0DF0098]);
  LOBYTE(v60) = sub_1BDBFD6BC();
  v71 = *(void (**)(char *, uint64_t))(v67 + 8);
  v71(v70, v68);
  v72 = v68;
  v73 = (uint64_t)v64;
  v71(v69, v72);
  v74 = 1;
  v75 = v99;
  v76 = v115;
  if ((v60 & 1) == 0)
  {
    v77 = (void (*)(unint64_t *, _QWORD))sub_1BDBFDE3C();
    (*(void (**)(char *))(v76 + 16))(v117);
    v77(&v122, 0);
    v78 = v118;
    ((void (*)(char *, uint64_t, _QWORD *))v116)(v118, v73, v51);
    sub_1BDBFDDF4();
    (*(void (**)(char *, _QWORD *))(v119 + 8))(v78, v51);
    v74 = 0;
  }
  v79 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v117, v74, 1, v75);
  v80 = *(void (**)(unint64_t *__return_ptr, char *))v65;
  v81 = v113;
  sub_1BDAC9584(v79, v113);
  v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v81, 1, v75);
  v83 = v121;
  if (v82 != 1)
  {
    v84 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v103, v81, v75);
    v80(&v122, v84);
    v86 = v122;
    v85 = v123;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v84, v75);
    if (v86 == 0x656D686361747461 && v85 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v87 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v87 & 1) != 0)
    {
LABEL_17:
      v88 = sub_1BDAC8B0C();
      if (v89)
      {
        v90 = v88;
        v91 = v89;
        swift_bridgeObjectRetain();
        v92 = sub_1BDBFE5D4();
        swift_bridgeObjectRelease();
        if (v92 > 1)
        {
          v98 = v102;
          *v102 = 0;
          *((_QWORD *)v98 + 1) = v90;
          *((_QWORD *)v98 + 2) = v91;
          sub_1BDAC350C(v73, &qword_1ED23B198);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v101);
          return;
        }
        v93 = v101;
        swift_bridgeObjectRelease();
        v94 = sub_1BDAC8B0C();
        if (v95)
        {
          v96 = v102;
          *v102 = v92;
          *((_QWORD *)v96 + 1) = v94;
          *((_QWORD *)v96 + 2) = v95;
          sub_1BDAC350C(v73, &qword_1ED23B198);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v93);
          return;
        }
        sub_1BDAC350C(v73, &qword_1ED23B198);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v93);
        goto LABEL_22;
      }
    }
  }
  sub_1BDAC350C(v73, &qword_1ED23B198);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v101);
LABEL_22:
  v97 = v102;
  *(_QWORD *)v102 = 0;
  *((_QWORD *)v97 + 1) = 0;
  *((_QWORD *)v97 + 2) = 0;
}

void sub_1BDB79278(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, _QWORD *);
  uint64_t v60;
  char *v61;
  uint64_t (**v62)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v63)(uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(unint64_t *, _QWORD);
  char *v78;
  uint64_t v79;
  void (*v80)(unint64_t *__return_ptr, char *);
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;

  v6 = sub_1BDBFD0E0();
  v115 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v103 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFD080();
  v111 = *(_QWORD *)(v8 - 8);
  v112 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v110 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v109 = (char *)&v99 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v113 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v117 = (char *)&v99 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A8);
  MEMORY[0x1E0C80A78](v16);
  v108 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = (_QWORD *)sub_1BDBFD08C();
  v119 = *(v116 - 1);
  MEMORY[0x1E0C80A78](v116);
  v118 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1A0);
  MEMORY[0x1E0C80A78](v105);
  v106 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B198);
  MEMORY[0x1E0C80A78](v107);
  v114 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B8);
  MEMORY[0x1E0C80A78](v21);
  v104 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BDBFD0F8();
  v121 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v120 = (char *)&v99 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = a1;
  v130 = a2;
  v127 = 58;
  v128 = 0xE100000000000000;
  sub_1BDAC94FC();
  sub_1BDAC9540();
  sub_1BDBFD65C();
  if ((v124 & 1) != 0)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  v101 = v23;
  v99 = v6;
  v102 = a3;
  v100 = v123;
  swift_bridgeObjectRetain();
  v31 = sub_1BDBFD8B4();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease();
  MEMORY[0x1C3B78D30](v31, v33, v35, v37);
  swift_bridgeObjectRelease();
  v38 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  LOBYTE(v31) = ICIsNotesURLScheme(v38);

  if ((v31 & 1) == 0)
    goto LABEL_22;
  sub_1BDBFC930();
  sub_1BDAC350C((uint64_t)v30, &qword_1ED23B1B0);
  v127 = a1;
  v128 = a2;
  v125 = 63;
  v126 = 0xE100000000000000;
  sub_1BDBFD65C();
  if ((v124 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1BDAC876C(v100, a1, a2);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    swift_bridgeObjectRelease();
    v46 = MEMORY[0x1C3B78D30](v39, v41, v43, v45);
    v48 = v47;
    v49 = v101;
    v50 = v121;
    v51 = v116;
    v53 = v118;
    v52 = v119;
  }
  else
  {
    v50 = v121;
    v49 = v101;
    v51 = v116;
    v53 = v118;
    v52 = v119;
    if (v122 >> 14 < v100 >> 14)
    {
      __break(1u);
      return;
    }
    v54 = sub_1BDBFD8B4();
    v46 = MEMORY[0x1C3B78D30](v54);
    v48 = v55;
  }
  swift_bridgeObjectRelease();
  v129 = v46;
  v130 = v48;
  swift_bridgeObjectRetain();
  v56 = sub_1BDBFD86C();
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
    sub_1BDAC87B8(2);
  v57 = v120;
  sub_1BDBFD104();
  v58 = sub_1BDBFD098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v104, 1, 1, v58);
  sub_1BDBFD0B0();
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v26, v57, v49);
  sub_1BDBFD074();
  v59 = *(void (**)(char *, char *, _QWORD *))(v52 + 32);
  v60 = (uint64_t)v108;
  v59(v108, v53, v51);
  v61 = v106;
  v116 = *(_QWORD **)(v52 + 16);
  ((void (*)(char *, uint64_t, _QWORD *))v116)(v106, v60, v51);
  v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v61[*(int *)(v105 + 44)];
  *v62 = sub_1BDAC882C;
  v62[1] = 0;
  sub_1BDAC350C(v60, &qword_1ED23B1A8);
  v59(v53, v61, v51);
  v63 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0];
  sub_1BDAC31B0(&qword_1ED23B0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF00A0], MEMORY[0x1E0DF00B0]);
  v64 = v114;
  sub_1BDBFD8CC();
  v65 = &v64[*(int *)(v107 + 44)];
  *(_OWORD *)v65 = *(_OWORD *)v62;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AF10);
  v67 = v111;
  v68 = v112;
  v69 = v109;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v109, &v64[*(int *)(v66 + 36)], v112);
  sub_1BDAC31B0(&qword_1ED23B0F8, v63, MEMORY[0x1E0DF00B8]);
  v70 = v110;
  sub_1BDBFDDE8();
  sub_1BDAC31B0(&qword_1ED23AF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0090], MEMORY[0x1E0DF0098]);
  LOBYTE(v60) = sub_1BDBFD6BC();
  v71 = *(void (**)(char *, uint64_t))(v67 + 8);
  v71(v70, v68);
  v72 = v68;
  v73 = (uint64_t)v64;
  v71(v69, v72);
  v74 = 1;
  v75 = v99;
  v76 = v115;
  if ((v60 & 1) == 0)
  {
    v77 = (void (*)(unint64_t *, _QWORD))sub_1BDBFDE3C();
    (*(void (**)(char *))(v76 + 16))(v117);
    v77(&v122, 0);
    v78 = v118;
    ((void (*)(char *, uint64_t, _QWORD *))v116)(v118, v73, v51);
    sub_1BDBFDDF4();
    (*(void (**)(char *, _QWORD *))(v119 + 8))(v78, v51);
    v74 = 0;
  }
  v79 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v117, v74, 1, v75);
  v80 = *(void (**)(unint64_t *__return_ptr, char *))v65;
  v81 = v113;
  sub_1BDAC9584(v79, v113);
  v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v81, 1, v75);
  v83 = v121;
  if (v82 != 1)
  {
    v84 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v103, v81, v75);
    v80(&v122, v84);
    v86 = v122;
    v85 = v123;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v84, v75);
    if (v86 == 0x656C626174 && v85 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v87 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v87 & 1) != 0)
    {
LABEL_17:
      v88 = sub_1BDAC8B0C();
      if (v89)
      {
        v90 = v88;
        v91 = v89;
        swift_bridgeObjectRetain();
        v92 = sub_1BDBFE5D4();
        swift_bridgeObjectRelease();
        if (v92 > 1)
        {
          v98 = v102;
          *v102 = 0;
          *((_QWORD *)v98 + 1) = v90;
          *((_QWORD *)v98 + 2) = v91;
          sub_1BDAC350C(v73, &qword_1ED23B198);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v101);
          return;
        }
        v93 = v101;
        swift_bridgeObjectRelease();
        v94 = sub_1BDAC8B0C();
        if (v95)
        {
          v96 = v102;
          *v102 = v92;
          *((_QWORD *)v96 + 1) = v94;
          *((_QWORD *)v96 + 2) = v95;
          sub_1BDAC350C(v73, &qword_1ED23B198);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v93);
          return;
        }
        sub_1BDAC350C(v73, &qword_1ED23B198);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v93);
        goto LABEL_22;
      }
    }
  }
  sub_1BDAC350C(v73, &qword_1ED23B198);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v120, v101);
LABEL_22:
  v97 = v102;
  *(_QWORD *)v102 = 0;
  *((_QWORD *)v97 + 1) = 0;
  *((_QWORD *)v97 + 2) = 0;
}

uint64_t static ICAppURLUtilities.entityURI(for:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  void *v14;
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BDACEF7C((void (*)(char *, uint64_t, uint64_t))v17);
  sub_1BDAC246C(v17[0], v18, v19, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BDAC350C((uint64_t)v6, &qword_1ED23B1B0);
    v11 = 1;
  }
  else
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v12(v10, v6, v7);
    v13 = objc_msgSend(a1, sel_ownerRecordName);
    if (v13)
    {
      v14 = v13;
      sub_1BDBFD6F8();

      __swift_instantiateConcreteTypeFromMangledName(qword_1ED23AF18);
      sub_1BDBFC4E0();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BDC16BA0;
      sub_1BDBFC4BC();
      swift_bridgeObjectRelease();
      sub_1BDBFC924();
      swift_bridgeObjectRelease();
    }
    v12(a2, v10, v7);
    v11 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v11, 1, v7);
}

uint64_t static ICAppURLUtilities.isModernNoteEntityURI(_:)(uint64_t a1)
{
  return sub_1BDB7A7D0(a1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1BDB77E44) & 1;
}

uint64_t sub_1BDB79F9C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC90C();
  LOBYTE(a4) = sub_1BDB7A7D0((uint64_t)v8, a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a4 & 1;
}

uint64_t static ICAppURLUtilities.objectIDURIRepresentation(forHTMLNoteEntityURI:context:)@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD v13[3];

  v4 = sub_1BDBFC8A0();
  sub_1BDB77E44(v4, v5, v13);
  swift_bridgeObjectRelease();
  if (v13[2])
  {
    if (LOBYTE(v13[0]) != 2 && (v13[0] & 1) != 0)
    {
      v8 = (void *)sub_1BDBFD6C8();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend(a1, sel_noteForIdentifier_, v8);

      if (v9)
      {
        v10 = objc_msgSend(v9, sel_objectID);
        v11 = objc_msgSend(v10, sel_URIRepresentation);

        sub_1BDBFC90C();
        swift_unknownObjectRelease();

        v12 = sub_1BDBFC948();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v6 = sub_1BDBFC948();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 1, 1, v6);
}

uint64_t sub_1BDB7A35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC90C();
  LOBYTE(a4) = a4(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a4 & 1;
}

uint64_t static ICAppURLUtilities.isModernFolderEntityURI(_:)(uint64_t a1)
{
  return sub_1BDB7A7D0(a1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1BDB77300) & 1;
}

uint64_t _sSo17ICAppURLUtilitiesC11NotesSharedE19isHTMLNoteEntityURIySb10Foundation3URLVFZ_0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_1BDBFC8A0();
  sub_1BDB77E44(v0, v1, &v5);
  swift_bridgeObjectRelease();
  result = v6;
  if (v6)
  {
    v3 = v5;
    swift_bridgeObjectRelease();
    if (v3 == 2)
    {
      return 0;
    }
    else if ((v3 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v4 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
  }
  return result;
}

uint64_t _sSo17ICAppURLUtilitiesC11NotesSharedE20modernNoteIdentifier13fromEntityURISSSg10Foundation3URLV_tFZ_0()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD v3[3];

  v0 = sub_1BDBFC8A0();
  sub_1BDB77E44(v0, v1, v3);
  swift_bridgeObjectRelease();
  if (!v3[2])
    return 0;
  if (LOBYTE(v3[0]) != 2 && (v3[0] & 1) == 0)
    return v3[1];
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _sSo17ICAppURLUtilitiesC11NotesSharedE21isHTMLFolderEntityURIySb10Foundation3URLVFZ_0()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  char v3;
  _QWORD v5[3];

  v0 = sub_1BDBFC8A0();
  sub_1BDB77300(v0, v1, v5);
  swift_bridgeObjectRelease();
  if (!v5[2])
  {
LABEL_6:
    v2 = 0;
    return v2 & 1;
  }
  if (LOBYTE(v5[0]) != 2)
  {
    if ((v5[0] & 1) != 0)
    {
      v3 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v3 ^ 1;
      return v2 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  v2 = 1;
  return v2 & 1;
}

uint64_t sub_1BDB7A7D0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_1BDBFC8A0();
  a2(&v7, v3);
  swift_bridgeObjectRelease();
  result = v8;
  if (v8)
  {
    v5 = v7;
    swift_bridgeObjectRelease();
    if (v5 == 2)
    {
      return 0;
    }
    else if ((v5 & 1) != 0)
    {
      v6 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      return v6 & 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  return result;
}

id _sSo17ICAppURLUtilitiesC11NotesSharedE8objectID22forHTMLFolderEntityURI7contextSo015NSManagedObjectF0CSg10Foundation3URLVSg_So15ICLegacyContext_ptFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void (*v29)(char *, uint64_t);
  _QWORD v31[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31[-1] - v8;
  v10 = sub_1BDBFC948();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v31[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v31[-1] - v15;
  sub_1BDB67ABC(a1, (uint64_t)v9);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    v18 = (uint64_t)v9;
LABEL_3:
    sub_1BDAC350C(v18, &qword_1ED23B1B0);
    return 0;
  }
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  v20 = sub_1BDBFC8A0();
  sub_1BDB77300(v20, v21, v31);
  swift_bridgeObjectRelease();
  if (!v31[2])
    goto LABEL_10;
  if (LOBYTE(v31[0]) != 2)
  {
    if ((v31[0] & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v27 = (void *)sub_1BDBFD6C8();
      swift_bridgeObjectRelease();
      v28 = objc_msgSend(a2, sel_folderForIdentifier_, v27);

      if (v28)
      {
        v22 = objc_msgSend(v28, sel_objectID);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v22 = 0;
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      return v22;
    }
    swift_bridgeObjectRelease();
LABEL_10:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1BDBFC930();
  swift_bridgeObjectRelease();
  if (v17(v7, 1, v10) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v18 = (uint64_t)v7;
    goto LABEL_3;
  }
  v19(v14, v7, v10);
  v24 = objc_msgSend(a2, sel_managedObjectContext);
  v22 = v24;
  if (v24)
  {
    v25 = objc_msgSend(v24, sel_persistentStoreCoordinator);

    if (v25)
    {
      v26 = (void *)sub_1BDBFC8D0();
      v22 = objc_msgSend(v25, sel_managedObjectIDForURIRepresentation_, v26);
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
      v22 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  v29(v14, v10);
  v29(v16, v10);
  return v22;
}

id _sSo17ICAppURLUtilitiesC11NotesSharedE8objectID24forModernFolderEntityURI11noteContextSo015NSManagedObjectF0CSg10Foundation3URLVSg_So06ICNoteM0CtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDB67ABC(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = sub_1BDBFC8A0();
    sub_1BDB77300(v12, v13, &v19);
    swift_bridgeObjectRelease();
    v11 = v20;
    if (v20)
    {
      if (v19 == 2 || (v19 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        swift_bridgeObjectRelease();
        return 0;
      }
      v14 = objc_msgSend(a2, sel_managedObjectContext);
      v15 = (void *)sub_1BDBFD6C8();
      swift_bridgeObjectRelease();
      v16 = objc_msgSend((id)objc_opt_self(), sel_folderWithIdentifier_context_, v15, v14);

      if (v16)
      {
        v11 = objc_msgSend(v16, sel_objectID);

      }
      else
      {
        v11 = 0;
      }
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v11;
  }
  sub_1BDAC350C((uint64_t)v6, &qword_1ED23B1B0);
  return 0;
}

uint64_t static SummarizationManager.generateTopLineTranscriptSummary(transcript:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50E618 + dword_1EF50E618);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDB7AE40;
  return v7(a1, a2);
}

uint64_t sub_1BDB7AE40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_1BDB7AEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50E5F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50E5F8);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static SummarizationManager.canSummarize(transcript:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_1BDBFCB40();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E628);
  v2[8] = swift_task_alloc();
  v4 = sub_1BDBFCE4C();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v5 = sub_1BDBFCE64();
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB7B008()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = v0[10];
  v2 = v0[11];
  v4 = v0[8];
  v3 = v0[9];
  v6 = v0[6];
  v5 = v0[7];
  v11 = v0[5];
  sub_1BDBFCEB8();
  swift_allocObject();
  v0[15] = sub_1BDBFCEAC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v2, *MEMORY[0x1E0D8BD60], v3);
  v7 = sub_1BDBFCE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  sub_1BDBFCE58();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  v0[16] = v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v11);
  v9 = (_QWORD *)swift_task_alloc();
  v0[17] = v9;
  *v9 = v0;
  v9[1] = sub_1BDB7B140;
  return sub_1BDBFCE70();
}

uint64_t sub_1BDB7B140(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_BYTE *)(v4 + 152) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_1BDB7B1C0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BDB7B240()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  if (qword_1EF50B220 != -1)
    swift_once();
  v1 = *(void **)(v0 + 144);
  v2 = sub_1BDBFCE34();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF50E5F8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1BDBFCE1C();
  v6 = sub_1BDBFDEE4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 144);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v12;
    sub_1BDBFE100();
    *v10 = v12;

    _os_log_impl(&dword_1BD918000, v5, v6, "failed to check summarization eligibility: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v10, -1, -1);
    MEMORY[0x1C3B7B478](v9, -1, -1);
    swift_release();

  }
  else
  {
    swift_release();

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t static SummarizationManager.generateSynopsis(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E638);
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E640);
  v3[15] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E648);
  v3[16] = v5;
  v3[17] = *(_QWORD *)(v5 - 8);
  v3[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E650);
  v3[19] = swift_task_alloc();
  v6 = sub_1BDBFCB40();
  v3[20] = v6;
  v3[21] = *(_QWORD *)(v6 - 8);
  v3[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E628);
  v3[23] = swift_task_alloc();
  v7 = sub_1BDBFCE4C();
  v3[24] = v7;
  v3[25] = *(_QWORD *)(v7 - 8);
  v3[26] = swift_task_alloc();
  v8 = sub_1BDBFCE64();
  v3[27] = v8;
  v3[28] = *(_QWORD *)(v8 - 8);
  v3[29] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E658);
  v3[30] = v9;
  v3[31] = *(_QWORD *)(v9 - 8);
  v3[32] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E660);
  v3[33] = v10;
  v3[34] = *(_QWORD *)(v10 - 8);
  v3[35] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E668);
  v3[36] = v11;
  v3[37] = *(_QWORD *)(v11 - 8);
  v3[38] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E670);
  v3[39] = v12;
  v3[40] = *(_QWORD *)(v12 - 8);
  v3[41] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E678);
  v3[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB7B6AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[42];
  v2 = v0[37];
  v3 = v0[38];
  v11 = v0[36];
  v18 = v0[32];
  v22 = v0[31];
  v19 = v0[28];
  v20 = v0[27];
  v21 = v0[30];
  v12 = v0[25];
  v13 = v0[26];
  v4 = v0[23];
  v14 = v0[24];
  v15 = v0[29];
  v5 = v0[22];
  v16 = v0[21];
  v17 = v0[20];
  v7 = v0[12];
  v6 = v0[13];
  sub_1BDBFCEB8();
  swift_allocObject();
  v0[43] = sub_1BDBFCEAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v1, 1, 1, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v3, *MEMORY[0x1E0DF0A50], v11);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  sub_1BDBFDCC8();
  swift_task_dealloc();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v13, *MEMORY[0x1E0D8BD60], v14);
  v8 = sub_1BDBFCE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  sub_1BDBFCE58();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v5, v17);
  sub_1BDBFCE7C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v15, v20);
  sub_1BDBFDBF0();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v18, v21);
  v9 = (_QWORD *)swift_task_alloc();
  v0[44] = v9;
  *v9 = v0;
  v9[1] = sub_1BDB7B91C;
  return sub_1BDBFDCBC();
}

uint64_t sub_1BDB7B91C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB7B980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 336);
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 104);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    {
      swift_release();
    }
    else
    {
      v13 = *(_QWORD *)(v0 + 104);
      v12 = *(_QWORD *)(v0 + 112);
      v14 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16))(v12, *(_QWORD *)(v0 + 336), v14);
      *(_QWORD *)(v0 + 64) = 0;
      sub_1BDBFDCA4();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    }
    v15 = *(_QWORD *)(v0 + 336);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
    sub_1BDAC350C(v15, &qword_1EF50E678);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 144), v1, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8))
    {
      v10 = *(_QWORD *)(v0 + 120);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E680);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    }
    else
    {
      v18 = *(_QWORD *)(v0 + 136);
      v17 = *(_QWORD *)(v0 + 144);
      v20 = *(_QWORD *)(v0 + 120);
      v19 = *(_QWORD *)(v0 + 128);
      v22 = *(_QWORD *)(v0 + 104);
      v21 = *(_QWORD *)(v0 + 112);
      v23 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 16))(v21, *(_QWORD *)(v0 + 336), v23);
      sub_1BDBFCE88();
      v24 = *(_QWORD *)(v0 + 24);
      *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 16);
      *(_QWORD *)(v0 + 40) = v24;
      sub_1BDBFDC98();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E680);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 0, 1, v25);
    }
    sub_1BDAC350C(*(_QWORD *)(v0 + 120), &qword_1EF50E640);
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v26;
    *v26 = v0;
    v26[1] = sub_1BDB7BCB0;
    return sub_1BDBFDCBC();
  }
}

uint64_t sub_1BDB7BCB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB7BD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
  v4 = *(void **)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    swift_release();

  }
  else
  {
    v6 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 16))(v5, *(_QWORD *)(v0 + 336), v7);
    *(_QWORD *)(v0 + 56) = v4;
    v8 = v4;
    sub_1BDBFDCA4();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v9 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
  sub_1BDAC350C(v9, &qword_1EF50E678);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static SummarizationManager.generateKeyPointsForTranscript(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[14] = a2;
  v3[15] = a3;
  v3[13] = a1;
  v3[16] = type metadata accessor for SummarizationUpdate(0);
  v3[17] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E690);
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E698);
  v3[21] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E6A0);
  v3[22] = v5;
  v3[23] = *(_QWORD *)(v5 - 8);
  v3[24] = swift_task_alloc();
  v6 = sub_1BDBFCED0();
  v3[25] = v6;
  v3[26] = *(_QWORD *)(v6 - 8);
  v3[27] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E6A8);
  v3[28] = v7;
  v3[29] = *(_QWORD *)(v7 - 8);
  v3[30] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E6B0);
  v3[31] = v8;
  v3[32] = *(_QWORD *)(v8 - 8);
  v3[33] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E6B8);
  v3[34] = v9;
  v3[35] = *(_QWORD *)(v9 - 8);
  v3[36] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E6C0);
  v3[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB7C068()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[37];
  v3 = v0[32];
  v2 = v0[33];
  v4 = v0[31];
  v5 = v0[27];
  v12 = v0[26];
  v13 = v0[25];
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[19] + 56))(v1, 1, 1, v0[18]);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0DF0A50], v4);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  sub_1BDBFDCC8();
  swift_task_dealloc();
  v0[38] = objc_msgSend(objc_allocWithZone((Class)sub_1BDBFCEE8()), sel_init);
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithString_, v7);
  v0[39] = v8;

  v0[40] = sub_1BDBFCEC4();
  v0[41] = v9;
  objc_msgSend(v8, sel_length);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v5, *MEMORY[0x1E0D8BDF0], v13);
  sub_1BDBFCEDC();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v13);
  sub_1BDBFDBF0();
  v10 = (_QWORD *)swift_task_alloc();
  v0[42] = v10;
  *v10 = v0;
  v10[1] = sub_1BDB7C284;
  return sub_1BDBFDCBC();
}

uint64_t sub_1BDB7C284()
{
  uint64_t v0;

  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB7C2EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
    v7 = *(_QWORD *)(v0 + 168);
    if (v6)
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E6C8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    }
    else
    {
      v9 = *(_QWORD *)(v0 + 160);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, v3, v4);
      v10 = v1;
      sub_1BDBFC738();
      sub_1BDBFDC98();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E6C8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 0, 1, v11);
    }
    sub_1BDAC350C(*(_QWORD *)(v0 + 168), &qword_1EF50E698);
    if (qword_1EF50B220 != -1)
      swift_once();
    v12 = sub_1BDBFCE34();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EF50E5F8);
    v13 = v1;
    v14 = sub_1BDBFCE1C();
    v15 = sub_1BDBFDED8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      *(_QWORD *)(v16 + 4) = v13;
      *v17 = v1;
      _os_log_impl(&dword_1BD918000, v14, v15, "Key points fragment: %@", (uint8_t *)v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v17, -1, -1);
      MEMORY[0x1C3B7B478](v16, -1, -1);
    }
    else
    {

    }
    v18 = (_OWORD *)(v0 + 48);

    v19 = *(_QWORD *)(v0 + 328);
    if (*(_QWORD *)(v2 + 16))
    {
      v20 = *(_QWORD *)(v0 + 320);
      swift_bridgeObjectRetain();
      v21 = sub_1BDAC358C(v20, v19);
      if ((v22 & 1) != 0)
      {
        sub_1BDAE0BA0(*(_QWORD *)(v2 + 56) + 32 * v21, v0 + 48);
      }
      else
      {
        *v18 = 0u;
        *(_OWORD *)(v0 + 64) = 0u;
      }
    }
    else
    {
      *v18 = 0u;
      *(_OWORD *)(v0 + 64) = 0u;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (*(_QWORD *)(v0 + 72))
    {
      if ((swift_dynamicCast() & 1) != 0 && (*(_BYTE *)(v0 + 352) & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      sub_1BDAC350C(v0 + 48, qword_1ED239CF8);
    }
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v29;
    *v29 = v0;
    v29[1] = sub_1BDB7C784;
    return sub_1BDBFDCBC();
  }
LABEL_18:
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  swift_bridgeObjectRelease();
  v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
  v27 = *(void **)(v0 + 304);
  v28 = *(void **)(v0 + 312);
  if (v26)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));

  }
  else
  {
    v32 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 240);
    v33 = *(_QWORD *)(v0 + 224);
    v35 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 16))(v34, *(_QWORD *)(v0 + 296), v36);
    *(_QWORD *)(v0 + 96) = 0;
    sub_1BDBFDCA4();

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  v37 = *(_QWORD *)(v0 + 296);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  sub_1BDAC350C(v37, &qword_1EF50E6C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB7C784()
{
  uint64_t v0;

  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB7C7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v4 = *(void **)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    v6 = *(void **)(v0 + 304);
    v5 = *(void **)(v0 + 312);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));

  }
  else
  {
    v8 = *(void **)(v0 + 304);
    v7 = *(void **)(v0 + 312);
    v9 = *(_QWORD *)(v0 + 232);
    v17 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v11, *(_QWORD *)(v0 + 296), v13);
    *(_QWORD *)(v0 + 88) = v4;
    v14 = v4;
    sub_1BDBFDCA4();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v10);
  }
  v15 = *(_QWORD *)(v0 + 296);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  sub_1BDAC350C(v15, &qword_1EF50E6C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB7C990(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;

  sub_1BDAC350C(a2, a3);
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t SummarizationManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SummarizationManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BDB7CA18(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[7] = a1;
  v2[8] = a2;
  v3 = sub_1BDBFCB40();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E628);
  v2[12] = swift_task_alloc();
  v4 = sub_1BDBFCE4C();
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v5 = sub_1BDBFCE64();
  v2[16] = v5;
  v2[17] = *(_QWORD *)(v5 - 8);
  v2[18] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E768);
  v2[19] = v6;
  v2[20] = *(_QWORD *)(v6 - 8);
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB7CB18()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_1BDBFCEB8();
  swift_allocObject();
  v0[22] = sub_1BDBFCEAC();
  if (qword_1EF50B220 != -1)
    swift_once();
  v1 = sub_1BDBFCE34();
  v0[23] = __swift_project_value_buffer(v1, (uint64_t)qword_1EF50E5F8);
  swift_bridgeObjectRetain();
  v2 = sub_1BDBFCE1C();
  v3 = sub_1BDBFDED8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    v0[6] = sub_1BDBFD7A0();
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD918000, v2, v3, "Generating top line summary, transcriptLength: %ld}", v4, 0xCu);
    MEMORY[0x1C3B7B478](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v5 = v0[12];
  v7 = v0[10];
  v6 = v0[11];
  v8 = v0[9];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[14] + 104))(v0[15], *MEMORY[0x1E0D8BD60], v0[13]);
  v9 = sub_1BDBFCE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  sub_1BDBFCE58();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  v0[24] = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v11 = (_QWORD *)swift_task_alloc();
  v0[25] = v11;
  *v11 = v0;
  v11[1] = sub_1BDB7CD74;
  return sub_1BDBFCEA0();
}

uint64_t sub_1BDB7CD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB7CE08()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1BDBFCE88();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain_n();
  v3 = sub_1BDBFCE1C();
  v4 = sub_1BDBFDED8();
  if (os_log_type_enabled(v3, v4))
  {
    v11 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 168);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14 = v6;
    *(_DWORD *)v5 = 136642819;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_1BDAE53FC(v1, v2, &v14);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BD918000, v3, v4, "Finished generating top line summary {summary: %{sensitive}s}", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v6, -1, -1);
    MEMORY[0x1C3B7B478](v5, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 160);
    swift_release();

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1BDB7D00C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 208);
  v2 = v1;
  v3 = v1;
  v4 = sub_1BDBFCE1C();
  v5 = sub_1BDBFDEE4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 208);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v10;
    sub_1BDBFE100();
    *v8 = v10;

    _os_log_impl(&dword_1BD918000, v4, v5, "Could not generate topline summary: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v8, -1, -1);
    MEMORY[0x1C3B7B478](v7, -1, -1);
    swift_release();

  }
  else
  {
    v11 = *(void **)(v0 + 208);
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_1BDB7D1EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB7C990(a1, *(_QWORD *)(v1 + 16), &qword_1EF50E678, &qword_1EF50E638);
}

uint64_t sub_1BDB7D214(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB7C990(a1, *(_QWORD *)(v1 + 16), &qword_1EF50E6C0, &qword_1EF50E690);
}

uint64_t type metadata accessor for SummarizationManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for SummarizationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BDB7D268()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB7D2B0()
{
  return sub_1BDBFD794();
}

uint64_t sub_1BDB7D2C0()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB7D304@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BDB7D354(_QWORD *a1@<X8>)
{
  *a1 = 1685218162;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1BDB7D368()
{
  return 1685218162;
}

uint64_t sub_1BDB7D378@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BDB7D3CC(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BDB7D3D8()
{
  sub_1BDB7D560();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB7D400()
{
  sub_1BDB7D560();
  return sub_1BDBFEB50();
}

uint64_t FastSync.NoteContentMessage.recordBatchData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1BDB4EB54(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t FastSync.NoteContentMessage.init(recordBatchData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FastSync.NoteContentMessage.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E770);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB7D560();
  sub_1BDBFEACC();
  v10[0] = v8;
  v10[1] = v7;
  sub_1BDB6D16C();
  sub_1BDBFE718();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BDB7D560()
{
  unint64_t result;

  result = qword_1EF50E778;
  if (!qword_1EF50E778)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D140, &_s18NoteContentMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E778);
  }
  return result;
}

uint64_t FastSync.NoteContentMessage.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E780);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB7D560();
  sub_1BDBFEAB4();
  if (!v2)
  {
    sub_1BDB6D1B0();
    sub_1BDBFE670();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1BDB7D6C4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BDB7D6F0();
  result = sub_1BDB7D734();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BDB7D6F0()
{
  unint64_t result;

  result = qword_1EF50E788;
  if (!qword_1EF50E788)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.NoteContentMessage, &type metadata for FastSync.NoteContentMessage);
    atomic_store(result, (unint64_t *)&qword_1EF50E788);
  }
  return result;
}

unint64_t sub_1BDB7D734()
{
  unint64_t result;

  result = qword_1EF50E790;
  if (!qword_1EF50E790)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.NoteContentMessage, &type metadata for FastSync.NoteContentMessage);
    atomic_store(result, (unint64_t *)&qword_1EF50E790);
  }
  return result;
}

uint64_t sub_1BDB7D778@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FastSync.NoteContentMessage.init(from:)(a1, a2);
}

uint64_t sub_1BDB7D78C(_QWORD *a1)
{
  return FastSync.NoteContentMessage.encode(to:)(a1);
}

uint64_t *_s18NoteContentMessageVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1BDB4EB54(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t _s18NoteContentMessageVwxx(uint64_t a1)
{
  return sub_1BDAEB7EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s18NoteContentMessageVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1BDB4EB54(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1BDAEB7EC(v5, v6);
  return a1;
}

uint64_t *_s18NoteContentMessageVwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BDAEB7EC(v3, v4);
  return a1;
}

uint64_t _s18NoteContentMessageVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s18NoteContentMessageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FastSync.NoteContentMessage()
{
  return &type metadata for FastSync.NoteContentMessage;
}

uint64_t _s18NoteContentMessageV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BDB7D954 + 4 * byte_1BDC1CFB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BDB7D974 + 4 * byte_1BDC1CFB5[v4]))();
}

_BYTE *sub_1BDB7D954(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BDB7D974(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDB7D97C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDB7D984(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDB7D98C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDB7D994(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s18NoteContentMessageV10CodingKeysOMa()
{
  return &_s18NoteContentMessageV10CodingKeysON;
}

unint64_t sub_1BDB7D9B4()
{
  unint64_t result;

  result = qword_1EF50E798;
  if (!qword_1EF50E798)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D118, &_s18NoteContentMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E798);
  }
  return result;
}

unint64_t sub_1BDB7D9FC()
{
  unint64_t result;

  result = qword_1EF50E7A0;
  if (!qword_1EF50E7A0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D050, &_s18NoteContentMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E7A0);
  }
  return result;
}

unint64_t sub_1BDB7DA44()
{
  unint64_t result;

  result = qword_1EF50E7A8;
  if (!qword_1EF50E7A8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D078, &_s18NoteContentMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E7A8);
  }
  return result;
}

uint64_t RecordingActivityAttributes.ContentState.recording.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t RecordingActivityAttributes.ContentState.currentTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t RecordingActivityAttributes.ContentState.hash(into:)()
{
  sub_1BDBFEA24();
  return sub_1BDBFEA18();
}

BOOL static RecordingActivityAttributes.ContentState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
}

uint64_t sub_1BDB7DB04()
{
  _BYTE *v0;

  if (*v0)
    return 0x54746E6572727563;
  else
    return 0x6E6964726F636572;
}

uint64_t sub_1BDB7DB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDB7E72C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDB7DB70()
{
  sub_1BDB7DCE4();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB7DB98()
{
  sub_1BDB7DCE4();
  return sub_1BDBFEB50();
}

uint64_t RecordingActivityAttributes.ContentState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E7B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB7DCE4();
  sub_1BDBFEACC();
  v11 = 0;
  sub_1BDBFE6F4();
  if (!v2)
  {
    v10 = 1;
    sub_1BDBFE70C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BDB7DCE4()
{
  unint64_t result;

  result = qword_1EF50E7B8;
  if (!qword_1EF50E7B8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D48C, &type metadata for RecordingActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E7B8);
  }
  return result;
}

uint64_t RecordingActivityAttributes.ContentState.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA24();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t RecordingActivityAttributes.ContentState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E7C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB7DCE4();
  sub_1BDBFEAB4();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_1BDBFE64C();
    v13 = 1;
    v10 = sub_1BDBFE664();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1BDB7DED4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RecordingActivityAttributes.ContentState.init(from:)(a1, a2);
}

uint64_t sub_1BDB7DEE8(_QWORD *a1)
{
  return RecordingActivityAttributes.ContentState.encode(to:)(a1);
}

uint64_t sub_1BDB7DEFC()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA24();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB7DF58()
{
  sub_1BDBFEA24();
  return sub_1BDBFEA18();
}

uint64_t sub_1BDB7DF94()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA24();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

BOOL sub_1BDB7DFEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
}

uint64_t sub_1BDB7E018@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1BDB7E044()
{
  sub_1BDB7E158();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB7E06C()
{
  sub_1BDB7E158();
  return sub_1BDBFEB50();
}

uint64_t RecordingActivityAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E7C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB7E158();
  sub_1BDBFEACC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1BDB7E158()
{
  unint64_t result;

  result = qword_1EF50E7D0;
  if (!qword_1EF50E7D0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D43C, &type metadata for RecordingActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E7D0);
  }
  return result;
}

uint64_t RecordingActivityAttributes.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

unint64_t sub_1BDB7E1C4()
{
  unint64_t result;

  result = qword_1EF50E7D8;
  if (!qword_1EF50E7D8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RecordingActivityAttributes.ContentState, &type metadata for RecordingActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_1EF50E7D8);
  }
  return result;
}

unint64_t sub_1BDB7E20C()
{
  unint64_t result;

  result = qword_1ED23A728;
  if (!qword_1ED23A728)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RecordingActivityAttributes, &type metadata for RecordingActivityAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED23A728);
  }
  return result;
}

unint64_t sub_1BDB7E254()
{
  unint64_t result;

  result = qword_1ED23A720;
  if (!qword_1ED23A720)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RecordingActivityAttributes, &type metadata for RecordingActivityAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED23A720);
  }
  return result;
}

unint64_t sub_1BDB7E29C()
{
  unint64_t result;

  result = qword_1EF50EA60;
  if (!qword_1EF50EA60)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RecordingActivityAttributes.ContentState, &type metadata for RecordingActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_1EF50EA60);
  }
  return result;
}

unint64_t sub_1BDB7E2E4()
{
  unint64_t result;

  result = qword_1EF50E7E0;
  if (!qword_1EF50E7E0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RecordingActivityAttributes.ContentState, &type metadata for RecordingActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_1EF50E7E0);
  }
  return result;
}

unint64_t sub_1BDB7E32C()
{
  unint64_t result;

  result = qword_1EF50EA70;
  if (!qword_1EF50EA70)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for RecordingActivityAttributes.ContentState, &type metadata for RecordingActivityAttributes.ContentState);
    atomic_store(result, &qword_1EF50EA70);
  }
  return result;
}

uint64_t sub_1BDB7E370(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E7C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB7E158();
  sub_1BDBFEACC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for RecordingActivityAttributes()
{
  return &type metadata for RecordingActivityAttributes;
}

uint64_t getEnumTagSinglePayload for RecordingActivityAttributes.ContentState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordingActivityAttributes.ContentState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordingActivityAttributes.ContentState()
{
  return &type metadata for RecordingActivityAttributes.ContentState;
}

ValueMetadata *type metadata accessor for RecordingActivityAttributes.CodingKeys()
{
  return &type metadata for RecordingActivityAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RecordingActivityAttributes.ContentState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDB7E544 + 4 * byte_1BDC1D195[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDB7E578 + 4 * byte_1BDC1D190[v4]))();
}

uint64_t sub_1BDB7E578(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB7E580(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB7E588);
  return result;
}

uint64_t sub_1BDB7E594(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB7E59CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDB7E5A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB7E5A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecordingActivityAttributes.ContentState.CodingKeys()
{
  return &type metadata for RecordingActivityAttributes.ContentState.CodingKeys;
}

unint64_t sub_1BDB7E5C8()
{
  unint64_t result;

  result = qword_1EF50E7E8;
  if (!qword_1EF50E7E8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D3C4, &type metadata for RecordingActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E7E8);
  }
  return result;
}

unint64_t sub_1BDB7E610()
{
  unint64_t result;

  result = qword_1EF50E7F0;
  if (!qword_1EF50E7F0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D3EC, &type metadata for RecordingActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E7F0);
  }
  return result;
}

unint64_t sub_1BDB7E658()
{
  unint64_t result;

  result = qword_1EF50E7F8;
  if (!qword_1EF50E7F8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D414, &type metadata for RecordingActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E7F8);
  }
  return result;
}

unint64_t sub_1BDB7E6A0()
{
  unint64_t result;

  result = qword_1EF50E800;
  if (!qword_1EF50E800)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D334, &type metadata for RecordingActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E800);
  }
  return result;
}

unint64_t sub_1BDB7E6E8()
{
  unint64_t result;

  result = qword_1EF50E808;
  if (!qword_1EF50E808)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D35C, &type metadata for RecordingActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50E808);
  }
  return result;
}

uint64_t sub_1BDB7E72C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6964726F636572 && a2 == 0xE900000000000067;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E6572727563 && a2 == 0xEB00000000656D69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1BDB7E840(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id v6;
  id v7;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  _QWORD *v36;
  id v37;
  _QWORD *v38;
  _QWORD *v39;
  id aBlock[7];

  v3 = v2;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v6 = objc_msgSend(a1, sel_format);
  sub_1BDB7ED3C();
  if ((sub_1BDBFE070() & 1) != 0)
  {
    v7 = a1;

    return v7;
  }
  v9 = (void *)v2[2];
  if (!v9)
    goto LABEL_6;
  v10 = objc_msgSend(v9, sel_outputFormat);
  if (!v10
    || (v11 = v10,
        v12 = a2,
        v13 = v11,
        v14 = sub_1BDBFE070(),
        v13,
        v13,
        v12,
        (v14 & 1) == 0))
  {
LABEL_6:
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89A80]), sel_initFromFormat_toFormat_, v6, a2);
    v16 = (void *)v3[2];
    v3[2] = v15;

    v17 = (void *)v3[2];
    if (!v17)
      goto LABEL_16;
    objc_msgSend(v17, sel_setPrimeMethod_, 2);
  }
  v18 = (void *)v3[2];
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v19, sel_outputFormat);
    objc_msgSend(v20, sel_sampleRate);
    v22 = v21;

    v23 = objc_msgSend(v19, sel_inputFormat);
    objc_msgSend(v23, sel_sampleRate);
    v25 = v24;

    v26 = ceil(v22 / v25 * (double)objc_msgSend(a1, sel_frameLength));
    if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -1.0)
      {
        if (v26 < 4294967300.0)
        {
          v27 = v26;
          v28 = objc_msgSend(v19, sel_outputFormat);
          v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v28, v27);

          if (v3)
          {
            v29 = swift_allocObject();
            *(_BYTE *)(v29 + 16) = 0;
            v30 = (_QWORD *)swift_allocObject();
            v30[2] = v29;
            v30[3] = a1;
            aBlock[4] = sub_1BDB7EDF8;
            aBlock[5] = v30;
            aBlock[0] = (id)MEMORY[0x1E0C809B0];
            aBlock[1] = (id)1107296256;
            aBlock[2] = sub_1BDB21300;
            aBlock[3] = &block_descriptor_9;
            v31 = _Block_copy(aBlock);
            swift_retain();
            v32 = a1;
            swift_release();
            aBlock[0] = 0;
            v33 = objc_msgSend(v19, sel_convertToBuffer_error_withInputFromBlock_, v3, aBlock, v31);
            _Block_release(v31);
            v34 = aBlock[0];
            v35 = v34;
            if (v33 == (id)3)
            {
              sub_1BDB7ED78();
              swift_allocError();
              *v36 = v35;
              v37 = v35;
              swift_willThrow();

              swift_release();
            }
            else
            {

              swift_release();
            }

          }
          else
          {
            sub_1BDB7ED78();
            swift_allocError();
            *v39 = 2;
            swift_willThrow();

          }
          return v3;
        }
LABEL_22:
        __break(1u);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_16:
  sub_1BDB7ED78();
  swift_allocError();
  *v38 = 1;
  swift_willThrow();

  return v3;
}

void *sub_1BDB7EC6C(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  _BYTE *v7;
  uint64_t v8;
  id v9;

  v7 = (_BYTE *)(a3 + 16);
  swift_beginAccess();
  if ((*(_BYTE *)(a3 + 16) & 1) != 0)
  {
    a4 = 0;
    v8 = 1;
  }
  else
  {
    v9 = a4;
    v8 = 0;
  }
  *a2 = v8;
  swift_beginAccess();
  *v7 = 1;
  return a4;
}

uint64_t sub_1BDB7ECF8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BufferConverter()
{
  return objc_opt_self();
}

unint64_t sub_1BDB7ED3C()
{
  unint64_t result;

  result = qword_1EF50E8D0;
  if (!qword_1EF50E8D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50E8D0);
  }
  return result;
}

unint64_t sub_1BDB7ED78()
{
  unint64_t result;

  result = qword_1EF50E8D8;
  if (!qword_1EF50E8D8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D504, &type metadata for BufferConverter.Error);
    atomic_store(result, (unint64_t *)&qword_1EF50E8D8);
  }
  return result;
}

uint64_t sub_1BDB7EDBC()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB7EDCC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void *sub_1BDB7EDF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BDB7EC6C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

_QWORD *initializeBufferWithCopyOfBuffer for BufferConverter.Error(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void destroy for BufferConverter.Error(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

void **assignWithCopy for BufferConverter.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  id v10;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = v7;
      v10 = v7;
      return a1;
    }
LABEL_12:
    *a1 = v7;
    return a1;
  }
  if (v8 > 1)
  {

    v7 = *a2;
    goto LABEL_12;
  }
  *a1 = v7;
  v9 = v7;

  return a1;
}

void **assignWithTake for BufferConverter.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for BufferConverter.Error(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 3)
    return (v3 - 2);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BufferConverter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BufferConverter.Error()
{
  return &type metadata for BufferConverter.Error;
}

void sub_1BDB7F048(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BDB7F084()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

void PersistedActivityEvent.Activities.type.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v1);
  sub_1BDB7F2C4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BDB7F1D4 + 4 * byte_1BDC1D551[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB7F1D4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1BDB7F308(v1);
  *v0 = 0;
  return result;
}

uint64_t type metadata accessor for PersistedActivityEvent.Activities()
{
  uint64_t result;

  result = qword_1ED23B090;
  if (!qword_1ED23B090)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BDB7F2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersistedActivityEvent.Activities();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB7F308(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PersistedActivityEvent.Activities();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void PersistedActivityEvent.Activities.participants.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v1);
  sub_1BDB7F2C4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BDB7F3D0 + 4 * byte_1BDC1D55A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB7F3D0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BDB7F47C()
{
  JUMPOUT(0x1BDB7F468);
}

uint64_t PersistedActivityEvent.Activities.Types.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  v4 = 9;
  if (v2 < 9)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t PersistedActivityEvent.Activities.Types.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDB7F50C + 4 * byte_1BDC1D563[*v0]))(0x657461657263, 0xE600000000000000);
}

uint64_t sub_1BDB7F50C()
{
  return 1702260589;
}

uint64_t sub_1BDB7F51C()
{
  return 2037411683;
}

uint64_t sub_1BDB7F52C()
{
  return 0x656D616E6572;
}

uint64_t sub_1BDB7F53C()
{
  return 0x6574656C6564;
}

uint64_t sub_1BDB7F54C()
{
  return 0x6974726150646461;
}

unint64_t sub_1BDB7F570()
{
  return 0xD000000000000011;
}

unint64_t sub_1BDB7F58C()
{
  return 0xD000000000000013;
}

uint64_t sub_1BDB7F5AC()
{
  return 0x6E6F69746E656DLL;
}

uint64_t sub_1BDB7F5C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDB7F600 + 4 * byte_1BDC1D56C[a1]))(0x657261506D6F7266, 0xEA0000000000746ELL);
}

uint64_t sub_1BDB7F600()
{
  return 0x696669746E656469;
}

uint64_t sub_1BDB7F61C()
{
  return 0x746E657261506E69;
}

uint64_t sub_1BDB7F634()
{
  return 0x656E6F447369;
}

uint64_t sub_1BDB7F648()
{
  return 0x6C616E696769726FLL;
}

uint64_t sub_1BDB7F660()
{
  return 0x7069636974726170;
}

uint64_t sub_1BDB7F690()
{
  return 0x746E657261506F74;
}

uint64_t sub_1BDB7F6AC()
{
  return 1701869940;
}

void sub_1BDB7F6BC(char *a1)
{
  sub_1BDB52EC0(*a1);
}

uint64_t sub_1BDB7F6C8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BDBFEA0C();
  sub_1BDB7F048((uint64_t)v3, v1);
  return sub_1BDBFEA30();
}

void sub_1BDB7F70C(uint64_t a1)
{
  char *v1;

  sub_1BDB7F048(a1, *v1);
}

uint64_t sub_1BDB7F714()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BDBFEA0C();
  sub_1BDB7F048((uint64_t)v3, v1);
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB7F754@<X0>(char *a1@<X8>)
{
  return PersistedActivityEvent.Activities.Types.init(rawValue:)(a1);
}

uint64_t sub_1BDB7F760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PersistedActivityEvent.Activities.Types.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BDB7F784()
{
  sub_1BDB83224();
  return sub_1BDBFD998();
}

uint64_t sub_1BDB7F7E0()
{
  sub_1BDB83224();
  return sub_1BDBFD950();
}

uint64_t sub_1BDB7F82C()
{
  unsigned __int8 *v0;

  return sub_1BDB7F5C4(*v0);
}

uint64_t sub_1BDB7F834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDB82E78(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDB7F858(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1BDB7F864()
{
  sub_1BDB820F8();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDB7F88C()
{
  sub_1BDB820F8();
  return sub_1BDBFEB50();
}

uint64_t PersistedActivityEvent.Activities.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  _QWORD v30[6];
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  char v41;

  v30[5] = a2;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E8E0);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for PersistedActivityEvent.Activities();
  v5 = MEMORY[0x1E0C80A78](v31);
  v35 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v34 = (char *)v30 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v33 = (char *)v30 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v32 = (char *)v30 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v30 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v30 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v30 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)v30 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v30 - v25;
  v27 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_1BDB820F8();
  v37 = v4;
  v28 = v40;
  sub_1BDBFEAB4();
  if (!v28)
  {
    v30[3] = v24;
    v30[4] = v15;
    v30[2] = v21;
    v30[1] = v18;
    v40 = v26;
    v41 = 8;
    sub_1BDB8213C();
    sub_1BDBFE670();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v39);
}

void sub_1BDB7FB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v4 - 144) = 2;
  v5 = v0;
  sub_1BDAF4084();
  sub_1BDBFE670();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  if (!v2)
  {
    *(_QWORD *)(v4 - 304) = 0;
    v6 = *(_QWORD *)(v4 - 112);
    v7 = *(_QWORD *)(v4 - 104);
    v8 = *(_QWORD *)(v4 - 280);
    *(_BYTE *)v8 = *(_BYTE *)(v4 - 120);
    *(_QWORD *)(v8 + 8) = v6;
    *(_QWORD *)(v8 + 16) = v7;
    swift_storeEnumTagMultiPayload();
    v9 = *(_QWORD *)(v4 - 184);
    sub_1BDAF3F74(v8, v9);
    v10 = *(_QWORD *)(v4 - 192);
    sub_1BDAF3F74(v9, *(_QWORD *)(v4 - 264));
    __swift_destroy_boxed_opaque_existential_0Tm(v10);
    JUMPOUT(0x1BDB7FB24);
  }
  JUMPOUT(0x1BDB7FB1CLL);
}

uint64_t PersistedActivityEvent.Activities.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v13;
  _QWORD v14[3];
  uint64_t v15;
  char v16;

  v2 = v1;
  v4 = sub_1BDBFCB40();
  v14[1] = *(_QWORD *)(v4 - 8);
  v14[2] = v4;
  MEMORY[0x1E0C80A78](v4);
  v14[0] = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v14[0]);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E900);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDB820F8();
  sub_1BDBFEACC();
  PersistedActivityEvent.Activities.type.getter();
  v16 = 8;
  sub_1BDB82180();
  v11 = v15;
  sub_1BDBFE718();
  if (!v11)
  {
    v15 = v8;
    sub_1BDB7F2C4(v2, (uint64_t)v6);
    v13 = (char *)&loc_1BDB8034C + 4 * byte_1BDC1D57E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void PersistedActivityEvent.Activities.isSharedRootActivity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for PersistedActivityEvent.Activities();
  v2 = MEMORY[0x1E0C80A78](v1);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  sub_1BDB7F2C4(v0, (uint64_t)&v6 - v4);
  v5 = (char *)sub_1BDB808F8 + 4 * byte_1BDC1D587[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB808F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;

  sub_1BDB7F308(v3);
  sub_1BDB7F2C4(v2, v0);
  sub_1BDB7F2C4(v0, v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)())((char *)sub_1BDB80944 + 4 * byte_1BDC1D590[EnumCaseMultiPayload]))();
}

uint64_t sub_1BDB80944()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BDB7F308(v1);
  sub_1BDB7F308(v0);
  return 0;
}

void PersistedActivityEvent.Activities.isParticipantActivity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v1);
  sub_1BDB7F2C4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BDB80AA4 + 4 * byte_1BDC1D599[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB80AA4()
{
  uint64_t v0;

  sub_1BDB7F308(v0);
  return 0;
}

void sub_1BDB80AD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  JUMPOUT(0x1BDB80AACLL);
}

void PersistedActivityEvent.Activities.isRemoveActivity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v1);
  sub_1BDB7F2C4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BDB80B78 + 4 * byte_1BDC1D5A2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB80B78()
{
  uint64_t v0;

  sub_1BDB7F308(v0);
  return 0;
}

void PersistedActivityEvent.Activities.isAddActivity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v1);
  sub_1BDB7F2C4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BDB80C8C + 4 * byte_1BDC1D5AB[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB80C8C()
{
  uint64_t v0;

  sub_1BDB7F308(v0);
  return 0;
}

void PersistedActivityEvent.Activities.isNoteActivity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v1);
  sub_1BDB7F2C4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BDB80DA0 + 4 * byte_1BDC1D5B4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB80DA0()
{
  uint64_t v0;

  sub_1BDB7F308(v0);
  return 0;
}

void PersistedActivityEvent.Activities.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1BDBFCB40();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v2);
  sub_1BDB7F2C4(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1BDB80EBC + 4 * byte_1BDC1D5BD[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB80EBC()
{
  sub_1BDBFEA18();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

void sub_1BDB8121C()
{
  sub_1BDBFEA18();
  JUMPOUT(0x1BDB811FCLL);
}

uint64_t PersistedActivityEvent.Activities.hashValue.getter()
{
  sub_1BDBFEA0C();
  PersistedActivityEvent.Activities.hash(into:)();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB8135C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PersistedActivityEvent.Activities.init(from:)(a1, a2);
}

uint64_t sub_1BDB81370(_QWORD *a1)
{
  return PersistedActivityEvent.Activities.encode(to:)(a1);
}

uint64_t sub_1BDB81384()
{
  sub_1BDBFEA0C();
  PersistedActivityEvent.Activities.hash(into:)();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB813C4()
{
  sub_1BDBFEA0C();
  PersistedActivityEvent.Activities.hash(into:)();
  return sub_1BDBFEA30();
}

void _s11NotesShared22PersistedActivityEventV10ActivitiesO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[8];
  uint64_t v20;
  char *v21;

  v20 = a1;
  v21 = (char *)a2;
  v2 = sub_1BDBFCB40();
  v19[6] = *(_QWORD *)(v2 - 8);
  v19[7] = v2;
  MEMORY[0x1E0C80A78](v2);
  v19[4] = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistedActivityEvent.Activities();
  v5 = MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  v19[5] = (char *)v19 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E958);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1BDB7F2C4(v20, (uint64_t)v16);
  sub_1BDB7F2C4((uint64_t)v21, v17);
  v21 = v16;
  v18 = (char *)sub_1BDB815E4 + 4 * word_1BDC1D5C6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BDB815E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  char v14;
  char v16;

  v3 = *(_QWORD *)(v2 - 88);
  sub_1BDB7F2C4(v3, v0);
  v5 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  if (!swift_getEnumCaseMultiPayload())
  {
    v7 = *(_QWORD *)(v1 + 8);
    v6 = *(_QWORD *)(v1 + 16);
    if (*(_BYTE *)v0)
      v8 = 1702129518;
    else
      v8 = 0x7265646C6F66;
    if (*(_BYTE *)v0)
      v9 = 0xE400000000000000;
    else
      v9 = 0xE600000000000000;
    if (*(_BYTE *)v1)
      v10 = 1702129518;
    else
      v10 = 0x7265646C6F66;
    if (*(_BYTE *)v1)
      v11 = 0xE400000000000000;
    else
      v11 = 0xE600000000000000;
    if (v8 == v10 && v9 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v13 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_28:
        sub_1BDB7F308(v3);
        goto LABEL_21;
      }
    }
    if (v5 == v7 && v4 == v6)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v16 = sub_1BDBFE874();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        goto LABEL_28;
    }
    sub_1BDB7F308(v3);
    v14 = 1;
    return v14 & 1;
  }
  swift_bridgeObjectRelease();
  sub_1BDB83268(v3);
LABEL_21:
  v14 = 0;
  return v14 & 1;
}

unint64_t sub_1BDB820F8()
{
  unint64_t result;

  result = qword_1EF50E8E8;
  if (!qword_1EF50E8E8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D94C, &_s10ActivitiesO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E8E8);
  }
  return result;
}

unint64_t sub_1BDB8213C()
{
  unint64_t result;

  result = qword_1EF50E8F0;
  if (!qword_1EF50E8F0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for PersistedActivityEvent.Activities.Types, &type metadata for PersistedActivityEvent.Activities.Types);
    atomic_store(result, (unint64_t *)&qword_1EF50E8F0);
  }
  return result;
}

unint64_t sub_1BDB82180()
{
  unint64_t result;

  result = qword_1EF50E908;
  if (!qword_1EF50E908)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for PersistedActivityEvent.Activities.Types, &type metadata for PersistedActivityEvent.Activities.Types);
    atomic_store(result, (unint64_t *)&qword_1EF50E908);
  }
  return result;
}

uint64_t sub_1BDB821C4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1C3B7B388](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDB8222C()
{
  unint64_t result;

  result = qword_1EF50E928;
  if (!qword_1EF50E928)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for PersistedActivityEvent.Activities.Types, &type metadata for PersistedActivityEvent.Activities.Types);
    atomic_store(result, (unint64_t *)&qword_1EF50E928);
  }
  return result;
}

uint64_t sub_1BDB82270()
{
  return sub_1BDAC31B0(&qword_1EF50E930, (uint64_t (*)(uint64_t))type metadata accessor for PersistedActivityEvent.Activities, (uint64_t)&protocol conformance descriptor for PersistedActivityEvent.Activities);
}

_QWORD *_s10ActivitiesOwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v7 = a2[2];
        a1[1] = a2[1];
        a1[2] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v10 = a2[2];
        a1[1] = a2[1];
        a1[2] = v10;
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        v11 = a2[4];
        v12 = a2[5];
        a1[4] = v11;
        a1[5] = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v13 = a2[2];
        a1[1] = a2[1];
        a1[2] = v13;
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        v14 = a2[5];
        a1[4] = a2[4];
        a1[5] = v14;
        *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
        v15 = a2[7];
        v16 = a2[8];
        a1[7] = v15;
        a1[8] = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        v18 = a2[2];
        v19 = a2[3];
        a1[2] = v18;
        a1[3] = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v20 = sub_1BDBFCB40();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
        *((_BYTE *)a1 + *(int *)(v21 + 48)) = *((_BYTE *)a2 + *(int *)(v21 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s10ActivitiesOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
    case 7:
      goto LABEL_5;
    case 1:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    case 6:
      v3 = sub_1BDBFCB40();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *_s10ActivitiesOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v6 = a2[2];
      a1[1] = a2[1];
      a1[2] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v7 = a2[2];
      a1[1] = a2[1];
      a1[2] = v7;
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v8 = a2[4];
      v9 = a2[5];
      a1[4] = v8;
      a1[5] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
      v12 = a2[7];
      v13 = a2[8];
      a1[7] = v12;
      a1[8] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 4u:
    case 5u:
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = a2[2];
      v16 = a2[3];
      a1[2] = v15;
      a1[3] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 6u:
      v17 = sub_1BDBFCB40();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
      *((_BYTE *)a1 + *(int *)(v18 + 48)) = *((_BYTE *)a2 + *(int *)(v18 + 48));
      goto LABEL_9;
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *_s10ActivitiesOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1BDB7F308((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        a1[4] = a2[4];
        a1[5] = a2[5];
        *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
        a1[7] = a2[7];
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 4u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 6u:
        v6 = sub_1BDBFCB40();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
        *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
        goto LABEL_10;
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *_s10ActivitiesOwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 6)
  {
    v6 = sub_1BDBFCB40();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *_s10ActivitiesOwta(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1BDB7F308((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      v6 = sub_1BDBFCB40();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BDB82B7C()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[12];

  v2[4] = &unk_1BDC1D7C0;
  v2[5] = &unk_1BDC1D7D8;
  v2[6] = &unk_1BDC1D7F0;
  v2[7] = &unk_1BDC1D7C0;
  v2[8] = &unk_1BDC1D808;
  v2[9] = &unk_1BDC1D808;
  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[10] = v2;
    v2[11] = MEMORY[0x1E0DE9D18] + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistedActivityEvent.Activities.Types()
{
  return &type metadata for PersistedActivityEvent.Activities.Types;
}

uint64_t _s10ActivitiesO5TypesOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10ActivitiesO5TypesOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BDB82D20 + 4 * byte_1BDC1D5FD[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BDB82D54 + 4 * byte_1BDC1D5F8[v4]))();
}

uint64_t sub_1BDB82D54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB82D5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB82D64);
  return result;
}

uint64_t sub_1BDB82D70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB82D78);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BDB82D7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB82D84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10ActivitiesO10CodingKeysOMa()
{
  return &_s10ActivitiesO10CodingKeysON;
}

unint64_t sub_1BDB82DA4()
{
  unint64_t result;

  result = qword_1EF50E938;
  if (!qword_1EF50E938)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D924, &_s10ActivitiesO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E938);
  }
  return result;
}

unint64_t sub_1BDB82DEC()
{
  unint64_t result;

  result = qword_1EF50E940;
  if (!qword_1EF50E940)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D894, &_s10ActivitiesO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E940);
  }
  return result;
}

unint64_t sub_1BDB82E34()
{
  unint64_t result;

  result = qword_1EF50E948;
  if (!qword_1EF50E948)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1D8BC, &_s10ActivitiesO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50E948);
  }
  return result;
}

uint64_t sub_1BDB82E78(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x657261506D6F7266 && a2 == 0xEA0000000000746ELL || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E657261506E69 && a2 == 0xE800000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E6F447369 && a2 == 0xE600000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xE800000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEC00000073746E61 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746E657261506F74 && a2 == 0xE800000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

unint64_t sub_1BDB83224()
{
  unint64_t result;

  result = qword_1EF50E950;
  if (!qword_1EF50E950)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for PersistedActivityEvent.Activities.Types, &type metadata for PersistedActivityEvent.Activities.Types);
    atomic_store(result, (unint64_t *)&qword_1EF50E950);
  }
  return result;
}

uint64_t sub_1BDB83268(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E958);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

NSAttributedString __swiftcall ICTTMergeableAttributedString.authorAttributedString(for:object:)(__C::_NSRange a1, ICCloudSyncingObject *object)
{
  void *v2;
  void *v3;
  Swift::Int length;
  Swift::Int location;
  NSAttributedString result;
  Class isa;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  ICCloudSyncingObject *v16;
  char isEscapingClosureAtFileLocation;
  _QWORD v18[6];

  v3 = v2;
  length = a1.length;
  location = a1.location;
  result.super.isa = (Class)objc_msgSend(v3, sel_attributedString);
  if (result.super.isa)
  {
    isa = result.super.isa;
    v9 = -[objc_class attributedSubstringFromRange:](result.super.isa, sel_attributedSubstringFromRange_, location, length);

    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v9);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v3;
    v11[3] = v10;
    v11[4] = object;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_1BDB83888;
    *(_QWORD *)(v12 + 24) = v11;
    v18[4] = sub_1BDB1D3A4;
    v18[5] = v12;
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 1107296256;
    v18[2] = sub_1BDB838A4;
    v18[3] = &block_descriptor_10;
    v13 = _Block_copy(v18);
    v14 = v3;
    v15 = v10;
    v16 = object;
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_enumerateEditsInRange_usingBlock_, location, length, v13);
    _Block_release(v13);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result.super.isa = (Class)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return (NSAttributedString)v15;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB83478(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void *v28;
  char **v29;
  id v30;
  __CFString *v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  void *v41;
  unsigned int v42;
  __CFString *v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v48;
  char *v49;
  char *v50;
  void *v51;
  uint64_t v52;
  id v53;

  v48 = a5;
  v53 = a4;
  v51 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(v52 - 8);
  v10 = MEMORY[0x1E0C80A78](v52);
  v50 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v49 = (char *)&v48 - v12;
  v13 = sub_1BDBFCB40();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v48 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v48 - v21;
  v23 = objc_msgSend(a1, sel_replicaID);
  sub_1BDBFCB10();

  v24 = objc_msgSend((id)objc_opt_self(), sel_CR_unserialized);
  sub_1BDBFCB10();

  v25 = sub_1BDBFCB04();
  v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v17, v13);
  v27 = v13;
  v26(v20, v13);
  if ((v25 & 1) != 0)
    v28 = v51;
  else
    v28 = a1;
  v29 = &selRef_replicaUUID;
  if ((v25 & 1) == 0)
    v29 = &selRef_replicaID;
  v30 = objc_msgSend(v28, *v29, v48);
  sub_1BDBFCB10();

  v31 = ICTTAttributeNameReplicaID;
  v32 = (void *)sub_1BDBFCAF8();
  v33 = objc_msgSend(a1, sel_range);
  objc_msgSend(v53, sel_addAttribute_value_range_, v31, v32, v33, v34);

  v35 = objc_msgSend(a1, sel_timestamp);
  if (!v35)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v52);
    goto LABEL_12;
  }
  v36 = v35;
  v37 = v50;
  sub_1BDBFCAA4();

  v38 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v39 = v52;
  v38(v8, v37, v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v39);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v39) == 1)
  {
LABEL_12:
    v26(v22, v27);
    return sub_1BDAC350C((uint64_t)v8, &qword_1ED239CD8);
  }
  v40 = v49;
  v38(v49, v8, v39);
  v41 = (void *)sub_1BDBFCAF8();
  v42 = objc_msgSend(v48, sel_trustsTimestampsFromReplicaID_, v41);

  if (v42)
  {
    v43 = ICTTAttributeNameTimestamp;
    sub_1BDBFCA8C();
    v44 = (void *)sub_1BDBFDCD4();
    v45 = objc_msgSend(a1, sel_range);
    objc_msgSend(v53, sel_addAttribute_value_range_, v43, v44, v45, v46);

  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v40, v39);
  return ((uint64_t (*)(char *, uint64_t))v26)(v22, v27);
}

uint64_t sub_1BDB83854()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_1BDB83888(void *a1, uint64_t a2)
{
  void **v2;

  return sub_1BDB83478(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BDB83894()
{
  return swift_deallocObject();
}

void sub_1BDB838A4(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

Swift::Void __swiftcall ICTTMergeableAttributedString.insertAuthorAttributedString(_:at:)(NSAttributedString _, Swift::Int at)
{
  objc_class *v2;
  __CFString *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSAttributedString *v8;
  uint64_t v9;
  void *v10;
  objc_class *v11;
  Class v12;
  _QWORD aBlock[6];
  Swift::Int v14;

  v14 = at;
  v4 = ICTTAttributeNameReplicaID;
  v5 = -[objc_class ic_range](_.super.isa, sel_ic_range);
  v7 = v6;
  v8 = (NSAttributedString *)swift_allocObject();
  v8[2].super.isa = v2;
  v8[3].super.isa = _.super.isa;
  v8[4].super.isa = (Class)&v14;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BDB83D70;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1BDB1D3A4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB83D8C;
  aBlock[3] = &block_descriptor_12;
  v10 = _Block_copy(aBlock);
  v11 = v2;
  v12 = _.super.isa;
  swift_retain();
  swift_release();
  -[objc_class enumerateAttribute:inRange:options:usingBlock:](v12, sel_enumerateAttribute_inRange_options_usingBlock_, v4, v5, v7, 0, v10);

  _Block_release(v10);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v12 & 1) != 0)
    __break(1u);
}

uint64_t sub_1BDB83A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, _QWORD *a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _BYTE v39[24];
  uint64_t v40;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD30);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BDBFCB40();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDADED1C(a1, (uint64_t)v39);
  v37 = a3;
  v38 = a7;
  v36 = a2;
  if (v40)
  {
    v20 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, v20 ^ 1u, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BDAC350C((uint64_t)v39, qword_1ED239CF8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }
  v21 = objc_msgSend(a5, sel_replicaUUID);
  sub_1BDBFCB10();

  sub_1BDAC350C((uint64_t)v15, &qword_1ED23AD30);
LABEL_6:
  v22 = objc_msgSend(a5, sel_serialize);
  v23 = sub_1BDBFC990();
  v25 = v24;

  v26 = objc_allocWithZone((Class)ICTTMergeableAttributedString);
  v27 = (void *)sub_1BDBFC978();
  v28 = a5;
  v29 = (void *)sub_1BDBFCAF8();
  v30 = objc_msgSend(v26, sel_initWithData_replicaID_, v27, v29);

  sub_1BDAEB7EC(v23, v25);
  v31 = v37;
  v32 = objc_msgSend(a6, sel_attributedSubstringFromRange_, v36, v37);
  v33 = v38;
  objc_msgSend(v30, sel_insertAttributedString_atIndex_, v32, *v38);

  objc_msgSend(v28, sel_mergeWithString_, v30);
  result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (__OFADD__(*v33, v31))
    __break(1u);
  else
    *v33 += v31;
  return result;
}

uint64_t sub_1BDB83D44()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BDB83D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BDB83A8C(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(_QWORD **)(v4 + 32));
}

uint64_t sub_1BDB83D7C()
{
  return swift_deallocObject();
}

uint64_t sub_1BDB83D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_1BDAC350C((uint64_t)&v11, qword_1ED239CF8);
}

uint64_t sub_1BDB83E24(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for TranscriptViewModelSegment(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22A08(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(sub_1BDBFD050() - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BDB22A08(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1BDAFE158((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, type metadata accessor for TranscriptViewModelSegment);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1BDB83F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50E960);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50E960);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL static TranscriptSegmentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptSegmentType.hash(into:)()
{
  return sub_1BDBFEA18();
}

uint64_t TranscriptSegmentType.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

BOOL static TranscriptUpdateType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TranscriptUpdateType.hash(into:)()
{
  return sub_1BDBFEA18();
}

uint64_t TranscriptUpdateType.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t (*sub_1BDB8412C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BDB84168@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB8420C()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  swift_bridgeObjectRetain();
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BDB842C4()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for LiveTranscriptionCoordinator()
{
  uint64_t result;

  result = qword_1EF50EAD8;
  if (!qword_1EF50EAD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BDB843A4()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BDB84450(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB844B4()
{
  uint64_t v0;

  return sub_1BDB84450(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*sub_1BDB844CC(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1BDBFCC0C();
  swift_release();
  v4[7] = sub_1BDB8412C();
  return sub_1BDB845B4;
}

void sub_1BDB845B4(_QWORD *a1)
{
  sub_1BDB864B8(a1);
}

uint64_t (*sub_1BDB845C0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BDB845FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB846A0()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  swift_bridgeObjectRetain();
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BDB84758()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB847FC()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BDB848A8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDB8490C()
{
  uint64_t v0;

  return sub_1BDB848A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*sub_1BDB84924(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1BDBFCC0C();
  swift_release();
  v4[7] = sub_1BDB845C0();
  return sub_1BDB84A0C;
}

void sub_1BDB84A0C(_QWORD *a1)
{
  sub_1BDB864B8(a1);
}

uint64_t (*sub_1BDB84A18())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BDB84A54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB84AF8()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  swift_bridgeObjectRetain();
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BDB84BB0()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDB84C54()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  return swift_release();
}

void (*sub_1BDB84D00(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1BDBFCC0C();
  swift_release();
  v4[7] = sub_1BDB84A18();
  return sub_1BDB84DE8;
}

void sub_1BDB84DE8(_QWORD *a1)
{
  sub_1BDB864B8(a1);
}

id sub_1BDB84DF4()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  return *(id *)(v0 + 48);
}

id sub_1BDB84E78@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  v4 = *(void **)(v3 + 48);
  *a2 = v4;
  return v4;
}

uint64_t sub_1BDB84F04(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  v2 = v1;
  sub_1BDBFCBE8();

  return swift_release();
}

uint64_t (*sub_1BDB84FB8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BDB84FF4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 56);
  return result;
}

uint64_t sub_1BDB85094()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  return swift_release();
}

uint64_t sub_1BDB8513C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1BDB851DC()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  return swift_release();
}

uint64_t sub_1BDB85284()
{
  return sub_1BDB8BBFC();
}

void (*sub_1BDB85298(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1BDBFCC0C();
  swift_release();
  v4[7] = sub_1BDB84FB8();
  return sub_1BDB85380;
}

void sub_1BDB85380(_QWORD *a1)
{
  sub_1BDB864B8(a1);
}

uint64_t (*sub_1BDB8538C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BDB853C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  return sub_1BDB157E4(v3 + 64, a2, &qword_1EF50E988);
}

uint64_t sub_1BDB85478(uint64_t a1)
{
  _BYTE v2[40];

  sub_1BDB157E4(a1, (uint64_t)v2, &qword_1EF50E988);
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_release();
  return sub_1BDAC350C((uint64_t)v2, &qword_1EF50E988);
}

uint64_t sub_1BDB85540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  return sub_1BDB157E4(v1 + 64, a1, &qword_1EF50E988);
}

uint64_t sub_1BDB855F8(uint64_t a1)
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_release();
  return sub_1BDAC350C(a1, &qword_1EF50E988);
}

uint64_t sub_1BDB856AC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  sub_1BDB157E4(a2, (uint64_t)v4, &qword_1EF50E988);
  swift_beginAccess();
  sub_1BDB8BBB4((uint64_t)v4, a1 + 64);
  return swift_endAccess();
}

uint64_t sub_1BDB8571C()
{
  uint64_t v0;

  return sub_1BDB856AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*sub_1BDB85734(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1BDBFCC0C();
  swift_release();
  v4[7] = sub_1BDB8538C();
  return sub_1BDB8581C;
}

void sub_1BDB8581C(_QWORD *a1)
{
  sub_1BDB864B8(a1);
}

uint64_t (*sub_1BDB85828())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BDB8586C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDB86048(a1, &OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__summary, a2);
}

uint64_t sub_1BDB85880(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = sub_1BDBFC714();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BDB8598C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDB86230(&OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__summary, a1);
}

uint64_t sub_1BDB859A8(uint64_t a1)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_release();
  v2 = sub_1BDBFC714();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1BDB85A68()
{
  uint64_t v0;

  return sub_1BDB862F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__summary);
}

void (*sub_1BDB85A88(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1BDBFCC0C();
  swift_release();
  v4[7] = sub_1BDB85828();
  return sub_1BDB85B70;
}

void sub_1BDB85B70(_QWORD *a1)
{
  sub_1BDB864B8(a1);
}

uint64_t sub_1BDB85B7C()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  return swift_retain();
}

uint64_t sub_1BDB85C0C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__activity);
  return swift_retain();
}

uint64_t sub_1BDB85CA4()
{
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  swift_retain();
  sub_1BDBFCBE8();
  swift_release();
  return swift_release();
}

id LiveTranscriptionCoordinator.__allocating_init(attachmentModel:)(void *a1)
{
  id v2;

  swift_allocObject();
  v2 = sub_1BDB8AB98(a1);

  return v2;
}

id LiveTranscriptionCoordinator.init(attachmentModel:)(void *a1)
{
  id v2;

  v2 = sub_1BDB8AB98(a1);

  return v2;
}

uint64_t sub_1BDB85DCC(uint64_t a1)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_release();
  v2 = sub_1BDBFC714();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1BDB85E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  sub_1BDBC433C(v2);
  swift_getKeyPath();
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  v3 = swift_bridgeObjectRetain();
  sub_1BDBC433C(v3);
  return v1;
}

uint64_t (*sub_1BDB85FF0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BDB86034@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDB86048(a1, &OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript, a2);
}

uint64_t sub_1BDB86048@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a1;
  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  v6 = v5 + *a2;
  swift_beginAccess();
  v7 = sub_1BDBFC714();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_1BDB86110(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = sub_1BDBFC714();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BDB8621C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDB86230(&OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript, a1);
}

uint64_t sub_1BDB86230@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  v5 = v2 + *a1;
  swift_beginAccess();
  v6 = sub_1BDBFC714();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_1BDB862F4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_1BDBFC714();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v10 = a1 + *a3;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
  return swift_endAccess();
}

void (*sub_1BDB863C4(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1BDBFCC0C();
  swift_release();
  v4[7] = sub_1BDB85FF0();
  return sub_1BDB864AC;
}

void sub_1BDB864AC(_QWORD *a1)
{
  sub_1BDB864B8(a1);
}

void sub_1BDB864B8(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_1BDBFCC00();
  swift_release();
  free(v1);
}

uint64_t sub_1BDB86528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_1BDBFC678();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10];
  MEMORY[0x1E0C80A78](v1);
  v3 = sub_1BDBFC714();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v10 = v0;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  v7 = v0 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_1BDBFC660();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1BDAC31B0(&qword_1EF50E9A0, v2, MEMORY[0x1E0CAEF28]);
  return sub_1BDBFD89C();
}

uint64_t sub_1BDB866B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1BDB85E8C();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  swift_retain();
  sub_1BDAE1880((uint64_t)&unk_1EF50E9B0, v2);
  return swift_release();
}

uint64_t sub_1BDB86720(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[4] = a1;
  v2[5] = a2;
  sub_1BDBFC78C();
  v2[6] = swift_task_alloc();
  v3 = sub_1BDBFC678();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v4 = sub_1BDBFCB40();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v5 = type metadata accessor for TranscriptViewModelSegment(0);
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  v2[16] = swift_task_alloc();
  v6 = sub_1BDBFC714();
  v2[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[18] = v7;
  v2[19] = *(_QWORD *)(v7 + 64);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB86880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1BDBFC708();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 112);
    v51 = *(_QWORD *)(v0 + 104);
    v49 = *(_QWORD *)(v0 + 88);
    v47 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 32)
       + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v50 = v3;
    v48 = v6;
    while (1)
    {
      if ((sub_1BDBFDC20() & 1) != 0)
        goto LABEL_5;
      v10 = *(_QWORD *)(v0 + 120);
      v11 = *(_QWORD *)(v0 + 96);
      v12 = *(_QWORD *)(v0 + 80);
      sub_1BDB1CC10(v5, v10);
      type metadata accessor for TranscriptMetadata(0);
      v13 = swift_allocObject();
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v13 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id, v11, v12);
      v52 = v13;
      sub_1BDAFE158(v10, v13 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment, type metadata accessor for TranscriptViewModelSegment);
      if (*(_QWORD *)(v5 + *(int *)(v51 + 32) + 8))
      {
        v14 = qword_1EF50B2F0;
        swift_bridgeObjectRetain();
        if (v14 != -1)
          swift_once();
        v15 = (void *)qword_1EF520230;
        v16 = (void *)sub_1BDBFD6C8();
        if (qword_1EF50B2F8 != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D4B0);
        v17 = (void *)sub_1BDBFD9C8();
        v18 = objc_msgSend(v15, sel_ic_contactForHandleString_keysToFetch_, v16, v17);

        if (v18)
        {
          v19 = objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v18, 0);
          if (v19)
          {
            v20 = v19;
            sub_1BDBFD6F8();

            sub_1BDBFD7A0();
            swift_bridgeObjectRelease();
          }
          else
          {

          }
        }
        v21 = *(_QWORD *)(v0 + 72);
        v22 = *(_QWORD *)(v0 + 56);
        sub_1BDBFC660();
        v23 = sub_1BDBFC66C();
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v21, v22);
        if (v23 >= 1)
        {
          v24 = *(_QWORD *)(v0 + 176);
          v25 = *(_QWORD *)(v0 + 136);
          sub_1BDBFC690();
          sub_1BDBFC69C();
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v24, v25);
        }
        v26 = *(_QWORD *)(v0 + 176);
        v27 = *(_QWORD *)(v0 + 168);
        v28 = *(_QWORD *)(v0 + 136);
        sub_1BDBFC780();
        sub_1BDBFC720();
        KeyPath = swift_getKeyPath();
        *(_QWORD *)swift_task_alloc() = KeyPath;
        swift_getKeyPath();
        swift_task_dealloc();
        *(_QWORD *)(v0 + 24) = v52;
        sub_1BDB1CDC4();
        swift_retain();
        sub_1BDBFC684();
        sub_1BDBFC69C();
        sub_1BDBFC690();
        sub_1BDBFC69C();
        v3 = v50;
        v30 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
        v30(v27, v28);
        v30(v26, v28);
      }
      if ((sub_1BDB3D528(*(_QWORD *)(v5 + *(int *)(v51 + 20)), *(_QWORD *)(v5 + *(int *)(v51 + 20) + 8)) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        if ((sub_1BDBFDC20() & 1) != 0)
          goto LABEL_23;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
        if ((sub_1BDBFDC20() & 1) != 0)
        {
LABEL_23:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      v7 = *(_QWORD *)(v0 + 160);
      v8 = *(_QWORD *)(v0 + 136);
      sub_1BDBFC780();
      sub_1BDBFC720();
      v9 = swift_getKeyPath();
      *(_QWORD *)swift_task_alloc() = v9;
      swift_getKeyPath();
      swift_task_dealloc();
      *(_QWORD *)(v0 + 16) = v52;
      sub_1BDB1CCC8();
      swift_retain();
      sub_1BDBFC684();
      sub_1BDBFC69C();
      sub_1BDBFDC20();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v8);
LABEL_4:
      v6 = v48;
LABEL_5:
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v31 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 200);
  v33 = *(_QWORD *)(v0 + 176);
  v35 = *(_QWORD *)(v0 + 136);
  v34 = *(_QWORD *)(v0 + 144);
  v36 = *(_QWORD *)(v0 + 128);
  v46 = v36;
  v37 = *(void (**)(uint64_t))(v34 + 32);
  v37(v31);
  ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v32, v31, v35);
  v38 = sub_1BDBFDBC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v36, 1, 1, v38);
  v39 = swift_allocObject();
  swift_weakInit();
  v40 = v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v33, v32, v35);
  sub_1BDBFDB60();
  swift_retain();
  v41 = sub_1BDBFDB54();
  v42 = (*(unsigned __int8 *)(v34 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v43 = (_QWORD *)swift_allocObject();
  v44 = MEMORY[0x1E0DF06E8];
  v43[2] = v41;
  v43[3] = v44;
  v43[4] = v39;
  ((void (*)(char *, uint64_t, uint64_t))v37)((char *)v43 + v42, v40, v35);
  swift_release();
  sub_1BDAEE400(v46, (uint64_t)&unk_1EF50EE70, (uint64_t)v43);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v35);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB86F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[23] = a4;
  v5[24] = a5;
  v6 = sub_1BDBFC714();
  v5[25] = v6;
  v5[26] = *(_QWORD *)(v6 - 8);
  v5[27] = swift_task_alloc();
  sub_1BDBFDB60();
  v5[28] = sub_1BDBFDB54();
  sub_1BDBFDADC();
  return swift_task_switch();
}

uint64_t sub_1BDB86FD0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v4 = *(_QWORD *)(v0 + 208);
    v3 = *(_QWORD *)(v0 + 216);
    v5 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v3, *(_QWORD *)(v0 + 192), v5);
    swift_getKeyPath();
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v3;
    *(_QWORD *)(v0 + 168) = v2;
    sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
    sub_1BDBFCBE8();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
  }
  swift_beginAccess();
  v7 = swift_weakLoadStrong();
  if (v7)
  {
    v8 = v7;
    swift_getKeyPath();
    *(_QWORD *)(v0 + 176) = v8;
    sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
    sub_1BDBFCBF4();
    swift_release();
    swift_beginAccess();
    sub_1BDB157E4(v8 + 64, v0 + 16, &qword_1EF50E988);
    swift_release();
    if (*(_QWORD *)(v0 + 40))
    {
      sub_1BDADED64(v0 + 16, v0 + 56);
      sub_1BDAC350C(v0 + 16, &qword_1EF50E988);
      v9 = *(_QWORD *)(v0 + 80);
      v10 = *(_QWORD *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v9);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    }
    else
    {
      sub_1BDAC350C(v0 + 16, &qword_1EF50E988);
    }
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB87244(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;

  if (*a1 == 1 && (*a2 & 1) == 0)
  {
    swift_getKeyPath();
    v8 = v2;
    sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
    sub_1BDBFCBF4();
    swift_release();
    swift_beginAccess();
    v7 = 1;
    v3 = swift_bridgeObjectRetain();
    sub_1BDB87368(v3, &v7);
    swift_bridgeObjectRelease();
  }
  v4 = sub_1BDB85E8C();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v2;
  swift_retain();
  sub_1BDAE1880((uint64_t)&unk_1EF50EE48, v5);
  return swift_release();
}

uint64_t sub_1BDB87368(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v3 = v2;
  v5 = *a2;
  if (!*a2)
  {
    if (qword_1EF50B228 != -1)
      swift_once();
    v6 = sub_1BDBFCE34();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EF50E960);
    v7 = sub_1BDBFCE1C();
    v8 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BD918000, v7, v8, "Trying to post-process temporary segments. That's probably not a good idea, but OK.", v9, 2u);
      MEMORY[0x1C3B7B478](v9, -1, -1);
    }

  }
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v3;
  *(_BYTE *)(v10 + 32) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BDAE1880((uint64_t)&unk_1EF50E9C0, v10);
  return swift_release();
}

uint64_t sub_1BDB8749C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 57) = a3;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  *(_QWORD *)(v3 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB874FC()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedConfiguration);
  v3 = sub_1BDB19FE4(v1, 0, v2);

  if (*(_QWORD *)(v3 + 16))
  {
    v4 = *(_BYTE *)(v0 + 57);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = sub_1BDBFDBC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = swift_allocObject();
    swift_weakInit();
    sub_1BDBFDB60();
    swift_retain();
    v8 = sub_1BDBFDB54();
    v9 = swift_allocObject();
    v10 = MEMORY[0x1E0DF06E8];
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = v10;
    *(_BYTE *)(v9 + 32) = v4;
    *(_QWORD *)(v9 + 40) = v7;
    *(_QWORD *)(v9 + 48) = v3;
    swift_release();
    sub_1BDAEE400(v5, (uint64_t)&unk_1EF50EE58, v9);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB87850(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 160) = a5;
  *(_QWORD *)(v6 + 168) = a6;
  *(_BYTE *)(v6 + 184) = a4;
  sub_1BDBFDB60();
  *(_QWORD *)(v6 + 176) = sub_1BDBFDB54();
  sub_1BDBFDADC();
  return swift_task_switch();
}

uint64_t sub_1BDB878C0()
{
  uint64_t v0;
  int v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v1 = *(unsigned __int8 *)(v0 + 184);
  swift_release();
  if (v1)
  {
    if (v1 == 1)
    {
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v3 = Strong;
        v4 = *(_QWORD *)(v0 + 168);
        swift_getKeyPath();
        v5 = swift_task_alloc();
        *(_QWORD *)(v5 + 16) = v3;
        *(_QWORD *)(v5 + 24) = v4;
        *(_QWORD *)(v0 + 16) = v3;
        sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
        swift_bridgeObjectRetain();
        sub_1BDBFCBE8();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
      }
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        v19 = 1;
        v20 = 1;
        v6 = &v19;
        v7 = &v20;
LABEL_15:
        sub_1BDB87244(v6, v7);
        swift_release();
      }
    }
    else
    {
      swift_beginAccess();
      v12 = swift_weakLoadStrong();
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)(v0 + 168);
        swift_getKeyPath();
        v15 = swift_task_alloc();
        *(_QWORD *)(v15 + 16) = v13;
        *(_QWORD *)(v15 + 24) = v14;
        *(_QWORD *)(v0 + 40) = v13;
        sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
        swift_bridgeObjectRetain();
        sub_1BDBFCBE8();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
      }
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        v17 = 2;
        v18 = 1;
        v6 = &v17;
        v7 = &v18;
        goto LABEL_15;
      }
    }
  }
  else
  {
    swift_beginAccess();
    v8 = swift_weakLoadStrong();
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)(v0 + 168);
      swift_getKeyPath();
      v11 = swift_task_alloc();
      *(_QWORD *)(v11 + 16) = v9;
      *(_QWORD *)(v11 + 24) = v10;
      *(_QWORD *)(v0 + 16) = v9;
      sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
      swift_bridgeObjectRetain();
      sub_1BDBFCBE8();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v21 = 0;
      v22 = 1;
      v6 = &v21;
      v7 = &v22;
      goto LABEL_15;
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB87C88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[23] = a1;
  v2[24] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E9D0);
  v2[25] = swift_task_alloc();
  v3 = sub_1BDBFD1D0();
  v2[26] = v3;
  v2[27] = *(_QWORD *)(v3 - 8);
  v2[28] = swift_task_alloc();
  v4 = sub_1BDBFD23C();
  v2[29] = v4;
  v2[30] = *(_QWORD *)(v4 - 8);
  v2[31] = swift_task_alloc();
  v5 = sub_1BDBFD014();
  v2[32] = v5;
  v2[33] = *(_QWORD *)(v5 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v6 = sub_1BDBFCFB4();
  v2[36] = v6;
  v2[37] = *(_QWORD *)(v6 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v7 = type metadata accessor for TranscriptionUpdate(0);
  v2[40] = v7;
  v2[41] = *(_QWORD *)(v7 - 8);
  v2[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E9D8);
  v2[43] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50E9E0);
  v2[44] = v8;
  v2[45] = *(_QWORD *)(v8 - 8);
  v2[46] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v2[47] = swift_task_alloc();
  v9 = sub_1BDBFC948();
  v2[48] = v9;
  v2[49] = *(_QWORD *)(v9 - 8);
  v2[50] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E9F0);
  v2[51] = v10;
  v2[52] = *(_QWORD *)(v10 - 8);
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v11 = sub_1BDBFCE34();
  v2[56] = v11;
  v2[57] = *(_QWORD *)(v11 - 8);
  v2[58] = swift_task_alloc();
  v2[59] = sub_1BDBFDB60();
  v2[60] = sub_1BDBFDB54();
  v2[61] = sub_1BDBFDADC();
  v2[62] = v12;
  return swift_task_switch();
}

uint64_t sub_1BDB87F10()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1BDBFE01C();
  v1 = (void *)sub_1BDBFE010();
  v2 = objc_msgSend(v1, sel_supportsGeneralASR);

  if (!v2)
    goto LABEL_4;
  v3 = *(_QWORD *)(v0 + 192);
  swift_getKeyPath();
  v4 = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *(_QWORD *)(v0 + 136) = v3;
  *(_QWORD *)(v0 + 504) = v4;
  *(_QWORD *)(v0 + 512) = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  v5 = objc_msgSend(*(id *)(v3 + 48), sel_audioDocument);
  if (!v5)
  {
    __break(1u);
    goto LABEL_18;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, sel_isCallRecording);

  if ((v7 & 1) != 0)
  {
LABEL_4:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_1EF50B228 != -1)
    swift_once();
  v10 = *(_QWORD *)(v0 + 456);
  v9 = *(_QWORD *)(v0 + 464);
  v11 = *(_QWORD *)(v0 + 448);
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EF50E960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
  swift_retain_n();
  v13 = sub_1BDBFCE1C();
  v14 = sub_1BDBFDED8();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = *(_QWORD *)(v0 + 192);
    v16 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v36 = v34;
    *(_DWORD *)v16 = 136315138;
    swift_getKeyPath();
    *(_QWORD *)(v0 + 168) = v15;
    sub_1BDBFCBF4();
    swift_release();
    v17 = objc_msgSend(*(id *)(v3 + 48), sel_attachment);
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v17, sel_identifier);

      if (v19)
      {
        v20 = sub_1BDBFD6F8();
        v22 = v21;

      }
      else
      {
        v20 = 0;
        v22 = 0xE000000000000000;
      }
      v26 = v34;
      v32 = *(_QWORD *)(v0 + 456);
      v33 = *(_QWORD *)(v0 + 448);
      v35 = *(_QWORD *)(v0 + 464);
      *(_QWORD *)(v0 + 176) = sub_1BDAE53FC(v20, v22, &v36);
      sub_1BDBFE100();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, v13, v14, "Transcribing from live recording for attachment %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v26, -1, -1);
      MEMORY[0x1C3B7B478](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
      goto LABEL_14;
    }
LABEL_18:
    result = swift_release();
    __break(1u);
    return result;
  }
  v24 = *(_QWORD *)(v0 + 456);
  v23 = *(_QWORD *)(v0 + 464);
  v25 = *(_QWORD *)(v0 + 448);

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
LABEL_14:
  v27 = *(_QWORD *)(v0 + 384);
  v28 = *(_QWORD *)(v0 + 392);
  v29 = *(_QWORD *)(v0 + 376);
  sub_1BDB157E4(*(_QWORD *)(v0 + 184), v29, &qword_1ED23B1B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27) == 1)
  {
    sub_1BDAC350C(*(_QWORD *)(v0 + 376), &qword_1ED23B1B0);
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 536) = v30;
    *v30 = v0;
    v30[1] = sub_1BDB88610;
    return SiriTranscriptionMethod.prepareForTranscription()(*(_QWORD *)(v0 + 424));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 32))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 384));
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 520) = v31;
    *v31 = v0;
    v31[1] = sub_1BDB88440;
    return sub_1BDAEF444(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 400));
  }
}

uint64_t sub_1BDB88440()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 528) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB884A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 384));
  v1 = *(_QWORD *)(v0 + 528);
  v2 = *(_QWORD *)(v0 + 192);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 416) + 32))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 408));
  swift_getKeyPath();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 24) = 1;
  *(_QWORD *)(v0 + 104) = v2;
  sub_1BDBFCBE8();
  swift_release();
  swift_task_dealloc();
  sub_1BDBFDBF0();
  *(_QWORD *)(v0 + 552) = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator_transcriptGenerationQueue;
  *(_DWORD *)(v0 + 600) = *MEMORY[0x1E0CD7960];
  *(_DWORD *)(v0 + 604) = *MEMORY[0x1E0CD7940];
  *(_QWORD *)(v0 + 560) = v1;
  *(_QWORD *)(v0 + 568) = sub_1BDBFDB54();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 576) = v4;
  *v4 = v0;
  v4[1] = sub_1BDB887D4;
  return sub_1BDBFDBFC();
}

uint64_t sub_1BDB88610()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB88670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 192);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 416) + 32))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 408));
  swift_getKeyPath();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 24) = 1;
  *(_QWORD *)(v0 + 104) = v2;
  sub_1BDBFCBE8();
  swift_release();
  swift_task_dealloc();
  sub_1BDBFDBF0();
  *(_QWORD *)(v0 + 552) = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator_transcriptGenerationQueue;
  *(_DWORD *)(v0 + 600) = *MEMORY[0x1E0CD7960];
  *(_DWORD *)(v0 + 604) = *MEMORY[0x1E0CD7940];
  *(_QWORD *)(v0 + 560) = v1;
  *(_QWORD *)(v0 + 568) = sub_1BDBFDB54();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 576) = v4;
  *v4 = v0;
  v4[1] = sub_1BDB887D4;
  return sub_1BDBFDBFC();
}

uint64_t sub_1BDB887D4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BDB8882C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  void (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[9];

  v1 = v0[43];
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0[41] + 48))(v1, 1, v0[40]) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[45] + 8))(v0[46], v0[44]);
    v2 = (_QWORD *)swift_task_alloc();
    v0[73] = v2;
    *v2 = v0;
    v2[1] = sub_1BDB89008;
    return sub_1BDB894F8();
  }
  sub_1BDAFE158(v1, v0[42], type metadata accessor for TranscriptionUpdate);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *((unsigned int *)v0 + 150);
    v5 = v0[39];
    v58 = v0[38];
    v7 = v0[36];
    v6 = v0[37];
    v9 = v0[34];
    v8 = v0[35];
    v10 = v0[32];
    v11 = v0[33];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, v0[42], v7);
    sub_1BDBFCF84();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104);
    v12(v9, v4, v10);
    LOBYTE(v4) = sub_1BDBFD008();
    v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v13(v9, v10);
    v13(v8, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v58, v5, v7);
    if ((v4 & 1) != 0)
    {
      v14 = *(void (**)(uint64_t, uint64_t))(v0[37] + 8);
      v14(v0[38], v0[36]);
    }
    else
    {
      v16 = *((unsigned int *)v0 + 151);
      v18 = v0[37];
      v17 = v0[38];
      v20 = v0[35];
      v19 = v0[36];
      v21 = v0[34];
      v22 = v0[32];
      sub_1BDBFCF84();
      v12(v21, v16, v22);
      LOBYTE(v16) = sub_1BDBFD008();
      v13(v21, v22);
      v13(v20, v22);
      v14 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v14(v17, v19);
      if ((v16 & 1) == 0)
      {
        v15 = v0[70];
        v51 = v0[69];
        v28 = v0[39];
        v57 = v0[30];
        v59 = v0[29];
        v55 = v0[28];
        v29 = v0[24];
        v56 = v0[27];
        v52 = v0[31];
        v54 = v0[26];
        v30 = v14;
        v31 = sub_1BDBFCFA8();
        v32 = swift_task_alloc();
        *(_QWORD *)(v32 + 16) = v28;
        v33 = sub_1BDB83E24((void (*)(uint64_t))sub_1BDB41DA8, v32, v31);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_getKeyPath();
        v34 = swift_task_alloc();
        *(_QWORD *)(v34 + 16) = v29;
        *(_QWORD *)(v34 + 24) = v33;
        v0[12] = v29;
        sub_1BDBFCBE8();
        v14 = v30;
        swift_release();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        v35 = sub_1BDB85E8C();
        v36 = *(_QWORD *)(v29 + v51);
        v37 = swift_allocObject();
        *(_QWORD *)(v37 + 16) = v35;
        *(_QWORD *)(v37 + 24) = v29;
        v38 = (_QWORD *)swift_allocObject();
        v38[2] = v36;
        v38[3] = &unk_1EF50EA00;
        v38[4] = v37;
        v0[6] = sub_1BDAE2180;
        v0[7] = v38;
        v0[2] = MEMORY[0x1E0C809B0];
        v0[3] = 1107296256;
        v0[4] = sub_1BDB24AB0;
        v0[5] = &block_descriptor_11;
        v39 = _Block_copy(v0 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1BDBFD200();
        v0[14] = MEMORY[0x1E0DEE9D8];
        sub_1BDAC31B0(&qword_1ED23AE18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE40);
        sub_1BDB8B158();
        sub_1BDBFE1B4();
        MEMORY[0x1C3B79528](0, v52, v55, v39);
        _Block_release(v39);
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v54);
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v52, v59);
        swift_release();
        goto LABEL_14;
      }
    }
    v23 = sub_1BDBFCF90();
    v24 = *(_QWORD *)(v23 + 16);
    v25 = sub_1BDBFC714();
    v26 = *(_QWORD *)(v25 - 8);
    if (v24)
    {
      (*(void (**)(_QWORD, unint64_t, uint64_t))(v26 + 16))(v0[25], v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)), v25);
      v27 = 0;
    }
    else
    {
      v27 = 1;
    }
    v40 = v0[25];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v40, v27, 1, v25);
    swift_bridgeObjectRelease();
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v40, 1, v25);
    sub_1BDAC350C(v40, &qword_1EF50E9D0);
    v15 = v0[70];
    if (v41 == 1)
      goto LABEL_15;
    v42 = v0[24];
    v53 = _s11NotesShared26TranscriptViewModelSegmentV4from6result9temporarySayACG6Speech11TranscriberC18MultisegmentResultV_SbtFZ_0(v0[39], 0);
    swift_getKeyPath();
    v0[15] = v42;
    sub_1BDBFCBF4();
    swift_release();
    v0[16] = v42;
    swift_getKeyPath();
    sub_1BDBFCC0C();
    swift_release();
    swift_beginAccess();
    sub_1BDBC433C(v53);
    swift_endAccess();
    v0[18] = v42;
    swift_getKeyPath();
    sub_1BDBFCC00();
    swift_release();
    swift_getKeyPath();
    v0[19] = v42;
    sub_1BDBFCBF4();
    swift_release();
    v60[0] = 1;
    v43 = swift_bridgeObjectRetain();
    sub_1BDB87368(v43, v60);
    swift_bridgeObjectRelease();
    v44 = sub_1BDB85E8C();
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = v44;
    *(_QWORD *)(v45 + 24) = v42;
    swift_retain();
    sub_1BDAE1880((uint64_t)&unk_1EF50EA10, v45);
    swift_release();
    swift_getKeyPath();
    v46 = swift_task_alloc();
    v47 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v46 + 16) = v42;
    *(_QWORD *)(v46 + 24) = v47;
    v0[20] = v42;
    sub_1BDBFCBE8();
    swift_release();
    swift_task_dealloc();
    v48 = sub_1BDB85E8C();
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = v48;
    *(_QWORD *)(v49 + 24) = v42;
    swift_retain();
    sub_1BDAE1880((uint64_t)&unk_1EF50EA18, v49);
LABEL_14:
    swift_release();
LABEL_15:
    v14(v0[39], v0[36]);
    goto LABEL_16;
  }
  v15 = v0[70];
LABEL_16:
  v0[70] = v15;
  v0[71] = sub_1BDBFDB54();
  v50 = (_QWORD *)swift_task_alloc();
  v0[72] = v50;
  *v50 = v0;
  v50[1] = sub_1BDB887D4;
  return sub_1BDBFDBFC();
}

uint64_t sub_1BDB89008()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB89068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 416);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB8918C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 392);
  v1 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 384);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB892B8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB893CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 416);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB894F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  sub_1BDBFDB60();
  v1[5] = sub_1BDBFDB54();
  v1[6] = sub_1BDBFDADC();
  v1[7] = v2;
  return swift_task_switch();
}

uint64_t sub_1BDB89564()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[4];
  swift_getKeyPath();
  v2 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 24) = 0;
  v0[2] = v1;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_release();
  swift_task_dealloc();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1BDB89654;
  return SiriTranscriptionMethod.finishTranscription()();
}

uint64_t sub_1BDB89654()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v4;
  *v4 = v2;
  v4[1] = sub_1BDB896DC;
  return sub_1BDB89B08();
}

uint64_t sub_1BDB896DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB8973C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB89770()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB897A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  swift_release();
  if (qword_1EF50B228 != -1)
    swift_once();
  v1 = *(void **)(v0 + 88);
  v2 = sub_1BDBFCE34();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF50E960);
  v3 = v1;
  v4 = v1;
  v5 = sub_1BDBFCE1C();
  v6 = sub_1BDBFDED8();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 88);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v12;
    sub_1BDBFE100();
    *v10 = v12;

    _os_log_impl(&dword_1BD918000, v5, v6, "Error generating top-line summary {error: %@}", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v10, -1, -1);
    MEMORY[0x1C3B7B478](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB8997C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  sub_1BDBFDB60();
  v2[4] = sub_1BDBFDB54();
  v2[5] = sub_1BDBFDADC();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_1BDB899E8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1BDB89A40;
  return SiriTranscriptionMethod.receiveAudio(_:)(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BDB89A40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB89AA0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB89AD4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB89B08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[8] = v0;
  v1[9] = sub_1BDBFC678();
  v1[10] = swift_task_alloc();
  v2 = sub_1BDBFC714();
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  sub_1BDBFDB60();
  v1[14] = sub_1BDBFDB54();
  v1[15] = sub_1BDBFDADC();
  v1[16] = v3;
  return swift_task_switch();
}

uint64_t sub_1BDB89BF4()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE *v14;

  sub_1BDBFE01C();
  v1 = (void *)sub_1BDBFE010();
  v2 = objc_msgSend(v1, sel_supportsGreymatter);

  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 96);
    v3 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 64);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 136) = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
    *(_QWORD *)(v0 + 40) = v6;
    *(_QWORD *)(v0 + 144) = sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
    sub_1BDBFCBF4();
    swift_release();
    v7 = v6 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v7, v5);
    sub_1BDBFC660();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    sub_1BDAC31B0(&qword_1EF50E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
    v8 = sub_1BDBFD89C();
    v10 = v9;
    *(_QWORD *)(v0 + 152) = v9;
    v11 = dword_1EF50E618;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v12;
    *v12 = v0;
    v12[1] = sub_1BDB89E48;
    return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50E618 + v11))(v8, v10);
  }
  else
  {
    swift_release();
    sub_1BDAC7614();
    swift_allocError();
    *v14 = 19;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB89E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[21] = a1;
  v4[22] = a2;
  v4[23] = v2;
  swift_task_dealloc();
  if (!v2)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB89F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  uint64_t (*v7)(void);
  void *v8;

  v1 = *(_QWORD *)(v0 + 176);
  swift_release();
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 64);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = v2;
  sub_1BDBFCBF4();
  swift_release();
  v3 = *(id *)(v2 + 48);
  v4 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = 0;
  v5 = objc_msgSend(v3, sel_saveTopLineSummaryToAttachmentWithSummary_error_, v4, v0 + 56);

  v6 = *(id *)(v0 + 56);
  if (!v5)
  {
    v8 = v6;
    sub_1BDBFC87C();

    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v7();
}

uint64_t sub_1BDB8A084()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB8A10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50EA40);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EA50);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = ICInternalSettingsIsAudioMastihaEnabled();
  if ((_DWORD)result)
  {
    v19 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EA58);
    LOBYTE(v18[0]) = 1;
    v18[1] = 0;
    v13 = sub_1BDBFCAC8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
    sub_1BDB7E29C();
    sub_1BDB7E2E4();
    sub_1BDB7E32C();
    sub_1BDBFCBD0();
    v14 = sub_1BDBFCBDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
    v15 = sub_1BDBFCBAC();
    sub_1BDAC350C((uint64_t)v4, (uint64_t *)&unk_1EF50EA40);
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (!v1)
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      v17 = v19;
      v18[-2] = v19;
      v18[-1] = v15;
      v18[0] = v17;
      sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
      sub_1BDBFCBE8();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BDB8A390(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 40) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EA50);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  *(_BYTE *)(v2 + 128) = *(_BYTE *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = v6;
  sub_1BDBFDB60();
  *(_QWORD *)(v2 + 88) = sub_1BDBFDB54();
  *(_QWORD *)(v2 + 96) = sub_1BDBFDADC();
  *(_QWORD *)(v2 + 104) = v7;
  return swift_task_switch();
}

uint64_t sub_1BDB8A45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD);

  v1 = *(_QWORD *)(v0 + 40);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 32) = v1;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__activity);
  *(_QWORD *)(v0 + 112) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 48);
    *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 128);
    *(_QWORD *)(v0 + 24) = v3;
    v5 = sub_1BDBFCAC8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_1BDB7E29C();
    sub_1BDB7E2E4();
    sub_1BDB7E32C();
    swift_retain();
    sub_1BDBFCBD0();
    v8 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x1E0C8F5B8] + MEMORY[0x1E0C8F5B8]);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v6;
    *v6 = v0;
    v6[1] = sub_1BDB8A608;
    return v8(*(_QWORD *)(v0 + 72));
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB8A608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1BDB8A684()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB8A6CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = v0;
  v2 = sub_1BDBFCBC4();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v1[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EA90);
  v1[10] = swift_task_alloc();
  sub_1BDBFDB60();
  v1[11] = sub_1BDBFDB54();
  v1[12] = sub_1BDBFDADC();
  v1[13] = v3;
  return swift_task_switch();
}

uint64_t sub_1BDB8A7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 40);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 32) = v1;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__activity);
  *(_QWORD *)(v0 + 112) = v2;
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80);
    *(_BYTE *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    swift_retain();
    _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
    v5 = sub_1BDBFCAC8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
    sub_1BDB7E29C();
    sub_1BDB7E2E4();
    sub_1BDB7E32C();
    sub_1BDBFCBD0();
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EA50);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 0, 1, v6);
    sub_1BDBFCBB8();
    v9 = (uint64_t (*)(_QWORD, _QWORD))((int)*MEMORY[0x1E0C8F5A8] + MEMORY[0x1E0C8F5A8]);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v7;
    *v7 = v0;
    v7[1] = sub_1BDB8A990;
    return v9(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB8A990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1BDAC350C(v1, &qword_1EF50EA90);
  return swift_task_switch();
}

uint64_t sub_1BDB8AA20()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LiveTranscriptionCoordinator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1BDAC350C(v0 + 64, &qword_1EF50E988);
  v1 = v0 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__summary;
  v2 = sub_1BDBFC714();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3(v0 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript, v2);
  v4 = v0 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  v5 = sub_1BDBFCC24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t LiveTranscriptionCoordinator.__deallocating_deinit()
{
  LiveTranscriptionCoordinator.deinit();
  return swift_deallocClassInstance();
}

id sub_1BDB8AB98(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id result;
  void *v17;
  uint64_t v18;
  uint64_t KeyPath;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = sub_1BDBFC714();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 24) = v8;
  *(_QWORD *)(v2 + 32) = v8;
  *(_BYTE *)(v2 + 56) = 0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_QWORD *)(v2 + 96) = 0;
  sub_1BDBFC690();
  v30 = v5;
  v9 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v9(v2 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__summary, v7, v4);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__summarizationTask) = 0;
  v10 = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator_postProcessingTaskQueue;
  type metadata accessor for CancellableTaskQueue();
  swift_allocObject();
  *(_QWORD *)(v2 + v10) = sub_1BDAE16C8(0xD00000000000002ALL, 0x80000001BDC39AA0);
  v11 = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator_transcriptGenerationQueue;
  swift_allocObject();
  *(_QWORD *)(v2 + v11) = sub_1BDAE16C8(0xD000000000000025, 0x80000001BDC39AD0);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__activity) = 0;
  sub_1BDBFC708();
  v31 = v4;
  v9(v2 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript, v7, v4);
  sub_1BDBFCC18();
  *(_QWORD *)(v2 + 48) = a1;
  type metadata accessor for SiriTranscriptionMethod();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = v12 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)(v2 + 40) = v12;
  v15 = a1;
  result = objc_msgSend(v15, sel_audioDocument);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v17 = result;
  v18 = ICTTAudioDocument.transcriptViewModelSegments.getter();

  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  *(&v30 - 2) = v2;
  *(&v30 - 1) = v18;
  v32 = v2;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBE8();
  swift_bridgeObjectRelease();
  swift_release();
  result = objc_msgSend(v15, sel_audioDocument);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v20 = result;
  v21 = objc_msgSend(result, sel_document);
  v22 = objc_msgSend(v21, sel_rootObject);

  if (v22)
  {
    objc_opt_self();
    v23 = (void *)swift_dynamicCastObjCClass();
    if (!v23)
      swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = objc_msgSend(v23, sel_summary);

  if (v24)
  {
    v25 = objc_msgSend(v24, sel_attributedString);

    if (v25)
    {
      v26 = v25;
      sub_1BDBFC738();
      v27 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v27);
      *(&v30 - 2) = v2;
      *(&v30 - 1) = (uint64_t)v7;
      v32 = v2;
      sub_1BDBFCBE8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v31);

    }
  }
  v28 = sub_1BDB85E8C();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v2;
  swift_retain();
  sub_1BDAE1880((uint64_t)&unk_1EF50EE80, v29);
  swift_release();
  return (id)v2;
}

uint64_t sub_1BDB8B024()
{
  uint64_t v0;

  return sub_1BDB862F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript);
}

uint64_t sub_1BDB8B044()
{
  return objectdestroyTm_1();
}

uint64_t sub_1BDB8B04C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BDAE2208;
  return sub_1BDB86720(v2, v3);
}

uint64_t sub_1BDB8B09C()
{
  return objectdestroyTm_1();
}

uint64_t sub_1BDB8B0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BDAE2208;
  return sub_1BDB8749C(v2, v3, v4);
}

uint64_t sub_1BDB8B10C()
{
  return objectdestroyTm_1();
}

uint64_t sub_1BDB8B114()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

unint64_t sub_1BDB8B158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23AE48;
  if (!qword_1ED23AE48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED23AE40);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23AE48);
  }
  return result;
}

uint64_t sub_1BDB8B1A4()
{
  return objectdestroyTm_1();
}

uint64_t sub_1BDB8B1AC()
{
  return objectdestroyTm_1();
}

uint64_t sub_1BDB8B1BC()
{
  return sub_1BDB8B870();
}

unint64_t sub_1BDB8B1D4()
{
  unint64_t result;

  result = qword_1EF50EAA0;
  if (!qword_1EF50EAA0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptSegmentType, &type metadata for TranscriptSegmentType);
    atomic_store(result, (unint64_t *)&qword_1EF50EAA0);
  }
  return result;
}

unint64_t sub_1BDB8B21C()
{
  unint64_t result;

  result = qword_1EF50EAA8;
  if (!qword_1EF50EAA8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TranscriptUpdateType, &type metadata for TranscriptUpdateType);
    atomic_store(result, (unint64_t *)&qword_1EF50EAA8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TranscriptSegmentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDB8B2AC + 4 * byte_1BDC1D9A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDB8B2E0 + 4 * byte_1BDC1D9A0[v4]))();
}

uint64_t sub_1BDB8B2E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB8B2E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB8B2F0);
  return result;
}

uint64_t sub_1BDB8B2FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB8B304);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDB8B308(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB8B310(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSegmentType()
{
  return &type metadata for TranscriptSegmentType;
}

uint64_t storeEnumTagSinglePayload for TranscriptUpdateType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDB8B378 + 4 * byte_1BDC1D9AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDB8B3AC + 4 * byte_1BDC1D9AA[v4]))();
}

uint64_t sub_1BDB8B3AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB8B3B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDB8B3BCLL);
  return result;
}

uint64_t sub_1BDB8B3C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDB8B3D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDB8B3D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDB8B3DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptUpdateType()
{
  return &type metadata for TranscriptUpdateType;
}

uint64_t dispatch thunk of TranscriptChangeDelegate.transcriptChanged()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BDB8B400()
{
  return type metadata accessor for LiveTranscriptionCoordinator();
}

uint64_t sub_1BDB8B408()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BDBFC714();
  if (v1 <= 0x3F)
  {
    result = sub_1BDBFCC24();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for LiveTranscriptionCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.tempSegments.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.tempSegments.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.tempSegments.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.finalizedSegments.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.finalizedSegments.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.finalizedSegments.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.fetchedSegments.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.fetchedSegments.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.fetchedSegments.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.isTranscribing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.isTranscribing.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.isTranscribing.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcriptChangeDelegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcriptChangeDelegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcriptChangeDelegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.summary.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.summary.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.summary.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.__allocating_init(attachmentModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 624))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcriptSegments.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcript.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcript.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.rawTranscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.updateCachedTranscript()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.triggerAsyncTranscriptPostProcessing(withSegments:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcribe(file:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 720) + *(_QWORD *)(*(_QWORD *)v1 + 720));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BDAE2208;
  return v6(a1);
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.finishTranscription()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 728) + *(_QWORD *)(*(_QWORD *)v0 + 728));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1BDAE2208;
  return v4();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.receiveAudio(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 736) + *(_QWORD *)(*(_QWORD *)v1 + 736));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BDAE2208;
  return v6(a1);
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.generateFinalTopLineSummary()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 744) + *(_QWORD *)(*(_QWORD *)v0 + 744));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1BDAE2208;
  return v4();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.startLiveActivity()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.updateLiveActivity(state:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 760) + *(_QWORD *)(*(_QWORD *)v1 + 760));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BDAE2208;
  return v6(a1);
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.stopLiveActivity()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 768) + *(_QWORD *)(*(_QWORD *)v0 + 768));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1BDAC9D90;
  return v4();
}

uint64_t sub_1BDB8B870()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__activity) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

void sub_1BDB8B8B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v2;
  v4 = v2;

}

uint64_t sub_1BDB8B8E4()
{
  return objectdestroyTm_1();
}

uint64_t sub_1BDB8B8EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BDB8B910()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDB8B944(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 32);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1BDAE2208;
  return sub_1BDB87850(a1, v4, v5, v8, v6, v7);
}

uint64_t sub_1BDB8B9C8()
{
  return 8;
}

uint64_t sub_1BDB8B9D4()
{
  return swift_release();
}

uint64_t sub_1BDB8B9DC(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BDB8B9F0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BDB8B9FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BDBFC714();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BDB8BA78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BDBFC714() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1BDAE2208;
  return sub_1BDB86F3C(a1, v5, v6, v7, v8);
}

uint64_t sub_1BDB8BB10()
{
  return 8;
}

uint64_t sub_1BDB8BB24()
{
  return objectdestroyTm_1();
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB8BB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BDAC9D90;
  return sub_1BDB86720(v2, v3);
}

uint64_t sub_1BDB8BBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDB8BBFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 56) = v2;
  return result;
}

uint64_t sub_1BDB8BC58()
{
  return sub_1BDB844B4();
}

uint64_t sub_1BDB8BC6C()
{
  return sub_1BDB24924();
}

uint64_t sub_1BDB8BC80()
{
  return sub_1BDB8490C();
}

uint64_t sub_1BDB8BC94()
{
  return sub_1BDB8B024();
}

uint64_t sub_1BDB8BCA8()
{
  return sub_1BDB85A68();
}

uint64_t sub_1BDB8BCBC()
{
  return sub_1BDB8571C();
}

_QWORD *Commands.defaultCommand()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  _BYTE *v7;
  _BYTE *v8;
  _QWORD *result;
  uint64_t DynamicType;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  char v14[40];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_1EF50B178 != -1)
    swift_once();
  v7 = off_1EF50C9E0;
  v8 = (char *)off_1EF50C9E0 + 16;
  swift_beginAccess();
  v7[16] = 1;
  result = (*(_QWORD *(**)(__int128 *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)(a2 + 8) + 40))(&v15, MEMORY[0x1E0DEE9D8], a1);
  if (!v3)
  {
    sub_1BDADED64((uint64_t)&v15, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EE90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EE98);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v13);
      sub_1BDAE14D4(&v15, (uint64_t)a3);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(&v15, v16);
      DynamicType = swift_getDynamicType();
      v11 = v17;
      v12 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      a3[3] = DynamicType;
      a3[4] = v11;
      __swift_allocate_boxed_opaque_existential_1(a3);
      v12(DynamicType, v11);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v15);
    }
    v8 = (char *)off_1EF50C9E0 + 16;
    result = (_QWORD *)swift_beginAccess();
  }
  *v8 = 0;
  return result;
}

uint64_t static Commands.helpCommandName.getter()
{
  return 1886152040;
}

uint64_t static Commands.command(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  google::protobuf::io::ZeroCopyOutputStream *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  void *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v44;
  google::protobuf::io::ZeroCopyOutputStream *v45;
  BOOL v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL4 v66;
  uint64_t v67;
  uint64_t *v68;
  google::protobuf::io::ZeroCopyOutputStream *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  char v74[40];
  char v75[40];
  __int128 v76[3];
  uint64_t v77;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v64 - v11;
  v13 = (_QWORD *)MEMORY[0x1E0C80A78](v10);
  v17 = (char *)&v64 - v16;
  v18 = v13[2];
  if (v18)
  {
    v64 = v15;
    v69 = v4;
    v65 = v14;
    v77 = a3;
    v68 = (uint64_t *)a4;
    v19 = v13;
    v20 = (uint64_t)(v13 + 4);
    v72 = v13[4];
    v21 = v13[5];
    sub_1BDBFE8C8();
    swift_bridgeObjectRetain_n();
    v73 = v21;
    swift_bridgeObjectRetain();
    v70 = (uint64_t)v19;
    v22 = swift_dynamicCastClass();
    if (!v22)
    {
      swift_bridgeObjectRelease();
      v22 = MEMORY[0x1E0DEE9D8];
    }
    v23 = *(_QWORD *)(v22 + 16);
    swift_release();
    if (v23 == v18 - 1)
    {
      v24 = swift_dynamicCastClass();
      if (!v24)
      {
        swift_bridgeObjectRelease();
        v24 = MEMORY[0x1E0DEE9D8];
      }
    }
    else
    {
      v63 = v70;
      swift_bridgeObjectRelease();
      v24 = sub_1BDAE98B0(v63, v20, 1, (2 * v18) | 1);
    }
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v24 + 16);
    v26 = v77;
    v67 = v24;
    if (v25)
      v66 = sub_1BDB8C480();
    else
      v66 = 0;
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(a2, v26);
    if (MEMORY[0x1C3B79060](v33, a2))
    {
      v34 = 0;
      while (1)
      {
        v35 = sub_1BDBFDA58();
        sub_1BDBFDA10();
        if ((v35 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v17, v33+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v34, a2);
          v36 = v34 + 1;
          if (__OFADD__(v34, 1))
            goto LABEL_21;
        }
        else
        {
          result = sub_1BDBFE37C();
          if (v64 != 8)
          {
            __break(1u);
            return result;
          }
          *(_QWORD *)&v76[0] = result;
          (*(void (**)(char *, __int128 *, uint64_t))(v8 + 16))(v17, v76, a2);
          swift_unknownObjectRelease();
          v36 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_17;
          }
        }
        v37 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v37(v12, v17, a2);
        if (sub_1BDB8C4EC(v72, v73, a2, v77))
          break;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v12, a2);
        ++v34;
        if (v36 == MEMORY[0x1C3B79060](v33, a2))
          goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v77;
      v39 = v71;
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)(v77 + 8) + 40))(v76, v67, a2);
      if (v39)
      {
        swift_release();
        v40 = v68;
        if (v66)
        {

          v41 = v65;
          v37((char *)v65, v12, a2);
          v40[3] = type metadata accessor for HelpCommand(0, a2, v38, v42);
          v40[4] = (uint64_t)&off_1E76D3260;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
          return sub_1BDAF58B0(v41, a2, (uint64_t)boxed_opaque_existential_1);
        }
        else
        {
          swift_willThrow();
          return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, a2);
        }
      }
      else
      {
        swift_release();
        sub_1BDADED64((uint64_t)v76, (uint64_t)v75);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EE90);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EE98);
        v58 = swift_dynamicCast();
        v59 = v68;
        if (v58)
        {
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v74);
        }
        else if (v66)
        {
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v76);
          v60 = v65;
          v37((char *)v65, v12, a2);
          v59[3] = type metadata accessor for HelpCommand(0, a2, v38, v61);
          v59[4] = (uint64_t)&off_1E76D3260;
          v62 = __swift_allocate_boxed_opaque_existential_1(v59);
          return sub_1BDAF58B0(v60, a2, (uint64_t)v62);
        }
        (*(void (**)(char *, uint64_t))(v8 + 8))(v12, a2);
        return sub_1BDAE14D4(v76, (uint64_t)v59);
      }
    }
    else
    {
LABEL_17:
      swift_release();
      swift_bridgeObjectRelease();
      v44 = v77;
      v45 = v69;
      v46 = sub_1BDB8C480();
      swift_bridgeObjectRelease();
      v47 = v68;
      if (v46)
      {
        sub_1BDAF7D98();
        v49 = v48;
        v51 = v50;
        result = type metadata accessor for GroupHelpCommand(0, a2, v44, v52);
        v47[3] = result;
        v47[4] = (uint64_t)&off_1E76D3370;
        *v47 = v49;
        *((_BYTE *)v47 + 8) = v51 & 1;
      }
      else
      {
        google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v45);
        v54 = v53;
        v56 = v55;
        v47[3] = type metadata accessor for UnknownCommand(0, a2, v44, v57);
        v47[4] = (uint64_t)&off_1E76D26D8;
        *v47 = v54;
        v47[1] = v56;
        return swift_bridgeObjectRetain();
      }
    }
  }
  else
  {
    sub_1BDAF7D98();
    v28 = v27;
    v30 = v29;
    result = type metadata accessor for GroupHelpCommand(0, a2, a3, v31);
    *(_QWORD *)(a4 + 24) = result;
    *(_QWORD *)(a4 + 32) = &off_1E76D3370;
    *(_QWORD *)a4 = v28;
    *(_BYTE *)(a4 + 8) = v30 & 1;
  }
  return result;
}

BOOL sub_1BDB8C480()
{
  uint64_t v0;

  sub_1BDAC3548();
  v0 = sub_1BDBFE154();
  swift_bridgeObjectRelease();
  return v0 == 0;
}

BOOL sub_1BDB8C4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 32))(a3);
  swift_bridgeObjectRetain();
  v4 = sub_1BDBFD8A8();
  v6 = sub_1BDB6DCEC(0xD000000000000011, 0x80000001BDC37E00, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v4, v5);
  sub_1BDB6DCEC(0xD000000000000017, 0x80000001BDC37E90, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v6, v7);
  swift_bridgeObjectRelease();
  sub_1BDBFD740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDAC3548();
  v8 = sub_1BDBFE154();
  swift_bridgeObjectRelease();
  return v8 == 0;
}

uint64_t Commands.decode<A>(_:from:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  if (qword_1EF50B178 != -1)
    swift_once();
  return ArgumentDecoder.decode<A>(_:from:)(a1, a2, a3, *(_QWORD *)(a4 + 16), a5);
}

uint64_t Commands.decode<A>(_:from:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  return static Commands.command(from:)(a1, a2, a3, a4);
}

id NSFileManager.createDirectory(at:withIntermediateDirectories:)(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v5;
  id v7;
  id v8[2];

  v3 = v2;
  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1BDBFC8D0();
  v8[0] = 0;
  LODWORD(v3) = objc_msgSend(v3, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, a2 & 1, 0, v8);

  if ((_DWORD)v3)
    return v8[0];
  v7 = v8[0];
  sub_1BDBFC87C();

  return (id)swift_willThrow();
}

void *NSFileManager.contentsOfDirectory(at:)()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1BDBFC8D0();
  type metadata accessor for URLResourceKey(0);
  v2 = (void *)sub_1BDBFD9C8();
  v8[0] = 0;
  v3 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, v2, 0, v8);

  v4 = v8[0];
  if (v3)
  {
    sub_1BDBFC948();
    v1 = (void *)sub_1BDBFD9E0();
    v5 = v4;

  }
  else
  {
    v6 = v8[0];
    sub_1BDBFC87C();

    swift_willThrow();
  }
  return v1;
}

void NSFileManager.url(for:)(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v2 = objc_msgSend(v1, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a1, 1, 0, 1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = v2;
    sub_1BDBFC90C();
    v5 = v3;

  }
  else
  {
    v6 = v7[0];
    sub_1BDBFC87C();

    swift_willThrow();
  }
}

id NSFileManager.subdirectoriesOfDirectory(at:)()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t inited;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  char v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56[8];

  v2 = v0;
  v56[6] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1BDBFC774();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFC948();
  v52 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v41 - v11;
  v12 = (void *)sub_1BDBFC8D0();
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2A8);
  v13 = swift_allocObject();
  v49 = xmmword_1BDC16BA0;
  *(_OWORD *)(v13 + 16) = xmmword_1BDC16BA0;
  v14 = (void *)*MEMORY[0x1E0C999D0];
  *(_QWORD *)(v13 + 32) = *MEMORY[0x1E0C999D0];
  type metadata accessor for URLResourceKey(0);
  v16 = v15;
  v47 = v14;
  v48 = v16;
  v17 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v56[0] = 0;
  v18 = objc_msgSend(v2, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v12, v17, 0, v56);

  v19 = v56[0];
  if (v18)
  {
    v55 = v1;
    v53 = v8;
    v20 = sub_1BDBFD9E0();
    v21 = v19;

    v56[0] = (id)MEMORY[0x1E0DEE9D8];
    v43 = *(_QWORD *)(v20 + 16);
    if (v43)
    {
      v22 = 0;
      v23 = v52;
      v24 = v53;
      v42 = v20;
      v25 = v54;
      while (1)
      {
        if (v22 >= *(_QWORD *)(v20 + 16))
          __break(1u);
        v26 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
        v27 = *(_QWORD *)(v23 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v7, v20 + v26 + v27 * v22, v24);
        v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
        v41(v7, 0, 1, v24);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v24) == 1)
          break;
        v28 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
        v29 = v7;
        v28(v25, v7, v24);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v49;
        v31 = v47;
        *(_QWORD *)(inited + 32) = v47;
        v32 = v31;
        sub_1BDAEDA78(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        v33 = v51;
        v34 = v55;
        sub_1BDBFC8AC();
        v55 = v34;
        if (v34)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
          swift_bridgeObjectRelease();
          return (id)swift_release();
        }
        swift_bridgeObjectRelease();
        v35 = sub_1BDBFC750();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v46);
        if ((v35 & 1) != 0)
        {
          v28(v44, v54, v53);
          v36 = (char *)v56[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BDB22A50(0, *((_QWORD *)v36 + 2) + 1, 1);
            v36 = (char *)v56[0];
          }
          v38 = *((_QWORD *)v36 + 2);
          v37 = *((_QWORD *)v36 + 3);
          if (v38 >= v37 >> 1)
          {
            sub_1BDB22A50(v37 > 1, v38 + 1, 1);
            v36 = (char *)v56[0];
          }
          *((_QWORD *)v36 + 2) = v38 + 1;
          v24 = v53;
          v28(&v36[v26 + v38 * v27], v44, v53);
          v56[0] = v36;
          v7 = v29;
          v23 = v52;
        }
        else
        {
          v23 = v52;
          v24 = v53;
          (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
          v7 = v29;
        }
        ++v22;
        v20 = v42;
        if (v43 == v22)
        {
          v41(v7, 1, 1, v24);
          break;
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v7, 1, 1, v53);
    }
    swift_bridgeObjectRelease();
    sub_1BDACDBAC((uint64_t)v7);
    return v56[0];
  }
  else
  {
    v39 = v56[0];
    sub_1BDBFC87C();

    return (id)swift_willThrow();
  }
}

uint64_t NSFileManager.createFile(at:contents:)()
{
  return sub_1BDBFC99C();
}

uint64_t NSFileManager.itemExists(at:)()
{
  void *v0;
  _BYTE *v1;
  void *v2;
  unsigned int v3;
  int v4;

  v1 = (_BYTE *)swift_slowAlloc();
  sub_1BDBFC918();
  v2 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v2, v1);

  if (v3)
  {
    if (*v1)
      v4 = 256;
    else
      v4 = 0;
  }
  else
  {
    v4 = 0;
  }
  return v4 | v3;
}

uint64_t NSFileManager.contents(of:)()
{
  return sub_1BDBFC954();
}

void sub_1BDB8D054(uint64_t a1)
{
  NSFileManager.url(for:)(a1);
}

void *sub_1BDB8D068()
{
  return NSFileManager.contentsOfDirectory(at:)();
}

id sub_1BDB8D07C()
{
  return NSFileManager.subdirectoriesOfDirectory(at:)();
}

id sub_1BDB8D090(uint64_t a1, char a2)
{
  return NSFileManager.createDirectory(at:withIntermediateDirectories:)(a1, a2);
}

uint64_t sub_1BDB8D0A4()
{
  return sub_1BDBFC99C();
}

id sub_1BDB8D0C4()
{
  return sub_1BDB8D0D8();
}

id sub_1BDB8D0D8()
{
  void *v0;
  void *v1;
  void *v2;
  id v4;
  id v5[2];

  v1 = v0;
  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1BDBFC8D0();
  v5[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v5);

  if ((_DWORD)v1)
    return v5[0];
  v4 = v5[0];
  sub_1BDBFC87C();

  return (id)swift_willThrow();
}

id sub_1BDB8D198()
{
  return sub_1BDB8D1AC();
}

id sub_1BDB8D1AC()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v5;
  id v6[2];

  v1 = v0;
  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1BDBFC8D0();
  v3 = (void *)sub_1BDBFC8D0();
  v6[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_copyItemAtURL_toURL_error_, v2, v3, v6);

  if ((_DWORD)v1)
    return v6[0];
  v5 = v6[0];
  sub_1BDBFC87C();

  return (id)swift_willThrow();
}

uint64_t sub_1BDB8D28C()
{
  void *v0;
  _BYTE *v1;
  void *v2;
  unsigned int v3;
  int v4;

  v1 = (_BYTE *)swift_slowAlloc();
  sub_1BDBFC918();
  v2 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v2, v1);

  if (v3)
  {
    if (*v1)
      v4 = 256;
    else
      v4 = 0;
  }
  else
  {
    v4 = 0;
  }
  return v4 | v3;
}

uint64_t sub_1BDB8D31C()
{
  return sub_1BDBFC954();
}

uint64_t dispatch thunk of ICFileManaging.url(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ICFileManaging.contentsOfDirectory(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ICFileManaging.subdirectoriesOfDirectory(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ICFileManaging.createFile(at:contents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ICFileManaging.removeItem(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ICFileManaging.copyItem(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ICFileManaging.itemExists(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v3;

  v3 = (*(uint64_t (**)(void))(a3 + 64))();
  return v3 & 1 | ((HIBYTE(v3) & 1) << 8);
}

uint64_t dispatch thunk of ICFileManaging.contents(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

void FastSyncError.errorDescription.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDB8D468()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

void sub_1BDB8D634()
{
  JUMPOUT(0x1BDB8D614);
}

unint64_t sub_1BDB8D6D0()
{
  unint64_t result;

  result = qword_1EF50EEA0;
  if (!qword_1EF50EEA0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSyncError, &type metadata for FastSyncError);
    atomic_store(result, (unint64_t *)&qword_1EF50EEA0);
  }
  return result;
}

uint64_t sub_1BDB8D724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 < 6u)
    return swift_bridgeObjectRetain();
  if (a5 == 6)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FastSyncError(uint64_t a1)
{
  return sub_1BDB8D784(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1BDB8D784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 < 6u)
    return swift_bridgeObjectRelease();
  if (a5 == 6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FastSyncError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BDB8D724(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FastSyncError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BDB8D724(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BDB8D784(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FastSyncError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BDB8D784(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FastSyncError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 7)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FastSyncError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 249;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BDB8D978(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 6u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 7);
}

uint64_t sub_1BDB8D990(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(_QWORD *)result = a2 - 7;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 7;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FastSyncError()
{
  return &type metadata for FastSyncError;
}

uint64_t URL.fileSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t inited;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EEA8);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v13 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  v7 = (void *)*MEMORY[0x1E0C99998];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C99998];
  v8 = v7;
  sub_1BDAEDA78(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1BDBFC8AC();
  swift_bridgeObjectRelease();
  v9 = sub_1BDBFC774();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
  sub_1BDB157E4((uint64_t)v5, (uint64_t)v3, &qword_1EF50EEA8);
  sub_1BDBFC774();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9) == 1)
  {
    sub_1BDAC350C((uint64_t)v5, &qword_1EF50EEA8);
    sub_1BDAC350C((uint64_t)v3, &qword_1EF50EEA8);
    return 0;
  }
  else
  {
    v11 = sub_1BDBFC768();
    sub_1BDAC350C((uint64_t)v5, &qword_1EF50EEA8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
  }
  return v11;
}

uint64_t URL.init(stringLiteral:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  sub_1BDBFE34C();
  sub_1BDBFC930();
  swift_bridgeObjectRelease();
  sub_1BDB157E4((uint64_t)v7, (uint64_t)v5, &qword_1ED23B1B0);
  v8 = sub_1BDBFC948();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
  {
    result = sub_1BDAC350C((uint64_t)v5, &qword_1ED23B1B0);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    return sub_1BDAC350C((uint64_t)v7, &qword_1ED23B1B0);
  }
  return result;
}

uint64_t sub_1BDB8DCF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  sub_1BDBFE34C();
  sub_1BDBFC930();
  swift_bridgeObjectRelease();
  sub_1BDB157E4((uint64_t)v9, (uint64_t)v7, &qword_1ED23B1B0);
  v10 = *(_QWORD *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, a1) == 1)
  {
    result = sub_1BDAC350C((uint64_t)v7, &qword_1ED23B1B0);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, a1);
    return sub_1BDAC350C((uint64_t)v9, &qword_1ED23B1B0);
  }
  return result;
}

uint64_t URL.deletingFragment()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v24 - v7;
  sub_1BDBFC93C();
  if (!v9)
  {
    v23 = sub_1BDBFC948();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, v1, v23);
  }
  sub_1BDBFC8A0();
  sub_1BDBFC8A0();
  v10 = sub_1BDBFD7A0();
  swift_bridgeObjectRelease();
  v11 = sub_1BDBFD7A0();
  swift_bridgeObjectRelease();
  v12 = v10 - v11;
  if (__OFSUB__(v10, v11))
  {
    __break(1u);
  }
  else if (!__OFSUB__(v12, 1))
  {
    v13 = sub_1BDBAEBC4(v12 - 1);
    v15 = v14;
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRelease();
    MEMORY[0x1C3B78D30](v13, v15, v17, v19);
    swift_bridgeObjectRelease();
    sub_1BDBFC930();
    swift_bridgeObjectRelease();
    sub_1BDB157E4((uint64_t)v8, (uint64_t)v6, &qword_1ED23B1B0);
    v20 = sub_1BDBFC948();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a1, v6, v20);
      return sub_1BDAC350C((uint64_t)v8, &qword_1ED23B1B0);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  result = sub_1BDAC350C((uint64_t)v6, &qword_1ED23B1B0);
  __break(1u);
  return result;
}

id sub_1BDB8E018(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  char v8;
  char v9;
  id v10;
  uint64_t v12;

  v2 = sub_1BDBFC948();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC90C();
  v6 = a1;
  v7 = URL.fileSize.getter();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10 = 0;
  if ((v9 & 1) == 0)
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v7);

  return v10;
}

id NSURL.fileSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char v5;
  char v6;
  id result;
  uint64_t v8;

  v0 = sub_1BDBFC948();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC90C();
  v4 = URL.fileSize.getter();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  result = 0;
  if ((v6 & 1) == 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v4);
  return result;
}

uint64_t NSURL.deletingFragment()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1BDBFC948();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC90C();
  URL.deletingFragment()(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1BDB8E228(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void (*v10)(char *, uint64_t);
  void *v11;
  uint64_t v13;

  v2 = sub_1BDBFC948();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  sub_1BDBFC90C();
  v9 = a1;
  URL.deletingFragment()((uint64_t)v8);
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);

  v11 = (void *)sub_1BDBFC8D0();
  v10(v8, v2);
  return v11;
}

uint64_t sub_1BDB8E2F8()
{
  return sub_1BDB8E34C(&qword_1EF50EEB0, (uint64_t)&protocol conformance descriptor for URL);
}

uint64_t sub_1BDB8E31C()
{
  return MEMORY[0x1E0DEC350];
}

uint64_t sub_1BDB8E328()
{
  return sub_1BDB8E34C(&qword_1EF50EEB8, (uint64_t)&protocol conformance descriptor for URL);
}

uint64_t sub_1BDB8E34C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BDBFC948();
    result = MEMORY[0x1C3B7B388](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDB8E38C()
{
  return MEMORY[0x1E0DEC368];
}

uint64_t sub_1BDB8E398()
{
  return MEMORY[0x1E0DEC360];
}

uint64_t dispatch thunk of static EntityID.uriTypeName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1BDB8E3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50EEC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50EEC0);
  if (qword_1EF50B130 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50C3A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id ICFolder.smartFolderQuery.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD v15[2];

  v1 = v0;
  v2 = sub_1BDBFD728();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v1, sel_smartFolderQueryJSON);
  if (result)
  {
    v7 = result;
    sub_1BDBFD6F8();

    sub_1BDBFD71C();
    v8 = sub_1BDBFD704();
    v10 = v9;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v10 >> 60 == 15)
    {
      if (qword_1EF50B230 != -1)
        swift_once();
      v11 = sub_1BDBFCE34();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EF50EEC0);
      v12 = sub_1BDBFCE1C();
      v13 = sub_1BDBFDED8();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_1BD918000, v12, v13, "Could not create JSON data from smartFolderQueryJSON", v14, 2u);
        MEMORY[0x1C3B7B478](v14, -1, -1);
      }

      return 0;
    }
    else
    {
      sub_1BDBFC390();
      swift_allocObject();
      sub_1BDBFC384();
      type metadata accessor for ICQuery();
      sub_1BDB8F4E4(&qword_1EF50EED8, (uint64_t)&protocol conformance descriptor for ICQuery);
      sub_1BDBFC378();
      swift_release();
      sub_1BDB40600(v8, v10);
      return (id)v15[1];
    }
  }
  return result;
}

id ICFolder.smartFolderQuery.setter(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;

  v2 = v1;
  v4 = sub_1BDBFD728();
  MEMORY[0x1E0C80A78](v4);
  if (!a1)
    return objc_msgSend(v2, sel_setSmartFolderQueryJSON_, 0);
  sub_1BDBFC3D8();
  swift_allocObject();
  v5 = a1;
  sub_1BDBFC3CC();
  type metadata accessor for ICQuery();
  sub_1BDB8F4E4(&qword_1EF50EEE0, (uint64_t)&protocol conformance descriptor for ICQuery);
  v7 = sub_1BDBFC3C0();
  v9 = v8;
  sub_1BDBFD71C();
  sub_1BDBFD710();
  if (v10)
  {
    v11 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v2, sel_setSmartFolderQueryJSON_, v11);

  sub_1BDAEB7EC(v7, v9);
  return (id)swift_release();
}

uint64_t ICFolder.smartFolderDescription.getter()
{
  void *v0;
  void *v1;
  unsigned int v2;
  uint64_t v3;
  id v4;
  void *v5;
  Class isa;
  ICTagSelection *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD *v11;
  id v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  void *v33;
  NSManagedObjectContext_optional v34;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_isSmartFolder);
  v3 = 0;
  if (!v2)
    return v3;
  v4 = objc_msgSend(v1, sel_smartFolderQueryObjC);
  if (!v4)
    return 0;
  v5 = v4;
  swift_beginAccess();
  swift_retain();
  v34.value.super.isa = (Class)objc_msgSend(v1, sel_managedObjectContext);
  isa = v34.value.super.isa;
  ICQueryType.tagSelection(managedObjectContext:)(v7, v34);
  v9 = v8;

  v10 = objc_msgSend(v9, sel_tagIdentifiers);
  v11 = (_QWORD *)sub_1BDBFD9E0();

  if (!v11[2] || (v12 = objc_msgSend(v1, sel_managedObjectContext)) == 0)
  {

    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  v13 = v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_canonicalHashtagsInContext_, v12);
  sub_1BD942914(0, &qword_1EF50EEE8);
  v15 = sub_1BDBFD9E0();

  v16 = sub_1BDB8F524(v15, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v33 = v13;
    if (v17)
      goto LABEL_7;
LABEL_23:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
    sub_1BDB3A4D0();
    v3 = sub_1BDBFD674();
    swift_bridgeObjectRelease();

    swift_release();
    return v3;
  }
  swift_bridgeObjectRetain();
  result = sub_1BDBFE574();
  v17 = result;
  v33 = v13;
  if (!result)
    goto LABEL_23;
LABEL_7:
  if (v17 >= 1)
  {
    v19 = 0;
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x1C3B79954](v19, v16);
      else
        v21 = *(id *)(v16 + 8 * v19 + 32);
      v22 = v21;
      v23 = objc_msgSend(v21, sel_displayText, v33);
      if (v23)
      {
        v24 = v23;
        sub_1BDBFD6F8();

        v25 = (void *)sub_1BDBFD6C8();
        swift_bridgeObjectRelease();
        v26 = objc_msgSend(v25, sel_ic_withHashtagPrefix);

        v27 = sub_1BDBFD6F8();
        v29 = v28;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_1BDBCBCC4(0, v20[2] + 1, 1, v20);
        v31 = v20[2];
        v30 = v20[3];
        if (v31 >= v30 >> 1)
          v20 = sub_1BDBCBCC4((_QWORD *)(v30 > 1), v31 + 1, 1, v20);
        v20[2] = v31 + 1;
        v32 = &v20[2 * v31];
        v32[4] = v27;
        v32[5] = v29;
      }
      else
      {

      }
      ++v19;
    }
    while (v17 != v19);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

id sub_1BDB8EDEC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

char *ICFolder.smartFolderShortDescription.getter()
{
  void *v0;
  id v1;
  void *v2;
  Class isa;
  ICTagSelection *v4;
  void *v5;
  void *v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSManagedObjectContext_optional v18;

  if (!objc_msgSend(v0, sel_isSmartFolder))
    return 0;
  v1 = objc_msgSend(v0, sel_smartFolderQueryObjC);
  if (!v1)
    return 0;
  v2 = v1;
  swift_beginAccess();
  swift_retain();
  v18.value.super.isa = (Class)objc_msgSend(v0, sel_managedObjectContext);
  isa = v18.value.super.isa;
  ICQueryType.tagSelection(managedObjectContext:)(v4, v18);
  v6 = v5;

  if (!objc_msgSend(v6, sel_isNonEmpty))
  {

    swift_release();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  v8 = objc_msgSend(v6, sel_selectedTagCount);
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = v8;
  v10 = (void *)objc_opt_self();
  v11 = (void *)sub_1BDBFD6C8();
  v12 = objc_msgSend(v10, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v11, 0, 0, 0);

  v13 = sub_1BDBFD6F8();
  v15 = v14;

  swift_bridgeObjectRetain();
  v16 = sub_1BDB8F750(inited, v13, v15);
  swift_bridgeObjectRelease_n();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
  swift_arrayDestroy();

  swift_release();
  return v16;
}

id static ICFolder.makeSmartFolder(with:titleComponents:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;

  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_newFolderInAccount_, a3);
  objc_msgSend(v5, sel_setSmartFolderQueryObjC_, a1);
  if (*(_QWORD *)(a2 + 16))
  {
    v6 = (void *)objc_opt_self();
    v7 = (void *)sub_1BDBFD9C8();
    v8 = objc_msgSend(v6, sel_objc_defaultSmartFolderTitleWithComponents_, v7);

    objc_msgSend(v5, sel_setTitle_, v8);
  }
  return v5;
}

id static ICFolder.makeSmartFolder(with:in:)(uint64_t a1, uint64_t a2)
{
  void *ObjCClassFromMetadata;
  void *v5;
  id v6;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v5 = (void *)sub_1BDBFD9C8();
  v6 = objc_msgSend(ObjCClassFromMetadata, sel_objc_smartFolderWithQuery_titleComponents_account_, a1, v5, a2);

  return v6;
}

id sub_1BDB8F3C4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v7 = a3[3];
  if (v7)
  {
    v8 = __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v9 = *(_QWORD *)(v7 - 8);
    MEMORY[0x1E0C80A78](v8);
    v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = sub_1BDBFE868();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a3);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFormat_locale_arguments_, v6, v12, a4);

  swift_unknownObjectRelease();
  return v13;
}

uint64_t sub_1BDB8F4E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ICQuery();
    result = MEMORY[0x1C3B7B388](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDB8F524(unint64_t a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v3 = a1;
  v28 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_35;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v22 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v26 = v4;
      v27 = (_QWORD *)(v3 + 32);
      v23 = a2 + 7;
      v24 = v3 & 0xFFFFFFFFFFFFFF8;
      v25 = v3 & 0xC000000000000001;
      while (1)
      {
        if (v6)
        {
          v8 = (id)MEMORY[0x1C3B79954](v5, v22);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v7 + 16))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          v8 = (id)v27[v5];
        }
        v9 = v8;
        if (__OFADD__(v5++, 1))
          goto LABEL_33;
        v11 = objc_msgSend(v8, sel_standardizedContent);
        if (v11)
          break;

LABEL_5:
        if (v5 == v4)
          return v28;
      }
      v12 = v11;
      v13 = sub_1BDBFD6F8();
      v3 = (unint64_t)v14;

      v15 = (_QWORD *)a2[2];
      if (!v15)
      {

        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      v16 = a2;
      v17 = a2[4] == v13 && a2[5] == v3;
      if (v17 || (sub_1BDBFE874() & 1) != 0)
        break;
      if (v15 == (_QWORD *)1)
      {
LABEL_29:

        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      v18 = v23;
      v19 = 1;
      while (1)
      {
        a2 = (_QWORD *)(v19 + 1);
        if (__OFADD__(v19, 1))
          break;
        v20 = *(v18 - 1) == v13 && *v18 == v3;
        if (v20 || (sub_1BDBFE874() & 1) != 0)
          goto LABEL_17;
        v18 += 2;
        ++v19;
        if (a2 == v15)
          goto LABEL_29;
      }
LABEL_34:
      __break(1u);
LABEL_35:
      v4 = sub_1BDBFE574();
      if (!v4)
        return MEMORY[0x1E0DEE9D8];
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1BDBFE448();
    sub_1BDBFE478();
    sub_1BDBFE484();
    v3 = (unint64_t)&v28;
    sub_1BDBFE454();
LABEL_18:
    v6 = v25;
    v4 = v26;
    a2 = v16;
    v7 = v24;
    goto LABEL_5;
  }
  return MEMORY[0x1E0DEE9D8];
}

char *sub_1BDB8F750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *result;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v27[3];
  uint64_t v28;

  sub_1BDBFE4D8();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = 8;
  v4[3] = 0;
  v5 = v4 + 3;
  v4[4] = 0;
  v4[5] = 0;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_25:
    v22 = sub_1BDBFE4CC();
    sub_1BD942914(0, (unint64_t *)&qword_1EF50BBE0);
    v28 = sub_1BDBFCB58();
    __swift_allocate_boxed_opaque_existential_1(v27);
    swift_bridgeObjectRetain();
    sub_1BDBFCB4C();
    v23 = sub_1BDB8F3C4(a2, a3, v27, v22);
    v24 = sub_1BDBFD6F8();
    swift_release();

    return (char *)v24;
  }
  v7 = 0;
  v8 = a1 + 32;
  while (1)
  {
    sub_1BDADED64(v8 + 40 * v7, (uint64_t)v27);
    __swift_project_boxed_opaque_existential_1(v27, v28);
    result = (char *)sub_1BDBFEA9C();
    v10 = *v5;
    v11 = *((_QWORD *)result + 2);
    v12 = __OFADD__(*v5, v11);
    v13 = *v5 + v11;
    if (v12)
      break;
    v14 = result;
    v15 = v4[4];
    if (v15 >= v13)
      goto LABEL_18;
    if (v15 + 0x4000000000000000 < 0)
      goto LABEL_28;
    v16 = (char *)v4[5];
    if (2 * v15 > v13)
      v13 = 2 * v15;
    v4[4] = v13;
    if ((unint64_t)(v13 - 0x1000000000000000) >> 61 != 7)
      goto LABEL_29;
    result = (char *)swift_slowAlloc();
    v4[5] = result;
    if (v16)
    {
      if (result != v16 || result >= &v16[8 * v10])
        memmove(result, v16, 8 * v10);
      sub_1BDBFE4C0();
LABEL_18:
      result = (char *)v4[5];
    }
    if (!result)
      goto LABEL_30;
    v18 = *((_QWORD *)v14 + 2);
    if (v18)
    {
      v19 = (uint64_t *)(v14 + 32);
      v20 = *v5;
      while (1)
      {
        v21 = *v19++;
        *(_QWORD *)&result[8 * v20] = v21;
        v20 = *v5 + 1;
        if (__OFADD__(*v5, 1))
          break;
        *v5 = v20;
        if (!--v18)
          goto LABEL_3;
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v7;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
    if (v7 == v6)
      goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t _sSo8ICFolderC11NotesSharedE23defaultSmartFolderTitle10componentsSSSaySSG_tFZ_0(uint64_t a1)
{
  unint64_t v1;
  uint64_t inited;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 <= 2)
  {
    v16 = a1;
    swift_bridgeObjectRetain();
    sub_1BDB3095C(&v16);
    v11 = v16;
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3738]), sel_init);
    sub_1BDBC375C(v11);
    swift_release();
    v13 = (void *)sub_1BDBFD9C8();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v12, sel_stringFromItems_, v13);

    if (v14)
    {
      v10 = sub_1BDBFD6F8();

    }
    else
    {

      return 0;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
    v3 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 64) = v3;
    *(_QWORD *)(inited + 32) = v1;
    v4 = (void *)objc_opt_self();
    v5 = (void *)sub_1BDBFD6C8();
    v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 0);

    v7 = sub_1BDBFD6F8();
    v9 = v8;

    swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_1BDB8F750(inited, v7, v9);
    swift_bridgeObjectRelease_n();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
    swift_arrayDestroy();
  }
  return v10;
}

char *keypath_get_selector_smartFolderQueryObjC()
{
  return sel_smartFolderQueryObjC;
}

id sub_1BDB8FBB8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_smartFolderQueryObjC);
  *a2 = result;
  return result;
}

id sub_1BDB8FBF0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSmartFolderQueryObjC_, *a1);
}

Swift::Void __swiftcall ICHashtag.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = v1;
  v3 = objc_msgSend(v1, sel_displayText);
  if (v3)
  {
    v4 = v3;
    sub_1BDBFD6F8();

    sub_1BDBFD6F8();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    sub_1BDBFD7DC();
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease_n();
    v5 = objc_msgSend(v2, sel_displayText);
    if (v5)
    {
      v6 = v5;
      sub_1BDBFD6F8();

    }
    sub_1BDAC2F74(MEMORY[0x1E0DEE9D8]);
    sub_1BDBFE034();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

Swift::String __swiftcall Duration.formattedTime(fractionalSeconds:)(Swift::Bool fractionalSeconds)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  Swift::String result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  v3 = v2;
  v4 = v1;
  v5 = sub_1BDBFE850();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BDBFEAFC();
  v9 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BDBFEB08();
  v21 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v4;
  v23 = v3;
  v15 = sub_1BDBFEB20();
  v16 = *MEMORY[0x1E0DED4E8];
  if (v15 >= 3600)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v8, v16, v5);
    sub_1BDBFEAF0();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v8, v16, v5);
    sub_1BDBFEAE4();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BDBFC36C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v20);
  sub_1BDB8FFB0();
  sub_1BDBFEB14();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v12);
  v17 = v24;
  v18 = v25;
  result._object = v18;
  result._countAndFlagsBits = v17;
  return result;
}

unint64_t sub_1BDB8FFB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50EEF0;
  if (!qword_1EF50EEF0)
  {
    v1 = sub_1BDBFEB08();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CB2768], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50EEF0);
  }
  return result;
}

void sub_1BDB8FFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1BDBFC870();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t NotesInvernessClient.Environments.init(rawValue:)(uint64_t result)
{
  if ((unint64_t)(result - 4) < 0xFFFFFFFFFFFFFFFDLL)
    return 0;
  return result;
}

uint64_t sub_1BDB9005C()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB900A0()
{
  return sub_1BDBFEA18();
}

uint64_t sub_1BDB900C8()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t *sub_1BDB90108@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = *result - 4;
  v4 = __CFADD__(v3, 3);
  v5 = v3 < 0xFFFFFFFFFFFFFFFDLL;
  if (!v4)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

id NotesInvernessClient.container.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_container);
}

uint64_t NotesInvernessClient.environment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_environment);
}

uint64_t NotesInvernessClient.localURLString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_localURLString);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDB901EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t result;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_environment);
  if ((unint64_t)(v1 - 1) >= 3)
  {
    result = sub_1BDBFE970();
    __break(1u);
  }
  else
  {
    v2 = *(void **)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_container);
    v4 = v1 - 1;
    return sub_1BDB91ADC(v2, &v4, *(_QWORD *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_localURLString), *(_QWORD *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_localURLString + 8));
  }
  return result;
}

id NotesInvernessClient.__allocating_init(container:environment:localURLString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  objc_super v12;

  v9 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v9[OBJC_IVAR___ICNotesInvernessClientObjc_container] = a1;
  *(_QWORD *)&v9[OBJC_IVAR___ICNotesInvernessClientObjc_environment] = a2;
  v10 = &v9[OBJC_IVAR___ICNotesInvernessClientObjc_localURLString];
  *(_QWORD *)v10 = a3;
  *((_QWORD *)v10 + 1) = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

id NotesInvernessClient.init(container:environment:localURLString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_super v7;

  *(_QWORD *)&v4[OBJC_IVAR___ICNotesInvernessClientObjc_container] = a1;
  *(_QWORD *)&v4[OBJC_IVAR___ICNotesInvernessClientObjc_environment] = a2;
  v5 = &v4[OBJC_IVAR___ICNotesInvernessClientObjc_localURLString];
  *(_QWORD *)v5 = a3;
  *((_QWORD *)v5 + 1) = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for NotesInvernessClient();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for NotesInvernessClient()
{
  return objc_opt_self();
}

uint64_t sub_1BDB903E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  _OWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v30 = a8;
  v29 = a7;
  v31 = a14;
  v32 = a15;
  v28[2] = a11;
  v28[1] = a10;
  v28[0] = a9;
  v21 = type metadata accessor for MentionNotificationRequestV2(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  v34 = a2;
  v35 = a3;
  v36 = a4;
  v37 = a5;
  v38 = a6;
  v39 = v29;
  v40 = v30;
  v41 = a9;
  v42 = a10;
  v43 = a11;
  v44 = a12;
  v45 = a13;
  v25 = v24;
  sub_1BDAC31B0(&qword_1EF50DDB0, v24, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
  sub_1BDBFCD80();
  sub_1BDB901EC();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v31;
  *(_QWORD *)(v26 + 24) = v32;
  swift_retain();
  sub_1BDB4E4C4((uint64_t)v23);
  swift_release();
  swift_release();
  return sub_1BDAE1658((uint64_t)v23, v25);
}

uint64_t sub_1BDB905B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a4;
  a1[3] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a6;
  a1[5] = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a8;
  a1[7] = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a10;
  a1[9] = a11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a12;
  a1[11] = a13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a14;
  a1[13] = a15;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  a1[14] = a16;
  a1[15] = a17;
  return result;
}

uint64_t sub_1BDB90724(_QWORD *a1)
{
  return sub_1BDB920C8(a1);
}

void sub_1BDB90738(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void *v7;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EF20);
  MEMORY[0x1E0C80A78](v4);
  v6 = (void **)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BDB157E4(a1, (uint64_t)v6, &qword_1EF50EF20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = *v6;
  }
  else
  {
    sub_1BDAC350C((uint64_t)v6, &qword_1EF50EF20);
    v7 = 0;
  }
  a2(v7);

}

uint64_t sub_1BDB90800()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BDB90824(uint64_t a1)
{
  uint64_t v1;

  sub_1BDB90738(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1BDB90B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t updated;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v28 = a6;
  v27 = a8;
  v29 = a12;
  v30 = a13;
  v26 = a9;
  updated = type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  MEMORY[0x1E0C80A78](updated);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a1;
  v32 = a2;
  v33 = a3;
  v34 = a4;
  v35 = a7;
  v36 = v27;
  v37 = a5;
  v38 = v28;
  v39 = a9;
  v40 = a10;
  v41 = a11;
  v23 = v22;
  sub_1BDAC31B0(&qword_1ED23A248, v22, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
  sub_1BDBFCD80();
  sub_1BDB901EC();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v29;
  *(_QWORD *)(v24 + 24) = v30;
  swift_retain();
  sub_1BDB4E630((uint64_t)v21);
  swift_release();
  swift_release();
  return sub_1BDAE1658((uint64_t)v21, v23);
}

uint64_t sub_1BDB90CD8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  uint64_t v19;
  unint64_t v20;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a4;
  a1[3] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a6;
  a1[7] = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a8;
  a1[5] = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a10;
  a1[9] = a11;
  v19 = a1[10];
  v20 = a1[11];
  sub_1BDB4EB54(a12, a13);
  result = sub_1BDAEB7EC(v19, v20);
  a1[10] = a12;
  a1[11] = a13;
  return result;
}

uint64_t sub_1BDB90DF8(_QWORD *a1)
{
  return sub_1BDB9204C(a1);
}

void sub_1BDB90E0C(uint64_t a1, void (*a2)(void *, _QWORD, unint64_t, _QWORD), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t updated;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  _QWORD *v30;
  void (*v31)(void *, _QWORD, unint64_t, _QWORD);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v32 = a3;
  v5 = sub_1BDBFCC48();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v29 - v10;
  updated = type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
  MEMORY[0x1E0C80A78](updated);
  v14 = (_QWORD *)((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A2B8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (void **)((char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BDB157E4(a1, (uint64_t)v17, &qword_1ED23A2B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = *v17;
    v19 = v18;
    a2(v18, 0, 0xF000000000000000, 0);

  }
  else
  {
    v33 = v6;
    sub_1BDB9214C((uint64_t)v17, (uint64_t)v14);
    v20 = v14[2];
    v35 = MEMORY[0x1E0DEE9D8];
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v30 = v14;
      v31 = a2;
      v34 = sub_1BDB9208C();
      v22 = v33;
      v23 = v20 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
      v24 = *(_QWORD *)(v33 + 72);
      v25 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
      v29[1] = v20;
      swift_bridgeObjectRetain();
      do
      {
        v25(v11, v23, v5);
        v25(v9, (uint64_t)v11, v5);
        v26 = sub_1BDBFE04C();
        v27 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v5);
        if (v26)
        {
          MEMORY[0x1C3B78F88](v27);
          if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BDBFDA1C();
          sub_1BDBFDA64();
          sub_1BDBFD9F8();
          v22 = v33;
        }
        v23 += v24;
        --v21;
      }
      while (v21);
      v28 = v35;
      a2 = v31;
      v14 = v30;
    }
    else
    {
      swift_bridgeObjectRetain();
      v28 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    a2(0, *v14, v14[1], v28);
    swift_bridgeObjectRelease();
    sub_1BDAE1658((uint64_t)v14, type metadata accessor for DidCompleteInstallOrUpdateResponse);
  }
}

void sub_1BDB910CC(uint64_t a1)
{
  uint64_t v1;

  sub_1BDB90E0C(a1, *(void (**)(void *, _QWORD, unint64_t, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BDB91358(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;

  if (a1)
    v8 = (void *)sub_1BDBFC870();
  else
    v8 = 0;
  if (a3 >> 60 != 15)
  {
    v9 = (void *)sub_1BDBFC978();
    if (a4)
      goto LABEL_6;
LABEL_8:
    v10 = 0;
    goto LABEL_9;
  }
  v9 = 0;
  if (!a4)
    goto LABEL_8;
LABEL_6:
  sub_1BDB9208C();
  v10 = sub_1BDBFD9C8();
LABEL_9:
  v11 = (id)v10;
  (*(void (**)(uint64_t, void *, void *))(a5 + 16))(a5, v8, v9);

}

void sub_1BDB91418(void *a1, void (*a2)(id), uint64_t a3)
{
  sub_1BDB914AC(a1, 0, 0xF000000000000000, a2, a3);
}

void sub_1BDB914AC(void *a1, uint64_t a2, unint64_t a3, void (*a4)(id), uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;

  v11 = type metadata accessor for RunGarbageCollectorRequest(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v25 - v15);
  if (a1 && (objc_msgSend(a1, sel_isCancelled) & 1) != 0)
  {
    sub_1BDBFD6F8();
    v17 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v18 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, 3072, 0);

    v26 = v19;
    a4(v19);

  }
  else
  {
    _s11NotesShared11PingRequestVACycfC_0();
    if (a3 >> 60 == 15)
      v20 = 0;
    else
      v20 = a2;
    v21 = 0xC000000000000000;
    if (a3 >> 60 != 15)
      v21 = a3;
    *v16 = v20;
    v16[1] = v21;
    sub_1BDB91FFC(a2, a3);
    sub_1BDB901EC();
    sub_1BDAE1544((uint64_t)v16, (uint64_t)v14, type metadata accessor for RunGarbageCollectorRequest);
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v5;
    v22[3] = a1;
    v22[4] = a4;
    v22[5] = a5;
    v23 = v5;
    v24 = a1;
    swift_retain();
    sub_1BDB4E79C((uint64_t)v14);
    swift_release();
    swift_release();
    sub_1BDAE1658((uint64_t)v14, type metadata accessor for RunGarbageCollectorRequest);
    sub_1BDAE1658((uint64_t)v16, type metadata accessor for RunGarbageCollectorRequest);
  }
}

void sub_1BDB916D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  id *v14;
  int EnumCaseMultiPayload;
  void *v16;
  uint64_t v17;

  v6 = type metadata accessor for RunGarbageCollectorResponse(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EF18);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (void **)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v14 = (id *)((char *)&v17 - v13);
  sub_1BDB157E4(a1, (uint64_t)&v17 - v13, &qword_1EF50EF18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BDAE1544((uint64_t)v14, (uint64_t)v8, type metadata accessor for RunGarbageCollectorResponse);
    __asm { BR              X10 }
  }

  sub_1BDB157E4(a1, (uint64_t)v12, &qword_1EF50EF18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v16 = *v12;
  }
  else
  {
    sub_1BDAC350C((uint64_t)v12, &qword_1EF50EF18);
    v16 = 0;
  }
  a4(v16);

}

id NotesInvernessClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NotesInvernessClient.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NotesInvernessClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotesInvernessClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1BDB91994()
{
  unint64_t result;

  result = qword_1EF50EF10;
  if (!qword_1EF50EF10)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for NotesInvernessClient.Environments, &type metadata for NotesInvernessClient.Environments);
    atomic_store(result, (unint64_t *)&qword_1EF50EF10);
  }
  return result;
}

uint64_t method lookup function for NotesInvernessClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotesInvernessClient.__allocating_init(container:environment:localURLString:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NotesInvernessClient.sendMentionNotification(recipientUserId:senderName:noteTitle:mentionSnippet:shareRecordName:shareOwnerUserId:noteRecordName:inlineAttachmentRecordName:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of NotesInvernessClient.didCompleteInstallOrUpdate(previousBuildNumber:previousVersion:currentBuildNumber:currentVersion:platformName:continuationToken:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NotesInvernessClient.runGarbageCollector(progress:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

ValueMetadata *type metadata accessor for NotesInvernessClient.Environments()
{
  return &type metadata for NotesInvernessClient.Environments;
}

uint64_t sub_1BDB91ADC(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _WORD v22[8];

  v20 = a3;
  v21 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BDBFC948();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2 + 1;
  strcpy((char *)v22, "NotesService");
  HIBYTE(v22[6]) = 0;
  v22[7] = -5120;
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BDBFD6C8();
  v15 = objc_msgSend(a1, sel_codeServiceWithName_databaseScope_, v14, 2, v20, v21);

  if (v13 != 3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_1BDBFC930();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v16 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    v17 = (void *)sub_1BDBFC8D0();
    v18 = objc_msgSend(a1, sel_codeServiceWithName_databaseScope_serviceInstanceURL_, v16, 2, v17);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v15 = v18;
LABEL_5:
    type metadata accessor for NotesServiceAPIAsyncClient();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v15;
    return result;
  }
  sub_1BDAC350C((uint64_t)v8, &qword_1ED23B1B0);
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

void sub_1BDB91D88(void *a1, uint64_t a2, unint64_t a3, void *a4, void (**a5)(_QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;

  v10 = type metadata accessor for RunGarbageCollectorRequest(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v26 - v14);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  if (a1)
  {
    _Block_copy(a5);
    if ((objc_msgSend(a1, sel_isCancelled) & 1) != 0)
    {
      sub_1BDBFD6F8();
      v17 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v18 = (void *)sub_1BDBFD6C8();
      swift_bridgeObjectRelease();
      v19 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, 3072, 0);

      v20 = v19;
      v27 = (id)sub_1BDBFC870();
      ((void (**)(_QWORD, id))a5)[2](a5, v27);
      swift_release();

      return;
    }
  }
  else
  {
    _Block_copy(a5);
  }
  _s11NotesShared11PingRequestVACycfC_0();
  if (a3 >> 60 == 15)
    v21 = 0;
  else
    v21 = a2;
  v22 = 0xC000000000000000;
  if (a3 >> 60 != 15)
    v22 = a3;
  *v15 = v21;
  v15[1] = v22;
  sub_1BDB91FFC(a2, a3);
  sub_1BDB901EC();
  sub_1BDAE1544((uint64_t)v15, (uint64_t)v13, type metadata accessor for RunGarbageCollectorRequest);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a4;
  v23[3] = a1;
  v23[4] = sub_1BDB65EA4;
  v23[5] = v16;
  v24 = a4;
  v25 = a1;
  swift_retain();
  sub_1BDB4E79C((uint64_t)v13);
  swift_release();
  swift_release();
  sub_1BDAE1658((uint64_t)v13, type metadata accessor for RunGarbageCollectorRequest);
  sub_1BDAE1658((uint64_t)v15, type metadata accessor for RunGarbageCollectorRequest);
  swift_release();
}

uint64_t sub_1BDB91FFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BDB4EB54(a1, a2);
  return a1;
}

void sub_1BDB92014(uint64_t a1)
{
  uint64_t v1;

  sub_1BDB916D0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

uint64_t sub_1BDB92020()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BDB92044(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BDB91358(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BDB9204C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BDB90CD8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

unint64_t sub_1BDB9208C()
{
  unint64_t result;

  result = qword_1ED23A2B0;
  if (!qword_1ED23A2B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED23A2B0);
  }
  return result;
}

uint64_t sub_1BDB920C8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BDB905B4(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17]);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB9214C(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t static NSBundle.sharedFramework.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v1 = (id)ICSharedFrameworkBundleIdentifier();
  sub_1BDBFD6F8();

  v2 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleWithIdentifier_, v2);

  if (v3)
  {
    *((_QWORD *)&v6 + 1) = v0;
    *(_QWORD *)&v5 = v3;
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  castOrFatalError<A>(_:as:)((uint64_t)&v5, v0, v0, (uint64_t)&v7);
  sub_1BDB3B1EC((uint64_t)&v5);
  return v7;
}

uint64_t ICQueryEntity.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t ICQueryEntity.rawValue.getter()
{
  return 1702129518;
}

unint64_t sub_1BDB922DC()
{
  unint64_t result;

  result = qword_1EF50EF28;
  if (!qword_1EF50EF28)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryEntity, &type metadata for ICQueryEntity);
    atomic_store(result, (unint64_t *)&qword_1EF50EF28);
  }
  return result;
}

uint64_t sub_1BDB92320()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB92368()
{
  return sub_1BDBFD794();
}

uint64_t sub_1BDB92378()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDB923BC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BDB9240C(_QWORD *a1@<X8>)
{
  *a1 = 1702129518;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1BDB92420()
{
  sub_1BDB92564();
  return sub_1BDBFD998();
}

uint64_t sub_1BDB9247C()
{
  sub_1BDB92564();
  return sub_1BDBFD950();
}

uint64_t storeEnumTagSinglePayload for ICQueryEntity(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BDB92508 + 4 * asc_1BDC1E0B8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BDB92528 + 4 * byte_1BDC1E0BD[v4]))();
}

_BYTE *sub_1BDB92508(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BDB92528(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDB92530(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDB92538(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDB92540(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDB92548(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ICQueryEntity()
{
  return &type metadata for ICQueryEntity;
}

unint64_t sub_1BDB92564()
{
  unint64_t result;

  result = qword_1EF50EF30;
  if (!qword_1EF50EF30)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICQueryEntity, &type metadata for ICQueryEntity);
    atomic_store(result, (unint64_t *)&qword_1EF50EF30);
  }
  return result;
}

uint64_t static ICPaperAttachmentCreationHelper.copyNewPaperBundle(to:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = sub_1BDBFC948();
  v3[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 + 64);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB92638()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v1 = sub_1BDB92A7C(*(char **)(v0 + 192), *(void **)(v0 + 128));
  *(_QWORD *)(v0 + 208) = v1;
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = v1;
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 168);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v8(v2, *(_QWORD *)(v0 + 192), v7);
  v20 = objc_msgSend((id)objc_opt_self(), sel_ic_fileCoordinationOperationQueue);
  *(_QWORD *)(v0 + 216) = v20;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v9(v4, v18, v7);
  v9(v3, v2, v7);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = (v19 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v10 + v12 + 8) & ~v10;
  v14 = swift_allocObject();
  *(_QWORD *)(v0 + 224) = v14;
  v8(v14 + v11, v4, v7);
  *(_QWORD *)(v14 + v12) = v5;
  v8(v14 + v13, v3, v7);
  v15 = v5;
  v16 = v20;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1BDB927E8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;

  v2 = (void *)v0[27];
  v1 = v0[28];
  v0[2] = v0;
  v0[3] = sub_1BDB928D4;
  v3 = swift_continuation_init();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_1BDB92E54;
  v4[3] = v1;
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v4[4] = v3;
  v5[4] = sub_1BDB2B76C;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_1BDB24AB0;
  v5[3] = &block_descriptor_12;
  v6 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_addOperationWithBlock_, v6);
  _Block_release(v6);
  return swift_continuation_await();
}

uint64_t sub_1BDB928D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = *(void **)(v1 + 216);

    swift_release_n();
  }
  return swift_task_switch();
}

uint64_t sub_1BDB92958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB929D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)(v0 + 208);
  v1 = *(void **)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  swift_willThrow();

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BDB92A7C(char *a1, void *a2)
{
  void *v2;
  id v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  objc_class *v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  objc_super v25;
  void *v26;

  v3 = v2;
  v6 = sub_1BDBFC948();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a2, sel_paperBundleModel);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    goto LABEL_7;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_paperBundleURL);

  sub_1BDBFC90C();
  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v12, v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
LABEL_7:
    sub_1BDAC350C((uint64_t)v12, &qword_1ED23B1B0);
    v23 = a2;
    sub_1BDBD9EEC(1, v23);

    swift_willThrow();
    return v3;
  }
  v16(a1, v12, v6);
  v17 = (objc_class *)type metadata accessor for ICSystemPaperDocument();
  v18 = (char *)objc_allocWithZone(v17);
  *(_QWORD *)&v18[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a2;
  v25.receiver = v18;
  v25.super_class = v17;
  v19 = a2;
  v20 = (char *)objc_msgSendSuper2(&v25, sel_init);
  v21 = objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment], sel_managedObjectContext);
  if (v21
    && (v22 = v21,
        MEMORY[0x1E0C80A78](v21),
        *((_QWORD *)&v25 - 2) = v20,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AE30),
        sub_1BDBFDFF8(),
        v22,
        (v3 = v26) != 0))
  {

  }
  else
  {
    v3 = v19;
    sub_1BDBD9EEC(2, v3);

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
  }
  return v3;
}

uint64_t sub_1BDB92D40()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE20);
  result = sub_1BDBFD434();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BDB92DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = sub_1BDBFC948();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v3 + v5 + 8) & ~v3;
  v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v0 + v4, v1);

  v7(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_1BDB92E54()
{
  sub_1BDBFC948();
  return sub_1BDB92D40();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_1BDB9300C(void *a1, uint64_t a2, const void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a1;
  v6 = sub_1BDBFC948();
  v3[3] = v6;
  v3[4] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v3[5] = v7;
  v3[6] = _Block_copy(a3);
  sub_1BDBFC90C();
  swift_getObjCClassMetadata();
  v8 = a1;
  v9 = (_QWORD *)swift_task_alloc();
  v3[7] = v9;
  *v9 = v3;
  v9[1] = sub_1BDB930D8;
  return static ICPaperAttachmentCreationHelper.copyNewPaperBundle(to:from:)((uint64_t)v8, v7);
}

uint64_t sub_1BDB930D8()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD *)(*v1 + 32);
  v2 = *(_QWORD *)(*v1 + 40);
  v5 = *(void **)(*v1 + 16);
  v4 = *(_QWORD *)(*v1 + 24);
  v6 = *v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  v7 = *(_QWORD *)(v6 + 48);
  if (v0)
  {
    v8 = (void *)sub_1BDBFC870();

    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v7 + 16))(*(_QWORD *)(v6 + 48), 0);
  }
  _Block_release(*(const void **)(v6 + 48));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t static ICPaperAttachmentCreationHelper.createPaperDocument(for:fromLegacyMediaAt:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v3[19] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EF48);
  v3[20] = swift_task_alloc();
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0) - 8);
  v3[21] = v4;
  v3[22] = *(_QWORD *)(v4 + 64);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v5 = sub_1BDBFC948();
  v3[25] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[26] = v6;
  v3[27] = *(_QWORD *)(v6 + 64);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB93284()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;

  v1 = objc_msgSend(*(id *)(v0 + 128), sel_managedObjectContext);
  v2 = *(_QWORD *)(v0 + 160);
  if (!v1)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EF50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
LABEL_5:
    sub_1BDAC350C(*(_QWORD *)(v0 + 160), &qword_1EF50EF48);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = v1;
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  sub_1BDBFDFF8();
  v8 = *(_QWORD *)(v0 + 160);

  swift_task_dealloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EF50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9) == 1)
    goto LABEL_5;
  v11 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 200);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 192);
  v31 = *(_QWORD *)(v0 + 184);
  v32 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 144);
  v29 = v11;
  v30 = *(_QWORD *)(v0 + 136);
  v36 = *(void **)(v17 + *(int *)(v9 + 48));
  *(_QWORD *)(v0 + 248) = v36;
  v18 = v17 + *(int *)(v9 + 64);
  v19 = *(void (**)(uint64_t))(v15 + 32);
  v19(v12);
  sub_1BDAC75A0(v18, v16);
  v34 = objc_msgSend((id)objc_opt_self(), sel_ic_fileCoordinationOperationQueue);
  *(_QWORD *)(v0 + 256) = v34;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v20(v11, v12, v14);
  v20(v13, v30, v14);
  sub_1BDB67ABC(v16, v31);
  v21 = *(unsigned __int8 *)(v15 + 80);
  v22 = (v21 + 24) & ~v21;
  v23 = (v32 + v21 + v22) & ~v21;
  v24 = (v32 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (*(unsigned __int8 *)(v33 + 80) + v24 + 8) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v26 = swift_allocObject();
  *(_QWORD *)(v0 + 264) = v26;
  *(_QWORD *)(v26 + 16) = v35;
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v26 + v22, v29, v14);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v26 + v23, v13, v14);
  *(_QWORD *)(v26 + v24) = v36;
  sub_1BDAC75A0(v31, v26 + v25);
  v27 = v36;
  v28 = v34;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1BDB935D8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;

  v2 = (void *)v0[32];
  v1 = v0[33];
  v0[2] = v0;
  v0[3] = sub_1BDB936C4;
  v3 = swift_continuation_init();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_1BDB93BC8;
  v4[3] = v1;
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v4[4] = v3;
  v5[4] = sub_1BDB2BBFC;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_1BDB24AB0;
  v5[3] = &block_descriptor_15;
  v6 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_addOperationWithBlock_, v6);
  _Block_release(v6);
  return swift_continuation_await();
}

uint64_t sub_1BDB936C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 272) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = *(void **)(v1 + 256);

    swift_release_n();
  }
  return swift_task_switch();
}

uint64_t sub_1BDB93748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);

  sub_1BDAC350C(v4, &qword_1ED23B1B0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB937F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)(v0 + 248);
  v1 = *(void **)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 192);
  swift_willThrow();

  swift_release_n();
  sub_1BDAC350C(v6, &qword_1ED23B1B0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BDB938C8@<X0>(void *a1@<X1>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id result;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;

  v28 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - v8;
  v10 = sub_1BDBFC948();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v26 - v15;
  result = sub_1BDB92A7C(v14, a1);
  if (!v2)
  {
    v18 = result;
    v27 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v27(v16, v14, v10);
    v19 = objc_msgSend(a1, sel_fallbackPDFURL);
    if (v19)
    {
      v20 = v19;
      sub_1BDBFC90C();

      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    v22 = v28;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, v21, 1, v10);
    sub_1BDAC75A0((uint64_t)v7, (uint64_t)v9);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EF50);
    v24 = *(int *)(v23 + 48);
    v25 = (uint64_t)&v22[*(int *)(v23 + 64)];
    v27(v22, v16, v10);
    *(_QWORD *)&v22[v24] = v18;
    sub_1BDAC75A0((uint64_t)v9, v25);
    return (id)(*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  return result;
}

id sub_1BDB93AB0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1BDB938C8(*(void **)(v1 + 24), a1);
}

uint64_t sub_1BDB93AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = sub_1BDBFC948();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (v5 + v3 + v4) & ~v3;
  v7 = (v5 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v6, v1);

  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v9, 1, v1))
    v10(v0 + v9, v1);
  return swift_deallocObject();
}

uint64_t sub_1BDB93BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(sub_1BDBFC948() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (v4 + v2 + v3) & ~v2;
  v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0) - 8) + 80);
  return sub_1BDB94BE4(v0 + v3, v0 + v5, *(_QWORD *)(v0 + v6), v0 + ((v7 + v6 + 8) & ~v7));
}

uint64_t sub_1BDB93C58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB93DB0(void *a1, uint64_t a2, const void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a1;
  v6 = sub_1BDBFC948();
  v3[3] = v6;
  v3[4] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v3[5] = v7;
  v3[6] = _Block_copy(a3);
  sub_1BDBFC90C();
  swift_getObjCClassMetadata();
  v8 = a1;
  v9 = (_QWORD *)swift_task_alloc();
  v3[7] = v9;
  *v9 = v3;
  v9[1] = sub_1BDB953E8;
  return static ICPaperAttachmentCreationHelper.createPaperDocument(for:fromLegacyMediaAt:)((uint64_t)v8, v7);
}

id static ICPaperAttachmentCreationHelper.createPaperDocument(for:fromLegacyMediaAt:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id result;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v20 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - v12;
  result = sub_1BDB92A7C(v11, a1);
  if (!v2)
  {
    v19 = result;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    v15 = objc_msgSend(a1, sel_managedObjectContext);
    if (v15)
    {
      v16 = v15;
      MEMORY[0x1E0C80A78](v15);
      *(&v18 - 2) = (uint64_t)a1;
      sub_1BDBFDFF8();

    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    v17 = v19;
    sub_1BDB94BE4((uint64_t)v13, v20, (uint64_t)v19, (uint64_t)v6);

    sub_1BDAC350C((uint64_t)v6, &qword_1ED23B1B0);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return result;
}

uint64_t sub_1BDB94054@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;

  v3 = objc_msgSend(a1, sel_fallbackPDFURL);
  if (v3)
  {
    v4 = v3;
    sub_1BDBFC90C();

    v5 = sub_1BDBFC948();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 0, 1, v5);
  }
  else
  {
    v7 = sub_1BDBFC948();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

id static ICPaperAttachmentCreationHelper.createSystemPaperAttachment(with:in:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;

  v28 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE28);
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BDBFC948();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v29 = (char *)&v25 - v11;
  v12 = sub_1BDBFCB40();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v16 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(a2, sel_addSystemPaperAttachmentWithIdentifier_, v16);

  v18 = sub_1BDB92A7C(v10, v17);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v10, v6);
  sub_1BDBFD32C();
  sub_1BDBFD590();
  v19 = (void *)sub_1BDBFD314();
  v30 = v17;
  v20 = v19;
  sub_1BDBFD4E8();
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_sharedState);
  objc_msgSend(v22, sel_beginBlockingDeauthentication);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE20);
  sub_1BDBFD464();
  v23 = objc_msgSend(v21, sel_sharedState);
  objc_msgSend(v23, sel_endBlockingDeauthentication);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v27);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
  return v30;
}

ICPaperAttachmentCreationHelper __swiftcall ICPaperAttachmentCreationHelper.init()()
{
  return (ICPaperAttachmentCreationHelper)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id ICPaperAttachmentCreationHelper.init()()
{
  objc_super v1;

  v1.super_class = (Class)ICPaperAttachmentCreationHelper;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t sub_1BDB94804@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v18[12];

  v4 = sub_1BDBFC948();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EFC8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11(v7, a1, v4);
  swift_retain();
  sub_1BDBFD518();
  sub_1BDBFD2B4();
  v12 = sub_1BDBFD2E4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v10, v12);
  sub_1BDAC350C((uint64_t)v10, &qword_1EF50EFC8);
  type metadata accessor for ICPaperDocumentError(0);
  v18[11] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BF98);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(inited + 32) = sub_1BDBFD6F8();
  *(_QWORD *)(inited + 40) = v15;
  *(_QWORD *)(inited + 72) = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  v11((char *)boxed_opaque_existential_1, a1, v4);
  sub_1BDB0ABBC(inited);
  sub_1BDAC31B0((unint64_t *)&qword_1EF50B4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICPaperDocumentError, (uint64_t)&unk_1BDC17718);
  sub_1BDBFC858();
  return swift_willThrow();
}

void sub_1BDB94A08()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  unsigned int v11;
  id v12;
  id v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_defaultManager);
  v2 = (void *)sub_1BDBFC8D0();
  v3 = (void *)sub_1BDBFC8D0();
  v14[0] = 0;
  v4 = objc_msgSend(v1, sel_linkItemAtURL_toURL_error_, v2, v3, v14);

  if (v4)
  {
    v5 = v14[0];
  }
  else
  {
    v6 = v14[0];
    v7 = (void *)sub_1BDBFC87C();

    swift_willThrow();
    v8 = objc_msgSend(v0, sel_defaultManager);
    v9 = (void *)sub_1BDBFC8D0();
    v10 = (void *)sub_1BDBFC8D0();
    v14[0] = 0;
    v11 = objc_msgSend(v8, sel_copyItemAtURL_toURL_error_, v9, v10, v14);

    if (v11)
    {
      v12 = v14[0];
    }
    else
    {
      v13 = v14[0];
      sub_1BDBFC87C();

      swift_willThrow();
    }

  }
}

uint64_t sub_1BDB94BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a1;
  v30 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v6);
  v31 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1BDBFC948();
  v8 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BDBFD56C();
  MEMORY[0x1E0C80A78](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E158);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFD560();
  v36 = a2;
  v37 = a3;
  v33 = a3;
  sub_1BDBFD2E4();
  sub_1BDAC31B0(&qword_1EF50E170, (uint64_t (*)(uint64_t))MEMORY[0x1E0D656B8], MEMORY[0x1E0D656A0]);
  v16 = v35;
  result = sub_1BDBFD500();
  if (!v16)
  {
    v26 = a2;
    v27 = v10;
    v28 = v8;
    v29 = v13;
    v35 = v12;
    v18 = (void *)objc_opt_self();
    v19 = objc_msgSend(v18, sel_sharedState);
    objc_msgSend(v19, sel_beginBlockingDeauthentication);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E318);
    sub_1BDBFD464();
    v20 = objc_msgSend(v18, sel_sharedState);
    objc_msgSend(v20, sel_endBlockingDeauthentication);

    v21 = v31;
    sub_1BDB67ABC(v30, v31);
    v22 = v28;
    v23 = v32;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v21, 1, v32) == 1)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v35);
      return sub_1BDAC350C(v21, &qword_1ED23B1B0);
    }
    else
    {
      v24 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v27, v21, v23);
      sub_1BDB94A08();
      v25 = v35;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v25);
    }
  }
  return result;
}

uint64_t sub_1BDB950B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BDB94054(*(void **)(v1 + 16), a1);
}

uint64_t type metadata accessor for ICPaperAttachmentCreationHelper(uint64_t a1)
{
  return sub_1BD942914(a1, &qword_1EF50EF80);
}

uint64_t sub_1BDB950E8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  const void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v4 = (const void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BDAE2208;
  return ((uint64_t (*)(void *, uint64_t, const void *))((char *)&dword_1EF50EF88 + dword_1EF50EF88))(v2, v3, v4);
}

uint64_t sub_1BDB95164()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BDAE2208;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EF50F400 + dword_1EF50F400))(v2, v3, v4);
}

uint64_t sub_1BDB951E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BDAE2208;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EF50F408 + dword_1EF50F408))(a1, v4, v5, v6);
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1BDB9529C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  const void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v4 = (const void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BDAE2208;
  return ((uint64_t (*)(void *, uint64_t, const void *))((char *)&dword_1EF50EFA8 + dword_1EF50EFA8))(v2, v3, v4);
}

uint64_t objectdestroy_21Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDB95348(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BDAC9D90;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EF50F408 + dword_1EF50F408))(a1, v4, v5, v6);
}

uint64_t sub_1BDB953CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BDB94804(*(_QWORD *)(v1 + 16), a1);
}

NotesShared::TableFormat::Formats_optional sub_1BDB953F4@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  NotesShared::TableFormat::Formats_optional result;
  char v5;

  result.value = TableFormat.Formats.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t ArgumentDecodable<>.init(fromArgument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a2;
  v35 = a6;
  v10 = sub_1BDBFE0AC();
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x1E0C80A78](v10);
  v33 = (char *)&v29 - v11;
  v32 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_1BDBFE0AC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v29 - v16;
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = MEMORY[0x1E0C80A78](v15);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v29 - v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, v34, AssociatedTypeWitness, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    v24 = *(_QWORD *)(a3 - 8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v17, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, AssociatedTypeWitness);
    v25 = v33;
    sub_1BDBFD944();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, AssociatedTypeWitness);
    v24 = *(_QWORD *)(a3 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v25, 1, a3))
    {
      v27 = v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v35, v25, a3);
      v26 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, v26, 1, a3);
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v31);
  }
  v26 = 1;
  v27 = v35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, v26, 1, a3);
}

uint64_t static ArgumentDecodable<>.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = &v20[-v14];
  sub_1BDBFDE60();
  v21 = a3;
  v22 = a4;
  v23 = a5;
  v24 = a6;
  v25 = a7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDB97324, (uint64_t)v20, AssociatedTypeWitness, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], AssociatedConformanceWitness, MEMORY[0x1E0DEDD18], v17);
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  v29 = v18;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDB99A58((unint64_t *)&qword_1EF50B860, MEMORY[0x1E0DEAF20]);
  sub_1BDBFD674();
  swift_bridgeObjectRelease();
  v29 = 0;
  v30 = 0xE000000000000000;
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  v26 = 0;
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  v29 = v27;
  v30 = v28;
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  v26 = 0;
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t static Optional<A>.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDB96A3C(a1, a2, a3, a4);
}

uint64_t static Bool.defaultArgument.getter()
{
  return 0;
}

void sub_1BDB95960(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BDB95968@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _sSb11NotesSharedE12fromArgumentSbSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t static String.defaultArgument.getter()
{
  return 0;
}

void sub_1BDB959A0(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_1BDB959AC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static Int.defaultArgument.getter()
{
  return 0;
}

Swift::Int_optional __swiftcall Int.init(fromArgument:)(Swift::String fromArgument)
{
  Swift::Int v1;
  char v2;
  Swift::Bool v3;
  Swift::Int_optional result;

  v1 = sub_1BDB9835C(fromArgument._countAndFlagsBits, (unint64_t)fromArgument._object);
  v3 = v2 & 1;
  result.value = v1;
  result.is_nil = v3;
  return result;
}

uint64_t static Int.typeSummary(forName:)()
{
  return sub_1BDB997B0();
}

void sub_1BDB959FC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BDB95A04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  char v5;

  result = sub_1BDB9835C(a1, a2);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1BDB95A30()
{
  return sub_1BDB997B0();
}

uint64_t static Int64.defaultArgument.getter()
{
  return 0;
}

uint64_t static Int64.typeSummary(forName:)()
{
  return sub_1BDB997B0();
}

uint64_t sub_1BDB95A84()
{
  return sub_1BDB997B0();
}

float static Float.defaultArgument.getter()
{
  return 0.0;
}

void __swiftcall Float.init(fromArgument:)(Swift::Float_optional *__return_ptr retstr, Swift::String fromArgument)
{
  _BYTE *v2;
  char v3;
  _BYTE *v4;
  _QWORD v5[3];
  int v6;

  v6 = 0;
  if (((uint64_t)fromArgument._object & 0x1000000000000000) != 0
    || !((uint64_t)fromArgument._object & 0x2000000000000000 | fromArgument._countAndFlagsBits & 0x1000000000000000))
  {
    sub_1BDBFE2EC();
    swift_bridgeObjectRelease();
    v3 = v5[0];
  }
  else if (((uint64_t)fromArgument._object & 0x2000000000000000) != 0)
  {
    v5[0] = fromArgument._countAndFlagsBits;
    v5[1] = (uint64_t)fromArgument._object & 0xFFFFFFFFFFFFFFLL;
    v3 = (LOBYTE(fromArgument._countAndFlagsBits) > 0x20u
       || ((0x100003E01uLL >> SLOBYTE(fromArgument._countAndFlagsBits)) & 1) == 0)
      && (v4 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
      && *v4 == 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((fromArgument._countAndFlagsBits & 0x1000000000000000) != 0)
      v2 = (_BYTE *)(((uint64_t)fromArgument._object & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v2 = (_BYTE *)sub_1BDBFE418();
    sub_1BDB999B4(v2, (BOOL *)v5);
    v3 = v5[0];
    swift_bridgeObjectRelease();
  }
  LOBYTE(v5[0]) = v3 ^ 1;
}

uint64_t static Float.typeSummary(forName:)()
{
  return sub_1BDB997B0();
}

void sub_1BDB95C18(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BDB95C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t result;
  int v6;
  _QWORD v7[5];
  int v8;

  v8 = 0;
  v7[2] = &v8;
  v4 = sub_1BDB97C40((void (*)(char *__return_ptr, _QWORD *))sub_1BDB999B4, (uint64_t)v7, a1, a2);
  result = swift_bridgeObjectRelease();
  v6 = v8;
  if ((v4 & 1) == 0)
    v6 = 0;
  *(_DWORD *)a3 = v6;
  *(_BYTE *)(a3 + 4) = (v4 & 1) == 0;
  return result;
}

uint64_t sub_1BDB95CA0()
{
  return sub_1BDB997B0();
}

double static Double.defaultArgument.getter()
{
  return 0.0;
}

Swift::Double_optional __swiftcall Double.init(fromArgument:)(Swift::String fromArgument)
{
  _BYTE *v1;
  int v2;
  double v3;
  _BYTE *v4;
  Swift::Bool v5;
  _QWORD v6[3];
  _BOOL8 v7;
  Swift::Double_optional result;

  v7 = 0;
  if (((uint64_t)fromArgument._object & 0x1000000000000000) != 0
    || !((uint64_t)fromArgument._object & 0x2000000000000000 | fromArgument._countAndFlagsBits & 0x1000000000000000))
  {
    sub_1BDBFE2EC();
    swift_bridgeObjectRelease();
    v2 = LOBYTE(v6[0]);
  }
  else if (((uint64_t)fromArgument._object & 0x2000000000000000) != 0)
  {
    v6[0] = fromArgument._countAndFlagsBits;
    v6[1] = (uint64_t)fromArgument._object & 0xFFFFFFFFFFFFFFLL;
    v2 = (LOBYTE(fromArgument._countAndFlagsBits) > 0x20u
       || ((0x100003E01uLL >> SLOBYTE(fromArgument._countAndFlagsBits)) & 1) == 0)
      && (v4 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
      && *v4 == 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((fromArgument._countAndFlagsBits & 0x1000000000000000) != 0)
      v1 = (_BYTE *)(((uint64_t)fromArgument._object & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v1 = (_BYTE *)sub_1BDBFE418();
    sub_1BDB999D0(v1, (BOOL *)v6);
    v2 = LOBYTE(v6[0]);
    swift_bridgeObjectRelease();
  }
  if (v2)
    v5 = v7;
  else
    v5 = 0;
  result.value = v3;
  result.is_nil = v5;
  return result;
}

uint64_t static Double.typeSummary(forName:)()
{
  return sub_1BDB997B0();
}

uint64_t sub_1BDB95E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  v8 = 0;
  v7[2] = &v8;
  v4 = sub_1BDB97C40((void (*)(char *__return_ptr, _QWORD *))sub_1BDB999D0, (uint64_t)v7, a1, a2);
  result = swift_bridgeObjectRelease();
  v6 = v8;
  if ((v4 & 1) == 0)
    v6 = 0;
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 8) = (v4 & 1) == 0;
  return result;
}

uint64_t sub_1BDB95EA8()
{
  return sub_1BDB997B0();
}

uint64_t static Data.defaultArgument.getter()
{
  return 0;
}

uint64_t Data.init(fromArgument:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = sub_1BDBFC960();
  v2 = v1;
  sub_1BDB91FFC(v0, v1);
  swift_bridgeObjectRelease();
  if (v2 >> 60 != 15)
    sub_1BDB40600(v0, v2);
  return v0;
}

uint64_t static Data.typeSummary(forName:)()
{
  return sub_1BDB997B0();
}

double sub_1BDB95F64@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BDC1E1D0;
  return result;
}

uint64_t sub_1BDB95F74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;

  v2 = sub_1BDBFC960();
  v4 = v3;
  sub_1BDB91FFC(v2, v3);
  result = swift_bridgeObjectRelease();
  if (v4 >> 60 != 15)
    result = sub_1BDB40600(v2, v4);
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BDB95FD4()
{
  return sub_1BDB997B0();
}

uint64_t Date.init(fromArgument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a3;
  v42 = sub_1BDBFC9B4();
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BDBFCA5C();
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v39 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v45 = (uint64_t)&v39 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v40 = (char *)&v39 - v15;
  MEMORY[0x1E0C80A78](v14);
  v46 = (char *)&v39 - v16;
  v17 = sub_1BDBFCAC8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1;
  v23 = sub_1BDBFD740();
  v24 = v22;
  if (v23 == 1953718640 && v22 == 0xE400000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v25 = v47;
    swift_bridgeObjectRelease();
    sub_1BDBFC9C0();
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v25, v20, v17);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v25, 0, 1, v17);
  }
  if (v23 == 7827310 && v24 == 0xE300000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v25 = v47;
    swift_bridgeObjectRelease();
    _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
    goto LABEL_5;
  }
  if (v23 == 0x657275747566 && v24 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    v25 = v47;
    sub_1BDBFCA14();
    goto LABEL_5;
  }
  v27 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    goto LABEL_14;
  v48 = v21;
  v49 = a2;
  v28 = swift_bridgeObjectRetain();
  MEMORY[0x1C3B77AC4](v28);
  sub_1BDAC31B0(&qword_1EF50EFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0670], MEMORY[0x1E0CB0668]);
  v29 = v46;
  sub_1BDBFCAD4();
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v31 = v30(v29, 0, 1, v17);
  v32 = (uint64_t)v40;
  v48 = v21;
  v49 = a2;
  MEMORY[0x1C3B77AB8](v31);
  sub_1BDAC31B0(&qword_1EF50EFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0568], MEMORY[0x1E0CB0558]);
  sub_1BDBFCAD4();
  v33 = (uint64_t)v43;
  v34 = (uint64_t)v44;
  v35 = (uint64_t)v46;
  v30((char *)v32, 0, 1, v17);
  sub_1BDADECA8(v35, v34);
  sub_1BDADECA8(v32, v33);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v36(v34, 1, v17) == 1)
  {
    v37 = v45;
    sub_1BDADECA8(v33, v45);
    sub_1BDAC350C(v34, &qword_1ED239CD8);
    if (v36(v37, 1, v17) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v20, v37, v17);
LABEL_21:
      v25 = v47;
      goto LABEL_5;
    }
  }
  else
  {
    sub_1BDAC350C(v33, &qword_1ED239CD8);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v37 = v45;
    v38(v45, v34, v17);
    v30((char *)v37, 0, 1, v17);
    if (v36(v37, 1, v17) != 1)
    {
      v38((uint64_t)v20, v37, v17);
      goto LABEL_21;
    }
  }
  sub_1BDAC350C(v37, &qword_1ED239CD8);
  return v30(v47, 1, 1, v17);
}

uint64_t static URL.defaultArgument.getter()
{
  return sub_1BDBFC8B8();
}

uint64_t URL.init(fromArgument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BDB96608(a1, a2, &qword_1ED23B1B0, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0CAFF90], (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], a3);
}

uint64_t static URL.typeSummary(forName:)()
{
  return sub_1BDB997B0();
}

uint64_t sub_1BDB965A4()
{
  return sub_1BDBFC8B8();
}

uint64_t sub_1BDB965B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1BDB96744(a1, a2, a3, &qword_1ED23B1B0, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0CAFF90], a4);
}

uint64_t sub_1BDB965C4()
{
  return sub_1BDB997B0();
}

uint64_t UUID.init(fromArgument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BDB96608(a1, a2, &qword_1ED23AD30, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0CB0900], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], a3);
}

uint64_t sub_1BDB96608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(uint64_t, uint64_t)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(a1, a2);
  swift_bridgeObjectRelease();
  v15 = a5(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1BDAC350C((uint64_t)v14, a3);
    v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a6, v14, v15);
    v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a6, v17, 1, v15);
}

uint64_t static UUID.typeSummary(forName:)()
{
  return sub_1BDB997B0();
}

uint64_t sub_1BDB96730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1BDB96744(a1, a2, a3, &qword_1ED23AD30, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0CB0900], a4);
}

uint64_t sub_1BDB96744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, void (*a5)(uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5(a1, a2);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a3))
  {
    sub_1BDAC350C((uint64_t)v14, a4);
    v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a6, v14, a3);
    v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a6, v16, 1, a3);
}

uint64_t sub_1BDB96838()
{
  return sub_1BDB997B0();
}

uint64_t static Optional<A>.defaultArgument.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t Optional<A>.init(fromArgument:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v3;

  (*(void (**)(void))(a1 + 24))();
  v3 = sub_1BDBFE0AC();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_1BDB968C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Optional<A>.defaultArgument.getter(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_1BDB968CC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return Optional<A>.init(fromArgument:)(*(_QWORD *)(a1 - 8), a2);
}

uint64_t sub_1BDB968D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>.typeSummary(forName:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t static Array<A>.defaultArgument.getter()
{
  return sub_1BDBFDA40();
}

uint64_t Array<A>.init(fromArgument:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;

  v4 = MEMORY[0x1E0DEE9D8];
  v5 = sub_1BDB0A7E8(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for ArgumentDecoder.Decoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = sub_1BDB0A908(v4);
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  *(_BYTE *)(inited + 32) = 0;
  v7 = swift_retain();
  sub_1BDB14D6C(v7, v4, a1, a2);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDB99A58(&qword_1EF50EFE0, MEMORY[0x1E0DEAF38]);
  v8 = sub_1BDBFD8E4();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t static Array<A>.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDB96A3C(a1, a2, a3, a4);
}

uint64_t sub_1BDB96A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = (*(uint64_t (**)(void))(a4 + 32))();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BDB96BD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static Array<A>.defaultArgument.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BDB96C00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = Array<A>.init(fromArgument:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDB96C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Array<A>.typeSummary(forName:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t static Set<>.defaultArgument.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1BDBFDA40();
  if (MEMORY[0x1C3B7906C](v5, a1))
    v6 = sub_1BDB98628(v5, a1, a3);
  else
    v6 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Set<>.init(fromArgument:)(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v3;

  result = Array<A>.init(fromArgument:)(a1, a2);
  if (result)
  {
    v3 = sub_1BDBFDAAC();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v3);
    return sub_1BDBFDD58();
  }
  return result;
}

uint64_t sub_1BDB96D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = static Set<>.defaultArgument.getter(*(_QWORD *)(a1 + 16), a2, *(_QWORD *)(a1 + 24));
  *a3 = result;
  return result;
}

uint64_t sub_1BDB96D4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = Set<>.init(fromArgument:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDB96D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Set<>.typeSummary(forName:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t static ArgumentDecodable<>.defaultArgument.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = sub_1BDBFE0AC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - v12;
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(AssociatedTypeWitness, a2);
  sub_1BDBFD944();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v14 = *(_QWORD *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, a1) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v11, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return result;
}

uint64_t sub_1BDB96F10()
{
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFE4E4();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BDB97110@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  unint64_t v7;
  _QWORD *v8;
  _QWORD v9[2];
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v10 = a2;
  v9[1] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v5 = (char *)v9 - v4;
  v13 = 0;
  v14 = 0xE000000000000000;
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  v15 = 35;
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD938();
  sub_1BDBFE85C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  v15 = 0;
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  result = swift_bridgeObjectRelease();
  v7 = v14;
  v8 = v10;
  *v10 = v13;
  v8[1] = v7;
  return result;
}

uint64_t sub_1BDB97324@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BDB97110(a1, a2);
}

_QWORD *sub_1BDB97348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50BAF0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1BDB973AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1BDBFD860();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1C3B78DE4](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_1BDB97424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1BDBFD8A8();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1BDB97784();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1BDBFE418();
  }
LABEL_7:
  v11 = sub_1BDB97508(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1BDB97508(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1BDB97784()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1BDBFD8B4();
  v4 = sub_1BDB97800(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BDB97800(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1BDB97944(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1BDB97348(v9, 0);
      v12 = sub_1BDB97A30((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1C3B78D54](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1C3B78D54);
LABEL_9:
      sub_1BDBFE418();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C3B78D54]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1BDB97944(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1BDB973AC(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1BDB973AC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1BDBFD824();
  }
  __break(1u);
  return result;
}

unint64_t sub_1BDB97A30(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1BDB973AC(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1BDBFD830();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1BDBFE418();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1BDB973AC(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1BDBFD80C();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1BDB97C40(void (*a1)(char *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  char v9;
  _QWORD v10[2];
  char v11;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    sub_1BDBFE2EC();
    if (!v4)
      v7 = v11;
  }
  else if ((a4 & 0x2000000000000000) != 0)
  {
    v10[0] = a3;
    v10[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    a1(&v9, v10);
    if (!v4)
      v7 = v9;
  }
  else
  {
    if ((a3 & 0x1000000000000000) != 0)
      v6 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
    else
      v6 = sub_1BDBFE418();
    a1((char *)v10, (_QWORD *)v6);
    if (!v4)
      v7 = v10[0];
  }
  return v7 & 1;
}

uint64_t _sSS11NotesSharedE11typeSummary7forNameS2S_tFZ_0()
{
  sub_1BDBFE304();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _sSb11NotesSharedE12fromArgumentSbSgSS_tcfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v4;

  v0 = sub_1BDBFD740();
  v2 = v1;
  swift_bridgeObjectRelease();
  if (v0 == 7562617 && v2 == 0xE300000000000000
    || (sub_1BDBFE874() & 1) != 0
    || v0 == 1702195828 && v2 == 0xE400000000000000
    || (sub_1BDBFE874() & 1) != 0
    || v0 == 49 && v2 == 0xE100000000000000
    || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v0 == 28526 && v2 == 0xE200000000000000
         || (sub_1BDBFE874() & 1) != 0
         || v0 == 0x65736C6166 && v2 == 0xE500000000000000
         || (sub_1BDBFE874() & 1) != 0
         || v0 == 48 && v2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v4 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v4 & 1) == 0)
      return 2;
  }
  return result;
}

uint64_t sub_1BDB9835C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1BDBFE418();
      v7 = (uint64_t)sub_1BDB97508(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_44;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_57;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_31;
      v7 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        if ((BYTE2(result) - 48) > 9u)
          goto LABEL_31;
        v7 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        v10 = v3 - 3;
        if (v10)
        {
          v11 = (unsigned __int8 *)v23 + 3;
          while (1)
          {
            v12 = *v11 - 48;
            if (v12 > 9)
              goto LABEL_31;
            v13 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
              goto LABEL_31;
            v7 = v13 + v12;
            if (__OFADD__(v13, v12))
              goto LABEL_31;
            v9 = 0;
            ++v11;
            if (!--v10)
              goto LABEL_44;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v3 == 2)
            {
              v9 = 0;
              v7 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              v7 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              v18 = v3 - 3;
              if (!v18)
                goto LABEL_43;
              v19 = (unsigned __int8 *)v23 + 3;
              while (1)
              {
                v20 = *v19 - 48;
                if (v20 > 9)
                  break;
                v21 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  break;
                v7 = v21 - v20;
                if (__OFSUB__(v21, v20))
                  break;
                v9 = 0;
                ++v19;
                if (!--v18)
                  goto LABEL_44;
              }
            }
          }
LABEL_31:
          v7 = 0;
          v9 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_31;
      v7 = (result - 48);
      if (v3 != 1)
      {
        if ((BYTE1(result) - 48) > 9u)
          goto LABEL_31;
        v7 = 10 * (result - 48) + (BYTE1(result) - 48);
        v14 = v3 - 2;
        if (v14)
        {
          v15 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            v16 = *v15 - 48;
            if (v16 > 9)
              goto LABEL_31;
            v17 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
              goto LABEL_31;
            v7 = v17 + v16;
            if (__OFADD__(v17, v16))
              goto LABEL_31;
            v9 = 0;
            ++v15;
            if (!--v14)
              goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    v9 = 0;
    goto LABEL_44;
  }
  v7 = (uint64_t)sub_1BDB97424(result, a2, 10);
  v9 = v22;
LABEL_44:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_1BDB98628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1C3B7903C](v12))
  {
    sub_1BDBFE2E0();
    v15 = sub_1BDBFE2D4();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1C3B7906C](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1BDBFDA58();
    sub_1BDBFDA10();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1BDBFE37C();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1BDBFD614();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v8, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1BDBFD6BC();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v8, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t _s10Foundation4DateV11NotesSharedE11typeSummary7forNameS2S_tFZ_0()
{
  sub_1BDBFE304();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BDB990B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1BDB224F4(0, 3, 0);
  v0 = v20;
  v1 = sub_1BDB96F10();
  v3 = v2;
  v5 = *(_QWORD *)(v20 + 16);
  v4 = *(_QWORD *)(v20 + 24);
  if (v5 >= v4 >> 1)
  {
    sub_1BDB224F4(v4 > 1, v5 + 1, 1);
    v0 = v20;
  }
  *(_QWORD *)(v0 + 16) = v5 + 1;
  v6 = v0 + 16 * v5;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = sub_1BDB96F10();
  v9 = v8;
  v11 = *(_QWORD *)(v0 + 16);
  v10 = *(_QWORD *)(v0 + 24);
  if (v11 >= v10 >> 1)
    sub_1BDB224F4(v10 > 1, v11 + 1, 1);
  *(_QWORD *)(v0 + 16) = v11 + 1;
  v12 = v0 + 16 * v11;
  *(_QWORD *)(v12 + 32) = v7;
  *(_QWORD *)(v12 + 40) = v9;
  v13 = sub_1BDB96F10();
  v15 = v14;
  v17 = *(_QWORD *)(v0 + 16);
  v16 = *(_QWORD *)(v0 + 24);
  if (v17 >= v16 >> 1)
    sub_1BDB224F4(v16 > 1, v17 + 1, 1);
  *(_QWORD *)(v0 + 16) = v17 + 1;
  v18 = v0 + 16 * v17;
  *(_QWORD *)(v18 + 32) = v13;
  *(_QWORD *)(v18 + 40) = v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDB99A58((unint64_t *)&qword_1EF50B860, MEMORY[0x1E0DEAF20]);
  sub_1BDBFD674();
  swift_release();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _sSb11NotesSharedE11typeSummary7forNameS2S_tFZ_0()
{
  sub_1BDBFE304();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BDB997B0()
{
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0;
}

_BYTE *sub_1BDB999B4@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1BDB99C58(a1, MEMORY[0x1E0DEEA58], a2);
}

_BYTE *sub_1BDB999D0@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1BDB99C58(a1, MEMORY[0x1E0DEEA50], a2);
}

uint64_t sub_1BDB999EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *a1;
  v5 = a1[1];
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 24);
  swift_bridgeObjectRetain();
  return v6(v4, v5, v2, v3);
}

uint64_t sub_1BDB99A58(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EF50CC50);
    result = MEMORY[0x1C3B7B388](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDB99A9C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BDB6D1B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDB99AC0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BDAC31B0(&qword_1EF50BEC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDB99AFC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BDAC31B0(&qword_1EF50EFE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDB99B38(uint64_t a1)
{
  uint64_t result;

  result = sub_1BDAC31B0(&qword_1EF50CD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDB99B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEE9A0], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDB99BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF40], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDB99BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEB3D8], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of static ArgumentDecodable.defaultArgument.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArgumentDecodable.init(fromArgument:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static ArgumentDecodable.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

_BYTE *sub_1BDB99C58@<X0>(_BYTE *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v4 = *result;
  v5 = v4 > 0x20;
  v6 = (1 << v4) & 0x100003E01;
  v7 = v5 || v6 == 0;
  v8 = v7 && (result = (_BYTE *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

uint64_t RealtimeCollaborationSelectionDocument.localParticipantID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_localParticipantID;
  v4 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id RealtimeCollaborationSelectionDocument.__allocating_init(identity:localParticipantID:)(char *a1, char *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return RealtimeCollaborationSelectionDocument.init(identity:localParticipantID:)(a1, a2);
}

id RealtimeCollaborationSelectionDocument.init(identity:localParticipantID:)(char *a1, char *a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void (*v13)(char *, uint64_t);
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v23[4];
  objc_super v24;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = sub_1BDBFCB40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_selections] = MEMORY[0x1E0DEE9D8];
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v3[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_localParticipantID], a2, v7);
  v11 = objc_msgSend(objc_allocWithZone((Class)ICCRVectorTimestamp), sel_init);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v12 = (void *)sub_1BDBFCAF8();
  v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v10, v7);
  v24.receiver = v3;
  v24.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v24, sel_initWithVersion_startVersion_rootObject_replica_, v11, 0, 0, v12);

  v23[3] = ObjectType;
  v23[0] = v14;
  v15 = v14;
  v16 = (void *)sub_1BDADD000((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
  type metadata accessor for RealtimeCollaborationSelectionDocument.State();
  v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v18 = v15;
  v19 = v16;
  v20 = (void *)sub_1BDBFCAF8();
  v21 = objc_msgSend(v17, sel_initWithDocument_identity_, v19, v20);

  objc_msgSend(v18, sel_setRootObject_, v21);
  v13(a2, v7);
  v13(a1, v7);
  return v18;
}

uint64_t RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

void (*RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1
                  + *(int *)(type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0)
                           + 20));
  return swift_retain();
}

uint64_t type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1ED23A880);
}

uint64_t RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *(int *)(type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0) + 20);
  result = swift_release();
  *(_QWORD *)(v1 + v3) = v2;
  return result;
}

void (*RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t static RealtimeCollaborationSelectionDocument.ParticipantSelection.== infix(_:_:)(uint64_t a1)
{
  char v2;
  uint64_t v4;

  if ((sub_1BDBFCB04() & 1) != 0)
  {
    v4 = *(_QWORD *)(a1
                   + *(int *)(type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0)
                            + 20));
    _s11NotesShared38RealtimeCollaborationSelectionDocumentC0E0O2eeoiySbAE_AEtFZ_0((uint64_t)&v4);
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1BDB9A0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v7;

  if ((sub_1BDBFCB04() & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
    _s11NotesShared38RealtimeCollaborationSelectionDocumentC0E0O2eeoiySbAE_AEtFZ_0((uint64_t)&v7);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t RealtimeCollaborationSelectionDocument.selections.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void RealtimeCollaborationSelectionDocument.mergeLocalSelection(_:)(uint64_t *a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  unsigned int v20;
  id v21;
  void *v22;
  id v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  unint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = *a1;
  v6 = objc_msgSend(v2, sel_rootObject);
  if (v6
    && (v7 = v6,
        v8 = objc_msgSend(v6, sel_participantIDsToSelectionRegisters),
        v7,
        v9 = (void *)sub_1BDBFCAF8(),
        v10 = objc_msgSend(v8, sel_objectForKeyedSubscript_, v9),
        v8,
        v9,
        v10))
  {
    v11 = objc_msgSend(v10, sel_contents);

    if (v11)
    {
      v47 = xmmword_1BDC1C3D0;
      sub_1BDBFC984();

      v11 = 0;
    }
  }
  else
  {
    v11 = 0;
  }
  if ((~v5 & 0xF000000000000007) != 0)
  {
    *(_QWORD *)&v47 = v5;
    v12 = sub_1BDB17B0C();
    v13 = v14;
  }
  else
  {
    v12 = 0;
    v13 = 0xF000000000000000;
  }
  v15 = objc_msgSend(v2, sel_rootObject);
  if (!v15)
  {
    sub_1BDB40600(v12, v13);
    sub_1BDB40600((uint64_t)v11, 0xF000000000000000);
    return;
  }
  v16 = v15;
  if (v13 >> 60 == 15)
  {

    return;
  }
  sub_1BDB91FFC(v12, v13);
  sub_1BDB91FFC((uint64_t)v11, 0xF000000000000000);
  sub_1BDB40600(v12, v13);
  sub_1BDB40600((uint64_t)v11, 0xF000000000000000);
  v46 = (uint64_t)v11;
  v44 = ObjectType;
  v17 = objc_msgSend(v2, sel_version);
  objc_msgSend(v17, sel_copy);

  sub_1BDBFE184();
  swift_unknownObjectRelease();
  v45 = (void *)sub_1BDADD20C((uint64_t)&v47);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v47);
  v18 = objc_msgSend(v16, sel_participantIDsOrder);
  v19 = (void *)sub_1BDBFCAF8();
  v20 = objc_msgSend(v18, sel_containsObject_, v19);

  v21 = objc_msgSend(v16, sel_participantIDsOrder);
  v22 = (void *)sub_1BDBFCAF8();
  if (v20)
  {
    v23 = objc_msgSend(v16, sel_participantIDsOrder);
    v24 = (char *)objc_msgSend(v23, sel_count);

    if (__OFSUB__(v24, 1))
    {
      __break(1u);
      return;
    }
    objc_msgSend(v21, sel_moveObject_toIndex_, v22, v24 - 1);
  }
  else
  {
    objc_msgSend(v21, sel_addObject_, v22);
  }

  v25 = objc_msgSend(v16, sel_participantIDsToSelectionRegisters);
  v26 = (void *)sub_1BDBFCAF8();
  v27 = objc_msgSend(v25, sel_objectForKeyedSubscript_, v26);

  if (v27)
  {
    sub_1BDB91FFC(v12, v13);
    v28 = v27;
    v29 = (id)sub_1BDBFC978();
    sub_1BDB40600(v12, v13);
    objc_msgSend(v28, sel_setContents_, v29);

  }
  else
  {
    v48 = v44;
    *(_QWORD *)&v47 = v2;
    v30 = v2;
    v31 = (void *)sub_1BDADD000((uint64_t)&v47);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v47);
    v28 = objc_msgSend(v16, sel_participantIDsToSelectionRegisters);
    v32 = (void *)sub_1BDBFCAF8();
    sub_1BDB4EB54(v12, v13);
    v33 = (void *)sub_1BDBFC978();
    sub_1BDB40600(v12, v13);
    v29 = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, v33, v31);

    objc_msgSend(v28, sel_setObject_forKeyedSubscript_, v29, v32);
  }

  v34 = objc_msgSend(v2, sel_deltaSince_, v45);
  if (v34)
  {
    v35 = v34;
    sub_1BDBFC990();

  }
  v36 = objc_msgSend(v2, sel_rootObject);
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(v36, sel_participantIDsOrder);

    v39 = objc_msgSend(v38, sel_allObjects);
    sub_1BDB9B26C();
    v40 = sub_1BDBFD9E0();

    v41 = v2;
    v42 = sub_1BDB9B2A8(v40, v41);
    swift_bridgeObjectRelease();

  }
  else
  {
    v42 = MEMORY[0x1E0DEE9D8];
  }
  v43 = (unint64_t *)&v2[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_selections];
  swift_beginAccess();
  *v43 = v42;

  swift_bridgeObjectRelease();
  sub_1BDB40600(v12, v13);
  sub_1BDB40600(v46, 0xF000000000000000);
}

uint64_t RealtimeCollaborationSelectionDocument.removeSelection(forParticipantID:)()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  unsigned int v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t *v23;
  _BYTE v25[32];

  v1 = v0;
  v2 = objc_msgSend(v0, sel_rootObject);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_participantIDsOrder);
  v5 = (void *)sub_1BDBFCAF8();
  v6 = objc_msgSend(v4, sel_containsObject_, v5);

  if (!v6)
  {

    return 0;
  }
  v7 = objc_msgSend(v0, sel_version);
  objc_msgSend(v7, sel_copy);

  sub_1BDBFE184();
  swift_unknownObjectRelease();
  v8 = (void *)sub_1BDADD20C((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
  v9 = objc_msgSend(v3, sel_participantIDsOrder);
  v10 = (void *)sub_1BDBFCAF8();
  objc_msgSend(v9, sel_removeObject_, v10);

  v11 = objc_msgSend(v3, sel_participantIDsToSelectionRegisters);
  v12 = (void *)sub_1BDBFCAF8();
  objc_msgSend(v11, sel_setObject_forKeyedSubscript_, 0, v12);

  v13 = objc_msgSend(v1, sel_deltaSince_, v8);
  if (v13)
  {
    v14 = v13;
    v15 = sub_1BDBFC990();

  }
  else
  {

    v15 = 0;
  }
  v16 = objc_msgSend(v1, sel_rootObject);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, sel_participantIDsOrder);

    v19 = objc_msgSend(v18, sel_allObjects);
    sub_1BDB9B26C();
    v20 = sub_1BDBFD9E0();

    v21 = v1;
    v22 = sub_1BDB9B2A8(v20, v21);
    swift_bridgeObjectRelease();

  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
  }
  v23 = (unint64_t *)&v1[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_selections];
  swift_beginAccess();
  *v23 = v22;

  swift_bridgeObjectRelease();
  return v15;
}

id RealtimeCollaborationSelectionDocument.merge(with:)()
{
  char *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (void *)sub_1BDBFC978();
  v13.receiver = v0;
  v13.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v13, sel_mergeWithData_, v2);

  v4 = objc_msgSend(v0, sel_rootObject);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_participantIDsOrder);

    v7 = objc_msgSend(v6, sel_allObjects);
    sub_1BDB9B26C();
    v8 = sub_1BDBFD9E0();

    v9 = v0;
    v10 = sub_1BDB9B2A8(v8, v9);
    swift_bridgeObjectRelease();

  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v11 = (unint64_t *)&v0[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_selections];
  swift_beginAccess();
  *v11 = v10;
  swift_bridgeObjectRelease();
  return v3;
}

id RealtimeCollaborationSelectionDocument.__allocating_init(replica:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = v1;
  v4 = sub_1BDBFCB40();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4) != 1)
  {
    v6 = (void *)sub_1BDBFCAF8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  v7 = objc_msgSend(objc_allocWithZone(v2), sel_initWithReplica_, v6);

  return v7;
}

void RealtimeCollaborationSelectionDocument.init(replica:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RealtimeCollaborationSelectionDocument.__allocating_init(version:rootObject:replica:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v4 = v3;
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a3, 1, v8) != 1)
  {
    v10 = (void *)sub_1BDBFCAF8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  }
  v11 = objc_msgSend(objc_allocWithZone(v4), sel_initWithVersion_rootObject_replica_, a1, a2, v10);

  return v11;
}

void RealtimeCollaborationSelectionDocument.init(version:rootObject:replica:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RealtimeCollaborationSelectionDocument.__allocating_init(version:startVersion:rootObject:replica:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v5 = v4;
  v10 = sub_1BDBFCB40();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a4, 1, v10) != 1)
  {
    v12 = (void *)sub_1BDBFCAF8();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, v10);
  }
  v13 = objc_msgSend(objc_allocWithZone(v5), sel_initWithVersion_startVersion_rootObject_replica_, a1, a2, a3, v12);

  return v13;
}

void RealtimeCollaborationSelectionDocument.init(version:startVersion:rootObject:replica:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RealtimeCollaborationSelectionDocument.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RealtimeCollaborationSelectionDocument.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RealtimeCollaborationSelectionDocument.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1BDB9B26C()
{
  unint64_t result;

  result = qword_1EF50EFF0;
  if (!qword_1EF50EFF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50EFF0);
  }
  return result;
}

unint64_t sub_1BDB9B2A8(unint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  __int128 v38;
  unint64_t v39;

  v3 = v2;
  v36 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F0B0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0);
  v8 = *(_QWORD *)(v37 - 8);
  v9 = MEMORY[0x1E0C80A78](v37);
  v35 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v33 = (uint64_t)&v30 - v11;
  v39 = a1;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v12 = sub_1BDBFE574();
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      v30 = v3;
      v34 = v39 & 0xC000000000000001;
      v13 = MEMORY[0x1E0DEE9D8];
      v14 = 4;
      v32 = xmmword_1BDC1C3D0;
      while (1)
      {
        if (v34)
          v15 = (id)MEMORY[0x1C3B79954](v14 - 4, v39);
        else
          v15 = *(id *)(v39 + 8 * v14);
        v3 = v15;
        v16 = v14 - 3;
        if (__OFADD__(v14 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        v17 = objc_msgSend(v36, sel_rootObject);
        if (v17)
        {
          v18 = v17;
          v19 = objc_msgSend(v17, sel_participantIDsToSelectionRegisters);

          v20 = objc_msgSend(v19, sel_objectForKeyedSubscript_, v3);
          if (v20)
          {
            v21 = objc_msgSend(v20, sel_contents);

            if (v21)
            {
              v38 = v32;
              sub_1BDBFC984();

              v22 = *((_QWORD *)&v38 + 1);
              if (*((_QWORD *)&v38 + 1) >> 60 != 15)
              {
                v23 = v38;
                sub_1BDB4EB54(v38, *((unint64_t *)&v38 + 1));
                sub_1BDB17D80(v23, v22, &v38);
                if ((~(_QWORD)v38 & 0xF000000000000007) != 0)
                {
                  v31 = v38;
                  sub_1BDBFCB10();
                  sub_1BDB40600(v23, v22);
                  v24 = 0;
                  *(_QWORD *)&v7[*(int *)(v37 + 20)] = v31;
                  goto LABEL_17;
                }
                sub_1BDB40600(v23, v22);
              }
            }
          }
        }
        v24 = 1;
LABEL_17:
        v25 = v37;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, v24, 1, v37);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v25) == 1)
        {
          sub_1BDB9BB20((uint64_t)v7);
        }
        else
        {
          v26 = v33;
          sub_1BDB9BB60((uint64_t)v7, v33);
          sub_1BDB9BB60(v26, v35);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v13 = sub_1BDBCC80C(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
          v28 = *(_QWORD *)(v13 + 16);
          v27 = *(_QWORD *)(v13 + 24);
          if (v28 >= v27 >> 1)
            v13 = sub_1BDBCC80C(v27 > 1, v28 + 1, 1, v13);
          *(_QWORD *)(v13 + 16) = v28 + 1;
          sub_1BDB9BB60(v35, v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28);
        }
        ++v14;
        if (v16 == v12)
        {
          swift_bridgeObjectRelease();
          return v13;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BDB9B668()
{
  return type metadata accessor for RealtimeCollaborationSelectionDocument(0);
}

uint64_t type metadata accessor for RealtimeCollaborationSelectionDocument(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50F020);
}

uint64_t sub_1BDB9B684()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for RealtimeCollaborationSelectionDocument()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RealtimeCollaborationSelectionDocument.__allocating_init(identity:localParticipantID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t *initializeBufferWithCopyOfBuffer for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1BDBFCB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RealtimeCollaborationSelectionDocument.ParticipantSelection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB9B98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  unsigned int v11;

  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  v10 = (v9 >> 57) & 0x18 | v9 & 7;
  v11 = 128 - (((v9 >> 57) >> 5) | (4 * v10));
  if (v10)
    return v11;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RealtimeCollaborationSelectionDocument.ParticipantSelection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDB9BA28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = sub_1BDBFCB40();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (-(int)a2 >> 2) & 0x1F | (32 * (-(int)a2 & 0x7F));
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (v10 | (v10 << 57)) & 0xF000000000000007;
  return result;
}

uint64_t sub_1BDB9BAB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BDB9BB20(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F0B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDB9BB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static CommandRunner.commandLineArguments.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1BDBFE2A4();
  v1 = *(_QWORD *)(v0 + 16);
  sub_1BDBFE8C8();
  swift_unknownObjectRetain_n();
  v2 = swift_dynamicCastClass();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x1E0DEE9D8];
  }
  v3 = *(_QWORD *)(v2 + 16);
  swift_release();
  if (v3 == v1 - (v1 != 0))
  {
    v4 = swift_dynamicCastClass();
    if (!v4)
    {
      swift_bridgeObjectRelease();
      v4 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = sub_1BDAE98B0(v0, v0 + 32, v1 != 0, (2 * v1) | 1);
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t CommandRunner.commands.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CommandRunner.__allocating_init(for:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t CommandRunner.init(for:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t CommandRunner.run(arguments:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[21] = a1;
  v2[22] = v1;
  v2[23] = *v1;
  return swift_task_switch();
}

uint64_t sub_1BDB9BCE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[23];
  v2 = v0[21];
  v3 = *(_QWORD *)(v1 + 80);
  v0[24] = v3;
  v4 = *(_QWORD *)(v1 + 88);
  v0[25] = v4;
  static Commands.command(from:)(v2, v3, v4, (uint64_t)(v0 + 2));
  v5 = v0[5];
  v6 = v0[6];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v5);
  v9 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v6 + 48) + *(_QWORD *)(v6 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  v0[26] = v7;
  *v7 = v0;
  v7[1] = sub_1BDB9BE4C;
  return v9(v0 + 17, v5, v6);
}

uint64_t sub_1BDB9BE4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB9BEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  FILE *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BDADED64(v0 + 16, v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EE90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50EE98);
  if (!swift_dynamicCast())
  {
    sub_1BDB9C0F4(v0 + 136);
    if (v4)
    {
      v3 = (FILE *)sub_1BDBFCF0C();
      v2 = 0;
      goto LABEL_6;
    }
    v2 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
    goto LABEL_10;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  sub_1BDB9C0F4(v0 + 136);
  if (!v1)
  {
    v2 = 1;
    goto LABEL_9;
  }
  v2 = 1;
  v3 = (FILE *)sub_1BDBFCF00();
LABEL_6:
  sub_1BDBFD7DC();
  v5 = sub_1BDBFD758();
  swift_bridgeObjectRelease();
  fputs((const char *)(v5 + 32), v3);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
  swift_release();
LABEL_10:
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1BDB9C010()
{
  uint64_t v0;
  void *v1;
  FILE *v2;
  uint64_t v3;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  v1 = *(void **)(v0 + 216);
  sub_1BDB9CF64(v1);
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  v2 = (FILE *)sub_1BDBFCF00();
  v3 = sub_1BDBFD758();
  swift_bridgeObjectRelease();
  fputs((const char *)(v3 + 32), v2);

  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t CommandRunner.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CommandRunner.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BDB9C0F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD v32[4];
  _BYTE v33[32];

  v2 = sub_1BDBFC948();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v32 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v32 - v10;
  sub_1BDAE0BA0(a1, (uint64_t)v33);
  v12 = 0;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_6;
  if (swift_dynamicCast())
  {
    if (LOBYTE(v32[0]))
      v12 = 5457241;
    else
      v12 = 20302;
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    v15 = v32[0];
    v14 = v32[1];
    swift_bridgeObjectRelease();
    v16 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0)
      v16 = v15 & 0xFFFFFFFFFFFFLL;
    if (!v16)
    {
      v12 = 0;
      goto LABEL_6;
    }
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v11, v2);
    if ((sub_1BDBFC894() & 1) != 0)
    {
      v12 = sub_1BDBFC918();
      v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      v17(v9, v2);
      v17(v11, v2);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t))(v3 + 8);
      v31(v9, v2);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      v12 = sub_1BDBFC8A0();
      v31(v6, v2);
    }
    goto LABEL_6;
  }
  sub_1BDAE0BA0(a1, (uint64_t)v32);
  v12 = sub_1BDBFD734();
  v19 = v18;
  if ((sub_1BDBFD86C() & 1) == 0 || (sub_1BDBFD878() & 1) == 0)
    goto LABEL_6;
  v20 = sub_1BDBFD7A0();
  v21 = sub_1BDB436A4(v20, v12, v19);
  swift_bridgeObjectRelease();
  result = sub_1BDBFD7A0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    result = sub_1BDBFE0D0();
    if ((v22 & 1) != 0)
      v23 = v21;
    else
      v23 = result;
    if (v23 >> 14 >= v21 >> 14)
    {
      v24 = sub_1BDBFE0E8();
      v26 = v25;
      v28 = v27;
      v30 = v29;
      swift_bridgeObjectRelease();
      v12 = MEMORY[0x1C3B78D30](v24, v26, v28, v30);
      swift_bridgeObjectRelease();
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
      return v12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDB9C478(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BDB224F4(0, v1, 0);
    v4 = a1 + 32;
    v2 = v12;
    do
    {
      sub_1BDADED64(v4, (uint64_t)&v13);
      __swift_project_boxed_opaque_existential_1(&v13, v15);
      v5 = sub_1BDBFEB2C();
      v7 = v6;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDB224F4(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v12;
      }
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BDB224F4(v8 > 1, v9 + 1, 1);
        v2 = v12;
      }
      *(_QWORD *)(v2 + 16) = v9 + 1;
      v10 = v2 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  v13 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDB3A4D0();
  sub_1BDBFD674();
  swift_bridgeObjectRelease();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1BDBFD7DC();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_1BDB9C838(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v2 = 0xD00000000000001ELL;
  v3 = sub_1BDBFE3C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFE3D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (__int128 *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = (*(uint64_t (**)(__int128 *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == *MEMORY[0x1E0DEC450] || v11 == *MEMORY[0x1E0DEC460])
  {
    (*(void (**)(__int128 *, uint64_t))(v8 + 96))(v10, v7);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, (char *)v10 + *(int *)(v12 + 48), v3);
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_1BDBFE304();
    v13 = sub_1BDBFE3B8();
    v14 = sub_1BDB9C478(v13);
    v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v14;
    v32 = v16;
    sub_1BDBFD7DC();
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    v28 = 35;
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFEB5C();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    v28 = 0;
    sub_1BDBFE760();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD650();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v2 = v31;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else if (v11 == *MEMORY[0x1E0DEC448])
  {
    (*(void (**)(__int128 *, uint64_t))(v8 + 96))(v10, v7);
    v18 = (char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F148) + 48);
    sub_1BDAE14D4(v10, (uint64_t)&v31);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v18, v3);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1BDBFE304();
    v19 = sub_1BDBFE3B8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CD00);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
    sub_1BDADED64((uint64_t)&v31, inited + 32);
    v29 = v19;
    sub_1BDBC3FE0(inited);
    v21 = sub_1BDB9C478(v29);
    v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v21;
    v30 = v23;
    sub_1BDBFD7DC();
    v2 = v29;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v31);
  }
  else if (v11 == *MEMORY[0x1E0DEC458])
  {
    (*(void (**)(__int128 *, uint64_t))(v8 + 96))(v10, v7);
    (*(void (**)(char *, __int128 *, uint64_t))(v4 + 32))(v6, v10, v3);
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_1BDBFE304();
    v24 = sub_1BDBFE3B8();
    v25 = sub_1BDB9C478(v24);
    v27 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v25;
    v32 = v27;
    sub_1BDBFD7DC();
    v2 = v31;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(__int128 *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v2;
}

uint64_t sub_1BDB9CF64(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v17;
  _QWORD v18[4];
  __int128 v19;
  id v20;

  v2 = sub_1BDBFE3D0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18[-1] - v7;
  *(_QWORD *)&v19 = a1;
  v9 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    v10 = sub_1BDB9C838((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);

  }
  else
  {

    v20 = a1;
    v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F140);
    if (swift_dynamicCast())
    {
      sub_1BDAE14D4(&v19, (uint64_t)v18);
      __swift_project_boxed_opaque_existential_1(v18, v18[3]);
      v12 = sub_1BDBFC600();
      if (!v13)
      {
        v17 = a1;
        v14 = a1;
        v12 = sub_1BDBFD734();
      }
      v10 = v12;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);

    }
    else
    {

      *(_QWORD *)&v19 = a1;
      v15 = a1;
      return sub_1BDBFD734();
    }
  }
  return v10;
}

uint64_t sub_1BDB9D14C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CommandRunner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CommandRunner);
}

uint64_t method lookup function for CommandRunner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CommandRunner.__allocating_init(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t DispatchQoS.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  char v11;
  char v12;
  char v14;
  char v15;
  char v16;
  uint64_t v17;

  v2 = sub_1BDBFDBC0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v17 - v7, a1, v2);
  sub_1BDBFDB6C();
  sub_1BDB9D408();
  v9 = sub_1BDBFD6BC();
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  if ((v9 & 1) != 0)
  {
    v10(v8, v2);
    sub_1BDBFD1F4();
  }
  else
  {
    sub_1BDBFDB84();
    v11 = sub_1BDBFD6BC();
    v10(v6, v2);
    if ((v11 & 1) != 0 || (sub_1BDBFDB84(), v12 = sub_1BDBFD6BC(), v10(v6, v2), (v12 & 1) != 0))
    {
      v10(v8, v2);
      sub_1BDBFD224();
    }
    else
    {
      sub_1BDBFDBA8();
      v14 = sub_1BDBFD6BC();
      v10(v6, v2);
      if ((v14 & 1) != 0)
      {
        v10(v8, v2);
        sub_1BDBFD218();
      }
      else
      {
        sub_1BDBFDB78();
        v15 = sub_1BDBFD6BC();
        v10(v6, v2);
        if ((v15 & 1) != 0)
        {
          v10(v8, v2);
        }
        else
        {
          sub_1BDBFDB78();
          v16 = sub_1BDBFD6BC();
          v10(v6, v2);
          v10(v8, v2);
          if ((v16 & 1) == 0)
          {
            sub_1BDBFD200();
            return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v2);
          }
        }
        sub_1BDBFD20C();
      }
    }
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v2);
}

unint64_t sub_1BDB9D408()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23A5E8;
  if (!qword_1ED23A5E8)
  {
    v1 = sub_1BDBFDBC0();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DF0760], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23A5E8);
  }
  return result;
}

uint64_t dispatch thunk of ICObjectProviding.object(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ICObjectProviding.performAndWait(task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

id SiriSpeechRecognitionManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t static SiriSpeechRecognitionManager.generalASRModelNeedsDownload()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF50F170 + dword_1EF50F170);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BDB9D4F8;
  return v3();
}

uint64_t sub_1BDB9D4F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t static SiriSpeechRecognitionManager.downloadGeneralASRModel(progress:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF50F180 + dword_1EF50F180);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDAC9D90;
  return v7(a1, a2);
}

uint64_t sub_1BDB9D5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50F150);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50F150);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1BDB9D644(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[8] = a1;
  v2[9] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3E0);
  v2[10] = swift_task_alloc();
  sub_1BDBFCF60();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE30);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3F0);
  v2[13] = swift_task_alloc();
  sub_1BDBFCB58();
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F190);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F198);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F1A0);
  v2[19] = v3;
  v2[20] = *(_QWORD *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F1A8);
  v2[22] = v4;
  v2[23] = *(_QWORD *)(v4 - 8);
  v2[24] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F1B0);
  v2[25] = v5;
  v2[26] = *(_QWORD *)(v5 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB9D824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(unint64_t, _QWORD, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(unint64_t, _QWORD, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 192);
  v55 = *(_QWORD *)(v0 + 208);
  v56 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v59 = *(_QWORD *)(v0 + 136);
  v57 = *(_QWORD *)(v0 + 128);
  v58 = *(_QWORD *)(v0 + 72);
  sub_1BDBFCFFC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E0DF07B8], v7);
  sub_1BDBFDBCC();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32);
  v54(v8, v1, v56);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v8, 0, 1, v56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v57, v2, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v57, 0, 1, v4);
  v9 = v58 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputSequence;
  swift_beginAccess();
  sub_1BDBA04DC(v8, v9, &qword_1EF50F198);
  swift_endAccess();
  v10 = v58 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputBuilder;
  swift_beginAccess();
  sub_1BDBA04DC(v57, v10, &qword_1EF50F190);
  swift_endAccess();
  sub_1BDB157E4(v9, v59, &qword_1EF50F198);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v59, 1, v56) == 1)
  {
    v11 = *(_QWORD *)(v0 + 136);
    v12 = &qword_1EF50F198;
LABEL_5:
    sub_1BDAC350C(v11, v12);
    sub_1BDAC7614();
    swift_allocError();
    *v17 = 13;
    swift_willThrow();
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = *(_QWORD *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 120);
  v54(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 200));
  sub_1BDB157E4(v10, v15, &qword_1EF50F190);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) == 1)
  {
    v16 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    v12 = &qword_1EF50F190;
    v11 = v16;
    goto LABEL_5;
  }
  v20 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 72);
  sub_1BDAC350C(*(_QWORD *)(v0 + 120), &qword_1EF50F190);
  sub_1BDBFCB4C();
  v22 = *MEMORY[0x1E0CD7ED8];
  v23 = sub_1BDBFD068();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 104))(v19, v22, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, v23);
  v25 = sub_1BDBFCF6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE38);
  v26 = sub_1BDBFCF78();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 72);
  v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BDC17EC0;
  v31 = v30 + v29;
  v32 = *(void (**)(unint64_t, _QWORD, uint64_t))(v27 + 104);
  v32(v31, *MEMORY[0x1E0CD7750], v26);
  v32(v31 + v28, *MEMORY[0x1E0CD7748], v26);
  sub_1BDAED5A8(v30);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D400);
  v33 = sub_1BDBFD05C();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BDC16BA0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v34 + 104))(v36 + v35, *MEMORY[0x1E0CD7DE0], v33);
  sub_1BDAED810(v36);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE40);
  v37 = sub_1BDBFCFC0();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(_QWORD *)(v38 + 72);
  v40 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1BDC17ED0;
  v42 = v41 + v40;
  v43 = *(void (**)(unint64_t, _QWORD, uint64_t))(v38 + 104);
  v43(v42, *MEMORY[0x1E0CD7838], v37);
  v43(v42 + v39, *MEMORY[0x1E0CD7840], v37);
  v43(v42 + 2 * v39, *MEMORY[0x1E0CD7858], v37);
  sub_1BDB9FDBC(v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BDBFCFE4();
  swift_allocObject();
  v44 = sub_1BDBFCFD8();
  v45 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_transcriber;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_transcriber) = v44;
  swift_release();
  v46 = *(_QWORD *)(v21 + v45);
  *(_QWORD *)(v0 + 232) = v46;
  if (!v46)
  {
    v51 = *(_QWORD *)(v0 + 208);
    v50 = *(_QWORD *)(v0 + 216);
    v52 = *(_QWORD *)(v0 + 200);
    sub_1BDAC7614();
    swift_allocError();
    *v53 = 13;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    goto LABEL_6;
  }
  *(_QWORD *)(v0 + 240) = sub_1BDBFCF48();
  *(_QWORD *)(v0 + 248) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D410);
  v47 = swift_allocObject();
  *(_QWORD *)(v0 + 256) = v47;
  *(_OWORD *)(v47 + 16) = xmmword_1BDC16BA0;
  v48 = sub_1BDAC31B0(&qword_1EF50BE48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7910], MEMORY[0x1E0CD7908]);
  *(_QWORD *)(v0 + 264) = v48;
  *(_QWORD *)(v47 + 32) = v46;
  *(_QWORD *)(v47 + 40) = v48;
  swift_retain_n();
  v49 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v49;
  *v49 = v0;
  v49[1] = sub_1BDB9DF94;
  return sub_1BDBFCF18();
}

uint64_t sub_1BDB9DF94(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDB9DFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat) = *(_QWORD *)(v0 + 280);

  v4 = *(void **)(v1 + v2);
  *(_QWORD *)(v0 + 288) = v4;
  if (v4)
  {
    v21 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v22 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 72);
    v23 = v4;
    v10 = (id)ICNotesAppBundleIdentifier();
    sub_1BDBFD6F8();

    sub_1BDBFCF54();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v9);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(v11 + 32) = v5;
    *(_QWORD *)(v11 + 40) = v21;
    v12 = sub_1BDBFD02C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v22, 1, 1, v12);
    v13 = objc_allocWithZone((Class)sub_1BDBFD020());
    swift_retain();
    v14 = v23;
    objc_msgSend(v13, sel_init);
    sub_1BDBA0490();
    *(_QWORD *)(v24 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzer) = sub_1BDBFCF30();
    swift_release();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v15;
    *v15 = v0;
    v15[1] = sub_1BDB9E2F4;
    return sub_1BDB9EF4C(*(_QWORD *)(v0 + 64));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 200);
    sub_1BDAC7614();
    swift_allocError();
    *v20 = 13;
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB9E2F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB9E358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB9E46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB9E578(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  _QWORD *v20;
  _BYTE *v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;

  v32 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F1E8);
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v28 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BDBFCFFC();
  v31 = *(_QWORD *)(v27 - 8);
  v4 = MEMORY[0x1E0C80A78](v27);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F190);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F1A8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputBuilder;
  swift_beginAccess();
  sub_1BDB157E4(v16, (uint64_t)v11, &qword_1EF50F190);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BDAC350C((uint64_t)v11, &qword_1EF50F190);
LABEL_7:
    sub_1BDAC7614();
    swift_allocError();
    *v22 = 15;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_7;
  }
  v18 = v17;
  swift_retain();
  v19 = v33;
  v20 = sub_1BDB7E840(v32, v18);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

    return swift_release();
  }
  else
  {
    v23 = v20;
    swift_release();
    v33 = v23;
    sub_1BDBFCFF0();
    v24 = v27;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v6, v8, v27);
    v32 = v18;
    v25 = v28;
    sub_1BDBFDBD8();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v30);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_1BDB9E898()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[11] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F200);
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F208);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F1A8);
  v1[17] = v3;
  v1[18] = *(_QWORD *)(v3 - 8);
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F190);
  v1[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB9E980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputBuilder;
  swift_beginAccess();
  sub_1BDB157E4(v4, v1, &qword_1EF50F190);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 160);
  if (v5)
  {
    sub_1BDAC350C(*(_QWORD *)(v0 + 160), &qword_1EF50F190);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16))(v7, *(_QWORD *)(v0 + 160), v9);
    sub_1BDAC350C(v6, &qword_1EF50F190);
    sub_1BDBFDBE4();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzer);
  *(_QWORD *)(v0 + 168) = v11;
  if (v11)
  {
    swift_retain();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v12;
    *v12 = v0;
    v12[1] = sub_1BDB9EC80;
    return sub_1BDBFCF24();
  }
  else
  {
    v14 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask;
    if (*(_QWORD *)(v10 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask))
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
      sub_1BDBFDC14();
      swift_release();
      v15 = *(_QWORD *)(v0 + 88);
    }
    else
    {
      v15 = v10;
    }
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v10 + v14) = 0;
    swift_release();
    v19 = v15 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation;
    swift_beginAccess();
    sub_1BDB157E4(v19, v16, &qword_1EF50F208);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
    v21 = *(_QWORD *)(v0 + 128);
    if (v20)
    {
      sub_1BDAC350C(*(_QWORD *)(v0 + 128), &qword_1EF50F208);
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 104);
      v22 = *(_QWORD *)(v0 + 112);
      v24 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 16))(v22, *(_QWORD *)(v0 + 128), v24);
      sub_1BDAC350C(v21, &qword_1EF50F208);
      sub_1BDBFDBE4();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    v25 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 56))(v25, 1, 1, *(_QWORD *)(v0 + 96));
    swift_beginAccess();
    sub_1BDBA04DC(v25, v19, &qword_1EF50F208);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDB9EC80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BDB9ECEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
    sub_1BDBFDC14();
    swift_release();
  }
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v1 + v2) = 0;
  swift_release();
  v7 = v3 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation;
  swift_beginAccess();
  sub_1BDB157E4(v7, v4, &qword_1EF50F208);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v9 = *(_QWORD *)(v0 + 128);
  if (v8)
  {
    sub_1BDAC350C(*(_QWORD *)(v0 + 128), &qword_1EF50F208);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16))(v10, *(_QWORD *)(v0 + 128), v12);
    sub_1BDAC350C(v9, &qword_1EF50F208);
    sub_1BDBFDBE4();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  v13 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 56))(v13, 1, 1, *(_QWORD *)(v0 + 96));
  swift_beginAccess();
  sub_1BDBA04DC(v13, v7, &qword_1EF50F208);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB9EED4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB9EF4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  v2[4] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F288);
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB9EFD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = v0[3];
  sub_1BDBFCFB4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DF07B8], v3);
  *(_QWORD *)(swift_task_alloc() + 16) = v4;
  sub_1BDBFDC08();
  swift_task_dealloc();
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_transcriber);
  if (v5 && (v6 = (char *)v0[3], *(_QWORD *)&v6[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzer]))
  {
    v7 = v0[4];
    v8 = sub_1BDBFDBC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v5;
    v9[5] = v6;
    swift_retain();
    v10 = v6;
    swift_retain_n();
    *(_QWORD *)&v10[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask] = sub_1BDB1DFBC(v7, (uint64_t)&unk_1EF50F298, (uint64_t)v9);
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    v11 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v12 = v0[2];
    sub_1BDAC7614();
    swift_allocError();
    *v13 = 13;
    swift_willThrow();
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BD10);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    v11 = (uint64_t (*)(void))v0[1];
  }
  return v11();
}

uint64_t sub_1BDB9F1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F208);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F200);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = a2 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation;
  swift_beginAccess();
  sub_1BDBA04DC((uint64_t)v6, v9, &qword_1EF50F208);
  return swift_endAccess();
}

uint64_t sub_1BDB9F2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[6] = a4;
  v5[7] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F200);
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F208);
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F2A0);
  v5[12] = swift_task_alloc();
  v7 = sub_1BDBFCFB4();
  v5[13] = v7;
  v5[14] = *(_QWORD *)(v7 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE60);
  v5[17] = swift_task_alloc();
  v5[18] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50D3D0);
  v5[19] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BE68);
  v5[20] = v8;
  v5[21] = *(_QWORD *)(v8 - 8);
  v5[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDB9F41C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BDBFCFCC();
  v0[23] = swift_getOpaqueTypeConformance2();
  sub_1BDBFDC80();
  v0[24] = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation;
  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[25] = v1;
  *v1 = v0;
  v1[1] = sub_1BDB9F524;
  return sub_1BDBFDB3C();
}

uint64_t sub_1BDB9F524()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDB9F588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 192);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 128), v1, v2);
    sub_1BDB157E4(v8, v5, &qword_1EF50F208);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    v10 = *(_QWORD *)(v0 + 128);
    if (v9)
    {
      v12 = *(_QWORD *)(v0 + 88);
      v11 = *(_QWORD *)(v0 + 96);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104));
      sub_1BDAC350C(v12, &qword_1EF50F208);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F2A8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 112);
      v14 = *(_QWORD *)(v0 + 120);
      v17 = *(_QWORD *)(v0 + 96);
      v16 = *(_QWORD *)(v0 + 104);
      v19 = *(_QWORD *)(v0 + 80);
      v18 = *(_QWORD *)(v0 + 88);
      v20 = *(_QWORD *)(v0 + 64);
      v21 = *(_QWORD *)(v0 + 72);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v18, v20);
      sub_1BDAC350C(v18, &qword_1EF50F208);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v10, v16);
      sub_1BDBFDBD8();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v16);
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F2A8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 0, 1, v22);
    }
    sub_1BDAC350C(*(_QWORD *)(v0 + 96), &qword_1EF50F2A0);
    swift_getAssociatedConformanceWitness();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v23;
    *v23 = v0;
    v23[1] = sub_1BDB9F524;
    return sub_1BDBFDB3C();
  }
}

uint64_t sub_1BDB9F83C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  v1 = *(void **)(v0 + 40);
  if (qword_1EF50B238 != -1)
    swift_once();
  v2 = sub_1BDBFCE34();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF50F150);
  v3 = sub_1BDBFCE1C();
  v4 = sub_1BDBFDEE4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD918000, v3, v4, "speech recognition failed", v5, 2u);
    MEMORY[0x1C3B7B478](v5, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDB9F99C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1BDB9F9D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = sub_1BDBFD6F8();
    v9 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1BDB9FA60(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_1BDBFDD10();
  return swift_continuation_resume();
}

uint64_t static SiriSpeechRecognitionManager.removeGeneralASRModel()()
{
  return swift_task_switch();
}

uint64_t sub_1BDB9FABC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_allocWithZone(MEMORY[0x1E0CD7F38]);
  v2 = (void *)sub_1BDBFD6C8();
  v3 = objc_msgSend(v1, sel_initWithLanguage_taskHint_, v2, 1009);

  v4 = (id)ICNotesAppBundleIdentifier();
  if (!v4)
  {
    sub_1BDBFD6F8();
    v4 = (id)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend((id)objc_opt_self(), sel_unsubscribeFromAssetWithConfig_clientIdentifier_error_, v3, v4, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id SiriSpeechRecognitionManager.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v1 = &v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F200);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = &v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputSequence];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F1B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = &v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputBuilder];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F1A8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_transcriber] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask] = 0;
  v7 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_converter;
  type metadata accessor for BufferConverter();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)&v0[v7] = v8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat] = 0;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for SiriSpeechRecognitionManager();
  return objc_msgSendSuper2(&v10, sel_init);
}

id SiriSpeechRecognitionManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriSpeechRecognitionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BDB9FDBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;

  v2 = sub_1BDBFCFC0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F2B0);
    v10 = sub_1BDBFE2D4();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v29 = v9;
    v30 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v33 = v10 + 56;
    v32(v8, v30, v2);
    while (1)
    {
      sub_1BDAC31B0(&qword_1EF50F2B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7860], MEMORY[0x1E0CD7870]);
      v14 = sub_1BDBFD614();
      v15 = -1 << *(_BYTE *)(v10 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v33 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        v31 = v11;
        v20 = ~v15;
        do
        {
          v32(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1BDAC31B0(&qword_1EF50F2C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD7860], MEMORY[0x1E0CD7878]);
          v21 = sub_1BDBFD6BC();
          v22 = v3;
          v23 = *(void (**)(char *, uint64_t))(v3 + 8);
          v23(v6, v2);
          if ((v21 & 1) != 0)
          {
            v23(v8, v2);
            v3 = v22;
            v9 = v29;
            v11 = v31;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v20;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v33 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v22;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v29;
        v11 = v31;
      }
      *(_QWORD *)(v33 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v25 = *(_QWORD *)(v10 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v10 + 16) = v27;
LABEL_4:
      if (++v11 == v9)
        return v10;
      v32(v8, v30 + v13 * v11, v2);
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1BDBA0028()
{
  return swift_task_switch();
}

uint64_t sub_1BDBA003C()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1BDBFE01C();
  v1 = (void *)sub_1BDBFE010();
  v2 = objc_msgSend(v1, sel_supportsGeneralASR);

  if (!v2)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  v3 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1BDBA0130;
  v4 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v5 = (_QWORD *)(v0 + 80);
  v5[1] = 0x40000000;
  v5[2] = sub_1BDB9FA60;
  v5[3] = &block_descriptor_16;
  v5[4] = v4;
  objc_msgSend(v3, sel_installedLanguagesForTaskHint_completion_, 1009, v5);
  return swift_continuation_await();
}

uint64_t sub_1BDBA0130()
{
  return swift_task_switch();
}

uint64_t sub_1BDBA017C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 16);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v1 == 0);
}

uint64_t sub_1BDBA01B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return swift_task_switch();
}

uint64_t sub_1BDBA01D0()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v1 = sub_1BDBFD6C8();
  v0[20] = v1;
  v2 = (id)ICNotesAppBundleIdentifier();
  if (!v2)
  {
    sub_1BDBFD6F8();
    v2 = (id)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
  }
  v0[21] = v2;
  v4 = v0[18];
  v3 = v0[19];
  v5 = (void *)objc_opt_self();
  v0[14] = v4;
  v0[15] = v3;
  v6 = MEMORY[0x1E0C809B0];
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 1107296256;
  v0[12] = sub_1BDB9F99C;
  v0[13] = &block_descriptor_13;
  v7 = _Block_copy(v0 + 10);
  v0[22] = v7;
  swift_retain();
  swift_release();
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_1BDBA0348;
  v8 = swift_continuation_init();
  v0[10] = v6;
  v0[11] = 0x40000000;
  v0[12] = sub_1BDB9F9D8;
  v0[13] = &block_descriptor_14_0;
  v0[14] = v8;
  objc_msgSend(v5, sel_fetchAssetsForLanguage_taskHint_clientIdentifier_progress_completion_, v1, 1009, v2, v7, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_1BDBA0348()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BDBA03A8()
{
  uint64_t v0;
  void *v1;
  const void *v2;
  void *v3;

  v1 = *(void **)(v0 + 168);
  v2 = *(const void **)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  swift_bridgeObjectRelease();
  _Block_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA03FC()
{
  uint64_t v0;
  const void *v1;
  void *v2;
  void *v3;
  void *v4;
  _BYTE *v5;

  v1 = *(const void **)(v0 + 176);
  v2 = *(void **)(v0 + 184);
  v4 = *(void **)(v0 + 160);
  v3 = *(void **)(v0 + 168);
  swift_willThrow();
  _Block_release(v1);

  sub_1BDAC7614();
  swift_allocError();
  *v5 = 4;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1BDBA0490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50F1D0;
  if (!qword_1EF50F1D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50F1B0);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DF0848], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50F1D0);
  }
  return result;
}

uint64_t sub_1BDBA04DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for SiriSpeechRecognitionManager()
{
  uint64_t result;

  result = qword_1EF50F250;
  if (!qword_1EF50F250)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BDBA055C()
{
  return type metadata accessor for SiriSpeechRecognitionManager();
}

void sub_1BDBA0564()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BDBA0768(319, &qword_1EF50F270, &qword_1EF50F200);
  if (v0 <= 0x3F)
  {
    sub_1BDBA0768(319, &qword_1EF50F278, &qword_1EF50F1B0);
    if (v1 <= 0x3F)
    {
      sub_1BDBA0768(319, &qword_1EF50F280, &qword_1EF50F1A8);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for SiriSpeechRecognitionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriSpeechRecognitionManager.setUpAudioTask()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x150);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDAC9D90;
  return v7(a1);
}

uint64_t dispatch thunk of SiriSpeechRecognitionManager.appendAudioBuffer(buffer:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of SiriSpeechRecognitionManager.finish()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BDAE2208;
  return v5();
}

void sub_1BDBA0768(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1BDBFE0AC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BDBA07B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDB9F1D4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BDBA07BC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BDBA07F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BDAE2208;
  return sub_1BDB9F2C0(a1, v4, v5, v7, v6);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

Swift::Void __swiftcall ICAccount.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v2 = objc_msgSend(v1, sel_objectID);
  if ((objc_msgSend(v2, sel_ic_isModernType) & 1) == 0)
    objc_msgSend(v2, sel_ic_isLegacyType);

  v3 = v1;
  if (objc_msgSend(v3, sel_isLocalAccount)
    || (v4 = objc_msgSend(v3, sel_emailAddress)) == 0)
  {

  }
  else
  {
    v5 = v4;
    sub_1BDBFD6F8();

  }
  AccountID.entityIdentifierString.getter();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_localizedName);
  sub_1BDBFD6F8();

  sub_1BDAC2F74(MEMORY[0x1E0DEE9D8]);
  sub_1BDBFE028();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

id CloudRecordSnapshot.id.getter()
{
  return (id)sub_1BDBA1178();
}

void CloudRecordSnapshot.init(record:id:data:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
}

id sub_1BDBA0AB0@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  v2 = (void *)sub_1BDBA1178();
  *a1 = v2;
  return v2;
}

uint64_t static NSObject<>.record(from:)()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];

  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_ic_systemFieldsValueTransformer);
  v1 = (void *)sub_1BDBFC978();
  v2 = objc_msgSend(v0, sel_reverseTransformedValue_, v1);

  if (!v2)
    return 0;
  sub_1BDBFE184();
  swift_unknownObjectRelease();
  sub_1BD942258(&v15, v17);
  sub_1BDAE0BA0((uint64_t)v17, (uint64_t)&v15);
  if (!swift_dynamicCast())
  {
    sub_1BDAE0BA0((uint64_t)v17, (uint64_t)&v15);
    if (qword_1EF50B010 != -1)
      swift_once();
    v4 = sub_1BDBFCE34();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EF50C078);
    v5 = sub_1BDBFDEF0();
    v6 = sub_1BDBFCE1C();
    v7 = v5;
    if (os_log_type_enabled(v6, v5))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v14 = v9;
      *(_DWORD *)v8 = 136315650;
      v10 = sub_1BDBFE34C();
      sub_1BDAE53FC(v10, v11, &v14);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2048;
      sub_1BDBFE100();
      *(_WORD *)(v8 + 22) = 2080;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      __swift_project_boxed_opaque_existential_1(&v15, v16);
      swift_getDynamicType();
      sub_1BDBFEB5C();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDBFEB5C();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD7DC();
      sub_1BDAE53FC(0, 0xE000000000000000, &v14);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, v6, v7, "Failed assertion at %s:%lu: %s", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v9, -1, -1);
      MEMORY[0x1C3B7B478](v8, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v15);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
    return 0;
  }
  v3 = v13;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  return v3;
}

void NSObject<>.makeSnapshot()(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  os_log_type_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_ic_systemFieldsValueTransformer);
  v4 = objc_msgSend(v3, sel_transformedValue_, v1);

  if (v4)
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_1BDBA1180((uint64_t)v15, (uint64_t)&v16);
  if (v18)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      *a1 = objc_msgSend(v1, sel_recordID);
      a1[1] = v13;
      a1[2] = v14;
      return;
    }
  }
  else
  {
    sub_1BDB3B1EC((uint64_t)&v16);
  }
  if (qword_1EF50B010 != -1)
    swift_once();
  v5 = sub_1BDBFCE34();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EF50C078);
  v6 = sub_1BDBFDEF0();
  v7 = sub_1BDBFCE1C();
  v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_QWORD *)&v15[0] = v10;
    *(_DWORD *)v9 = 136315650;
    v11 = sub_1BDBFE34C();
    v16 = sub_1BDAE53FC(v11, v12, (uint64_t *)v15);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2048;
    v16 = 38;
    sub_1BDBFE100();
    *(_WORD *)(v9 + 22) = 2080;
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    v16 = 0xD00000000000002FLL;
    v17 = 0x80000001BDC3A340;
    sub_1BDBFEB5C();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    v16 = sub_1BDAE53FC(v16, v17, (uint64_t *)v15);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD918000, v7, v8, "Failed assertion at %s:%lu: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v10, -1, -1);
    MEMORY[0x1C3B7B478](v9, -1, -1);
  }

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_1BDBA1178()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1BDBA1180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDBA11CC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EF50F2C8;
  if (!qword_1EF50F2C8)
  {
    v1 = sub_1BDBA1214();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50F2C8);
  }
  return result;
}

unint64_t sub_1BDBA1214()
{
  unint64_t result;

  result = qword_1EF50F2D0;
  if (!qword_1EF50F2D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50F2D0);
  }
  return result;
}

uint64_t sub_1BDBA1254(uint64_t a1)
{

  return sub_1BDAEB7EC(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *sub_1BDBA127C(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = v3;
  sub_1BDB4EB54(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t sub_1BDBA12C4(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v8 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  sub_1BDB4EB54(v8, v7);
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v7;
  sub_1BDAEB7EC(v9, v10);
  return a1;
}

uint64_t sub_1BDBA1320(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1BDAEB7EC(v5, v6);
  return a1;
}

uint64_t sub_1BDBA1364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50F2D8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50F2D8);
  if (qword_1ED23ADD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1BDBA13F4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BDBA1470(unint64_t *a1, void **a2)
{
  unint64_t v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDB40658(v2);
  v4 = v3;
  return sub_1BDBFD17C();
}

uint64_t sub_1BDBA14E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  return swift_release();
}

uint64_t sub_1BDBA1550()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1BDBFD17C();
}

uint64_t (*sub_1BDBA15B8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BDBFD164();
  return sub_1BDBA1630;
}

uint64_t sub_1BDBA1634()
{
  return sub_1BDBA6438((uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState, &qword_1EF50F2F0);
}

uint64_t sub_1BDBA1648(uint64_t a1)
{
  return sub_1BDBA663C(a1, &qword_1EF50F2F8, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState, &qword_1EF50F2F0);
}

uint64_t (*sub_1BDBA1664(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F2F8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F2F0);
  sub_1BDBFD14C();
  swift_endAccess();
  return sub_1BDBA172C;
}

double sub_1BDBA1730@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1BDBA17AC(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_1BDBFD17C();
}

double sub_1BDBA1820()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BDBA1898()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1BDBFD17C();
}

uint64_t (*sub_1BDBA1908(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BDBFD164();
  return sub_1BDBA1630;
}

uint64_t sub_1BDBA1980()
{
  return sub_1BDBA6438((uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__seconds, &qword_1EF50F300);
}

uint64_t sub_1BDBA1994(uint64_t a1)
{
  return sub_1BDBA663C(a1, &qword_1EF50F308, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__seconds, &qword_1EF50F300);
}

uint64_t (*sub_1BDBA19B0(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F308);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__seconds;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F300);
  sub_1BDBFD14C();
  swift_endAccess();
  return sub_1BDBA172C;
}

uint64_t sub_1BDBA1A78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BDBA1AF4(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v3 = v2;
  return sub_1BDBFD17C();
}

uint64_t sub_1BDBA1B68()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BDBA1BE0()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1BDBFD17C();
}

uint64_t (*sub_1BDBA1C48(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BDBFD164();
  return sub_1BDBA1630;
}

uint64_t sub_1BDBA1CC0()
{
  return sub_1BDBA6438((uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples, &qword_1EF50F310);
}

uint64_t sub_1BDBA1CD4(uint64_t a1)
{
  return sub_1BDBA663C(a1, (uint64_t *)&unk_1EF50F318, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples, &qword_1EF50F310);
}

uint64_t (*sub_1BDBA1CF0(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50F318);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F310);
  sub_1BDBFD14C();
  swift_endAccess();
  return sub_1BDBA172C;
}

uint64_t AudioRecordingManager.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

id AudioRecordingManager.__allocating_init(liveTranscriptionCoordinator:attachmentModel:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1BDBA709C(a1, a2);

  swift_release();
  return v6;
}

id AudioRecordingManager.init(liveTranscriptionCoordinator:attachmentModel:)(uint64_t a1, void *a2)
{
  id v3;

  v3 = sub_1BDBA709C(a1, a2);
  swift_release();

  return v3;
}

uint64_t sub_1BDBA1E84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  v1[6] = swift_task_alloc();
  v1[7] = sub_1BDBFDB60();
  v1[8] = sub_1BDBFDB54();
  v1[9] = sub_1BDBFDADC();
  v1[10] = v2;
  return swift_task_switch();
}

id sub_1BDBA1F4C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  _QWORD *v6;
  id result;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD *v18;
  id v19;

  v1 = *(void **)(v0 + 40);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 16) = 0x8000000000000008;
  v2 = v1;
  sub_1BDBFD17C();
  sub_1BDBFE01C();
  v3 = (void *)sub_1BDBFE010();
  v4 = objc_msgSend(v3, sel_supportsGeneralASR);

  if (v4)
  {
    v5 = dword_1EF50F170;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v6;
    *v6 = v0;
    v6[1] = sub_1BDBA2204;
    return (id)((uint64_t (__cdecl *)())((char *)&dword_1EF50F170 + v5))();
  }
  else
  {
    v8 = *(void **)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel);
    *(_QWORD *)(v0 + 24) = 0;
    v9 = objc_msgSend(v8, sel_createSubattachmentForRecordingAndReturnError_, v0 + 24);
    *(_QWORD *)(v0 + 96) = v9;
    v10 = *(void **)(v0 + 24);
    if (v9)
    {
      v11 = v9;
      v12 = v10;
      result = objc_msgSend(v8, sel_attachment);
      if (result)
      {
        v13 = result;
        v14 = *(void **)(v0 + 40);
        objc_msgSend(result, sel_setIsBeingEditedLocallyOnDevice_, 1);

        v15 = swift_allocObject();
        *(_QWORD *)(v15 + 16) = v11;
        swift_getKeyPath();
        swift_getKeyPath();
        *(_QWORD *)(v0 + 32) = v15;
        v16 = v14;
        v17 = v11;
        sub_1BDBFD17C();
        v18 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 104) = v18;
        *v18 = v0;
        v18[1] = sub_1BDBA24E8;
        return (id)sub_1BDBA3880();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v19 = v10;
      swift_release();
      sub_1BDBFC87C();

      swift_willThrow();
      swift_task_dealloc();
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  return result;
}

uint64_t sub_1BDBA2204(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

id sub_1BDBA2288()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id result;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD *v19;
  id v20;

  if ((*(_BYTE *)(v0 + 120) & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 48);
    v2 = *(void **)(v0 + 40);
    v3 = sub_1BDBFDBC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
    v4 = v2;
    v5 = sub_1BDBFDB54();
    v6 = (_QWORD *)swift_allocObject();
    v7 = MEMORY[0x1E0DF06E8];
    v6[2] = v5;
    v6[3] = v7;
    v6[4] = v4;
    sub_1BDB1DFBC(v1, (uint64_t)&unk_1EF50F338, (uint64_t)v6);
    swift_release();
  }
  v8 = *(void **)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel);
  *(_QWORD *)(v0 + 24) = 0;
  v9 = objc_msgSend(v8, sel_createSubattachmentForRecordingAndReturnError_, v0 + 24);
  *(_QWORD *)(v0 + 96) = v9;
  v10 = *(void **)(v0 + 24);
  if (v9)
  {
    v11 = v9;
    v12 = v10;
    result = objc_msgSend(v8, sel_attachment);
    if (result)
    {
      v14 = result;
      v15 = *(void **)(v0 + 40);
      objc_msgSend(result, sel_setIsBeingEditedLocallyOnDevice_, 1);

      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v11;
      swift_getKeyPath();
      swift_getKeyPath();
      *(_QWORD *)(v0 + 32) = v16;
      v17 = v15;
      v18 = v11;
      sub_1BDBFD17C();
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v19;
      *v19 = v0;
      v19[1] = sub_1BDBA24E8;
      return (id)sub_1BDBA3880();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v20 = v10;
    swift_release();
    sub_1BDBFC87C();

    swift_willThrow();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_1BDBA24E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDBA2594()
{
  uint64_t v0;

  swift_release();
  sub_1BDB8A10C();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA265C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA26CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v4[3] = swift_task_alloc();
  sub_1BDBFDB60();
  v4[4] = sub_1BDBFDB54();
  v4[5] = sub_1BDBFDADC();
  v4[6] = v5;
  return swift_task_switch();
}

uint64_t sub_1BDBA275C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1BDBFC948();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1BDBA27DC;
  return sub_1BDB87C88(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1BDBA27DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  sub_1BDACDBAC(v2);
  return swift_task_switch();
}

uint64_t sub_1BDBA2850()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA288C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA28C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[9] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  v1[10] = swift_task_alloc();
  v1[11] = sub_1BDBFDB60();
  v1[12] = sub_1BDBFDB54();
  v1[13] = sub_1BDBFDADC();
  v1[14] = v2;
  return swift_task_switch();
}

uint64_t sub_1BDBA295C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1BDB0163C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_1BDBA29C0;
  return sub_1BDB894F8();
}

uint64_t sub_1BDBA29C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDBA2A20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  ICAttachment *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  ICAttachment *v16;
  unint64_t v17;
  void **v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char v27;

  v2 = *(void **)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  v3 = sub_1BDBFDBC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2;
  v5 = sub_1BDBFDB54();
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x1E0DF06E8];
  v6[2] = v5;
  v6[3] = v7;
  v6[4] = v4;
  sub_1BDB1DFBC(v1, (uint64_t)&unk_1EF50F358, (uint64_t)v6);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  v8 = *(_QWORD *)(v0 + 16);
  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 72);
    v11 = (ICAttachment *)*(id *)(v8 + 16);
    sub_1BDB40674(v8);
    sub_1BDBA2FE0(v11, v10);

    if (v9)
      goto LABEL_16;
    goto LABEL_11;
  }
  sub_1BDB40674(*(_QWORD *)(v0 + 16));
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  v12 = *(_QWORD *)(v0 + 24);
  if (v12 >> 62 == 1)
  {
    v13 = *(_QWORD *)(v12 + 16);
    sub_1BDB40658(v13);
    sub_1BDB40674(v12);
    if (!(v13 >> 62))
    {
      v14 = *(_QWORD *)(v0 + 128);
      v15 = *(_QWORD *)(v0 + 72);
      v16 = (ICAttachment *)*(id *)(v13 + 16);
      sub_1BDBA2FE0(v16, v15);

      sub_1BDB40674(v13);
      if (v14)
        goto LABEL_16;
      goto LABEL_11;
    }
    v17 = v13;
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 24);
  }
  sub_1BDB40674(v17);
LABEL_11:
  v18 = (void **)(v0 + 56);
  v19 = *(void **)(v0 + 72);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 32) = 0x8000000000000000;
  v20 = v19;
  sub_1BDBFD17C();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 40) = MEMORY[0x1E0DEE9D8];
  v21 = v20;
  sub_1BDBFD17C();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = 0;
  v22 = v21;
  sub_1BDBFD17C();
  if (qword_1ED23AD88 != -1)
    swift_once();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  v23 = *v18;
  if (*v18)
  {
    v24 = *(void **)(v0 + 72);
    type metadata accessor for AudioRecordingManager(0);
    v25 = v24;
    v26 = v23;
    v27 = sub_1BDBFE070();

    if ((v27 & 1) != 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      *(_QWORD *)(v0 + 64) = 0;
      swift_retain();
      sub_1BDBFD17C();
    }
  }
LABEL_16:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA2E1C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA2E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  sub_1BDBFDB60();
  v4[3] = sub_1BDBFDB54();
  v4[4] = sub_1BDBFDADC();
  v4[5] = v5;
  return swift_task_switch();
}

uint64_t sub_1BDBA2EC4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1BDBA2F18;
  return sub_1BDB8A6CC();
}

uint64_t sub_1BDBA2F18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDBA2F78()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA2FAC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDBA2FE0(ICAttachment *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  unsigned int v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v49 - v8;
  v52 = sub_1BDBFC948();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v49 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(a2 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel);
  v12 = objc_msgSend(v11, sel_attachment);
  if (!v12)
  {
    __break(1u);
    goto LABEL_20;
  }
  v13 = v12;
  objc_msgSend(v12, sel_setIsBeingEditedLocallyOnDevice_, 0);

  v14 = objc_msgSend(v11, sel_attachment);
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = v14;
  objc_msgSend(v14, sel_setPreviewUpdateDate_, 0);

  v16 = objc_msgSend(v11, sel_attachment);
  if (!v16)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v17 = v16;
  objc_msgSend(v16, sel_attachmentDidChange);

  v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_liveTranscriptionCoordinator);
  swift_getKeyPath();
  v51 = v18;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  v19 = swift_bridgeObjectRetain();
  ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:)((Swift::OpaquePointer)v19, a1);
  swift_bridgeObjectRelease();
  if (v20)
    return;
  v21 = objc_msgSend(v11, sel_attachment);
  if (!v21)
    goto LABEL_22;
  v22 = v21;
  v23 = objc_msgSend(v21, sel_needsTranscription);

  if (!v23)
    return;
  v24 = -[ICAttachment media](a1, sel_media);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v9, 1, 1, v52);
LABEL_13:
    sub_1BDACDBAC((uint64_t)v9);
    return;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, sel_mediaURL);

  if (v26)
  {
    sub_1BDBFC90C();

    v27 = 0;
  }
  else
  {
    v27 = 1;
  }
  v29 = v49;
  v28 = v50;
  v30 = v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v7, v27, 1, v52);
  sub_1BDAC75A0((uint64_t)v7, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v9, 1, v30) == 1)
    goto LABEL_13;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v29, v9, v30);
  if (qword_1EF50B1B0 != -1)
    swift_once();
  swift_beginAccess();
  v31 = (void *)qword_1EF50D328;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F3B0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CBF8);
  v33 = *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80);
  v34 = (v33 + 32) & ~v33;
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BDC16BA0;
  v36 = (_QWORD *)(v35 + v34);
  v37 = (char *)v36 + *(int *)(v32 + 48);
  v38 = v31;
  *v36 = -[ICAttachment objectID](a1, sel_objectID);
  v40 = v49;
  v39 = v50;
  v41 = v37;
  v42 = v52;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v41, v49, v52);
  v43 = sub_1BDB0B844(v35);
  v44 = objc_msgSend(v11, sel_attachment);
  if (!v44)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v45 = v44;
  v46 = v42;
  v47 = objc_msgSend(v44, sel_objectID);

  v48 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  BackgroundTranscriber.retranscriptionTask(subattachmentAndMediaInfo:attachmentIdentifier:completion:)(v43, v47, (uint64_t)sub_1BDBA7CF4, v48);

  swift_bridgeObjectRelease();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v46);
}

uint64_t AudioRecordingCoordinator.currentRecordingManager.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t AudioRecordingCoordinator.currentRecordingManager.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BDBFD17C();
}

uint64_t sub_1BDBA35A4()
{
  char *v0;
  char *v1;

  objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_recordingMethod]+ OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_audioEngine), sel_pause);
  swift_allocObject();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1BDBFD17C();
}

uint64_t sub_1BDBA36A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  sub_1BDBFDB60();
  *(_QWORD *)(v1 + 32) = sub_1BDBFDB54();
  sub_1BDBFDADC();
  return swift_task_switch();
}

uint64_t sub_1BDBA370C()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v6;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62 == 1)
  {
    v2 = *(void **)(v0 + 24);
    v3 = *(_QWORD *)(v1 + 16);
    sub_1BDB40658(v3);
    sub_1BDB40674(v1);
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 16) = 0x8000000000000008;
    v4 = v2;
    sub_1BDBFD17C();
    sub_1BDB01590();
    v5 = *(void **)(v0 + 24);
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 16) = v3;
    v6 = v5;
    sub_1BDBFD17C();
  }
  else
  {
    sub_1BDB40674(*(_QWORD *)(v0 + 16));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA3880()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[4] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v2 = sub_1BDBFC948();
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 + 64);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = sub_1BDBFDB60();
  v1[14] = sub_1BDBFDB54();
  v1[15] = sub_1BDBFDADC();
  v1[16] = v4;
  return swift_task_switch();
}

uint64_t sub_1BDBA3984()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  void *v51;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62)
  {
    sub_1BDB40674(*(_QWORD *)(v0 + 16));
    swift_release();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = v2;
  sub_1BDB40674(v1);
  v4 = objc_msgSend(v3, sel_media);
  if (!v4)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 56))(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 64));
LABEL_9:
    v12 = *(_QWORD *)(v0 + 56);

    swift_release();
    sub_1BDACDBAC(v12);
    goto LABEL_10;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_mediaURL);

  if (v6)
  {
    sub_1BDBFC90C();

    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v11, v7, 1, v8);
  sub_1BDAC75A0(v11, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
    goto LABEL_9;
  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 56);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 72) + 32);
  *(_QWORD *)(v0 + 144) = v17;
  v17(v14, v16, v15);
  v18 = objc_msgSend(v3, sel_identifier);
  if (!v18)
  {
    v29 = *(_QWORD *)(v0 + 96);
    v30 = *(_QWORD *)(v0 + 64);
    v31 = *(_QWORD *)(v0 + 72);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    goto LABEL_10;
  }
  v19 = v18;
  v20 = sub_1BDBFD6F8();
  v22 = v21;

  *(_QWORD *)(v0 + 152) = v20;
  *(_QWORD *)(v0 + 160) = v22;
  if (qword_1ED23AD88 != -1)
    swift_once();
  *(_QWORD *)(v0 + 168) = qword_1ED23AD78;
  if ((AudioRecordingCoordinator.isRecording.getter() & 1) == 0)
    goto LABEL_21;
  v23 = *(_QWORD *)(v0 + 32);
  v24 = AudioRecordingCoordinator.currentAttachment.getter();
  v25 = objc_msgSend(*(id *)(v23 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel), sel_attachment);
  v26 = v25;
  if (v24)
  {
    if (v25)
    {
      sub_1BDAC9634();
      v27 = v24;
      v28 = sub_1BDBFE070();

      if ((v28 & 1) == 0)
        goto LABEL_24;
LABEL_21:
      swift_release();
      v48 = *(_QWORD *)(v0 + 152);
      v49 = *(_QWORD *)(v0 + 160);
      v50 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 144);
      v51 = *(void **)(v0 + 136);
      v32 = *(_QWORD *)(v0 + 88);
      v46 = *(_QWORD *)(v0 + 96);
      v33 = *(_QWORD *)(v0 + 72);
      v47 = *(_QWORD *)(v0 + 80);
      v34 = *(_QWORD *)(v0 + 64);
      v35 = *(void **)(v0 + 32);
      v36 = *(_QWORD *)(v0 + 40);
      v45 = v36;
      swift_getKeyPath();
      swift_getKeyPath();
      *(_QWORD *)(v0 + 24) = v35;
      v37 = v35;
      swift_retain();
      sub_1BDBFD17C();
      v38 = sub_1BDBFDBC0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v36, 1, 1, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v46, v34);
      v39 = v37;
      v40 = sub_1BDBFDB54();
      v41 = (*(unsigned __int8 *)(v33 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      v42 = (char *)swift_allocObject();
      v43 = MEMORY[0x1E0DF06E8];
      *((_QWORD *)v42 + 2) = v40;
      *((_QWORD *)v42 + 3) = v43;
      *((_QWORD *)v42 + 4) = v48;
      *((_QWORD *)v42 + 5) = v49;
      v50(&v42[v41], v32, v34);
      *(_QWORD *)&v42[(v47 + v41 + 7) & 0xFFFFFFFFFFFFFFF8] = v39;
      sub_1BDAEE400(v45, (uint64_t)&unk_1EF50F3C0, (uint64_t)v42);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v46, v34);
      goto LABEL_10;
    }
    v26 = v24;
  }
  else if (!v25)
  {
    goto LABEL_21;
  }

LABEL_24:
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v44;
  *v44 = v0;
  v44[1] = sub_1BDBA3E50;
  return AudioRecordingCoordinator.cancelCurrentAudioRecordingSession()();
}

uint64_t sub_1BDBA3E50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDBA3EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void *v20;

  swift_release();
  v17 = *(_QWORD *)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 160);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 144);
  v20 = *(void **)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(void **)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v14 = v5;
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 24) = v4;
  v6 = v4;
  swift_retain();
  sub_1BDBFD17C();
  v7 = sub_1BDBFDBC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v15, v3);
  v8 = v6;
  v9 = sub_1BDBFDB54();
  v10 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = (char *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v11 + 2) = v9;
  *((_QWORD *)v11 + 3) = v12;
  *((_QWORD *)v11 + 4) = v17;
  *((_QWORD *)v11 + 5) = v18;
  v19(&v11[v10], v1, v3);
  *(_QWORD *)&v11[(v16 + v10 + 7) & 0xFFFFFFFFFFFFFFF8] = v8;
  sub_1BDAEE400(v14, (uint64_t)&unk_1EF50F3C0, (uint64_t)v11);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v15, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA40A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AudioRecordingCoordinator.isRecording.getter()
{
  void *v0;
  unint64_t v1;
  char v2;
  char v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  v0 = (void *)v7;
  if (v7)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BDBFD170();
    swift_release();
    swift_release();
    v1 = v7;
    v5 = 0x8000000000000000;
    v6 = v7;
    v2 = static RecordingState.== infix(_:_:)(&v6, &v5);

    sub_1BDB40674(v1);
    v3 = v2 ^ 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

id AudioRecordingCoordinator.currentAttachment.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  char *v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  if (!v4)
    return 0;
  v0 = *(_QWORD *)&v4[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_liveTranscriptionCoordinator];
  swift_retain();

  swift_getKeyPath();
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  v1 = *(id *)(v0 + 48);
  swift_release();
  v2 = objc_msgSend(v1, sel_attachment);

  return v2;
}

uint64_t AudioRecordingCoordinator.cancelCurrentAudioRecordingSession()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  sub_1BDBFDB60();
  v1[4] = sub_1BDBFDB54();
  v1[5] = sub_1BDBFDADC();
  v1[6] = v2;
  return swift_task_switch();
}

uint64_t sub_1BDBA43C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_1BDBA4484;
    return sub_1BDBA28C8();
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BDBA4484()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_1BDBA44F0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA452C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v8 = type metadata accessor for AudioData(0);
  v7[21] = v8;
  v7[22] = *(_QWORD *)(v8 - 8);
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F3C8);
  v7[26] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50C8E0);
  v7[27] = v9;
  v7[28] = *(_QWORD *)(v9 - 8);
  v7[29] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F3D0);
  v7[30] = v10;
  v7[31] = *(_QWORD *)(v10 - 8);
  v7[32] = swift_task_alloc();
  v11 = sub_1BDBFC948();
  v7[33] = v11;
  v7[34] = *(_QWORD *)(v11 - 8);
  v7[35] = swift_task_alloc();
  v7[36] = sub_1BDBFDB60();
  v7[37] = sub_1BDBFDB54();
  v7[38] = sub_1BDBFDADC();
  v7[39] = v12;
  return swift_task_switch();
}

uint64_t sub_1BDBA46BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];

  v25[1] = *MEMORY[0x1E0C80C00];
  if (qword_1EF50B240 != -1)
    swift_once();
  v2 = v0[34];
  v1 = v0[35];
  v3 = v0[33];
  v4 = v0[19];
  v5 = sub_1BDBFCE34();
  v0[40] = __swift_project_value_buffer(v5, (uint64_t)qword_1EF50F2D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  v6 = sub_1BDBFCE1C();
  v7 = sub_1BDBFDED8();
  v8 = os_log_type_enabled(v6, v7);
  v10 = v0[34];
  v9 = v0[35];
  v11 = v0[33];
  v12 = v0[18];
  if (v8)
  {
    v13 = v0[17];
    v23 = v0[34];
    v14 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25[0] = v24;
    *(_DWORD *)v14 = 136315394;
    swift_bridgeObjectRetain();
    v0[15] = sub_1BDAE53FC(v13, v12, v25);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    sub_1BDAC31B0(&qword_1ED23AB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v15 = sub_1BDBFE760();
    v0[16] = sub_1BDAE53FC(v15, v16, v25);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v9, v11);
    _os_log_impl(&dword_1BD918000, v6, v7, "Recording task starting {subattachment: %s, url: %s}", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v24, -1, -1);
    MEMORY[0x1C3B7B478](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }

  sub_1BDB00C5C(v0[19], v0[29]);
  v18 = v0[28];
  v17 = v0[29];
  v19 = v0[27];
  sub_1BDBFDBF0();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  v20 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_waveformBuffer;
  v0[41] = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_liveTranscriptionCoordinator;
  v0[42] = v20;
  v0[43] = 0;
  v0[44] = sub_1BDBFDB54();
  v21 = (_QWORD *)swift_task_alloc();
  v0[45] = v21;
  *v21 = v0;
  v21[1] = sub_1BDBA4BD4;
  return sub_1BDBFDBFC();
}

uint64_t sub_1BDBA4BD4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BDBA4C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  double v6;
  id v7;
  double v8;
  double v9;
  void (*v10)(uint64_t, _QWORD);
  double *v11;
  double v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = *(_QWORD *)(v0 + 208);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 48))(v1, 1, *(_QWORD *)(v0 + 168)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    swift_release();
    sub_1BDBA5E14(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  sub_1BDBA7E4C(v1, v3);
  sub_1BDAF1038(v3, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = **(void ***)(v0 + 192);
    *(_QWORD *)(v0 + 368) = v5;
    v6 = (double)objc_msgSend(v5, sel_frameLength);
    v7 = objc_msgSend(v5, sel_format);
    objc_msgSend(v7, sel_sampleRate);
    v9 = v8;

    swift_getKeyPath();
    swift_getKeyPath();
    v10 = (void (*)(uint64_t, _QWORD))sub_1BDBFD164();
    *v11 = v6 / v9 + *v11;
    v10(v0 + 16, 0);
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BDBFD170();
    swift_release();
    swift_release();
    v12 = *(double *)(v0 + 96);
    if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) != 0)
    {
      if (v12 > -9.22337204e18)
      {
        if (v12 < 9.22337204e18)
        {
          *(_BYTE *)(v0 + 72) = 1;
          *(_QWORD *)(v0 + 80) = (uint64_t)v12;
          v13 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 376) = v13;
          *v13 = v0;
          v13[1] = sub_1BDBA510C;
          return sub_1BDB8A390(v0 + 72);
        }
LABEL_13:
        __break(1u);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
  sub_1BDAF107C(*(_QWORD *)(v0 + 192));
  v14 = *(_QWORD *)(v0 + 344);
  *(_QWORD *)(v0 + 392) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328));
  *(_QWORD *)(v0 + 400) = v15;
  swift_getKeyPath();
  *(_QWORD *)(v0 + 88) = v15;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  if ((*(_BYTE *)(v15 + 56) & 1) != 0)
  {
    *(_QWORD *)(v0 + 408) = sub_1BDBFDB54();
    *(_QWORD *)(v0 + 416) = sub_1BDBFDADC();
    *(_QWORD *)(v0 + 424) = v16;
    return swift_task_switch();
  }
  else
  {
    sub_1BDAF107C(*(_QWORD *)(v0 + 200));
    *(_QWORD *)(v0 + 344) = v14;
    *(_QWORD *)(v0 + 352) = sub_1BDBFDB54();
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v17;
    *v17 = v0;
    v17[1] = sub_1BDBA4BD4;
    return sub_1BDBFDBFC();
  }
}

uint64_t sub_1BDBA510C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDBA51BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  unsigned int v6;
  char *v7;
  char **v8;
  BOOL v9;
  unsigned int v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  unsigned int v26;
  id v27;
  unsigned int *v28;
  int64_t v29;
  unsigned int v30;
  unsigned int v31;
  float **v32;
  float *v33;
  vDSP_Length v34;
  float v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v44;
  float *__C;
  char *v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 160);
  if (!*(_QWORD *)(v2 + v1))
  {
    v3 = objc_msgSend(*(id *)(v0 + 368), sel_format);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v3, 1920);

    v0 = v47;
    v5 = *(void **)(v2 + v1);
    *(_QWORD *)(v2 + v1) = v4;

  }
  v6 = 0;
  __C = (float *)(v0 + 456);
  v7 = (char *)MEMORY[0x1E0DEE9D8];
  v8 = &selRef_randomObject_;
  while (1)
  {
    v10 = objc_msgSend(*(id *)(v0 + 368), sel_frameLength);
    v11 = *(char **)(v0 + 160);
    if (v6 >= v10)
      break;
    v12 = *(void **)&v11[*(_QWORD *)(v0 + 336)];
    if (!v12)
      break;
    if (v6 >= 0xFFFFF880)
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
    }
    v13 = *(void **)(v0 + 368);
    v14 = v12;
    v15 = objc_msgSend(v13, sel_frameLength);
    v16 = v15 - v6;
    if (v15 < v6)
      goto LABEL_32;
    v17 = objc_msgSend(v14, sel_frameLength);
    v18 = 1920 - v17;
    if (v17 > 0x780)
      goto LABEL_33;
    if (v16 >= v6 + 1920)
      v19 = v6 + 1920;
    else
      v19 = v16;
    if (v18 >= v19)
      v20 = v19;
    else
      v20 = v18;
    v21 = (uint64_t *)objc_msgSend(v14, v8[308]);
    v0 = v47;
    if (v21)
    {
      v22 = *v21;
      v23 = (uint64_t *)objc_msgSend(*(id *)(v47 + 368), v8[308]);
      if (v23)
      {
        v46 = v7;
        v24 = *(void **)(v47 + 368);
        v25 = *v23;
        v26 = objc_msgSend(v14, sel_frameLength);
        v27 = objc_msgSend(v24, sel_format);
        v28 = (unsigned int *)objc_msgSend(v27, sel_streamDescription);

        v29 = v28[6] * (unint64_t)v20;
        if ((v20 * (unsigned __int128)v28[6]) >> 64 != v29 >> 63)
          goto LABEL_36;
        memcpy((void *)(v22 + 4 * v26), (const void *)(v25 + 4 * v6), v29);
        v7 = v46;
        v0 = v47;
        v8 = &selRef_randomObject_;
      }
    }
    v30 = objc_msgSend(v14, sel_frameLength);
    if (__CFADD__(v30, (_DWORD)v20))
      goto LABEL_34;
    objc_msgSend(v14, sel_setFrameLength_, v30 + v20);
    v31 = objc_msgSend(v14, sel_frameLength);
    if (v31 == objc_msgSend(v14, sel_frameCapacity))
    {
      v32 = (float **)objc_msgSend(v14, v8[308]);
      if (v32)
      {
        v33 = *v32;
        v34 = objc_msgSend(v14, sel_frameLength);
        vDSP_vabs(v33, 1, v33, 1, v34);
        *__C = NAN;
        vDSP_maxv(v33, 1, __C, v34);
        v35 = *__C;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1BDBCC490(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        v37 = *((_QWORD *)v7 + 2);
        v36 = *((_QWORD *)v7 + 3);
        v8 = &selRef_randomObject_;
        if (v37 >= v36 >> 1)
          v7 = sub_1BDBCC490((char *)(v36 > 1), v37 + 1, 1, v7);
        *((_QWORD *)v7 + 2) = v37 + 1;
        *(float *)&v7[4 * v37 + 32] = v35;
        objc_msgSend(v14, sel_setFrameLength_, 0);
      }
    }

    v9 = __CFADD__(v6, (_DWORD)v20);
    v6 += v20;
    if (v9)
      goto LABEL_35;
  }
  v38 = *(void **)(v0 + 368);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 112) = v7;
  v39 = v11;
  sub_1BDBFD17C();

  v40 = *(_QWORD *)(v0 + 384);
  *(_QWORD *)(v0 + 392) = v40;
  v41 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328));
  *(_QWORD *)(v0 + 400) = v41;
  swift_getKeyPath();
  *(_QWORD *)(v0 + 88) = v41;
  sub_1BDAC31B0(&qword_1EF50E980, (uint64_t (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator, (uint64_t)&protocol conformance descriptor for LiveTranscriptionCoordinator);
  sub_1BDBFCBF4();
  swift_release();
  swift_beginAccess();
  if (*(_BYTE *)(v41 + 56) == 1)
  {
    *(_QWORD *)(v0 + 408) = sub_1BDBFDB54();
    *(_QWORD *)(v0 + 416) = sub_1BDBFDADC();
    *(_QWORD *)(v0 + 424) = v42;
    return swift_task_switch();
  }
  else
  {
    sub_1BDAF107C(*(_QWORD *)(v0 + 200));
    *(_QWORD *)(v0 + 344) = v40;
    *(_QWORD *)(v0 + 352) = sub_1BDBFDB54();
    v44 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v44;
    *v44 = v0;
    v44[1] = sub_1BDBA4BD4;
    return sub_1BDBFDBFC();
  }
}

uint64_t sub_1BDBA56DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 432) = *(_QWORD *)(*(_QWORD *)(v0 + 400) + 40);
  return swift_task_switch();
}

uint64_t sub_1BDBA5748()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _BYTE *v6;

  sub_1BDAF1038(v0[25], v0[23]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v1 = *(void **)v0[23];
    v2 = *(void **)(v0[54] + 16);
    v3 = v0[49];
    if (!v2 || (v4 = v2, sub_1BDB9E578(v1), v5 = v3, v4, !v3))
    {
      v0[56] = v3;

      return swift_task_switch();
    }

  }
  else
  {
    sub_1BDAF107C(v0[23]);
    sub_1BDAC7614();
    v5 = swift_allocError();
    *v6 = 15;
    swift_willThrow();
  }
  v0[55] = v5;
  return swift_task_switch();
}

uint64_t sub_1BDBA5888()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BDBA58EC()
{
  uint64_t *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = (void *)v0[55];
  v2 = v1;
  v3 = v1;
  v4 = sub_1BDBFCE1C();
  v5 = sub_1BDBFDEE4();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (void *)v0[55];
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v8 + 4) = v11;
    *v9 = v11;

    _os_log_impl(&dword_1BD918000, v4, v5, "Transcription error: %@", (uint8_t *)v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v9, -1, -1);
    MEMORY[0x1C3B7B478](v8, -1, -1);

  }
  else
  {

  }
  sub_1BDAF107C(v0[25]);
  v0[43] = 0;
  v0[44] = sub_1BDBFDB54();
  v12 = (_QWORD *)swift_task_alloc();
  v0[45] = (uint64_t)v12;
  *v12 = v0;
  v12[1] = sub_1BDBA4BD4;
  return sub_1BDBFDBFC();
}

uint64_t sub_1BDBA5ABC()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BDBA5B20()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[56];
  sub_1BDAF107C(v0[25]);
  v0[43] = v1;
  v0[44] = sub_1BDBFDB54();
  v2 = (_QWORD *)swift_task_alloc();
  v0[45] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1BDBA4BD4;
  return sub_1BDBFDBFC();
}

uint64_t sub_1BDBA5BD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 200);
  swift_release();

  sub_1BDAF107C(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v6 = *(void **)(v0 + 384);
  v7 = v6;
  v8 = v6;
  v9 = sub_1BDBFCE1C();
  v10 = sub_1BDBFDEE4();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v6;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 104) = v14;
    sub_1BDBFE100();
    *v12 = v14;

    _os_log_impl(&dword_1BD918000, v9, v10, "Recording error: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v12, -1, -1);
    MEMORY[0x1C3B7B478](v11, -1, -1);

  }
  else
  {

  }
  sub_1BDBA5E14(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDBA5E14(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1BDBFC948();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF50B240 != -1)
    swift_once();
  v10 = sub_1BDBFCE34();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EF50F2D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  swift_bridgeObjectRetain_n();
  v11 = sub_1BDBFCE1C();
  v12 = sub_1BDBFDED8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136315394;
    swift_bridgeObjectRetain();
    v17 = sub_1BDAE53FC(a1, a2, &v18);
    sub_1BDBFE100();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1BDAC31B0(&qword_1ED23AB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v15 = sub_1BDBFE760();
    v17 = sub_1BDAE53FC(v15, v16, &v18);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1BD918000, v11, v12, "Recording task finished {subattachment: %s, url: %s}", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v14, -1, -1);
    MEMORY[0x1C3B7B478](v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

}

id AudioRecordingManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AudioRecordingManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AudioRecordingManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioRecordingManager(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BDBA6234@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AudioRecordingManager(0);
  result = sub_1BDBFD128();
  *a1 = result;
  return result;
}

uint64_t sub_1BDBA6270@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BDBFD170();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BDBA62EC(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_1BDBFD17C();
}

uint64_t (*AudioRecordingCoordinator.currentRecordingManager.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BDBFD164();
  return sub_1BDBA1630;
}

void sub_1BDBA63D8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t AudioRecordingCoordinator.$currentRecordingManager.getter()
{
  return sub_1BDBA6438((uint64_t)&OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager, &qword_1EF50F370);
}

uint64_t sub_1BDBA6438(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1BDBFD14C();
  return swift_endAccess();
}

uint64_t sub_1BDBA649C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a5);
  sub_1BDBFD14C();
  return swift_endAccess();
}

uint64_t sub_1BDBA6508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v18 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1BDBFD158();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t AudioRecordingCoordinator.$currentRecordingManager.setter(uint64_t a1)
{
  return sub_1BDBA663C(a1, &qword_1EF50F378, (uint64_t)&OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager, &qword_1EF50F370);
}

uint64_t sub_1BDBA663C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1BDBFD158();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*AudioRecordingCoordinator.$currentRecordingManager.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F378);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F370);
  sub_1BDBFD14C();
  swift_endAccess();
  return sub_1BDBA172C;
}

void sub_1BDBA67DC(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1BDBFD158();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_1BDBFD158();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t sub_1BDBA68F4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for AudioRecordingCoordinator(0);
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AD60);
  result = sub_1BDBFD140();
  qword_1ED23AD78 = v0;
  return result;
}

uint64_t static AudioRecordingCoordinator.sharedInstance.getter()
{
  if (qword_1ED23AD88 != -1)
    swift_once();
  return swift_retain();
}

uint64_t AudioRecordingCoordinator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AudioRecordingCoordinator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id static __ICAudioRecordingManager.currentAttachment.getter()
{
  if (qword_1ED23AD88 != -1)
    swift_once();
  return AudioRecordingCoordinator.currentAttachment.getter();
}

uint64_t static __ICAudioRecordingManager.cancelCurrentAudioRecordingSession()()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1BDBFDB60();
  v0[2] = sub_1BDBFDB54();
  v0[3] = sub_1BDBFDADC();
  v0[4] = v1;
  return swift_task_switch();
}

uint64_t sub_1BDBA6B3C()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_1ED23AD88 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1BDBA6BB0;
  return AudioRecordingCoordinator.cancelCurrentAudioRecordingSession()();
}

uint64_t sub_1BDBA6BB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDBA6C10()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA6C44()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA6D8C(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = a1;
  v1[3] = sub_1BDBFDB60();
  v1[4] = sub_1BDBFDB54();
  sub_1BDBFDADC();
  return swift_task_switch();
}

uint64_t sub_1BDBA6DFC()
{
  _QWORD *v0;
  const void *v1;
  uint64_t v2;

  v1 = (const void *)v0[2];
  swift_release();
  v0[5] = _Block_copy(v1);
  v0[6] = sub_1BDBFDB54();
  v0[7] = sub_1BDBFDADC();
  v0[8] = v2;
  return swift_task_switch();
}

uint64_t sub_1BDBA6E70()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_1ED23AD88 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1BDBA6EE4;
  return AudioRecordingCoordinator.cancelCurrentAudioRecordingSession()();
}

uint64_t sub_1BDBA6EE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDBA6F44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA6F8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release();
  v3 = (void *)sub_1BDBFC870();

  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  _Block_release(*(const void **)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id __ICAudioRecordingManager.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id __ICAudioRecordingManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BDBA709C(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id result;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  objc_class *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  objc_super v38;
  unint64_t v39;

  v36 = a1;
  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F310);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F300);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F2F0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v2[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState];
  v39 = 0x8000000000000000;
  v15 = v2;
  sub_1BDBFD140();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  v16 = &v15[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__seconds];
  v39 = 0;
  sub_1BDBFD140();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v9, v6);
  v17 = &v15[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples];
  v39 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE50);
  sub_1BDBFD140();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v17, v5, v35);
  *(_QWORD *)&v15[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_timeObserver] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_waveformBuffer] = 0;
  v18 = v37;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_liveTranscriptionCoordinator] = v36;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel] = v18;
  type metadata accessor for AVAudioEngineRecordingMethod(0);
  v19 = swift_allocObject();
  v20 = v19 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation;
  v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF50C6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_QWORD *)(v19 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter) = 0;
  v22 = objc_allocWithZone(MEMORY[0x1E0C89A88]);
  swift_retain();
  v23 = v18;
  v24 = objc_msgSend(v22, sel_init);
  *(_QWORD *)(v19 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_audioEngine) = v24;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_recordingMethod] = v19;
  result = objc_msgSend(v23, sel_attachment);
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend(result, sel_identifier);

    if (v27)
    {
      v28 = sub_1BDBFD6F8();
      v30 = v29;

    }
    else
    {
      v28 = 0;
      v30 = 0xE000000000000000;
    }
    v31 = (uint64_t *)&v15[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_identifier];
    *v31 = v28;
    v31[1] = v30;

    v32 = (objc_class *)type metadata accessor for AudioRecordingManager(0);
    v38.receiver = v15;
    v38.super_class = v32;
    return objc_msgSendSuper2(&v38, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDBA73BC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BDBA73E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BDAE2208;
  return sub_1BDBA26CC(a1, v4, v5, v6);
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BDBA7480(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BDAE2208;
  return sub_1BDBA2E58(a1, v4, v5, v6);
}

uint64_t type metadata accessor for AudioRecordingManager(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1ED23AD50);
}

uint64_t sub_1BDBA7508()
{
  uint64_t v0;

  sub_1BDB40674(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BDBA7534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBA649C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState, &qword_1EF50F2F0);
}

uint64_t sub_1BDBA7558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDBA6508(a1, a2, a3, a4, &qword_1EF50F2F8, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState, &qword_1EF50F2F0);
}

uint64_t sub_1BDBA7584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBA649C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__seconds, &qword_1EF50F300);
}

uint64_t sub_1BDBA75A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDBA6508(a1, a2, a3, a4, &qword_1EF50F308, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__seconds, &qword_1EF50F300);
}

uint64_t sub_1BDBA75D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBA649C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples, &qword_1EF50F310);
}

uint64_t sub_1BDBA75F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDBA6508(a1, a2, a3, a4, (uint64_t *)&unk_1EF50F318, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples, &qword_1EF50F310);
}

uint64_t sub_1BDBA7624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBA649C(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager, &qword_1EF50F370);
}

uint64_t sub_1BDBA7648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDBA6508(a1, a2, a3, a4, &qword_1EF50F378, (uint64_t)&OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager, &qword_1EF50F370);
}

uint64_t sub_1BDBA7674()
{
  return type metadata accessor for AudioRecordingManager(0);
}

void sub_1BDBA767C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BDBA7AE4(319, &qword_1ED23ADF8);
  if (v0 <= 0x3F)
  {
    sub_1BDBA7AE4(319, &qword_1ED23AE10);
    if (v1 <= 0x3F)
    {
      sub_1BDBA7BCC(319, &qword_1ED23AE08, &qword_1ED23AE50);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for AudioRecordingManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioRecordingManager.recordingState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AudioRecordingManager.recordingState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AudioRecordingManager.recordingState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AudioRecordingManager.seconds.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AudioRecordingManager.seconds.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AudioRecordingManager.seconds.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AudioRecordingManager.$seconds.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AudioRecordingManager.$seconds.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AudioRecordingManager.$seconds.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of AudioRecordingManager.samples.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of AudioRecordingManager.samples.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of AudioRecordingManager.samples.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of AudioRecordingManager.$samples.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of AudioRecordingManager.$samples.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of AudioRecordingManager.$samples.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of AudioRecordingManager.__allocating_init(liveTranscriptionCoordinator:attachmentModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of AudioRecordingManager.startRecording()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BDAC9D90;
  return v5();
}

uint64_t dispatch thunk of AudioRecordingManager.stopEverything()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BDAE2208;
  return v5();
}

uint64_t dispatch thunk of AudioRecordingManager.pauseRecording()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of AudioRecordingManager.resumeRecording()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BDAE2208;
  return v5();
}

void sub_1BDBA7AE4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BDBFD188();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BDBA7B28()
{
  return type metadata accessor for AudioRecordingCoordinator(0);
}

uint64_t type metadata accessor for AudioRecordingCoordinator(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1ED23AD90);
}

void sub_1BDBA7B44()
{
  unint64_t v0;

  sub_1BDBA7BCC(319, &qword_1ED23AE00, &qword_1ED23AD60);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AudioRecordingCoordinator()
{
  return swift_lookUpClassMethod();
}

void sub_1BDBA7BCC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1BDBFD188();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for __ICAudioRecordingManager()
{
  return objc_opt_self();
}

uint64_t sub_1BDBA7C38()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BDBA7C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BDAE2208;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1EF50F3A0 + dword_1EF50F3A0))(v2);
}

uint64_t sub_1BDBA7CD0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BDBA7CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BDB25378(a1, a2, v2);
}

uint64_t sub_1BDBA7CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BDBFC948();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1BDBA7D94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_1BDBFC948() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1BDAC9D90;
  return sub_1BDBA452C(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1BDBA7E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

NSProgress __swiftcall NSProgress.addingChild(totalUnitCount:pendingUnitCount:)(Swift::Int64 totalUnitCount, Swift::Int64 pendingUnitCount)
{
  void *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38A8]), sel_init);
  objc_msgSend(v5, sel_setTotalUnitCount_, totalUnitCount);
  objc_msgSend(v2, sel_addChild_withPendingUnitCount_, v5, pendingUnitCount);
  return (NSProgress)v5;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSProgress.throwIfCancelled()()
{
  void *v0;
  id v1;
  void *v2;

  if ((objc_msgSend(v0, sel_isCancelled) & 1) != 0)
  {
    sub_1BDBFD6F8();
    v1 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v2 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_initWithDomain_code_userInfo_, v2, 3072, 0);

    swift_willThrow();
  }
}

uint64_t Collection.nonEmpty.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_1BDBFDDDC();
  v6 = *(_QWORD *)(a1 - 8);
  if ((v5 & 1) != 0)
  {
    v7 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, v2, a1);
    v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v7, 1, a1);
}

uint64_t Collection.only.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void (*v6)(_BYTE *, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v5 = &v13[-v4];
  if (sub_1BDBFDDD0() == 1)
  {
    sub_1BDBFDDC4();
    v6 = (void (*)(_BYTE *, _QWORD))sub_1BDBFDE3C();
    v8 = v7;
    v9 = swift_getAssociatedTypeWitness();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v8, v9);
    v6(v13, 0);
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  else
  {
    v12 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

uint64_t Dictionary.mapKeys<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[10];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  v22 = a3;
  v21[2] = a4;
  v21[3] = a5;
  v21[4] = a6;
  v21[5] = a7;
  v27 = a8;
  v21[6] = a8;
  v21[7] = a1;
  v21[8] = a2;
  v11 = sub_1BDBFD5D8();
  swift_bridgeObjectRetain();
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
  v13 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DE9ED8], v11);
  v14 = sub_1BDACB9A8((void (*)(char *, char *))sub_1BDBA8378, (uint64_t)v21, v11, a6, v12, v13, MEMORY[0x1E0DEDB38], (uint64_t)v26);
  result = swift_bridgeObjectRelease();
  if (!v8)
  {
    v22 = v14;
    *(_QWORD *)&v26[0] = a3;
    v16 = sub_1BDBFDAAC();
    v17 = sub_1BDBFD5E4();
    v18 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEAF38], v16);
    v19 = MEMORY[0x1C3B7B388](MEMORY[0x1E0DE9F98], v17);
    sub_1BDBFE97C();
    swift_bridgeObjectRelease();
    v26[0] = v26[1];
    v22 = v16;
    v23 = v17;
    v24 = v18;
    v25 = v19;
    v20 = sub_1BDBFE358();
    MEMORY[0x1C3B7B388](MEMORY[0x1E0DEC3A0], v20);
    return sub_1BDBFD5CC();
  }
  return result;
}

uint64_t sub_1BDBA8378(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v2 + 56))();
  if (v3)
    *a2 = v3;
  return result;
}

void sub_1BDBA83A8()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_newOperationQueueWithName_, v1);

  qword_1EF50F3D8 = (uint64_t)v2;
}

uint64_t static ICSearchQueryOperation.suggestionSearchResults(linkSuggestionQuery:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1BDBA846C()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F3E8);
  *v2 = v0;
  v2[1] = sub_1BDBA8520;
  return sub_1BDBFE958();
}

uint64_t sub_1BDBA8520()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDBA858C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BDBA8598()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDBA85CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F428);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  if (qword_1EF50B250 != -1)
    swift_once();
  objc_msgSend((id)qword_1EF50F3D8, sel_cancelAllOperations);
  v8 = objc_msgSend(objc_allocWithZone((Class)ICSearchQueryOperation), sel_initWithLinkSuggestionQuery_, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_1BDBA9010;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB24AB0;
  aBlock[3] = &block_descriptor_14;
  v11 = _Block_copy(aBlock);
  v12 = v8;
  swift_release();
  objc_msgSend(v12, sel_setCompletionBlock_, v11);
  _Block_release(v11);

  objc_msgSend((id)qword_1EF50F3D8, sel_addOperation_, v12);
}

void sub_1BDBA8788(uint64_t a1)
{
  uint64_t v1;

  sub_1BDBA85CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BDBA8790(void *a1)
{
  id v3;
  void *v4;

  if (objc_msgSend(a1, sel_error))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F428);
    return sub_1BDBFDAF4();
  }
  else
  {
    v3 = objc_msgSend(a1, sel_results);
    if (v3)
    {
      v4 = v3;
      sub_1BDBA8F5C();
      sub_1BDBFD9D4();

    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F428);
    return sub_1BDBFDB00();
  }
}

uint64_t sub_1BDBA8990(void *a1, void *aBlock)
{
  _QWORD *v2;
  id v4;

  v2[3] = a1;
  v2[4] = _Block_copy(aBlock);
  v2[5] = swift_getObjCClassMetadata();
  v4 = a1;
  return swift_task_switch();
}

uint64_t sub_1BDBA89EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = v0[3];
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F3E8);
  *v4 = v0;
  v4[1] = sub_1BDBA8AA0;
  return sub_1BDBFE958();
}

uint64_t sub_1BDBA8AA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BDBA8B0C()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);

  sub_1BDBA8F5C();
  v1 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 32);
  ((void (**)(_QWORD, void *, _QWORD))v2)[2](v2, v1, 0);

  _Block_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA8B84()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);

  v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  v2 = (void *)sub_1BDBFC870();

  v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 32);
  ((void (**)(_QWORD, _QWORD, void *))v3)[2](v3, 0, v2);

  _Block_release(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBA8BFC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1BDBA8C28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BDAE2208;
  return ((uint64_t (*)(void *, void *))((char *)&dword_1EF50F3F0 + dword_1EF50F3F0))(v2, v3);
}

uint64_t sub_1BDBA8C94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1BDAE2208;
  return v6();
}

uint64_t sub_1BDBA8CEC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1BDAE2208;
  return v7();
}

uint64_t sub_1BDBA8D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BDBFDBC0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BDBFDBB4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BDBA8E88(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BDBFDADC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BDBA8E88(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDBA8EC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BDBA8EEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BDAC9D90;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF50F410 + dword_1EF50F410))(a1, v4);
}

unint64_t sub_1BDBA8F5C()
{
  unint64_t result;

  result = qword_1EF50F420;
  if (!qword_1EF50F420)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50F420);
  }
  return result;
}

uint64_t sub_1BDBA8F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F428);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BDBA9010()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F428);
  return sub_1BDBA8790(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_1BDBA9060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1EF50F430);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF50F430);
  if (qword_1ED23B0E8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23AEF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t ShareActivityEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ShareActivityEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

void (*ShareActivityEvent.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ShareActivityEvent.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for ShareActivityEvent() + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ShareActivityEvent()
{
  uint64_t result;

  result = qword_1EF50F4A8;
  if (!qword_1EF50F4A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ShareActivityEvent.object.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = v1 + *(int *)(type metadata accessor for ShareActivityEvent() + 20);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_QWORD *)(v5 + 16) = v4;
  return result;
}

void (*ShareActivityEvent.object.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for ShareActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ShareActivityEvent.participant.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ShareActivityEvent() + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ShareActivityEvent.participant.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for ShareActivityEvent() + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

void (*ShareActivityEvent.participant.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for ShareActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ShareActivityEvent.hash(into:)()
{
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BDBFD620();
  type metadata accessor for ShareActivityEvent();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t ShareActivityEvent.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BDBFD620();
  type metadata accessor for ShareActivityEvent();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBA95A4()
{
  sub_1BDBFEA0C();
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BDBFD620();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return sub_1BDBFEA30();
}

uint64_t ShareActivityEvent.init(cloudSyncingObject:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  ICCloudSyncingObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _QWORD *v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NotesShared::ActivityEventObject_optional v58;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFCAC8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v50 - v12;
  v14 = type metadata accessor for ShareActivityEvent();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isSharedRootObject))
  {
    v53 = v15;
    v18 = objc_msgSend(a1, sel_serverShare);
    if (v18)
    {
      v19 = v18;
      v52 = a2;
      v20 = objc_msgSend(v18, sel_creationDate);
      if (v20)
      {
        v21 = v20;
        sub_1BDBFCAA4();

        v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v22(v6, v11, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
        {
          v22(v13, v6, v7);
          v23 = a1;
          v58 = ActivityEventObject.init(cloudSyncingObject:)(v23);
          v24 = v56;
          if (v56)
          {
            v25 = v55;
            v51 = v54 & 1;
            if (-[ICCloudSyncingObject isOwnedByCurrentUser](v23, sel_isOwnedByCurrentUser, v58.value.recordName._object))
            {
              ActivityEventParticipant.init(cloudSyncingObject:)(v23);

              v26 = v55;
              if (v55)
              {
                v27 = v56;
                v50 = v57;
                v28 = v25;
                v29 = v54;
                v22(v17, v13, v7);
                v30 = &v17[*(int *)(v14 + 20)];
                *v30 = v51;
                *((_QWORD *)v30 + 1) = v28;
                *((_QWORD *)v30 + 2) = v24;
                v31 = &v17[*(int *)(v14 + 24)];
                *(_QWORD *)v31 = v29;
LABEL_25:
                *((_QWORD *)v31 + 1) = v26;
                *((_QWORD *)v31 + 2) = v27;
                *((_QWORD *)v31 + 3) = v50;
                a2 = v52;
                sub_1BDBA9EE4((uint64_t)v17, v52);
                v32 = 0;
                v15 = v53;
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v32, 1, v14);
              }
            }
            else
            {
              ActivityEventParticipant.init(participant:)((CKShareParticipant)objc_msgSend(v19, sel_owner));

              v26 = v55;
              if (v55)
              {
                v27 = v56;
                v50 = v57;
                v47 = v54;
                v22(v17, v13, v7);
                v48 = &v17[*(int *)(v14 + 20)];
                *v48 = v51;
                *((_QWORD *)v48 + 1) = v25;
                *((_QWORD *)v48 + 2) = v24;
                v31 = &v17[*(int *)(v14 + 24)];
                *(_QWORD *)v31 = v47;
                goto LABEL_25;
              }
            }
            (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
            swift_bridgeObjectRelease();
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
          }
          goto LABEL_27;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      }
      sub_1BDACDF68((uint64_t)v6);
      if (qword_1EF50B258 != -1)
        swift_once();
      v40 = sub_1BDBFCE34();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EF50F430);
      v41 = a1;
      v42 = sub_1BDBFCE1C();
      v43 = sub_1BDBFDEE4();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v44 = 138412290;
        v46 = objc_msgSend(v41, sel_objectID);
        v54 = v46;
        sub_1BDBFE100();
        *v45 = v46;

        _os_log_impl(&dword_1BD918000, v42, v43, "Object share must have a creation date — returning nil {objectID: %@}", v44, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
        v32 = 1;
        swift_arrayDestroy();
        MEMORY[0x1C3B7B478](v45, -1, -1);
        MEMORY[0x1C3B7B478](v44, -1, -1);

LABEL_28:
        a2 = v52;
        v15 = v53;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v32, 1, v14);
      }

LABEL_27:
      v32 = 1;
      goto LABEL_28;
    }
    if (qword_1EF50B258 != -1)
      swift_once();
    v33 = sub_1BDBFCE34();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EF50F430);
    v34 = a1;
    v35 = sub_1BDBFCE1C();
    v36 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v37 = 138412290;
      v39 = objc_msgSend(v34, sel_objectID);
      v54 = v39;
      sub_1BDBFE100();
      *v38 = v39;

      _os_log_impl(&dword_1BD918000, v35, v36, "Object must have a share — returning nil {objectID: %@}", v37, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v38, -1, -1);
      MEMORY[0x1C3B7B478](v37, -1, -1);

    }
    else
    {

    }
    v32 = 1;
    v15 = v53;
  }
  else
  {

    v32 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v32, 1, v14);
}

uint64_t _s11NotesShared18ShareActivityEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v17;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  if ((sub_1BDBFCA98() & 1) == 0)
    return 0;
  v4 = type metadata accessor for ShareActivityEvent();
  v5 = *(int *)(v4 + 20);
  v6 = *(unsigned __int8 *)(a1 + v5);
  v8 = *(_QWORD *)(a1 + v5 + 8);
  v7 = *(_QWORD *)(a1 + v5 + 16);
  v9 = a2 + v5;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  if (v6)
    v12 = 1702129518;
  else
    v12 = 0x7265646C6F66;
  if (v6)
    v13 = 0xE400000000000000;
  else
    v13 = 0xE600000000000000;
  if (*(_BYTE *)v9)
    v14 = 1702129518;
  else
    v14 = 0x7265646C6F66;
  if (*(_BYTE *)v9)
    v15 = 0xE400000000000000;
  else
    v15 = 0xE600000000000000;
  if (v12 == v14 && v13 == v15)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_1BDBFE874();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  if (v8 == v11 && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v20 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v20 & 1) == 0)
      return result;
  }
  v21 = *(int *)(v4 + 24);
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  if (v22 == *v24 && v23 == v24[1])
    return 1;
  else
    return sub_1BDBFE874();
}

uint64_t sub_1BDBA9EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDBA9F28()
{
  return sub_1BDAC31B0(&qword_1EF50F448, (uint64_t (*)(uint64_t))type metadata accessor for ShareActivityEvent, (uint64_t)&protocol conformance descriptor for ShareActivityEvent);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareActivityEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BDBFCAC8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ShareActivityEvent(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = (_OWORD *)(a1 + v8);
  v12 = (_OWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t assignWithTake for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareActivityEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBAA308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BDBFCAC8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareActivityEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBAA394(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1BDBAA410()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCAC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

NotesShared::AttachmentID __swiftcall AttachmentID.init(contextType:managedIdentifier:)(NotesShared::ManagedEntityContextType_optional contextType, Swift::String managedIdentifier)
{
  uint64_t v2;
  NotesShared::AttachmentID result;

  *(_BYTE *)v2 = *(_BYTE *)contextType.value;
  *(Swift::String *)(v2 + 8) = managedIdentifier;
  result.managedIdentifier = managedIdentifier;
  result.contextType = contextType;
  return result;
}

uint64_t static AttachmentID.uriTypeName.getter()
{
  return 0x656D686361747461;
}

void AttachmentID.contextType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AttachmentID.contextType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void (*AttachmentID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AttachmentID.managedIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AttachmentID.managedIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

void (*AttachmentID.managedIdentifier.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AttachmentID.hash(into:)()
{
  _BYTE *v0;

  if (*v0 == 2)
  {
    sub_1BDBFEA24();
  }
  else
  {
    sub_1BDBFEA24();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t AttachmentID.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1BDBFEA0C();
  sub_1BDBFEA24();
  if (v1 != 2)
  {
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBAA6C4()
{
  return 0x656D686361747461;
}

uint64_t sub_1BDBAA6E0()
{
  unsigned __int8 *v0;

  return sub_1BDBAB30C(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2));
}

uint64_t sub_1BDBAA6EC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAC1EA0(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2), (uint64_t)v3);
  v4 = sub_1BDBFC948();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BDACDBAC((uint64_t)v3);
    return 0;
  }
  else
  {
    v6 = sub_1BDBFC8A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

unint64_t sub_1BDBAA7D0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BDBAA7FC();
  result = sub_1BDBAA840();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BDBAA7FC()
{
  unint64_t result;

  result = qword_1EF50F4E8;
  if (!qword_1EF50F4E8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AttachmentID, &type metadata for AttachmentID);
    atomic_store(result, (unint64_t *)&qword_1EF50F4E8);
  }
  return result;
}

unint64_t sub_1BDBAA840()
{
  unint64_t result;

  result = qword_1EF50F4F0;
  if (!qword_1EF50F4F0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AttachmentID, &type metadata for AttachmentID);
    atomic_store(result, (unint64_t *)&qword_1EF50F4F0);
  }
  return result;
}

unint64_t sub_1BDBAA884(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BDBAA8B8();
  a1[2] = sub_1BDBAA8FC();
  result = sub_1BDBAA940();
  a1[3] = result;
  return result;
}

unint64_t sub_1BDBAA8B8()
{
  unint64_t result;

  result = qword_1EF50F4F8;
  if (!qword_1EF50F4F8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AttachmentID, &type metadata for AttachmentID);
    atomic_store(result, (unint64_t *)&qword_1EF50F4F8);
  }
  return result;
}

unint64_t sub_1BDBAA8FC()
{
  unint64_t result;

  result = qword_1EF50F500;
  if (!qword_1EF50F500)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AttachmentID, &type metadata for AttachmentID);
    atomic_store(result, (unint64_t *)&qword_1EF50F500);
  }
  return result;
}

unint64_t sub_1BDBAA940()
{
  unint64_t result;

  result = qword_1EF50F508;
  if (!qword_1EF50F508)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AttachmentID, &type metadata for AttachmentID);
    atomic_store(result, (unint64_t *)&qword_1EF50F508);
  }
  return result;
}

unint64_t sub_1BDBAA988()
{
  unint64_t result;

  result = qword_1EF50F510;
  if (!qword_1EF50F510)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AttachmentID, &type metadata for AttachmentID);
    atomic_store(result, (unint64_t *)&qword_1EF50F510);
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentID()
{
  return &type metadata for AttachmentID;
}

void sub_1BDBAA9E0(void *a1, unint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  char *v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  char *v29;
  unint64_t *v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  objc_super v44;

  v39 = a2;
  v3 = sub_1BDBFD5A8();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E230);
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E160);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E168);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AB78);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE28);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (objc_class *)type metadata accessor for ICSystemPaperDocument();
  v19 = (char *)objc_allocWithZone(v18);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a1;
  v44.receiver = v19;
  v44.super_class = v18;
  v20 = a1;
  v21 = (char *)objc_msgSendSuper2(&v44, sel_init);
  v22 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment], sel_managedObjectContext);
  if (v22
    && (v23 = v22,
        MEMORY[0x1E0C80A78](v22),
        *(&v35 - 2) = (uint64_t)v21,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AE30),
        sub_1BDBFDFF8(),
        v23,
        (v24 = v43) != 0))
  {
    sub_1BDB592AC((uint64_t)v43, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {

      sub_1BDAC350C((uint64_t)v13, &qword_1ED23AB78);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
      swift_getKeyPath();
      sub_1BDBAB1E8();
      sub_1BDBFD4F4();
      swift_release();
      v26 = v41;
      v25 = v42;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v8, 1, v42) == 1)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

        sub_1BDAC350C((uint64_t)v8, &qword_1EF50E160);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v40, v8, v25);
        sub_1BDBAB230();
        sub_1BDBFD4C4();
        v27 = objc_allocWithZone((Class)sub_1BDBFD32C());
        v28 = (void *)sub_1BDBFD320();
        v29 = v36;
        sub_1BDBFD59C();
        v30 = v39;
        v31 = *v39;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v30 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v31 = sub_1BDBCC820(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
          *v39 = v31;
        }
        v34 = *(_QWORD *)(v31 + 16);
        v33 = *(_QWORD *)(v31 + 24);
        if (v34 >= v33 >> 1)
        {
          v31 = sub_1BDBCC820(v33 > 1, v34 + 1, 1, v31);
          *v39 = v31;
        }
        *(_QWORD *)(v31 + 16) = v34 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v31+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v34, v29, v38);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      }
    }
  }
  else
  {

  }
}

uint64_t sub_1BDBAAE5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E160);
  MEMORY[0x1E0C80A78](v2);
  sub_1BDBAB27C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1BDBFD278();
}

id ICSystemPaperDrawingsHelper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ICSystemPaperDrawingsHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICSystemPaperDrawingsHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ICSystemPaperDrawingsHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICSystemPaperDrawingsHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s11NotesShared27ICSystemPaperDrawingsHelperC21drawingsForAttachmentySay9PencilKit9PKDrawingVGSo12ICAttachmentCFZ_0(void *a1)
{
  uint64_t v2;
  void (*v3)();
  void (*v4)();
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  _QWORD aBlock[6];
  uint64_t v11;

  v2 = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEE9D8];
  v3 = (void (*)())objc_msgSend(a1, sel_managedObjectContext);
  if (!v3)
    goto LABEL_4;
  v4 = v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = &v11;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1BDBAB194;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_1BDB42B40;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDBC55F0;
  aBlock[3] = &block_descriptor_15;
  v7 = _Block_copy(aBlock);
  v8 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) == 0)
  {
    v3 = sub_1BDBAB194;
    v2 = v11;
LABEL_4:
    sub_1BDAE1FE0((uint64_t)v3);
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ICSystemPaperDrawingsHelper()
{
  return objc_opt_self();
}

uint64_t sub_1BDBAB170()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BDBAB194()
{
  uint64_t v0;

  sub_1BDBAA9E0(*(void **)(v0 + 16), *(unint64_t **)(v0 + 24));
}

uint64_t sub_1BDBAB19C()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t sub_1BDBAB1C4()
{
  return sub_1BDBFD26C();
}

unint64_t sub_1BDBAB1E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50E188;
  if (!qword_1EF50E188)
  {
    v1 = sub_1BDBFD284();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0D65410], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50E188);
  }
  return result;
}

unint64_t sub_1BDBAB230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50E248;
  if (!qword_1EF50E248)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF50E168);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0D12878], v1);
    atomic_store(result, (unint64_t *)&qword_1EF50E248);
  }
  return result;
}

uint64_t sub_1BDBAB27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDBAB2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBAB330(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BDAC1E8C, 0xD000000000000016, 0x80000001BDC3A650);
}

uint64_t sub_1BDBAB2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBAB330(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BDAC246C, 0xD000000000000014, 0x80000001BDC3A630);
}

uint64_t sub_1BDBAB30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBAB330(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BDAC1EA0, 0xD00000000000001ALL, 0x80000001BDC3A610);
}

uint64_t sub_1BDBAB330(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, unint64_t a6)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  unint64_t v25;

  v12 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12 != 2)
  {
    v16 = 1819112552;
    if ((a1 & 1) == 0)
      v16 = 0x6E7265646F6DLL;
    v17 = 0xE400000000000000;
    if ((a1 & 1) == 0)
      v17 = 0xE600000000000000;
    v24 = v16;
    v25 = v17;
    sub_1BDBFD74C();
  }
  a4(a1, a2, a3);
  v18 = sub_1BDBFC948();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
  {
    sub_1BDACDBAC((uint64_t)v15);
    v20 = 0;
    v21 = 0xE000000000000000;
  }
  else
  {
    v20 = sub_1BDBFC8A0();
    v21 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v18);
  }
  v24 = v20;
  v25 = v21;
  sub_1BDBFD74C();
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  v24 = a5;
  v25 = a6;
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return v24;
}

NotesShared::TableID __swiftcall TableID.init(contextType:managedIdentifier:)(NotesShared::ManagedEntityContextType_optional contextType, Swift::String managedIdentifier)
{
  uint64_t v2;
  NotesShared::TableID result;

  *(_BYTE *)v2 = *(_BYTE *)contextType.value;
  *(Swift::String *)(v2 + 8) = managedIdentifier;
  result.managedIdentifier = managedIdentifier;
  result.contextType = contextType;
  return result;
}

uint64_t static TableID.uriTypeName.getter()
{
  return 0x656C626174;
}

void TableID.contextType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TableID.contextType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void (*TableID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t TableID.managedIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TableID.managedIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

void (*TableID.managedIdentifier.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t TableID.hash(into:)()
{
  _BYTE *v0;

  if (*v0 == 2)
  {
    sub_1BDBFEA24();
  }
  else
  {
    sub_1BDBFEA24();
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t TableID.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1BDBFEA0C();
  sub_1BDBFEA24();
  if (v1 != 2)
  {
    sub_1BDBFD794();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBAB750()
{
  return 0x656C626174;
}

uint64_t sub_1BDBAB764()
{
  unsigned __int8 *v0;

  return sub_1BDBAB330(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BDAC247C, 0xD000000000000015, 0x80000001BDC3A5F0);
}

uint64_t sub_1BDBAB7A0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B1B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDAC247C(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2), (uint64_t)v3);
  v4 = sub_1BDBFC948();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BDACDBAC((uint64_t)v3);
    return 0;
  }
  else
  {
    v6 = sub_1BDBFC8A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

unint64_t sub_1BDBAB884(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BDBAB8B0();
  result = sub_1BDBAB8F4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BDBAB8B0()
{
  unint64_t result;

  result = qword_1EF50F540;
  if (!qword_1EF50F540)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableID, &type metadata for TableID);
    atomic_store(result, (unint64_t *)&qword_1EF50F540);
  }
  return result;
}

unint64_t sub_1BDBAB8F4()
{
  unint64_t result;

  result = qword_1EF50F548;
  if (!qword_1EF50F548)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableID, &type metadata for TableID);
    atomic_store(result, (unint64_t *)&qword_1EF50F548);
  }
  return result;
}

unint64_t sub_1BDBAB938(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BDBAB96C();
  a1[2] = sub_1BDBAB9B0();
  result = sub_1BDBAB9F4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BDBAB96C()
{
  unint64_t result;

  result = qword_1EF50F550;
  if (!qword_1EF50F550)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableID, &type metadata for TableID);
    atomic_store(result, (unint64_t *)&qword_1EF50F550);
  }
  return result;
}

unint64_t sub_1BDBAB9B0()
{
  unint64_t result;

  result = qword_1EF50F558;
  if (!qword_1EF50F558)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableID, &type metadata for TableID);
    atomic_store(result, (unint64_t *)&qword_1EF50F558);
  }
  return result;
}

unint64_t sub_1BDBAB9F4()
{
  unint64_t result;

  result = qword_1EF50F560;
  if (!qword_1EF50F560)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableID, &type metadata for TableID);
    atomic_store(result, (unint64_t *)&qword_1EF50F560);
  }
  return result;
}

unint64_t sub_1BDBABA3C()
{
  unint64_t result;

  result = qword_1EF50F568;
  if (!qword_1EF50F568)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for TableID, &type metadata for TableID);
    atomic_store(result, (unint64_t *)&qword_1EF50F568);
  }
  return result;
}

ValueMetadata *type metadata accessor for TableID()
{
  return &type metadata for TableID;
}

Swift::Void __swiftcall NSUndoManager.registerUndo(for:cloudSyncingObject:)(ICCloudSyncingObjectActivityEvent_optional a1, ICCloudSyncingObject_optional *cloudSyncingObject)
{
  NSData *data;
  Class isa;
  objc_class *v4;
  NSData *v5;

  if (a1.value.super.isa)
  {
    data = a1.value._data;
    if (a1.value._data)
    {
      isa = a1.value.super.isa;
      *(_QWORD *)(swift_allocObject() + 16) = a1.value.super.isa;
      sub_1BDBABB84();
      v4 = isa;
      v5 = data;
      sub_1BDBFDEC0();

      swift_release();
    }
  }
}

uint64_t sub_1BDBABB38()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BDBABB5C(ICCloudSyncingObjectActivityEvent a1@<0:X0, 8:X1, 16:X2>)
{
  uint64_t v1;

  a1.super.isa = *(Class *)(v1 + 16);
  ICCloudSyncingObject.remove(cloudSyncingObjectActivityEvent:)(a1);
}

unint64_t sub_1BDBABB84()
{
  unint64_t result;

  result = qword_1EF50DC10;
  if (!qword_1EF50DC10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF50DC10);
  }
  return result;
}

uint64_t sub_1BDBABBC0(uint64_t result, uint64_t a2, void *a3, void *a4)
{
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  if (a3)
  {
    if (a4)
    {
      v6 = (void *)result;
      *(_QWORD *)(swift_allocObject() + 16) = a3;
      sub_1BDBABB84();
      v7 = a3;
      v8 = a4;
      v9 = v7;
      v10 = v8;
      v11 = v6;
      sub_1BDBFDEC0();

      return swift_release();
    }
  }
  return result;
}

void sub_1BDBABC9C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  v5 = v4;

  qword_1EF50F570 = v3;
  *(_QWORD *)algn_1EF50F578 = v5;
}

uint64_t static NotesSiriLocalization.notesText.getter()
{
  return sub_1BDBAC89C(&qword_1EF50B260, &qword_1EF50F570);
}

uint64_t static NotesSiriLocalization.noteSubtitleText(folderString:accountString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_1BDBFD6C8();
  v10 = (void *)sub_1BDBFD6C8();
  v11 = objc_msgSend(v8, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v9, v10, 0, 1);

  sub_1BDBFD6F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BDC17EC0;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BD942A90();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 72) = a3;
  *(_QWORD *)(v12 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1BDBFD6D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1BDBABEBC()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  v5 = v4;

  qword_1EF50F580 = v3;
  *(_QWORD *)algn_1EF50F588 = v5;
}

uint64_t static NotesSiriLocalization.lockedText.getter()
{
  return sub_1BDBAC89C(&qword_1EF50B268, &qword_1EF50F580);
}

void sub_1BDBABF7C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  v5 = v4;

  qword_1EF50F590 = v3;
  *(_QWORD *)algn_1EF50F598 = v5;
}

uint64_t static NotesSiriLocalization.unsupportedTitle.getter()
{
  return sub_1BDBAC89C(&qword_1EF50B270, &qword_1EF50F590);
}

void sub_1BDBAC03C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  v5 = v4;

  qword_1EF50F5A0 = v3;
  *(_QWORD *)algn_1EF50F5A8 = v5;
}

uint64_t static NotesSiriLocalization.unsupportedDescription.getter()
{
  return sub_1BDBAC89C(&qword_1EF50B278, &qword_1EF50F5A0);
}

void sub_1BDBAC0FC()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  v5 = v4;

  qword_1EF50F5B0 = v3;
  *(_QWORD *)algn_1EF50F5B8 = v5;
}

uint64_t static NotesSiriLocalization.openNoteDescription.getter()
{
  return sub_1BDBAC89C(&qword_1EF50B280, &qword_1EF50F5B0);
}

uint64_t static NotesSiriLocalization.plusText()()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = (void *)sub_1BDBFD6C8();
  v3 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, v2, 0, 1);

  sub_1BDBFD6F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BDC16BA0;
  v5 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 32) = 25;
  v6 = sub_1BDBFD6D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static NotesSiriLocalization.axFolderText(folderName:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1BDBFD6C8();
  v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 1);

  sub_1BDBFD6F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1BD942A90();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  v8 = sub_1BDBFD6D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t static NotesSiriLocalization.axAccountText(accountName:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1BDBFD6C8();
  v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 1);

  sub_1BDBFD6F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1BD942A90();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  v8 = sub_1BDBFD6D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

char *static NotesSiriLocalization.axNoteCountText(count:)(uint64_t a1)
{
  uint64_t inited;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A650);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  v3 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 32) = a1;
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1BDBFD6C8();
  v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 0);

  v7 = sub_1BDBFD6F8();
  v9 = v8;

  swift_bridgeObjectRetain();
  v10 = sub_1BDB8F750(inited, v7, v9);
  swift_bridgeObjectRelease_n();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23B158);
  swift_arrayDestroy();
  return v10;
}

void sub_1BDBAC65C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  v5 = v4;

  qword_1EF50F5C0 = v3;
  *(_QWORD *)algn_1EF50F5C8 = v5;
}

uint64_t static NotesSiriLocalization.noteListInteractionText.getter()
{
  return sub_1BDBAC89C(&qword_1EF50B288, &qword_1EF50F5C0);
}

void sub_1BDBAC71C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  v5 = v4;

  qword_1EF50F5D0 = v3;
  *(_QWORD *)algn_1EF50F5D8 = v5;
}

uint64_t static NotesSiriLocalization.noteInteractionText.getter()
{
  return sub_1BDBAC89C(&qword_1EF50B290, &qword_1EF50F5D0);
}

void sub_1BDBAC7DC()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  v3 = sub_1BDBFD6F8();
  v5 = v4;

  qword_1EF50F5E0 = v3;
  *(_QWORD *)algn_1EF50F5E8 = v5;
}

uint64_t static NotesSiriLocalization.headerInteractionText.getter()
{
  return sub_1BDBAC89C(&qword_1EF50B298, &qword_1EF50F5E0);
}

uint64_t sub_1BDBAC89C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for NotesSiriLocalization()
{
  return &type metadata for NotesSiriLocalization;
}

uint64_t sub_1BDBAC8FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A950);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_1BDBAD720();
  return sub_1BDBFDC80();
}

id NSManagedObjectContext.ObjectIDNotification.context.getter()
{
  id *v0;

  return *v0;
}

void NSManagedObjectContext.ObjectIDNotification.context.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

void (*NSManagedObjectContext.ObjectIDNotification.context.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NSManagedObjectContext.ObjectIDNotification.insertedObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NSManagedObjectContext.ObjectIDNotification.insertedObjectIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

void (*NSManagedObjectContext.ObjectIDNotification.insertedObjectIDs.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NSManagedObjectContext.ObjectIDNotification.updatedObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NSManagedObjectContext.ObjectIDNotification.updatedObjectIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

void (*NSManagedObjectContext.ObjectIDNotification.updatedObjectIDs.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void static NSManagedObjectContext._makeObjectIDNotification(_:)(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  sub_1BDBFC498();
  if (!v18)
  {
    __break(1u);
    goto LABEL_25;
  }
  sub_1BD942258(&v17, v14);
  sub_1BDBACCC8();
  swift_dynamicCast();
  v2 = v15;
  v3 = sub_1BDBFC4A4();
  if (!v3)
  {
LABEL_25:
    __break(1u);
    return;
  }
  v4 = v3;
  v12 = sub_1BDBFD6F8();
  sub_1BDBFE298();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1BDB6AC84((uint64_t)v14), (v6 & 1) != 0))
  {
    sub_1BDAE0BA0(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  sub_1BDB3B22C((uint64_t)v14);
  if (*((_QWORD *)&v16 + 1))
  {
    sub_1BD942258(&v15, &v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A928);
    swift_dynamicCast();
    v7 = v12;
  }
  else
  {
    sub_1BDB3B1EC((uint64_t)&v15);
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1BDBFE574())
    {
      sub_1BDAEE024(MEMORY[0x1E0DEE9D8]);
      v7 = v11;
    }
    else
    {
      v7 = MEMORY[0x1E0DEE9E8];
    }
  }
  v13 = sub_1BDBFD6F8();
  sub_1BDBFE298();
  if (*(_QWORD *)(v4 + 16) && (v8 = sub_1BDB6AC84((uint64_t)v14), (v9 & 1) != 0))
  {
    sub_1BDAE0BA0(*(_QWORD *)(v4 + 56) + 32 * v8, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BDB3B22C((uint64_t)v14);
  if (*((_QWORD *)&v16 + 1))
  {
    sub_1BD942258(&v15, &v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A928);
    swift_dynamicCast();
    v10 = v13;
  }
  else
  {
    sub_1BDB3B1EC((uint64_t)&v15);
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1BDBFE574())
      sub_1BDAEE024(MEMORY[0x1E0DEE9D8]);
    else
      v10 = MEMORY[0x1E0DEE9E8];
  }
  *a1 = v2;
  a1[1] = v7;
  a1[2] = v10;
}

unint64_t sub_1BDBACCC8()
{
  unint64_t result;

  result = qword_1ED23A938;
  if (!qword_1ED23A938)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED23A938);
  }
  return result;
}

uint64_t (*static NSManagedObjectContext.didMergeChangesNotifications(context:)())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A950);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v10 = (void *)sub_1BDBFDFE0();
  v11 = sub_1BDBFDFA4();

  v15[1] = v11;
  sub_1BDBFDF98();
  sub_1BDBAD480();
  sub_1BDBFE5B0();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v6, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return sub_1BDBAD4DC;
}

uint64_t sub_1BDBACEAC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_task_switch();
}

uint64_t (*static NSManagedObjectContext.didSaveNotifications(context:)())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A950);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v10 = (void *)sub_1BDBFDFEC();
  v11 = sub_1BDBFDFA4();

  v15[1] = v11;
  sub_1BDBFDF98();
  sub_1BDBAD480();
  sub_1BDBFE5B0();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v6, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return sub_1BDBAD4DC;
}

uint64_t sub_1BDBAD06C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1BDBAD084()
{
  uint64_t v0;
  void *v1;
  _BOOL8 v2;

  sub_1BDBFC498();
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_1BDB3B1EC(v0 + 16);
    goto LABEL_5;
  }
  sub_1BDBACCC8();
  if (!swift_dynamicCast())
  {
LABEL_5:
    v1 = 0;
    goto LABEL_6;
  }
  v1 = *(void **)(v0 + 48);
LABEL_6:
  v2 = v1 != 0;

  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v2);
}

uint64_t (*NSManagedObjectContext.didMergeChangesNotifications.getter())()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  ObjectType = swift_getObjectType();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A950);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - v6;
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v9 = (void *)sub_1BDBFDFE0();
  v10 = sub_1BDBFDFA4();

  v14[1] = v10;
  sub_1BDBFDF98();
  sub_1BDBAD480();
  sub_1BDBFE5B0();
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v11 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v11, v5, v1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return sub_1BDBAD4DC;
}

uint64_t (*NSManagedObjectContext.didSaveNotifications.getter())()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  ObjectType = swift_getObjectType();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A950);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - v6;
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v9 = (void *)sub_1BDBFDFEC();
  v10 = sub_1BDBFDFA4();

  v14[1] = v10;
  sub_1BDBFDF98();
  sub_1BDBAD480();
  sub_1BDBFE5B0();
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v11 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v11, v5, v1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return sub_1BDBAD4DC;
}

unint64_t sub_1BDBAD480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23A930;
  if (!qword_1ED23A930)
  {
    v1 = sub_1BDBFDF98();
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0CB1F00], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23A930);
  }
  return result;
}

uint64_t sub_1BDBAD4C8()
{
  return swift_deallocObject();
}

uint64_t sub_1BDBAD4E0()
{
  return swift_deallocObject();
}

void sub_1BDBAD4F0(_QWORD *a1@<X8>)
{
  static NSManagedObjectContext._makeObjectIDNotification(_:)(a1);
}

uint64_t sub_1BDBAD508()
{
  return swift_deallocObject();
}

uint64_t sub_1BDBAD51C()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A950);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BDBAD594()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A950) - 8) + 80);
  return sub_1BDBAC8FC(v0 + ((v1 + 16) & ~v1));
}

uint64_t _s20ObjectIDNotificationVwxx(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s20ObjectIDNotificationVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20ObjectIDNotificationVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20ObjectIDNotificationVwta(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NSManagedObjectContext.ObjectIDNotification()
{
  return &type metadata for NSManagedObjectContext.ObjectIDNotification;
}

unint64_t sub_1BDBAD720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23A948;
  if (!qword_1ED23A948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED23A950);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DF0CC0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23A948);
  }
  return result;
}

uint64_t sub_1BDBAD774@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  id v20;
  uint64_t result;

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v10 = *((_BYTE *)a1 + 32);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1BDBFD7F4();
  if (v13)
  {
    v14 = v12;
    v15 = v13;
    while (v8 < v9)
    {
      if (v8 >= v9 - 1)
      {
        if ((v10 & 1) == 0)
        {
          v19 = (void *)objc_opt_self();
          swift_bridgeObjectRetain();
          v20 = objc_msgSend(v19, sel_ic_ellipsisCharacterString);
          sub_1BDBFD6F8();

          sub_1BDBFD7DC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_23:
          v10 = 0;
          ++v8;
          goto LABEL_5;
        }
LABEL_16:
        swift_bridgeObjectRetain();
        MEMORY[0x1C3B78D9C](v14, v15);
LABEL_17:
        if (v14 == 109 && v15 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_21:
          v10 = 0;
          goto LABEL_5;
        }
        v18 = sub_1BDBFE874();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_21;
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
      MEMORY[0x1C3B78D9C](v14, v15);
      if ((v10 & 1) != 0)
        goto LABEL_17;
      if (v14 == 27 && v15 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = sub_1BDBFE874();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
          goto LABEL_23;
      }
LABEL_4:
      v10 = 1;
LABEL_5:
      v14 = sub_1BDBFD7F4();
      v15 = v16;
      if (!v16)
        goto LABEL_24;
    }
    if ((v10 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v10 = 0;
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v6;
  *(_QWORD *)(a4 + 8) = v7;
  *(_QWORD *)(a4 + 16) = v8;
  *(_QWORD *)(a4 + 24) = v9;
  *(_BYTE *)(a4 + 32) = v10;
  return result;
}

Swift::Void __swiftcall DefaultStringInterpolation.appendInterpolation(ansi:)(NotesShared::AnsiStylings ansi)
{
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
}

uint64_t String.removingAnsi.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_1EF50B2A0 != -1)
    swift_once();
  v0 = (void *)qword_1EF50F600;
  v1 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRetain();
  v2 = sub_1BDBFD854();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BDBFD6C8();
  v4 = objc_msgSend(v0, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v1, 0, 0, v2, v3);

  v5 = sub_1BDBFD6F8();
  return v5;
}

uint64_t sub_1BDBADBEC(unint64_t a1, unint64_t a2)
{
  uint64_t result;
  unint64_t *v5;
  unint64_t v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_1BDBFE520();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  result = sub_1BDBFDA4C();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  v7 = vdupq_n_s64(a1);
  v8 = (int64x2_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_1BDBADCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  if (a3 < 0)
  {
    result = sub_1BDBFE520();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v6 = (_QWORD *)sub_1BDBFDA4C();
      v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    return (uint64_t)v7;
  }
  return result;
}

Swift::String __swiftcall String.truncating(to:ignoringAnsi:)(Swift::Int to, Swift::Bool ignoringAnsi)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  BOOL v26;
  uint64_t v27;
  Swift::String result;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[4];
  char v34;
  uint64_t v35;
  unint64_t v36;

  v4 = v3;
  v5 = v2;
  if (ignoringAnsi)
  {
    if (to < 1)
    {
      v29 = 0;
      v30 = 0xE000000000000000;
      sub_1BDBFD650();
      sub_1BDBFD7DC();
      v35 = 0;
      sub_1BDBFE760();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDBFD650();
    }
    else
    {
      if (qword_1EF50B2A0 != -1)
        swift_once();
      v7 = (void *)qword_1EF50F600;
      v8 = (void *)sub_1BDBFD6C8();
      swift_bridgeObjectRetain();
      v9 = sub_1BDBFD854();
      swift_bridgeObjectRelease();
      v10 = (void *)sub_1BDBFD6C8();
      v11 = objc_msgSend(v7, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v8, 0, 0, v9, v10);

      sub_1BDBFD6F8();
      v12 = sub_1BDBFD7A0();
      swift_bridgeObjectRelease();
      if (v12 <= to)
      {
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        v35 = 0;
        sub_1BDBFE760();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD650();
        v29 = v5;
        v30 = v4;
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
      }
      else
      {
        v33[0] = 0;
        v33[1] = 0xE000000000000000;
        v33[2] = 0;
        v33[3] = to;
        v34 = 0;
        swift_bridgeObjectRetain();
        sub_1BDBAD774(v33, v5, v4, (uint64_t)&v29);
        v14 = v29;
        v13 = v30;
        v29 = 0;
        v30 = 0xE000000000000000;
        sub_1BDBFD650();
        sub_1BDBFD7DC();
        v35 = 0;
        sub_1BDBFE760();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        sub_1BDBFD650();
        v29 = v14;
        v30 = v13;
        swift_bridgeObjectRetain();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v5 = v29;
    v4 = v30;
  }
  else if (to < 1)
  {
    v5 = 0;
    v4 = 0xE000000000000000;
  }
  else if (sub_1BDBFD7A0() <= to)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BDBAEBC4(to - 1);
    v16 = v15;
    v18 = v17;
    swift_bridgeObjectRelease();
    v19 = objc_msgSend((id)objc_opt_self(), sel_ic_ellipsisCharacterString);
    v20 = sub_1BDBFD6F8();
    v22 = v21;

    v35 = 0;
    v36 = 0xE000000000000000;
    v23 = sub_1BDBFD7A0();
    v24 = sub_1BDBFE0DC();
    v26 = __OFADD__(v23, v24);
    v27 = v23 + v24;
    if (v26)
    {
      __break(1u);
      goto LABEL_19;
    }
    MEMORY[0x1C3B78D48](v27);
    v31 = v16;
    v32 = v18;
    sub_1BDB0842C();
    sub_1BDBFD7C4();
    v29 = v20;
    v30 = v22;
    sub_1BDBFD7C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v35;
    v4 = v36;
  }
  v27 = v5;
  v25 = (void *)v4;
LABEL_19:
  result._object = v25;
  result._countAndFlagsBits = v27;
  return result;
}

uint64_t String.padding(to:alignment:ignoringAnsi:)(Swift::Int a1, unsigned __int8 *a2, char a3, uint64_t a4)
{
  int v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;

  v7 = *a2;
  if ((a3 & 1) == 0)
  {
    result = sub_1BDBFD7A0();
    v13 = result;
    goto LABEL_5;
  }
  if (qword_1EF50B2A0 != -1)
    goto LABEL_21;
  while (1)
  {
    v8 = (void *)qword_1EF50F600;
    v9 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRetain();
    v10 = sub_1BDBFD854();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_1BDBFD6C8();
    v12 = objc_msgSend(v8, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v9, 0, 0, v10, v11);

    sub_1BDBFD6F8();
    v13 = sub_1BDBFD7A0();
    result = swift_bridgeObjectRelease();
LABEL_5:
    v15 = a1 - v13;
    if (!__OFSUB__(a1, v13))
      break;
    __break(1u);
LABEL_21:
    swift_once();
  }
  if (v15 < 1)
    return String.truncating(to:ignoringAnsi:)(a1, a3 & 1)._countAndFlagsBits;
  if (!v7)
  {
    sub_1BDBADCD4(32, 0xE100000000000000, v15);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
    sub_1BDB3A4D0();
    sub_1BDBFD674();
    swift_bridgeObjectRelease();
    v21 = a4;
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    goto LABEL_19;
  }
  if (v7 != 1)
  {
    sub_1BDBADCD4(32, 0xE100000000000000, v15);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
    sub_1BDB3A4D0();
    v20 = sub_1BDBFD674();
    swift_bridgeObjectRelease();
    v21 = v20;
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    goto LABEL_19;
  }
  v16 = (double)v15 * 0.5;
  v17 = ceil(v16);
  if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1BDBADCD4(32, 0xE100000000000000, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDB3A4D0();
  v18 = sub_1BDBFD674();
  result = swift_bridgeObjectRelease();
  v19 = floor(v16);
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v19 < 9.22337204e18)
  {
    sub_1BDBADCD4(32, 0xE100000000000000, (uint64_t)v19);
    sub_1BDBFD674();
    swift_bridgeObjectRelease();
    v21 = v18;
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    return v21;
  }
LABEL_27:
  __break(1u);
  return result;
}

__C::_NSRange_optional __swiftcall String.lineRange(forLocation:)(Swift::Int forLocation)
{
  __C::_NSRange_optional v1;

  v1 = String.lineRange(for:)((__C::_NSRange)(unint64_t)forLocation);
  v1.is_nil &= 1u;
  return v1;
}

__C::_NSRange_optional __swiftcall String.lineRange(for:)(__C::_NSRange a1)
{
  Swift::Int length;
  Swift::Int location;
  void *v3;
  unsigned int v4;
  Swift::Int v5;
  Swift::Int v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];
  __C::_NSRange_optional result;

  length = a1.length;
  location = a1.location;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = (void *)sub_1BDBFD6C8();
  v4 = objc_msgSend(v3, sel_ic_rangeIsValid_, location, length);
  if (v4)
  {
    v8 = 0;
    v9[0] = 0;
    objc_msgSend(v3, sel_getLineStart_end_contentsEnd_forRange_, v9, 0, &v8, location, length);

    v5 = v9[0];
    v6 = v8 - v9[0];
    if (!__OFSUB__(v8, v9[0]))
      goto LABEL_6;
    __break(1u);
  }

  v5 = 0;
  v6 = 0;
LABEL_6:
  v7 = v4 ^ 1;
  result.value.length = v6;
  result.value.location = v5;
  result.is_nil = v7;
  return result;
}

Swift::String_optional __swiftcall String.init(intValue:)(Swift::Int intValue)
{
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  v1 = 0;
  v2 = 0;
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t String.intValue.getter()
{
  return 0;
}

uint64_t String.stringValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BDBAE790()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BDBAE7BC(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t static AnsiStylings.controlSequenceStart.getter()
{
  return 27;
}

uint64_t static AnsiStylings.controlSequenceStop.getter()
{
  return 109;
}

uint64_t AnsiStylings.controlSequence.getter()
{
  sub_1BDBFD650();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD650();
  return 0;
}

uint64_t AnsiStylings.rawValue.getter()
{
  char *v0;

  return qword_1BDC1EE58[*v0];
}

uint64_t sub_1BDBAE8B4()
{
  id v0;
  uint64_t result;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  result = (uint64_t)sub_1BDBC1C88(0xD000000000000010, 0x80000001BDC3A790, 0);
  if (result)
  {
    qword_1EF50F600 = result;
  }
  else
  {
    result = sub_1BDBFE52C();
    __break(1u);
  }
  return result;
}

NotesShared::AnsiStylings_optional __swiftcall AnsiStylings.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 1;
  switch(rawValue)
  {
    case 0:
      v2 = 0;
      goto LABEL_3;
    case 1:
LABEL_3:
      *v1 = v2;
      break;
    case 2:
      *v1 = 2;
      break;
    case 3:
      *v1 = 3;
      break;
    case 4:
      *v1 = 4;
      break;
    case 30:
      *v1 = 5;
      break;
    case 31:
      *v1 = 6;
      break;
    case 32:
      *v1 = 7;
      break;
    case 33:
      *v1 = 8;
      break;
    case 34:
      *v1 = 9;
      break;
    case 35:
      *v1 = 10;
      break;
    case 36:
      *v1 = 11;
      break;
    case 37:
      *v1 = 12;
      break;
    default:
      *v1 = 13;
      break;
  }
  return (NotesShared::AnsiStylings_optional)rawValue;
}

BOOL sub_1BDBAEA38(char *a1, char *a2)
{
  return qword_1BDC1EE58[*a1] == qword_1BDC1EE58[*a2];
}

uint64_t sub_1BDBAEA5C()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBAEAA8()
{
  return sub_1BDBFEA18();
}

uint64_t sub_1BDBAEADC()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

NotesShared::AnsiStylings_optional sub_1BDBAEB24(Swift::Int *a1)
{
  return AnsiStylings.init(rawValue:)(*a1);
}

void sub_1BDBAEB2C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1BDC1EE58[*v1];
}

BOOL static String.PaddingAlignments.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t String.PaddingAlignments.hash(into:)()
{
  return sub_1BDBFEA18();
}

uint64_t String.PaddingAlignments.hashValue.getter()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBAEBC4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1BDBFD7B8();
    return sub_1BDBFD8B4();
  }
  return result;
}

uint64_t sub_1BDBAEC4C()
{
  return MEMORY[0x1E0DEA9E8];
}

uint64_t sub_1BDBAEC58()
{
  return MEMORY[0x1E0DEA9D8];
}

unint64_t sub_1BDBAEC68()
{
  unint64_t result;

  result = qword_1EF50F608;
  if (!qword_1EF50F608)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for AnsiStylings, &type metadata for AnsiStylings);
    atomic_store(result, (unint64_t *)&qword_1EF50F608);
  }
  return result;
}

unint64_t sub_1BDBAECB0()
{
  unint64_t result;

  result = qword_1EF50F610;
  if (!qword_1EF50F610)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for String.PaddingAlignments, &type metadata for String.PaddingAlignments);
    atomic_store(result, (unint64_t *)&qword_1EF50F610);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AnsiStylings(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AnsiStylings(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BDBAEDD0 + 4 * byte_1BDC1EC6B[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BDBAEE04 + 4 * byte_1BDC1EC66[v4]))();
}

uint64_t sub_1BDBAEE04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBAEE0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBAEE14);
  return result;
}

uint64_t sub_1BDBAEE20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBAEE28);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BDBAEE2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBAEE34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnsiStylings()
{
  return &type metadata for AnsiStylings;
}

uint64_t _s17PaddingAlignmentsOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDBAEE9C + 4 * byte_1BDC1EC75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDBAEED0 + 4 * byte_1BDC1EC70[v4]))();
}

uint64_t sub_1BDBAEED0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBAEED8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBAEEE0);
  return result;
}

uint64_t sub_1BDBAEEEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBAEEF4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDBAEEF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBAEF00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for String.PaddingAlignments()
{
  return &type metadata for String.PaddingAlignments;
}

uint64_t sub_1BDBAEF1C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BDBAEF40(char *a1, char *a2)
{
  return sub_1BDB52A5C(*a1, *a2);
}

uint64_t sub_1BDBAEF4C()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBAEFB0()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDBAEFE8()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBAF048@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BDBAF0A4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 6580594;
  if (*v1)
    v2 = 7103859;
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1BDBAF0CC()
{
  _BYTE *v0;

  if (*v0)
    return 7103859;
  else
    return 6580594;
}

uint64_t sub_1BDBAF0F0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BDBAF150()
{
  sub_1BDBAF420();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDBAF178()
{
  sub_1BDBAF420();
  return sub_1BDBFEB50();
}

uint64_t FastSync.SelectionMessage.replicaID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FastSync.SelectionMessage.selectionStateData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for FastSync.SelectionMessage() + 20);
  v2 = *(_QWORD *)v1;
  sub_1BDB4EB54(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t type metadata accessor for FastSync.SelectionMessage()
{
  uint64_t result;

  result = qword_1EF50F698;
  if (!qword_1EF50F698)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FastSync.SelectionMessage.init(replicaID:selectionStateData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for FastSync.SelectionMessage();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t FastSync.SelectionMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F618);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBAF420();
  sub_1BDBFEACC();
  LOBYTE(v11) = 0;
  sub_1BDBFCB40();
  sub_1BDAC31B0(&qword_1ED23A730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1BDBFE718();
  if (!v2)
  {
    v11 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for FastSync.SelectionMessage() + 20));
    v10[15] = 1;
    sub_1BDB6D16C();
    sub_1BDBFE718();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BDBAF420()
{
  unint64_t result;

  result = qword_1EF50F620;
  if (!qword_1EF50F620)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1F0AC, &_s16SelectionMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50F620);
  }
  return result;
}

uint64_t FastSync.SelectionMessage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char v26;

  v20 = a2;
  v24 = sub_1BDBFCB40();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v22 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50F628);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FastSync.SelectionMessage();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBAF420();
  sub_1BDBFEAB4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v18 = a1;
  v19 = v5;
  v11 = (uint64_t)v10;
  v12 = v21;
  LOBYTE(v25) = 0;
  sub_1BDAC31B0(&qword_1EF50CD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v14 = v22;
  v13 = v23;
  v15 = v24;
  sub_1BDBFE670();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v26 = 1;
  sub_1BDB6D1B0();
  sub_1BDBFE670();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v13);
  *(_OWORD *)(v11 + *(int *)(v8 + 20)) = v25;
  sub_1BDBAF6EC(v11, v20);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
  return sub_1BDBAF730(v11);
}

uint64_t sub_1BDBAF6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FastSync.SelectionMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDBAF730(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FastSync.SelectionMessage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDBAF76C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FastSync.SelectionMessage.init(from:)(a1, a2);
}

uint64_t sub_1BDBAF780(_QWORD *a1)
{
  return FastSync.SelectionMessage.encode(to:)(a1);
}

void FastSync.SelectionMessage.description.getter()
{
  uint64_t v0;
  char *v1;

  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1EF50D6A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  v1 = (char *)&loc_1BDBAF874
     + dword_1BDBAF90C[*(_QWORD *)(v0 + *(int *)(type metadata accessor for FastSync.SelectionMessage() + 20) + 8) >> 62];
  __asm { BR              X13 }
}

uint64_t sub_1BDBAF884()
{
  uint64_t v1;

  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return v1;
}

uint64_t sub_1BDBAF91C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BDAC31B0(&qword_1EF50F630, (uint64_t (*)(uint64_t))type metadata accessor for FastSync.SelectionMessage, (uint64_t)&protocol conformance descriptor for FastSync.SelectionMessage);
  result = sub_1BDAC31B0(&qword_1EF50F638, (uint64_t (*)(uint64_t))type metadata accessor for FastSync.SelectionMessage, (uint64_t)&protocol conformance descriptor for FastSync.SelectionMessage);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t *_s16SelectionMessageVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BDBFCB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    sub_1BDB4EB54(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
  }
  return a1;
}

uint64_t _s16SelectionMessageVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_1BDAEB7EC(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t _s16SelectionMessageVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_1BDB4EB54(*v9, v11);
  *v8 = v10;
  v8[1] = v11;
  return a1;
}

uint64_t _s16SelectionMessageVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_1BDB4EB54(*v9, v11);
  v12 = *v8;
  v13 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  sub_1BDAEB7EC(v12, v13);
  return a1;
}

uint64_t _s16SelectionMessageVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s16SelectionMessageVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_1BDAEB7EC(v8, v9);
  return a1;
}

uint64_t _s16SelectionMessageVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBAFC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t _s16SelectionMessageVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBAFCB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_1BDBFCB40();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

uint64_t sub_1BDBAFD3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s16SelectionMessageV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDBAFDF8 + 4 * byte_1BDC1EEC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDBAFE2C + 4 * byte_1BDC1EEC0[v4]))();
}

uint64_t sub_1BDBAFE2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBAFE34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBAFE3CLL);
  return result;
}

uint64_t sub_1BDBAFE48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBAFE50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDBAFE54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBAFE5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s16SelectionMessageV10CodingKeysOMa()
{
  return &_s16SelectionMessageV10CodingKeysON;
}

unint64_t sub_1BDBAFE7C()
{
  unint64_t result;

  result = qword_1EF50F6D0;
  if (!qword_1EF50F6D0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1F084, &_s16SelectionMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50F6D0);
  }
  return result;
}

unint64_t sub_1BDBAFEC4()
{
  unint64_t result;

  result = qword_1EF50F6D8;
  if (!qword_1EF50F6D8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1EFBC, &_s16SelectionMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50F6D8);
  }
  return result;
}

unint64_t sub_1BDBAFF0C()
{
  unint64_t result;

  result = qword_1EF50F6E0;
  if (!qword_1EF50F6E0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1EFE4, &_s16SelectionMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50F6E0);
  }
  return result;
}

uint64_t AttributedString.isEmpty.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v0 = sub_1BDBFC6FC();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF1B0];
  v2 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - v6;
  v8 = sub_1BDBFC678();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDBFC660();
  sub_1BDAC31B0(&qword_1EF50F6E8, v9, MEMORY[0x1E0CAEF30]);
  sub_1BDBFDDC4();
  sub_1BDBFDDE8();
  sub_1BDAC31B0(&qword_1EF50F6F0, v1, MEMORY[0x1E0CAF1C8]);
  v13 = sub_1BDBFD6BC();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v5, v0);
  v14(v7, v0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  return v13 & 1;
}

void __swiftcall CGRect.init(union:)(CGRect_optional *__return_ptr retstr, Swift::OpaquePointer a2)
{
  double x;
  double y;
  double width;
  double height;
  uint64_t v7;
  double *v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  Swift::Bool v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  x = *MEMORY[0x1E0C9D628];
  y = *(double *)(MEMORY[0x1E0C9D628] + 8);
  width = *(double *)(MEMORY[0x1E0C9D628] + 16);
  height = *(double *)(MEMORY[0x1E0C9D628] + 24);
  v7 = *((_QWORD *)a2._rawValue + 2);
  v20 = y;
  v21 = *MEMORY[0x1E0C9D628];
  v18 = height;
  v19 = width;
  if (v7)
  {
    v8 = (double *)((char *)a2._rawValue + 56);
    v10 = *(double *)(MEMORY[0x1E0C9D628] + 8);
    v9 = *MEMORY[0x1E0C9D628];
    v12 = *(double *)(MEMORY[0x1E0C9D628] + 24);
    v11 = *(double *)(MEMORY[0x1E0C9D628] + 16);
    do
    {
      x = *(v8 - 3);
      y = *(v8 - 2);
      width = *(v8 - 1);
      height = *v8;
      v22.origin.x = v9;
      v22.origin.y = v10;
      v22.size.width = v11;
      v22.size.height = v12;
      if (!CGRectIsNull(v22))
      {
        v23.origin.x = v9;
        v23.origin.y = v10;
        v23.size.width = v11;
        v23.size.height = v12;
        v26.origin.x = x;
        v26.origin.y = y;
        v26.size.width = width;
        v26.size.height = height;
        v24 = CGRectUnion(v23, v26);
        x = v24.origin.x;
        y = v24.origin.y;
        width = v24.size.width;
        height = v24.size.height;
      }
      v8 += 4;
      v9 = x;
      v10 = y;
      v11 = width;
      v12 = height;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  v25.origin.x = x;
  v25.origin.y = y;
  v25.size.width = width;
  v25.size.height = height;
  v27.origin.y = v20;
  v27.origin.x = v21;
  v27.size.height = v18;
  v27.size.width = v19;
  v13 = CGRectEqualToRect(v25, v27);
  v14 = 0.0;
  if (v13)
    v15 = 0.0;
  else
    v15 = x;
  if (v13)
    v16 = 0.0;
  else
    v16 = y;
  if (v13)
    v17 = 0.0;
  else
    v17 = width;
  if (!v13)
    v14 = height;
  retstr->value.origin.x = v15;
  retstr->value.origin.y = v16;
  retstr->value.size.width = v17;
  retstr->value.size.height = v14;
  retstr->is_nil = v13;
}

uint64_t RunGarbageCollectorRequest.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_1BDBB0D14((void (*)(_QWORD))type metadata accessor for RunGarbageCollectorRequest, a1);
}

uint64_t type metadata accessor for RunGarbageCollectorRequest(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50FB58);
}

void (*PingRequest.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PingResponse.message.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PingResponse.message.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

void (*PingResponse.message.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PingResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0BDC(type metadata accessor for PingResponse, a1);
}

uint64_t type metadata accessor for PingResponse(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50F988);
}

uint64_t PingResponse.unknownFields.setter(uint64_t a1)
{
  return sub_1BDBB0C34(a1, type metadata accessor for PingResponse);
}

void (*PingResponse.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for PingResponse(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PingResponse.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  type metadata accessor for PingResponse(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

void (*MentionNotificationRequestV2.recipientUserID.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.senderName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.senderName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

void (*MentionNotificationRequestV2.senderName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.noteTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.noteTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

void (*MentionNotificationRequestV2.noteTitle.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.mentionSnippet.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.mentionSnippet.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

void (*MentionNotificationRequestV2.mentionSnippet.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.shareRecordName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.shareRecordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

void (*MentionNotificationRequestV2.shareRecordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.shareOwnerUserID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.shareOwnerUserID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

void (*MentionNotificationRequestV2.shareOwnerUserID.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.noteRecordName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.noteRecordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

void (*MentionNotificationRequestV2.noteRecordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.inlineAttachmentRecordName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.inlineAttachmentRecordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

void (*MentionNotificationRequestV2.inlineAttachmentRecordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MentionNotificationRequestV2(0) + 48);
  v4 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MentionNotificationRequestV2(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50FA18);
}

uint64_t MentionNotificationRequestV2.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MentionNotificationRequestV2(0) + 48);
  v4 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

void (*MentionNotificationRequestV2.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for MentionNotificationRequestV2(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[8] = 0;
  a1[9] = 0xE000000000000000;
  a1[10] = 0;
  a1[11] = 0xE000000000000000;
  a1[12] = 0;
  a1[13] = 0xE000000000000000;
  a1[14] = 0;
  a1[15] = 0xE000000000000000;
  type metadata accessor for MentionNotificationRequestV2(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

uint64_t _s11NotesShared11PingRequestV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s11NotesShared11PingRequestV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

void (*MentionNotificationResponseV2.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.previousBuildNumber.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.previousVersion.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.currentBuildNumber.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.currentVersion.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.platformName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateRequest.continuationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1BDB4EB54(v1, *(_QWORD *)(v0 + 88));
  return v1;
}

uint64_t DidCompleteInstallOrUpdateRequest.continuationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BDAEB7EC(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

void (*DidCompleteInstallOrUpdateRequest.continuationToken.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DidCompleteInstallOrUpdateRequest(0) + 40);
  v4 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for DidCompleteInstallOrUpdateRequest(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1ED23A258);
}

uint64_t DidCompleteInstallOrUpdateRequest.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DidCompleteInstallOrUpdateRequest(0) + 40);
  v4 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

void (*DidCompleteInstallOrUpdateRequest.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateRequest.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0xE000000000000000;
  *(_OWORD *)(a1 + 80) = xmmword_1BDC1E1D0;
  type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

void (*DidCompleteInstallOrUpdateResponse.continuationToken.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateResponse.recordsToInjest.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DidCompleteInstallOrUpdateResponse.recordsToInjest.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

void (*DidCompleteInstallOrUpdateResponse.recordsToInjest.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DidCompleteInstallOrUpdateResponse(0) + 24);
  v4 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for DidCompleteInstallOrUpdateResponse(uint64_t a1)
{
  return sub_1BD943C1C(a1, (uint64_t *)&unk_1ED23A278);
}

uint64_t DidCompleteInstallOrUpdateResponse.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DidCompleteInstallOrUpdateResponse(0) + 24);
  v4 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

void (*DidCompleteInstallOrUpdateResponse.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateResponse.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1BDC1E1D0;
  *(_QWORD *)(a1 + 16) = MEMORY[0x1E0DEE9D8];
  type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

uint64_t RunGarbageCollectorRequest.continuationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1BDB4EB54(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t RunGarbageCollectorRequest.continuationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BDAEB7EC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

void (*RunGarbageCollectorRequest.continuationToken.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t RunGarbageCollectorRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0BDC(type metadata accessor for RunGarbageCollectorRequest, a1);
}

uint64_t sub_1BDBB0BDC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 20);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RunGarbageCollectorRequest.unknownFields.setter(uint64_t a1)
{
  return sub_1BDBB0C34(a1, type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t sub_1BDBB0C34(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 20);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void (*RunGarbageCollectorRequest.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for RunGarbageCollectorRequest(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*RunGarbageCollectorResponse.continuationToken.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t RunGarbageCollectorResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0BDC(type metadata accessor for RunGarbageCollectorResponse, a1);
}

uint64_t type metadata accessor for RunGarbageCollectorResponse(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50FBE8);
}

uint64_t RunGarbageCollectorResponse.unknownFields.setter(uint64_t a1)
{
  return sub_1BDBB0C34(a1, type metadata accessor for RunGarbageCollectorResponse);
}

void (*RunGarbageCollectorResponse.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for RunGarbageCollectorResponse(0);
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t RunGarbageCollectorResponse.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_1BDBB0D14((void (*)(_QWORD))type metadata accessor for RunGarbageCollectorResponse, a1);
}

uint64_t sub_1BDBB0D14@<X0>(void (*a1)(_QWORD)@<X0>, _OWORD *a2@<X8>)
{
  *a2 = xmmword_1BDC1E1D0;
  a1(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

uint64_t static PingRequest.protoMessageName.getter()
{
  return 0x75716552676E6950;
}

uint64_t sub_1BDBB0D74(uint64_t a1)
{
  return sub_1BDBB1B54(a1, qword_1EF50F6F8);
}

uint64_t static PingRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0FB4(&qword_1EF50B2A8, (uint64_t)qword_1EF50F6F8, a1);
}

uint64_t PingRequest.decodeMessage<A>(decoder:)()
{
  return sub_1BDBB1BC8();
}

uint64_t PingRequest.traverse<A>(visitor:)()
{
  return sub_1BDBFCCF0();
}

uint64_t PingRequest.hashValue.getter()
{
  return sub_1BDBB3130(type metadata accessor for PingRequest, &qword_1EF50F7C0, (uint64_t)&protocol conformance descriptor for PingRequest);
}

uint64_t sub_1BDBB0DE8()
{
  return 0x75716552676E6950;
}

uint64_t sub_1BDBB0E14()
{
  return PingRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1BDBB0E28()
{
  return PingRequest.traverse<A>(visitor:)();
}

uint64_t sub_1BDBB0E40()
{
  sub_1BDAC31B0(&qword_1EF50FC58, type metadata accessor for PingRequest, (uint64_t)&protocol conformance descriptor for PingRequest);
  return sub_1BDBFCD20();
}

uint64_t sub_1BDBB0E94@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB11F4(&qword_1EF50B2A8, (uint64_t)qword_1EF50F6F8, a1);
}

uint64_t sub_1BDBB0EB0()
{
  sub_1BDAC31B0(&qword_1EF50F810, type metadata accessor for PingRequest, (uint64_t)&protocol conformance descriptor for PingRequest);
  return sub_1BDBFCD68();
}

uint64_t sub_1BDBB0EF4()
{
  sub_1BDAC31B0(&qword_1EF50F810, type metadata accessor for PingRequest, (uint64_t)&protocol conformance descriptor for PingRequest);
  return sub_1BDBFCD74();
}

uint64_t type metadata accessor for PingRequest(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50F8F8);
}

uint64_t static PingResponse.protoMessageName.getter()
{
  return 0x70736552676E6950;
}

uint64_t sub_1BDBB0F80(uint64_t a1)
{
  return sub_1BDBB2E44(a1, qword_1EF50F710, (uint64_t)"message", 7);
}

uint64_t static PingResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0FB4(&qword_1EF50B2B0, (uint64_t)qword_1EF50F710, a1);
}

uint64_t sub_1BDBB0FB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1BDBFCDD4();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t PingResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBB2F80(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D3EB90]);
}

uint64_t PingResponse.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_1BDBFCD98(), !v1))
  {
    type metadata accessor for PingResponse(0);
    return sub_1BDBFCCF0();
  }
  return result;
}

uint64_t PingResponse.hashValue.getter()
{
  return sub_1BDBB3130(type metadata accessor for PingResponse, &qword_1EF50F7C8, (uint64_t)&protocol conformance descriptor for PingResponse);
}

uint64_t sub_1BDBB10F8@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return _s11NotesShared11PingRequestVACycfC_0();
}

uint64_t sub_1BDBB111C()
{
  return 0x70736552676E6950;
}

void (*sub_1BDBB1148())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1BDBB115C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PingResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1BDBB1170()
{
  return PingResponse.traverse<A>(visitor:)();
}

uint64_t sub_1BDBB1188()
{
  sub_1BDAC31B0(&qword_1EF50FC50, type metadata accessor for PingResponse, (uint64_t)&protocol conformance descriptor for PingResponse);
  return sub_1BDBFCD20();
}

uint64_t sub_1BDBB11D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB11F4(&qword_1EF50B2B0, (uint64_t)qword_1EF50F710, a1);
}

uint64_t sub_1BDBB11F4@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1BDBFCDD4();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1BDBB1260()
{
  sub_1BDAC31B0(&qword_1EF50F828, type metadata accessor for PingResponse, (uint64_t)&protocol conformance descriptor for PingResponse);
  return sub_1BDBFCD68();
}

uint64_t sub_1BDBB12A0()
{
  sub_1BDAC31B0(&qword_1EF50F828, type metadata accessor for PingResponse, (uint64_t)&protocol conformance descriptor for PingResponse);
  return sub_1BDBFCD74();
}

unint64_t static MentionNotificationRequestV2.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BDBB1310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_1BDBFCDD4();
  __swift_allocate_value_buffer(v0, qword_1EF50F728);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF50F728);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC60);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC68);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BDC1F100;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "recipientUserId";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BDBFCDB0();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "senderName";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "noteTitle";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "mentionSnippet";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "shareRecordName";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "shareOwnerUserId";
  *((_QWORD *)v19 + 1) = 16;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "noteRecordName";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "inlineAttachmentRecordName";
  *((_QWORD *)v23 + 1) = 26;
  v23[16] = 2;
  v10();
  return sub_1BDBFCDBC();
}

uint64_t static MentionNotificationRequestV2._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0FB4(&qword_1EF50B2B8, (uint64_t)qword_1EF50F728, a1);
}

uint64_t MentionNotificationRequestV2.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1BDBFCD2C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
          sub_1BDBFCD44();
          break;
        default:
          break;
      }
      result = sub_1BDBFCD2C();
    }
  }
  return result;
}

uint64_t MentionNotificationRequestV2.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_1BDBFCD98(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_1BDBFCD98(), !v1))
    {
      v7 = v0[5];
      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v0[4] & 0xFFFFFFFFFFFFLL;
      if (!v8 || (result = sub_1BDBFCD98(), !v1))
      {
        v9 = v0[7];
        v10 = HIBYTE(v9) & 0xF;
        if ((v9 & 0x2000000000000000) == 0)
          v10 = v0[6] & 0xFFFFFFFFFFFFLL;
        if (!v10 || (result = sub_1BDBFCD98(), !v1))
        {
          v11 = v0[9];
          v12 = HIBYTE(v11) & 0xF;
          if ((v11 & 0x2000000000000000) == 0)
            v12 = v0[8] & 0xFFFFFFFFFFFFLL;
          if (!v12 || (result = sub_1BDBFCD98(), !v1))
          {
            v13 = v0[11];
            v14 = HIBYTE(v13) & 0xF;
            if ((v13 & 0x2000000000000000) == 0)
              v14 = v0[10] & 0xFFFFFFFFFFFFLL;
            if (!v14 || (result = sub_1BDBFCD98(), !v1))
            {
              v15 = v0[13];
              v16 = HIBYTE(v15) & 0xF;
              if ((v15 & 0x2000000000000000) == 0)
                v16 = v0[12] & 0xFFFFFFFFFFFFLL;
              if (!v16 || (result = sub_1BDBFCD98(), !v1))
              {
                v17 = v0[15];
                v18 = HIBYTE(v17) & 0xF;
                if ((v17 & 0x2000000000000000) == 0)
                  v18 = v0[14] & 0xFFFFFFFFFFFFLL;
                if (!v18 || (result = sub_1BDBFCD98(), !v1))
                {
                  type metadata accessor for MentionNotificationRequestV2(0);
                  return sub_1BDBFCCF0();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t MentionNotificationRequestV2.hashValue.getter()
{
  return sub_1BDBB3130(type metadata accessor for MentionNotificationRequestV2, &qword_1EF50F7D0, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
}

uint64_t sub_1BDBB1910@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[8] = 0;
  a1[9] = 0xE000000000000000;
  a1[10] = 0;
  a1[11] = 0xE000000000000000;
  a1[12] = 0;
  a1[13] = 0xE000000000000000;
  a1[14] = 0;
  a1[15] = 0xE000000000000000;
  return _s11NotesShared11PingRequestVACycfC_0();
}

unint64_t sub_1BDBB1954()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BDBB1970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1BDBB19B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 48);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void (*sub_1BDBB19F0())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1BDBB1A04()
{
  return MentionNotificationRequestV2.decodeMessage<A>(decoder:)();
}

uint64_t sub_1BDBB1A18()
{
  return MentionNotificationRequestV2.traverse<A>(visitor:)();
}

uint64_t sub_1BDBB1A2C()
{
  sub_1BDAC31B0(&qword_1EF50FC48, type metadata accessor for MentionNotificationRequestV2, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
  return sub_1BDBFCD20();
}

uint64_t sub_1BDBB1A7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB11F4(&qword_1EF50B2B8, (uint64_t)qword_1EF50F728, a1);
}

uint64_t sub_1BDBB1A98()
{
  sub_1BDAC31B0(&qword_1EF50DDB0, type metadata accessor for MentionNotificationRequestV2, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
  return sub_1BDBFCD68();
}

uint64_t sub_1BDBB1AD8()
{
  sub_1BDAC31B0(&qword_1EF50DDB0, type metadata accessor for MentionNotificationRequestV2, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
  return sub_1BDBFCD74();
}

unint64_t static MentionNotificationResponseV2.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1BDBB1B48(uint64_t a1)
{
  return sub_1BDBB1B54(a1, qword_1EF50F740);
}

uint64_t sub_1BDBB1B54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1BDBFCDD4();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BDBFCDC8();
}

uint64_t static MentionNotificationResponseV2._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0FB4(&qword_1EF50B2C0, (uint64_t)qword_1EF50F740, a1);
}

uint64_t MentionNotificationResponseV2.decodeMessage<A>(decoder:)()
{
  return sub_1BDBB1BC8();
}

uint64_t sub_1BDBB1BC8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_1BDBFCD2C();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t _s11NotesShared11PingRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_1BDBFCD08();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v15 - v10, a1, v4);
  v12(v9, a2, v4);
  sub_1BDAC31B0(&qword_1EF50F7B8, v5, MEMORY[0x1E0D3E9A8]);
  LOBYTE(a2) = sub_1BDBFD6BC();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return a2 & 1;
}

uint64_t MentionNotificationResponseV2.hashValue.getter()
{
  return sub_1BDBB3130(type metadata accessor for MentionNotificationResponseV2, &qword_1EF50F7D8, (uint64_t)&protocol conformance descriptor for MentionNotificationResponseV2);
}

unint64_t sub_1BDBB1D38()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1BDBB1D54()
{
  sub_1BDAC31B0(&qword_1EF50FC40, type metadata accessor for MentionNotificationResponseV2, (uint64_t)&protocol conformance descriptor for MentionNotificationResponseV2);
  return sub_1BDBFCD20();
}

uint64_t sub_1BDBB1DA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB11F4(&qword_1EF50B2C0, (uint64_t)qword_1EF50F740, a1);
}

uint64_t sub_1BDBB1DC0()
{
  sub_1BDAC31B0(&qword_1EF50F850, type metadata accessor for MentionNotificationResponseV2, (uint64_t)&protocol conformance descriptor for MentionNotificationResponseV2);
  return sub_1BDBFCD68();
}

uint64_t sub_1BDBB1E00()
{
  sub_1BDAC31B0(&qword_1EF50F850, type metadata accessor for MentionNotificationResponseV2, (uint64_t)&protocol conformance descriptor for MentionNotificationResponseV2);
  return sub_1BDBFCD74();
}

unint64_t static DidCompleteInstallOrUpdateRequest.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1BDBB1E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_1BDBFCDD4();
  __swift_allocate_value_buffer(v0, qword_1EF50F758);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF50F758);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC60);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC68);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BDC18190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "previousBuildNumber";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BDBFCDB0();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "previousVersion";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "currentBuildNumber";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "currentVersion";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "platformName";
  *((_QWORD *)v17 + 1) = 12;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "continuationToken";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  return sub_1BDBFCDBC();
}

uint64_t static DidCompleteInstallOrUpdateRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0FB4(&qword_1EF50B2C8, (uint64_t)qword_1EF50F758, a1);
}

uint64_t DidCompleteInstallOrUpdateRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1BDBFCD2C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          sub_1BDBFCD44();
          break;
        case 6:
          sub_1BDBFCD38();
          break;
        default:
          break;
      }
      result = sub_1BDBFCD2C();
    }
  }
  return result;
}

uint64_t DidCompleteInstallOrUpdateRequest.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_1BDBFCD98(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_1BDBFCD98(), !v1))
    {
      v7 = v0[5];
      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v0[4] & 0xFFFFFFFFFFFFLL;
      if (!v8 || (result = sub_1BDBFCD98(), !v1))
      {
        v9 = v0[7];
        v10 = HIBYTE(v9) & 0xF;
        if ((v9 & 0x2000000000000000) == 0)
          v10 = v0[6] & 0xFFFFFFFFFFFFLL;
        if (!v10 || (result = sub_1BDBFCD98(), !v1))
        {
          v11 = v0[9];
          v12 = HIBYTE(v11) & 0xF;
          if ((v11 & 0x2000000000000000) == 0)
            v12 = v0[8] & 0xFFFFFFFFFFFFLL;
          if (!v12 || (result = sub_1BDBFCD98(), !v1))
            __asm { BR              X10 }
        }
      }
    }
  }
  return result;
}

uint64_t DidCompleteInstallOrUpdateRequest.hashValue.getter()
{
  return sub_1BDBB3130(type metadata accessor for DidCompleteInstallOrUpdateRequest, &qword_1EF50F7E0, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1BDBB23AC@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0xE000000000000000;
  *(_OWORD *)(a1 + 80) = xmmword_1BDC1E1D0;
  return _s11NotesShared11PingRequestVACycfC_0();
}

unint64_t sub_1BDBB23F0()
{
  return 0xD000000000000021;
}

uint64_t sub_1BDBB240C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1BDBB244C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 40);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void (*sub_1BDBB248C())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1BDBB24A0()
{
  return DidCompleteInstallOrUpdateRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1BDBB24B4()
{
  return DidCompleteInstallOrUpdateRequest.traverse<A>(visitor:)();
}

uint64_t sub_1BDBB24C8()
{
  sub_1BDAC31B0(&qword_1EF50FC38, type metadata accessor for DidCompleteInstallOrUpdateRequest, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
  return sub_1BDBFCD20();
}

uint64_t sub_1BDBB2518@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB11F4(&qword_1EF50B2C8, (uint64_t)qword_1EF50F758, a1);
}

uint64_t sub_1BDBB2534()
{
  sub_1BDAC31B0(&qword_1ED23A248, type metadata accessor for DidCompleteInstallOrUpdateRequest, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
  return sub_1BDBFCD68();
}

uint64_t sub_1BDBB2574()
{
  sub_1BDAC31B0(&qword_1ED23A248, type metadata accessor for DidCompleteInstallOrUpdateRequest, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
  return sub_1BDBFCD74();
}

unint64_t static DidCompleteInstallOrUpdateResponse.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_1BDBB25E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1BDBFCDD4();
  __swift_allocate_value_buffer(v0, qword_1EF50F770);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF50F770);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC60);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC68);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BDC17EC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "continuationToken";
  *(_QWORD *)(v7 + 8) = 17;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1BDBFCDB0();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "recordsToInjest";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_1BDBFCDBC();
}

uint64_t static DidCompleteInstallOrUpdateResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0FB4(&qword_1EF50B2D0, (uint64_t)qword_1EF50F770, a1);
}

uint64_t DidCompleteInstallOrUpdateResponse.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;

  result = sub_1BDBFCD2C();
  if (!v0)
  {
    v3 = MEMORY[0x1E0D11180];
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1BDBFCC48();
        sub_1BDAC31B0(&qword_1EF50F7E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D11188], v3);
        sub_1BDBFCD50();
      }
      else if (result == 1)
      {
        sub_1BDBFCD38();
      }
      result = sub_1BDBFCD2C();
    }
  }
  return result;
}

void DidCompleteInstallOrUpdateResponse.traverse<A>(visitor:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDBB28A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_1BDBFCD8C(), !v2))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16)
      || (sub_1BDBFCC48(),
          sub_1BDAC31B0(&qword_1EF50F7E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D11188], MEMORY[0x1E0D11180]),
          result = sub_1BDBFCDA4(),
          !v2))
    {
      type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
      return sub_1BDBFCCF0();
    }
  }
  return result;
}

uint64_t DidCompleteInstallOrUpdateResponse.hashValue.getter()
{
  return sub_1BDBB3130(type metadata accessor for DidCompleteInstallOrUpdateResponse, &qword_1EF50F7F0, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1BDBB29B8@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1BDC1E1D0;
  *(_QWORD *)(a1 + 16) = MEMORY[0x1E0DEE9D8];
  return _s11NotesShared11PingRequestVACycfC_0();
}

unint64_t sub_1BDBB29EC()
{
  return 0xD000000000000022;
}

uint64_t sub_1BDBB2A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1BDBB2A48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void (*sub_1BDBB2A88())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1BDBB2A9C()
{
  return DidCompleteInstallOrUpdateResponse.decodeMessage<A>(decoder:)();
}

void sub_1BDBB2AB0()
{
  DidCompleteInstallOrUpdateResponse.traverse<A>(visitor:)();
}

uint64_t sub_1BDBB2AC4()
{
  sub_1BDAC31B0(&qword_1EF50FC30, type metadata accessor for DidCompleteInstallOrUpdateResponse, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateResponse);
  return sub_1BDBFCD20();
}

uint64_t sub_1BDBB2B14@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB11F4(&qword_1EF50B2D0, (uint64_t)qword_1EF50F770, a1);
}

uint64_t sub_1BDBB2B30()
{
  sub_1BDAC31B0(&qword_1EF50F868, type metadata accessor for DidCompleteInstallOrUpdateResponse, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateResponse);
  return sub_1BDBFCD68();
}

uint64_t sub_1BDBB2B70()
{
  sub_1BDAC31B0(&qword_1EF50F868, type metadata accessor for DidCompleteInstallOrUpdateResponse, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateResponse);
  return sub_1BDBFCD74();
}

unint64_t static RunGarbageCollectorRequest.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1BDBB2BE0(uint64_t a1)
{
  return sub_1BDBB2E44(a1, qword_1EF50F788, (uint64_t)"continuationToken", 17);
}

uint64_t static RunGarbageCollectorRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0FB4(&qword_1EF50B2D8, (uint64_t)qword_1EF50F788, a1);
}

uint64_t RunGarbageCollectorRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBB2F80(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D3EB18]);
}

void RunGarbageCollectorRequest.traverse<A>(visitor:)()
{
  sub_1BDBB3014();
}

uint64_t static RunGarbageCollectorRequest.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_1BDBB39A8(a1, a2, type metadata accessor for RunGarbageCollectorRequest) & 1;
}

uint64_t RunGarbageCollectorRequest.hashValue.getter()
{
  return sub_1BDBB3130(type metadata accessor for RunGarbageCollectorRequest, &qword_1EF50F7F8, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
}

uint64_t sub_1BDBB2C88@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1BDC1E1D0;
  return _s11NotesShared11PingRequestVACycfC_0();
}

unint64_t sub_1BDBB2CB0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1BDBB2CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RunGarbageCollectorRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1BDBB2CE0()
{
  RunGarbageCollectorRequest.traverse<A>(visitor:)();
}

uint64_t sub_1BDBB2CF4()
{
  sub_1BDAC31B0(&qword_1EF50FC28, type metadata accessor for RunGarbageCollectorRequest, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
  return sub_1BDBFCD20();
}

uint64_t sub_1BDBB2D44@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB11F4(&qword_1EF50B2D8, (uint64_t)qword_1EF50F788, a1);
}

uint64_t sub_1BDBB2D60()
{
  sub_1BDAC31B0(&qword_1EF50DDB8, type metadata accessor for RunGarbageCollectorRequest, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
  return sub_1BDBFCD68();
}

uint64_t sub_1BDBB2DA0()
{
  sub_1BDAC31B0(&qword_1EF50DDB8, type metadata accessor for RunGarbageCollectorRequest, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
  return sub_1BDBFCD74();
}

uint64_t sub_1BDBB2DF0(uint64_t *a1, uint64_t a2)
{
  return sub_1BDBB39A8(a1, a2, type metadata accessor for RunGarbageCollectorRequest) & 1;
}

unint64_t static RunGarbageCollectorResponse.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1BDBB2E2C(uint64_t a1)
{
  return sub_1BDBB2E44(a1, qword_1EF50F7A0, (uint64_t)"continuationToken", 17);
}

uint64_t sub_1BDBB2E44(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = sub_1BDBFCDD4();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC60);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC68);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BDC16BA0;
  v12 = v11 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)(v11 + v10) = 1;
  *(_QWORD *)v12 = a3;
  *(_QWORD *)(v12 + 8) = a4;
  *(_BYTE *)(v12 + 16) = 2;
  v13 = *MEMORY[0x1E0D3EF08];
  v14 = sub_1BDBFCDB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  return sub_1BDBFCDBC();
}

uint64_t static RunGarbageCollectorResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB0FB4(qword_1EF50B2E0, (uint64_t)qword_1EF50F7A0, a1);
}

uint64_t RunGarbageCollectorResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBB2F80(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D3EB18]);
}

uint64_t sub_1BDBB2F80(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  while (1)
  {
    result = sub_1BDBFCD2C();
    if (v5 || (v10 & 1) != 0)
      break;
    if (result == 1)
      a4(v4, a2, a3);
  }
  return result;
}

void RunGarbageCollectorResponse.traverse<A>(visitor:)()
{
  sub_1BDBB3014();
}

void sub_1BDBB3014()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDBB3064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_1BDBFCD8C(), !v2))
  {
    v3(0);
    return sub_1BDBFCCF0();
  }
  return result;
}

uint64_t static RunGarbageCollectorResponse.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_1BDBB39A8(a1, a2, type metadata accessor for RunGarbageCollectorResponse) & 1;
}

uint64_t RunGarbageCollectorResponse.hashValue.getter()
{
  return sub_1BDBB3130(type metadata accessor for RunGarbageCollectorResponse, &qword_1EF50F800, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorResponse);
}

uint64_t sub_1BDBB3130(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_1BDBFEA0C();
  a1(0);
  sub_1BDAC31B0(a2, a1, a3);
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

unint64_t sub_1BDBB31AC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1BDBB31C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1BDBB3208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void sub_1BDBB3248()
{
  RunGarbageCollectorResponse.traverse<A>(visitor:)();
}

uint64_t sub_1BDBB325C()
{
  sub_1BDAC31B0(&qword_1EF50FC20, type metadata accessor for RunGarbageCollectorResponse, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorResponse);
  return sub_1BDBFCD20();
}

uint64_t sub_1BDBB32AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDBB11F4(qword_1EF50B2E0, (uint64_t)qword_1EF50F7A0, a1);
}

uint64_t sub_1BDBB32C8()
{
  sub_1BDAC31B0(&qword_1EF50F890, type metadata accessor for RunGarbageCollectorResponse, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorResponse);
  return sub_1BDBFCD68();
}

uint64_t sub_1BDBB3308()
{
  sub_1BDBFEA0C();
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBB335C()
{
  sub_1BDAC31B0(&qword_1EF50F890, type metadata accessor for RunGarbageCollectorResponse, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorResponse);
  return sub_1BDBFCD74();
}

uint64_t sub_1BDBB33AC()
{
  sub_1BDBFEA0C();
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBB33FC(uint64_t *a1, uint64_t a2)
{
  return sub_1BDBB39A8(a1, a2, type metadata accessor for RunGarbageCollectorResponse) & 1;
}

uint64_t _s11NotesShared34DidCompleteInstallOrUpdateResponseV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t updated;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_1BDBFCD08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  sub_1BDB6CED0(*a1, a1[1]);
  if ((v11 & 1) != 0 && (sub_1BDAFB3E8(a1[2], *(_QWORD *)(a2 + 16)) & 1) != 0)
  {
    updated = type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
    v13 = (char *)a1 + *(int *)(updated + 24);
    v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, (char *)(a2 + *(int *)(updated + 24)), v4);
    sub_1BDAC31B0(&qword_1EF50F7B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v15 = sub_1BDBFD6BC();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s11NotesShared33DidCompleteInstallOrUpdateRequestV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  char v14;
  uint64_t updated;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_1BDBFCD08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
  {
    v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v13 || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
    {
      if (a1[4] == *((_QWORD *)a2 + 4) && a1[5] == *((_QWORD *)a2 + 5) || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
      {
        if (a1[6] == *((_QWORD *)a2 + 6) && a1[7] == *((_QWORD *)a2 + 7) || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
        {
          if (a1[8] == *((_QWORD *)a2 + 8) && a1[9] == *((_QWORD *)a2 + 9) || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
          {
            sub_1BDB6CED0(a1[10], a1[11]);
            if ((v14 & 1) != 0)
            {
              updated = type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
              v16 = (char *)a1 + *(int *)(updated + 40);
              v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
              v17(v10, v16, v4);
              v17(v8, &a2[*(int *)(updated + 40)], v4);
              sub_1BDAC31B0(&qword_1EF50F7B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
              v12 = sub_1BDBFD6BC();
              v18 = *(void (**)(char *, uint64_t))(v5 + 8);
              v18(v8, v4);
              v18(v10, v4);
            }
            else
            {
              v12 = 0;
            }
          }
        }
      }
    }
  }
  return v12 & 1;
}

uint64_t _s11NotesShared28MentionNotificationRequestV2V2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_1BDBFCD08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
  {
    v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v13 || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
    {
      if (a1[4] == *((_QWORD *)a2 + 4) && a1[5] == *((_QWORD *)a2 + 5) || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
      {
        if (a1[6] == *((_QWORD *)a2 + 6) && a1[7] == *((_QWORD *)a2 + 7) || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
        {
          if (a1[8] == *((_QWORD *)a2 + 8) && a1[9] == *((_QWORD *)a2 + 9) || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
          {
            if (a1[10] == *((_QWORD *)a2 + 10) && a1[11] == *((_QWORD *)a2 + 11)
              || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
            {
              if (a1[12] == *((_QWORD *)a2 + 12) && a1[13] == *((_QWORD *)a2 + 13)
                || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
              {
                if (a1[14] == *((_QWORD *)a2 + 14) && a1[15] == *((_QWORD *)a2 + 15)
                  || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
                {
                  v14 = type metadata accessor for MentionNotificationRequestV2(0);
                  v15 = (char *)a1 + *(int *)(v14 + 48);
                  v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
                  v16(v10, v15, v4);
                  v16(v8, &a2[*(int *)(v14 + 48)], v4);
                  sub_1BDAC31B0(&qword_1EF50F7B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
                  v12 = sub_1BDBFD6BC();
                  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
                  v17(v8, v4);
                  v17(v10, v4);
                }
              }
            }
          }
        }
      }
    }
  }
  return v12 & 1;
}

uint64_t sub_1BDBB39A8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v6 = sub_1BDBFCD08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  sub_1BDB6CED0(*a1, a1[1]);
  if ((v13 & 1) != 0)
  {
    v14 = a3(0);
    v15 = (char *)a1 + *(int *)(v14 + 20);
    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v16(v12, v15, v6);
    v16(v10, (char *)(a2 + *(int *)(v14 + 20)), v6);
    sub_1BDAC31B0(&qword_1EF50F7B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v17 = sub_1BDBFD6BC();
    v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v10, v6);
    v18(v12, v6);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t _s11NotesShared12PingResponseV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_1BDBFCD08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_1BDBFE874() & 1) != 0))
  {
    v13 = type metadata accessor for PingResponse(0);
    v14 = (char *)a1 + *(int *)(v13 + 20);
    v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v15(v10, v14, v4);
    v15(v8, &a2[*(int *)(v13 + 20)], v4);
    sub_1BDAC31B0(&qword_1EF50F7B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v12 = sub_1BDBFD6BC();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  return v12 & 1;
}

uint64_t type metadata accessor for MentionNotificationResponseV2(uint64_t a1)
{
  return sub_1BD943C1C(a1, qword_1EF50FAC8);
}

uint64_t sub_1BDBB3C34()
{
  return sub_1BDAC31B0(&qword_1EF50F808, type metadata accessor for PingRequest, (uint64_t)&protocol conformance descriptor for PingRequest);
}

uint64_t sub_1BDBB3C60()
{
  return sub_1BDAC31B0(&qword_1EF50F810, type metadata accessor for PingRequest, (uint64_t)&protocol conformance descriptor for PingRequest);
}

uint64_t sub_1BDBB3C8C()
{
  return sub_1BDAC31B0(&qword_1EF50F7C0, type metadata accessor for PingRequest, (uint64_t)&protocol conformance descriptor for PingRequest);
}

uint64_t sub_1BDBB3CB8()
{
  return sub_1BDAC31B0(&qword_1EF50F818, type metadata accessor for PingRequest, (uint64_t)&protocol conformance descriptor for PingRequest);
}

uint64_t sub_1BDBB3CE4()
{
  return sub_1BDAC31B0(&qword_1EF50F820, type metadata accessor for PingResponse, (uint64_t)&protocol conformance descriptor for PingResponse);
}

uint64_t sub_1BDBB3D10()
{
  return sub_1BDAC31B0(&qword_1EF50F828, type metadata accessor for PingResponse, (uint64_t)&protocol conformance descriptor for PingResponse);
}

uint64_t sub_1BDBB3D3C()
{
  return sub_1BDAC31B0(&qword_1EF50F7C8, type metadata accessor for PingResponse, (uint64_t)&protocol conformance descriptor for PingResponse);
}

uint64_t sub_1BDBB3D68()
{
  return sub_1BDAC31B0(&qword_1EF50F830, type metadata accessor for PingResponse, (uint64_t)&protocol conformance descriptor for PingResponse);
}

uint64_t sub_1BDBB3D94()
{
  return sub_1BDAC31B0(&qword_1EF50F838, type metadata accessor for MentionNotificationRequestV2, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
}

uint64_t sub_1BDBB3DC0()
{
  return sub_1BDAC31B0(&qword_1EF50DDB0, type metadata accessor for MentionNotificationRequestV2, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
}

uint64_t sub_1BDBB3DEC()
{
  return sub_1BDAC31B0(&qword_1EF50F7D0, type metadata accessor for MentionNotificationRequestV2, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
}

uint64_t sub_1BDBB3E18()
{
  return sub_1BDAC31B0(&qword_1EF50F840, type metadata accessor for MentionNotificationRequestV2, (uint64_t)&protocol conformance descriptor for MentionNotificationRequestV2);
}

uint64_t sub_1BDBB3E44()
{
  return sub_1BDAC31B0(&qword_1EF50F848, type metadata accessor for MentionNotificationResponseV2, (uint64_t)&protocol conformance descriptor for MentionNotificationResponseV2);
}

uint64_t sub_1BDBB3E70()
{
  return sub_1BDAC31B0(&qword_1EF50F850, type metadata accessor for MentionNotificationResponseV2, (uint64_t)&protocol conformance descriptor for MentionNotificationResponseV2);
}

uint64_t sub_1BDBB3E9C()
{
  return sub_1BDAC31B0(&qword_1EF50F7D8, type metadata accessor for MentionNotificationResponseV2, (uint64_t)&protocol conformance descriptor for MentionNotificationResponseV2);
}

uint64_t sub_1BDBB3EC8()
{
  return sub_1BDAC31B0(&qword_1EF50F858, type metadata accessor for MentionNotificationResponseV2, (uint64_t)&protocol conformance descriptor for MentionNotificationResponseV2);
}

uint64_t sub_1BDBB3EF4()
{
  return sub_1BDAC31B0(&qword_1ED23A250, type metadata accessor for DidCompleteInstallOrUpdateRequest, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1BDBB3F20()
{
  return sub_1BDAC31B0(&qword_1ED23A248, type metadata accessor for DidCompleteInstallOrUpdateRequest, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1BDBB3F4C()
{
  return sub_1BDAC31B0(&qword_1EF50F7E0, type metadata accessor for DidCompleteInstallOrUpdateRequest, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1BDBB3F78()
{
  return sub_1BDAC31B0(&qword_1EF50F860, type metadata accessor for DidCompleteInstallOrUpdateRequest, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1BDBB3FA4()
{
  return sub_1BDAC31B0(&qword_1ED23A270, type metadata accessor for DidCompleteInstallOrUpdateResponse, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1BDBB3FD0()
{
  return sub_1BDAC31B0(&qword_1EF50F868, type metadata accessor for DidCompleteInstallOrUpdateResponse, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1BDBB3FFC()
{
  return sub_1BDAC31B0(&qword_1EF50F7F0, type metadata accessor for DidCompleteInstallOrUpdateResponse, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1BDBB4028()
{
  return sub_1BDAC31B0(&qword_1EF50F870, type metadata accessor for DidCompleteInstallOrUpdateResponse, (uint64_t)&protocol conformance descriptor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1BDBB4054()
{
  return sub_1BDAC31B0(&qword_1EF50F878, type metadata accessor for RunGarbageCollectorRequest, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
}

uint64_t sub_1BDBB4080()
{
  return sub_1BDAC31B0(&qword_1EF50DDB8, type metadata accessor for RunGarbageCollectorRequest, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
}

uint64_t sub_1BDBB40AC()
{
  return sub_1BDAC31B0(&qword_1EF50F7F8, type metadata accessor for RunGarbageCollectorRequest, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
}

uint64_t sub_1BDBB40D8()
{
  return sub_1BDAC31B0(&qword_1EF50F880, type metadata accessor for RunGarbageCollectorRequest, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorRequest);
}

uint64_t sub_1BDBB4104()
{
  return sub_1BDAC31B0(&qword_1EF50F888, type metadata accessor for RunGarbageCollectorResponse, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorResponse);
}

uint64_t sub_1BDBB4130()
{
  return sub_1BDAC31B0(&qword_1EF50F890, type metadata accessor for RunGarbageCollectorResponse, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorResponse);
}

uint64_t sub_1BDBB415C()
{
  return sub_1BDAC31B0(&qword_1EF50F800, type metadata accessor for RunGarbageCollectorResponse, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorResponse);
}

uint64_t sub_1BDBB4188()
{
  return sub_1BDAC31B0(&qword_1EF50F898, type metadata accessor for RunGarbageCollectorResponse, (uint64_t)&protocol conformance descriptor for RunGarbageCollectorResponse);
}

uint64_t getEnumTagSinglePayload for PingRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PingRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for PingResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BDBFCD08();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PingResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for PingResponse(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BDBFCD08();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for PingResponse(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *assignWithTake for PingResponse(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PingResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB443C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PingResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB44C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BDBB4538()
{
  return sub_1BDBB5D74();
}

uint64_t *initializeBufferWithCopyOfBuffer for MentionNotificationRequestV2(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  char *v19;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    v11 = a2[13];
    a1[12] = a2[12];
    a1[13] = v11;
    v12 = a2[15];
    v13 = *(int *)(a3 + 48);
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    a1[14] = a2[14];
    a1[15] = v12;
    v14 = sub_1BDBFCD08();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v18, v19, v14);
  }
  return v3;
}

uint64_t destroy for MentionNotificationRequestV2(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for MentionNotificationRequestV2(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  char *v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  v11 = a2[15];
  v12 = *(int *)(a3 + 48);
  v16 = (char *)a1 + v12;
  v17 = (char *)a2 + v12;
  a1[14] = a2[14];
  a1[15] = v11;
  v13 = sub_1BDBFCD08();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v16, v17, v13);
  return a1;
}

_QWORD *assignWithCopy for MentionNotificationRequestV2(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 48);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for MentionNotificationRequestV2(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  v8 = *(int *)(a3 + 48);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  v11 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

_QWORD *assignWithTake for MentionNotificationRequestV2(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[13];
  a1[12] = a2[12];
  a1[13] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[15];
  a1[14] = a2[14];
  a1[15] = v13;
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 48);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MentionNotificationRequestV2()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB4AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MentionNotificationRequestV2()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB4B30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BDBB4BA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCD08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s11NotesShared11PingRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCD08();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s11NotesShared11PingRequestVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s11NotesShared11PingRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCD08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s11NotesShared11PingRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCD08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s11NotesShared11PingRequestVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCD08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s11NotesShared11PingRequestVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCD08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MentionNotificationResponseV2()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MentionNotificationResponseV2()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BDBB4E40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCD08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DidCompleteInstallOrUpdateRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    v12 = a2[10];
    v13 = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BDB4EB54(v12, v13);
    a1[10] = v12;
    a1[11] = v13;
    v14 = *(int *)(a3 + 40);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1BDBFCD08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t destroy for DidCompleteInstallOrUpdateRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDAEB7EC(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for DidCompleteInstallOrUpdateRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  v11 = a2[10];
  v12 = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDB4EB54(v11, v12);
  a1[10] = v11;
  a1[11] = v12;
  v13 = *(int *)(a3 + 40);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

_QWORD *assignWithCopy for DidCompleteInstallOrUpdateRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[10];
  v7 = a2[11];
  sub_1BDB4EB54(v6, v7);
  v8 = a1[10];
  v9 = a1[11];
  a1[10] = v6;
  a1[11] = v7;
  sub_1BDAEB7EC(v8, v9);
  v10 = *(int *)(a3 + 40);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for DidCompleteInstallOrUpdateRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 40);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithTake for DidCompleteInstallOrUpdateRequest(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v10;
  swift_bridgeObjectRelease();
  v11 = a1[10];
  v12 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  sub_1BDAEB7EC(v11, v12);
  v13 = *(int *)(a3 + 40);
  v14 = (char *)a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1BDBFCD08();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DidCompleteInstallOrUpdateRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB5340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DidCompleteInstallOrUpdateRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB53C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BDBB543C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCD08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DidCompleteInstallOrUpdateResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1BDB4EB54(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = a2[2];
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BDBFCD08();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for DidCompleteInstallOrUpdateResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1BDAEB7EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *initializeWithCopy for DidCompleteInstallOrUpdateResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = *a2;
  v7 = a2[1];
  sub_1BDB4EB54(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  a1[2] = a2[2];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BDBFCD08();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t *assignWithCopy for DidCompleteInstallOrUpdateResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_1BDB4EB54(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1BDAEB7EC(v8, v9);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for DidCompleteInstallOrUpdateResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1BDBFCD08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *assignWithTake for DidCompleteInstallOrUpdateResponse(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1BDAEB7EC(v6, v7);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BDBFCD08();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DidCompleteInstallOrUpdateResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB57E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DidCompleteInstallOrUpdateResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB5868(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BDBB58DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCD08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RunGarbageCollectorRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for RunGarbageCollectorRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBB5990()
{
  return sub_1BDBB5D74();
}

uint64_t *_s11NotesShared26RunGarbageCollectorRequestVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1BDB4EB54(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BDBFCD08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t _s11NotesShared26RunGarbageCollectorRequestVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1BDAEB7EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BDBFCD08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *_s11NotesShared26RunGarbageCollectorRequestVwcp_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = a2[1];
  sub_1BDB4EB54(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *_s11NotesShared26RunGarbageCollectorRequestVwca_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_1BDB4EB54(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1BDAEB7EC(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *_s11NotesShared12PingResponseVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *_s11NotesShared26RunGarbageCollectorRequestVwta_0(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1BDAEB7EC(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BDBFCD08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RunGarbageCollectorResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_11Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_1BDBFCD08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for RunGarbageCollectorResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_12Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_1BDBFCD08();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BDBB5D74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCD08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MentionNotificationResponseV2.traverse<A>(visitor:)()
{
  return PingRequest.traverse<A>(visitor:)();
}

void ic_assert(_:_:simulateCrash:logger:file:line:filePath:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, char a5)
{
  uint64_t v7;
  os_log_type_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *log;
  uint64_t v19;

  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = 2;
  swift_retain_n();
  if ((sub_1BDBB6748(v7, a1) & 1) != 0)
  {
    swift_release();
    swift_release_n();
  }
  else
  {
    if ((a5 & 1) != 0)
      v8 = sub_1BDBFDEF0();
    else
      v8 = sub_1BDBFDEE4();
    v9 = v8;
    log = sub_1BDBFCE1C();
    if (os_log_type_enabled(log, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v19 = v11;
      *(_DWORD *)v10 = 136315650;
      v12 = sub_1BDBFE34C();
      sub_1BDAE53FC(v12, v13, &v19);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2048;
      v14 = sub_1BDBFE100();
      *(_WORD *)(v10 + 22) = 2080;
      v15 = a3(v14);
      sub_1BDAE53FC(v15, v16, &v19);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, log, v9, "Failed assertion at %s:%lu: %s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v11, -1, -1);
      MEMORY[0x1C3B7B478](v10, -1, -1);
      swift_release();
      swift_release_n();

    }
    else
    {
      swift_release();
      swift_release_n();

    }
  }
}

uint64_t sub_1BDBB60AC()
{
  return swift_deallocObject();
}

void ic_assertionFailure(_:simulateCrash:logger:file:line:filePath:)(uint64_t (*a1)(uint64_t), uint64_t a2, char a3)
{
  os_log_type_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *log;
  uint64_t v15;

  swift_retain_n();
  if ((a3 & 1) != 0)
    v5 = sub_1BDBFDEF0();
  else
    v5 = sub_1BDBFDEE4();
  v6 = v5;
  log = sub_1BDBFCE1C();
  if (os_log_type_enabled(log, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315650;
    v9 = sub_1BDBFE34C();
    sub_1BDAE53FC(v9, v10, &v15);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v11 = sub_1BDBFE100();
    *(_WORD *)(v7 + 22) = 2080;
    v12 = a1(v11);
    sub_1BDAE53FC(v12, v13, &v15);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD918000, log, v6, "Failed assertion at %s:%lu: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v8, -1, -1);
    MEMORY[0x1C3B7B478](v7, -1, -1);
    swift_release_n();

  }
  else
  {
    swift_release_n();

  }
}

void Logger.ic_assert(_:_:simulateCrash:file:line:filePath:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, char a5)
{
  uint64_t v7;
  os_log_type_t v8;
  os_log_type_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *log;
  uint64_t v20;

  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = 2;
  if ((sub_1BDBB6748(v7, a1) & 1) != 0)
  {
    swift_release();
  }
  else
  {
    if ((a5 & 1) != 0)
      v8 = sub_1BDBFDEF0();
    else
      v8 = sub_1BDBFDEE4();
    v9 = v8;
    swift_retain_n();
    v10 = v9;
    log = sub_1BDBFCE1C();
    if (os_log_type_enabled(log, v9))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v20 = v12;
      *(_DWORD *)v11 = 136315650;
      v13 = sub_1BDBFE34C();
      sub_1BDAE53FC(v13, v14, &v20);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      v15 = sub_1BDBFE100();
      *(_WORD *)(v11 + 22) = 2080;
      v16 = a3(v15);
      sub_1BDAE53FC(v16, v17, &v20);
      sub_1BDBFE100();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, log, v10, "Failed assertion at %s:%lu: %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v12, -1, -1);
      MEMORY[0x1C3B7B478](v11, -1, -1);
      swift_release();

    }
    else
    {
      swift_release();
      swift_release_n();

    }
  }
}

void Logger.ic_assertionFailure(_:simulateCrash:file:line:filePath:)(uint64_t (*a1)(uint64_t), uint64_t a2, char a3)
{
  os_log_type_t v4;
  os_log_type_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *log;
  uint64_t v15;

  if ((a3 & 1) != 0)
    v4 = sub_1BDBFDEF0();
  else
    v4 = sub_1BDBFDEE4();
  v5 = v4;
  swift_retain_n();
  v6 = v5;
  log = sub_1BDBFCE1C();
  if (os_log_type_enabled(log, v5))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315650;
    v9 = sub_1BDBFE34C();
    sub_1BDAE53FC(v9, v10, &v15);
    sub_1BDBFE100();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v11 = sub_1BDBFE100();
    *(_WORD *)(v7 + 22) = 2080;
    v12 = a1(v11);
    sub_1BDAE53FC(v12, v13, &v15);
    sub_1BDBFE100();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD918000, log, v6, "Failed assertion at %s:%lu: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v8, -1, -1);
    MEMORY[0x1C3B7B478](v7, -1, -1);

  }
  else
  {
    swift_release_n();

  }
}

uint64_t sub_1BDBB6748(uint64_t a1, uint64_t (*a2)(void))
{
  int v2;
  _BYTE *v3;
  char v4;

  v3 = (_BYTE *)(a1 + 16);
  v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 == 2)
  {
    v4 = a2();
    swift_beginAccess();
    *v3 = v4 & 1;
  }
  else
  {
    v4 = v2 & 1;
  }
  return v4 & 1;
}

uint64_t sub_1BDBB67B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1ED23ADA0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ADA0);
  if (qword_1ED23B0E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23B078);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id ICPaperSynapseContentItemProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ICPaperSynapseContentItemProvider.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICPaperSynapseContentItemProvider();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ICPaperSynapseContentItemProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICPaperSynapseContentItemProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s11NotesShared33ICPaperSynapseContentItemProviderC12contentItems13forAttachmentSaySo09SYContentF0CGSo12ICAttachmentC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  char *v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  objc_super v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AB78);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for ICSystemPaperDocument();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a1;
  v28.receiver = v10;
  v28.super_class = v9;
  v11 = a1;
  v12 = (char *)objc_msgSendSuper2(&v28, sel_init);
  v13 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment], sel_managedObjectContext);
  if (v13
    && (v14 = v13,
        MEMORY[0x1E0C80A78](v13),
        *(&v26 - 2) = (uint64_t)v12,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AE30),
        sub_1BDBFDFF8(),
        v14,
        (v15 = v27) != 0))
  {
    sub_1BDB592AC((uint64_t)v27, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v24 = sub_1BDBFD4DC();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v24;
    }
    sub_1BDBB6D04((uint64_t)v4);
    if (qword_1ED23ADB8 != -1)
      swift_once();
    v16 = sub_1BDBFCE34();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED23ADA0);
    v17 = sub_1BDBFCE1C();
    v18 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1BD918000, v17, v18, "document.paper not available. Not returning SYContentItems for indexing.", v19, 2u);
      MEMORY[0x1C3B7B478](v19, -1, -1);
    }

  }
  else
  {
    if (qword_1ED23ADB8 != -1)
      swift_once();
    v20 = sub_1BDBFCE34();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED23ADA0);
    v21 = sub_1BDBFCE1C();
    v22 = sub_1BDBFDEE4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1BD918000, v21, v22, "Coherence context not available. Not returning SYContentItems for indexing.", v23, 2u);
      MEMORY[0x1C3B7B478](v23, -1, -1);
    }

  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for ICPaperSynapseContentItemProvider()
{
  return objc_opt_self();
}

unint64_t sub_1BDBB6CC8()
{
  unint64_t result;

  result = qword_1ED23AE68;
  if (!qword_1ED23AE68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED23AE68);
  }
  return result;
}

uint64_t sub_1BDBB6D04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AB78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LoggingConfiguration.subsystem.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t LoggingConfiguration.subsystem.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

void (*LoggingConfiguration.subsystem.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t LoggingConfiguration.category.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t LoggingConfiguration.category.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

void (*LoggingConfiguration.category.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t LoggingConfiguration.logger.getter()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BDBFCE28();
}

uint64_t LogProducer.logger.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  return sub_1BDBFCE28();
}

uint64_t destroy for ActivityEventParticipant()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ActivityEventParticipant(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ActivityEventParticipant(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ActivityEventParticipant(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEventParticipant(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityEventParticipant(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoggingConfiguration()
{
  return &type metadata for LoggingConfiguration;
}

uint64_t dispatch thunk of LogProducer.loggingConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t GroupSessionMessenger.ic_sendChunked<A>(_:size:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v10 = sub_1BDBFCCD8();
  v6[9] = v10;
  v6[10] = *(_QWORD *)(v10 - 8);
  v6[11] = swift_task_alloc();
  v11 = type metadata accessor for MessageChunking.Message(0, a3, a4, a5);
  v6[12] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[13] = v12;
  v6[14] = *(_QWORD *)(v12 + 64);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDBB7130()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v0 + 136) = static MessageChunking.encodeAndChunk<A>(_:size:)(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  if (MEMORY[0x1C3B79060]())
  {
    *(_DWORD *)(v0 + 168) = *MEMORY[0x1E0CB4278];
    v1 = sub_1BDBFDA58();
    sub_1BDBFDA10();
    if ((v1 & 1) != 0)
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136)+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 104) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 104) + 80)), *(_QWORD *)(v0 + 96));
LABEL_4:
      *(_QWORD *)(v0 + 144) = 1;
      v2 = *(unsigned int *)(v0 + 168);
      v3 = *(_QWORD *)(v0 + 96);
      v4 = *(_QWORD *)(v0 + 88);
      (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v3);
      MEMORY[0x1C3B7B388](&protocol conformance descriptor for MessageChunking.Message<A>, v3);
      MEMORY[0x1C3B7B388](&protocol conformance descriptor for MessageChunking.Message<A>, v3);
      v5 = sub_1BDBFCCD8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v6;
      *v6 = v0;
      v6[1] = sub_1BDBB734C;
      return sub_1BDBFCCC0();
    }
    v8 = *(_QWORD *)(v0 + 112);
    result = sub_1BDBFE37C();
    if (v8 == 8)
    {
      v9 = result;
      v10 = *(_QWORD *)(v0 + 128);
      v11 = *(_QWORD *)(v0 + 96);
      v12 = *(_QWORD *)(v0 + 104);
      *(_QWORD *)(v0 + 16) = v9;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v0 + 16, v11);
      swift_unknownObjectRelease();
      goto LABEL_4;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_1BDBB734C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[10] + 8))(v2[11], v2[9]);
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BDBB73DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), v3);
  if (v2 == MEMORY[0x1C3B79060](v1, v3))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 144);
  v6 = sub_1BDBFDA58();
  sub_1BDBFDA10();
  if ((v6 & 1) != 0)
  {
    result = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136)+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 104) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 104) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 104) + 72) * v5, *(_QWORD *)(v0 + 96));
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 112);
    result = sub_1BDBFE37C();
    if (v12 != 8)
      goto LABEL_10;
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 16) = result;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v0 + 16, v14);
    result = swift_unknownObjectRelease();
  }
  *(_QWORD *)(v0 + 144) = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    v7 = *(unsigned int *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v8);
    MEMORY[0x1C3B7B388](&protocol conformance descriptor for MessageChunking.Message<A>, v8);
    MEMORY[0x1C3B7B388](&protocol conformance descriptor for MessageChunking.Message<A>, v8);
    v10 = sub_1BDBFCCD8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v7, v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_1BDBB734C;
    return sub_1BDBFCCC0();
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1BDBB75C8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBB7628()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBB766C()
{
  return sub_1BDBFD794();
}

uint64_t sub_1BDBB7678()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBB76B8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BDBB7708(_QWORD *a1@<X8>)
{
  *a1 = 100;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1BDBB7718()
{
  return 100;
}

uint64_t sub_1BDBB7724@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BDBFE5D4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BDBB7778()
{
  sub_1BDBB7944();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDBB77A0()
{
  sub_1BDBB7944();
  return sub_1BDBFEB50();
}

uint64_t FastSync.PaperKitMessage.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1BDB4EB54(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t FastSync.PaperKitMessage.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BDAEB7EC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

void (*FastSync.PaperKitMessage.data.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FastSync.PaperKitMessage.init(data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FastSync.PaperKitMessage.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBB7944();
  sub_1BDBFEACC();
  v10[0] = v8;
  v10[1] = v7;
  sub_1BDB6D16C();
  sub_1BDBFE718();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BDBB7944()
{
  unint64_t result;

  result = qword_1EF50FC80;
  if (!qword_1EF50FC80)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC2003C, &_s15PaperKitMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50FC80);
  }
  return result;
}

uint64_t FastSync.PaperKitMessage.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FC88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBB7944();
  sub_1BDBFEAB4();
  if (!v2)
  {
    sub_1BDB6D1B0();
    sub_1BDBFE670();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1BDBB7AA8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BDBB7AD4();
  result = sub_1BDBB7B18();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BDBB7AD4()
{
  unint64_t result;

  result = qword_1EF50FC90;
  if (!qword_1EF50FC90)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.PaperKitMessage, &type metadata for FastSync.PaperKitMessage);
    atomic_store(result, (unint64_t *)&qword_1EF50FC90);
  }
  return result;
}

unint64_t sub_1BDBB7B18()
{
  unint64_t result;

  result = qword_1EF50FC98;
  if (!qword_1EF50FC98)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.PaperKitMessage, &type metadata for FastSync.PaperKitMessage);
    atomic_store(result, (unint64_t *)&qword_1EF50FC98);
  }
  return result;
}

uint64_t sub_1BDBB7B5C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FastSync.PaperKitMessage.init(from:)(a1, a2);
}

uint64_t sub_1BDBB7B70(_QWORD *a1)
{
  return FastSync.PaperKitMessage.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FastSync.PaperKitMessage()
{
  return &type metadata for FastSync.PaperKitMessage;
}

uint64_t _s15PaperKitMessageV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BDBB7BD4 + 4 * asc_1BDC1FEB4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BDBB7BF4 + 4 * byte_1BDC1FEB9[v4]))();
}

_BYTE *sub_1BDBB7BD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BDBB7BF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDBB7BFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDBB7C04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDBB7C0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDBB7C14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s15PaperKitMessageV10CodingKeysOMa()
{
  return &_s15PaperKitMessageV10CodingKeysON;
}

unint64_t sub_1BDBB7C34()
{
  unint64_t result;

  result = qword_1EF50FCA0;
  if (!qword_1EF50FCA0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC20014, &_s15PaperKitMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50FCA0);
  }
  return result;
}

unint64_t sub_1BDBB7C7C()
{
  unint64_t result;

  result = qword_1EF50FCA8;
  if (!qword_1EF50FCA8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1FF4C, &_s15PaperKitMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50FCA8);
  }
  return result;
}

unint64_t sub_1BDBB7CC4()
{
  unint64_t result;

  result = qword_1EF50FCB0;
  if (!qword_1EF50FCB0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC1FF74, &_s15PaperKitMessageV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF50FCB0);
  }
  return result;
}

id sub_1BDBB7D0C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  qword_1EF520230 = (uint64_t)result;
  return result;
}

id sub_1BDBB7D3C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAF0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BDC20090;
  v1 = (void *)*MEMORY[0x1E0C966E8];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C966E8];
  v2 = (void *)objc_opt_self();
  v3 = v1;
  v4 = objc_msgSend(v2, sel_descriptorForRequiredKeysForStyle_, 0);
  v5 = (void *)*MEMORY[0x1E0C966A8];
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v5;
  v8 = (id)*MEMORY[0x1E0C967C0];
  *(_QWORD *)(v0 + 56) = *MEMORY[0x1E0C967C0];
  sub_1BDBFD9F8();
  qword_1EF520238 = v0;
  v6 = v5;
  return v8;
}

uint64_t static AudioTranscriptionContactsUtility.fetchContactNameForUniqueProxyIdentifier(identifier:)()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = (void *)sub_1BDBFD6C8();
  v2 = objc_msgSend(v0, sel_callWithUniqueProxyIdentifier_, v1);

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, sel_handle);
  if (!v3)
  {

    return 0;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, sel_value);
  sub_1BDBFD6F8();

  v6 = _s11NotesShared33AudioTranscriptionContactsUtilityV015speakerNameFromE06handleSSSgSS_tFZ_0();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s11NotesShared33AudioTranscriptionContactsUtilityV015speakerNameFromE06handleSSSgSS_tFZ_0()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;

  if (qword_1EF50B2F0 != -1)
    swift_once();
  v0 = (void *)qword_1EF520230;
  v1 = (void *)sub_1BDBFD6C8();
  if (qword_1EF50B2F8 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D4B0);
  v2 = (void *)sub_1BDBFD9C8();
  v3 = objc_msgSend(v0, sel_ic_contactForHandleString_keysToFetch_, v1, v2);

  if (!v3)
    return 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v3, 0);
  if (!v4)
  {

    return 0;
  }
  v5 = v4;
  v6 = sub_1BDBFD6F8();

  return v6;
}

ValueMetadata *type metadata accessor for AudioTranscriptionContactsUtility()
{
  return &type metadata for AudioTranscriptionContactsUtility;
}

Swift::Void __swiftcall NoteAccountObject.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;

  v2 = objc_msgSend(v1, sel_objectID);
  if ((objc_msgSend(v2, sel_ic_isModernType) & 1) == 0)
    objc_msgSend(v2, sel_ic_isLegacyType);

  v3 = v1;
  if (!objc_msgSend(v3, sel_isLocalAccount))
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_emailAddressForAccount_, v3);
    sub_1BDBFD6F8();

  }
  AccountID.entityIdentifierString.getter();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_localizedName);
  if (v5)
  {
    v6 = v5;
    sub_1BDBFD6F8();

  }
  sub_1BDAC2F74(MEMORY[0x1E0DEE9D8]);
  sub_1BDBFE034();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1BDBB8224(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  NoteAccountObject.associateAppEntity(with:)((CSSearchableItemAttributeSet)v4);

}

uint64_t ManagedEntityContextType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1819112552;
  else
    return 0x6E7265646F6DLL;
}

NotesShared::ManagedEntityContextType_optional __swiftcall ManagedEntityContextType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NotesShared::ManagedEntityContextType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BDBFE5D4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ManagedEntityContextType.uriPathComponent.getter@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B1C0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*v1 & 1) != 0)
  {
    sub_1BDBFD0EC();
    v6 = sub_1BDBFD0E0();
    v7 = *(_QWORD *)(v6 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    v9 = sub_1BDBFD0E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  return result;
}

void NSManagedObject.managedEntityContextType.getter(char *a1@<X8>)
{
  void *v1;
  id v3;
  char v4;
  unsigned int v5;

  v3 = objc_msgSend(v1, sel_objectID);
  if (objc_msgSend(v3, sel_ic_isModernType))
  {

    v4 = 0;
  }
  else
  {
    v5 = objc_msgSend(v3, sel_ic_isLegacyType);

    if (v5)
      v4 = 1;
    else
      v4 = 2;
  }
  *a1 = v4;
}

id NSManagedObjectID.managedEntityContextType.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  id result;
  char v4;

  result = objc_msgSend(v1, sel_ic_isModernType);
  if ((result & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    result = objc_msgSend(v1, sel_ic_isLegacyType);
    if ((_DWORD)result)
      v4 = 1;
    else
      v4 = 2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1BDBB84F0(char *a1, char *a2)
{
  return sub_1BDB529C4(*a1, *a2);
}

NotesShared::ManagedEntityContextType_optional sub_1BDBB84FC(Swift::String *a1)
{
  return ManagedEntityContextType.init(rawValue:)(*a1);
}

void sub_1BDBB8508(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1819112552;
  if (!*v1)
    v2 = 0x6E7265646F6DLL;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BDBB853C()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBB85B0()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDBB8600()
{
  sub_1BDBFEA0C();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t ManagedEntityContextType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1819112552;
  else
    return 0x6E7265646F6DLL;
}

uint64_t sub_1BDBB86A0()
{
  _BYTE *v0;

  if (*v0)
    return 1819112552;
  else
    return 0x6E7265646F6DLL;
}

unint64_t ManagedEntityContextType.debugDescription.getter()
{
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

unint64_t sub_1BDBB8770()
{
  unint64_t result;

  result = qword_1EF50FCB8;
  if (!qword_1EF50FCB8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ManagedEntityContextType, &type metadata for ManagedEntityContextType);
    atomic_store(result, (unint64_t *)&qword_1EF50FCB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ManagedEntityContextType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDBB8804 + 4 * byte_1BDC200D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDBB8838 + 4 * asc_1BDC200D0[v4]))();
}

uint64_t sub_1BDBB8838(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBB8840(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBB8848);
  return result;
}

uint64_t sub_1BDBB8854(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBB885CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDBB8860(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBB8868(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedEntityContextType()
{
  return &type metadata for ManagedEntityContextType;
}

void static FastSync.MessageVersion.current.getter(_QWORD *a1@<X8>)
{
  *a1 = 11;
}

void static FastSync.MessageVersion.future.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t FastSync.MessageVersion.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBFEAA8();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    type metadata accessor for NotesVersion(0);
    sub_1BDBB8980();
    sub_1BDBFE88C();
    v5 = v7[6];
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1BDBB8980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50FCC0;
  if (!qword_1EF50FCC0)
  {
    type metadata accessor for NotesVersion(255);
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICNotesVersion, v1);
    atomic_store(result, (unint64_t *)&qword_1EF50FCC0);
  }
  return result;
}

uint64_t FastSync.MessageVersion.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBFEAC0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1BDBFE8B0();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
}

uint64_t sub_1BDBB8A58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FastSync.MessageVersion.init(from:)(a1, a2);
}

uint64_t sub_1BDBB8A6C(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBFEAC0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1BDBFE8B0();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
}

BOOL static FastSync.MessageVersion.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL static FastSync.MessageVersion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t FastSync.MessageVersion.description.getter()
{
  return sub_1BDBFE760();
}

uint64_t sub_1BDBB8B64()
{
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return 0;
}

unint64_t sub_1BDBB8BE8()
{
  unint64_t result;

  result = qword_1EF50FCC8;
  if (!qword_1EF50FCC8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageVersion, &type metadata for FastSync.MessageVersion);
    atomic_store(result, (unint64_t *)&qword_1EF50FCC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FastSync.MessageVersion()
{
  return &type metadata for FastSync.MessageVersion;
}

uint64_t FastSync.MessageContainer.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FastSync.MessageContainer.version.getter@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t FastSync.MessageContainer.init(messages:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  result = type metadata accessor for FastSync.MessageContainer(0, a2, v6, v7);
  *(_QWORD *)(a3 + *(int *)(result + 32)) = a1;
  *(_QWORD *)(a3 + *(int *)(result + 28)) = 11;
  return result;
}

uint64_t type metadata accessor for FastSync.MessageContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FastSync.MessageContainer);
}

uint64_t FastSync.MessageContainer.init<A>(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FCD0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(v10 + 56) = a3;
  *(_QWORD *)(v10 + 64) = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 32));
  v12 = *(_QWORD *)(a3 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(boxed_opaque_existential_1, a1, a3);
  *(_BYTE *)(v10 + 72) = 0;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  v15 = type metadata accessor for FastSync.MessageContainer(0, a2, v13, v14);
  *(_QWORD *)(a5 + *(int *)(v15 + 32)) = v10;
  *(_QWORD *)(a5 + *(int *)(v15 + 28)) = 11;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, a3);
}

uint64_t FastSync.MessageContainer.append<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14[5];
  char v15;

  v14[3] = a3;
  v14[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v15 = 0;
  v9 = *(int *)(a2 + 32);
  v10 = *(_QWORD **)(v4 + v9);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_1BDBCC0FC(0, v10[2] + 1, 1, v10);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_1BDBCC0FC((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  result = sub_1BDBBA83C((uint64_t)v14, (uint64_t)&v10[6 * v12 + 4]);
  *(_QWORD *)(v4 + v9) = v10;
  return result;
}

uint64_t static FastSync.MessageContainer<A>.messageIdentifier.getter()
{
  return sub_1BDBFCCE4();
}

uint64_t sub_1BDBB8EA0()
{
  return static FastSync.MessageContainer<A>.messageIdentifier.getter();
}

uint64_t FastSync.MessageContainer.startIndex.getter()
{
  return 0;
}

uint64_t FastSync.MessageContainer.count.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(a1 + 32)) + 16);
}

BOOL FastSync.MessageContainer.isEmpty.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(a1 + 32)) + 16) == 0;
}

unint64_t FastSync.MessageContainer.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v3 + *(int *)(a2 + 32));
    if (*(_QWORD *)(v4 + 16) > result)
      return sub_1BDBBA884(v4 + 48 * result + 32, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBB8F10()
{
  return sub_1BDBFDDA0();
}

uint64_t sub_1BDBB8F20()
{
  return sub_1BDBFDDB8();
}

uint64_t sub_1BDBB8F2C()
{
  MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>);
  return sub_1BDBFDD94();
}

_QWORD *sub_1BDBB8F7C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBB92BC(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1BDBB8F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>, a3);
  return sub_1BDBFDDA0();
}

uint64_t sub_1BDBB8FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>, a4);
  return sub_1BDBFDD7C();
}

uint64_t sub_1BDBB9050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>, a3);
  return sub_1BDBFDDB8();
}

uint64_t sub_1BDBB90A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = FastSync.MessageContainer.count.getter(a1);
  *a2 = result;
  return result;
}

void (*sub_1BDBB90C8(_QWORD *a1, unint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1BDBB9124(v6, *a2, a3);
  return sub_1BDAC7508;
}

void (*sub_1BDBB9124(_QWORD *a1, unint64_t a2, uint64_t a3))(uint64_t *a1)
{
  void *v6;

  v6 = malloc(0x29uLL);
  *a1 = v6;
  FastSync.MessageContainer.subscript.getter(a2, a3, (uint64_t)v6);
  return sub_1BDBB9184;
}

void sub_1BDBB9184(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1BDBBA91C(*a1);
  free(v1);
}

uint64_t sub_1BDBB91B0(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>, a1);
  return sub_1BDBFDDAC();
}

void sub_1BDBB9204(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_1BDBB9214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDBBAAE4(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3C0]);
}

uint64_t sub_1BDBB9238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDBBAAE4(a1, a2, a3, a4, MEMORY[0x1E0DEA4B0], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3D0]);
}

uint64_t sub_1BDBB9260()
{
  MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>);
  return sub_1BDBFDD88();
}

_QWORD *sub_1BDBB92B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBB92BC(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1BDBB92BC(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1BDBB9320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(a2, v4, a1);
  MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>, a1);
  result = sub_1BDBFE4F0();
  *(_QWORD *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_1BDBB9380(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>, a1);
  return sub_1BDBFDE0C();
}

uint64_t sub_1BDBB93B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>, a1);
  v4 = sub_1BDBBAC90(v1, a1, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v4;
}

uint64_t sub_1BDBB9414()
{
  unint64_t v0;

  v0 = sub_1BDBFE5D4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BDBB9460(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 109;
  return 118;
}

uint64_t sub_1BDBB9498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B7B388](&unk_1BDC20688, a3);
  return sub_1BDBFE8D4();
}

uint64_t sub_1BDBB94EC(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC20688, a1);
  return sub_1BDBFD974();
}

uint64_t sub_1BDBB9538()
{
  MEMORY[0x1C3B7B388](&unk_1BDC20688);
  return sub_1BDBFD98C();
}

uint64_t sub_1BDBB9588()
{
  MEMORY[0x1C3B7B388](&unk_1BDC20688);
  return sub_1BDBFD980();
}

uint64_t sub_1BDBB95D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDBB9414();
  *a1 = result;
  return result;
}

uint64_t sub_1BDBB960C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BDBB9460(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BDBB9638()
{
  char *v0;

  return sub_1BDBB9460(*v0);
}

uint64_t sub_1BDBB9644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_1BDBB945C(a1, a2, *(_QWORD *)(a3 + 16));
  *a4 = result;
  return result;
}

uint64_t sub_1BDBB966C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BDBBBAEC();
  *a1 = result;
  return result;
}

uint64_t sub_1BDBB9694(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC20728, a1);
  return sub_1BDBFEB44();
}

uint64_t sub_1BDBB96C8(uint64_t a1)
{
  MEMORY[0x1C3B7B388](&unk_1BDC20728, a1);
  return sub_1BDBFEB50();
}

uint64_t FastSync.MessageContainer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _QWORD v55[5];
  char v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;

  v42 = a3;
  v46 = sub_1BDBFCB40();
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s16MessageContainerV10CodingKeysOMa(255, a2, v6, v7);
  MEMORY[0x1C3B7B388](&unk_1BDC20728, v8);
  v47 = sub_1BDBFE688();
  v9 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v11 = (char *)v39 - v10;
  v44 = a2;
  v14 = type metadata accessor for FastSync.MessageContainer(0, a2, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(int *)(MEMORY[0x1E0C80A78](v14) + 32);
  v49 = (char *)v39 - v17;
  v59 = v16;
  *(_QWORD *)&v49[v16] = MEMORY[0x1E0DEE9D8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18 = (uint64_t)v48;
  sub_1BDBFEAB4();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  v40 = v15;
  v41 = v14;
  v48 = a1;
  LOBYTE(v55[0]) = 0;
  sub_1BDB18A50(&qword_1EF50CD48, MEMORY[0x1E0CB09E0]);
  v19 = v45;
  v20 = v46;
  sub_1BDBFE670();
  v22 = v49;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v49, v19, v20);
  LOBYTE(v50) = 2;
  sub_1BDBBA8D8();
  sub_1BDBFE670();
  *(_QWORD *)&v22[*(int *)(v41 + 28)] = v55[0];
  LOBYTE(v55[0]) = 1;
  sub_1BDBFE5E0();
  v23 = v22;
  v45 = v11;
  __swift_project_boxed_opaque_existential_1(v57, v58);
  result = sub_1BDBFE778();
  v24 = v42;
  if ((v25 & 1) != 0)
    goto LABEL_9;
  v26 = result + 1;
  if (!__OFADD__(result, 1))
  {
    if (v26 < 0)
      v26 = result + 2;
    v27 = sub_1BDBCC0FC(0, (v26 >> 1) & ~(v26 >> 63), 0, MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)&v22[v59] = v27;
LABEL_9:
    __swift_project_boxed_opaque_existential_1(v57, v58);
    if ((sub_1BDBFE79C() & 1) != 0)
    {
LABEL_10:
      (*(void (**)(char *, uint64_t))(v9 + 8))(v45, v47);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v57);
      v28 = v40;
      v29 = v41;
      (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v24, v23, v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v48);
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v23, v29);
    }
    v46 = 0x80000001BDC3A980;
    v43 = 0x80000001BDC3A9A0;
    v39[1] = 0x80000001BDC3A9C0;
    v39[0] = 0x80000001BDC3A9E0;
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v57, v58);
      sub_1BDBFE784();
      v30 = sub_1BDBFE31C();
      if (!v30)
        break;
      v31 = v30;
      swift_bridgeObjectRelease();
      v32 = swift_conformsToProtocol2();
      if (v32)
        v33 = v32;
      else
        v33 = 0;
      if (v32)
        v34 = v31;
      else
        v34 = 0;
      if (!v34 || (sub_1BDBBAD08() & 1) == 0)
      {
        sub_1BDADED64((uint64_t)v57, (uint64_t)v55);
        v50 = 0;
        v51 = 0xE000000000000000;
        sub_1BDBFE304();
        sub_1BDBFD7DC();
        sub_1BDBFEB5C();
        sub_1BDBFD7DC();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v57, v58);
      v52 = v34;
      v53 = v33;
      __swift_allocate_boxed_opaque_existential_1(&v50);
      sub_1BDBFE790();
      sub_1BDADED64((uint64_t)&v50, (uint64_t)v55);
      v56 = 0;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v50);
      v24 = v42;
LABEL_25:
      v23 = v49;
      sub_1BDBBA884((uint64_t)v55, (uint64_t)&v50);
      v36 = *(_QWORD **)&v23[v59];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_1BDBCC0FC(0, v36[2] + 1, 1, v36);
      v38 = v36[2];
      v37 = v36[3];
      if (v38 >= v37 >> 1)
        v36 = sub_1BDBCC0FC((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
      v36[2] = v38 + 1;
      sub_1BDBBA83C((uint64_t)&v50, (uint64_t)&v36[6 * v38 + 4]);
      *(_QWORD *)&v23[v59] = v36;
      sub_1BDBBA91C((uint64_t)v55);
      __swift_project_boxed_opaque_existential_1(v57, v58);
      if ((sub_1BDBFE79C() & 1) != 0)
        goto LABEL_10;
    }
    sub_1BDADED64((uint64_t)v57, (uint64_t)v55);
    v50 = 0;
    v51 = 0xE000000000000000;
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    v50 = 0x272065707954;
    v51 = 0xE600000000000000;
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
LABEL_24:
    sub_1BDBFD7DC();
    sub_1BDBFE3D0();
    v35 = swift_allocError();
    sub_1BDBFE3A0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v55);
    v50 = v35;
    v54 = 1;
    sub_1BDBBA83C((uint64_t)&v50, (uint64_t)v55);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v57, v58);
    UnkeyedDecodingContainer.skip(count:)(1);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBB9F6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FastSync.MessageContainer.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

uint64_t FastSync.MessageContainer.encode(to:)(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  os_log_type_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  os_log_type_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47[2];
  char v48;
  char v49;
  uint64_t v50[5];
  uint64_t v51;
  unint64_t v52;
  void *v53;

  v46 = *(_QWORD *)(a2 + 16);
  v8 = _s16MessageContainerV10CodingKeysOMa(255, v46, a3, a4);
  MEMORY[0x1C3B7B388](&unk_1BDC20728, v8);
  v9 = sub_1BDBFE730();
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v39 - v11;
  if (*(_QWORD *)(*(_QWORD *)(v4 + *(int *)(a2 + 32)) + 16))
  {
    v43 = a2;
    v44 = v10;
    *(_QWORD *)&v45 = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BDBFEACC();
    LOBYTE(v47[0]) = 0;
    sub_1BDBFCB40();
    sub_1BDB18A50(&qword_1ED23A730, MEMORY[0x1E0CB09B8]);
    v13 = v45;
    sub_1BDBFE718();
    if (v13)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v12, v9);
    }
    else
    {
      v14 = v43;
      *(_QWORD *)&v47[0] = *(_QWORD *)(v4 + *(int *)(v43 + 28));
      LOBYTE(v51) = 2;
      sub_1BDBBAE00();
      sub_1BDBFE718();
      v39[2] = 0;
      LOBYTE(v47[0]) = 1;
      v40 = v9;
      sub_1BDBFE6A0();
      v24 = *(_QWORD *)(v4 + *(int *)(v14 + 32));
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v24 + 32;
        v39[1] = *(_QWORD *)(v4 + *(int *)(v14 + 32));
        swift_bridgeObjectRetain();
        *(_QWORD *)&v27 = 136315650;
        v45 = v27;
        v43 = 0x80000001BDC3AA40;
        v41 = MEMORY[0x1E0DEE9B8] + 8;
        v42 = v12;
        do
        {
          sub_1BDBBA884(v26, (uint64_t)v47);
          if ((v49 & 1) != 0)
          {
            v28 = *(void **)&v47[0];
            v53 = *(void **)&v47[0];
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B110);
            swift_willThrowTypedImpl();
            v29 = v28;
            v30 = v28;
            if (qword_1ED23A5D8 != -1)
              swift_once();
            v31 = sub_1BDBFCE34();
            __swift_project_value_buffer(v31, (uint64_t)qword_1ED23A330);
            v32 = sub_1BDBFDEF0();
            v33 = sub_1BDBFCE1C();
            if (os_log_type_enabled(v33, v32))
            {
              v34 = swift_slowAlloc();
              v35 = swift_slowAlloc();
              v50[0] = v35;
              *(_DWORD *)v34 = v45;
              v36 = sub_1BDBFE34C();
              *(_QWORD *)(v34 + 4) = sub_1BDAE53FC(v36, v37, v50);
              swift_bridgeObjectRelease();
              *(_WORD *)(v34 + 12) = 2048;
              *(_QWORD *)(v34 + 14) = 190;
              *(_WORD *)(v34 + 22) = 2080;
              *(_QWORD *)&v47[0] = 0;
              *((_QWORD *)&v47[0] + 1) = 0xE000000000000000;
              sub_1BDBFE304();
              sub_1BDBFD7DC();
              v53 = v28;
              sub_1BDBFE4E4();
              *(_QWORD *)(v34 + 24) = sub_1BDAE53FC(*(uint64_t *)&v47[0], *((unint64_t *)&v47[0] + 1), v50);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1BD918000, v33, v32, "Failed assertion at %s:%lu: %s", (uint8_t *)v34, 0x20u);
              swift_arrayDestroy();
              v38 = v35;
              v12 = v42;
              MEMORY[0x1C3B7B478](v38, -1, -1);
              MEMORY[0x1C3B7B478](v34, -1, -1);

            }
            else
            {

            }
          }
          else
          {
            sub_1BDAE14D4(v47, (uint64_t)v50);
            sub_1BDBBAE44(v50, (uint64_t)&v51);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v50);
          }
          v26 += 48;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v51);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v12, v40);
    }
  }
  else
  {
    if (qword_1ED23A5D8 != -1)
      swift_once();
    v16 = sub_1BDBFCE34();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED23A330);
    v17 = sub_1BDBFDEF0();
    v18 = sub_1BDBFCE1C();
    if (os_log_type_enabled(v18, v17))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v50[0] = v20;
      *(_DWORD *)v19 = 136315650;
      v21 = sub_1BDBFE34C();
      *(_QWORD *)&v47[0] = sub_1BDAE53FC(v21, v22, v50);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2048;
      *(_QWORD *)&v47[0] = 176;
      sub_1BDBFE100();
      *(_WORD *)(v19 + 22) = 2080;
      v51 = 0;
      v52 = 0xE000000000000000;
      memset(v47, 0, sizeof(v47));
      v48 = 7;
      sub_1BDBFE4E4();
      *(_QWORD *)&v47[0] = sub_1BDAE53FC(v51, v52, v50);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, v18, v17, "Failed assertion at %s:%lu: %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v20, -1, -1);
      MEMORY[0x1C3B7B478](v19, -1, -1);
    }

    sub_1BDB8D6D0();
    swift_allocError();
    *(_OWORD *)v23 = 0u;
    *(_OWORD *)(v23 + 16) = 0u;
    *(_BYTE *)(v23 + 32) = 7;
    return swift_willThrow();
  }
}

uint64_t sub_1BDBBA684(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return FastSync.MessageContainer.encode(to:)(a1, a2, a3, a4);
}

uint64_t FastSync.MessageContainer.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BDBFE304();
  sub_1BDBFEB5C();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFCB40();
  sub_1BDB18A50((unint64_t *)&qword_1EF50D6A0, MEMORY[0x1E0CB09F0]);
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  sub_1BDBFE760();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  v3 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510070);
  MEMORY[0x1C3B78FB8](v3, v4);
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return 0;
}

uint64_t sub_1BDBBA83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDBBA884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s16MessageContainerV10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s16MessageContainerV10CodingKeysOMn);
}

unint64_t sub_1BDBBA8D8()
{
  unint64_t result;

  result = qword_1EF50FCD8;
  if (!qword_1EF50FCD8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageVersion, &type metadata for FastSync.MessageVersion);
    atomic_store(result, (unint64_t *)&qword_1EF50FCD8);
  }
  return result;
}

uint64_t sub_1BDBBA91C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510070);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDBBA95C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_1BDBFDE78();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  v11 = sub_1BDBFD68C();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v8, a2, v4);
  if ((v11 & 1) == 0)
  {
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
    goto LABEL_5;
  }
  v13 = sub_1BDBFD68C();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1BDBBAAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t, uint64_t);

  v23 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v22 - v17;
  v19 = sub_1BDBFD68C();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1BDBBAC94(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6)
    return 1;
  else
    return sub_1BDBFE754() & 1;
}

uint64_t sub_1BDBBAD08()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FDF0);
  sub_1BDBFD74C();
  sub_1BDAC3548();
  v0 = (_QWORD *)sub_1BDBFE178();
  swift_bridgeObjectRelease();
  if (v0[2])
  {
    v1 = v0[4];
    v2 = v0[5];
    v3 = v0[6];
    v4 = v0[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v5 = sub_1BDBBAC94(v1, v2, v3, v4, 0x6168537365746F4ELL, 0xEB00000000646572);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1BDBBAE00()
{
  unint64_t result;

  result = qword_1EF50FCE0;
  if (!qword_1EF50FCE0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageVersion, &type metadata for FastSync.MessageVersion);
    atomic_store(result, (unint64_t *)&qword_1EF50FCE0);
  }
  return result;
}

void sub_1BDBBAE44(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *log;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_1BDBFE4FC();
  if (v4)
  {
    __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
    sub_1BDBFE820();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
    sub_1BDBFE82C();
  }
  else
  {
    if (qword_1ED23A5D8 != -1)
      swift_once();
    v5 = sub_1BDBFCE34();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED23A330);
    v6 = sub_1BDBFDEF0();
    log = sub_1BDBFCE1C();
    if (os_log_type_enabled(log, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v12 = v8;
      *(_DWORD *)v7 = 136315650;
      v9 = sub_1BDBFE34C();
      sub_1BDAE53FC(v9, v10, &v12);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2048;
      sub_1BDBFE100();
      *(_WORD *)(v7 + 22) = 2080;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      sub_1BDBFEB5C();
      sub_1BDBFD7DC();
      swift_bridgeObjectRelease();
      sub_1BDAE53FC(0, 0xE000000000000000, &v12);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, log, v6, "Failed assertion at %s:%lu: %s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v8, -1, -1);
      MEMORY[0x1C3B7B478](v7, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1BDBBB428()
{
  return sub_1BDB18A50((unint64_t *)&qword_1ED23AB60, MEMORY[0x1E0CB09C8]);
}

void sub_1BDBBB44C()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t sub_1BDBBB45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBBB580(a1, a2, a3, MEMORY[0x1E0DEB8B8]);
}

unint64_t sub_1BDBBB468()
{
  unint64_t result;

  result = qword_1EF50FCE8[0];
  if (!qword_1EF50FCE8[0])
  {
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, qword_1EF50FCE8);
  }
  return result;
}

uint64_t sub_1BDBBB4AC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>);
  return MEMORY[0x1C3B7B388](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1BDBBB4F4()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t sub_1BDBBB504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBBB580(a1, a2, a3, MEMORY[0x1E0DEB890]);
}

uint64_t sub_1BDBBB510(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1C3B7B388](&protocol conformance descriptor for FastSync.MessageContainer<A>);
  return MEMORY[0x1C3B7B388](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1BDBBB558()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t sub_1BDBBB568()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_1BDBBB574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDBBB580(a1, a2, a3, MEMORY[0x1E0DEB8C0]);
}

uint64_t sub_1BDBBB580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  _QWORD v8[2];

  v6 = sub_1BDBBB468();
  v8[0] = MEMORY[0x1E0DEB458];
  v8[1] = v6;
  return MEMORY[0x1C3B7B388](a4, a1, v8);
}

void sub_1BDBBB5C8()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDBBB5D8()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t sub_1BDBBB5E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BDBBB66C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BDBFCB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 32);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BDBBB700(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDBBB744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BDBBB7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BDBBB824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1BDBBB888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BDBBB8F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBBB900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BDBFCB40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BDBBB97C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBBB988(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BDBFCB40();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t sub_1BDBBBA00(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BDBBBA4C + 4 * byte_1BDC202F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BDBBBA80 + 4 * asc_1BDC202F0[v4]))();
}

uint64_t sub_1BDBBBA80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBBBA88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBBBA90);
  return result;
}

uint64_t sub_1BDBBBA9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBBBAA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BDBBBAA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBBBAB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BDBBBABC()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDBBBACC()
{
  JUMPOUT(0x1C3B7B388);
}

void sub_1BDBBBADC()
{
  JUMPOUT(0x1C3B7B388);
}

uint64_t sub_1BDBBBAEC()
{
  return 3;
}

__C::_NSRange_optional __swiftcall _NSRange.init(union:)(Swift::OpaquePointer a1)
{
  Swift::Int v1;
  Swift::Int v2;
  char v3;
  Swift::Bool v4;
  __C::_NSRange_optional result;

  v1 = sub_1BDBBCFCC((uint64_t)a1._rawValue);
  v4 = v3 & 1;
  result.value.length = v2;
  result.value.location = v1;
  result.is_nil = v4;
  return result;
}

uint64_t _NSRange.difference(_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = a3 + a4;
  if (__OFADD__(a3, a4))
  {
    __break(1u);
    goto LABEL_33;
  }
  v5 = result;
  v6 = result + a2;
  if (__OFADD__(result, a2))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v4 >= v6)
    v9 = result + a2;
  else
    v9 = a3 + a4;
  if (a3 < result || v6 <= a3)
  {
    if (result < a3 || v4 <= result)
      goto LABEL_17;
    v10 = v9 - result;
    if (!__OFSUB__(v9, result))
      goto LABEL_13;
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v10 = v9 - a3;
  if (__OFSUB__(v9, a3))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v5 = a3;
LABEL_13:
  if (v10 < 1)
  {
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CF0);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(result + 32) = a3;
    *(_QWORD *)(result + 40) = a4;
    return result;
  }
  if (v5 == a3 && v10 == a4)
    return MEMORY[0x1E0DEE9D8];
  if (v5 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CF0);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1BDC16BA0;
    v15 = v5 + v10;
    if (!__OFADD__(v5, v10))
    {
      if (!__OFSUB__(v4, v15))
      {
        *(_QWORD *)(result + 32) = v15;
        *(_QWORD *)(result + 40) = v4 - v15;
        return result;
      }
      goto LABEL_38;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = v5 + v10;
  if (__OFADD__(v5, v10))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CF0);
  v12 = __OFSUB__(v5, a3);
  v13 = v5 - a3;
  v14 = v12;
  if (v11 < v4)
  {
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1BDC17EC0;
    if ((v14 & 1) == 0)
    {
      *(_QWORD *)(result + 32) = a3;
      *(_QWORD *)(result + 40) = v13;
      if (!__OFSUB__(v4, v11))
      {
        *(_QWORD *)(result + 48) = v11;
        *(_QWORD *)(result + 56) = v4 - v11;
        return result;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1BDC16BA0;
  if ((v14 & 1) == 0)
  {
    *(_QWORD *)(result + 32) = a3;
    *(_QWORD *)(result + 40) = v13;
    return result;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t _NSRange.difference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  _QWORD *v33;

  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1BDBBBFA4((uint64_t (*)(__int128 *, __int128 *))sub_1BDAC3CB4, 0);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CF0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  v33 = (_QWORD *)v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
    v31 = v6;
    swift_release();
    return v31;
  }
  swift_retain();
  v8 = (uint64_t *)(a1 + 40);
  v9 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v11 = v33;
    if (!v33[2])
      goto LABEL_5;
    v12 = *(v8 - 1);
    v13 = *v8;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v14 = v33[2];
      if (!v14)
        goto LABEL_47;
    }
    else
    {
      v11 = sub_1BDBBCF54(v33);
      v14 = v11[2];
      if (!v14)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        swift_release_n();
        return (uint64_t)v33;
      }
    }
    v15 = v14 - 1;
    v16 = &v11[2 * v15];
    v17 = v16[4];
    v18 = v16[5];
    v11[2] = v15;
    v33 = v11;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      break;
    v20 = v12 + v13;
    if (__OFADD__(v12, v13))
      goto LABEL_52;
    if (v19 >= v20)
      v21 = v12 + v13;
    else
      v21 = v17 + v18;
    if (v17 >= v12 && v17 < v20)
    {
      v24 = v21 - v17;
      if (__OFSUB__(v21, v17))
        goto LABEL_53;
      v12 = v17;
      if (v24 >= 1)
      {
LABEL_28:
        v25 = v12 == v17 && v24 == v18;
        v10 = v9;
        if (!v25)
        {
          if (v17 >= v12)
          {
            v10 = swift_allocObject();
            *(_OWORD *)(v10 + 16) = xmmword_1BDC16BA0;
            v30 = v12 + v24;
            if (__OFADD__(v12, v24))
              goto LABEL_56;
            if (__OFSUB__(v19, v30))
              goto LABEL_57;
            *(_QWORD *)(v10 + 32) = v30;
            *(_QWORD *)(v10 + 40) = v19 - v30;
          }
          else
          {
            v26 = v12 + v24;
            if (__OFADD__(v12, v24))
              goto LABEL_55;
            v27 = __OFSUB__(v12, v17);
            v28 = v12 - v17;
            v29 = v27;
            if (v26 >= v19)
            {
              v10 = swift_allocObject();
              *(_OWORD *)(v10 + 16) = xmmword_1BDC16BA0;
              if ((v29 & 1) != 0)
                goto LABEL_59;
              *(_QWORD *)(v10 + 32) = v17;
              *(_QWORD *)(v10 + 40) = v28;
            }
            else
            {
              v10 = swift_allocObject();
              *(_OWORD *)(v10 + 16) = xmmword_1BDC17EC0;
              if ((v29 & 1) != 0)
                goto LABEL_58;
              *(_QWORD *)(v10 + 32) = v17;
              *(_QWORD *)(v10 + 40) = v28;
              if (__OFSUB__(v19, v26))
                goto LABEL_60;
              *(_QWORD *)(v10 + 48) = v26;
              *(_QWORD *)(v10 + 56) = v19 - v26;
            }
          }
        }
        goto LABEL_4;
      }
    }
    else if (v12 >= v17 && v12 < v19)
    {
      v24 = v21 - v12;
      if (__OFSUB__(v21, v12))
        goto LABEL_54;
      if (v24 >= 1)
        goto LABEL_28;
    }
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(v10 + 32) = v17;
    *(_QWORD *)(v10 + 40) = v18;
LABEL_4:
    sub_1BDBC4ED4(v10);
LABEL_5:
    v8 += 2;
    if (!--v7)
      goto LABEL_48;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BDBBBFA4(uint64_t (*a1)(__int128 *, __int128 *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1BDBBCFB8(v5);
  result = sub_1BDBBC024(a1, a2);
  *v2 = v5;
  return result;
}

uint64_t sub_1BDBBC024(uint64_t (*a1)(__int128 *, __int128 *), uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  __int128 *v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  __int128 *v75;
  __int128 v76;
  uint64_t v77;
  __int128 *v78;
  char v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *__dst;
  uint64_t v94;
  __int128 v96;
  __int128 v97;
  uint64_t v98;

  v98 = a2;
  v4 = v2[1];
  result = sub_1BDBFE748();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_135;
    if (v4)
      return sub_1BDBBC71C(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 <= -2)
    goto LABEL_144;
  v92 = v4;
  v90 = result;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v91 = MEMORY[0x1E0DEE9D8];
    if (v4 != 1)
    {
      v25 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_102:
      if (v25 >= 2)
      {
        v81 = *v2;
        do
        {
          v82 = v25 - 2;
          if (v25 < 2)
            goto LABEL_130;
          if (!v81)
            goto LABEL_143;
          v83 = *(_QWORD *)&v9[16 * v82 + 32];
          v84 = *(_QWORD *)&v9[16 * v25 + 24];
          sub_1BDBBC7F0((char *)(v81 + 16 * v83), (char *)(v81 + 16 * *(_QWORD *)&v9[16 * v25 + 16]), v81 + 16 * v84, __dst, a1);
          if (v3)
            break;
          if (v84 < v83)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BDBBCF04((uint64_t)v9);
          if (v82 >= *((_QWORD *)v9 + 2))
            goto LABEL_132;
          v85 = &v9[16 * v82 + 32];
          *(_QWORD *)v85 = v83;
          *((_QWORD *)v85 + 1) = v84;
          v86 = *((_QWORD *)v9 + 2);
          if (v25 > v86)
            goto LABEL_133;
          memmove(&v9[16 * v25 + 16], &v9[16 * v25 + 32], 16 * (v86 - v25));
          *((_QWORD *)v9 + 2) = v86 - 1;
          v25 = v86 - 1;
        }
        while (v86 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v91 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v6 >> 1;
    type metadata accessor for _NSRange(0);
    v8 = sub_1BDBFDA4C();
    *(_QWORD *)(v8 + 16) = v7;
    v91 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *v2;
  v89 = *v2 + 32;
  v87 = v2;
  v88 = *v2 - 16;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v12 = v92;
  v94 = *v2;
  while (1)
  {
    v13 = v10++;
    if (v10 < v12)
    {
      v97 = *(_OWORD *)(v11 + 16 * v10);
      v96 = *(_OWORD *)(v11 + 16 * v13);
      v14 = a1(&v97, &v96);
      if (v3)
        goto LABEL_113;
      v15 = v14;
      v10 = v13 + 2;
      if (v13 + 2 < v92)
      {
        v16 = (__int128 *)(v89 + 16 * v13);
        while (1)
        {
          v97 = *v16;
          v96 = *(v16 - 1);
          if (((v15 ^ a1(&v97, &v96)) & 1) != 0)
            break;
          ++v10;
          ++v16;
          if (v92 == v10)
          {
            v10 = v92;
            break;
          }
        }
      }
      v11 = v94;
      if ((v15 & 1) != 0)
      {
        if (v10 < v13)
          goto LABEL_139;
        v12 = v92;
        if (v13 < v10)
        {
          v17 = (__int128 *)(v88 + 16 * v10);
          v18 = v10;
          v19 = v13;
          v20 = (__int128 *)(v94 + 16 * v13);
          do
          {
            if (v19 != --v18)
            {
              if (!v94)
                goto LABEL_142;
              v21 = *v20;
              *v20 = *v17;
              *v17 = v21;
            }
            ++v19;
            --v17;
            ++v20;
          }
          while (v19 < v18);
        }
      }
      else
      {
        v12 = v92;
      }
    }
    if (v10 >= v12)
      goto LABEL_39;
    if (__OFSUB__(v10, v13))
      goto LABEL_136;
    if (v10 - v13 >= v90)
      goto LABEL_39;
    if (__OFADD__(v13, v90))
      goto LABEL_137;
    v22 = v13 + v90 >= v12 ? v12 : v13 + v90;
    if (v22 < v13)
      break;
    if (v10 != v22)
    {
      v75 = (__int128 *)(v88 + 16 * v10);
      do
      {
        v76 = *(_OWORD *)(v11 + 16 * v10);
        v77 = v13;
        v78 = v75;
        while (1)
        {
          v97 = v76;
          v96 = *v78;
          v79 = a1(&v97, &v96);
          if (v3)
            goto LABEL_113;
          if ((v79 & 1) == 0)
            break;
          v11 = v94;
          if (!v94)
            goto LABEL_141;
          v76 = v78[1];
          v78[1] = *v78;
          *v78-- = v76;
          if (v10 == ++v77)
            goto LABEL_97;
        }
        v11 = v94;
LABEL_97:
        ++v10;
        ++v75;
      }
      while (v10 != v22);
      v10 = v22;
      if (v22 < v13)
        goto LABEL_134;
      goto LABEL_40;
    }
LABEL_39:
    if (v10 < v13)
      goto LABEL_134;
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1BDBBCAF8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v24 = *((_QWORD *)v9 + 2);
    v23 = *((_QWORD *)v9 + 3);
    v25 = v24 + 1;
    v11 = v94;
    if (v24 >= v23 >> 1)
    {
      v80 = sub_1BDBBCAF8((char *)(v23 > 1), v24 + 1, 1, v9);
      v11 = v94;
      v9 = v80;
    }
    *((_QWORD *)v9 + 2) = v25;
    v26 = v9 + 32;
    v27 = &v9[16 * v24 + 32];
    *(_QWORD *)v27 = v13;
    *((_QWORD *)v27 + 1) = v10;
    if (v24)
    {
      while (1)
      {
        v28 = v25 - 1;
        if (v25 >= 4)
        {
          v33 = &v26[16 * v25];
          v34 = *((_QWORD *)v33 - 8);
          v35 = *((_QWORD *)v33 - 7);
          v39 = __OFSUB__(v35, v34);
          v36 = v35 - v34;
          if (v39)
            goto LABEL_119;
          v38 = *((_QWORD *)v33 - 6);
          v37 = *((_QWORD *)v33 - 5);
          v39 = __OFSUB__(v37, v38);
          v31 = v37 - v38;
          v32 = v39;
          if (v39)
            goto LABEL_120;
          v40 = v25 - 2;
          v41 = &v26[16 * v25 - 32];
          v43 = *(_QWORD *)v41;
          v42 = *((_QWORD *)v41 + 1);
          v39 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          if (v39)
            goto LABEL_122;
          v39 = __OFADD__(v31, v44);
          v45 = v31 + v44;
          if (v39)
            goto LABEL_125;
          if (v45 >= v36)
          {
            v63 = &v26[16 * v28];
            v65 = *(_QWORD *)v63;
            v64 = *((_QWORD *)v63 + 1);
            v39 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v39)
              goto LABEL_129;
            v56 = v31 < v66;
            goto LABEL_76;
          }
        }
        else
        {
          if (v25 != 3)
          {
            v57 = *((_QWORD *)v9 + 4);
            v58 = *((_QWORD *)v9 + 5);
            v39 = __OFSUB__(v58, v57);
            v50 = v58 - v57;
            v51 = v39;
            goto LABEL_70;
          }
          v30 = *((_QWORD *)v9 + 4);
          v29 = *((_QWORD *)v9 + 5);
          v39 = __OFSUB__(v29, v30);
          v31 = v29 - v30;
          v32 = v39;
        }
        if ((v32 & 1) != 0)
          goto LABEL_121;
        v40 = v25 - 2;
        v46 = &v26[16 * v25 - 32];
        v48 = *(_QWORD *)v46;
        v47 = *((_QWORD *)v46 + 1);
        v49 = __OFSUB__(v47, v48);
        v50 = v47 - v48;
        v51 = v49;
        if (v49)
          goto LABEL_124;
        v52 = &v26[16 * v28];
        v54 = *(_QWORD *)v52;
        v53 = *((_QWORD *)v52 + 1);
        v39 = __OFSUB__(v53, v54);
        v55 = v53 - v54;
        if (v39)
          goto LABEL_127;
        if (__OFADD__(v50, v55))
          goto LABEL_128;
        if (v50 + v55 >= v31)
        {
          v56 = v31 < v55;
LABEL_76:
          if (v56)
            v28 = v40;
          goto LABEL_78;
        }
LABEL_70:
        if ((v51 & 1) != 0)
          goto LABEL_123;
        v59 = &v26[16 * v28];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v39 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v39)
          goto LABEL_126;
        if (v62 < v50)
          goto LABEL_87;
LABEL_78:
        v67 = v28 - 1;
        if (v28 - 1 >= v25)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v11)
          goto LABEL_140;
        v68 = v10;
        v69 = v9;
        v70 = &v26[16 * v67];
        v71 = *(_QWORD *)v70;
        v72 = &v26[16 * v28];
        v73 = *((_QWORD *)v72 + 1);
        sub_1BDBBC7F0((char *)(v11 + 16 * *(_QWORD *)v70), (char *)(v11 + 16 * *(_QWORD *)v72), v11 + 16 * v73, __dst, a1);
        if (v3)
          goto LABEL_113;
        if (v73 < v71)
          goto LABEL_116;
        if (v28 > *((_QWORD *)v69 + 2))
          goto LABEL_117;
        *(_QWORD *)v70 = v71;
        *(_QWORD *)&v26[16 * v67 + 8] = v73;
        v74 = *((_QWORD *)v69 + 2);
        if (v28 >= v74)
          goto LABEL_118;
        v9 = v69;
        v25 = v74 - 1;
        memmove(&v26[16 * v28], v72 + 16, 16 * (v74 - 1 - v28));
        *((_QWORD *)v69 + 2) = v74 - 1;
        v11 = v94;
        v10 = v68;
        if (v74 <= 2)
          goto LABEL_87;
      }
    }
    v25 = 1;
LABEL_87:
    v12 = v92;
    if (v10 >= v92)
    {
      v2 = v87;
      goto LABEL_102;
    }
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  result = sub_1BDBFE520();
  __break(1u);
  return result;
}

uint64_t sub_1BDBBC71C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(__int128 *, __int128 *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  if (a3 != a2)
  {
    v7 = a3;
    v9 = *v4;
    v10 = *v4 + 16 * a3 - 16;
    v16 = result;
LABEL_4:
    v11 = *(_OWORD *)(v9 + 16 * v7);
    v12 = result;
    v13 = (__int128 *)v10;
    while (1)
    {
      v15 = v11;
      v14 = *v13;
      result = a4(&v15, &v14);
      if (v5)
        break;
      if ((result & 1) != 0)
      {
        if (!v9)
        {
          __break(1u);
          return result;
        }
        v11 = v13[1];
        v13[1] = *v13;
        *v13-- = v11;
        if (v7 != ++v12)
          continue;
      }
      ++v7;
      v10 += 16;
      result = v16;
      if (v7 != a2)
        goto LABEL_4;
      return result;
    }
  }
  return result;
}

uint64_t sub_1BDBBC7F0(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(__int128 *, __int128 *))
{
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const void *v16;
  char *v17;
  char v18;
  char *v19;
  char *v20;
  BOOL v21;
  char *v22;
  char *v23;
  char *v24;
  char v25;
  char *v26;
  BOOL v27;
  uint64_t result;
  char *v30;
  char *v31;
  __int128 v33;
  __int128 v34;
  char *v35;
  const void *v36;
  char *v37;

  v6 = __dst;
  v7 = a2;
  v8 = __src;
  v9 = a2 - __src;
  v10 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v10 = a2 - __src;
  v11 = v10 >> 4;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 4;
  v37 = __src;
  v36 = __dst;
  if (v11 >= v13 >> 4)
  {
    if (v12 <= -16)
      goto LABEL_51;
    if (__dst != a2 || &a2[16 * v14] <= __dst)
      memmove(__dst, a2, 16 * v14);
    v22 = &v6[16 * v14];
    v35 = v22;
    v37 = v7;
    if (v8 >= v7 || v12 < 16)
    {
LABEL_50:
      sub_1BDBBCE5C((void **)&v37, &v36, &v35);
      return 1;
    }
    v30 = v35;
    v31 = v37;
    v23 = (char *)(a3 - 16);
    while (1)
    {
      v34 = *((_OWORD *)v22 - 1);
      v24 = v7 - 16;
      v33 = *((_OWORD *)v7 - 1);
      v25 = a5(&v34, &v33);
      if (v5)
      {
LABEL_49:
        v35 = v30;
        v37 = v31;
        goto LABEL_50;
      }
      v26 = v23 + 16;
      if ((v25 & 1) == 0)
        break;
      if (v26 != v7)
      {
        v31 = v7 - 16;
        v7 -= 16;
LABEL_46:
        *(_OWORD *)v23 = *(_OWORD *)v24;
        goto LABEL_47;
      }
      v31 = v7 - 16;
      v27 = v23 >= v7;
      v7 -= 16;
      if (v27)
        goto LABEL_46;
LABEL_47:
      if (v7 > v8)
      {
        v23 -= 16;
        if (v22 > v6)
          continue;
      }
      goto LABEL_49;
    }
    if (v26 < v22 || v23 >= v22)
    {
      v24 = v22 - 16;
      v30 = v22 - 16;
      v22 -= 16;
    }
    else
    {
      v24 = v22 - 16;
      v30 = v22 - 16;
      v21 = v26 == v22;
      v22 -= 16;
      if (v21)
        goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v9 > -16)
  {
    if (__dst != __src || &__src[16 * v11] <= __dst)
      memmove(__dst, __src, 16 * v11);
    v15 = &v6[16 * v11];
    v35 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 16)
    {
      v16 = v36;
      v17 = v37;
      while (1)
      {
        v34 = *(_OWORD *)v7;
        v33 = *(_OWORD *)v6;
        v18 = a5(&v34, &v33);
        if (v5)
        {
LABEL_26:
          v36 = v16;
          v37 = v17;
          goto LABEL_50;
        }
        if ((v18 & 1) != 0)
          break;
        v16 = v6 + 16;
        v20 = v6;
        v19 = v7;
        v21 = v8 == v6;
        v6 += 16;
        if (!v21)
          goto LABEL_23;
LABEL_24:
        v17 = v8 + 16;
        if (v6 < v15)
        {
          v7 = v19;
          v8 += 16;
          if ((unint64_t)v19 < a3)
            continue;
        }
        goto LABEL_26;
      }
      v19 = v7 + 16;
      if (v8 < v7 || v8 >= v19)
      {
        v20 = v7;
      }
      else
      {
        v20 = v7;
        if (v8 == v7)
          goto LABEL_24;
      }
LABEL_23:
      *(_OWORD *)v8 = *(_OWORD *)v20;
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_51:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

char *sub_1BDBBCAF8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FDF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BDBBCBF0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1BDBFE5A4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1BDBBCC98(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_1BDBFE5A4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

uint64_t sub_1BDBBCD50(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for NoteEditActivityEvent(0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_1BDBFE5A4();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1BDBBCE5C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1BDBFE5A4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1BDBBCF04(uint64_t a1)
{
  return sub_1BDBBCAF8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1BDBBCF18(_QWORD *a1)
{
  return sub_1BDBCC21C(0, a1[2], 0, a1);
}

_QWORD *sub_1BDBBCF2C(_QWORD *a1)
{
  return sub_1BDBCBCC4(0, a1[2], 0, a1);
}

uint64_t sub_1BDBBCF40(unint64_t a1)
{
  return sub_1BDBCC35C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1BDBBCF54(_QWORD *a1)
{
  return sub_1BDBCC834(0, a1[2], 0, a1);
}

void sub_1BDBBCF68()
{
  JUMPOUT(0x1C3B79D08);
}

uint64_t sub_1BDBBCF7C(_QWORD *a1)
{
  return sub_1BDB230A0(0, a1[2], 0, a1);
}

uint64_t sub_1BDBBCF90(_QWORD *a1)
{
  return sub_1BDB235B0(0, a1[2], 0, a1);
}

uint64_t sub_1BDBBCFA4(uint64_t a1)
{
  return sub_1BDB22AA8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BDBBCFB8(uint64_t a1)
{
  return sub_1BDB235C4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BDBBCFCC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  result = sub_1BDBFC360();
  v3 = result;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    if (v3 == sub_1BDBFC360())
      return 0;
    else
      return v3;
  }
  v5 = 0;
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    if (v5 < 1)
    {
      v3 = *(v6 - 1);
      v5 = *v6;
      goto LABEL_4;
    }
    if (__OFADD__(v3, v5))
      break;
    v9 = __OFADD__(v7, v8);
    v10 = v7 + v8;
    if (v9)
      goto LABEL_19;
    if (v3 + v5 > v10)
      v10 = v3 + v5;
    if (v3 >= v7)
      v3 = *(v6 - 1);
    v5 = v10 - v3;
    if (__OFSUB__(v10, v3))
    {
      __break(1u);
      goto LABEL_15;
    }
LABEL_4:
    v6 += 2;
    if (!--v4)
      goto LABEL_15;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

_QWORD *sub_1BDBBD080@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t ActivityEventParticipant.isCurrentUser(resolver:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t);
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  v5 = *v2;
  v4 = v2[1];
  ObjectType = swift_getObjectType();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  swift_bridgeObjectRetain();
  v8 = (void *)v7(ObjectType, a2);
  if (v8
    && (v9 = v8, v10 = objc_msgSend(v8, sel_cloudAccount), v9, v10))
  {
    v11 = objc_msgSend(v10, sel_userRecordName);

    v12 = sub_1BDBFD6F8();
    v14 = v13;

    if (v5 == v12 && v4 == v14)
      v16 = 1;
    else
      v16 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  swift_bridgeObjectRelease();
  return v16 & 1;
}

void ActivityEventParticipant.shortName(resolver:)(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v6 = *v2;
  v5 = v2[1];
  v8 = v2[2];
  v7 = v2[3];
  ObjectType = swift_getObjectType();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 8);
  swift_bridgeObjectRetain();
  v11 = (void *)v10(ObjectType, a1);
  if (v11
    && (v12 = v11, v13 = objc_msgSend(v11, sel_cloudAccount), v12, v13))
  {
    v27 = v7;
    v14 = objc_msgSend(v13, sel_userRecordName);

    v15 = sub_1BDBFD6F8();
    v17 = v16;

    if (v6 == v15 && v5 == v17)
    {
      swift_bridgeObjectRelease_n();
LABEL_15:
      *a2 = 0;
      a2[1] = 0;
      return;
    }
    v19 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v27;
    if ((v19 & 1) != 0)
      goto LABEL_15;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v28 = v6;
  v29 = v5;
  v32 = 7105633;
  v33 = 0xE300000000000000;
  sub_1BDAC3548();
  if (sub_1BDBFE154())
  {
    v28 = v6;
    v29 = v5;
    v30 = v8;
    v31 = v7;
    v20 = (void *)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a1 + 48))(&v28, ObjectType, a1);
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, sel_ic_activityStreamDisplayName);

      v23 = sub_1BDBFD6F8();
      v25 = v24;

      *a2 = v23;
      a2[1] = v25;
      return;
    }
    v26 = xmmword_1BDC207B0;
  }
  else
  {
    v26 = xmmword_1BDC207C0;
  }
  *(_OWORD *)a2 = v26;
}

uint64_t ActivityEventParticipant.Names.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if ((unint64_t)v0[1] < 3)
    return 0;
  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static ActivityEventParticipant.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BDBFE874();
}

BOOL ActivityEventParticipant.isAllMention.getter()
{
  sub_1BDAC3548();
  return sub_1BDBFE154() == 0;
}

NotesShared::ActivityEventParticipant __swiftcall ActivityEventParticipant.init(recordName:mentionRecordName:)(Swift::String recordName, Swift::String_optional mentionRecordName)
{
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  NotesShared::ActivityEventParticipant result;

  object = mentionRecordName.value._object;
  countAndFlagsBits = mentionRecordName.value._countAndFlagsBits;
  v5 = recordName._object;
  v6 = recordName._countAndFlagsBits;
  v7 = v2;
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v12 = swift_bridgeObjectRelease();
  *v7 = v6;
  v7[1] = (uint64_t)v5;
  v7[2] = countAndFlagsBits;
  v7[3] = (uint64_t)object;
  result.mentionRecordName.value._object = v15;
  result.mentionRecordName.value._countAndFlagsBits = v14;
  result.recordName._object = v13;
  result.recordName._countAndFlagsBits = v12;
  return result;
}

NotesShared::ActivityEventParticipant_optional __swiftcall ActivityEventParticipant.init(cloudSyncingObject:)(ICCloudSyncingObject *cloudSyncingObject)
{
  uint64_t *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  ICCloudSyncingObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  id v25;
  _QWORD v26[2];
  NotesShared::ActivityEventParticipant_optional result;

  v3 = v1;
  v4 = sub_1BDBFCB40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -[ICCloudSyncingObject cloudAccount](cloudSyncingObject, sel_cloudAccount);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_userRecordName);

    v11 = sub_1BDBFD6F8();
    v13 = v12;

    v14 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v14 = v11 & 0xFFFFFFFFFFFFLL;
    if (v14)
    {
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      sub_1BDBFCAEC();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

      v15 = swift_bridgeObjectRelease();
      *v3 = v11;
      v3[1] = v13;
      v3[2] = 0;
      v3[3] = 0;
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED23B0D0 != -1)
    swift_once();
  v19 = sub_1BDBFCE34();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED23B0B0);
  v20 = cloudSyncingObject;
  v21 = sub_1BDBFCE1C();
  v22 = sub_1BDBFDED8();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v23 = 138412290;
    v25 = -[ICCloudSyncingObject objectID](v20, sel_objectID);
    v26[1] = v25;
    sub_1BDBFE100();
    *v24 = v25;

    _os_log_impl(&dword_1BD918000, v21, v22, "Object must have an account — returning nil {objectID: %@}", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v24, -1, -1);
    MEMORY[0x1C3B7B478](v23, -1, -1);

  }
  else
  {

  }
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
LABEL_13:
  result.value.mentionRecordName.value._object = v18;
  result.value.mentionRecordName.value._countAndFlagsBits = v17;
  result.value.recordName._object = v16;
  result.value.recordName._countAndFlagsBits = v15;
  return result;
}

NotesShared::ActivityEventParticipant_optional __swiftcall ActivityEventParticipant.init(participant:)(CKShareParticipant participant)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  objc_class *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NotesShared::ActivityEventParticipant_optional result;

  v3 = v1;
  v4 = sub_1BDBFCB40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -[objc_class userIdentity](participant.super.isa, sel_userIdentity);
  v9 = objc_msgSend(v8, sel_userRecordID);

  if (!v9)
  {
LABEL_12:
    if (qword_1ED23B0D0 != -1)
      swift_once();
    v22 = sub_1BDBFCE34();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED23B0B0);
    v23 = participant.super.isa;
    v24 = sub_1BDBFCE1C();
    v25 = sub_1BDBFDED8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v35 = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = sub_1BDBFDF74();
      v34 = sub_1BDAE53FC(v28, v29, &v35);
      sub_1BDBFE100();

      swift_bridgeObjectRelease();
      v30 = "Participant must have a user ID — returning nil {participantID: %s}";
LABEL_21:
      _os_log_impl(&dword_1BD918000, v24, v25, v30, v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v27, -1, -1);
      MEMORY[0x1C3B7B478](v26, -1, -1);

LABEL_23:
      *(_OWORD *)v3 = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
      goto LABEL_24;
    }
LABEL_22:

    goto LABEL_23;
  }
  v10 = objc_msgSend(v9, sel_recordName);

  v11 = sub_1BDBFD6F8();
  v13 = v12;

  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = v11 & 0xFFFFFFFFFFFFLL;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v11 == sub_1BDBFD6F8() && v13 == v15)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    if (qword_1ED23B0D0 != -1)
      swift_once();
    v31 = sub_1BDBFCE34();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED23B0B0);
    v23 = participant.super.isa;
    v24 = sub_1BDBFCE1C();
    v25 = sub_1BDBFDED8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v35 = v27;
      *(_DWORD *)v26 = 136315138;
      v32 = sub_1BDBFDF74();
      v34 = sub_1BDAE53FC(v32, v33, &v35);
      sub_1BDBFE100();

      swift_bridgeObjectRelease();
      v30 = "Participant must not have the default current user ID — returning nil {participantID: %s}";
      goto LABEL_21;
    }
    goto LABEL_22;
  }
  v17 = sub_1BDBFE874();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_17;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  v18 = swift_bridgeObjectRelease();
  *(_QWORD *)v3 = v11;
  *(_QWORD *)(v3 + 8) = v13;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
LABEL_24:
  result.value.mentionRecordName.value._object = v21;
  result.value.mentionRecordName.value._countAndFlagsBits = v20;
  result.value.recordName._object = v19;
  result.value.recordName._countAndFlagsBits = v18;
  return result;
}

uint64_t sub_1BDBBDB98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1ED23B0B0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23B0B0);
  if (qword_1ED23B0E8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23AEF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t ActivityEventParticipant.recordName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityEventParticipant.recordName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

void (*ActivityEventParticipant.recordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ActivityEventParticipant.mentionRecordName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityEventParticipant.mentionRecordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

void (*ActivityEventParticipant.mentionRecordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ActivityEventParticipant.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDBBDD4C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x614E64726F636572;
}

uint64_t sub_1BDBBDD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDBBECA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDBBDDB4()
{
  sub_1BDBBE800();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDBBDDDC()
{
  sub_1BDBBE800();
  return sub_1BDBFEB50();
}

uint64_t ActivityEventParticipant.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FE00);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBBE800();
  sub_1BDBFEACC();
  v12 = 0;
  sub_1BDBFE6E8();
  if (!v2)
  {
    v11 = 1;
    sub_1BDBFE6C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t ActivityEventParticipant.hashValue.getter()
{
  sub_1BDBFEA0C();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  return sub_1BDBFEA30();
}

uint64_t ActivityEventParticipant.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  char v23;

  v21 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FE10);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFCB40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1BDBFCAEC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBBE800();
  sub_1BDBFEAB4();
  if (!v2)
  {
    v23 = 0;
    v12 = sub_1BDBFE640();
    v14 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v22 = 1;
    v16 = sub_1BDBFE604();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = v21;
    *v21 = v12;
    v19[1] = v14;
    v19[2] = v16;
    v19[3] = v18;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDBBE1A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ActivityEventParticipant.init(from:)(a1, a2);
}

uint64_t sub_1BDBBE1BC(_QWORD *a1)
{
  return ActivityEventParticipant.encode(to:)(a1);
}

NotesShared::ActivityEventParticipant_optional __swiftcall ActivityEventParticipant.init(mentionAttachment:)(ICInlineAttachment *mentionAttachment)
{
  uint64_t *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString *v8;
  NSString *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  ICInlineAttachment *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  id v28;
  _QWORD v29[2];
  NotesShared::ActivityEventParticipant_optional result;

  v3 = v1;
  v4 = sub_1BDBFCB40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (-[ICInlineAttachment isMentionAttachment](mentionAttachment, sel_isMentionAttachment))
  {
    v8 = -[ICInlineAttachment tokenContentIdentifier](mentionAttachment, sel_tokenContentIdentifier);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1BDBFD6F8();
      v12 = v11;

      v13 = -[ICInlineAttachment identifier](mentionAttachment, sel_identifier);
      if (v13)
      {
        v14 = v13;
        v15 = sub_1BDBFD6F8();
        v17 = v16;

        _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
        sub_1BDBFCAEC();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

        v18 = swift_bridgeObjectRelease();
        *v3 = v10;
        v3[1] = v12;
        v3[2] = v15;
        v3[3] = v17;
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
  }
  if (qword_1ED23B0D0 != -1)
    swift_once();
  v22 = sub_1BDBFCE34();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED23B0B0);
  v23 = mentionAttachment;
  v24 = sub_1BDBFCE1C();
  v25 = sub_1BDBFDED8();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v26 = 138412290;
    v28 = -[ICInlineAttachment objectID](v23, sel_objectID);
    v29[1] = v28;
    sub_1BDBFE100();
    *v27 = v28;

    _os_log_impl(&dword_1BD918000, v24, v25, "Inline attachment is not a valid mention — returning nil {objectID: %@}", v26, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
    swift_arrayDestroy();
    MEMORY[0x1C3B7B478](v27, -1, -1);
    MEMORY[0x1C3B7B478](v26, -1, -1);

  }
  else
  {

  }
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
LABEL_12:
  result.value.mentionRecordName.value._object = v21;
  result.value.mentionRecordName.value._countAndFlagsBits = v20;
  result.value.recordName._object = v19;
  result.value.recordName._countAndFlagsBits = v18;
  return result;
}

uint64_t ActivityEventParticipant.Names.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8) <= 2uLL)
    return sub_1BDBFEA18();
  sub_1BDBFEA18();
  return sub_1BDBFD794();
}

uint64_t ActivityEventParticipant.Names.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  if (v1 > 2)
    sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBBE570()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  if (v1 > 2)
    sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBBE5FC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8) <= 2uLL)
    return sub_1BDBFEA18();
  sub_1BDBFEA18();
  return sub_1BDBFD794();
}

uint64_t sub_1BDBBE680()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  if (v1 > 2)
    sub_1BDBFD794();
  return sub_1BDBFEA30();
}

uint64_t _s11NotesShared24ActivityEventParticipantV5NamesO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      v3 = 0;
      v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      v3 = 1;
      v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      if (v2 == v4 && v3 == v5)
        v6 = 1;
      else
        v6 = sub_1BDBFE874();
      goto LABEL_12;
    }
LABEL_11:
    v6 = 0;
LABEL_12:
    sub_1BDAE1530(v4, v5);
    sub_1BDAE1530(v2, v3);
    goto LABEL_13;
  }
  if (v5 != 2)
    goto LABEL_11;
  v6 = 1;
  v3 = 2;
LABEL_13:
  sub_1BDAE151C(v2, v3);
  sub_1BDAE151C(v4, v5);
  return v6 & 1;
}

unint64_t sub_1BDBBE800()
{
  unint64_t result;

  result = qword_1EF50FE08;
  if (!qword_1EF50FE08)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC20A04, &type metadata for ActivityEventParticipant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50FE08);
  }
  return result;
}

unint64_t sub_1BDBBE848()
{
  unint64_t result;

  result = qword_1ED23AAD8;
  if (!qword_1ED23AAD8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventParticipant, &type metadata for ActivityEventParticipant);
    atomic_store(result, (unint64_t *)&qword_1ED23AAD8);
  }
  return result;
}

unint64_t sub_1BDBBE890()
{
  unint64_t result;

  result = qword_1EF50FE18;
  if (!qword_1EF50FE18)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ActivityEventParticipant.Names, &type metadata for ActivityEventParticipant.Names);
    atomic_store(result, (unint64_t *)&qword_1EF50FE18);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventParticipant()
{
  return &type metadata for ActivityEventParticipant;
}

unint64_t destroy for ActivityEventParticipant.Names(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s11NotesShared24ActivityEventParticipantV5NamesOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for ActivityEventParticipant.Names(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ActivityEventParticipant.Names(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEventParticipant.Names(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityEventParticipant.Names(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventParticipant.Names()
{
  return &type metadata for ActivityEventParticipant.Names;
}

uint64_t storeEnumTagSinglePayload for ActivityEventParticipant.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDBBEB50 + 4 * byte_1BDC207D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDBBEB84 + 4 * byte_1BDC207D0[v4]))();
}

uint64_t sub_1BDBBEB84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBBEB8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBBEB94);
  return result;
}

uint64_t sub_1BDBBEBA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBBEBA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDBBEBAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBBEBB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventParticipant.CodingKeys()
{
  return &type metadata for ActivityEventParticipant.CodingKeys;
}

unint64_t sub_1BDBBEBD4()
{
  unint64_t result;

  result = qword_1EF50FE20;
  if (!qword_1EF50FE20)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC209DC, &type metadata for ActivityEventParticipant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50FE20);
  }
  return result;
}

unint64_t sub_1BDBBEC1C()
{
  unint64_t result;

  result = qword_1EF50FE28;
  if (!qword_1EF50FE28)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC2094C, &type metadata for ActivityEventParticipant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50FE28);
  }
  return result;
}

unint64_t sub_1BDBBEC64()
{
  unint64_t result;

  result = qword_1EF50FE30;
  if (!qword_1EF50FE30)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC20974, &type metadata for ActivityEventParticipant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50FE30);
  }
  return result;
}

uint64_t sub_1BDBBECA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E64726F636572 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BDC3AB00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t Data.init(hexString:)()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_ic_dataFromHexString_, v0);

  v2 = sub_1BDBFC990();
  return v2;
}

void static CharacterSet.uriIdentifierAllowed.getter()
{
  sub_1BDBBEFE4((SEL *)&selRef_ic_uriIdentifierAllowedCharacterSet);
}

Swift::Bool __swiftcall CharacterSet.contains(_:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v10[16];

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = sub_1BDBFC444();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v8 + v7, &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  swift_bridgeObjectRetain();
  LOBYTE(countAndFlagsBits) = sub_1BDBBF038(countAndFlagsBits, (unint64_t)object, (unsigned int (*)(uint64_t))sub_1BDBBEF88);
  swift_release();
  swift_bridgeObjectRelease();
  return countAndFlagsBits & 1;
}

uint64_t sub_1BDBBEF28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BDBFC444();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BDBBEF88()
{
  sub_1BDBFC444();
  return sub_1BDBFC420() & 1;
}

void static CharacterSet.hashtagAllowed.getter()
{
  sub_1BDBBEFE4((SEL *)&selRef_ic_hashtagAllowedCharacterSet);
}

void static CharacterSet.hashtagTokenizing.getter()
{
  sub_1BDBBEFE4((SEL *)&selRef_ic_hashtagTokenizingCharacterSet);
}

void sub_1BDBBEFE4(SEL *a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), *a1);
  sub_1BDBFC414();

}

uint64_t sub_1BDBBF038(uint64_t a1, unint64_t a2, unsigned int (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 1;
  v17 = a2 & 0xFFFFFFFFFFFFFFLL;
  v15 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_bridgeObjectRetain();
  for (i = 0; i < v4; i += v12)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      v10 = sub_1BDBFE2F8();
      v12 = v11;
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v16[0] = a1;
        v16[1] = v17;
        v10 = *((unsigned __int8 *)v16 + i);
        if (*((char *)v16 + i) < 0)
          __asm { BR              X9 }
      }
      else
      {
        v9 = v15;
        if ((a1 & 0x1000000000000000) == 0)
          v9 = sub_1BDBFE418();
        v10 = *(unsigned __int8 *)(v9 + i);
        if (*(char *)(v9 + i) < 0)
          __asm { BR              X10 }
      }
      v12 = 1;
    }
    v13 = (v3 == 0) & a3(v10);
    if ((_DWORD)v13 != 1)
      break;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FallbackActivityEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FallbackActivityEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

void (*FallbackActivityEvent.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for FallbackActivityEvent() + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FallbackActivityEvent()
{
  uint64_t result;

  result = qword_1ED23A658;
  if (!qword_1ED23A658)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FallbackActivityEvent.object.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = v1 + *(int *)(type metadata accessor for FallbackActivityEvent() + 20);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_QWORD *)(v5 + 16) = v4;
  return result;
}

void (*FallbackActivityEvent.object.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for FallbackActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.participant.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for FallbackActivityEvent() + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 FallbackActivityEvent.participant.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for FallbackActivityEvent() + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

void (*FallbackActivityEvent.participant.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for FallbackActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.minimumSupportedNotesVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FallbackActivityEvent() + 28));
}

uint64_t FallbackActivityEvent.minimumSupportedNotesVersion.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FallbackActivityEvent();
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (*FallbackActivityEvent.minimumSupportedNotesVersion.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for FallbackActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.typeName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FallbackActivityEvent() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FallbackActivityEvent.typeName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for FallbackActivityEvent() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

void (*FallbackActivityEvent.typeName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for FallbackActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.localizedFallbackTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FallbackActivityEvent() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FallbackActivityEvent.localizedFallbackTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for FallbackActivityEvent() + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

void (*FallbackActivityEvent.localizedFallbackTitle.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for FallbackActivityEvent();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

__n128 FallbackActivityEvent.init(timestamp:object:participant:minimumSupportedNotesVersion:typeName:localizedFallbackTitle:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  __n128 result;
  _QWORD *v23;
  _QWORD *v24;
  __n128 v25;

  v12 = *a2;
  v14 = *((_QWORD *)a2 + 1);
  v13 = *((_QWORD *)a2 + 2);
  v25 = *a3;
  v15 = a3[1].n128_u64[0];
  v16 = a3[1].n128_u64[1];
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  v17 = (int *)type metadata accessor for FallbackActivityEvent();
  v18 = v17[7];
  *(_QWORD *)(a9 + v18) = objc_msgSend((id)objc_opt_self(), sel_currentNotesVersion);
  v19 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(a9, a1, v19);
  v20 = a9 + v17[5];
  *(_BYTE *)v20 = v12;
  *(_QWORD *)(v20 + 8) = v14;
  *(_QWORD *)(v20 + 16) = v13;
  v21 = (__n128 *)(a9 + v17[6]);
  result = v25;
  *v21 = v25;
  v21[1].n128_u64[0] = v15;
  v21[1].n128_u64[1] = v16;
  *(_QWORD *)(a9 + v18) = a4;
  v23 = (_QWORD *)(a9 + v17[8]);
  *v23 = a5;
  v23[1] = a6;
  v24 = (_QWORD *)(a9 + v17[9]);
  *v24 = a7;
  v24[1] = a8;
  return result;
}

uint64_t sub_1BDBBF744(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDBBF77C + 4 * byte_1BDC20A60[a1]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_1BDBBF77C()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1BDBBF790()
{
  return 0x7069636974726170;
}

unint64_t sub_1BDBBF7B0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BDBBF7D0()
{
  return 0x656D614E65707974;
}

unint64_t sub_1BDBBF7E8()
{
  return 0xD000000000000016;
}

uint64_t sub_1BDBBF804()
{
  unsigned __int8 *v0;

  return sub_1BDBBF744(*v0);
}

uint64_t sub_1BDBBF80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDBC0E64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDBBF830()
{
  sub_1BDBC0518();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDBBF858()
{
  sub_1BDBC0518();
  return sub_1BDBFEB50();
}

uint64_t FallbackActivityEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FE38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBC0518();
  sub_1BDBFEACC();
  LOBYTE(v18) = 0;
  sub_1BDBFCAC8();
  sub_1BDAC31B0(&qword_1EF50BE98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1BDBFE718();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for FallbackActivityEvent();
    v10 = (char *)(v3 + v9[5]);
    v11 = *v10;
    v13 = *((_QWORD *)v10 + 1);
    v12 = *((_QWORD *)v10 + 2);
    LOBYTE(v18) = v11;
    v19 = v13;
    *(_QWORD *)&v20 = v12;
    v21 = 1;
    sub_1BDAF3FFC();
    sub_1BDBFE718();
    v14 = (uint64_t *)(v3 + v9[6]);
    v15 = v14[1];
    v18 = *v14;
    v19 = v15;
    v20 = *((_OWORD *)v14 + 1);
    v21 = 2;
    sub_1BDAF4040();
    sub_1BDBFE718();
    v18 = *(_QWORD *)(v3 + v9[7]);
    v21 = 3;
    type metadata accessor for NotesVersion(0);
    sub_1BDAC31B0(&qword_1EF50FE48, (uint64_t (*)(uint64_t))type metadata accessor for NotesVersion, (uint64_t)&protocol conformance descriptor for ICNotesVersion);
    sub_1BDBFE718();
    LOBYTE(v18) = 4;
    sub_1BDBFE6E8();
    LOBYTE(v18) = 5;
    sub_1BDBFE6E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FallbackActivityEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;

  v31 = a2;
  v3 = sub_1BDBFCAC8();
  v36 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FE50);
  v5 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v6 = type metadata accessor for FallbackActivityEvent();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  v35 = (int *)v6;
  v9 = *(int *)(v6 + 28);
  v10 = (uint64_t)v8;
  *(_QWORD *)&v8[v9] = objc_msgSend((id)objc_opt_self(), sel_currentNotesVersion);
  v11 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1BDBC0518();
  v12 = v37;
  sub_1BDBFEAB4();
  if (v12)
  {
    v15 = v36;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v3);
  }
  else
  {
    v37 = v9;
    v13 = v5;
    LOBYTE(v38) = 0;
    sub_1BDAC31B0(&qword_1EF50BEC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v14 = v32;
    sub_1BDBFE670();
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 40))(v10, v14, v3);
    v41 = 1;
    sub_1BDAF4084();
    sub_1BDBFE670();
    v16 = v39;
    v17 = v40;
    v18 = v35;
    v19 = v10 + v35[5];
    *(_BYTE *)v19 = v38;
    *(_QWORD *)(v19 + 8) = v16;
    *(_QWORD *)(v19 + 16) = v17;
    v41 = 2;
    sub_1BDAF40C8();
    sub_1BDBFE670();
    v20 = v39;
    v21 = v10 + v18[6];
    *(_QWORD *)v21 = v38;
    *(_QWORD *)(v21 + 8) = v20;
    *(_OWORD *)(v21 + 16) = v40;
    type metadata accessor for NotesVersion(0);
    v41 = 3;
    sub_1BDAC31B0((unint64_t *)&qword_1EF50FCC0, (uint64_t (*)(uint64_t))type metadata accessor for NotesVersion, (uint64_t)&protocol conformance descriptor for ICNotesVersion);
    sub_1BDBFE670();
    *(_QWORD *)(v10 + v37) = v38;
    LOBYTE(v38) = 4;
    v22 = sub_1BDBFE640();
    v23 = (uint64_t *)(v10 + v18[8]);
    *v23 = v22;
    v23[1] = v24;
    LOBYTE(v38) = 5;
    v25 = sub_1BDBFE640();
    v27 = v26;
    (*(void (**)(_QWORD, uint64_t))(v13 + 8))(0, v33);
    v28 = (uint64_t *)(v10 + v18[9]);
    *v28 = v25;
    v28[1] = v27;
    sub_1BDBC055C(v10, v31);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
    return sub_1BDAE1658(v10, (uint64_t (*)(_QWORD))type metadata accessor for FallbackActivityEvent);
  }
}

uint64_t sub_1BDBBFFD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FallbackActivityEvent.init(from:)(a1, a2);
}

uint64_t sub_1BDBBFFEC(_QWORD *a1)
{
  return FallbackActivityEvent.encode(to:)(a1);
}

void FallbackActivityEvent.init(activityEvent:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v3 = type metadata accessor for FallbackActivityEvent();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1BDBFCAC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, uint64_t))(v5 + 16);
  v23 = v9;
  v8(v7, a1);
  v10 = type metadata accessor for PersistedActivityEvent();
  v11 = *(int *)(v10 + 24);
  v12 = (unsigned __int8 *)(a1 + *(int *)(v10 + 20));
  v16[1] = *v12;
  v13 = *((_QWORD *)v12 + 1);
  v14 = *((_QWORD *)v12 + 2);
  v15 = *(_QWORD *)(a1 + v11 + 8);
  v22 = *(_QWORD *)(a1 + v11);
  v20 = *(_QWORD *)(a1 + v11 + 16);
  v17 = *(_QWORD *)(a1 + v11 + 24);
  v18 = v13;
  swift_bridgeObjectRetain();
  v19 = v14;
  swift_bridgeObjectRetain();
  v21 = v15;
  swift_bridgeObjectRetain();
  PersistedActivityEvent.Activities.type.getter();
  __asm { BR              X10 }
}

uint64_t sub_1BDBC0144()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  sub_1BDAF1EE4();
  v7 = v6;
  v9 = v8;
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  v10 = v1[7];
  *(_QWORD *)(v2 + v10) = objc_msgSend((id)objc_opt_self(), sel_currentNotesVersion);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 40))(v2, v3, *(_QWORD *)(v5 - 104));
  v11 = v2 + v1[5];
  *(_BYTE *)v11 = *(_DWORD *)(v5 - 156);
  v12 = *(_QWORD *)(v5 - 136);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v5 - 144);
  *(_QWORD *)(v11 + 16) = v12;
  v13 = (_QWORD *)(v2 + v1[6]);
  v14 = *(_QWORD *)(v5 - 120);
  *v13 = *(_QWORD *)(v5 - 112);
  v13[1] = v14;
  v15 = *(_QWORD *)(v5 - 152);
  v13[2] = *(_QWORD *)(v5 - 128);
  v13[3] = v15;
  *(_QWORD *)(v2 + v10) = 6;
  v16 = (_QWORD *)(v2 + v1[8]);
  *v16 = 1702260589;
  v16[1] = 0xE400000000000000;
  v17 = (_QWORD *)(v2 + v1[9]);
  *v17 = v7;
  v17[1] = v9;
  sub_1BDBC05A0(v2, *(_QWORD *)(v5 - 96));
  return sub_1BDAE1658(v0, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
}

uint64_t _s11NotesShared21FallbackActivityEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v17;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  if ((sub_1BDBFCA98() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for FallbackActivityEvent();
  v5 = v4[5];
  v6 = *(unsigned __int8 *)(a1 + v5);
  v8 = *(_QWORD *)(a1 + v5 + 8);
  v7 = *(_QWORD *)(a1 + v5 + 16);
  v9 = a2 + v5;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  if (v6)
    v12 = 1702129518;
  else
    v12 = 0x7265646C6F66;
  if (v6)
    v13 = 0xE400000000000000;
  else
    v13 = 0xE600000000000000;
  if (*(_BYTE *)v9)
    v14 = 1702129518;
  else
    v14 = 0x7265646C6F66;
  if (*(_BYTE *)v9)
    v15 = 0xE400000000000000;
  else
    v15 = 0xE600000000000000;
  if (v12 == v14 && v13 == v15)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_1BDBFE874();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  if (v8 == v11 && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v19 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v19 & 1) == 0)
      return result;
  }
  v21 = v4[6];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  if (v22 == *v24 && v23 == v24[1] || (v25 = sub_1BDBFE874(), result = 0, (v25 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + v4[7]) != *(_QWORD *)(a2 + v4[7]))
      return 0;
    v26 = v4[8];
    v27 = *(_QWORD *)(a1 + v26);
    v28 = *(_QWORD *)(a1 + v26 + 8);
    v29 = (_QWORD *)(a2 + v26);
    if (v27 == *v29 && v28 == v29[1] || (v30 = sub_1BDBFE874(), result = 0, (v30 & 1) != 0))
    {
      v31 = v4[9];
      v32 = *(_QWORD *)(a1 + v31);
      v33 = *(_QWORD *)(a1 + v31 + 8);
      v34 = (_QWORD *)(a2 + v31);
      if (v32 == *v34 && v33 == v34[1])
        return 1;
      else
        return sub_1BDBFE874();
    }
  }
  return result;
}

unint64_t sub_1BDBC0518()
{
  unint64_t result;

  result = qword_1EF50FE40;
  if (!qword_1EF50FE40)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC20C64, &type metadata for FallbackActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50FE40);
  }
  return result;
}

uint64_t sub_1BDBC055C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FallbackActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDBC05A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FallbackActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for FallbackActivityEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BDBFCAC8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[9];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FallbackActivityEvent(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FallbackActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FallbackActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = *(_QWORD *)(v12 + 16);
  v11[3] = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FallbackActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = (_OWORD *)(a1 + v8);
  v12 = (_OWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for FallbackActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1BDBFCAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  v13[2] = *(_QWORD *)(v14 + 16);
  v13[3] = v16;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FallbackActivityEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBC0B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BDBFCAC8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FallbackActivityEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBC0BB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1BDBC0C2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BDBFCAC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FallbackActivityEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BDBC0D0C + 4 * byte_1BDC20A74[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BDBC0D40 + 4 * byte_1BDC20A6F[v4]))();
}

uint64_t sub_1BDBC0D40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBC0D48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBC0D50);
  return result;
}

uint64_t sub_1BDBC0D5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBC0D64);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BDBC0D68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBC0D70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FallbackActivityEvent.CodingKeys()
{
  return &type metadata for FallbackActivityEvent.CodingKeys;
}

unint64_t sub_1BDBC0D90()
{
  unint64_t result;

  result = qword_1EF50FE58;
  if (!qword_1EF50FE58)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC20C3C, &type metadata for FallbackActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50FE58);
  }
  return result;
}

unint64_t sub_1BDBC0DD8()
{
  unint64_t result;

  result = qword_1EF50FE60;
  if (!qword_1EF50FE60)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC20BAC, &type metadata for FallbackActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50FE60);
  }
  return result;
}

unint64_t sub_1BDBC0E20()
{
  unint64_t result;

  result = qword_1EF50FE68;
  if (!qword_1EF50FE68)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC20BD4, &type metadata for FallbackActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF50FE68);
  }
  return result;
}

uint64_t sub_1BDBC0E64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463656A626FLL && a2 == 0xE600000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001BDC3AB20 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D614E65707974 && a2 == 0xE800000000000000 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BDC3AB40)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

_QWORD *sub_1BDBC10F8(_QWORD *(*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  _QWORD *result;
  _QWORD v7[2];
  uint64_t v8;

  if ((a5 & 1) != 0)
    return 0;
  v7[0] = a3;
  v7[1] = a4;
  result = a1(&v8, v7);
  if (!v5)
    return (_QWORD *)v8;
  return result;
}

void *StringProtocol.replacing(pattern:in:options:matchingOptions:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  _QWORD v41[2];
  uint64_t v42[3];
  uint64_t v43;

  v38 = a7;
  v40 = a5;
  v36 = a3;
  v37 = a4;
  v14 = *(_QWORD *)(a10 - 8);
  v15 = MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v34 - v18;
  objc_allocWithZone((Class)type metadata accessor for CustomReplacementRegularExpression());
  swift_bridgeObjectRetain();
  swift_retain();
  v20 = v43;
  v21 = sub_1BDBC1F94(a1, a2, a8, a9, a6);
  swift_release();
  if (!v20)
  {
    v43 = v14;
    v34 = v17;
    v35 = v21;
    v22 = v38;
    v23 = v39;
    v24 = v40;
    if ((v40 & 1) != 0)
    {
      v36 = 0;
      v37 = 0;
      v26 = v43;
      v25 = v19;
    }
    else
    {
      v41[0] = v36;
      v41[1] = v37;
      sub_1BDBC1BB0((uint64_t)v41, v42);
      v25 = v19;
      v36 = v42[1];
      v37 = v42[0];
      v26 = v43;
    }
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v27(v25, v23, a10);
    v28 = v36;
    if ((v24 & 1) != 0)
    {
      v28 = sub_1BDBFDDD0();
      v37 = 0;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v25, a10);
    v27(v34, v23, a10);
    sub_1BDBFD8A8();
    v29 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    v30 = (void *)sub_1BDBFD6C8();
    v31 = v35;
    v32 = objc_msgSend(v35, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v29, v22, v37, v28, v30);

    v21 = (void *)sub_1BDBFD6F8();
  }
  return v21;
}

uint64_t type metadata accessor for CustomReplacementRegularExpression()
{
  return objc_opt_self();
}

uint64_t StringProtocol.replacing(pattern:in:withTemplate:options:matchingOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47[5];

  v11 = v10;
  v42 = a4;
  v47[4] = a7;
  v45 = a6;
  v44 = a5;
  v16 = *(_QWORD *)(a10 - 8);
  v17 = MEMORY[0x1E0C80A78](a1);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v37 - v20;
  v22 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  swift_bridgeObjectRetain();
  v23 = a8;
  v24 = (uint64_t)v22;
  v25 = sub_1BDBC1C88(a1, a2, v23);
  if (!v11)
  {
    v26 = v43;
    v41 = v16;
    v39 = v25;
    v38 = a9;
    v27 = v44;
    if ((v44 & 1) != 0)
    {
      v42 = 0;
      v40 = 0;
    }
    else
    {
      v37 = (uint64_t)&v37;
      v46[0] = a3;
      v46[1] = v42;
      sub_1BDBC1BB0((uint64_t)v46, v47);
      v40 = v47[0];
      v42 = v47[1];
    }
    v28 = v21;
    v29 = v41;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    v30(v28, v26, a10);
    if ((v27 & 1) != 0)
    {
      v31 = sub_1BDBFDDD0();
      v29 = v41;
      v42 = v31;
      v40 = 0;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v28, a10);
    v30(v19, v26, a10);
    sub_1BDBFD8A8();
    v32 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    v33 = (void *)sub_1BDBFD6C8();
    v34 = v39;
    v35 = objc_msgSend(v39, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v32, v38, v40, v42, v33);

    v24 = sub_1BDBFD6F8();
  }
  return v24;
}

uint64_t sub_1BDBC16DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char *v16;
  _QWORD *v17;
  uint64_t result;

  if ((uint64_t)objc_msgSend(a1, sel_numberOfRanges) >= 1)
  {
    objc_msgSend(a1, sel_range);
    v8 = sub_1BDBFDE6C();
    if ((v10 & 1) == 0)
    {
      v11 = v8;
      v12 = v9;
      swift_bridgeObjectRetain();
      v13 = (uint64_t)objc_msgSend(a1, sel_numberOfRanges);
      if (v13 >= 1)
      {
        v14 = (char *)v13;
        v15 = a1;
        v16 = sub_1BDBC1D60((char *)1, v14, v15);

        swift_bridgeObjectRetain();
        v17 = sub_1BDBC1E7C((uint64_t)v16);
        swift_bridgeObjectRelease();

        result = swift_bridgeObjectRelease_n();
        *a4 = a2;
        a4[1] = a3;
        a4[2] = v11;
        a4[3] = v12;
        a4[4] = v17;
        return result;
      }
      __break(1u);
    }
  }
  result = sub_1BDBFE52C();
  __break(1u);
  return result;
}

uint64_t String.Match.string.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t String.Match.match.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t String.Match.groups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t String.removingCharacters(notContainedIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v5 = sub_1BDBFC444();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = a2;
  v12[1] = a3;
  sub_1BDBFC42C();
  sub_1BDAC3548();
  v9 = sub_1BDBFE118();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12[0] = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
  v10 = sub_1BDBFD674();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t String.removingCharacters(containedIn:)()
{
  uint64_t v0;

  sub_1BDAC3548();
  sub_1BDBFE118();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
  sub_1BDAE0C94((unint64_t *)&qword_1EF50B860, (uint64_t *)&unk_1EF50CC50, MEMORY[0x1E0DEAF20]);
  v0 = sub_1BDBFD674();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BDBC1BB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  __int128 v7;

  v7 = *(_OWORD *)MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50E598);
  sub_1BDAE0C94((unint64_t *)&qword_1EF50E5A0, &qword_1EF50E598, MEMORY[0x1E0DEB8A8]);
  result = sub_1BDBFE0A0();
  *a2 = result;
  a2[1] = v6;
  return result;
}

id sub_1BDBC1C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1BDBFC87C();

    swift_willThrow();
  }
  return v6;
}

char *sub_1BDBC1D60(char *result, char *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return (char *)v4;
  v7 = result;
  v14 = MEMORY[0x1E0DEE9D8];
  result = (char *)sub_1BDB226A4(0, v3 & ~(v3 >> 63), 0);
  if ((uint64_t)a2 >= (uint64_t)v7 && (v3 & 0x8000000000000000) == 0)
  {
    v4 = v14;
    while (a2 != v7)
    {
      result = (char *)objc_msgSend(a3, sel_rangeAtIndex_, v7);
      v8 = result;
      v10 = v9;
      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        result = (char *)sub_1BDB226A4(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v14 + 16) = v12 + 1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      if (a2 == ++v7)
        return (char *)v4;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
  return result;
}

_QWORD *sub_1BDBC1E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRetain() + 40;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = sub_1BDBFDE6C();
    if ((v7 & 1) == 0)
    {
      v8 = v5;
      v9 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BDBCC940(0, v3[2] + 1, 1, v3);
      v11 = v3[2];
      v10 = v3[3];
      if (v11 >= v10 >> 1)
        v3 = sub_1BDBCC940((_QWORD *)(v10 > 1), v11 + 1, 1, v3);
      v3[2] = v11 + 1;
      v4 = &v3[2 * v11];
      v4[4] = v8;
      v4[5] = v9;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

id sub_1BDBC1F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  char *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  objc_super v16;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v5[OBJC_IVAR____TtC11NotesSharedP33_452BF3924CAE69326F83BAE5FEEBFB4234CustomReplacementRegularExpression_replaceBlock];
  *(_QWORD *)v10 = a3;
  *((_QWORD *)v10 + 1) = a4;
  swift_retain();
  v11 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v16.super_class = ObjectType;
  v17[0] = 0;
  v16.receiver = v5;
  v12 = objc_msgSendSuper2(&v16, sel_initWithPattern_options_error_, v11, a5, v17);

  if (v12)
  {
    v13 = v17[0];
  }
  else
  {
    v14 = v17[0];
    sub_1BDBFC87C();

    swift_willThrow();
  }
  return v12;
}

uint64_t _s5MatchVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5MatchVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s5MatchVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5MatchVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5MatchVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5MatchVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for String.Match()
{
  return &type metadata for String.Match;
}

uint64_t sub_1BDBC2290(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[6];
  uint64_t v27;

  v4 = v3;
  v5 = a3;
  v27 = MEMORY[0x1E0DEE9D8];
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BDBFE1E4();
    sub_1BD942914(0, (unint64_t *)&qword_1EF50FED0);
    sub_1BDAE15E8();
    result = sub_1BDBFDD40();
    v5 = v26[1];
    v24 = v26[2];
    v8 = v26[3];
    v9 = v26[4];
    v10 = v26[5];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a3 + 32);
    v24 = a3 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a3 + 56);
    result = swift_bridgeObjectRetain();
    v8 = v12;
    v9 = 0;
  }
  v23 = (unint64_t)(v8 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  v15 = sub_1BDBFE250();
  if (!v15)
    goto LABEL_35;
  v25 = v15;
  sub_1BD942914(0, (unint64_t *)&qword_1EF50FED0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v16 = (id)v26[0];
  swift_unknownObjectRelease();
  v17 = v9;
  v18 = v10;
  if (!v16)
    goto LABEL_35;
  while (1)
  {
    v26[0] = v16;
    a1(&v25, v26);

    if (v4)
    {
      sub_1BDAE1514();
      return swift_bridgeObjectRelease();
    }
    result = sub_1BDBC4350(v25, (uint64_t *)&unk_1EF5100D0, type metadata accessor for NoteEditActivityEvent);
    v9 = v17;
    v10 = v18;
    if (v5 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v10)
      break;
    v18 = (v10 - 1) & v10;
    v19 = __clz(__rbit64(v10)) | (v9 << 6);
    v17 = v9;
LABEL_24:
    v16 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v19);
    if (!v16)
      goto LABEL_35;
  }
  v17 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    return result;
  }
  if (v17 >= v23)
    goto LABEL_35;
  v20 = *(_QWORD *)(v24 + 8 * v17);
  if (v20)
  {
LABEL_23:
    v18 = (v20 - 1) & v20;
    v19 = __clz(__rbit64(v20)) + (v17 << 6);
    goto LABEL_24;
  }
  v21 = v9 + 2;
  if (v9 + 2 >= v23)
    goto LABEL_35;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
    goto LABEL_22;
  v21 = v9 + 3;
  if (v9 + 3 >= v23)
    goto LABEL_35;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
    goto LABEL_22;
  v21 = v9 + 4;
  if (v9 + 4 >= v23)
    goto LABEL_35;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
LABEL_22:
    v17 = v21;
    goto LABEL_23;
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v23)
    goto LABEL_35;
  v20 = *(_QWORD *)(v24 + 8 * v17);
  if (v20)
    goto LABEL_23;
  v22 = v9 + 6;
  while (v23 != v22)
  {
    v20 = *(_QWORD *)(v24 + 8 * v22++);
    if (v20)
    {
      v17 = v22 - 1;
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1BDAE1514();
  return v27;
}

uint64_t sub_1BDBC25D0(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1BDBFE574())
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B79954](i - 4, a1) : *(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = ICCloudSyncingObject.activityEvents.getter();

      sub_1BDBC3D04(v7);
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BDBC26E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(__int128 *);
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(__int128 *);
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  uint64_t v29;

  v4 = a3;
  v5 = MEMORY[0x1E0DEE9D8];
  v29 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = (uint64_t (*)(__int128 *))result;
    v9 = 0;
    v10 = a3 + 32;
    v23 = (uint64_t (*)(__int128 *))result;
    v24 = a3;
    v22 = v6;
    while (v9 < *(_QWORD *)(v4 + 16))
    {
      sub_1BDADED64(v10, (uint64_t)v28);
      v5 = a2;
      v11 = v8(v28);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if ((v11 & 1) != 0)
      {
        sub_1BDAE14D4(v28, (uint64_t)v25);
        v12 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDB225CC(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v12 = v29;
        }
        v14 = *(_QWORD *)(v12 + 16);
        v13 = *(_QWORD *)(v12 + 24);
        if (v14 >= v13 >> 1)
          sub_1BDB225CC(v13 > 1, v14 + 1, 1);
        v15 = v26;
        v16 = v27;
        v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
        MEMORY[0x1E0C80A78](v17);
        v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v20 + 16))(v19);
        sub_1BDADD590(v14, (uint64_t)v19, &v29, v15, v16);
        result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
        v8 = v23;
        v4 = v24;
        v6 = v22;
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        v5 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1BDBC28C4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for NoteEditActivityEvent(0);
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9D8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_1BDAE1544(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      v17 = a1(v12);
      if (v3)
      {
        sub_1BDAE1658((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_1BDAFE158((uint64_t)v12, v23, type metadata accessor for NoteEditActivityEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BDB22678(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1BDB22678(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_1BDAFE158(v23, v15 + v16 + v19 * v13, type metadata accessor for NoteEditActivityEvent);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_1BDAE1658((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1BDBC2ADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_1BDBFCAC8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v15 = v1;
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22A7C(0, v7, 0);
    v8 = v17;
    v9 = *(_QWORD *)(type metadata accessor for NoteEditActivityEvent(0) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v16 = *(_QWORD *)(v9 + 72);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v11(v6, v10, v3);
      v17 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BDB22A7C(v12 > 1, v13 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, v6, v3);
      v10 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t ICCloudSyncingObject.sharedRootActivityEvents.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  _BYTE v44[40];
  _QWORD v45[6];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AAD0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersistedActivityEvent();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v39 - v9;
  if (!objc_msgSend(v0, sel_isSharedViaICloud))
    return MEMORY[0x1E0DEE9D8];
  if ((objc_msgSend(v0, sel_isSharedRootObject) & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v42 = objc_msgSend(v0, sel_sharedRootObject);
  if (!v42)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50FEC0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC17EC0;
  v12 = objc_msgSend(v0, sel_identifier);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BDBFD6F8();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(inited + 40) = v16;
  v19 = objc_msgSend(v42, sel_identifier);
  if (v19)
  {
    v20 = v19;
    v21 = sub_1BDBFD6F8();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  *(_QWORD *)(inited + 48) = v21;
  *(_QWORD *)(inited + 56) = v23;
  v24 = objc_msgSend(v0, sel_allChildCloudObjects);
  sub_1BD942914(0, (unint64_t *)&qword_1EF50DC10);
  v25 = sub_1BDBFD9E0();

  v26 = sub_1BDB5017C(v25);
  v41 = 0;
  swift_bridgeObjectRelease();
  v27 = sub_1BDBC34B4((uint64_t)v26);
  swift_bridgeObjectRelease();
  v45[0] = inited;
  sub_1BDBC3B8C(v27);
  v28 = v45[0];
  v29 = ICCloudSyncingObject.persistedActivityEvents.getter();
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    v40 = v28;
    v39[1] = v29;
    v31 = v29 + 32;
    v32 = MEMORY[0x1E0DEE9D8];
    v43 = v8;
    do
    {
      sub_1BDADED64(v31, (uint64_t)v45);
      sub_1BDADED64((uint64_t)v45, (uint64_t)v44);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
      v33 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, v33 ^ 1u, 1, v4);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_1BDAC350C((uint64_t)v3, &qword_1ED23AAD0);
      }
      else
      {
        sub_1BDAFE158((uint64_t)v3, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        sub_1BDAFE158((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_1BDBCBDE4(0, *(_QWORD *)(v32 + 16) + 1, 1, v32, &qword_1EF50D2F8, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        v35 = *(_QWORD *)(v32 + 16);
        v34 = *(_QWORD *)(v32 + 24);
        if (v35 >= v34 >> 1)
          v32 = sub_1BDBCBDE4(v34 > 1, v35 + 1, 1, v32, &qword_1EF50D2F8, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        *(_QWORD *)(v32 + 16) = v35 + 1;
        v36 = v32
            + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
            + *(_QWORD *)(v5 + 72) * v35;
        v8 = v43;
        sub_1BDAFE158((uint64_t)v43, v36, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
      }
      v31 += 40;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v28 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
  }
  v37 = sub_1BDBD26B8(v32);
  swift_bridgeObjectRelease();
  v38 = sub_1BDBD2A64(v37, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = sub_1BDBC3604(v38, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent, (uint64_t)&protocol witness table for PersistedActivityEvent);

  swift_bridgeObjectRelease();
  return v17;
}

uint64_t ICCloudSyncingObject.persistedActivityEvents.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  swift_getObjectType();
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportsActivityEvents)
    && objc_msgSend(v0, sel_isSharedViaICloud))
  {
    if (objc_msgSend(v0, sel_persistedActivityEventsStorage))
    {
      sub_1BDBFE184();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    sub_1BDB35FB0((uint64_t)v5, (uint64_t)v6, qword_1ED239CF8);
    if (v7)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23AAE0);
      if (swift_dynamicCast())
      {
        v1 = v4;
LABEL_12:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
        v2 = (void *)sub_1BDBFD9C8();
        objc_msgSend(v0, sel_setPersistedActivityEventsStorage_, v2);

        return v1;
      }
    }
    else
    {
      sub_1BDAC350C((uint64_t)v6, qword_1ED239CF8);
    }
    v1 = sub_1BDBC5FE4();
    goto LABEL_12;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BDBC3218(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  id v4;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  result = sub_1BDB224F4(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a1 & 0xC000000000000001) != 0)
      MEMORY[0x1C3B79954](0, a1);
    else
      v4 = *(id *)(a1 + 32);
    result = sub_1BDBFD6E0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBC3374(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22584(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CC50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510000);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDB22584(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BDB22584(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      *(_QWORD *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDBC34B4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22614(0, v1, 0);
    v2 = v11;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510150);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDB22614(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BDB22614(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDBC35F0(uint64_t a1)
{
  return sub_1BDBC3604(a1, type metadata accessor for NoteEditActivityEvent, (uint64_t)&protocol witness table for NoteEditActivityEvent);
}

uint64_t sub_1BDBC3604(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BDB225CC(0, v10, 0);
    v11 = v21;
    v12 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v13 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1BDAE1544(v12, (uint64_t)v9, a2);
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BDB225CC(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      v19 = v6;
      v20 = a3;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
      sub_1BDAE1544((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, a2);
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1BDAE14D4(&v18, v11 + 40 * v15 + 32);
      sub_1BDAE1658((uint64_t)v9, a2);
      v12 += v13;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_1BDBC375C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22730(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDB22730(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BDB22730(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BD942258(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *ICCloudSyncingObject.activityEvents.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  _QWORD *v12;

  v1 = ICCloudSyncingObject.shareActivityEvents.getter();
  v2 = sub_1BDBC3604(v1, (uint64_t (*)(_QWORD))type metadata accessor for ShareActivityEvent, (uint64_t)&protocol witness table for ShareActivityEvent);
  swift_bridgeObjectRelease();
  v3 = ICCloudSyncingObject.persistedActivityEvents.getter();
  sub_1BDBC3D04(v3);
  v4 = (_QWORD *)v2;
  v5 = ICCloudSyncingObject.editActivityEvents.getter();
  v6 = sub_1BDBC3604((uint64_t)v5, type metadata accessor for NoteEditActivityEvent, (uint64_t)&protocol witness table for NoteEditActivityEvent);
  swift_bridgeObjectRelease();
  sub_1BDBC3D04(v6);
  v7 = objc_msgSend(v0, sel_allChildCloudObjects);
  sub_1BD942914(0, (unint64_t *)&qword_1EF50DC10);
  v8 = sub_1BDBFD9E0();

  v9 = sub_1BDBC25D0(v8);
  swift_bridgeObjectRelease();
  sub_1BDBC3D04(v9);
  KeyPath = swift_getKeyPath();
  v12 = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BDADEA04(&v12, (uint64_t (*)(uint64_t, char *))sub_1BDAD471C, 0, KeyPath);
  swift_bridgeObjectRelease();
  swift_release_n();
  return v12;
}

uint64_t sub_1BDBC3A08(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1BDBFE574())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x1C3B79954](0, a2);
LABEL_5:
      v6 = v5;
      sub_1BD942914(0, (unint64_t *)&qword_1EF50DC10);
      v7 = sub_1BDBFE070();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_1BDBFE070();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x1C3B79954](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_1BDBFE070();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BDBC3B8C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BDBCBBB8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510150);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC3CF8(unint64_t a1)
{
  return sub_1BDBC48B8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BDBD0540);
}

uint64_t sub_1BDBC3D04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BDBCC230(isUniquelyReferenced_nonNull_native, v14, 1, v3, (uint64_t *)&unk_1EF510120, &qword_1ED23AA10);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC3E7C(uint64_t a1)
{
  return sub_1BDBC4350(a1, (uint64_t *)&unk_1EF5100D0, type metadata accessor for NoteEditActivityEvent);
}

uint64_t sub_1BDBC3E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BDBCBFF0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC3FE0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BDBCC230(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_1EF50CD00, (uint64_t *)&unk_1EF50FFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50FFF0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC4164(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1C3B79960](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1BDBD075C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for ICTTTranscriptSegment, (unint64_t *)&unk_1EF510110, &qword_1EF510108, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BDAC74B4);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1BDBFD9F8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBC433C(uint64_t a1)
{
  return sub_1BDBC4350(a1, &qword_1EF510100, type metadata accessor for TranscriptViewModelSegment);
}

uint64_t sub_1BDBC4350(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v7 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v6 <= v7)
    v27 = v6 + v4;
  else
    v27 = v6;
  v5 = sub_1BDBCBDE4(isUniquelyReferenced_nonNull_native, v27, 1, v5, a2, a3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v12 = *(_QWORD *)(v5 + 16);
  v13 = (*(_QWORD *)(v5 + 24) >> 1) - v12;
  v14 = a3(0);
  if (v13 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v5 + v16 + v17 * v12;
  v19 = a1 + v16;
  v20 = v17 * v4;
  v21 = v18 + v20;
  v22 = v19 + v20;
  if (v19 < v21 && v18 < v22)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v4);
  v26 = v24 + v4;
  if (!v25)
  {
    *(_QWORD *)(v5 + 16) = v26;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC44D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BDBCBCC4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC4620(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BDBCC384(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC4768(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BDBCC490(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[4 * v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 4 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 4 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC48AC(unint64_t a1)
{
  return sub_1BDBC48B8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BDBD096C);
}

uint64_t sub_1BDBC48B8(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1C3B79960](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1BDBFD9F8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBC4A74(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BDBCC5C4(isUniquelyReferenced_nonNull_native, v15, 1, v3, (uint64_t *)&unk_1EF5100B0, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1BDBD37AC);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D280);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC4BF0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_1BDBCBDE4(isUniquelyReferenced_nonNull_native, v24, 1, v3, (uint64_t *)&unk_1EF5100A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_1BDBFC948();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC4D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BDBCC5C4(isUniquelyReferenced_nonNull_native, v14, 1, v3, &qword_1ED23A640, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1BDBD38B4);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBC4ED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BDBCC834(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

_QWORD *ICCloudSyncingObject.editActivityEvents.getter()
{
  void *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  _QWORD *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t KeyPath;
  id v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;

  v58 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1E0C80A78](v58);
  v2 = (char *)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v54 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v54 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v59 = (char *)&v54 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v54 - v15;
  v17 = sub_1BDBFCAC8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v54 - v22;
  if (!objc_msgSend(v0, sel_isSharedViaICloud))
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v55 = v2;
  objc_opt_self();
  v24 = swift_dynamicCastObjCClass();
  if (!v24)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v25 = (void *)v24;
  v56 = v23;
  v54 = v0;
  v26 = objc_msgSend(v25, sel_objc_shareTimestamp);
  v57 = v18;
  if (!v26)
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v29(v16, 1, 1, v17);
    goto LABEL_8;
  }
  v27 = v26;
  sub_1BDBFCAA4();

  v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v28(v16, v21, v17);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v29(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_8:
    sub_1BDBFC9C0();
    sub_1BDAC350C((uint64_t)v16, &qword_1ED239CD8);
    goto LABEL_9;
  }
  v28(v56, v16, v17);
LABEL_9:
  v31 = objc_msgSend(v25, sel_recentUpdatesGenerationDate);
  v32 = (uint64_t)v59;
  if (v31)
  {
    v33 = v31;
    sub_1BDBFCAA4();

    v34 = 0;
  }
  else
  {
    v34 = 1;
  }
  v29(v9, v34, 1, v17);
  sub_1BDB35FB0((uint64_t)v9, (uint64_t)v12, &qword_1ED239CD8);
  v35 = v57;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v12, 1, v17))
  {
    sub_1BDAC350C((uint64_t)v12, &qword_1ED239CD8);
    v36 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v21, v12, v17);
    sub_1BDAC350C((uint64_t)v12, &qword_1ED239CD8);
    sub_1BDBFC9FC();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v17);
    v36 = 0;
  }
  v37 = v54;
  v29((char *)v32, v36, 1, v17);
  v29(v6, 1, 1, v17);
  v38 = objc_msgSend(v25, sel_mergeableString);
  objc_opt_self();
  v39 = swift_dynamicCastObjCClass();
  if (v39)
  {
    v40 = (void *)v39;
    v41 = (uint64_t)v55;
    *v55 = v25;
    swift_storeEnumTagMultiPayload();
    v42 = v37;
    v43 = (_QWORD *)_s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v40, v41, (uint64_t)v6, v32);

    sub_1BDAE1658(v41, type metadata accessor for NoteEditActivityEvent.Parents);
  }
  else
  {

    v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v44 = v56;
  sub_1BDAC350C((uint64_t)v6, &qword_1ED239CD8);
  v45 = objc_msgSend(v25, sel_visibleAttachments);
  sub_1BD942914(0, (unint64_t *)&qword_1EF50FED0);
  sub_1BDAE15E8();
  v46 = sub_1BDBFDD10();

  MEMORY[0x1E0C80A78](v47);
  *(&v54 - 2) = (id)v32;
  v48 = sub_1BDBC2290((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BDBD2CA0, (uint64_t)(&v54 - 4), v46);
  swift_bridgeObjectRelease();
  v60 = v43;
  v49 = sub_1BDBC4350(v48, (uint64_t *)&unk_1EF5100D0, type metadata accessor for NoteEditActivityEvent);
  MEMORY[0x1E0C80A78](v49);
  *(&v54 - 2) = v44;
  v51 = (_QWORD *)sub_1BDBC28C4((uint64_t (*)(char *))sub_1BDBD2CB8, (uint64_t)(&v54 - 4), v50);
  KeyPath = swift_getKeyPath();
  v60 = v51;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BDBD25E0(&v60, (uint64_t (*)(char *, char *))sub_1BDAE16AC, 0, KeyPath);

  swift_release_n();
  v30 = v60;
  sub_1BDAC350C(v32, &qword_1ED239CD8);
  (*(void (**)(void *, uint64_t))(v57 + 8))(v44, v17);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1BDBC55D0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BDBC55F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

Swift::Void __swiftcall ICCloudSyncingObject.remove(cloudSyncingObjectActivityEvent:)(ICCloudSyncingObjectActivityEvent cloudSyncingObjectActivityEvent)
{
  sub_1BDBC9770((uint64_t)cloudSyncingObjectActivityEvent.super.isa, (SEL *)&selRef_removeObject_);
}

uint64_t sub_1BDBC5634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BDBFCE34();
  __swift_allocate_value_buffer(v0, qword_1ED23A700);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23A700);
  if (qword_1ED23B0E8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23AEF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t ICCloudSyncingObject.shareActivityEvents.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;

  v1 = v0;
  swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FEE0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ShareActivityEvent();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportsActivityEvents)
    && objc_msgSend(v1, sel_isSharedViaICloud))
  {
    ShareActivityEvent.init(cloudSyncingObject:)(v1, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      sub_1BDAFE158((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ShareActivityEvent);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FEE8);
      v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1BDC16BA0;
      sub_1BDAFE158((uint64_t)v8, v9 + v11, (uint64_t (*)(_QWORD))type metadata accessor for ShareActivityEvent);
      return v9;
    }
    sub_1BDAC350C((uint64_t)v4, &qword_1EF50FEE0);
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t ICCloudSyncingObject.activityEventsPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  void (*v25)(char *, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  id v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FEF0);
  v1 = *(_QWORD *)(v0 - 8);
  v55 = v0;
  v56 = v1;
  MEMORY[0x1E0C80A78](v0);
  v52 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FEF8);
  v59 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v53 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF00);
  v60 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v54 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF08);
  v6 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  v50 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BDBFDFB0();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF10);
  v48 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v46 = (char *)&v45 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v45 = (char *)&v45 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v45 - v21;
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_defaultCenter);
  sub_1BDBFDFBC();

  sub_1BD942914(0, (unint64_t *)&qword_1EF50DC10);
  sub_1BDAC31B0(&qword_1EF50FF18, v10, MEMORY[0x1E0CB1F20]);
  sub_1BDBFD1A0();
  v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25(v13, v9);
  v26 = objc_msgSend(v23, sel_defaultCenter);
  sub_1BDBFDFBC();

  sub_1BD942914(0, (unint64_t *)&qword_1EF50FF20);
  sub_1BDBFD1A0();
  v25(v13, v9);
  v27 = swift_allocObject();
  v28 = v51;
  *(_QWORD *)(v27 + 16) = v51;
  v29 = v28;
  v30 = v45;
  v31 = v49;
  sub_1BDBFD110();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v31);
  v32 = v48;
  v33 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v34 = v22;
  v33(v46, v22, v14);
  v33(v47, v30, v14);
  sub_1BDAE0C94(&qword_1EF50FF28, &qword_1EF50FF10, MEMORY[0x1E0C95708]);
  v35 = v52;
  sub_1BDBFD11C();
  *(_QWORD *)(swift_allocObject() + 16) = v29;
  sub_1BDAE0C94(&qword_1EF50FF30, &qword_1EF50FEF0, MEMORY[0x1E0C95A60]);
  v36 = v29;
  v37 = v53;
  v38 = v55;
  sub_1BDBFD1B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v38);
  sub_1BDAE0C94(&qword_1EF50FF38, &qword_1EF50FEF8, MEMORY[0x1E0C95AD0]);
  v39 = v54;
  v40 = v57;
  sub_1BDBFD1AC();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v40);
  sub_1BDAE0C94(&qword_1EF50FF40, &qword_1EF50FF00, MEMORY[0x1E0C95950]);
  v41 = v58;
  v42 = sub_1BDBFD194();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v41);
  v43 = *(void (**)(char *, uint64_t))(v32 + 8);
  v43(v30, v14);
  v43(v34, v14);
  return v42;
}

uint64_t sub_1BDBC5DCC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BDBC5DF4((unint64_t *)&qword_1EF50DC10, a1);
}

uint64_t sub_1BDBC5DE0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BDBC5DF4((unint64_t *)&qword_1EF50FF20, a1);
}

uint64_t sub_1BDBC5DF4@<X0>(unint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t result;
  _QWORD v5[4];

  sub_1BDBFC498();
  if (!v5[3])
  {
    result = sub_1BDAC350C((uint64_t)v5, qword_1ED239CF8);
    goto LABEL_5;
  }
  sub_1BD942914(0, a1);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
LABEL_5:
    *a2 = 0;
  return result;
}

void sub_1BDBC5E88(id a1@<X1>, uint64_t *a2@<X0>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  v4 = *a2;
  v5 = objc_msgSend(a1, sel_managedObjectContext);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_objectWithID_, v4);

    if (v7)
    {
      objc_opt_self();
      v8 = swift_dynamicCastObjCClass();
      if (v8)
      {
        *a3 = v8;
        return;
      }

    }
  }
  *a3 = 0;
}

uint64_t sub_1BDBC5F24(void **a1, uint64_t a2)
{
  void *v3;
  id v5;
  unint64_t v6;
  char v7;

  v3 = *a1;
  sub_1BD942914(0, (unint64_t *)&qword_1ED23B120);
  if ((sub_1BDBFE070() & 1) != 0)
    return 1;
  v5 = objc_msgSend(v3, sel_ancestorCloudObjects);
  sub_1BD942914(0, (unint64_t *)&qword_1EF50DC10);
  v6 = sub_1BDBFD9E0();

  v7 = sub_1BDBC3A08(a2, v6);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BDBC5FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t KeyPath;
  uint64_t result;
  _QWORD v23[2];
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _UNKNOWN **v34;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A6A0);
  MEMORY[0x1E0C80A78](v0);
  v28 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AAD0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
  if (!(v27 >> 62))
  {
    v5 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_19:
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
    swift_bridgeObjectRelease_n();
    KeyPath = swift_getKeyPath();
    *(_QWORD *)&v32 = v8;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BDADEA04((_QWORD **)&v32, (uint64_t (*)(uint64_t, char *))sub_1BDAE16AC, 0, KeyPath);
    swift_bridgeObjectRelease();
    swift_release_n();
    return v32;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BDBFE574();
  if (!v5)
    goto LABEL_19;
LABEL_3:
  if (v5 >= 1)
  {
    v25 = v27 & 0xC000000000000001;
    v6 = type metadata accessor for PersistedActivityEvent();
    v7 = 0;
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v9 = 136315138;
    v24 = v9;
    v23[1] = MEMORY[0x1E0DEE9B8] + 8;
    v26 = v5;
    do
    {
      v29 = v8;
      if (v25)
        v10 = (id)MEMORY[0x1C3B79954](v7, v27);
      else
        v10 = *(id *)(v27 + 8 * v7 + 32);
      v11 = v10;
      v12 = (uint64_t)v4;
      if (qword_1EF50B308 != -1)
        swift_once();
      v13 = objc_msgSend(v11, sel_data);
      v14 = sub_1BDBFC990();
      v16 = v15;

      sub_1BDAC31B0(&qword_1EF50FFC8, (uint64_t (*)(uint64_t))type metadata accessor for PersistedActivityEvent, (uint64_t)&protocol conformance descriptor for PersistedActivityEvent);
      v4 = (char *)v12;
      sub_1BDBFC378();
      sub_1BDAEB7EC(v14, v16);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v12, 0, 1, v6);
      v33 = v6;
      v34 = &protocol witness table for PersistedActivityEvent;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v32);
      sub_1BDAFE158(v12, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
      sub_1BDAE14D4(&v32, (uint64_t)&v30);
      v8 = v29;
      v18 = v26;

      if (*((_QWORD *)&v31 + 1))
      {
        sub_1BDAE14D4(&v30, (uint64_t)&v32);
        sub_1BDAE14D4(&v32, (uint64_t)&v30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_1BDBCC230(0, v8[2] + 1, 1, v8, (uint64_t *)&unk_1EF510120, &qword_1ED23AA10);
        v20 = v8[2];
        v19 = v8[3];
        if (v20 >= v19 >> 1)
          v8 = sub_1BDBCC230((_QWORD *)(v19 > 1), v20 + 1, 1, v8, (uint64_t *)&unk_1EF510120, &qword_1ED23AA10);
        v8[2] = v20 + 1;
        sub_1BDAE14D4(&v30, (uint64_t)&v8[5 * v20 + 4]);
      }
      else
      {
        sub_1BDAC350C((uint64_t)&v30, &qword_1ED23AA18);
      }
      ++v7;
    }
    while (v18 != v7);
    goto LABEL_20;
  }
  __break(1u);
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;

  v1 = objc_msgSend(v0, sel_activityEventsDocument);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = v1;
  v4 = objc_msgSend(v1, sel_orderedSet);

  v5 = objc_msgSend(v4, sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50FF48);
  v6 = sub_1BDBFD9E0();

  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_bridgeObjectRetain();
  result = sub_1BDBFE574();
  v7 = result;
  if (!result)
    goto LABEL_17;
LABEL_4:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        MEMORY[0x1C3B79954](i, v6);
      else
        swift_unknownObjectRetain();
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1C3B78F88]();
        if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BDBFDA1C();
        sub_1BDBFDA64();
        sub_1BDBFD9F8();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t static ICCloudSyncingObject.activityEvent(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t *v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A6A0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AAD0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ICCloudSyncingObject.persistedActivityEvent(for:)(a1, (uint64_t)v9);
  v10 = type metadata accessor for PersistedActivityEvent();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    sub_1BDAC350C((uint64_t)v9, &qword_1ED23AAD0);
    static ICCloudSyncingObject.fallbackActivityEvent(for:)(a1, (uint64_t)v6);
    v11 = type metadata accessor for FallbackActivityEvent();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) == 1)
    {
      result = sub_1BDAC350C((uint64_t)v6, &qword_1ED23A6A0);
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_QWORD *)(a2 + 32) = 0;
    }
    else
    {
      *(_QWORD *)(a2 + 24) = v11;
      *(_QWORD *)(a2 + 32) = &protocol witness table for FallbackActivityEvent;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      return sub_1BDAFE158((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for FallbackActivityEvent);
    }
  }
  else
  {
    v17 = v10;
    v18 = &protocol witness table for PersistedActivityEvent;
    v13 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
    sub_1BDAFE158((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    return sub_1BDAE14D4(&v16, a2);
  }
  return result;
}

uint64_t ICCloudSyncingObject.persistedActivityEventsPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF58);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1BDBFC888();
  swift_release();
  sub_1BDAE0C94(&qword_1EF50FF68, &qword_1EF50FF58, MEMORY[0x1E0CB2118]);
  sub_1BDBFD1AC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BDAE0C94(&qword_1EF50FF70, &qword_1EF50FF60, MEMORY[0x1E0C95950]);
  v8 = sub_1BDBFD194();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

void sub_1BDBC6B10(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_activityEventsData);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BDBFC990();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1BDBC6B74(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_1BDBFC978();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setActivityEventsData_);

}

uint64_t sub_1BDBC6BD8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = sub_1BDBFCAC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = _s11NotesShared21NoteEditActivityEventV6events3for14afterTimestamp06recentJ0SayACGSo12ICAttachmentC_10Foundation4DateVSgANtFZ_0(v9, (uint64_t)v8, a2);
  result = sub_1BDAC350C((uint64_t)v8, &qword_1ED239CD8);
  *a3 = v11;
  return result;
}

uint64_t sub_1BDBC6CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  _QWORD v15[2];

  v4 = sub_1BDBFCAC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NoteEditActivityEvent(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + *(int *)(v9 + 28)) && *(_BYTE *)(a1 + *(int *)(v9 + 28)) != 1)
  {
    swift_bridgeObjectRelease();
    sub_1BDAE1544(a1, (uint64_t)v11, type metadata accessor for NoteEditActivityEvent);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v13 = 1;
  }
  else
  {
    v12 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    sub_1BDAE1544(a1, (uint64_t)v11, type metadata accessor for NoteEditActivityEvent);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    if ((v12 & 1) != 0)
    {
      v13 = 1;
    }
    else
    {
      sub_1BDAC31B0((unint64_t *)&unk_1EF50FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v13 = sub_1BDBFD680() ^ 1;
    }
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BDAE1658((uint64_t)v11, type metadata accessor for NoteEditActivityEvent);
  return v13 & 1;
}

uint64_t ICCloudSyncingObject.editActivityEventsPublisher.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF78);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BDBFDFB0();
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF80);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF88);
  v22 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    sub_1BDBFDFBC();

    *(_QWORD *)(swift_allocObject() + 16) = v1;
    sub_1BDAC31B0(&qword_1EF50FF18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
    v16 = v1;
    sub_1BDBFD1B8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
    sub_1BDAE0C94(&qword_1EF50FF98, &qword_1EF50FF80, MEMORY[0x1E0C95AD0]);
    sub_1BDBFD1AC();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
    sub_1BDAE0C94((unint64_t *)&unk_1EF50FFA0, &qword_1EF50FF88, MEMORY[0x1E0C95950]);
    v17 = sub_1BDBFD194();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v12);
  }
  else
  {
    sub_1BDBFD134();
    sub_1BDAE0C94(&qword_1EF50FF90, &qword_1EF50FF78, MEMORY[0x1E0C960D0]);
    v17 = sub_1BDBFD194();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v17;
}

uint64_t sub_1BDBC719C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  char v7;
  void *v9;
  _BYTE v10[24];
  uint64_t v11;

  sub_1BDBFC498();
  if (v11)
  {
    sub_1BD942914(0, (unint64_t *)&qword_1EF50FF20);
    if (swift_dynamicCast())
    {
      v3 = v9;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BDAC350C((uint64_t)v10, qword_1ED239CF8);
  }
  v3 = 0;
LABEL_6:
  v4 = objc_msgSend(a2, sel_objectID);
  v5 = v4;
  if (v3)
  {
    if (v4)
    {
      sub_1BD942914(0, (unint64_t *)&qword_1EF50FF20);
      v6 = v3;
      v7 = sub_1BDBFE070();

    }
    else
    {
      v7 = 0;
      v5 = v3;
    }
  }
  else
  {
    if (!v4)
    {
      v7 = 1;
      return v7 & 1;
    }
    v7 = 0;
  }

  return v7 & 1;
}

uint64_t ICCloudSyncingObject.sharedRootActivityEventsPublisher.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF78);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF58);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FF60);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v1, sel_isSharedViaICloud)
    && (objc_msgSend(v1, sel_isSharedRootObject) & 1) == 0
    && (v14 = objc_msgSend(v1, sel_sharedRootObject)) != 0)
  {
    v15 = v14;
    swift_getKeyPath();
    sub_1BDBFC888();
    swift_release();
    sub_1BDAE0C94(&qword_1EF50FF68, &qword_1EF50FF58, MEMORY[0x1E0CB2118]);
    sub_1BDBFD1AC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1BDAE0C94(&qword_1EF50FF70, &qword_1EF50FF60, MEMORY[0x1E0C95950]);
    v16 = sub_1BDBFD194();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

  }
  else
  {
    sub_1BDBFD134();
    sub_1BDAE0C94(&qword_1EF50FF90, &qword_1EF50FF78, MEMORY[0x1E0C960D0]);
    v16 = sub_1BDBFD194();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v16;
}

uint64_t ICCloudSyncingObject.shareTimestamp.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  int v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  id v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  void (*v55)(char *, uint64_t, uint64_t);
  id v56;
  void *v57;
  char *v58;
  char *v59;
  char v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t ObjectType;
  __int128 v73;
  __int128 v74;
  uint64_t v75;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v63 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v68 = (char *)&v63 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v63 - v14;
  MEMORY[0x1E0C80A78](v13);
  v70 = (uint64_t)&v63 - v15;
  v16 = sub_1BDBFCAC8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v66 = (char *)&v63 - v21;
  MEMORY[0x1E0C80A78](v20);
  v71 = (char *)&v63 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AAD0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for PersistedActivityEvent();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v2, sel_isSharedViaICloud))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1, 1, 1, v16);
  v64 = v17;
  v65 = v16;
  v63 = a1;
  if ((objc_msgSend(v2, sel_isSharedRootObject) & 1) == 0)
  {
    v37 = ICCloudSyncingObject.persistedActivityEvents.getter();
    if (*(_QWORD *)(v37 + 16))
    {
      sub_1BDADED64(v37 + 32, (uint64_t)&v73);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v74 + 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
        v38 = swift_dynamicCast();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v25, v38 ^ 1u, 1, v26);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) != 1)
        {
          sub_1BDAFE158((uint64_t)v25, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
          PersistedActivityEvent.Activities.isAddActivity.getter();
          if ((v39 & 1) != 0)
          {
            v40 = v63;
            v41 = v64;
            v42 = v65;
            (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v29, v65);
            sub_1BDAE1658((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
            return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v40, 0, 1, v42);
          }
          sub_1BDAE1658((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
LABEL_16:
          v43 = objc_msgSend(v2, sel_serverShareCheckingParent);
          v44 = (_QWORD *)v64;
          v45 = v65;
          v46 = v71;
          if (v43)
          {
            v47 = v43;
            v48 = objc_msgSend(v43, sel_creationDate);

            if (v48)
            {
              v49 = v69;
              sub_1BDBFCAA4();

              v50 = (uint64_t)v49;
              v51 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v44[7];
              v51(v49, 0, 1, v45);
            }
            else
            {
              v51 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v44[7];
              v50 = (uint64_t)v69;
              v51(v69, 1, 1, v45);
            }
            v52 = v70;
            sub_1BDB35FB0(v50, v70, &qword_1ED239CD8);
            v54 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v44[6];
            if (v54(v52, 1, v45) != 1)
            {
              v55 = (void (*)(char *, uint64_t, uint64_t))v44[4];
              v55(v46, v52, v45);
              v56 = objc_msgSend(v2, sel_parentCloudObjectModificationDate);
              if (v56)
              {
                v57 = v56;
                v58 = v67;
                sub_1BDBFCAA4();

                v52 = (uint64_t)v68;
                v55(v68, (uint64_t)v58, v45);
                v51((char *)v52, 0, 1, v45);
                if (v54(v52, 1, v45) != 1)
                {
                  v59 = v66;
                  v55(v66, v52, v45);
                  sub_1BDAC31B0((unint64_t *)&unk_1EF50FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
                  v60 = sub_1BDBFD680();
                  v61 = (void (*)(char *, uint64_t))v44[1];
                  v61(v59, v45);
                  v62 = v63;
                  if ((v60 & 1) == 0)
                  {
                    v55(v63, (uint64_t)v46, v45);
                    return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v51)(v62, 0, 1, v45);
                  }
                  v61(v46, v45);
                  return sub_1BDBC7E58(v2, v62);
                }
              }
              else
              {
                v52 = (uint64_t)v68;
                v51(v68, 1, 1, v45);
              }
              ((void (*)(char *, uint64_t))v44[1])(v46, v45);
            }
          }
          else
          {
            v52 = v70;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v70, 1, 1, v65);
          }
          sub_1BDAC350C(v52, &qword_1ED239CD8);
          v62 = v63;
          return sub_1BDBC7E58(v2, v62);
        }
LABEL_15:
        sub_1BDAC350C((uint64_t)v25, &qword_1ED23AAD0);
        goto LABEL_16;
      }
    }
    else
    {
      v75 = 0;
      v73 = 0u;
      v74 = 0u;
      swift_bridgeObjectRelease();
    }
    sub_1BDAC350C((uint64_t)&v73, &qword_1ED23AA18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
    goto LABEL_15;
  }
  v30 = objc_msgSend(v2, sel_serverShare);
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v10, 1, 1, v65);
LABEL_22:
    sub_1BDBC7E58(v2, v63);
    return sub_1BDAC350C((uint64_t)v10, &qword_1ED239CD8);
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_creationDate);

  v34 = v64;
  v33 = v65;
  if (v32)
  {
    sub_1BDBFCAA4();

    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
    v35(v7, 0, 1, v33);
  }
  else
  {
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56);
    v35(v7, 1, 1, v65);
  }
  sub_1BDB35FB0((uint64_t)v7, (uint64_t)v10, &qword_1ED239CD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v10, 1, v33) == 1)
    goto LABEL_22;
  v53 = v63;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v63, v10, v33);
  return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v35)(v53, 0, 1, v33);
}

uint64_t sub_1BDBC7CFC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v2 = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
  if (v2 >> 62)
  {
    result = sub_1BDBFE574();
    if (result)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    goto LABEL_10;
  }
  result = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!result)
    goto LABEL_9;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1C3B79954](0, v2);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v4 = *(id *)(v2 + 32);
  }
  v5 = v4;
  swift_bridgeObjectRelease();
  static ICCloudSyncingObject.activityEvent(for:)(v5, (uint64_t)&v10);

  v6 = *((_QWORD *)&v11 + 1);
  if (*((_QWORD *)&v11 + 1))
  {
    v7 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    v8 = sub_1BDBFCAC8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
  }
LABEL_10:
  sub_1BDAC350C((uint64_t)&v10, &qword_1ED23AA18);
  v9 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
}

uint64_t sub_1BDBC7E58@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;

  v60 = a2;
  v3 = sub_1BDBFCAC8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v54 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v53 - v7;
  v53 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1E0C80A78](v53);
  v9 = (uint64_t *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CD8);
  v10 = *(_QWORD *)(v58 - 8);
  v11 = MEMORY[0x1E0C80A78](v58);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v62 = (uint64_t)&v53 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v53 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v53 - v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF510060);
  v21 = *(_QWORD *)(v10 + 72);
  v22 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BDC17EC0;
  v57 = v23;
  v24 = v23 + v22;
  sub_1BDBC7CFC(v24);
  v56 = v24;
  v25 = (char *)(v24 + v21);
  objc_opt_self();
  v26 = swift_dynamicCastObjCClass();
  v59 = v4;
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v61 = v25;
  if (v26)
  {
    v28 = (void *)v26;
    v27(v20, 1, 1, v3);
    v27(v18, 1, 1, v3);
    v29 = a1;
    v30 = objc_msgSend(v28, sel_mergeableString);
    objc_opt_self();
    v31 = swift_dynamicCastObjCClass();
    if (v31)
    {
      v32 = (void *)v31;
      *v9 = v28;
      swift_storeEnumTagMultiPayload();
      v33 = v29;
      v34 = _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v32, (uint64_t)v9, (uint64_t)v20, (uint64_t)v18);

      sub_1BDAE1658((uint64_t)v9, type metadata accessor for NoteEditActivityEvent.Parents);
    }
    else
    {

      v34 = MEMORY[0x1E0DEE9D8];
    }
    v35 = v54;
    sub_1BDAC350C((uint64_t)v18, &qword_1ED239CD8);
    sub_1BDAC350C((uint64_t)v20, &qword_1ED239CD8);
    v36 = v29;
    v37 = sub_1BDBD2E44(v34, v28);
    swift_bridgeObjectRelease();

    v38 = sub_1BDBC2ADC(v37);
    swift_bridgeObjectRelease();
    v25 = v61;
    sub_1BDB2DD24(v38, v61);
    swift_bridgeObjectRelease();

  }
  else
  {
    v27(v25, 1, 1, v3);
    v35 = v54;
  }
  v39 = v62;
  sub_1BDB157E4(v56, v62, &qword_1ED239CD8);
  sub_1BDB35FB0(v39, (uint64_t)v13, &qword_1ED239CD8);
  v40 = v59;
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
  if (v41(v13, 1, v3) == 1)
  {
    sub_1BDAC350C((uint64_t)v13, &qword_1ED239CD8);
    v42 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v43 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v44 = v55;
    v43(v55, v13, v3);
    v43(v35, v44, v3);
    v42 = MEMORY[0x1E0DEE9D8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_1BDBCBDE4(0, *(_QWORD *)(v42 + 16) + 1, 1, v42, &qword_1EF50D268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
    v46 = *(_QWORD *)(v42 + 16);
    v45 = *(_QWORD *)(v42 + 24);
    if (v46 >= v45 >> 1)
      v42 = sub_1BDBCBDE4(v45 > 1, v46 + 1, 1, v42, &qword_1EF50D268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
    *(_QWORD *)(v42 + 16) = v46 + 1;
    v43((char *)(v42+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v46), v35, v3);
    v25 = v61;
  }
  v47 = v62;
  sub_1BDB157E4((uint64_t)v25, v62, &qword_1ED239CD8);
  sub_1BDB35FB0(v47, (uint64_t)v13, &qword_1ED239CD8);
  if (v41(v13, 1, v3) == 1)
  {
    sub_1BDAC350C((uint64_t)v13, &qword_1ED239CD8);
  }
  else
  {
    v48 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v49 = v55;
    v48(v55, v13, v3);
    v48(v35, v49, v3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_1BDBCBDE4(0, *(_QWORD *)(v42 + 16) + 1, 1, v42, &qword_1EF50D268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
    v51 = *(_QWORD *)(v42 + 16);
    v50 = *(_QWORD *)(v42 + 24);
    if (v51 >= v50 >> 1)
      v42 = sub_1BDBCBDE4(v50 > 1, v51 + 1, 1, v42, &qword_1EF50D268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
    *(_QWORD *)(v42 + 16) = v51 + 1;
    v48((char *)(v42+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v51), v35, v3);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BDB2DD24(v42, v60);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BDBC8450()
{
  void *v0;
  unint64_t v1;
  void *v2;
  unint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (objc_msgSend(v0, sel_checklistItemToActivityEventsStorage))
  {
    sub_1BDBFE184();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1BDB35FB0((uint64_t)v5, (uint64_t)v6, qword_1ED239CF8);
  if (!v7)
  {
    sub_1BDAC350C((uint64_t)v6, qword_1ED239CF8);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510038);
  if (!swift_dynamicCast())
  {
LABEL_8:
    v1 = sub_1BDBC856C();
    goto LABEL_9;
  }
  v1 = v4;
LABEL_9:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
  v2 = (void *)sub_1BDBFD5B4();
  objc_msgSend(v0, sel_setChecklistItemToActivityEventsStorage_, v2);

  return v1;
}

unint64_t sub_1BDBC856C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v40[2];
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[40];
  uint64_t v56[6];

  v49 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v49);
  v1 = (char *)v40 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1BDBFCB40();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x1E0C80A78](v2);
  v44 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AAD0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PersistedActivityEvent();
  v51 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v52 = (uint64_t)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510040);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510048);
  v53 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v50 = (uint64_t)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v48 = (uint64_t)v40 - v15;
  v16 = ICCloudSyncingObject.persistedActivityEvents.getter();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v40[1] = v16;
    v18 = v16 + 32;
    v54 = MEMORY[0x1E0DEE9D8];
    v43 = v1;
    v42 = v7;
    v41 = v6;
    do
    {
      sub_1BDADED64(v18, (uint64_t)v56);
      sub_1BDADED64((uint64_t)v56, (uint64_t)v55);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AA10);
      v19 = swift_dynamicCast();
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
      if (v19)
      {
        v20(v6, 0, 1, v7);
        v21 = v52;
        sub_1BDAFE158((uint64_t)v6, v52, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        sub_1BDAE1544(v21 + *(int *)(v7 + 28), (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          v23 = v45;
          v22 = v46;
          v24 = v44;
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v1, v46);
          v47 = (uint64_t)v11 + *(int *)(v12 + 48);
          v25 = sub_1BDBFCAEC();
          v27 = v26;
          v28 = *(void (**)(char *, uint64_t))(v23 + 8);
          v7 = v42;
          v29 = v22;
          v6 = v41;
          v28(v24, v29);
          *v11 = v25;
          v11[1] = v27;
          v1 = v43;
          sub_1BDAFE158(v52, v47, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
          v30 = 0;
        }
        else
        {
          sub_1BDAE1658(v52, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
          sub_1BDAE1658((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
          v30 = 1;
        }
      }
      else
      {
        v30 = 1;
        v20(v6, 1, 1, v7);
        sub_1BDAC350C((uint64_t)v6, &qword_1ED23AAD0);
      }
      v31 = v53;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v11, v30, 1, v12);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48))(v11, 1, v12) == 1)
      {
        sub_1BDAC350C((uint64_t)v11, &qword_1EF510040);
      }
      else
      {
        v32 = v48;
        sub_1BDB35FB0((uint64_t)v11, v48, &qword_1EF510048);
        sub_1BDB35FB0(v32, v50, &qword_1EF510048);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v54 = sub_1BDBCCA4C(0, *(_QWORD *)(v54 + 16) + 1, 1, v54, &qword_1EF510058, &qword_1EF510048);
        v34 = *(_QWORD *)(v54 + 16);
        v33 = *(_QWORD *)(v54 + 24);
        if (v34 >= v33 >> 1)
          v54 = sub_1BDBCCA4C(v33 > 1, v34 + 1, 1, v54, &qword_1EF510058, &qword_1EF510048);
        v35 = v53;
        v36 = v54;
        *(_QWORD *)(v54 + 16) = v34 + 1;
        sub_1BDB35FB0(v50, v36+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v34, &qword_1EF510048);
      }
      v18 += 40;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v54 = MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(v54 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510050);
    v37 = sub_1BDBFE598();
  }
  else
  {
    v37 = MEMORY[0x1E0DEE9E0];
  }
  v56[0] = v37;
  sub_1BDBD3DC8(v54, 1, v56);
  swift_bridgeObjectRelease();
  v38 = sub_1BDB63FD4(v56[0]);
  swift_release();
  return v38;
}

uint64_t ICCloudSyncingObject.timestampForChecklistItem(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v6 = sub_1BDBC8450();
  if (!*(_QWORD *)(v6 + 16))
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BDAC358C(a1, a2);
  if ((v8 & 1) == 0)
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1BDADED64(*(_QWORD *)(v6 + 56) + 40 * v7, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v10 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    v11 = sub_1BDBFCAC8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 0, 1, v11);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v14);
  }
LABEL_8:
  sub_1BDAC350C((uint64_t)&v14, &qword_1ED23AA18);
  v13 = sub_1BDBFCAC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
}

Swift::String_optional __swiftcall ICCloudSyncingObject.userIdForChecklistItem(identifier:)(Swift::String identifier)
{
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  Swift::String_optional result;
  _QWORD v13[3];
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  object = identifier._object;
  countAndFlagsBits = identifier._countAndFlagsBits;
  v3 = sub_1BDBC8450();
  if (!*(_QWORD *)(v3 + 16))
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v4 = sub_1BDAC358C(countAndFlagsBits, (uint64_t)object);
  if ((v5 & 1) == 0)
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1BDADED64(*(_QWORD *)(v3 + 56) + 40 * v4, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *((_QWORD *)&v15 + 1);
  if (!*((_QWORD *)&v15 + 1))
  {
LABEL_8:
    sub_1BDAC350C((uint64_t)&v14, &qword_1ED23AA18);
    v8 = 0;
    v9 = 0;
    goto LABEL_9;
  }
  v7 = v16;
  __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v13, v6, v7);
  v8 = v13[0];
  v9 = (void *)v13[1];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v14);
LABEL_9:
  v10 = v8;
  v11 = v9;
  result.value._object = v11;
  result.value._countAndFlagsBits = v10;
  return result;
}

uint64_t ICCloudSyncingObject.supports(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v1, sel_isSharedViaICloud))
  {
    v6 = type metadata accessor for PersistedActivityEvent();
    sub_1BDAE1544(a1 + *(int *)(v6 + 28), (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
    v7 = (char *)&loc_1BDBC8F50 + 4 * byte_1BDC20D00[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return 0;
}

objc_class *ICCloudSyncingObject.persist(activity:for:timestamp:)(uint64_t a1, ICCloudSyncingObject *a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  ICCloudSyncingObject *v17;
  ICCloudSyncingObject *v18;
  uint64_t v19;
  ICCloudSyncingObject *v20;
  ICCloudSyncingObject *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  objc_class *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v34 = a3;
  v35 = a1;
  v5 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v5);
  v36 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BDBFCAC8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for PersistedActivityEvent();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - v15;
  v17 = a2;
  if (!a2)
    v17 = v3;
  v37 = v3;
  v18 = a2;
  ActivityEventParticipant.init(cloudSyncingObject:)(v17);
  v19 = v39;
  if (!v39)
    return 0;
  v33 = v40;
  v20 = v18;
  v31 = v38;
  v32 = v41;
  if (!a2)
    v20 = (ICCloudSyncingObject *)v37;
  v21 = v18;
  ActivityEventObject.init(cloudSyncingObject:)(v20);
  v22 = v40;
  if (!v40)
  {
    sub_1BDBD2D24(v31, v19);
    return 0;
  }
  v30 = v39;
  v23 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v34, v7);
  v24 = v36;
  sub_1BDAE1544(v35, v36, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v14, v10, v7);
  v25 = &v14[v11[5]];
  *v25 = v23 & 1;
  *((_QWORD *)v25 + 1) = v30;
  *((_QWORD *)v25 + 2) = v22;
  v26 = &v14[v11[6]];
  *(_QWORD *)v26 = v31;
  *((_QWORD *)v26 + 1) = v19;
  v27 = v32;
  *((_QWORD *)v26 + 2) = v33;
  *((_QWORD *)v26 + 3) = v27;
  sub_1BDAFE158(v24, (uint64_t)&v14[v11[7]], (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  sub_1BDAFE158((uint64_t)v14, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
  v28 = ICCloudSyncingObject.persist(activityEvent:)((uint64_t)v16);
  sub_1BDAE1658((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
  return v28;
}

objc_class *ICCloudSyncingObject.persist(activityEvent:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  ICCloudSyncingObjectActivityEvent v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  _QWORD v23[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A6A0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PersistedActivityEvent();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FallbackActivityEvent();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((ICCloudSyncingObject.supports(_:)(a1) & 1) != 0)
  {
    sub_1BDAE1544(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    FallbackActivityEvent.init(activityEvent:)((uint64_t)v8, (uint64_t)v12);
    sub_1BDAE1544((uint64_t)v12, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FallbackActivityEvent);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    v13 = (objc_class *)_sSo20ICCloudSyncingObjectC11NotesSharedE05cloudbC13ActivityEvent3for8fallbackSo0abcgH0CSgAC09PersistedgH0V_AC08FallbackgH0VSgtFZ_0();
    sub_1BDAC350C((uint64_t)v5, &qword_1ED23A6A0);
    if (v13)
    {
      v14.super.isa = v13;
      ICCloudSyncingObject.add(cloudSyncingObjectActivityEvent:)(v14);
    }
    sub_1BDAE1658((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FallbackActivityEvent);
  }
  else
  {
    if (qword_1ED23A718 != -1)
      swift_once();
    v15 = sub_1BDBFCE34();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED23A700);
    v16 = v1;
    v17 = sub_1BDBFCE1C();
    v18 = sub_1BDBFDED8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v21 = objc_msgSend(v16, sel_objectID);
      v23[1] = v21;
      sub_1BDBFE100();
      *v20 = v21;

      _os_log_impl(&dword_1BD918000, v17, v18, "Activity is not supported — skipping {objectID: %@}", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23B100);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v20, -1, -1);
      MEMORY[0x1C3B7B478](v19, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v13;
}

Swift::Void __swiftcall ICCloudSyncingObject.add(cloudSyncingObjectActivityEvent:)(ICCloudSyncingObjectActivityEvent cloudSyncingObjectActivityEvent)
{
  sub_1BDBC9770((uint64_t)cloudSyncingObjectActivityEvent.super.isa, (SEL *)&selRef_addObject_);
}

void sub_1BDBC9770(uint64_t a1, SEL *a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;

  v5 = objc_msgSend(v2, sel_activityEventsDocument);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_orderedSet);

    objc_msgSend(v7, *a2, a1);
  }
  v8 = objc_msgSend(v2, sel_activityEventsDocument);
  v9 = v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, sel_serialize);

    v11 = sub_1BDBFC990();
    v13 = v12;

    v9 = (void *)sub_1BDBFC978();
    sub_1BDAEB7EC(v11, v13);
  }
  objc_msgSend(v2, sel_setActivityEventsData_, v9);

  v14 = (id)sub_1BDBFD6C8();
  objc_msgSend(v2, sel_updateChangeCountWithReason_, v14);

}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistCreateActivityEvent(forObject:inParentObject:)(ICCloudSyncingObject *forObject, ICCloudSyncingObject_optional *inParentObject)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSData *v13;
  NSData *v14;
  Swift::Bool v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  objc_class *v22;
  objc_class *v23;
  uint64_t v24;
  ICCloudSyncingObject *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  ICCloudSyncingObjectActivityEvent_optional result;

  v5 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BDBFCAC8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v17 = (char *)&v24 - v16;
  if (inParentObject
    && (*(NotesShared::ActivityEventObject_optional *)&(&v13)[-1] = ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)inParentObject),
        (v18 = v29) != 0))
  {
    v19 = v28;
    v25 = forObject;
    v26 = v2;
    v20 = v27;
    sub_1BDBFCABC();
    sub_1BDBFCA68();
    v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    *v7 = v20 & 1;
    *((_QWORD *)v7 + 1) = v19;
    *((_QWORD *)v7 + 2) = v18;
    swift_storeEnumTagMultiPayload();
    v22 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v7, v25, (uint64_t)v17);
    sub_1BDAE1658((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
    v21(v17, v8);
  }
  else
  {
    v22 = 0;
  }
  v23 = v22;
  result.value._fallbackData = v14;
  result.value._data = v13;
  result.value.super.isa = v23;
  result.is_nil = v15;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistMoveActivityEvent(forObject:fromParentObject:toParentObject:)(ICCloudSyncingObject *forObject, ICCloudSyncingObject_optional *fromParentObject, ICCloudSyncingObject_optional *toParentObject)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  ICCloudSyncingObject_optional *v15;
  objc_class *v16;
  NSData *v17;
  NSData *v18;
  Swift::Bool v19;
  objc_class *v20;
  __int128 v21;
  __int128 v22;
  ICCloudSyncingObject_optional *v23;
  ICCloudSyncingObjectActivityEvent_optional result;

  v6 = sub_1BDBFCAC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!fromParentObject)
  {
    v13 = 0uLL;
    if (toParentObject)
      goto LABEL_3;
LABEL_5:
    v15 = 0;
    v14 = 0uLL;
    goto LABEL_6;
  }
  ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)fromParentObject);
  v13 = v22;
  fromParentObject = v23;
  if (!toParentObject)
    goto LABEL_5;
LABEL_3:
  v21 = v13;
  ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)toParentObject);
  v13 = v21;
  v14 = v22;
  v15 = v23;
LABEL_6:
  *(_OWORD *)v12 = v13;
  *((_QWORD *)v12 + 2) = fromParentObject;
  *(_OWORD *)(v12 + 24) = v14;
  *((_QWORD *)v12 + 5) = v15;
  swift_storeEnumTagMultiPayload();
  sub_1BDBFCABC();
  v16 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v12, forObject, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BDAE1658((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  v20 = v16;
  result.value._fallbackData = v18;
  result.value._data = v17;
  result.value.super.isa = v20;
  result.is_nil = v19;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistCopyActivityEvent(forObject:originalObject:fromParentObject:toParentObject:)(ICCloudSyncingObject *forObject, ICCloudSyncingObject *originalObject, ICCloudSyncingObject_optional *fromParentObject, ICCloudSyncingObject_optional *toParentObject)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::Bool v16;
  ICCloudSyncingObject_optional *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  ICCloudSyncingObject_optional *v21;
  objc_class *v22;
  objc_class *v23;
  __int128 v24;
  ICCloudSyncingObject *v25;
  uint64_t v26;
  __int128 v27;
  ICCloudSyncingObject_optional *v28;
  ICCloudSyncingObjectActivityEvent_optional result;
  NotesShared::ActivityEventObject_optional v30;

  v9 = sub_1BDBFCAC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = ActivityEventObject.init(cloudSyncingObject:)(originalObject);
  v17 = v28;
  if (v28)
  {
    v25 = forObject;
    v26 = v4;
    v18 = v27;
    if (fromParentObject)
    {
      ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)fromParentObject);
      v19 = v27;
      fromParentObject = v28;
      if (toParentObject)
      {
LABEL_4:
        v24 = v19;
        ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)toParentObject);
        v19 = v24;
        v20 = v27;
        v21 = v28;
LABEL_8:
        *v15 = v18 & 1;
        *((_QWORD *)v15 + 1) = *((_QWORD *)&v18 + 1);
        *((_QWORD *)v15 + 2) = v17;
        *(_OWORD *)(v15 + 24) = v19;
        *((_QWORD *)v15 + 5) = fromParentObject;
        *((_OWORD *)v15 + 3) = v20;
        *((_QWORD *)v15 + 8) = v21;
        swift_storeEnumTagMultiPayload();
        sub_1BDBFCABC();
        v22 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v15, v25, (uint64_t)v12);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        sub_1BDAE1658((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
        goto LABEL_9;
      }
    }
    else
    {
      v19 = 0uLL;
      if (toParentObject)
        goto LABEL_4;
    }
    v21 = 0;
    v20 = 0uLL;
    goto LABEL_8;
  }
  v22 = 0;
LABEL_9:
  v23 = v22;
  result.value._fallbackData = (NSData *)v30.value.recordName._object;
  result.value._data = (NSData *)v30.value.recordName._countAndFlagsBits;
  result.value.super.isa = v23;
  result.is_nil = v16;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistRenameActivityEvent(forObject:)(ICCloudSyncingObject *forObject)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  NSData *v10;
  NSData *v11;
  Swift::Bool v12;
  objc_class *v13;
  uint64_t v14;
  ICCloudSyncingObjectActivityEvent_optional result;

  v2 = sub_1BDBFCAC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_1BDBFCABC();
  v9 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v8, forObject, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BDAE1658((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  v13 = v9;
  result.value._fallbackData = v11;
  result.value._data = v10;
  result.value.super.isa = v13;
  result.is_nil = v12;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistDeleteActivityEvent(forObject:fromParentObject:)(ICCloudSyncingObject *forObject, ICCloudSyncingObject_optional *fromParentObject)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  NSData *v9;
  NSData *v10;
  Swift::Bool v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  objc_class *v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  ICCloudSyncingObjectActivityEvent_optional result;

  v4 = sub_1BDBFCAC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v8);
  v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (fromParentObject
    && (*(NotesShared::ActivityEventObject_optional *)&(&v9)[-1] = ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)fromParentObject),
        (v14 = v20) != 0))
  {
    v15 = v19;
    *v13 = v18[8] & 1;
    *((_QWORD *)v13 + 1) = v15;
    *((_QWORD *)v13 + 2) = v14;
    swift_storeEnumTagMultiPayload();
    sub_1BDBFCABC();
    v16 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v13, forObject, (uint64_t)v7);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    sub_1BDAE1658((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  }
  else
  {
    v16 = 0;
  }
  v17 = v16;
  result.value._fallbackData = v10;
  result.value._data = v9;
  result.value.super.isa = v17;
  result.is_nil = v11;
  return result;
}

id sub_1BDBCA1A4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(id, void *))
{
  id v8;
  id v9;
  id v10;
  void *v11;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  v11 = (void *)a5(v8, a4);

  return v11;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistAddParticipantActivityEvent(forObject:participant:)(ICCloudSyncingObject *forObject, CKShareParticipant participant)
{
  objc_class *v2;
  NSData *v3;
  NSData *v4;
  Swift::Bool v5;
  ICCloudSyncingObjectActivityEvent_optional result;

  v2 = sub_1BDBCA284(forObject, participant.super.isa);
  result.value._fallbackData = v4;
  result.value._data = v3;
  result.value.super.isa = v2;
  result.is_nil = v5;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistRemoveParticipantActivityEvent(forObject:participant:)(ICCloudSyncingObject *forObject, CKShareParticipant participant)
{
  objc_class *v2;
  NSData *v3;
  NSData *v4;
  Swift::Bool v5;
  ICCloudSyncingObjectActivityEvent_optional result;

  v2 = sub_1BDBCA284(forObject, participant.super.isa);
  result.value._fallbackData = v4;
  result.value._data = v3;
  result.value.super.isa = v2;
  result.is_nil = v5;
  return result;
}

objc_class *sub_1BDBCA284(ICCloudSyncingObject *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  objc_class *v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = sub_1BDBFCAC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActivityEventParticipant.init(participant:)((CKShareParticipant)a2);
  v11 = v16;
  if (!v16)
    return 0;
  v12 = v17;
  *(_QWORD *)v10 = v15;
  *((_QWORD *)v10 + 1) = v11;
  *((_OWORD *)v10 + 1) = v12;
  swift_storeEnumTagMultiPayload();
  sub_1BDBFCABC();
  v13 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v10, a1, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BDAE1658((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  return v13;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistToggleChecklistItemActivityEvent(forObject:todo:)(ICCloudSyncingObject *forObject, ICTTTodo todo)
{
  Class isa;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  objc_class *v13;
  NSData *v14;
  NSData *v15;
  Swift::Bool v16;
  objc_class *v17;
  uint64_t v18;
  ICCloudSyncingObjectActivityEvent_optional result;

  isa = todo.super.isa;
  v4 = sub_1BDBFCAC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FFC0) + 48);
  v12 = -[objc_class uuid](isa, sel_uuid);
  sub_1BDBFCB10();

  v10[v11] = -[objc_class done](isa, sel_done);
  swift_storeEnumTagMultiPayload();
  sub_1BDBFCABC();
  v13 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v10, forObject, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BDAE1658((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  v17 = v13;
  result.value._fallbackData = v15;
  result.value._data = v14;
  result.value.super.isa = v17;
  result.is_nil = v16;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistMentionActivityEvent(forObject:mentionAttachments:)(ICCloudSyncingObject *forObject, Swift::OpaquePointer mentionAttachments)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  objc_class *v13;
  NSData *v14;
  NSData *v15;
  Swift::Bool v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  ICInlineAttachment *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  objc_class *v26;
  uint64_t v27;
  char *v28;
  ICCloudSyncingObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  ICCloudSyncingObjectActivityEvent_optional result;

  v5 = sub_1BDBFCAC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)mentionAttachments._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = (objc_class *)sub_1BDBFE574();
    v12 = (uint64_t)v13;
  }
  else
  {
    v12 = *(_QWORD *)(((unint64_t)mentionAttachments._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    v13 = (objc_class *)swift_bridgeObjectRetain();
  }
  v31 = v2;
  v32 = v5;
  v29 = forObject;
  v30 = v6;
  v27 = v9;
  v28 = v8;
  if (v12)
  {
    if (v12 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    v17 = 0;
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (((unint64_t)mentionAttachments._rawValue & 0xC000000000000001) != 0)
        v20 = (ICInlineAttachment *)MEMORY[0x1C3B79954](v17, mentionAttachments._rawValue);
      else
        v20 = (ICInlineAttachment *)*((id *)mentionAttachments._rawValue + v17 + 4);
      ActivityEventParticipant.init(mentionAttachment:)(v20);
      v21 = v35;
      if (v35)
      {
        v22 = v34;
        v33 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1BDBCBFF0(0, v18[2] + 1, 1, v18);
        v24 = v18[2];
        v23 = v18[3];
        if (v24 >= v23 >> 1)
          v18 = sub_1BDBCBFF0((_QWORD *)(v23 > 1), v24 + 1, 1, v18);
        v18[2] = v24 + 1;
        v19 = &v18[4 * v24];
        v19[4] = v22;
        v19[5] = v21;
        *((_OWORD *)v19 + 3) = v33;
      }
      ++v17;
    }
    while (v12 != v17);
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  if (v18[2])
  {
    *v11 = v18;
    swift_storeEnumTagMultiPayload();
    v25 = (uint64_t)v28;
    sub_1BDBFCABC();
    v26 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v11, v29, v25);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v25, v32);
    sub_1BDAE1658((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
  }
  else
  {
    swift_bridgeObjectRelease();
    v26 = 0;
  }
  v13 = v26;
LABEL_23:
  result.value._fallbackData = v15;
  result.value._data = v14;
  result.value.super.isa = v13;
  result.is_nil = v16;
  return result;
}

uint64_t sub_1BDBCA9D0(uint64_t a1)
{
  return sub_1BDB17D38(a1, (void (*)(_QWORD))MEMORY[0x1E0CAE1E8], MEMORY[0x1E0CAE1D8], &qword_1EF50FEA8);
}

uint64_t sub_1BDBCA9EC(uint64_t a1)
{
  return sub_1BDB17D38(a1, (void (*)(_QWORD))MEMORY[0x1E0CAE0B8], MEMORY[0x1E0CAE0A8], &qword_1EF50FEB0);
}

uint64_t static ICCloudSyncingObject.persistedActivityEvent(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  if (qword_1EF50B308 != -1)
    swift_once();
  v4 = type metadata accessor for PersistedActivityEvent();
  v5 = objc_msgSend(a1, sel_data);
  v6 = sub_1BDBFC990();
  v8 = v7;

  sub_1BDAC31B0(&qword_1EF50FFC8, (uint64_t (*)(uint64_t))type metadata accessor for PersistedActivityEvent, (uint64_t)&protocol conformance descriptor for PersistedActivityEvent);
  sub_1BDBFC378();
  sub_1BDAEB7EC(v6, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 0, 1, v4);
}

uint64_t static ICCloudSyncingObject.fallbackActivityEvent(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v3 = objc_msgSend(a1, sel_fallbackData);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BDBFC990();
    v7 = v6;

    if (qword_1EF50B308 != -1)
      swift_once();
    v8 = type metadata accessor for FallbackActivityEvent();
    sub_1BDAC31B0(&qword_1EF50FFD0, (uint64_t (*)(uint64_t))type metadata accessor for FallbackActivityEvent, (uint64_t)&protocol conformance descriptor for FallbackActivityEvent);
    sub_1BDBFC378();
    sub_1BDAEB7EC(v5, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 0, 1, v8);
  }
  else
  {
    if (qword_1ED23A718 != -1)
      swift_once();
    v9 = sub_1BDBFCE34();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED23A700);
    v10 = sub_1BDBFCE1C();
    v11 = sub_1BDBFDED8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1BD918000, v10, v11, "Cloud syncing activity event doesn't have fallback data — returning nil", v12, 2u);
      MEMORY[0x1C3B7B478](v12, -1, -1);
    }

    v13 = type metadata accessor for FallbackActivityEvent();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

id static ICCloudSyncingObject.cloudSyncingObjectActivityEvent(forData:fallback:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;

  if (qword_1EF50B300 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A6A0);
  sub_1BDBD4434();
  v4 = sub_1BDBFC3C0();
  v6 = v5;
  sub_1BDB4EB54(a1, a2);
  v7 = (void *)sub_1BDBFC978();
  if (v6 >> 60 == 15)
  {
    v8 = 0;
  }
  else
  {
    v8 = (void *)sub_1BDBFC978();
    sub_1BDB40600(v4, v6);
  }
  v9 = objc_msgSend(objc_allocWithZone((Class)ICCloudSyncingObjectActivityEvent), sel_initWithData_fallbackData_, v7, v8);
  sub_1BDAEB7EC(a1, a2);

  return v9;
}

void ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter(unint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_activityEventsDocument);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_orderedSet);

    objc_msgSend(v6, sel_removeAllObjects);
  }
  v7 = objc_msgSend(v2, sel_activityEventsDocument);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_orderedSet);

    swift_bridgeObjectRetain();
    if (a1 >> 62)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50FF48);
      sub_1BDBFE538();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BDBFE8BC();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50FF48);
    v10 = (void *)sub_1BDBFD9C8();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_addObjectsFromArray_, v10);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend(v2, sel_activityEventsDocument);
  v12 = v11;
  if (v11)
  {
    v13 = objc_msgSend(v11, sel_serialize);

    v14 = sub_1BDBFC990();
    v16 = v15;

    v12 = (void *)sub_1BDBFC978();
    sub_1BDAEB7EC(v14, v16);
  }
  objc_msgSend(v2, sel_setActivityEventsData_, v12);

  v17 = (id)sub_1BDBFD6C8();
  objc_msgSend(v2, sel_updateChangeCountWithReason_, v17);

}

void (*ICCloudSyncingObject.cloudSyncingObjectActivityEvents.modify(uint64_t *a1))(unint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
  return sub_1BDBCB434;
}

void sub_1BDBCB434(unint64_t *a1, char a2)
{
  unint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter(*a1);
  }
}

Swift::Void __swiftcall ICCloudSyncingObject.removeAllCloudSyncingObjectActivityEvents()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;

  v1 = objc_msgSend(v0, sel_activityEventsDocument);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_orderedSet);

    objc_msgSend(v3, sel_removeAllObjects);
  }
  v4 = objc_msgSend(v0, sel_activityEventsData);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BDBFC990();
    v8 = v7;

    sub_1BDAEB7EC(v6, v8);
    v9 = objc_msgSend(v0, sel_activityEventsDocument);
    v10 = v9;
    if (v9)
    {
      v11 = objc_msgSend(v9, sel_serialize);

      v12 = sub_1BDBFC990();
      v14 = v13;

      v10 = (void *)sub_1BDBFC978();
      sub_1BDAEB7EC(v12, v14);
    }
    objc_msgSend(v0, sel_setActivityEventsData_, v10);

    v15 = (id)sub_1BDBFD6C8();
    objc_msgSend(v0, sel_updateChangeCountWithReason_, v15);

  }
}

uint64_t static ICCloudSyncingObject.removeAllCloudSyncingObjectActivityEventsForUnsharedObjects(in:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t result;
  _QWORD v7[6];

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1BDBD44B0;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1BDB1D3A4;
  v7[5] = v3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1BDBC55F0;
  v7[3] = &block_descriptor_16;
  v4 = _Block_copy(v7);
  v5 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v4);
  _Block_release(v4);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1BDBCB768(uint64_t a1)
{
  void *ObjCClassFromMetadata;
  void *v3;
  void *v4;
  void *v5;
  uint64_t result;
  _QWORD aBlock[6];

  sub_1BD942914(0, (unint64_t *)&qword_1EF50DC10);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1BD942914(0, &qword_1ED23A610);
  v3 = (void *)sub_1BDBFDE9C();
  v4 = (void *)sub_1BDBFD9C8();
  aBlock[4] = sub_1BDBCB8C8;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDB838A4;
  aBlock[3] = &block_descriptor_34;
  v5 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel_ic_enumerateObjectsMatchingPredicate_sortDescriptors_relationshipKeyPathsForPrefetching_context_batchSize_saveAfterBatch_usingBlock_, v3, 0, v4, a1, 16, 0, v5);

  _Block_release(v5);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  return result;
}

void sub_1BDBCB8C8(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = a1;
    if ((objc_msgSend(v3, sel_isSharedViaICloud) & 1) == 0)
      objc_msgSend(v3, sel_objc_removeAllCloudSyncingObjectActivityEvents);

  }
}

_QWORD *sub_1BDBCBA80(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510008);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BDBD31D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBCBBA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BDBCBDE4(a1, a2, a3, a4, &qword_1EF50D2F8, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
}

_QWORD *sub_1BDBCBBB8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50FEC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BDBD32DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BDBCBCC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BBD8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BDBD2D54(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBCBDD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BDBCBDE4(a1, a2, a3, a4, (uint64_t *)&unk_1EF5100D0, type metadata accessor for NoteEditActivityEvent);
}

uint64_t sub_1BDBCBDE4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1BDBFE520();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BDBD3B98(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1BDBCBFF0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50B948);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BDBD33E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BDBCC0FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50FCD0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BDBD3A8C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BDBCC21C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BDBCC230(a1, a2, a3, a4, &qword_1EF50CD00, (uint64_t *)&unk_1EF50FFF0);
}

_QWORD *sub_1BDBCC230(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BDBD34D4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBCC35C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BDBCBDE4(a1, a2, a3, a4, &qword_1EF510100, type metadata accessor for TranscriptViewModelSegment);
}

_QWORD *sub_1BDBCC370(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BDBCC5C4(a1, a2, a3, a4, &qword_1ED23A640, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1BDBD38B4);
}

_QWORD *sub_1BDBCC384(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D2B8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BDBD35DC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BDBCC490(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510028);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1BDBD36C4(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBCC59C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BDBCBDE4(a1, a2, a3, a4, &qword_1EF50D268, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

_QWORD *sub_1BDBCC5B0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BDBCC5C4(a1, a2, a3, a4, (uint64_t *)&unk_1EF5100B0, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1BDBD37AC);
}

_QWORD *sub_1BDBCC5C4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBCC6D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BDBCBDE4(a1, a2, a3, a4, (uint64_t *)&unk_1EF5100A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

_QWORD *sub_1BDBCC6EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510098);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BDBD35DC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBCC7F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BDBCCA4C(a1, a2, a3, a4, &qword_1EF50E578, &qword_1EF510090);
}

uint64_t sub_1BDBCC80C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BDBCBDE4(a1, a2, a3, a4, &qword_1EF510088, type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection);
}

uint64_t sub_1BDBCC820(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BDBCBDE4(a1, a2, a3, a4, &qword_1EF510078, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD1100]);
}

_QWORD *sub_1BDBCC834(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED239CF0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BDBD39A4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BDBCC940(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510020);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BDBD39A4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDBCCA4C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1BDBFE520();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BDBD3CB0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

id sub_1BDBCCC58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5100F8);
  v2 = *v0;
  v3 = sub_1BDBFE580();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BDBCCE08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  const void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = sub_1BDBFCB40();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5B8);
  v32 = v0;
  v3 = *v0;
  v4 = sub_1BDBFE580();
  v5 = *(_QWORD *)(v3 + 16);
  v38 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v30 = v38;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v34, 8 * v8);
    v6 = v38;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v37 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v35;
  v14 = v36;
  v16 = v38;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v10 + 1;
    v19 = v37;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v26);
    ++v10;
    if (!v27)
    {
      v10 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *((_QWORD *)v34 + v10);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 16 * v18;
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v38;
    goto LABEL_28;
  }
  v27 = *((_QWORD *)v34 + v28);
  if (v27)
  {
    v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v10);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDBCD078()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF50BFA8);
  v2 = *v0;
  v3 = sub_1BDBFE580();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 32 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v25 = v21[2];
    v24 = v21[3];
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v18;
    v26[1] = v19;
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v27 = v22;
    v27[1] = v23;
    v27[2] = v25;
    v27[3] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BDBCD24C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510080);
  v2 = *v0;
  v3 = sub_1BDBFE580();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1BDAE0BA0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1BD942258(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDBCD430()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5100F0);
  v2 = *v0;
  v3 = sub_1BDBFE580();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BDBCD5E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CCA0);
  v5 = *v0;
  v6 = sub_1BDBFE580();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_1BDAE1544(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for NoteEditActivityEvent.Parents);
    v19 = 8 * v17;
    v20 = *(void **)(*(_QWORD *)(v5 + 56) + v19);
    sub_1BDAFE158((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for NoteEditActivityEvent.Parents);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (id)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDBCD81C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;
  _BYTE v26[40];

  v1 = v0;
  v2 = sub_1BDBFC948();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE98);
  v6 = *v0;
  v7 = sub_1BDBFE580();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v23 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v24 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v25 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v25)
      goto LABEL_26;
    v21 = *(_QWORD *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v25)
        goto LABEL_26;
      v21 = *(_QWORD *)(v24 + 8 * v12);
      if (!v21)
        break;
    }
LABEL_25:
    v15 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v2);
    v19 = 40 * v17;
    sub_1BDB157E4(*(_QWORD *)(v6 + 56) + v19, (uint64_t)v26, &qword_1ED23AEA0);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v2);
    result = (void *)sub_1BDB35FB0((uint64_t)v26, *(_QWORD *)(v8 + 56) + v19, &qword_1ED23AEA0);
  }
  v22 = v20 + 2;
  if (v22 >= v25)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v23;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v25)
      goto LABEL_26;
    v21 = *(_QWORD *)(v24 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDBCDA74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1BDBFC948();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE90);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1BDBFE580();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BDBCDCA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = sub_1BDBFCB40();
  v1 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC10);
  v33 = v0;
  v3 = *v0;
  v4 = sub_1BDBFE580();
  v5 = *(_QWORD *)(v3 + 16);
  v39 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v31 = v39;
    v30 = v33;
LABEL_28:
    *v30 = v31;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    v6 = v39;
  }
  v34 = v3 + 64;
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v38 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v15 = v36;
  v14 = v37;
  v16 = v39;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v38;
      goto LABEL_12;
    }
    v27 = v10 + 1;
    v19 = v38;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      v10 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_26;
      v28 = *(_QWORD *)(v34 + 8 * v10);
      if (!v28)
        break;
    }
LABEL_25:
    v13 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = *(_QWORD *)(v19 + 56);
    v22 = 16 * v18;
    v23 = (uint64_t *)(v21 + 16 * v18);
    v24 = *v23;
    v25 = v23[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v26 = (uint64_t *)(*(_QWORD *)(v16 + 56) + v22);
    *v26 = v24;
    v26[1] = v25;
    result = (void *)sub_1BDB4EB54(v24, v25);
  }
  v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_26:
    result = (void *)swift_release();
    v30 = v33;
    v31 = v39;
    goto LABEL_28;
  }
  v28 = *(_QWORD *)(v34 + 8 * v29);
  if (v28)
  {
    v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDBCDF18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for PersistedActivityEvent();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510050);
  v5 = *v0;
  v6 = sub_1BDBFE580();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_1BDAE1544(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_1BDAFE158((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDBCE15C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5100F8);
  v38 = a2;
  v6 = sub_1BDBFE58C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1BDBFEA0C();
    sub_1BDBFD794();
    result = sub_1BDBFEA30();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BDBCE468(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;
  uint64_t v45;

  v3 = v2;
  v5 = sub_1BDBFCB40();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D5B8);
  v44 = a2;
  v9 = sub_1BDBFE58C();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = v2;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_34;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v41)
              goto LABEL_34;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v45 + 72);
    v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v7, v27, v5);
      v28 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v28;
      v29 = v28[1];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, v27, v5);
      v31 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v31;
      v29 = v31[1];
      swift_bridgeObjectRetain();
    }
    sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1BDBFD614();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v18, v7, v5);
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v18);
    *v19 = v30;
    v19[1] = v29;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BDBCE814(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF50BFA8);
  v40 = a2;
  v6 = sub_1BDBFE58C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 32 * v21);
      v33 = *v32;
      v34 = v32[1];
      v35 = v32[3];
      v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BDBFEA0C();
      sub_1BDBFD794();
      result = sub_1BDBFEA30();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v17);
      *v19 = v33;
      v19[1] = v34;
      v19[2] = v41;
      v19[3] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BDBCEB3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510080);
  v6 = sub_1BDBFE58C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1BD942258(v24, v35);
      }
      else
      {
        sub_1BDAE0BA0((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1BDBFEA0C();
      sub_1BDBFD794();
      result = sub_1BDBFEA30();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1BD942258(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BDBCEE38(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5100F0);
  v42 = a2;
  v6 = sub_1BDBFE58C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BDBFEA0C();
    sub_1BDBFD794();
    result = sub_1BDBFEA30();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BDBCF15C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  int EnumCaseMultiPayload;
  void *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  int64_t v59;
  _QWORD *v60;
  void **v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  int v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;

  v3 = v2;
  v5 = sub_1BDBFCB40();
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v65 = (char *)&v57 - v8;
  v9 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (void **)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v57 - v14;
  v15 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF50CCA0);
  v70 = a2;
  v16 = sub_1BDBFE58C();
  v17 = v16;
  if (*(_QWORD *)(v15 + 16))
  {
    v58 = v2;
    v18 = 1 << *(_BYTE *)(v15 + 32);
    v19 = *(_QWORD *)(v15 + 64);
    v60 = (_QWORD *)(v15 + 64);
    if (v18 < 64)
      v20 = ~(-1 << v18);
    else
      v20 = -1;
    v21 = v20 & v19;
    v59 = (unint64_t)(v18 + 63) >> 6;
    v22 = v16 + 64;
    result = swift_retain();
    v24 = 0;
    v25 = type metadata accessor for NoteEditActivityEvent.Parents;
    v26 = (uint64_t)v69;
    v63 = v9;
    v64 = v17;
    v62 = v10;
    v61 = v13;
    while (1)
    {
      if (v21)
      {
        v73 = (v21 - 1) & v21;
        v29 = __clz(__rbit64(v21)) | (v24 << 6);
      }
      else
      {
        v30 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v30 >= v59)
          goto LABEL_37;
        v31 = v60[v30];
        ++v24;
        if (!v31)
        {
          v24 = v30 + 1;
          if (v30 + 1 >= v59)
            goto LABEL_37;
          v31 = v60[v24];
          if (!v31)
          {
            v32 = v30 + 2;
            if (v32 >= v59)
            {
LABEL_37:
              swift_release();
              v3 = v58;
              if ((v70 & 1) != 0)
              {
                v56 = 1 << *(_BYTE *)(v15 + 32);
                if (v56 >= 64)
                  bzero(v60, ((unint64_t)(v56 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v60 = -1 << v56;
                *(_QWORD *)(v15 + 16) = 0;
              }
              break;
            }
            v31 = v60[v32];
            if (!v31)
            {
              while (1)
              {
                v24 = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_44;
                if (v24 >= v59)
                  goto LABEL_37;
                v31 = v60[v24];
                ++v32;
                if (v31)
                  goto LABEL_21;
              }
            }
            v24 = v32;
          }
        }
LABEL_21:
        v73 = (v31 - 1) & v31;
        v29 = __clz(__rbit64(v31)) + (v24 << 6);
      }
      v33 = *(_QWORD *)(v10 + 72);
      v34 = *(_QWORD *)(v15 + 48) + v33 * v29;
      v74 = v24;
      v72 = v33;
      if ((v70 & 1) != 0)
      {
        sub_1BDAFE158(v34, v26, v25);
        v71 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v29);
      }
      else
      {
        sub_1BDAE1544(v34, v26, v25);
        v71 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v29);
      }
      sub_1BDBFEA0C();
      v35 = v25;
      sub_1BDAE1544(v26, (uint64_t)v13, v25);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v37 = *v13;
      if (EnumCaseMultiPayload == 1)
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5100E0);
        v39 = (char *)v13 + *(int *)(v38 + 48);
        v40 = (char *)v13 + *(int *)(v38 + 64);
        v41 = v67;
        v42 = v68;
        v43 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
        v44 = v65;
        v43(v65, v39, v68);
        v45 = v66;
        v43(v66, v40, v42);
        sub_1BDBFEA18();
        sub_1BDBFE07C();
        sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        sub_1BDBFD620();
        v13 = v61;
        sub_1BDBFD620();

        v46 = *(void (**)(char *, uint64_t))(v41 + 8);
        v26 = (uint64_t)v69;
        v47 = v45;
        v10 = v62;
        v46(v47, v42);
        v48 = v42;
        v17 = v64;
        v46(v44, v48);
      }
      else
      {
        sub_1BDBFEA18();
        sub_1BDBFE07C();

      }
      v25 = v35;
      result = sub_1BDBFEA30();
      v49 = -1 << *(_BYTE *)(v17 + 32);
      v50 = result & ~v49;
      v51 = v50 >> 6;
      if (((-1 << v50) & ~*(_QWORD *)(v22 + 8 * (v50 >> 6))) != 0)
      {
        v27 = __clz(__rbit64((-1 << v50) & ~*(_QWORD *)(v22 + 8 * (v50 >> 6)))) | v50 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v52 = 0;
        v53 = (unint64_t)(63 - v49) >> 6;
        do
        {
          if (++v51 == v53 && (v52 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v54 = v51 == v53;
          if (v51 == v53)
            v51 = 0;
          v52 |= v54;
          v55 = *(_QWORD *)(v22 + 8 * v51);
        }
        while (v55 == -1);
        v27 = __clz(__rbit64(~v55)) + (v51 << 6);
      }
      v28 = v72;
      *(_QWORD *)(v22 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      result = sub_1BDAFE158(v26, *(_QWORD *)(v17 + 48) + v28 * v27, v35);
      *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v27) = v71;
      ++*(_QWORD *)(v17 + 16);
      v21 = v73;
      v24 = v74;
    }
  }
  result = swift_release();
  *v3 = v17;
  return result;
}

uint64_t sub_1BDBCF6B0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  int v41;
  _BYTE v42[40];

  v3 = v2;
  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE98);
  v41 = a2;
  v10 = sub_1BDBFE58C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    v28 = 40 * v21;
    if ((v41 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_1BDB35FB0(*(_QWORD *)(v9 + 56) + v28, (uint64_t)v42, &qword_1ED23AEA0);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_1BDB157E4(*(_QWORD *)(v9 + 56) + v28, (uint64_t)v42, &qword_1ED23AEA0);
    }
    sub_1BDAC31B0(&qword_1ED23ACF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    result = sub_1BDBFD614();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_1BDB35FB0((uint64_t)v42, *(_QWORD *)(v11 + 56) + 40 * v19, &qword_1ED23AEA0);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v41 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BDBCFA70(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1BDBFC948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23AE90);
  v42 = a2;
  v10 = sub_1BDBFE58C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_1BDAC31B0(&qword_1ED23ACF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    result = sub_1BDBFD614();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BDBCFE04(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t i;
  int v47;

  v3 = v2;
  v5 = sub_1BDBFCB40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50CC10);
  v47 = a2;
  v10 = sub_1BDBFE58C();
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v42 = v2;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 64);
    v44 = (_QWORD *)(v9 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v43 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    v45 = v6;
    for (i = v9; ; v9 = i)
    {
      if (v15)
      {
        v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v23 = v22 | (v18 << 6);
      }
      else
      {
        v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v43)
          goto LABEL_34;
        v25 = v44[v24];
        ++v18;
        if (!v25)
        {
          v18 = v24 + 1;
          if (v24 + 1 >= v43)
            goto LABEL_34;
          v25 = v44[v18];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v43)
            {
LABEL_34:
              swift_release();
              v3 = v42;
              if ((v47 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v9 + 32);
                if (v41 >= 64)
                  bzero(v44, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v44 = -1 << v41;
                *(_QWORD *)(v9 + 16) = 0;
              }
              break;
            }
            v25 = v44[v26];
            if (!v25)
            {
              while (1)
              {
                v18 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v18 >= v43)
                  goto LABEL_34;
                v25 = v44[v18];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v18 = v26;
          }
        }
LABEL_21:
        v15 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v18 << 6);
      }
      v27 = v6;
      v28 = *(_QWORD *)(v6 + 72);
      v29 = *(_QWORD *)(v9 + 48) + v28 * v23;
      if ((v47 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 32))(v8, v29, v5);
        v30 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v23);
        v31 = *v30;
        v32 = v30[1];
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v8, v29, v5);
        v33 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v23);
        v31 = *v33;
        v32 = v33[1];
        sub_1BDB4EB54(*v33, v32);
      }
      sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      result = sub_1BDBFD614();
      v34 = -1 << *(_BYTE *)(v11 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v16 + 8 * v36);
        }
        while (v40 == -1);
        v19 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = *(_QWORD *)(v11 + 48) + v28 * v19;
      v6 = v45;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(v20, v8, v5);
      v21 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 16 * v19);
      *v21 = v31;
      v21[1] = v32;
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BDBD019C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for PersistedActivityEvent();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510050);
  v43 = a2;
  v9 = sub_1BDBFE58C();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_1BDAFE158(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    }
    else
    {
      sub_1BDAE1544(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
      swift_bridgeObjectRetain();
    }
    sub_1BDBFEA0C();
    sub_1BDBFD794();
    result = sub_1BDBFEA30();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_1BDAFE158((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BDBD051C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BDBD075C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ICTTAudioRecording.Fragment, (unint64_t *)&unk_1EF510160, &qword_1EF510158, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BDAC745C);
}

uint64_t sub_1BDBD0540(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BDAE0C94((unint64_t *)&unk_1EF510140, &qword_1EF510138, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510138);
          v12 = sub_1BDAC745C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BD942914(0, (unint64_t *)&qword_1EF510130);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD075C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  id *v23;
  id v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_1BDAE0C94(a5, a6, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD096C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BDAE0C94(&qword_1EF5100C8, &qword_1EF5100C0, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5100C0);
          v12 = sub_1BDAC745C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BD942914(0, &qword_1EF50DB20);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD0B88(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  char *v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t (*v70)(uint64_t);
  BOOL v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t result;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(char *, char *);
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;

  v95 = a5;
  v96 = a7;
  v94 = a6;
  v11 = sub_1BDBFCAC8();
  v92 = *(_QWORD *)(v11 - 8);
  v93 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v88 = (char *)&v81 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v81 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v81 - v20;
  v91 = type metadata accessor for NoteEditActivityEvent(0);
  v22 = MEMORY[0x1E0C80A78](v91);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v81 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v26);
  v31 = *(_QWORD *)(v30 + 72);
  if (!v31)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v31 == -1)
    goto LABEL_70;
  v32 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v31 == -1)
    goto LABEL_71;
  v33 = (uint64_t)(a2 - a1) / v31;
  v101 = a1;
  v100 = a4;
  v34 = v32 / v31;
  if (v33 >= v32 / v31)
  {
    v87 = v14;
    if (v34 < 0)
      goto LABEL_72;
    v36 = v34 * v31;
    v37 = v88;
    v86 = v28;
    if (a4 < a2 || a2 + v36 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v52 = a4 + v36;
    v99 = a4 + v36;
    v101 = a2;
    if (v36 < 1 || a1 >= a2)
      goto LABEL_46;
    v54 = -v31;
    v55 = type metadata accessor for NoteEditActivityEvent;
    v56 = v87;
    v83 = a1;
    v84 = a4;
    while (1)
    {
      sub_1BDAE1544(v52 + v54, (uint64_t)v25, v55);
      v57 = a2 + v54;
      v89 = a2 + v54;
      v90 = a2;
      v58 = v86;
      sub_1BDAE1544(v57, v86, v55);
      v59 = v55;
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      v60 = (uint64_t)v25;
      v61 = v98;
      v62 = v95(v37, v56);
      v98 = v61;
      if (v61)
      {
        v78 = v93;
        v79 = *(void (**)(char *, uint64_t))(v92 + 8);
        v79(v56, v93);
        v79(v37, v78);
        v77 = v58;
        v41 = (uint64_t)v25;
        goto LABEL_67;
      }
      v63 = v62;
      v97 = a3 + v54;
      v64 = v56;
      v65 = a3;
      v66 = *(void (**)(char *, uint64_t))(v92 + 8);
      v67 = v54;
      v68 = v93;
      v66(v64, v93);
      v66(v37, v68);
      sub_1BDAE1658(v58, v59);
      v69 = (char *)v60;
      v70 = v59;
      sub_1BDAE1658(v60, v59);
      if ((v63 & 1) != 0)
        break;
      v73 = v99;
      v99 += v67;
      v72 = v90;
      v54 = v67;
      if (v65 >= v73 && v97 < v73)
      {
        v55 = v70;
        if (v65 != v73)
          swift_arrayInitWithTakeBackToFront();
        v74 = v84;
        v56 = v87;
        goto LABEL_60;
      }
      swift_arrayInitWithTakeFrontToBack();
      v74 = v84;
      v56 = v87;
      v25 = v69;
      v55 = v70;
LABEL_62:
      v52 = v99;
      if (v99 > v74)
      {
        a2 = v72;
        a3 = v97;
        v37 = v88;
        if (v72 > v83)
          continue;
      }
      goto LABEL_46;
    }
    if (v65 < v90 || v97 >= v90)
    {
      v72 = v89;
      swift_arrayInitWithTakeFrontToBack();
      v56 = v87;
      v54 = v67;
      v55 = v70;
    }
    else
    {
      v71 = v65 == v90;
      v56 = v87;
      v54 = v67;
      v55 = v59;
      v72 = v89;
      if (!v71)
        swift_arrayInitWithTakeBackToFront();
    }
    v101 += v54;
    v74 = v84;
LABEL_60:
    v25 = v69;
    goto LABEL_62;
  }
  if ((v33 & 0x8000000000000000) == 0)
  {
    v35 = v33 * v31;
    v97 = v29;
    v90 = (unint64_t)&v81 - v27;
    if (a4 < a1 || a1 + v35 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v89 = a4 + v35;
    v99 = a4 + v35;
    if (v35 >= 1 && a2 < a3)
    {
      v82 = a3;
      v85 = v31;
      v87 = v21;
      while (1)
      {
        v39 = a2;
        v40 = a2;
        v41 = v90;
        sub_1BDAE1544(v40, v90, type metadata accessor for NoteEditActivityEvent);
        v42 = v97;
        sub_1BDAE1544(a4, v97, type metadata accessor for NoteEditActivityEvent);
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        v43 = v98;
        v44 = v95(v21, v19);
        if (v43)
          break;
        v45 = v44;
        v98 = 0;
        v46 = *(void (**)(char *, uint64_t))(v92 + 8);
        v47 = v93;
        v46(v19, v93);
        v46(v21, v47);
        sub_1BDAE1658(v42, type metadata accessor for NoteEditActivityEvent);
        sub_1BDAE1658(v41, type metadata accessor for NoteEditActivityEvent);
        v48 = v101;
        if ((v45 & 1) != 0)
        {
          v49 = v85;
          v50 = v39 + v85;
          if (v101 < v39 || v101 >= v50)
          {
            swift_arrayInitWithTakeFrontToBack();
            v21 = v87;
          }
          else
          {
            v21 = v87;
            if (v101 == v39)
              v48 = v39;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v49 = v85;
          v51 = v100 + v85;
          if (v101 < v100 || v101 >= v51)
          {
            swift_arrayInitWithTakeFrontToBack();
            v21 = v87;
          }
          else
          {
            v21 = v87;
            if (v101 != v100)
              swift_arrayInitWithTakeBackToFront();
          }
          v100 = v51;
          v50 = v39;
        }
        v101 = v48 + v49;
        a4 = v100;
        if (v100 < v89)
        {
          a2 = v50;
          if (v50 < v82)
            continue;
        }
        goto LABEL_46;
      }
      v75 = v93;
      v76 = *(void (**)(char *, uint64_t))(v92 + 8);
      v76(v19, v93);
      v76(v21, v75);
      v77 = v42;
LABEL_67:
      sub_1BDAE1658(v77, type metadata accessor for NoteEditActivityEvent);
      sub_1BDAE1658(v41, type metadata accessor for NoteEditActivityEvent);
      sub_1BDBBCD50(&v101, &v100, (uint64_t *)&v99);
      return 1;
    }
LABEL_46:
    sub_1BDBBCD50(&v101, &v100, (uint64_t *)&v99);
    return 1;
  }
LABEL_72:
  swift_release();
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD12E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(uint64_t);
  char v39;
  char v40;
  char *v41;
  uint64_t *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, char *);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;

  v8 = v7;
  v69 = a5;
  v70 = a7;
  v68 = a6;
  v75 = a4;
  v12 = sub_1BDBFCAC8();
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v55 - v16;
  v57 = type metadata accessor for NoteEditActivityEvent(0);
  v18 = MEMORY[0x1E0C80A78](v57);
  v62 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  result = MEMORY[0x1E0C80A78](v20);
  v56 = a2;
  if (a3 != a2)
  {
    v60 = (uint64_t)&v55 - v23;
    v61 = v17;
    v25 = *(_QWORD *)(v22 + 72);
    v26 = v25 * (a3 - 1);
    v59 = v25;
    v27 = v25 * a3;
    v28 = type metadata accessor for NoteEditActivityEvent;
    v29 = v24;
    v55 = a1;
    v58 = v15;
    while (2)
    {
      v30 = 0;
      v63 = a3;
      v64 = v27;
      v65 = v26;
      while (1)
      {
        v74 = a1;
        v32 = *v75;
        v73 = v27 + v30;
        v33 = v27 + v30 + v32;
        v34 = v60;
        v35 = v30;
        sub_1BDAE1544(v33, v60, v28);
        v76 = v35;
        v72 = v26 + v35;
        sub_1BDAE1544(v26 + v35 + v32, v29, v28);
        v36 = v29;
        v37 = v61;
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        v38 = v28;
        v39 = v69(v37, v15);
        if (v8)
        {
          v52 = *(void (**)(char *, uint64_t))(v66 + 8);
          v53 = v15;
          v54 = v67;
          v52(v53, v67);
          v52(v37, v54);
          sub_1BDAE1658(v36, type metadata accessor for NoteEditActivityEvent);
          return sub_1BDAE1658(v34, type metadata accessor for NoteEditActivityEvent);
        }
        v40 = v39;
        v41 = v62;
        v71 = 0;
        v42 = v75;
        v43 = *(void (**)(char *, uint64_t))(v66 + 8);
        v44 = v15;
        v45 = v67;
        v43(v44, v67);
        v43(v37, v45);
        sub_1BDAE1658(v36, v38);
        v46 = v34;
        v47 = v38;
        result = sub_1BDAE1658(v46, v38);
        v29 = v36;
        if ((v40 & 1) == 0)
          break;
        v48 = *v42;
        v27 = v64;
        v26 = v65;
        if (!*v42)
        {
          __break(1u);
          return result;
        }
        v49 = v48 + v65 + v76;
        v50 = (uint64_t)v41;
        v51 = (uint64_t)v41;
        v28 = v47;
        sub_1BDAFE158(v48 + v64 + v76, v51, v47);
        v8 = v71;
        swift_arrayInitWithTakeFrontToBack();
        result = sub_1BDAFE158(v50, v49, v47);
        v15 = v58;
        v30 = v76 - v59;
        a1 = v74 + 1;
        v31 = v63;
        if (v63 == v74 + 1)
          goto LABEL_10;
      }
      v8 = v71;
      v31 = v63;
      v27 = v64;
      v15 = v58;
      v26 = v65;
      v28 = v47;
LABEL_10:
      a3 = v31 + 1;
      v26 += v59;
      v27 += v59;
      a1 = v55;
      if (a3 != v56)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1BDBD165C(uint64_t *a1, uint64_t (*a2)(char *, char *), uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  int v68;
  int v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  unint64_t v155;
  char v156;
  char v157;
  void (*v158)(char *, uint64_t);
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  unint64_t v174;
  void (*v175)(char *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t);
  uint64_t result;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(char *, uint64_t);
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t (*v216)(char *, char *);
  uint64_t v217;
  uint64_t v218;

  v5 = v4;
  v216 = a2;
  v217 = a3;
  v210 = sub_1BDBFCAC8();
  v205 = *(_QWORD *)(v210 - 8);
  v8 = MEMORY[0x1E0C80A78](v210);
  v10 = (char *)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v183 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v183 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v183 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v183 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v183 - v23;
  v203 = type metadata accessor for NoteEditActivityEvent(0);
  v213 = *(_QWORD *)(v203 - 8);
  v25 = MEMORY[0x1E0C80A78](v203);
  v204 = (uint64_t)&v183 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v209 = (uint64_t)&v183 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v190 = (char *)&v183 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v189 = (char *)&v183 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v192 = (char *)&v183 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v191 = (char *)&v183 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v194 = (uint64_t)&v183 - v38;
  MEMORY[0x1E0C80A78](v37);
  v193 = (uint64_t)&v183 - v39;
  v215 = (unint64_t)a1;
  v40 = a1[1];
  swift_retain_n();
  v41 = sub_1BDBFE748();
  if (v41 >= v40)
  {
    if (v40 < 0)
      goto LABEL_152;
    if (v40)
    {
      swift_retain();
      sub_1BDBD12E8(0, v40, 1, (uint64_t *)v215, v216, v217, a4);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    return swift_release_n();
  }
  v187 = v41;
  if (v40 >= 0)
    v42 = v40;
  else
    v42 = v40 + 1;
  if (v40 < -1)
    goto LABEL_161;
  v218 = a4;
  if (v40 < 2)
  {
    v212 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v213 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v213 + 80));
    v188 = MEMORY[0x1E0DEE9D8];
    if (v40 != 1)
    {
      v47 = (char *)MEMORY[0x1E0DEE9D8];
      v84 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_113:
      if (v84 >= 2)
      {
        v163 = *(_QWORD *)v215;
        v214 = *(_QWORD *)v215;
        while (v84 >= 2)
        {
          if (!v163)
            goto LABEL_160;
          v164 = v47;
          v165 = v47 + 32;
          v215 = v84 - 2;
          v166 = *(_QWORD *)&v47[16 * v84];
          v167 = *(_QWORD *)&v47[16 * v84 + 24];
          v168 = *(_QWORD *)(v213 + 72);
          v169 = v163 + v168 * v166;
          v170 = v163 + v168 * *(_QWORD *)&v165[16 * v84 - 16];
          v171 = v163 + v168 * v167;
          v172 = v218;
          swift_retain();
          sub_1BDBD0B88(v169, v170, v171, v212, v216, v217, v172);
          if (v5)
            goto LABEL_111;
          swift_release();
          if (v167 < v166)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v164 = sub_1BDBBCF04((uint64_t)v164);
          if (v215 >= *((_QWORD *)v164 + 2))
            goto LABEL_149;
          v173 = &v164[16 * v215 + 32];
          *(_QWORD *)v173 = v166;
          *((_QWORD *)v173 + 1) = v167;
          v174 = *((_QWORD *)v164 + 2);
          if (v84 > v174)
            goto LABEL_150;
          v47 = v164;
          memmove(&v164[16 * v84 + 16], &v164[16 * v84 + 32], 16 * (v174 - v84));
          *((_QWORD *)v164 + 2) = v174 - 1;
          v84 = v174 - 1;
          v5 = 0;
          v163 = v214;
          if (v174 <= 2)
            goto LABEL_124;
        }
        goto LABEL_147;
      }
LABEL_124:
      swift_bridgeObjectRelease();
      goto LABEL_128;
    }
    v184 = v24;
    v185 = v22;
    v196 = v19;
    v197 = v16;
    v201 = v13;
    v202 = v10;
  }
  else
  {
    v184 = v24;
    v185 = v22;
    v196 = v19;
    v197 = v16;
    v201 = v13;
    v202 = v10;
    v43 = v42 >> 1;
    v44 = sub_1BDBFDA4C();
    *(_QWORD *)(v44 + 16) = v43;
    v45 = *(unsigned __int8 *)(v213 + 80);
    v188 = v44;
    v212 = v44 + ((v45 + 32) & ~v45);
  }
  v46 = 0;
  v47 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_14:
  v48 = v46;
  v49 = v46 + 1;
  if (v46 + 1 >= v40)
  {
    v59 = v46 + 1;
    goto LABEL_48;
  }
  v207 = v40;
  v211 = v47;
  v50 = *(_QWORD *)v215;
  v51 = *(char **)(v213 + 72);
  v52 = v193;
  sub_1BDAE1544(*(_QWORD *)v215 + (_QWORD)v51 * v49, v193, type metadata accessor for NoteEditActivityEvent);
  v195 = v50;
  v208 = v51;
  v53 = v194;
  sub_1BDAE1544(v50 + (_QWORD)v51 * v48, v194, type metadata accessor for NoteEditActivityEvent);
  v54 = v184;
  swift_getAtKeyPath();
  v55 = v48;
  v56 = v185;
  swift_getAtKeyPath();
  LODWORD(v206) = v216(v54, v56);
  if (v5)
  {
    v181 = *(void (**)(char *, uint64_t))(v205 + 8);
    v182 = v210;
    v181(v56, v210);
    v181(v54, v182);
    sub_1BDAE1658(v53, type metadata accessor for NoteEditActivityEvent);
    sub_1BDAE1658(v52, type metadata accessor for NoteEditActivityEvent);
    swift_bridgeObjectRelease();
    goto LABEL_128;
  }
  v57 = *(void (**)(char *, uint64_t))(v205 + 8);
  v58 = v210;
  v57(v56, v210);
  v200 = v57;
  v57(v54, v58);
  sub_1BDAE1658(v53, type metadata accessor for NoteEditActivityEvent);
  sub_1BDAE1658(v52, type metadata accessor for NoteEditActivityEvent);
  v59 = v55 + 2;
  v60 = v207;
  v48 = v55;
  if (v55 + 2 >= v207)
    goto LABEL_24;
  v186 = v55;
  v214 = 0;
  v199 = (_QWORD)v208 * v49;
  v61 = v195;
  v198 = (_QWORD)v208 * v59;
  v62 = (uint64_t)v192;
  v63 = (uint64_t)v191;
  while (1)
  {
    v64 = v59;
    sub_1BDAE1544(v61 + v198, v63, type metadata accessor for NoteEditActivityEvent);
    sub_1BDAE1544(v61 + v199, v62, type metadata accessor for NoteEditActivityEvent);
    v65 = v196;
    swift_getAtKeyPath();
    v66 = v197;
    swift_getAtKeyPath();
    v67 = v214;
    v68 = v216(v65, v66);
    v214 = v67;
    if (v67)
    {
      v178 = v210;
      v179 = v200;
      v200(v66, v210);
      v179(v65, v178);
      sub_1BDAE1658(v62, type metadata accessor for NoteEditActivityEvent);
      v177 = v63;
      goto LABEL_127;
    }
    v69 = v68;
    v70 = v66;
    v71 = v210;
    v72 = v200;
    v200(v70, v210);
    v72(v65, v71);
    sub_1BDAE1658(v62, type metadata accessor for NoteEditActivityEvent);
    sub_1BDAE1658(v63, type metadata accessor for NoteEditActivityEvent);
    if (((v206 ^ v69) & 1) != 0)
      break;
    v59 = v64 + 1;
    v60 = v207;
    v61 += (uint64_t)v208;
    if (v207 == v64 + 1)
    {
      v59 = v207;
      v5 = v214;
      v48 = v186;
      goto LABEL_24;
    }
  }
  v5 = v214;
  v59 = v64;
  v48 = v186;
  v60 = v207;
LABEL_24:
  if ((v206 & 1) == 0)
    goto LABEL_37;
  if (v59 < v48)
    goto LABEL_156;
  if (v48 >= v59)
  {
LABEL_37:
    v47 = v211;
    if (v59 < v60)
      goto LABEL_40;
LABEL_48:
    if (v59 < v48)
      goto LABEL_151;
    goto LABEL_49;
  }
  v214 = v5;
  v73 = 0;
  v74 = (_QWORD)v208 * (v59 - 1);
  v75 = v59 * (_QWORD)v208;
  v76 = v48;
  v186 = v48;
  v77 = v48 * (_QWORD)v208;
  do
  {
    if (v76 != v59 + v73 - 1)
    {
      v78 = v195;
      if (!v195)
        goto LABEL_159;
      v79 = v195 + v77;
      sub_1BDAFE158(v195 + v77, v204, type metadata accessor for NoteEditActivityEvent);
      if (v77 < v74 || v79 >= v78 + v75)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v77 != v74)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      sub_1BDAFE158(v204, v78 + v74, type metadata accessor for NoteEditActivityEvent);
    }
    ++v76;
    --v73;
    v74 -= (uint64_t)v208;
    v75 -= (uint64_t)v208;
    v77 += (uint64_t)v208;
  }
  while (v76 < v59 + v73);
  v5 = v214;
  v47 = v211;
  v48 = v186;
  v60 = v207;
  if (v59 >= v207)
    goto LABEL_48;
LABEL_40:
  if (__OFSUB__(v59, v48))
    goto LABEL_153;
  if (v59 - v48 >= v187)
    goto LABEL_48;
  if (__OFADD__(v48, v187))
    goto LABEL_154;
  if (v48 + v187 >= v60)
    v80 = v60;
  else
    v80 = v48 + v187;
  if (v80 >= v48)
  {
    if (v59 == v80)
      goto LABEL_48;
    v186 = v48;
    v211 = v47;
    v214 = v5;
    v142 = *(_QWORD *)(v213 + 72);
    v143 = v142 * (v59 - 1);
    v198 = v142;
    v144 = v59 * v142;
    v145 = (uint64_t)v190;
    v146 = (uint64_t)v189;
    v195 = v80;
LABEL_100:
    v147 = 0;
    v148 = (char *)v186;
    v206 = v59;
    v199 = v144;
    v200 = (void (*)(char *, uint64_t))v143;
    while (2)
    {
      v208 = v148;
      v150 = *(_QWORD *)v215;
      v207 = v144 + v147;
      sub_1BDAE1544(v144 + v147 + v150, v146, type metadata accessor for NoteEditActivityEvent);
      sub_1BDAE1544(v143 + v147 + v150, v145, type metadata accessor for NoteEditActivityEvent);
      v151 = v145;
      v152 = v146;
      v153 = v201;
      swift_getAtKeyPath();
      v154 = v202;
      swift_getAtKeyPath();
      v155 = v214;
      v156 = v216(v153, v154);
      v214 = v155;
      if (!v155)
      {
        v157 = v156;
        v158 = *(void (**)(char *, uint64_t))(v205 + 8);
        v159 = v154;
        v160 = v210;
        v158(v159, v210);
        v158(v153, v160);
        sub_1BDAE1658(v151, type metadata accessor for NoteEditActivityEvent);
        sub_1BDAE1658(v152, type metadata accessor for NoteEditActivityEvent);
        v145 = v151;
        v146 = v152;
        if ((v157 & 1) != 0)
        {
          v161 = *(_QWORD *)v215;
          v144 = v199;
          v143 = (uint64_t)v200;
          if (!*(_QWORD *)v215)
            goto LABEL_158;
          v162 = (uint64_t)v200 + v161 + v147;
          sub_1BDAFE158(v161 + v199 + v147, v209, type metadata accessor for NoteEditActivityEvent);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BDAFE158(v209, v162, type metadata accessor for NoteEditActivityEvent);
          v147 -= v198;
          v148 = v208 + 1;
          v149 = v206;
          if ((char *)v206 == v208 + 1)
            goto LABEL_107;
          continue;
        }
        v149 = v206;
        v144 = v199;
        v143 = (uint64_t)v200;
LABEL_107:
        v59 = v149 + 1;
        v143 += v198;
        v144 += v198;
        if (v59 != v195)
          goto LABEL_100;
        v59 = v195;
        v5 = v214;
        v47 = v211;
        v48 = v186;
        if (v195 < v186)
          goto LABEL_151;
LABEL_49:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v206 = v59;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v47 = sub_1BDBBCAF8(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
        v83 = *((_QWORD *)v47 + 2);
        v82 = *((_QWORD *)v47 + 3);
        v84 = v83 + 1;
        if (v83 >= v82 >> 1)
          v47 = sub_1BDBBCAF8((char *)(v82 > 1), v83 + 1, 1, v47);
        *((_QWORD *)v47 + 2) = v84;
        v85 = v47 + 32;
        v86 = &v47[16 * v83 + 32];
        v87 = v206;
        *(_QWORD *)v86 = v48;
        *((_QWORD *)v86 + 1) = v87;
        if (v83)
        {
          v211 = v47;
          v208 = v47 + 32;
          while (1)
          {
            v88 = v84 - 1;
            if (v84 >= 4)
            {
              v93 = &v85[16 * v84];
              v94 = *((_QWORD *)v93 - 8);
              v95 = *((_QWORD *)v93 - 7);
              v99 = __OFSUB__(v95, v94);
              v96 = v95 - v94;
              if (v99)
                goto LABEL_136;
              v98 = *((_QWORD *)v93 - 6);
              v97 = *((_QWORD *)v93 - 5);
              v99 = __OFSUB__(v97, v98);
              v91 = v97 - v98;
              v92 = v99;
              if (v99)
                goto LABEL_137;
              v100 = v84 - 2;
              v101 = &v85[16 * v84 - 32];
              v103 = *(_QWORD *)v101;
              v102 = *((_QWORD *)v101 + 1);
              v99 = __OFSUB__(v102, v103);
              v104 = v102 - v103;
              if (v99)
                goto LABEL_139;
              v99 = __OFADD__(v91, v104);
              v105 = v91 + v104;
              if (v99)
                goto LABEL_142;
              if (v105 >= v96)
              {
                v123 = &v85[16 * v88];
                v125 = *(_QWORD *)v123;
                v124 = *((_QWORD *)v123 + 1);
                v99 = __OFSUB__(v124, v125);
                v126 = v124 - v125;
                if (v99)
                  goto LABEL_146;
                v116 = v91 < v126;
                goto LABEL_86;
              }
            }
            else
            {
              if (v84 != 3)
              {
                v117 = *((_QWORD *)v47 + 4);
                v118 = *((_QWORD *)v47 + 5);
                v99 = __OFSUB__(v118, v117);
                v110 = v118 - v117;
                v111 = v99;
                goto LABEL_80;
              }
              v90 = *((_QWORD *)v47 + 4);
              v89 = *((_QWORD *)v47 + 5);
              v99 = __OFSUB__(v89, v90);
              v91 = v89 - v90;
              v92 = v99;
            }
            if ((v92 & 1) != 0)
              goto LABEL_138;
            v100 = v84 - 2;
            v106 = &v85[16 * v84 - 32];
            v108 = *(_QWORD *)v106;
            v107 = *((_QWORD *)v106 + 1);
            v109 = __OFSUB__(v107, v108);
            v110 = v107 - v108;
            v111 = v109;
            if (v109)
              goto LABEL_141;
            v112 = &v85[16 * v88];
            v114 = *(_QWORD *)v112;
            v113 = *((_QWORD *)v112 + 1);
            v99 = __OFSUB__(v113, v114);
            v115 = v113 - v114;
            if (v99)
              goto LABEL_144;
            if (__OFADD__(v110, v115))
              goto LABEL_145;
            if (v110 + v115 >= v91)
            {
              v116 = v91 < v115;
LABEL_86:
              if (v116)
                v88 = v100;
              goto LABEL_88;
            }
LABEL_80:
            if ((v111 & 1) != 0)
              goto LABEL_140;
            v119 = &v85[16 * v88];
            v121 = *(_QWORD *)v119;
            v120 = *((_QWORD *)v119 + 1);
            v99 = __OFSUB__(v120, v121);
            v122 = v120 - v121;
            if (v99)
              goto LABEL_143;
            if (v122 < v110)
              goto LABEL_97;
LABEL_88:
            v127 = v88 - 1;
            if (v88 - 1 >= v84)
            {
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
              goto LABEL_155;
            }
            v128 = *(_QWORD *)v215;
            if (!*(_QWORD *)v215)
              goto LABEL_157;
            v129 = v5;
            v130 = v85;
            v131 = &v85[16 * v127];
            v132 = *(_QWORD *)v131;
            v133 = v88;
            v134 = &v130[16 * v88];
            v135 = *((_QWORD *)v134 + 1);
            v136 = *(_QWORD *)(v213 + 72);
            v137 = v128 + v136 * *(_QWORD *)v131;
            v214 = v128 + v136 * *(_QWORD *)v134;
            v138 = v128 + v136 * v135;
            v139 = v218;
            swift_retain();
            sub_1BDBD0B88(v137, v214, v138, v212, v216, v217, v139);
            v5 = v129;
            if (v129)
            {
LABEL_111:
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_128;
            }
            swift_release();
            v47 = v211;
            if (v135 < v132)
              goto LABEL_133;
            if (v133 > *((_QWORD *)v211 + 2))
              goto LABEL_134;
            v140 = v133;
            *(_QWORD *)v131 = v132;
            v85 = v208;
            *(_QWORD *)&v208[16 * v127 + 8] = v135;
            v141 = *((_QWORD *)v47 + 2);
            if (v133 >= v141)
              goto LABEL_135;
            v84 = v141 - 1;
            memmove(v134, v134 + 16, 16 * (v141 - 1 - v140));
            *((_QWORD *)v47 + 2) = v141 - 1;
            if (v141 <= 2)
              goto LABEL_97;
          }
        }
        v84 = 1;
LABEL_97:
        v40 = *(_QWORD *)(v215 + 8);
        v46 = v206;
        if (v206 >= v40)
          goto LABEL_113;
        goto LABEL_14;
      }
      break;
    }
    v175 = *(void (**)(char *, uint64_t))(v205 + 8);
    v176 = v210;
    v175(v154, v210);
    v175(v153, v176);
    sub_1BDAE1658(v151, type metadata accessor for NoteEditActivityEvent);
    v177 = v152;
LABEL_127:
    sub_1BDAE1658(v177, type metadata accessor for NoteEditActivityEvent);
    swift_bridgeObjectRelease();
LABEL_128:
    *(_QWORD *)(v188 + 16) = 0;
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  swift_release_n();
  __break(1u);
LABEL_158:
  swift_release_n();
  __break(1u);
LABEL_159:
  swift_release_n();
  __break(1u);
LABEL_160:
  swift_release_n();
  __break(1u);
LABEL_161:
  swift_release_n();
  result = sub_1BDBFE520();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD25E0(_QWORD **a1, uint64_t (*a2)(char *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12[2];

  v8 = *(_QWORD *)(type metadata accessor for NoteEditActivityEvent(0) - 8);
  v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = (_QWORD *)sub_1BDBBCF90(v9);
  v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1BDBD165C(v12, a2, a3, a4);
  swift_release();
  *a1 = v9;
  return swift_release_n();
}

uint64_t sub_1BDBD26B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  _QWORD v18[2];
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v3 = type metadata accessor for PersistedActivityEvent.Activities();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v24 = (char *)v18 - v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - v9;
  v23 = type metadata accessor for PersistedActivityEvent();
  v11 = MEMORY[0x1E0C80A78](v23);
  v22 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v18 - v14;
  result = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v18[1] = v1;
    v19 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v20 = v3;
    v21 = v6;
    sub_1BDAE1544(a1 + v19, (uint64_t)v18 - v14, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    sub_1BDAE1544((uint64_t)&v15[*(int *)(v23 + 28)], (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent.Activities);
    v17 = (char *)&loc_1BDBD287C + 4 * byte_1BDC20D09[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1BDBD2A64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = type metadata accessor for PersistedActivityEvent();
  v5 = MEMORY[0x1E0C80A78](v28);
  v29 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  result = MEMORY[0x1E0DEE9D8];
  v33 = MEMORY[0x1E0DEE9D8];
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    v11 = 0;
    v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v32 = *(_QWORD *)(v7 + 72);
    v25 = v2;
    v26 = v12;
    v30 = a1 + v12;
    v27 = (_QWORD *)(a2 + 40);
    v13 = MEMORY[0x1E0DEE9D8];
    v14 = type metadata accessor for PersistedActivityEvent;
    do
    {
      v15 = v14;
      sub_1BDAE1544(v30 + v32 * v11, (uint64_t)v9, (uint64_t (*)(_QWORD))v14);
      v16 = a2;
      v17 = *(_QWORD *)(a2 + 16);
      if (v17)
      {
        v18 = v27;
        v19 = &v9[*(int *)(v28 + 20)];
        v20 = *((_QWORD *)v19 + 1);
        v21 = *((_QWORD *)v19 + 2);
        while (1)
        {
          if (*v18)
          {
            v22 = *(v18 - 1) == v20 && *v18 == v21;
            if (v22 || (sub_1BDBFE874() & 1) != 0)
              break;
          }
          v18 += 2;
          if (!--v17)
            goto LABEL_3;
        }
        v14 = v15;
        sub_1BDAFE158((uint64_t)v9, v29, (uint64_t (*)(_QWORD))v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BDB225E8(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v33;
        v24 = *(_QWORD *)(v33 + 16);
        v23 = *(_QWORD *)(v33 + 24);
        a2 = v16;
        if (v24 >= v23 >> 1)
        {
          sub_1BDB225E8(v23 > 1, v24 + 1, 1);
          v13 = v33;
        }
        *(_QWORD *)(v13 + 16) = v24 + 1;
        sub_1BDAFE158(v29, v13 + v26 + v24 * v32, (uint64_t (*)(_QWORD))v15);
      }
      else
      {
LABEL_3:
        v14 = v15;
        sub_1BDAE1658((uint64_t)v9, (uint64_t (*)(_QWORD))v15);
        a2 = v16;
      }
      ++v11;
    }
    while (v11 != v31);
    return v33;
  }
  return result;
}

uint64_t sub_1BDBD2CA0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BDBC6BD8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BDBD2CB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDBC6CA0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1BDBD2CD4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BDBD2CF8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1BDBC5E88(*(id *)(v2 + 16), a1, a2);
}

uint64_t sub_1BDBD2D00(void **a1)
{
  uint64_t v1;

  return sub_1BDBC5F24(a1, *(_QWORD *)(v1 + 16));
}

char *keypath_get_selector_activityEventsData()
{
  return sel_activityEventsData;
}

uint64_t sub_1BDBD2D1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BDBC719C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1BDBD2D24(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BDBD2D54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD2E44(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v37 = a2;
  v4 = type metadata accessor for NoteEditActivityEvent(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v38 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v34 - v11;
  result = MEMORY[0x1E0DEE9D8];
  v40 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = *(unsigned __int8 *)(v10 + 80);
    v16 = *(_QWORD *)(v10 + 72);
    v34 = v2;
    v35 = (v15 + 32) & ~v15;
    v17 = a1 + v35;
    v39 = v9;
    v36 = v16;
    while (1)
    {
      sub_1BDAE1544(v17, (uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      if (v12[*(int *)(v4 + 28)])
      {
        v18 = sub_1BDBFE874();
        swift_bridgeObjectRelease();
        sub_1BDAE1544((uint64_t)v12, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
        if ((v18 & 1) == 0)
        {
          sub_1BDAE1658((uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
          goto LABEL_4;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1BDAE1544((uint64_t)v12, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
      }
      v19 = &v9[*(int *)(v4 + 24)];
      v20 = *(_QWORD *)v19;
      v21 = *((_QWORD *)v19 + 1);
      swift_bridgeObjectRetain();
      v22 = objc_msgSend(v37, sel_cloudAccount);
      if (!v22)
      {
        sub_1BDAE1658((uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
        swift_bridgeObjectRelease();
LABEL_18:
        sub_1BDAFE158((uint64_t)v12, v38, type metadata accessor for NoteEditActivityEvent);
        v31 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDB22678(0, *(_QWORD *)(v31 + 16) + 1, 1);
          v31 = v40;
        }
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1BDB22678(v32 > 1, v33 + 1, 1);
          v31 = v40;
        }
        *(_QWORD *)(v31 + 16) = v33 + 1;
        sub_1BDAFE158(v38, v31 + v35 + v33 * v16, type metadata accessor for NoteEditActivityEvent);
        v9 = v39;
        goto LABEL_5;
      }
      v23 = v22;
      v24 = v4;
      v25 = objc_msgSend(v22, sel_userRecordName);

      v26 = sub_1BDBFD6F8();
      v28 = v27;

      if (v20 == v26 && v21 == v28)
      {
        v9 = v39;
        sub_1BDAE1658((uint64_t)v39, type metadata accessor for NoteEditActivityEvent);
        swift_bridgeObjectRelease_n();
        v4 = v24;
        v16 = v36;
      }
      else
      {
        v30 = sub_1BDBFE874();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v9 = v39;
        sub_1BDAE1658((uint64_t)v39, type metadata accessor for NoteEditActivityEvent);
        swift_bridgeObjectRelease_n();
        v4 = v24;
        v16 = v36;
        if ((v30 & 1) == 0)
          goto LABEL_18;
      }
LABEL_4:
      sub_1BDAE1658((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
LABEL_5:
      v17 += v16;
      if (!--v14)
        return v40;
    }
  }
  return result;
}

uint64_t sub_1BDBD31D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510010);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD32DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510150);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD33E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD34D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

char *sub_1BDBD35DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BDBFE5A4();
  __break(1u);
  return result;
}

char *sub_1BDBD36C4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD37AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D280);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD38B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

char *sub_1BDBD39A4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD3A8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510070);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD3B98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD3CB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1BDBFE5A4();
  __break(1u);
  return result;
}

uint64_t sub_1BDBD3DC8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  int v34;
  _QWORD *v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v51 = a3;
  v6 = type metadata accessor for PersistedActivityEvent();
  v50 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v45 = (uint64_t)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v44 = (uint64_t)v43 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v43 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510048);
  result = MEMORY[0x1E0C80A78](v13);
  v17 = (_QWORD *)((char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v43[1] = a1;
  v43[2] = v3;
  v49 = (uint64_t)v17 + *(int *)(result + 48);
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v47 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v48 = v17;
  while (1)
  {
    sub_1BDB157E4(v19, (uint64_t)v17, &qword_1EF510048);
    v24 = *v17;
    v25 = v17[1];
    v26 = (uint64_t)v12;
    sub_1BDAFE158(v49, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    v27 = (_QWORD *)*v51;
    v29 = sub_1BDAC358C(v24, v25);
    v30 = v27[2];
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
      break;
    v33 = v28;
    if (v27[3] >= v32)
    {
      if ((a2 & 1) != 0)
      {
        v35 = v51;
        v38 = (_QWORD *)*v51;
        if ((v28 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        v35 = v51;
        sub_1BDBCDF18();
        v38 = (_QWORD *)*v35;
        if ((v33 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      v34 = a2 & 1;
      v35 = v51;
      sub_1BDBD019C(v32, v34);
      v36 = sub_1BDAC358C(v24, v25);
      if ((v33 & 1) != (v37 & 1))
        goto LABEL_23;
      v29 = v36;
      v38 = (_QWORD *)*v35;
      if ((v33 & 1) != 0)
      {
LABEL_3:
        v20 = v38[7];
        v46 = *(_QWORD *)(v50 + 72) * v29;
        v21 = v45;
        sub_1BDAE1544(v20 + v46, v45, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        v12 = (char *)v26;
        if ((sub_1BDBFCA80() & 1) != 0)
          v22 = v21;
        else
          v22 = v26;
        v23 = v44;
        sub_1BDAE1544(v22, v44, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        sub_1BDAE1658(v21, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        sub_1BDAE1658(v26, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
        swift_bridgeObjectRelease();
        sub_1BDBD4540(v23, *(_QWORD *)(*v35 + 56) + v46);
        goto LABEL_7;
      }
    }
    v38[(v29 >> 6) + 8] |= 1 << v29;
    v39 = (uint64_t *)(v38[6] + 16 * v29);
    *v39 = v24;
    v39[1] = v25;
    v12 = (char *)v26;
    sub_1BDAFE158(v26, v38[7] + *(_QWORD *)(v50 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for PersistedActivityEvent);
    v40 = v38[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_22;
    v38[2] = v42;
LABEL_7:
    v17 = v48;
    v19 += v47;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_1BDBFE994();
  __break(1u);
  return result;
}

id _sSo20ICCloudSyncingObjectC11NotesSharedE05cloudbC13ActivityEvent3for8fallbackSo0abcgH0CSgAC09PersistedgH0V_AC08FallbackgH0VSgtFZ_0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  id v8;

  if (qword_1EF50B300 != -1)
    swift_once();
  type metadata accessor for PersistedActivityEvent();
  sub_1BDAC31B0(&qword_1EF510030, (uint64_t (*)(uint64_t))type metadata accessor for PersistedActivityEvent, (uint64_t)&protocol conformance descriptor for PersistedActivityEvent);
  v0 = sub_1BDBFC3C0();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A6A0);
  sub_1BDBD4434();
  v3 = sub_1BDBFC3C0();
  v5 = v4;
  sub_1BDB4EB54(v0, v2);
  v6 = (void *)sub_1BDBFC978();
  if (v5 >> 60 == 15)
  {
    v7 = 0;
  }
  else
  {
    v7 = (void *)sub_1BDBFC978();
    sub_1BDB40600(v3, v5);
  }
  v8 = objc_msgSend(objc_allocWithZone((Class)ICCloudSyncingObjectActivityEvent), sel_initWithData_fallbackData_, v6, v7);
  sub_1BDAEB7EC(v0, v2);

  sub_1BDAEB7EC(v0, v2);
  return v8;
}

unint64_t sub_1BDBD4434()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF50FFD8;
  if (!qword_1EF50FFD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED23A6A0);
    v2 = sub_1BDAC31B0((unint64_t *)&unk_1EF50FFE0, (uint64_t (*)(uint64_t))type metadata accessor for FallbackActivityEvent, (uint64_t)&protocol conformance descriptor for FallbackActivityEvent);
    result = MEMORY[0x1C3B7B388](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF50FFD8);
  }
  return result;
}

uint64_t sub_1BDBD44B0()
{
  uint64_t v0;

  return sub_1BDBCB768(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BDBD44B8()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t sub_1BDBD44E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
  *a1 = result;
  return result;
}

void sub_1BDBD4508()
{
  unint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter(v0);
}

uint64_t sub_1BDBD4530()
{
  return swift_deallocObject();
}

uint64_t sub_1BDBD4540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersistedActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDBD45A8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  void *v4;
  _QWORD *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BDB22730(0, v1, 0);
    v2 = v12;
    v4 = (void *)objc_opt_self();
    v5 = (_QWORD *)(a1 + 40);
    do
    {
      v6 = objc_msgSend(v4, sel_valueWithRange_, *(v5 - 1), *v5);
      v11 = sub_1BDBD5584();
      v12 = v2;
      *(_QWORD *)&v10 = v6;
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1BDB22730(v7 > 1, v8 + 1, 1);
        v2 = v12;
      }
      v5 += 2;
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_1BD942258(&v10, (_OWORD *)(v2 + 32 * v8 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BDBD46B4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_1BDB226A4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v14;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1C3B79954](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_rangeValue);
      v10 = v9;

      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1BDB226A4(v11 > 1, v12 + 1, 1);
      ++v5;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id static ICTTMergeableString.Location.== infix(_:_:)(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

uint64_t sub_1BDBD4840()
{
  return sub_1BDBFEA18();
}

uint64_t sub_1BDBD4868()
{
  return 0x6F697463656C6573;
}

uint64_t sub_1BDBD4888()
{
  sub_1BDBD4904();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDBD48B0()
{
  sub_1BDBD4904();
  return sub_1BDBFEB50();
}

uint64_t ICTTMergeableString.Location.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BDBD4FD8(a1, &qword_1EF510170, (void (*)(void))sub_1BDBD4904, a2);
}

unint64_t sub_1BDBD4904()
{
  unint64_t result;

  result = qword_1EF510178;
  if (!qword_1EF510178)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC211A4, &_s8LocationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF510178);
  }
  return result;
}

uint64_t ICTTMergeableString.Location.encode(to:)(_QWORD *a1)
{
  return sub_1BDBD518C(a1, &qword_1EF510180, (void (*)(void))sub_1BDBD4904);
}

BOOL static ICTTMergeableString.Location.< infix(_:_:)(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

void ICTTMergeableString.Location.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1BDBFE07C();

}

uint64_t sub_1BDBD49E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ICTTMergeableString.Location.init(from:)(a1, a2);
}

uint64_t sub_1BDBD49FC(_QWORD *a1)
{
  return ICTTMergeableString.Location.encode(to:)(a1);
}

BOOL sub_1BDBD4A10(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

BOOL sub_1BDBD4A3C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_compare_, *a1) != (id)-1;
}

BOOL sub_1BDBD4A68(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) != (id)-1;
}

BOOL sub_1BDBD4A94(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_compare_, *a1) == (id)-1;
}

void sub_1BDBD4AC4()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1BDBFE07C();

}

id sub_1BDBD4B0C(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

void ICTTMergeableString.location(for:affinity:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  void *v4;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;

  v4 = v3;
  objc_msgSend(v4, sel_generateIdsForLocalChanges);
  v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithRange_, a1, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50D260);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(v9 + 56) = sub_1BDBD5584();
  *(_QWORD *)(v9 + 32) = v8;
  v10 = v8;
  v11 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v4, sel_selectionForCharacterRanges_selectionAffinity_, v11, a2);

  *a3 = v12;
}

void ICTTMergeableString.canResolveCharacterLocation(for:)(_QWORD *a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v2 = objc_msgSend(v1, sel_characterRangesForSelection_, *a1);
  sub_1BDBD5584();
  v3 = sub_1BDBFD9E0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1C3B79954](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v3 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_rangeValue);

    return;
  }
  __break(1u);
}

void ICTTMergeableString.characterLocation(for:)(_QWORD *a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v2 = objc_msgSend(v1, sel_characterRangesForSelection_, *a1);
  sub_1BDBD5584();
  v3 = sub_1BDBFD9E0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BDBFE574();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1C3B79954](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v3 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_rangeValue);

    return;
  }
  __break(1u);
}

uint64_t sub_1BDBD4E40()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBD4E80()
{
  sub_1BDBFEA0C();
  sub_1BDBFEA18();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBD4EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F697463656C6573 && a2 == 0xE90000000000006ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BDBFE874();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BDBD4F5C()
{
  sub_1BDBD55C0();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDBD4F84()
{
  sub_1BDBD55C0();
  return sub_1BDBFEB50();
}

uint64_t ICTTMergeableString.Selection.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BDBD4FD8(a1, &qword_1EF510190, (void (*)(void))sub_1BDBD55C0, a2);
}

uint64_t sub_1BDBD4FD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v19 = a4;
  v22 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1BDBFEAB4();
  if (!v4)
  {
    v10 = v7;
    sub_1BDB6D1B0();
    v11 = v22;
    sub_1BDBFE670();
    v12 = v20;
    v13 = v21;
    v14 = objc_allocWithZone((Class)ICTTMergeableStringSelection);
    v15 = (void *)sub_1BDBFC978();
    v16 = objc_msgSend(v14, sel_initWithData_, v15);
    sub_1BDAEB7EC(v12, v13);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
    *v19 = v16;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t ICTTMergeableString.Selection.encode(to:)(_QWORD *a1)
{
  return sub_1BDBD518C(a1, &qword_1EF5101A0, (void (*)(void))sub_1BDBD55C0);
}

uint64_t sub_1BDBD518C(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  void **v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD v15[4];
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v16 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1BDBFEACC();
  v10 = objc_msgSend(v9, sel_serialize);
  v11 = sub_1BDBFC990();
  v13 = v12;

  v15[2] = v11;
  v15[3] = v13;
  sub_1BDB6D16C();
  sub_1BDBFE718();
  sub_1BDAEB7EC(v11, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v8, v6);
}

id ICTTMergeableString.Selection.location.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_locationOnlySelection);
  *a1 = result;
  return result;
}

uint64_t _sSo19ICTTMergeableStringC11NotesSharedE8LocationV9hashValueSivg_0()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BDBFEA0C();
  v2 = v1;
  sub_1BDBFE07C();

  return sub_1BDBFEA30();
}

uint64_t sub_1BDBD5354@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ICTTMergeableString.Selection.init(from:)(a1, a2);
}

uint64_t sub_1BDBD5368(_QWORD *a1)
{
  return ICTTMergeableString.Selection.encode(to:)(a1);
}

uint64_t sub_1BDBD537C()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BDBFEA0C();
  v2 = v1;
  sub_1BDBFE07C();

  return sub_1BDBFEA30();
}

void ICTTMergeableString.selection(for:affinity:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  void *v7;
  id v8;

  objc_msgSend(v3, sel_generateIdsForLocalChanges);
  sub_1BDBD45A8(a1);
  v7 = (void *)sub_1BDBFD9C8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v3, sel_selectionForCharacterRanges_selectionAffinity_, v7, a2);

  *a3 = v8;
}

BOOL ICTTMergeableString.canResolveCharacterRanges(for:)(_QWORD *a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = objc_msgSend(v1, sel_characterRangesForSelection_, *a1);
  sub_1BDBD5584();
  v3 = sub_1BDBFD9E0();

  v4 = sub_1BDBD46B4(v3);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease();
  return v5 != 0;
}

uint64_t ICTTMergeableString.characterRanges(for:)(_QWORD *a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;

  v2 = objc_msgSend(v1, sel_characterRangesForSelection_, *a1);
  sub_1BDBD5584();
  v3 = sub_1BDBFD9E0();

  v4 = sub_1BDBD46B4(v3);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1BDBD5584()
{
  unint64_t result;

  result = qword_1EF510188;
  if (!qword_1EF510188)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF510188);
  }
  return result;
}

unint64_t sub_1BDBD55C0()
{
  unint64_t result;

  result = qword_1EF510198;
  if (!qword_1EF510198)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC21154, &_s9SelectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF510198);
  }
  return result;
}

unint64_t sub_1BDBD5608()
{
  unint64_t result;

  result = qword_1EF5101A8;
  if (!qword_1EF5101A8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICTTMergeableString.Location, &type metadata for ICTTMergeableString.Location);
    atomic_store(result, (unint64_t *)&qword_1EF5101A8);
  }
  return result;
}

unint64_t sub_1BDBD5650()
{
  unint64_t result;

  result = qword_1EF5101B0;
  if (!qword_1EF5101B0)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for ICTTMergeableString.Selection, &type metadata for ICTTMergeableString.Selection);
    atomic_store(result, (unint64_t *)&qword_1EF5101B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ICTTMergeableString.Location()
{
  return &type metadata for ICTTMergeableString.Location;
}

ValueMetadata *type metadata accessor for ICTTMergeableString.Selection()
{
  return &type metadata for ICTTMergeableString.Selection;
}

ValueMetadata *_s9SelectionV10CodingKeysOMa()
{
  return &_s9SelectionV10CodingKeysON;
}

uint64_t _s9SelectionV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BDBD570C + 4 * byte_1BDC20DB4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BDBD572C + 4 * byte_1BDC20DB9[v4]))();
}

_BYTE *sub_1BDBD570C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BDBD572C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDBD5734(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDBD573C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDBD5744(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDBD574C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s8LocationV10CodingKeysOMa()
{
  return &_s8LocationV10CodingKeysON;
}

unint64_t sub_1BDBD576C()
{
  unint64_t result;

  result = qword_1EF5101B8;
  if (!qword_1EF5101B8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC21074, &_s8LocationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5101B8);
  }
  return result;
}

unint64_t sub_1BDBD57B4()
{
  unint64_t result;

  result = qword_1EF5101C0;
  if (!qword_1EF5101C0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC2112C, &_s9SelectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5101C0);
  }
  return result;
}

unint64_t sub_1BDBD57FC()
{
  unint64_t result;

  result = qword_1EF5101C8;
  if (!qword_1EF5101C8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC2109C, &_s9SelectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5101C8);
  }
  return result;
}

unint64_t sub_1BDBD5844()
{
  unint64_t result;

  result = qword_1EF5101D0;
  if (!qword_1EF5101D0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC210C4, &_s9SelectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5101D0);
  }
  return result;
}

unint64_t sub_1BDBD588C()
{
  unint64_t result;

  result = qword_1EF5101D8;
  if (!qword_1EF5101D8)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC20FE4, &_s8LocationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5101D8);
  }
  return result;
}

unint64_t sub_1BDBD58D4()
{
  unint64_t result;

  result = qword_1EF5101E0;
  if (!qword_1EF5101E0)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC2100C, &_s8LocationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5101E0);
  }
  return result;
}

uint64_t EditNoteActivity.accountID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditNoteActivity.replicaID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EditNoteActivity() + 24);
  v4 = sub_1BDBFCB40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EditNoteActivity.noteTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EditNoteActivity() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditNoteActivity.noteTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for EditNoteActivity() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

void (*EditNoteActivity.noteTitle.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for EditNoteActivity();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

NotesShared::EditNoteActivity::NoteAttributes_optional __swiftcall EditNoteActivity.NoteAttributes.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NotesShared::EditNoteActivity::NoteAttributes_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BDBFE5D4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EditNoteActivity.NoteAttributes.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BDBD5AE8 + 4 * byte_1BDC21200[*v0]))(0xD000000000000011, 0x80000001BDC34B20);
}

uint64_t sub_1BDBD5AE8()
{
  return 0x6C61636F6CLL;
}

uint64_t sub_1BDBD5AFC()
{
  return 0x726F707075736E75;
}

uint64_t sub_1BDBD5B1C()
{
  return 0x6C6F686563616C70;
}

void sub_1BDBD5B3C(char *a1)
{
  sub_1BDB53220(*a1);
}

void sub_1BDBD5B48()
{
  char *v0;

  sub_1BDB15AE4(*v0);
}

void sub_1BDBD5B50()
{
  __asm { BR              X10 }
}

uint64_t sub_1BDBD5B90()
{
  sub_1BDBFD794();
  return swift_bridgeObjectRelease();
}

void sub_1BDBD5BF8(uint64_t a1)
{
  char *v1;

  sub_1BDB15CA8(a1, *v1);
}

NotesShared::EditNoteActivity::NoteAttributes_optional sub_1BDBD5C00(Swift::String *a1)
{
  return EditNoteActivity.NoteAttributes.init(rawValue:)(*a1);
}

uint64_t sub_1BDBD5C0C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BDBD5C40 + 4 * byte_1BDC21208[*v0]))();
}

void sub_1BDBD5C40(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61636F6CLL;
  a1[1] = 0xE500000000000000;
}

void sub_1BDBD5C58(_QWORD *a1@<X8>)
{
  *a1 = 0x726F707075736E75;
  a1[1] = 0xEB00000000646574;
}

void sub_1BDBD5C7C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F686563616C70;
  a1[1] = 0xEB00000000726564;
}

uint64_t sub_1BDBD5CA0()
{
  sub_1BDBD9260();
  return sub_1BDBFD998();
}

uint64_t sub_1BDBD5CFC()
{
  sub_1BDBD9260();
  return sub_1BDBFD950();
}

uint64_t EditNoteActivity.noteAttributes.getter()
{
  type metadata accessor for EditNoteActivity();
  return swift_bridgeObjectRetain();
}

uint64_t EditNoteActivity.noteAttributes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EditNoteActivity() + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

void (*EditNoteActivity.noteAttributes.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  type metadata accessor for EditNoteActivity();
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t EditNoteActivity.init(noteID:accountID:replicaID:noteTitle:noteAttributes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t result;

  v18 = (int *)type metadata accessor for EditNoteActivity();
  v19 = (_QWORD *)((char *)a9 + v18[7]);
  *a9 = a1;
  a9[1] = a2;
  *v19 = a6;
  v19[1] = a7;
  a9[2] = a3;
  a9[3] = a4;
  v20 = (char *)a9 + v18[6];
  v21 = sub_1BDBFCB40();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a5, v21);
  *(_QWORD *)((char *)a9 + v18[8]) = a8;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EditNoteActivity.validate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = sub_1BDAEE040((uint64_t)&unk_1E76D1B80);
  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for EditNoteActivity() + 32));
  swift_bridgeObjectRetain();
  v4 = sub_1BDBD7948(v2, v3);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_1BDBFE304();
    sub_1BDBFD7DC();
    swift_bridgeObjectRetain();
    sub_1BDBFD7DC();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDBD8750();
    sub_1BDBFDD1C();
    sub_1BDBFD7DC();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    sub_1BDB8D6D0();
    swift_allocError();
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0xE000000000000000;
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = 0;
    *(_BYTE *)(v5 + 32) = 3;
    swift_willThrow();
  }
  else
  {
    swift_release();
  }
}

uint64_t EditNoteActivity.withNote<A>(in:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BDBD6030()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  id v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(uint64_t **)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *v1;
  v4 = v1[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v6 + 32) = v4;
  v7 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 56) = v3;
  v8 = (id)v7;
  swift_bridgeObjectRetain();
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v9;
  *v9 = v0;
  v9[1] = sub_1BDBD60FC;
  return NSManagedObjectContext.perform<A>(_:)(*(_QWORD *)(v0 + 16), (uint64_t)sub_1BDBD87C8, v6, *(_QWORD *)(v0 + 48));
}

uint64_t sub_1BDBD60FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BDBD6168()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BDBD619C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BDBD61D8(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v6;
  void *v7;
  id v8;
  uint64_t inited;
  uint64_t v10;

  swift_bridgeObjectRetain();
  v6 = a3;
  v7 = (void *)sub_1BDBFD6C8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_noteWithIdentifier_context_, v7, v6);

  if (v8)
  {
    a4(v8);

  }
  else
  {
    type metadata accessor for ICError(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BF98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
    *(_QWORD *)(inited + 32) = sub_1BDBFD6F8();
    *(_QWORD *)(inited + 40) = v10;
    sub_1BDBFE304();
    swift_bridgeObjectRelease();
    sub_1BDBFD7DC();
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0xD000000000000020;
    *(_QWORD *)(inited + 56) = 0x80000001BDC3AEE0;
    sub_1BDB0ABBC(inited);
    sub_1BDAC31B0((unint64_t *)&qword_1EF50B3D0, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_1BDC17260);
    sub_1BDBFC858();
    swift_willThrow();
  }
}

uint64_t sub_1BDBD63B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BDBD63DC + 4 * byte_1BDC2120C[*v0]))(0x444965746F6ELL, 0xE600000000000000);
}

uint64_t sub_1BDBD63DC()
{
  return 0x49746E756F636361;
}

uint64_t sub_1BDBD640C()
{
  return 0x6C74695465746F6ELL;
}

uint64_t sub_1BDBD6430()
{
  return 0x7274744165746F6ELL;
}

uint64_t sub_1BDBD6454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BDBD8504(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDBD6478()
{
  sub_1BDBD87E8();
  return sub_1BDBFEB44();
}

uint64_t sub_1BDBD64A0()
{
  sub_1BDBD87E8();
  return sub_1BDBFEB50();
}

uint64_t EditNoteActivity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A958);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBD87E8();
  sub_1BDBFEACC();
  v16 = 0;
  sub_1BDBFE6E8();
  if (!v2)
  {
    v15 = 1;
    sub_1BDBFE6E8();
    v9 = type metadata accessor for EditNoteActivity();
    v14 = 2;
    sub_1BDBFCB40();
    sub_1BDAC31B0(&qword_1ED23A730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1BDBFE718();
    v13 = 3;
    sub_1BDBFE6C4();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 32));
    v11[15] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A918);
    sub_1BDBD8870(&qword_1ED23A920, (uint64_t (*)(void))sub_1BDBD882C, MEMORY[0x1E0DEB3B8]);
    sub_1BDBFE718();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t EditNoteActivity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v27 = a2;
  v3 = sub_1BDBFCB40();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5101F8);
  v6 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EditNoteActivity();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (uint64_t *)((char *)v12 + *(int *)(v10 + 28));
  *v13 = 0;
  v13[1] = 0;
  v32 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDBD87E8();
  v31 = v8;
  v14 = (uint64_t)v33;
  sub_1BDBFEAB4();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v5;
    v16 = v6;
    v33 = a1;
    v17 = v28;
    v18 = v29;
    v39 = 0;
    v19 = v30;
    *v12 = sub_1BDBFE640();
    v12[1] = v20;
    v38 = 1;
    v12[2] = sub_1BDBFE640();
    v12[3] = v21;
    v37 = 2;
    sub_1BDAC31B0(&qword_1EF50CD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v26[0] = v15;
    v26[1] = 0;
    sub_1BDBFE670();
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 32))((char *)v12 + *(int *)(v9 + 24), v26[0], v18);
    v36 = 3;
    v22 = sub_1BDBFE604();
    v23 = v32;
    *v32 = v22;
    v23[1] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A918);
    v35 = 4;
    sub_1BDBD8870(&qword_1EF510200, (uint64_t (*)(void))sub_1BDBD88D8, MEMORY[0x1E0DEB3D8]);
    sub_1BDBFE670();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v19);
    *(uint64_t *)((char *)v12 + *(int *)(v9 + 32)) = v34;
    sub_1BDB57458((uint64_t)v12, v27);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
    return sub_1BDBD891C((uint64_t)v12);
  }
}

uint64_t sub_1BDBD6A98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditNoteActivity.init(from:)(a1, a2);
}

uint64_t sub_1BDBD6AAC(_QWORD *a1)
{
  return EditNoteActivity.encode(to:)(a1);
}

uint64_t EditNoteActivity.init(note:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;

  v4 = objc_msgSend(a1, sel_identifier);
  if (!v4)
    goto LABEL_18;
  v5 = v4;
  v6 = sub_1BDBFD6F8();
  v8 = v7;

  v9 = objc_msgSend(a1, sel_account);
  if (!v9)
    goto LABEL_17;
  v10 = v9;
  v11 = objc_msgSend(v9, sel_identifier);
  if (!v11)
  {
    swift_bridgeObjectRelease();

LABEL_18:
    v25 = type metadata accessor for EditNoteActivity();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
  v12 = v11;
  v13 = sub_1BDBFD6F8();
  v15 = v14;

  v16 = objc_msgSend(a1, sel_title);
  if (!v16)
  {
    swift_bridgeObjectRelease();

LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v17 = v16;
  v26 = sub_1BDBFD6F8();
  v19 = v18;

  v31 = MEMORY[0x1E0DEE9E8];
  if ((objc_msgSend(a1, sel_needsInitialFetchFromCloud) & 1) != 0)
    sub_1BDB44F60((uint64_t)&v27, 3);
  if (objc_msgSend(a1, sel_isPasswordProtected))
    sub_1BDB44F60((uint64_t)&v28, 0);
  if (objc_msgSend(a1, sel_isUnsupported))
    sub_1BDB44F60((uint64_t)&v29, 2);
  if (objc_msgSend(v10, sel_isLocalAccount))
    sub_1BDB44F60((uint64_t)&v30, 1);
  v20 = objc_msgSend(a1, sel_currentReplicaID);
  v21 = type metadata accessor for EditNoteActivity();
  sub_1BDBFCB10();

  v22 = v31;
  v23 = (uint64_t *)((char *)a2 + *(int *)(v21 + 28));
  *a2 = v6;
  a2[1] = v8;
  *v23 = v26;
  v23[1] = v19;
  a2[2] = v13;
  a2[3] = v15;
  *(uint64_t *)((char *)a2 + *(int *)(v21 + 32)) = v22;
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 0, 1, v21);
}

uint64_t EditNoteActivity.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDBD6D48@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t EditNoteActivity.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  type metadata accessor for EditNoteActivity();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BDBFD620();
}

uint64_t EditNoteActivity.hashValue.getter()
{
  sub_1BDBFEA0C();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  type metadata accessor for EditNoteActivity();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBD6EDC()
{
  sub_1BDBFEA0C();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

uint64_t sub_1BDBD6FA4()
{
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BDBFD620();
}

uint64_t sub_1BDBD705C()
{
  sub_1BDBFEA0C();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD794();
  swift_bridgeObjectRelease();
  sub_1BDBFCB40();
  sub_1BDAC31B0((unint64_t *)&qword_1ED23AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BDBFD620();
  return sub_1BDBFEA30();
}

unint64_t EditNoteActivity.description.getter()
{
  sub_1BDBFE304();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BDBFD7DC();
  swift_bridgeObjectRelease();
  sub_1BDBFD7DC();
  return 0xD000000000000016;
}

unint64_t static EditNoteActivity.activityIdentifier.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t EditNoteActivity.metadata.getter()
{
  uint64_t v0;

  v0 = sub_1BDBFCC9C();
  MEMORY[0x1E0C80A78](v0);
  sub_1BDBFCCB4();
  sub_1BDBFCC90();
  return sub_1BDBFCCA8();
}

unint64_t sub_1BDBD7248()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1BDBD7264()
{
  uint64_t v0;

  sub_1BDBFCC9C();
  swift_task_alloc();
  sub_1BDBFCCB4();
  sub_1BDBFCC90();
  sub_1BDBFCCA8();
  swift_task_dealloc();
  return sub_1BDBD9258(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t EditNoteActivity.NoteAttributes.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BDBD730C + 4 * byte_1BDC21211[*v0]))(0xD000000000000011, 0x80000001BDC34B20);
}

uint64_t sub_1BDBD730C()
{
  return 0x6C61636F6CLL;
}

uint64_t sub_1BDBD7320()
{
  return 0x726F707075736E75;
}

uint64_t sub_1BDBD7340()
{
  return 0x6C6F686563616C70;
}

uint64_t sub_1BDBD7360()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BDBD7394 + 4 * byte_1BDC21215[*v0]))(0xD000000000000011, 0x80000001BDC34B20);
}

uint64_t sub_1BDBD7394()
{
  return 0x6C61636F6CLL;
}

uint64_t sub_1BDBD73A8()
{
  return 0x726F707075736E75;
}

uint64_t sub_1BDBD73C8()
{
  return 0x6C6F686563616C70;
}

uint64_t sub_1BDBD73E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BCC0);
  result = sub_1BDBFE2D4();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_1BDBFE064();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BDBD7644(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v15;

  v4 = a4;
  if (!a3)
  {
    v7 = MEMORY[0x1E0DEE9E8];
    goto LABEL_23;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23A940);
    v7 = sub_1BDBFE2D4();
    v15 = a1;
    if (a2 < 1)
      v8 = 0;
    else
      v8 = *a1;
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      goto LABEL_22;
    }
    if (a2 > 1)
    {
      v10 = v15[1];
      v11 = 1;
      if (v10)
        goto LABEL_21;
      v11 = 2;
      if (a2 > 2)
      {
        v10 = v15[2];
        if (v10)
          goto LABEL_21;
        v11 = 3;
        if (a2 > 3)
        {
          v10 = v15[3];
          if (!v10)
          {
            v12 = 4;
            if (a2 > 4)
            {
              v10 = v15[4];
              if (v10)
              {
                v11 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  JUMPOUT(0x1BDBD7938);
                }
                if (v11 >= a2)
                  break;
                v10 = v15[v11];
                ++v12;
                if (v10)
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
          v13 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v9);
          sub_1BDBFEA0C();
          __asm { BR              X8 }
        }
      }
    }
LABEL_23:
    swift_release();
    return v7;
  }
  return v4;
}

uint64_t sub_1BDBD7948(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1BDBD7AC8((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1BDBD7AC8((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1C3B7B478](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1BDBD7AC8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v23;
  int64_t v25;

  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v13 = *(_QWORD *)(a3 + 56);
    v14 = 1 << *(_BYTE *)(a3 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v23 = (unint64_t)(v14 + 63) >> 6;
    if ((v15 & v13) != 0)
    {
      v16 = __clz(__rbit64(v15 & v13));
    }
    else
    {
      if ((unint64_t)(v14 + 63) >> 6 <= 1)
        goto LABEL_40;
      v17 = *(_QWORD *)(a3 + 64);
      v18 = 1;
      if (!v17)
      {
        v18 = 2;
        if ((unint64_t)(v14 + 63) >> 6 <= 2)
          goto LABEL_40;
        v17 = *(_QWORD *)(a3 + 72);
        if (!v17)
        {
          v18 = 3;
          if ((unint64_t)(v14 + 63) >> 6 <= 3)
            goto LABEL_40;
          v17 = *(_QWORD *)(a3 + 80);
          if (!v17)
          {
            v19 = 4;
            if (v23 <= 4)
              goto LABEL_40;
            v17 = *(_QWORD *)(a3 + 88);
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v18 >= v23)
                  goto LABEL_40;
                v17 = *(_QWORD *)(a3 + 56 + 8 * v18);
                ++v19;
                if (v17)
                  goto LABEL_38;
              }
            }
            v18 = 4;
          }
        }
      }
LABEL_38:
      v16 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    v20 = *(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + v16);
    sub_1BDBFEA0C();
    __asm { BR              X8 }
  }
  v5 = *(_QWORD *)(a4 + 56);
  v6 = 1 << *(_BYTE *)(a4 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v25 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0)
  {
    v8 = __clz(__rbit64(v7 & v5));
    goto LABEL_20;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = *(_QWORD *)(a4 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if ((unint64_t)(v6 + 63) >> 6 <= 2)
      goto LABEL_40;
    v9 = *(_QWORD *)(a4 + 72);
    if (v9)
      goto LABEL_19;
    v10 = 3;
    if ((unint64_t)(v6 + 63) >> 6 <= 3)
      goto LABEL_40;
    v9 = *(_QWORD *)(a4 + 80);
    if (v9)
    {
LABEL_19:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
      v12 = *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + v8);
      sub_1BDBFEA0C();
      __asm { BR              X8 }
    }
    v11 = 4;
    if (v25 > 4)
    {
      v9 = *(_QWORD *)(a4 + 88);
      if (v9)
      {
        v10 = 4;
        goto LABEL_19;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        if (v10 >= v25)
          goto LABEL_40;
        v9 = *(_QWORD *)(a4 + 56 + 8 * v10);
        ++v11;
        if (v9)
          goto LABEL_19;
      }
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x1BDBD82B4);
    }
  }
LABEL_40:
  swift_retain();
  return sub_1BDBD7644(a1, a2, 0, a3);
}

uint64_t _s11NotesShared16EditNoteActivityV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v17;
  char v18;
  char v20;
  uint64_t v22;

  v4 = type metadata accessor for EditNoteActivity();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v22 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v22 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BDB57458((uint64_t)a1, (uint64_t)&v22 - v14);
    sub_1BDB57458((uint64_t)a2, (uint64_t)v13);
  }
  else
  {
    v17 = sub_1BDBFE874();
    sub_1BDB57458((uint64_t)a1, (uint64_t)v15);
    sub_1BDB57458((uint64_t)a2, (uint64_t)v13);
    if ((v17 & 1) == 0)
    {
      sub_1BDBD891C((uint64_t)v15);
      sub_1BDBD891C((uint64_t)v13);
      sub_1BDB57458((uint64_t)a1, (uint64_t)v10);
      sub_1BDB57458((uint64_t)a2, (uint64_t)v7);
      v18 = 0;
      goto LABEL_16;
    }
  }
  if (*((_QWORD *)v15 + 2) == *((_QWORD *)v13 + 2) && *((_QWORD *)v15 + 3) == *((_QWORD *)v13 + 3))
  {
    sub_1BDBD891C((uint64_t)v15);
    sub_1BDBD891C((uint64_t)v13);
    sub_1BDB57458((uint64_t)a1, (uint64_t)v10);
    sub_1BDB57458((uint64_t)a2, (uint64_t)v7);
  }
  else
  {
    v20 = sub_1BDBFE874();
    sub_1BDBD891C((uint64_t)v15);
    sub_1BDBD891C((uint64_t)v13);
    sub_1BDB57458((uint64_t)a1, (uint64_t)v10);
    sub_1BDB57458((uint64_t)a2, (uint64_t)v7);
    v18 = 0;
    if ((v20 & 1) == 0)
      goto LABEL_16;
  }
  v18 = sub_1BDBFCB04();
LABEL_16:
  sub_1BDBD891C((uint64_t)v7);
  sub_1BDBD891C((uint64_t)v10);
  return v18 & 1;
}

uint64_t sub_1BDBD8504(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444965746F6ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496163696C706572 && a2 == 0xE900000000000044 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C74695465746F6ELL && a2 == 0xE900000000000065 || (sub_1BDBFE874() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7274744165746F6ELL && a2 == 0xEE00736574756269)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BDBFE874();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1BDBD8750()
{
  unint64_t result;

  result = qword_1EF5101E8;
  if (!qword_1EF5101E8)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for EditNoteActivity.NoteAttributes, &type metadata for EditNoteActivity.NoteAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF5101E8);
  }
  return result;
}

uint64_t sub_1BDBD8794()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1BDBD87C8()
{
  uint64_t v0;

  sub_1BDBD61D8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void (**)(id))(v0 + 48));
}

unint64_t sub_1BDBD87E8()
{
  unint64_t result;

  result = qword_1ED23A748;
  if (!qword_1ED23A748)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC2164C, &type metadata for EditNoteActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23A748);
  }
  return result;
}

unint64_t sub_1BDBD882C()
{
  unint64_t result;

  result = qword_1ED23A738;
  if (!qword_1ED23A738)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for EditNoteActivity.NoteAttributes, &type metadata for EditNoteActivity.NoteAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED23A738);
  }
  return result;
}

uint64_t sub_1BDBD8870(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED23A918);
    v8 = a2();
    result = MEMORY[0x1C3B7B388](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDBD88D8()
{
  unint64_t result;

  result = qword_1EF510208;
  if (!qword_1EF510208)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for EditNoteActivity.NoteAttributes, &type metadata for EditNoteActivity.NoteAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF510208);
  }
  return result;
}

uint64_t sub_1BDBD891C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BDBD895C()
{
  unint64_t result;

  result = qword_1ED23A740;
  if (!qword_1ED23A740)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for EditNoteActivity.NoteAttributes, &type metadata for EditNoteActivity.NoteAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED23A740);
  }
  return result;
}

uint64_t sub_1BDBD89A0()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t sub_1BDBD89AC()
{
  return sub_1BDAC31B0((unint64_t *)&unk_1EF510210, (uint64_t (*)(uint64_t))type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
}

uint64_t sub_1BDBD89D8()
{
  return sub_1BDAC31B0(&qword_1ED23A760, (uint64_t (*)(uint64_t))type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
}

uint64_t sub_1BDBD8A04()
{
  return sub_1BDAC31B0(qword_1ED23A778, (uint64_t (*)(uint64_t))type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
}

uint64_t sub_1BDBD8A30()
{
  return MEMORY[0x1E0DEA9A0];
}

uint64_t sub_1BDBD8A3C()
{
  return MEMORY[0x1E0DEA970];
}

uint64_t sub_1BDBD8A48()
{
  return sub_1BDAC31B0(&qword_1ED23A770, (uint64_t (*)(uint64_t))type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
}

uint64_t sub_1BDBD8A74()
{
  return sub_1BDAC31B0(&qword_1ED23A768, (uint64_t (*)(uint64_t))type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditNoteActivity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BDBFCB40();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = a3[8];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for EditNoteActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BDBFCB40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EditNoteActivity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BDBFCB40();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EditNoteActivity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BDBFCB40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for EditNoteActivity(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BDBFCB40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_QWORD *assignWithTake for EditNoteActivity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BDBFCB40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditNoteActivity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBD8EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BDBFCB40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for EditNoteActivity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BDBD8F74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BDBFCB40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EditNoteActivity.NoteAttributes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BDBD9034 + 4 * byte_1BDC2121E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BDBD9068 + 4 * byte_1BDC21219[v4]))();
}

uint64_t sub_1BDBD9068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBD9070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBD9078);
  return result;
}

uint64_t sub_1BDBD9084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBD908CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BDBD9090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBD9098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditNoteActivity.NoteAttributes()
{
  return &type metadata for EditNoteActivity.NoteAttributes;
}

uint64_t storeEnumTagSinglePayload for EditNoteActivity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BDBD9100 + 4 * byte_1BDC21228[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BDBD9134 + 4 * byte_1BDC21223[v4]))();
}

uint64_t sub_1BDBD9134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBD913C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDBD9144);
  return result;
}

uint64_t sub_1BDBD9150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDBD9158);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BDBD915C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDBD9164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditNoteActivity.CodingKeys()
{
  return &type metadata for EditNoteActivity.CodingKeys;
}

unint64_t sub_1BDBD9184()
{
  unint64_t result;

  result = qword_1EF510220;
  if (!qword_1EF510220)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC21624, &type metadata for EditNoteActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF510220);
  }
  return result;
}

unint64_t sub_1BDBD91CC()
{
  unint64_t result;

  result = qword_1ED23A758;
  if (!qword_1ED23A758)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC21594, &type metadata for EditNoteActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23A758);
  }
  return result;
}

unint64_t sub_1BDBD9214()
{
  unint64_t result;

  result = qword_1ED23A750;
  if (!qword_1ED23A750)
  {
    result = MEMORY[0x1C3B7B388](&unk_1BDC215BC, &type metadata for EditNoteActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23A750);
  }
  return result;
}

uint64_t sub_1BDBD9258(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1BDBD9260()
{
  unint64_t result;

  result = qword_1EF510228;
  if (!qword_1EF510228)
  {
    result = MEMORY[0x1C3B7B388](&protocol conformance descriptor for EditNoteActivity.NoteAttributes, &type metadata for EditNoteActivity.NoteAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF510228);
  }
  return result;
}

uint64_t static ICCloudConfiguration.overridableValue<A>(for:in:defaults:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void *ObjCClassFromMetadata;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  int v23;
  _OWORD v24[2];
  _OWORD v25[2];
  _QWORD *v26;

  v6 = *a1;
  sub_1BDBFE190();
  if (v7)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v9 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_1BDBFD5B4();
    v11 = objc_msgSend(ObjCClassFromMetadata, sel_overridableValueForKey_inConfigurationDictionary_userDefaults_, v9, v10, a2);

    if (v11)
    {
      sub_1BDBFE184();
      swift_unknownObjectRelease();
      sub_1BD942258(v24, v25);
    }
    else
    {
      memset(v25, 0, sizeof(v25));
    }
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
    v22 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v6 + 8);
    v23 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, v23 ^ 1u, 1, v22);
  }
  else
  {
    v12 = qword_1EF50B010;
    swift_retain_n();
    if (v12 != -1)
      swift_once();
    v13 = sub_1BDBFCE34();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF50C078);
    v14 = sub_1BDBFDEF0();
    v15 = sub_1BDBFCE1C();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_QWORD *)&v24[0] = v18;
      *(_DWORD *)v17 = 136315650;
      v19 = sub_1BDBFE34C();
      *(_QWORD *)&v25[0] = sub_1BDAE53FC(v19, v20, (uint64_t *)v24);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      *(_QWORD *)&v25[0] = 35;
      sub_1BDBFE100();
      *(_WORD *)(v17 + 22) = 2080;
      *(_QWORD *)&v25[0] = 0;
      *((_QWORD *)&v25[0] + 1) = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v26 = a1;
      sub_1BDBFEAD8();
      sub_1BDBFE85C();
      *(_QWORD *)&v25[0] = sub_1BDAE53FC(*(uint64_t *)&v25[0], *((unint64_t *)&v25[0] + 1), (uint64_t *)v24);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, v15, v16, "Failed assertion at %s:%lu: %s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v18, -1, -1);
      MEMORY[0x1C3B7B478](v17, -1, -1);
    }
    swift_release_n();

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8]
                                                                                                + v6
                                                                                                + 8)
                                                                                    - 8)
                                                                        + 56))(a3, 1, 1, *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v6 + 8));
  }
}

uint64_t static ICCloudConfiguration.loadSharedConfiguration(priority:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[30] = a1;
  v2[31] = v1;
  v3 = sub_1BDBFD1E8();
  v2[32] = v3;
  v2[33] = *(_QWORD *)(v3 - 8);
  v2[34] = swift_task_alloc();
  v4 = sub_1BDBFD23C();
  v2[35] = v4;
  v2[36] = *(_QWORD *)(v4 - 8);
  v2[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23A600);
  v2[38] = swift_task_alloc();
  v5 = sub_1BDBFDBC0();
  v2[39] = v5;
  v2[40] = *(_QWORD *)(v5 - 8);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BDBD9748()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *ObjCClassFromMetadata;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;

  v1 = v0[39];
  v2 = v0[40];
  v3 = v0[38];
  sub_1BDB24814(v0[30], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1BDBA8E88(v0[38]);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v0[7] = v0 + 28;
    v0[2] = v0;
    v0[3] = sub_1BDBD9A18;
    v5 = swift_continuation_init();
    v0[18] = MEMORY[0x1E0C809B0];
    v6 = v0 + 18;
    v6[1] = 0x40000000;
    v6[2] = sub_1BDBD9AD4;
    v6[3] = &block_descriptor_17;
    v6[4] = v5;
    objc_msgSend(ObjCClassFromMetadata, sel_loadSharedConfigurationWithCompletionHandler_, v6);
  }
  else
  {
    v8 = v0[41];
    v7 = v0[42];
    v10 = v0[39];
    v9 = v0[40];
    v11 = v0[37];
    v12 = v0[35];
    v13 = v0[36];
    v14 = v0[34];
    v20 = v0[33];
    v21 = v0[32];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v7, v0[38], v10);
    v15 = (void *)swift_getObjCClassFromMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    DispatchQoS.init(_:)(v8);
    sub_1BDBFD230();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v16 = sub_1BDBFD1DC();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v14, v21);
    v0[15] = v0 + 29;
    v0[10] = v0;
    v0[11] = sub_1BDBD994C;
    v17 = swift_continuation_init();
    v0[23] = MEMORY[0x1E0C809B0];
    v18 = v0 + 23;
    v18[1] = 0x40000000;
    v18[2] = sub_1BDBD9AD4;
    v18[3] = &block_descriptor_1;
    v18[4] = v17;
    objc_msgSend(v15, sel_loadSharedConfigurationWithQoSClass_completionHandler_, v16, v18);
  }
  return swift_continuation_await();
}

uint64_t sub_1BDBD994C()
{
  return swift_task_switch();
}

uint64_t sub_1BDBD9998()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
  v1 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BDBD9A18()
{
  return swift_task_switch();
}

uint64_t sub_1BDBD9A64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BDBD9AD4(uint64_t a1, void *a2)
{
  id v2;

  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  v2 = a2;
  return swift_continuation_resume();
}

uint64_t ICCloudConfiguration.overridableValue<A>(for:in:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  int v21;
  _OWORD v22[2];
  _OWORD v23[2];
  _QWORD *v24;

  v5 = *a1;
  sub_1BDBFE190();
  if (v6)
  {
    v7 = (void *)sub_1BDBFD6C8();
    swift_bridgeObjectRelease();
    v8 = (void *)sub_1BDBFD5B4();
    v9 = objc_msgSend(v2, sel_overridableValueForKey_inConfigurationDictionary_, v7, v8);

    if (v9)
    {
      sub_1BDBFE184();
      swift_unknownObjectRelease();
      sub_1BD942258(v22, v23);
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED239CF8);
    v20 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v5 + 8);
    v21 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, v21 ^ 1u, 1, v20);
  }
  else
  {
    v10 = qword_1EF50B010;
    swift_retain_n();
    if (v10 != -1)
      swift_once();
    v11 = sub_1BDBFCE34();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EF50C078);
    v12 = sub_1BDBFDEF0();
    v13 = sub_1BDBFCE1C();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_QWORD *)&v22[0] = v16;
      *(_DWORD *)v15 = 136315650;
      v17 = sub_1BDBFE34C();
      *(_QWORD *)&v23[0] = sub_1BDAE53FC(v17, v18, (uint64_t *)v22);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2048;
      *(_QWORD *)&v23[0] = 47;
      sub_1BDBFE100();
      *(_WORD *)(v15 + 22) = 2080;
      *(_QWORD *)&v23[0] = 0;
      *((_QWORD *)&v23[0] + 1) = 0xE000000000000000;
      sub_1BDBFE304();
      sub_1BDBFD7DC();
      v24 = a1;
      sub_1BDBFEAD8();
      sub_1BDBFE85C();
      *(_QWORD *)&v23[0] = sub_1BDAE53FC(*(uint64_t *)&v23[0], *((unint64_t *)&v23[0] + 1), (uint64_t *)v22);
      sub_1BDBFE100();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD918000, v13, v14, "Failed assertion at %s:%lu: %s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C3B7B478](v16, -1, -1);
      MEMORY[0x1C3B7B478](v15, -1, -1);
    }
    swift_release_n();

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8]
                                                                                                + v5
                                                                                                + 8)
                                                                                    - 8)
                                                                        + 56))(a2, 1, 1, *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v5 + 8));
  }
}

uint64_t related decl 'e' for ICPaperDocumentErrorCode.init(_:attachment:)(uint64_t a1, void *a2)
{
  uint64_t v3;

  v3 = sub_1BDBD9EEC(a1, a2);

  return v3;
}

uint64_t static related decl 'e' for ICPaperDocumentErrorCode.attachmentClassKey.getter()
{
  return sub_1BDBFD6F8();
}

uint64_t static related decl 'e' for ICPaperDocumentErrorCode.attachmentIdentifierKey.getter()
{
  return sub_1BDBFD6F8();
}

uint64_t sub_1BDBD9EEC(uint64_t a1, void *a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t ObjectType;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v17[2];
  __int128 v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF50BF98);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDC16BA0;
  *(_QWORD *)(inited + 32) = sub_1BDBFD6F8();
  *(_QWORD *)(inited + 40) = v5;
  ObjectType = swift_getObjectType();
  *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF510238);
  *(_QWORD *)(inited + 48) = ObjectType;
  sub_1BDB0ABBC(inited);
  v7 = objc_msgSend(a2, sel_identifier);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BDBFD6F8();
    v11 = v10;

    v12 = sub_1BDBFD6F8();
    v14 = v13;
    v19 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v18 = v9;
    *((_QWORD *)&v18 + 1) = v11;
    sub_1BD942258(&v18, v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BDB6C124(v17, v12, v14, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ICPaperDocumentError(0);
  *(_QWORD *)&v17[0] = a1;
  sub_1BDBDA058();
  sub_1BDBFC858();
  return v18;
}

unint64_t sub_1BDBDA058()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF50B4A0;
  if (!qword_1EF50B4A0)
  {
    type metadata accessor for ICPaperDocumentError(255);
    result = MEMORY[0x1C3B7B388](&unk_1BDC17718, v1);
    atomic_store(result, (unint64_t *)&qword_1EF50B4A0);
  }
  return result;
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_1EF520088 == -1)
  {
    if (qword_1EF520090)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_1EF520088, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_1EF520090)
      return _availability_version_check();
  }
  if (qword_1EF520080 == -1)
  {
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_1EF520080, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_1EF520074 > a3)
    return 1;
  return dword_1EF520074 >= a3 && dword_1EF520078 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v1 = (uint64_t (*)(void))qword_1EF520090;
  if (qword_1EF520090)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x1E0C80CC0])
    {
      qword_1EF520090 = (uint64_t)MEMORY[0x1E0C80CC0];
      v1 = MEMORY[0x1E0C80CC0];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x1C3B7ABD8](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_1EF520074, &dword_1EF520078);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t __getMarkupViewControllerClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return -[ICNotesCrossProcessChangeCoordinator postCrossProcessNotificationName:].cold.1(v0);
}

void versioned_document::Document::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 349, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void drawing::Drawing::CheckTypeAndMergeFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_8("down_cast", "common.h", a3, "f == NULL || dynamic_cast<To>(f) != NULL");
}

uint64_t __getMKMapItemClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return +[ICCloudConfiguration availableConfigurationURLs].cold.1(v0);
}

uint64_t __getLPLinkMetadataClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return -[ICAccount setMarkedForDeletion:].cold.1(v0);
}

#error "1BDBE7078: call analysis failed (funcsize=45)"

uint64_t __getCNMutablePostalAddressClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getCNPostalAddressFormatterClass_block_invoke_cold_1(v0);
}

uint64_t __getCNPostalAddressFormatterClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return -[ICCloudThrottlingPolicy incrementBatchCount].cold.1(v0);
}

void __getNLEmbeddingClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  topotext::Selection::MergeFrom(v0);
}

void topotext::Selection::MergeFrom()
{
  __assert_rtn("set_affinity", "topotext.pb.h", 4122, "::topotext::Selection_Affinity_IsValid(value)");
}

void topotext::AttributeRun::MergeFrom()
{
  __assert_rtn("set_writingdirection", "topotext.pb.h", 4482, "::topotext::AttributeRun_WritingDirection_IsValid(value)");
}

uint64_t __getNLTokenizerClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getAppleSpellClass_block_invoke_cold_1(v0);
}

uint64_t __getAppleSpellClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __64__ICParticipantUpdater_insertMissingParticipantsWithCompletion___block_invoke_2_cold_1(v0);
}

uint64_t __getVNSessionClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getVNImageRequestHandlerClass_block_invoke_cold_1(v0);
}

uint64_t __getVNImageRequestHandlerClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getVNRecognizeTextRequestClass_block_invoke_cold_1(v0);
}

uint64_t __getVNRecognizeTextRequestClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __65__ICCompatibilityController_devicesForAccount_completionHandler___block_invoke_2_cold_1(v0);
}

void __getCKRecordClass_block_invoke_cold_1()
{
  abort_report_np();
  sub_1BDBFC354();
}

uint64_t sub_1BDBFC354()
{
  return MEMORY[0x1E0C919D8]();
}

uint64_t sub_1BDBFC360()
{
  return MEMORY[0x1E0CADE58]();
}

uint64_t sub_1BDBFC36C()
{
  return MEMORY[0x1E0CADFD8]();
}

uint64_t sub_1BDBFC378()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1BDBFC384()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1BDBFC390()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1BDBFC39C()
{
  return MEMORY[0x1E0CAE0D0]();
}

uint64_t sub_1BDBFC3A8()
{
  return MEMORY[0x1E0CAE0E0]();
}

uint64_t sub_1BDBFC3B4()
{
  return MEMORY[0x1E0CAE108]();
}

uint64_t sub_1BDBFC3C0()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1BDBFC3CC()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1BDBFC3D8()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1BDBFC3E4()
{
  return MEMORY[0x1E0CAE390]();
}

uint64_t sub_1BDBFC3F0()
{
  return MEMORY[0x1E0CAE3A0]();
}

uint64_t sub_1BDBFC3FC()
{
  return MEMORY[0x1E0CAE410]();
}

uint64_t sub_1BDBFC408()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1BDBFC414()
{
  return MEMORY[0x1E0CAE438]();
}

uint64_t sub_1BDBFC420()
{
  return MEMORY[0x1E0CAE488]();
}

uint64_t sub_1BDBFC42C()
{
  return MEMORY[0x1E0CAE490]();
}

uint64_t sub_1BDBFC438()
{
  return MEMORY[0x1E0CAE498]();
}

uint64_t sub_1BDBFC444()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1BDBFC450()
{
  return MEMORY[0x1E0CAE580]();
}

uint64_t sub_1BDBFC45C()
{
  return MEMORY[0x1E0CAE590]();
}

uint64_t sub_1BDBFC468()
{
  return MEMORY[0x1E0CAE598]();
}

uint64_t sub_1BDBFC474()
{
  return MEMORY[0x1E0CAE5A0]();
}

uint64_t sub_1BDBFC480()
{
  return MEMORY[0x1E0CAE5D0]();
}

uint64_t sub_1BDBFC48C()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t sub_1BDBFC498()
{
  return MEMORY[0x1E0CAE630]();
}

uint64_t sub_1BDBFC4A4()
{
  return MEMORY[0x1E0CAE638]();
}

uint64_t sub_1BDBFC4B0()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1BDBFC4BC()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t sub_1BDBFC4C8()
{
  return MEMORY[0x1E0CAE670]();
}

uint64_t sub_1BDBFC4D4()
{
  return MEMORY[0x1E0CAE678]();
}

uint64_t sub_1BDBFC4E0()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_1BDBFC4EC()
{
  return MEMORY[0x1E0CAE710]();
}

uint64_t sub_1BDBFC4F8()
{
  return MEMORY[0x1E0CAE718]();
}

uint64_t sub_1BDBFC504()
{
  return MEMORY[0x1E0CAE768]();
}

uint64_t sub_1BDBFC510()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_1BDBFC51C()
{
  return MEMORY[0x1E0CAE7E0]();
}

uint64_t sub_1BDBFC528()
{
  return MEMORY[0x1E0CAE7F0]();
}

uint64_t sub_1BDBFC534()
{
  return MEMORY[0x1E0CAE800]();
}

uint64_t sub_1BDBFC540()
{
  return MEMORY[0x1E0CAE808]();
}

uint64_t sub_1BDBFC54C()
{
  return MEMORY[0x1E0CAE810]();
}

uint64_t sub_1BDBFC558()
{
  return MEMORY[0x1E0CAE818]();
}

uint64_t sub_1BDBFC564()
{
  return MEMORY[0x1E0CAE820]();
}

uint64_t sub_1BDBFC570()
{
  return MEMORY[0x1E0CAE828]();
}

uint64_t sub_1BDBFC57C()
{
  return MEMORY[0x1E0CAE840]();
}

uint64_t sub_1BDBFC588()
{
  return MEMORY[0x1E0CAE848]();
}

uint64_t sub_1BDBFC594()
{
  return MEMORY[0x1E0CAE858]();
}

uint64_t sub_1BDBFC5A0()
{
  return MEMORY[0x1E0CAE860]();
}

uint64_t sub_1BDBFC5AC()
{
  return MEMORY[0x1E0CAE878]();
}

uint64_t sub_1BDBFC5B8()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1BDBFC5C4()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1BDBFC5D0()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1BDBFC5DC()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1BDBFC5E8()
{
  return MEMORY[0x1E0CAE920]();
}

uint64_t sub_1BDBFC5F4()
{
  return MEMORY[0x1E0CAE928]();
}

uint64_t sub_1BDBFC600()
{
  return MEMORY[0x1E0CAEB10]();
}

uint64_t sub_1BDBFC60C()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_1BDBFC618()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_1BDBFC624()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_1BDBFC630()
{
  return MEMORY[0x1E0CAEEB8]();
}

uint64_t sub_1BDBFC63C()
{
  return MEMORY[0x1E0CAEEC0]();
}

uint64_t sub_1BDBFC648()
{
  return MEMORY[0x1E0CAEEC8]();
}

uint64_t sub_1BDBFC654()
{
  return MEMORY[0x1E0CAEED0]();
}

uint64_t sub_1BDBFC660()
{
  return MEMORY[0x1E0CAEEE0]();
}

uint64_t sub_1BDBFC66C()
{
  return MEMORY[0x1E0CAEF00]();
}

uint64_t sub_1BDBFC678()
{
  return MEMORY[0x1E0CAEF10]();
}

uint64_t sub_1BDBFC684()
{
  return MEMORY[0x1E0CAEF48]();
}

uint64_t sub_1BDBFC690()
{
  return MEMORY[0x1E0CAEF60]();
}

uint64_t sub_1BDBFC69C()
{
  return MEMORY[0x1E0CAF0C0]();
}

uint64_t sub_1BDBFC6A8()
{
  return MEMORY[0x1E0CAF0C8]();
}

uint64_t sub_1BDBFC6B4()
{
  return MEMORY[0x1E0CAF0D0]();
}

uint64_t sub_1BDBFC6C0()
{
  return MEMORY[0x1E0CAF0D8]();
}

uint64_t sub_1BDBFC6CC()
{
  return MEMORY[0x1E0CAF0F0]();
}

uint64_t sub_1BDBFC6D8()
{
  return MEMORY[0x1E0CAF160]();
}

uint64_t sub_1BDBFC6E4()
{
  return MEMORY[0x1E0CAF190]();
}

uint64_t sub_1BDBFC6F0()
{
  return MEMORY[0x1E0CAF1A0]();
}

uint64_t sub_1BDBFC6FC()
{
  return MEMORY[0x1E0CAF1B0]();
}

uint64_t sub_1BDBFC708()
{
  return MEMORY[0x1E0CAF238]();
}

uint64_t sub_1BDBFC714()
{
  return MEMORY[0x1E0CAF240]();
}

uint64_t sub_1BDBFC720()
{
  return MEMORY[0x1E0CAF278]();
}

uint64_t sub_1BDBFC72C()
{
  return MEMORY[0x1E0CAF2C0]();
}

uint64_t sub_1BDBFC738()
{
  return MEMORY[0x1E0CAF2C8]();
}

uint64_t sub_1BDBFC744()
{
  return MEMORY[0x1E0CAF2D8]();
}

uint64_t sub_1BDBFC750()
{
  return MEMORY[0x1E0CAF338]();
}

uint64_t sub_1BDBFC75C()
{
  return MEMORY[0x1E0DF0160]();
}

uint64_t sub_1BDBFC768()
{
  return MEMORY[0x1E0CAF3C0]();
}

uint64_t sub_1BDBFC774()
{
  return MEMORY[0x1E0CAF3D8]();
}

uint64_t sub_1BDBFC780()
{
  return MEMORY[0x1E0CAF458]();
}

uint64_t sub_1BDBFC78C()
{
  return MEMORY[0x1E0CAF460]();
}

uint64_t sub_1BDBFC798()
{
  return MEMORY[0x1E0CAF558]();
}

uint64_t sub_1BDBFC7A4()
{
  return MEMORY[0x1E0CAF560]();
}

uint64_t sub_1BDBFC7B0()
{
  return MEMORY[0x1E0CAF568]();
}

uint64_t sub_1BDBFC7BC()
{
  return MEMORY[0x1E0CAF5A8]();
}

uint64_t sub_1BDBFC7C8()
{
  return MEMORY[0x1E0CAF5C8]();
}

uint64_t sub_1BDBFC7D4()
{
  return MEMORY[0x1E0CAF5F8]();
}

uint64_t sub_1BDBFC7E0()
{
  return MEMORY[0x1E0CAF608]();
}

uint64_t sub_1BDBFC7EC()
{
  return MEMORY[0x1E0CAF638]();
}

uint64_t sub_1BDBFC7F8()
{
  return MEMORY[0x1E0CAF668]();
}

uint64_t sub_1BDBFC804()
{
  return MEMORY[0x1E0CAF670]();
}

uint64_t sub_1BDBFC810()
{
  return MEMORY[0x1E0CAF8D8]();
}

uint64_t sub_1BDBFC81C()
{
  return MEMORY[0x1E0CAF8E8]();
}

uint64_t sub_1BDBFC828()
{
  return MEMORY[0x1E0CAF8F8]();
}

uint64_t sub_1BDBFC834()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t sub_1BDBFC840()
{
  return MEMORY[0x1E0CAF920]();
}

uint64_t sub_1BDBFC84C()
{
  return MEMORY[0x1E0CAF930]();
}

uint64_t sub_1BDBFC858()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1BDBFC864()
{
  return MEMORY[0x1E0CAF970]();
}

uint64_t sub_1BDBFC870()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1BDBFC87C()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1BDBFC888()
{
  return MEMORY[0x1E0CAFD10]();
}

uint64_t sub_1BDBFC894()
{
  return MEMORY[0x1E0CAFD30]();
}

uint64_t sub_1BDBFC8A0()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1BDBFC8AC()
{
  return MEMORY[0x1E0CAFDC0]();
}

uint64_t sub_1BDBFC8B8()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1BDBFC8C4()
{
  return MEMORY[0x1E0CAFE08]();
}

uint64_t sub_1BDBFC8D0()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1BDBFC8DC()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1BDBFC8E8()
{
  return MEMORY[0x1E0CAFE90]();
}

uint64_t sub_1BDBFC8F4()
{
  return MEMORY[0x1E0CAFEA8]();
}

uint64_t sub_1BDBFC900()
{
  return MEMORY[0x1E0CAFEB8]();
}

uint64_t sub_1BDBFC90C()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1BDBFC918()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1BDBFC924()
{
  return MEMORY[0x1E0CAFF68]();
}

uint64_t sub_1BDBFC930()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1BDBFC93C()
{
  return MEMORY[0x1E0CAFFB0]();
}

uint64_t sub_1BDBFC948()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1BDBFC954()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1BDBFC960()
{
  return MEMORY[0x1E0CB0138]();
}

uint64_t sub_1BDBFC96C()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_1BDBFC978()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1BDBFC984()
{
  return MEMORY[0x1E0CB0220]();
}

uint64_t sub_1BDBFC990()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1BDBFC99C()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_1BDBFC9A8()
{
  return MEMORY[0x1E0CB02B0]();
}

uint64_t sub_1BDBFC9B4()
{
  return MEMORY[0x1E0CB0568]();
}

uint64_t sub_1BDBFC9C0()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1BDBFC9CC()
{
  return MEMORY[0x1E0D63DB8]();
}

uint64_t sub_1BDBFC9D8()
{
  return MEMORY[0x1E0D63DD8]();
}

uint64_t sub_1BDBFC9E4()
{
  return MEMORY[0x1E0D63DF0]();
}

uint64_t sub_1BDBFC9F0()
{
  return MEMORY[0x1E0D63E00]();
}

uint64_t sub_1BDBFC9FC()
{
  return MEMORY[0x1E0D63E08]();
}

uint64_t sub_1BDBFCA08()
{
  return MEMORY[0x1E0CB05A0]();
}

uint64_t sub_1BDBFCA14()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_1BDBFCA20()
{
  return MEMORY[0x1E0CB05E8]();
}

uint64_t sub_1BDBFCA2C()
{
  return MEMORY[0x1E0CB05F8]();
}

uint64_t sub_1BDBFCA38()
{
  return MEMORY[0x1E0CB0608]();
}

uint64_t sub_1BDBFCA44()
{
  return MEMORY[0x1E0CB0610]();
}

uint64_t sub_1BDBFCA50()
{
  return MEMORY[0x1E0CB0630]();
}

uint64_t sub_1BDBFCA5C()
{
  return MEMORY[0x1E0CB0670]();
}

uint64_t sub_1BDBFCA68()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1BDBFCA74()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1BDBFCA80()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1BDBFCA8C()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1BDBFCA98()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1BDBFCAA4()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1BDBFCABC()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1BDBFCAC8()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1BDBFCAD4()
{
  return MEMORY[0x1E0CB08D8]();
}

uint64_t sub_1BDBFCAE0()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_1BDBFCAEC()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1BDBFCAF8()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1BDBFCB04()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1BDBFCB10()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1BDBFCB1C()
{
  return MEMORY[0x1E0CB0970]();
}

uint64_t sub_1BDBFCB28()
{
  return MEMORY[0x1E0CB0978]();
}

uint64_t _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1BDBFCB40()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1BDBFCB4C()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1BDBFCB58()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1BDBFCB64()
{
  return MEMORY[0x1E0CB1070]();
}

uint64_t sub_1BDBFCB70()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1BDBFCB7C()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1BDBFCB88()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1BDBFCB94()
{
  return MEMORY[0x1E0CB1438]();
}

uint64_t sub_1BDBFCBA0()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1BDBFCBAC()
{
  return MEMORY[0x1E0C8F5D8]();
}

uint64_t sub_1BDBFCBB8()
{
  return MEMORY[0x1E0C8F9A0]();
}

uint64_t sub_1BDBFCBC4()
{
  return MEMORY[0x1E0C8F9A8]();
}

uint64_t sub_1BDBFCBD0()
{
  return MEMORY[0x1E0C8FD80]();
}

uint64_t sub_1BDBFCBDC()
{
  return MEMORY[0x1E0C901D0]();
}

uint64_t sub_1BDBFCBE8()
{
  return MEMORY[0x1E0DEFD58]();
}

uint64_t sub_1BDBFCBF4()
{
  return MEMORY[0x1E0DEFD60]();
}

uint64_t sub_1BDBFCC00()
{
  return MEMORY[0x1E0DEFD68]();
}

uint64_t sub_1BDBFCC0C()
{
  return MEMORY[0x1E0DEFD70]();
}

uint64_t sub_1BDBFCC18()
{
  return MEMORY[0x1E0DEFD78]();
}

uint64_t sub_1BDBFCC24()
{
  return MEMORY[0x1E0DEFD80]();
}

uint64_t sub_1BDBFCC30()
{
  return MEMORY[0x1E0D11158]();
}

uint64_t sub_1BDBFCC3C()
{
  return MEMORY[0x1E0D11170]();
}

uint64_t sub_1BDBFCC48()
{
  return MEMORY[0x1E0D11188]();
}

uint64_t sub_1BDBFCC54()
{
  return MEMORY[0x1E0D63E10]();
}

uint64_t sub_1BDBFCC60()
{
  return MEMORY[0x1E0D63E30]();
}

uint64_t sub_1BDBFCC6C()
{
  return MEMORY[0x1E0D63E38]();
}

uint64_t sub_1BDBFCC78()
{
  return MEMORY[0x1E0CB3D88]();
}

uint64_t sub_1BDBFCC84()
{
  return MEMORY[0x1E0CB3D98]();
}

uint64_t sub_1BDBFCC90()
{
  return MEMORY[0x1E0CB3ED0]();
}

uint64_t sub_1BDBFCC9C()
{
  return MEMORY[0x1E0CB3EF0]();
}

uint64_t sub_1BDBFCCA8()
{
  return MEMORY[0x1E0CB3F28]();
}

uint64_t sub_1BDBFCCB4()
{
  return MEMORY[0x1E0CB3F40]();
}

uint64_t sub_1BDBFCCC0()
{
  return MEMORY[0x1E0CB3FC0]();
}

uint64_t sub_1BDBFCCCC()
{
  return MEMORY[0x1E0CB41E0]();
}

uint64_t sub_1BDBFCCD8()
{
  return MEMORY[0x1E0CB4290]();
}

uint64_t sub_1BDBFCCE4()
{
  return MEMORY[0x1E0CB42D8]();
}

uint64_t sub_1BDBFCCF0()
{
  return MEMORY[0x1E0D3E988]();
}

uint64_t _s11NotesShared11PingRequestVACycfC_0()
{
  return MEMORY[0x1E0D3E990]();
}

uint64_t sub_1BDBFCD08()
{
  return MEMORY[0x1E0D3E998]();
}

uint64_t sub_1BDBFCD14()
{
  return MEMORY[0x1E0D3EA80]();
}

uint64_t sub_1BDBFCD20()
{
  return MEMORY[0x1E0D3EA90]();
}

uint64_t sub_1BDBFCD2C()
{
  return MEMORY[0x1E0D3EAB8]();
}

uint64_t sub_1BDBFCD38()
{
  return MEMORY[0x1E0D3EB18]();
}

uint64_t sub_1BDBFCD44()
{
  return MEMORY[0x1E0D3EB90]();
}

uint64_t sub_1BDBFCD50()
{
  return MEMORY[0x1E0D3EBC0]();
}

uint64_t sub_1BDBFCD5C()
{
  return MEMORY[0x1E0D3EC48]();
}

uint64_t sub_1BDBFCD68()
{
  return MEMORY[0x1E0D3EC68]();
}

uint64_t sub_1BDBFCD74()
{
  return MEMORY[0x1E0D3EC80]();
}

uint64_t sub_1BDBFCD80()
{
  return MEMORY[0x1E0D3EC88]();
}

uint64_t sub_1BDBFCD8C()
{
  return MEMORY[0x1E0D3ED28]();
}

uint64_t sub_1BDBFCD98()
{
  return MEMORY[0x1E0D3ED68]();
}

uint64_t sub_1BDBFCDA4()
{
  return MEMORY[0x1E0D3ED80]();
}

uint64_t sub_1BDBFCDB0()
{
  return MEMORY[0x1E0D3EF28]();
}

uint64_t sub_1BDBFCDBC()
{
  return MEMORY[0x1E0D3EF38]();
}

uint64_t sub_1BDBFCDC8()
{
  return MEMORY[0x1E0D3EF40]();
}

uint64_t sub_1BDBFCDD4()
{
  return MEMORY[0x1E0D3EF48]();
}

uint64_t sub_1BDBFCDE0()
{
  return MEMORY[0x1E0DF0190]();
}

uint64_t sub_1BDBFCDEC()
{
  return MEMORY[0x1E0DF01A0]();
}

uint64_t sub_1BDBFCDF8()
{
  return MEMORY[0x1E0DF02C0]();
}

uint64_t sub_1BDBFCE04()
{
  return MEMORY[0x1E0DF0308]();
}

uint64_t sub_1BDBFCE10()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1BDBFCE1C()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1BDBFCE28()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1BDBFCE34()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1BDBFCE40()
{
  return MEMORY[0x1E0D8BD48]();
}

uint64_t sub_1BDBFCE4C()
{
  return MEMORY[0x1E0D8BD68]();
}

uint64_t sub_1BDBFCE58()
{
  return MEMORY[0x1E0D8BD70]();
}

uint64_t sub_1BDBFCE64()
{
  return MEMORY[0x1E0D8BD78]();
}

uint64_t sub_1BDBFCE70()
{
  return MEMORY[0x1E0D8BD80]();
}

uint64_t sub_1BDBFCE7C()
{
  return MEMORY[0x1E0D8BD90]();
}

uint64_t sub_1BDBFCE88()
{
  return MEMORY[0x1E0D8BDA0]();
}

uint64_t sub_1BDBFCE94()
{
  return MEMORY[0x1E0D8BDB0]();
}

uint64_t sub_1BDBFCEA0()
{
  return MEMORY[0x1E0D8BDC0]();
}

uint64_t sub_1BDBFCEAC()
{
  return MEMORY[0x1E0D8BDD0]();
}

uint64_t sub_1BDBFCEB8()
{
  return MEMORY[0x1E0D8BDD8]();
}

uint64_t sub_1BDBFCEC4()
{
  return MEMORY[0x1E0D8BDE0]();
}

uint64_t sub_1BDBFCED0()
{
  return MEMORY[0x1E0D8BDF8]();
}

uint64_t sub_1BDBFCEDC()
{
  return MEMORY[0x1E0D8BE20]();
}

uint64_t sub_1BDBFCEE8()
{
  return MEMORY[0x1E0D8BE50]();
}

uint64_t sub_1BDBFCEF4()
{
  return MEMORY[0x1E0DEF3B8]();
}

uint64_t sub_1BDBFCF00()
{
  return MEMORY[0x1E0DF2060]();
}

uint64_t sub_1BDBFCF0C()
{
  return MEMORY[0x1E0DF2068]();
}

uint64_t sub_1BDBFCF18()
{
  return MEMORY[0x1E0CD7638]();
}

uint64_t sub_1BDBFCF24()
{
  return MEMORY[0x1E0CD7658]();
}

uint64_t sub_1BDBFCF30()
{
  return MEMORY[0x1E0CD7668]();
}

uint64_t sub_1BDBFCF3C()
{
  return MEMORY[0x1E0CD7670]();
}

uint64_t sub_1BDBFCF48()
{
  return MEMORY[0x1E0CD7698]();
}

uint64_t sub_1BDBFCF54()
{
  return MEMORY[0x1E0CD76C8]();
}

uint64_t sub_1BDBFCF60()
{
  return MEMORY[0x1E0CD76D8]();
}

uint64_t sub_1BDBFCF6C()
{
  return MEMORY[0x1E0CD7720]();
}

uint64_t sub_1BDBFCF78()
{
  return MEMORY[0x1E0CD7768]();
}

uint64_t sub_1BDBFCF84()
{
  return MEMORY[0x1E0CD77B0]();
}

uint64_t sub_1BDBFCF90()
{
  return MEMORY[0x1E0CD77D0]();
}

uint64_t sub_1BDBFCF9C()
{
  return MEMORY[0x1E0CD77F8]();
}

uint64_t sub_1BDBFCFA8()
{
  return MEMORY[0x1E0CD7808]();
}

uint64_t sub_1BDBFCFB4()
{
  return MEMORY[0x1E0CD7810]();
}

uint64_t sub_1BDBFCFC0()
{
  return MEMORY[0x1E0CD7860]();
}

uint64_t sub_1BDBFCFCC()
{
  return MEMORY[0x1E0CD7880]();
}

uint64_t sub_1BDBFCFD8()
{
  return MEMORY[0x1E0CD78F0]();
}

uint64_t sub_1BDBFCFE4()
{
  return MEMORY[0x1E0CD7910]();
}

uint64_t sub_1BDBFCFF0()
{
  return MEMORY[0x1E0CD7928]();
}

uint64_t sub_1BDBFCFFC()
{
  return MEMORY[0x1E0CD7930]();
}

uint64_t sub_1BDBFD008()
{
  return MEMORY[0x1E0CD7958]();
}

uint64_t sub_1BDBFD014()
{
  return MEMORY[0x1E0CD7980]();
}

uint64_t sub_1BDBFD020()
{
  return MEMORY[0x1E0CD7A50]();
}

uint64_t sub_1BDBFD02C()
{
  return MEMORY[0x1E0CD7AA8]();
}

uint64_t sub_1BDBFD038()
{
  return MEMORY[0x1E0CD7CB0]();
}

uint64_t sub_1BDBFD044()
{
  return MEMORY[0x1E0CD7D38]();
}

uint64_t sub_1BDBFD050()
{
  return MEMORY[0x1E0CD7D48]();
}

uint64_t sub_1BDBFD05C()
{
  return MEMORY[0x1E0CD7DE8]();
}

uint64_t sub_1BDBFD068()
{
  return MEMORY[0x1E0CD7F20]();
}

uint64_t sub_1BDBFD074()
{
  return MEMORY[0x1E0DF0078]();
}

uint64_t sub_1BDBFD080()
{
  return MEMORY[0x1E0DF0090]();
}

uint64_t sub_1BDBFD08C()
{
  return MEMORY[0x1E0DF00A0]();
}

uint64_t sub_1BDBFD098()
{
  return MEMORY[0x1E0DF00D0]();
}

uint64_t sub_1BDBFD0A4()
{
  return MEMORY[0x1E0DF00E0]();
}

uint64_t sub_1BDBFD0B0()
{
  return MEMORY[0x1E0DF00E8]();
}

uint64_t sub_1BDBFD0BC()
{
  return MEMORY[0x1E0DF00F0]();
}

uint64_t sub_1BDBFD0C8()
{
  return MEMORY[0x1E0DF00F8]();
}

uint64_t sub_1BDBFD0D4()
{
  return MEMORY[0x1E0DF0108]();
}

uint64_t sub_1BDBFD0E0()
{
  return MEMORY[0x1E0DF0110]();
}

uint64_t sub_1BDBFD0EC()
{
  return MEMORY[0x1E0DF0120]();
}

uint64_t sub_1BDBFD0F8()
{
  return MEMORY[0x1E0DF0138]();
}

uint64_t sub_1BDBFD104()
{
  return MEMORY[0x1E0DF0150]();
}

uint64_t sub_1BDBFD110()
{
  return MEMORY[0x1E0C956E0]();
}

uint64_t sub_1BDBFD11C()
{
  return MEMORY[0x1E0C95A58]();
}

uint64_t sub_1BDBFD128()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1BDBFD134()
{
  return MEMORY[0x1E0C960B8]();
}

uint64_t sub_1BDBFD140()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1BDBFD14C()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1BDBFD158()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t sub_1BDBFD164()
{
  return MEMORY[0x1E0C96168]();
}

uint64_t sub_1BDBFD170()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1BDBFD17C()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1BDBFD188()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_1BDBFD194()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1BDBFD1A0()
{
  return MEMORY[0x1E0C961D8]();
}

uint64_t sub_1BDBFD1AC()
{
  return MEMORY[0x1E0C96248]();
}

uint64_t sub_1BDBFD1B8()
{
  return MEMORY[0x1E0C96308]();
}

uint64_t sub_1BDBFD1C4()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1BDBFD1D0()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1BDBFD1DC()
{
  return MEMORY[0x1E0DEF558]();
}

uint64_t sub_1BDBFD1E8()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1BDBFD1F4()
{
  return MEMORY[0x1E0DEF570]();
}

uint64_t sub_1BDBFD200()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1BDBFD20C()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1BDBFD218()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t sub_1BDBFD224()
{
  return MEMORY[0x1E0DEF598]();
}

uint64_t sub_1BDBFD230()
{
  return MEMORY[0x1E0DEF5A8]();
}

uint64_t sub_1BDBFD23C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1BDBFD248()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1BDBFD254()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1BDBFD260()
{
  return MEMORY[0x1E0D653E8]();
}

uint64_t sub_1BDBFD26C()
{
  return MEMORY[0x1E0D65400]();
}

uint64_t sub_1BDBFD278()
{
  return MEMORY[0x1E0D65408]();
}

uint64_t sub_1BDBFD284()
{
  return MEMORY[0x1E0D65428]();
}

uint64_t sub_1BDBFD290()
{
  return MEMORY[0x1E0D65438]();
}

uint64_t sub_1BDBFD29C()
{
  return MEMORY[0x1E0D65440]();
}

uint64_t sub_1BDBFD2A8()
{
  return MEMORY[0x1E0D65490]();
}

uint64_t sub_1BDBFD2B4()
{
  return MEMORY[0x1E0D65670]();
}

uint64_t sub_1BDBFD2C0()
{
  return MEMORY[0x1E0D65680]();
}

uint64_t sub_1BDBFD2CC()
{
  return MEMORY[0x1E0D65688]();
}

uint64_t sub_1BDBFD2D8()
{
  return MEMORY[0x1E0D65690]();
}

uint64_t sub_1BDBFD2E4()
{
  return MEMORY[0x1E0D656B8]();
}

uint64_t sub_1BDBFD2F0()
{
  return MEMORY[0x1E0D65700]();
}

uint64_t sub_1BDBFD2FC()
{
  return MEMORY[0x1E0D65708]();
}

uint64_t sub_1BDBFD308()
{
  return MEMORY[0x1E0D65710]();
}

uint64_t sub_1BDBFD314()
{
  return MEMORY[0x1E0D65820]();
}

uint64_t sub_1BDBFD320()
{
  return MEMORY[0x1E0D65830]();
}

uint64_t sub_1BDBFD32C()
{
  return MEMORY[0x1E0D65838]();
}

uint64_t sub_1BDBFD338()
{
  return MEMORY[0x1E0D65840]();
}

uint64_t sub_1BDBFD344()
{
  return MEMORY[0x1E0D65848]();
}

uint64_t sub_1BDBFD350()
{
  return MEMORY[0x1E0D65850]();
}

uint64_t sub_1BDBFD35C()
{
  return MEMORY[0x1E0D65860]();
}

uint64_t sub_1BDBFD368()
{
  return MEMORY[0x1E0D65870]();
}

uint64_t sub_1BDBFD374()
{
  return MEMORY[0x1E0D659B0]();
}

uint64_t sub_1BDBFD380()
{
  return MEMORY[0x1E0D659C8]();
}

uint64_t sub_1BDBFD38C()
{
  return MEMORY[0x1E0D11CD8]();
}

uint64_t sub_1BDBFD398()
{
  return MEMORY[0x1E0D11CF8]();
}

uint64_t sub_1BDBFD3A4()
{
  return MEMORY[0x1E0D11D18]();
}

uint64_t sub_1BDBFD3B0()
{
  return MEMORY[0x1E0D11D58]();
}

uint64_t sub_1BDBFD3BC()
{
  return MEMORY[0x1E0D11D88]();
}

uint64_t sub_1BDBFD3C8()
{
  return MEMORY[0x1E0D65A30]();
}

uint64_t sub_1BDBFD3D4()
{
  return MEMORY[0x1E0D65A38]();
}

uint64_t sub_1BDBFD3E0()
{
  return MEMORY[0x1E0D65A40]();
}

uint64_t sub_1BDBFD3EC()
{
  return MEMORY[0x1E0D65A48]();
}

uint64_t sub_1BDBFD3F8()
{
  return MEMORY[0x1E0D12380]();
}

uint64_t sub_1BDBFD404()
{
  return MEMORY[0x1E0D12398]();
}

uint64_t sub_1BDBFD410()
{
  return MEMORY[0x1E0D123A8]();
}

uint64_t sub_1BDBFD41C()
{
  return MEMORY[0x1E0D65A50]();
}

uint64_t sub_1BDBFD428()
{
  return MEMORY[0x1E0D65A58]();
}

uint64_t sub_1BDBFD434()
{
  return MEMORY[0x1E0D65A60]();
}

uint64_t sub_1BDBFD440()
{
  return MEMORY[0x1E0D65A68]();
}

uint64_t sub_1BDBFD44C()
{
  return MEMORY[0x1E0D65A80]();
}

uint64_t sub_1BDBFD458()
{
  return MEMORY[0x1E0D65A88]();
}

uint64_t sub_1BDBFD464()
{
  return MEMORY[0x1E0D65A98]();
}

uint64_t sub_1BDBFD470()
{
  return MEMORY[0x1E0D123B0]();
}

uint64_t sub_1BDBFD47C()
{
  return MEMORY[0x1E0D123C0]();
}

uint64_t sub_1BDBFD488()
{
  return MEMORY[0x1E0D12838]();
}

uint64_t sub_1BDBFD494()
{
  return MEMORY[0x1E0D12850]();
}

uint64_t sub_1BDBFD4A0()
{
  return MEMORY[0x1E0D12858]();
}

uint64_t sub_1BDBFD4AC()
{
  return MEMORY[0x1E0D12868]();
}

uint64_t sub_1BDBFD4B8()
{
  return MEMORY[0x1E0D129D0]();
}

uint64_t sub_1BDBFD4C4()
{
  return MEMORY[0x1E0D12A00]();
}

uint64_t sub_1BDBFD4D0()
{
  return MEMORY[0x1E0D12A48]();
}

uint64_t sub_1BDBFD4DC()
{
  return MEMORY[0x1E0D65AC0]();
}

uint64_t sub_1BDBFD4E8()
{
  return MEMORY[0x1E0D65AD8]();
}

uint64_t sub_1BDBFD4F4()
{
  return MEMORY[0x1E0D12AC0]();
}

uint64_t sub_1BDBFD500()
{
  return MEMORY[0x1E0D12AD8]();
}

uint64_t sub_1BDBFD50C()
{
  return MEMORY[0x1E0D12AE8]();
}

uint64_t sub_1BDBFD518()
{
  return MEMORY[0x1E0D12BB8]();
}

uint64_t sub_1BDBFD524()
{
  return MEMORY[0x1E0D12BC0]();
}

uint64_t sub_1BDBFD530()
{
  return MEMORY[0x1E0D12BC8]();
}

uint64_t sub_1BDBFD53C()
{
  return MEMORY[0x1E0D12BD0]();
}

uint64_t sub_1BDBFD548()
{
  return MEMORY[0x1E0D12BE0]();
}

uint64_t sub_1BDBFD554()
{
  return MEMORY[0x1E0D12BE8]();
}

uint64_t sub_1BDBFD560()
{
  return MEMORY[0x1E0D12C50]();
}

uint64_t sub_1BDBFD56C()
{
  return MEMORY[0x1E0D12C70]();
}

uint64_t sub_1BDBFD578()
{
  return MEMORY[0x1E0DEEFD0]();
}

uint64_t sub_1BDBFD584()
{
  return MEMORY[0x1E0CD10B8]();
}

uint64_t sub_1BDBFD590()
{
  return MEMORY[0x1E0CD10C8]();
}

uint64_t sub_1BDBFD59C()
{
  return MEMORY[0x1E0CD10D0]();
}

uint64_t sub_1BDBFD5A8()
{
  return MEMORY[0x1E0CD1100]();
}

uint64_t sub_1BDBFD5B4()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1BDBFD5C0()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1BDBFD5CC()
{
  return MEMORY[0x1E0DE9E80]();
}

uint64_t sub_1BDBFD5D8()
{
  return MEMORY[0x1E0DE9EC0]();
}

uint64_t sub_1BDBFD5E4()
{
  return MEMORY[0x1E0DE9F78]();
}

uint64_t sub_1BDBFD5F0()
{
  return MEMORY[0x1E0DEA058]();
}

uint64_t sub_1BDBFD5FC()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1BDBFD608()
{
  return MEMORY[0x1E0DEA0F0]();
}

uint64_t sub_1BDBFD614()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1BDBFD620()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1BDBFD62C()
{
  return MEMORY[0x1E0DEA1C8]();
}

uint64_t sub_1BDBFD638()
{
  return MEMORY[0x1E0DEA258]();
}

uint64_t sub_1BDBFD644()
{
  return MEMORY[0x1E0DEA278]();
}

uint64_t sub_1BDBFD650()
{
  return MEMORY[0x1E0DEA2A8]();
}

uint64_t sub_1BDBFD65C()
{
  return MEMORY[0x1E0DF1F68]();
}

uint64_t sub_1BDBFD668()
{
  return MEMORY[0x1E0DEA3A0]();
}

uint64_t sub_1BDBFD674()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1BDBFD680()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1BDBFD68C()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1BDBFD698()
{
  return MEMORY[0x1E0DEA3E0]();
}

uint64_t sub_1BDBFD6A4()
{
  return MEMORY[0x1E0DEA3E8]();
}

uint64_t sub_1BDBFD6B0()
{
  return MEMORY[0x1E0DEA3F0]();
}

uint64_t sub_1BDBFD6BC()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1BDBFD6C8()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1BDBFD6D4()
{
  return MEMORY[0x1E0CB1950]();
}

uint64_t sub_1BDBFD6E0()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1BDBFD6EC()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1BDBFD6F8()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1BDBFD704()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1BDBFD710()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1BDBFD71C()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1BDBFD728()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1BDBFD734()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1BDBFD740()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1BDBFD74C()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1BDBFD758()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1BDBFD764()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1BDBFD770()
{
  return MEMORY[0x1E0DEA668]();
}

uint64_t sub_1BDBFD77C()
{
  return MEMORY[0x1E0DEA688]();
}

uint64_t sub_1BDBFD788()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1BDBFD794()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1BDBFD7A0()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1BDBFD7AC()
{
  return MEMORY[0x1E0DEA7C8]();
}

uint64_t sub_1BDBFD7B8()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1BDBFD7C4()
{
  return MEMORY[0x1E0DEA7F0]();
}

uint64_t sub_1BDBFD7D0()
{
  return MEMORY[0x1E0DEA7F8]();
}

uint64_t sub_1BDBFD7DC()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1BDBFD7E8()
{
  return MEMORY[0x1E0DEA820]();
}

uint64_t sub_1BDBFD7F4()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1BDBFD800()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1BDBFD80C()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1BDBFD818()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1BDBFD824()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1BDBFD830()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1BDBFD83C()
{
  return MEMORY[0x1E0DEA8D0]();
}

uint64_t sub_1BDBFD848()
{
  return MEMORY[0x1E0DEA8E8]();
}

uint64_t sub_1BDBFD854()
{
  return MEMORY[0x1E0DEA8F8]();
}

uint64_t sub_1BDBFD860()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1BDBFD86C()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1BDBFD878()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_1BDBFD884()
{
  return MEMORY[0x1E0DEA958]();
}

uint64_t sub_1BDBFD890()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1BDBFD89C()
{
  return MEMORY[0x1E0DEAA38]();
}

uint64_t sub_1BDBFD8A8()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1BDBFD8B4()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1BDBFD8C0()
{
  return MEMORY[0x1E0D63E70]();
}

uint64_t sub_1BDBFD8CC()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1BDBFD8D8()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t sub_1BDBFD8E4()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_1BDBFD8F0()
{
  return MEMORY[0x1E0DEAAB0]();
}

uint64_t sub_1BDBFD8FC()
{
  return MEMORY[0x1E0DEAAB8]();
}

uint64_t sub_1BDBFD908()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_1BDBFD914()
{
  return MEMORY[0x1E0DEAB28]();
}

uint64_t sub_1BDBFD920()
{
  return MEMORY[0x1E0DEAB38]();
}

uint64_t sub_1BDBFD92C()
{
  return MEMORY[0x1E0DEAC80]();
}

uint64_t sub_1BDBFD938()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1BDBFD944()
{
  return MEMORY[0x1E0DEAC90]();
}

uint64_t sub_1BDBFD950()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1BDBFD95C()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1BDBFD968()
{
  return MEMORY[0x1E0DEACD8]();
}

uint64_t sub_1BDBFD974()
{
  return MEMORY[0x1E0DEAD00]();
}

uint64_t sub_1BDBFD980()
{
  return MEMORY[0x1E0DEAD08]();
}

uint64_t sub_1BDBFD98C()
{
  return MEMORY[0x1E0DEAD10]();
}

uint64_t sub_1BDBFD998()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1BDBFD9A4()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1BDBFD9B0()
{
  return MEMORY[0x1E0DEAD50]();
}

uint64_t sub_1BDBFD9BC()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1BDBFD9C8()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1BDBFD9D4()
{
  return MEMORY[0x1E0CB1AE0]();
}

uint64_t sub_1BDBFD9E0()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1BDBFD9EC()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1BDBFD9F8()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1BDBFDA04()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1BDBFDA10()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1BDBFDA1C()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1BDBFDA28()
{
  return MEMORY[0x1E0DEADF8]();
}

uint64_t sub_1BDBFDA34()
{
  return MEMORY[0x1E0DEAE08]();
}

uint64_t sub_1BDBFDA40()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1BDBFDA4C()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1BDBFDA58()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1BDBFDA64()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1BDBFDA70()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1BDBFDA7C()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1BDBFDA88()
{
  return MEMORY[0x1E0DEAE88]();
}

uint64_t sub_1BDBFDA94()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1BDBFDAA0()
{
  return MEMORY[0x1E0DEAEA0]();
}

uint64_t sub_1BDBFDAAC()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1BDBFDAB8()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_1BDBFDAC4()
{
  return MEMORY[0x1E0DEAF78]();
}

uint64_t sub_1BDBFDAD0()
{
  return MEMORY[0x1E0CB1B28]();
}

uint64_t sub_1BDBFDADC()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1BDBFDAE8()
{
  return MEMORY[0x1E0DF05C0]();
}

uint64_t sub_1BDBFDAF4()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1BDBFDB00()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1BDBFDB0C()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_1BDBFDB18()
{
  return MEMORY[0x1E0DF0620]();
}

uint64_t sub_1BDBFDB24()
{
  return MEMORY[0x1E0DF0630]();
}

uint64_t sub_1BDBFDB30()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_1BDBFDB3C()
{
  return MEMORY[0x1E0DF0698]();
}

uint64_t sub_1BDBFDB48()
{
  return MEMORY[0x1E0DF06B8]();
}

uint64_t sub_1BDBFDB54()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1BDBFDB60()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1BDBFDB6C()
{
  return MEMORY[0x1E0DF06F8]();
}

uint64_t sub_1BDBFDB78()
{
  return MEMORY[0x1E0DF0700]();
}

uint64_t sub_1BDBFDB84()
{
  return MEMORY[0x1E0DF0728]();
}

uint64_t sub_1BDBFDB90()
{
  return MEMORY[0x1E0DF0730]();
}

uint64_t sub_1BDBFDB9C()
{
  return MEMORY[0x1E0DF0738]();
}

uint64_t sub_1BDBFDBA8()
{
  return MEMORY[0x1E0DF0740]();
}

uint64_t sub_1BDBFDBB4()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1BDBFDBC0()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1BDBFDBCC()
{
  return MEMORY[0x1E0DF0770]();
}

uint64_t sub_1BDBFDBD8()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_1BDBFDBE4()
{
  return MEMORY[0x1E0DF07E0]();
}

uint64_t sub_1BDBFDBF0()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t sub_1BDBFDBFC()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t sub_1BDBFDC08()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_1BDBFDC14()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1BDBFDC20()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t sub_1BDBFDC2C()
{
  return MEMORY[0x1E0DF0950]();
}

uint64_t sub_1BDBFDC38()
{
  return MEMORY[0x1E0DF0958]();
}

uint64_t sub_1BDBFDC44()
{
  return MEMORY[0x1E0DF0968]();
}

uint64_t sub_1BDBFDC50()
{
  return MEMORY[0x1E0DF0978]();
}

uint64_t sub_1BDBFDC5C()
{
  return MEMORY[0x1E0DF0980]();
}

uint64_t sub_1BDBFDC68()
{
  return MEMORY[0x1E0DF0990]();
}

uint64_t sub_1BDBFDC74()
{
  return MEMORY[0x1E0DF09A8]();
}

uint64_t sub_1BDBFDC80()
{
  return MEMORY[0x1E0DF09D0]();
}

uint64_t sub_1BDBFDC8C()
{
  return MEMORY[0x1E0DF0A08]();
}

uint64_t sub_1BDBFDC98()
{
  return MEMORY[0x1E0DF0A68]();
}

uint64_t sub_1BDBFDCA4()
{
  return MEMORY[0x1E0DF0A70]();
}

uint64_t sub_1BDBFDCB0()
{
  return MEMORY[0x1E0DF0A88]();
}

uint64_t sub_1BDBFDCBC()
{
  return MEMORY[0x1E0DF0A90]();
}

uint64_t sub_1BDBFDCC8()
{
  return MEMORY[0x1E0DF0AD8]();
}

uint64_t sub_1BDBFDCD4()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_1BDBFDCE0()
{
  return MEMORY[0x1E0CB1B60]();
}

uint64_t sub_1BDBFDCEC()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1BDBFDCF8()
{
  return MEMORY[0x1E0DEB120]();
}

uint64_t sub_1BDBFDD04()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1BDBFDD10()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1BDBFDD1C()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1BDBFDD28()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1BDBFDD34()
{
  return MEMORY[0x1E0DEB2A8]();
}

uint64_t sub_1BDBFDD40()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1BDBFDD4C()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_1BDBFDD58()
{
  return MEMORY[0x1E0DEB3B0]();
}

uint64_t sub_1BDBFDD64()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1BDBFDD70()
{
  return MEMORY[0x1E0CB1C20]();
}

uint64_t sub_1BDBFDD7C()
{
  return MEMORY[0x1E0DEB4F8]();
}

uint64_t sub_1BDBFDD88()
{
  return MEMORY[0x1E0DEB500]();
}

uint64_t sub_1BDBFDD94()
{
  return MEMORY[0x1E0DEB508]();
}

uint64_t sub_1BDBFDDA0()
{
  return MEMORY[0x1E0DEB510]();
}

uint64_t sub_1BDBFDDAC()
{
  return MEMORY[0x1E0DEB518]();
}

uint64_t sub_1BDBFDDB8()
{
  return MEMORY[0x1E0DEB520]();
}

uint64_t sub_1BDBFDDC4()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1BDBFDDD0()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1BDBFDDDC()
{
  return MEMORY[0x1E0DEB598]();
}

uint64_t sub_1BDBFDDE8()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1BDBFDDF4()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1BDBFDE00()
{
  return MEMORY[0x1E0DEB5C8]();
}

uint64_t sub_1BDBFDE0C()
{
  return MEMORY[0x1E0DEB5E8]();
}

uint64_t sub_1BDBFDE18()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_1BDBFDE24()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1BDBFDE30()
{
  return MEMORY[0x1E0DEB6C0]();
}

uint64_t sub_1BDBFDE3C()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1BDBFDE48()
{
  return MEMORY[0x1E0DEB700]();
}

uint64_t sub_1BDBFDE54()
{
  return MEMORY[0x1E0DEB738]();
}

uint64_t sub_1BDBFDE60()
{
  return MEMORY[0x1E0DEB818]();
}

uint64_t sub_1BDBFDE6C()
{
  return MEMORY[0x1E0CB1C58]();
}

uint64_t sub_1BDBFDE78()
{
  return MEMORY[0x1E0DEB848]();
}

uint64_t sub_1BDBFDE84()
{
  return MEMORY[0x1E0DEF190]();
}

uint64_t sub_1BDBFDE90()
{
  return MEMORY[0x1E0DEFC40]();
}

uint64_t sub_1BDBFDE9C()
{
  return MEMORY[0x1E0CB1C90]();
}

uint64_t sub_1BDBFDEA8()
{
  return MEMORY[0x1E0D111A8]();
}

uint64_t sub_1BDBFDEB4()
{
  return MEMORY[0x1E0CB1DB8]();
}

uint64_t sub_1BDBFDEC0()
{
  return MEMORY[0x1E0CB1DD0]();
}

uint64_t sub_1BDBFDECC()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1BDBFDED8()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1BDBFDEE4()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1BDBFDEF0()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1BDBFDEFC()
{
  return MEMORY[0x1E0DEF1D0]();
}

uint64_t sub_1BDBFDF08()
{
  return MEMORY[0x1E0DEF1D8]();
}

uint64_t sub_1BDBFDF14()
{
  return MEMORY[0x1E0DEF1E0]();
}

uint64_t sub_1BDBFDF20()
{
  return MEMORY[0x1E0DEF1F0]();
}

uint64_t sub_1BDBFDF2C()
{
  return MEMORY[0x1E0DEF1F8]();
}

uint64_t sub_1BDBFDF38()
{
  return MEMORY[0x1E0DEF218]();
}

uint64_t sub_1BDBFDF44()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1BDBFDF50()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1BDBFDF5C()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1BDBFDF68()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1BDBFDF74()
{
  return MEMORY[0x1E0C94618]();
}

uint64_t sub_1BDBFDF80()
{
  return MEMORY[0x1E0CB1ED8]();
}

uint64_t sub_1BDBFDF8C()
{
  return MEMORY[0x1E0CB1EE0]();
}

uint64_t sub_1BDBFDF98()
{
  return MEMORY[0x1E0CB1EF0]();
}

uint64_t sub_1BDBFDFA4()
{
  return MEMORY[0x1E0CB1F08]();
}

uint64_t sub_1BDBFDFB0()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t sub_1BDBFDFBC()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t sub_1BDBFDFC8()
{
  return MEMORY[0x1E0DEFA68]();
}

uint64_t sub_1BDBFDFD4()
{
  return MEMORY[0x1E0DEFA70]();
}

uint64_t sub_1BDBFDFE0()
{
  return MEMORY[0x1E0C977A8]();
}

uint64_t sub_1BDBFDFEC()
{
  return MEMORY[0x1E0C977B0]();
}

uint64_t sub_1BDBFDFF8()
{
  return MEMORY[0x1E0C977B8]();
}

uint64_t sub_1BDBFE004()
{
  return MEMORY[0x1E0C977D8]();
}

uint64_t sub_1BDBFE010()
{
  return MEMORY[0x1E0D63E80]();
}

uint64_t sub_1BDBFE01C()
{
  return MEMORY[0x1E0D63E88]();
}

uint64_t sub_1BDBFE028()
{
  return MEMORY[0x1E0C91D48]();
}

uint64_t sub_1BDBFE034()
{
  return MEMORY[0x1E0C91D58]();
}

uint64_t sub_1BDBFE040()
{
  return MEMORY[0x1E0DEF340]();
}

uint64_t sub_1BDBFE04C()
{
  return MEMORY[0x1E0D11210]();
}

uint64_t sub_1BDBFE058()
{
  return MEMORY[0x1E0CB20D0]();
}

uint64_t sub_1BDBFE064()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1BDBFE070()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1BDBFE07C()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_1BDBFE088()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t sub_1BDBFE094()
{
  return MEMORY[0x1E0CB2188]();
}

uint64_t sub_1BDBFE0A0()
{
  return MEMORY[0x1E0CB2190]();
}

uint64_t sub_1BDBFE0AC()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1BDBFE0B8()
{
  return MEMORY[0x1E0DEBA00]();
}

uint64_t sub_1BDBFE0C4()
{
  return MEMORY[0x1E0DEBA10]();
}

uint64_t sub_1BDBFE0D0()
{
  return MEMORY[0x1E0DEBA80]();
}

uint64_t sub_1BDBFE0DC()
{
  return MEMORY[0x1E0DEBAD8]();
}

uint64_t sub_1BDBFE0E8()
{
  return MEMORY[0x1E0DEBB58]();
}

uint64_t sub_1BDBFE0F4()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1BDBFE100()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1BDBFE10C()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1BDBFE118()
{
  return MEMORY[0x1E0CB2400]();
}

uint64_t sub_1BDBFE124()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1BDBFE130()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1BDBFE13C()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_1BDBFE148()
{
  return MEMORY[0x1E0CB24B0]();
}

uint64_t sub_1BDBFE154()
{
  return MEMORY[0x1E0CB24B8]();
}

uint64_t sub_1BDBFE160()
{
  return MEMORY[0x1E0CB24C8]();
}

uint64_t sub_1BDBFE16C()
{
  return MEMORY[0x1E0CB24D8]();
}

uint64_t sub_1BDBFE178()
{
  return MEMORY[0x1E0DEFF58]();
}

uint64_t sub_1BDBFE184()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1BDBFE190()
{
  return MEMORY[0x1E0DEBE60]();
}

uint64_t sub_1BDBFE19C()
{
  return MEMORY[0x1E0DEBF30]();
}

uint64_t sub_1BDBFE1A8()
{
  return MEMORY[0x1E0DEBF58]();
}

uint64_t sub_1BDBFE1B4()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1BDBFE1C0()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1BDBFE1CC()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1BDBFE1D8()
{
  return MEMORY[0x1E0DEC0A8]();
}

uint64_t sub_1BDBFE1E4()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1BDBFE1F0()
{
  return MEMORY[0x1E0DEC0B8]();
}

uint64_t sub_1BDBFE1FC()
{
  return MEMORY[0x1E0DEC0C8]();
}

uint64_t sub_1BDBFE208()
{
  return MEMORY[0x1E0DEC0D0]();
}

uint64_t sub_1BDBFE214()
{
  return MEMORY[0x1E0DEC0D8]();
}

uint64_t sub_1BDBFE220()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1BDBFE22C()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1BDBFE238()
{
  return MEMORY[0x1E0DEC100]();
}

uint64_t sub_1BDBFE244()
{
  return MEMORY[0x1E0DEC108]();
}

uint64_t sub_1BDBFE250()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1BDBFE25C()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_1BDBFE268()
{
  return MEMORY[0x1E0DEC120]();
}

uint64_t sub_1BDBFE274()
{
  return MEMORY[0x1E0DEC128]();
}

uint64_t sub_1BDBFE280()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1BDBFE28C()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1BDBFE298()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1BDBFE2A4()
{
  return MEMORY[0x1E0DEC228]();
}

uint64_t sub_1BDBFE2B0()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1BDBFE2BC()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1BDBFE2C8()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1BDBFE2D4()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1BDBFE2E0()
{
  return MEMORY[0x1E0DEC268]();
}

uint64_t sub_1BDBFE2EC()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1BDBFE2F8()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1BDBFE304()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1BDBFE310()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1BDBFE31C()
{
  return MEMORY[0x1E0DEC2C0]();
}

uint64_t sub_1BDBFE328()
{
  return MEMORY[0x1E0DEC2D0]();
}

uint64_t sub_1BDBFE334()
{
  return MEMORY[0x1E0DEC2F0]();
}

uint64_t sub_1BDBFE340()
{
  return MEMORY[0x1E0DEC300]();
}

uint64_t sub_1BDBFE34C()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_1BDBFE358()
{
  return MEMORY[0x1E0DEC390]();
}

uint64_t sub_1BDBFE364()
{
  return MEMORY[0x1E0DEC3A8]();
}

uint64_t sub_1BDBFE370()
{
  return MEMORY[0x1E0DEC3B0]();
}

uint64_t sub_1BDBFE37C()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1BDBFE388()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1BDBFE394()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1BDBFE3A0()
{
  return MEMORY[0x1E0DEC438]();
}

uint64_t sub_1BDBFE3AC()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1BDBFE3B8()
{
  return MEMORY[0x1E0DEC478]();
}

uint64_t sub_1BDBFE3C4()
{
  return MEMORY[0x1E0DEC488]();
}

uint64_t sub_1BDBFE3D0()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1BDBFE3DC()
{
  return MEMORY[0x1E0DEC4B8]();
}

uint64_t sub_1BDBFE3E8()
{
  return MEMORY[0x1E0DEC4D0]();
}

uint64_t sub_1BDBFE3F4()
{
  return MEMORY[0x1E0DEC4E0]();
}

uint64_t sub_1BDBFE400()
{
  return MEMORY[0x1E0DEC508]();
}

uint64_t sub_1BDBFE40C()
{
  return MEMORY[0x1E0DEC518]();
}

uint64_t sub_1BDBFE418()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1BDBFE424()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1BDBFE430()
{
  return MEMORY[0x1E0DEC5A8]();
}

uint64_t sub_1BDBFE43C()
{
  return MEMORY[0x1E0DEC5F8]();
}

uint64_t sub_1BDBFE448()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1BDBFE454()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1BDBFE460()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1BDBFE46C()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1BDBFE478()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1BDBFE484()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1BDBFE490()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1BDBFE49C()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1BDBFE4A8()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1BDBFE4B4()
{
  return MEMORY[0x1E0DEC888]();
}

uint64_t sub_1BDBFE4C0()
{
  return MEMORY[0x1E0DEC8C0]();
}

uint64_t sub_1BDBFE4CC()
{
  return MEMORY[0x1E0DEC8C8]();
}

uint64_t sub_1BDBFE4D8()
{
  return MEMORY[0x1E0DEC8D0]();
}

uint64_t sub_1BDBFE4E4()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1BDBFE4F0()
{
  return MEMORY[0x1E0DEC8F8]();
}

uint64_t sub_1BDBFE4FC()
{
  return MEMORY[0x1E0DEC970]();
}

uint64_t sub_1BDBFE508()
{
  return MEMORY[0x1E0DEC990]();
}

uint64_t sub_1BDBFE514()
{
  return MEMORY[0x1E0DECAB0]();
}

uint64_t sub_1BDBFE520()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1BDBFE52C()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1BDBFE538()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_1BDBFE544()
{
  return MEMORY[0x1E0DECC38]();
}

uint64_t sub_1BDBFE550()
{
  return MEMORY[0x1E0DECC40]();
}

uint64_t sub_1BDBFE55C()
{
  return MEMORY[0x1E0DECC48]();
}

uint64_t sub_1BDBFE568()
{
  return MEMORY[0x1E0DECC58]();
}

uint64_t sub_1BDBFE574()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1BDBFE580()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1BDBFE58C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1BDBFE598()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1BDBFE5A4()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1BDBFE5B0()
{
  return MEMORY[0x1E0DF0CB8]();
}

uint64_t sub_1BDBFE5BC()
{
  return MEMORY[0x1E0DECD90]();
}

uint64_t sub_1BDBFE5C8()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1BDBFE5D4()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1BDBFE5E0()
{
  return MEMORY[0x1E0DECF30]();
}

uint64_t sub_1BDBFE5EC()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1BDBFE5F8()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1BDBFE604()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1BDBFE610()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1BDBFE61C()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1BDBFE628()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1BDBFE634()
{
  return MEMORY[0x1E0DECF90]();
}

uint64_t sub_1BDBFE640()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1BDBFE64C()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1BDBFE658()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1BDBFE664()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1BDBFE670()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1BDBFE67C()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1BDBFE688()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1BDBFE694()
{
  return MEMORY[0x1E0DED058]();
}

uint64_t sub_1BDBFE6A0()
{
  return MEMORY[0x1E0DED068]();
}

uint64_t sub_1BDBFE6AC()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1BDBFE6B8()
{
  return MEMORY[0x1E0DED078]();
}

uint64_t sub_1BDBFE6C4()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1BDBFE6D0()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1BDBFE6DC()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1BDBFE6E8()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1BDBFE6F4()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1BDBFE700()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1BDBFE70C()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1BDBFE718()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1BDBFE724()
{
  return MEMORY[0x1E0DED130]();
}

uint64_t sub_1BDBFE730()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1BDBFE73C()
{
  return MEMORY[0x1E0DED1A0]();
}

uint64_t sub_1BDBFE748()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1BDBFE754()
{
  return MEMORY[0x1E0DED1B8]();
}

uint64_t sub_1BDBFE760()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1BDBFE76C()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1BDBFE778()
{
  return MEMORY[0x1E0DED258]();
}

uint64_t sub_1BDBFE784()
{
  return MEMORY[0x1E0DED260]();
}

uint64_t sub_1BDBFE790()
{
  return MEMORY[0x1E0DED290]();
}

uint64_t sub_1BDBFE79C()
{
  return MEMORY[0x1E0DED2B8]();
}

uint64_t sub_1BDBFE7A8()
{
  return MEMORY[0x1E0DED2C8]();
}

uint64_t sub_1BDBFE7B4()
{
  return MEMORY[0x1E0DED2D0]();
}

uint64_t sub_1BDBFE7C0()
{
  return MEMORY[0x1E0DED2D8]();
}

uint64_t sub_1BDBFE7CC()
{
  return MEMORY[0x1E0DED2E8]();
}

uint64_t sub_1BDBFE7D8()
{
  return MEMORY[0x1E0DED2F0]();
}

uint64_t sub_1BDBFE7E4()
{
  return MEMORY[0x1E0DED2F8]();
}

uint64_t sub_1BDBFE7F0()
{
  return MEMORY[0x1E0DED318]();
}

uint64_t sub_1BDBFE7FC()
{
  return MEMORY[0x1E0DED340]();
}

uint64_t sub_1BDBFE808()
{
  return MEMORY[0x1E0DED350]();
}

uint64_t sub_1BDBFE814()
{
  return MEMORY[0x1E0DED358]();
}

uint64_t sub_1BDBFE820()
{
  return MEMORY[0x1E0DED3A0]();
}

uint64_t sub_1BDBFE82C()
{
  return MEMORY[0x1E0DED3D0]();
}

uint64_t sub_1BDBFE838()
{
  return MEMORY[0x1E0DED3F8]();
}

uint64_t sub_1BDBFE844()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_1BDBFE850()
{
  return MEMORY[0x1E0DED510]();
}

uint64_t sub_1BDBFE85C()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t sub_1BDBFE868()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1BDBFE874()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1BDBFE880()
{
  return MEMORY[0x1E0DF0E78]();
}

uint64_t sub_1BDBFE88C()
{
  return MEMORY[0x1E0DED658]();
}

uint64_t sub_1BDBFE898()
{
  return MEMORY[0x1E0DED698]();
}

uint64_t sub_1BDBFE8A4()
{
  return MEMORY[0x1E0DED6A0]();
}

uint64_t sub_1BDBFE8B0()
{
  return MEMORY[0x1E0DED718]();
}

uint64_t sub_1BDBFE8BC()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_1BDBFE8C8()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1BDBFE8D4()
{
  return MEMORY[0x1E0DED788]();
}

uint64_t sub_1BDBFE8E0()
{
  return MEMORY[0x1E0DED7D0]();
}

uint64_t sub_1BDBFE8EC()
{
  return MEMORY[0x1E0DED7D8]();
}

uint64_t sub_1BDBFE8F8()
{
  return MEMORY[0x1E0DED7E0]();
}

uint64_t sub_1BDBFE904()
{
  return MEMORY[0x1E0DED7F0]();
}

uint64_t sub_1BDBFE910()
{
  return MEMORY[0x1E0DED7F8]();
}

uint64_t sub_1BDBFE91C()
{
  return MEMORY[0x1E0DED800]();
}

uint64_t sub_1BDBFE928()
{
  return MEMORY[0x1E0DED820]();
}

uint64_t sub_1BDBFE934()
{
  return MEMORY[0x1E0DED848]();
}

uint64_t sub_1BDBFE940()
{
  return MEMORY[0x1E0DED858]();
}

uint64_t sub_1BDBFE94C()
{
  return MEMORY[0x1E0DED860]();
}

uint64_t sub_1BDBFE958()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1BDBFE964()
{
  return MEMORY[0x1E0DED9C0]();
}

uint64_t sub_1BDBFE970()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1BDBFE97C()
{
  return MEMORY[0x1E0DEDA30]();
}

uint64_t sub_1BDBFE988()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1BDBFE994()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1BDBFE9A0()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1BDBFE9AC()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1BDBFE9B8()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1BDBFE9C4()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1BDBFE9D0()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1BDBFE9DC()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1BDBFE9E8()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1BDBFE9F4()
{
  return MEMORY[0x1E0CB2660]();
}

uint64_t sub_1BDBFEA00()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1BDBFEA0C()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1BDBFEA18()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1BDBFEA24()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1BDBFEA30()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1BDBFEA3C()
{
  return MEMORY[0x1E0DEDF80]();
}

uint64_t sub_1BDBFEA48()
{
  return MEMORY[0x1E0DEDFC8]();
}

uint64_t sub_1BDBFEA54()
{
  return MEMORY[0x1E0DEDFE0]();
}

uint64_t sub_1BDBFEA60()
{
  return MEMORY[0x1E0DEDFF0]();
}

uint64_t sub_1BDBFEA6C()
{
  return MEMORY[0x1E0DEDFF8]();
}

uint64_t sub_1BDBFEA78()
{
  return MEMORY[0x1E0DEE000]();
}

uint64_t sub_1BDBFEA84()
{
  return MEMORY[0x1E0DEE020]();
}

uint64_t sub_1BDBFEA90()
{
  return MEMORY[0x1E0DEE030]();
}

uint64_t sub_1BDBFEA9C()
{
  return MEMORY[0x1E0DEE210]();
}

uint64_t sub_1BDBFEAA8()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1BDBFEAB4()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1BDBFEAC0()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1BDBFEACC()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1BDBFEAD8()
{
  return MEMORY[0x1E0DEE298]();
}

uint64_t sub_1BDBFEAE4()
{
  return MEMORY[0x1E0CB2740]();
}

uint64_t sub_1BDBFEAF0()
{
  return MEMORY[0x1E0CB2750]();
}

uint64_t sub_1BDBFEAFC()
{
  return MEMORY[0x1E0CB2760]();
}

uint64_t sub_1BDBFEB08()
{
  return MEMORY[0x1E0CB2770]();
}

uint64_t sub_1BDBFEB14()
{
  return MEMORY[0x1E0CB2848]();
}

uint64_t sub_1BDBFEB20()
{
  return MEMORY[0x1E0DEE750]();
}

uint64_t sub_1BDBFEB2C()
{
  return MEMORY[0x1E0DEE8B8]();
}

uint64_t sub_1BDBFEB38()
{
  return MEMORY[0x1E0DEE8C8]();
}

uint64_t sub_1BDBFEB44()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1BDBFEB50()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1BDBFEB5C()
{
  return MEMORY[0x1E0DEE978]();
}

OSStatus AudioFormatGetProperty(AudioFormatPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return MEMORY[0x1E0CFF510](*(_QWORD *)&inPropertyID, *(_QWORD *)&inSpecifierSize, inSpecifier, ioPropertyDataSize, outPropertyData);
}

OSStatus AudioFormatGetPropertyInfo(AudioFormatPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 *outPropertyDataSize)
{
  return MEMORY[0x1E0CFF518](*(_QWORD *)&inPropertyID, *(_QWORD *)&inSpecifierSize, inSpecifier, outPropertyDataSize);
}

uint64_t CCCryptorGCMOneshotDecrypt()
{
  return MEMORY[0x1E0C800D8]();
}

uint64_t CCCryptorGCMOneshotEncrypt()
{
  return MEMORY[0x1E0C800E0]();
}

int CCKeyDerivationPBKDF(CCPBKDFAlgorithm algorithm, const char *password, size_t passwordLen, const uint8_t *salt, size_t saltLen, CCPseudoRandomAlgorithm prf, unsigned int rounds, uint8_t *derivedKey, size_t derivedKeyLen)
{
  return MEMORY[0x1E0C80240](*(_QWORD *)&algorithm, password, passwordLen, salt, saltLen, *(_QWORD *)&prf, *(_QWORD *)&rounds, derivedKey);
}

int CCSymmetricKeyUnwrap(CCWrappingAlgorithm algorithm, const uint8_t *iv, const size_t ivLen, const uint8_t *kek, size_t kekLen, const uint8_t *wrappedKey, size_t wrappedKeyLen, uint8_t *rawKey, size_t *rawKeyLen)
{
  return MEMORY[0x1E0C802C8](*(_QWORD *)&algorithm, iv, ivLen, kek, kekLen, wrappedKey, wrappedKeyLen, rawKey);
}

int CCSymmetricKeyWrap(CCWrappingAlgorithm algorithm, const uint8_t *iv, const size_t ivLen, const uint8_t *kek, size_t kekLen, const uint8_t *rawKey, size_t rawKeyLen, uint8_t *wrappedKey, size_t *wrappedKeyLen)
{
  return MEMORY[0x1E0C802D0](*(_QWORD *)&algorithm, iv, ivLen, kek, kekLen, rawKey, rawKeyLen, wrappedKey);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1E0C97E90](arg);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x1E0C983A0](allocator, bytes, length);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

CFNumberType CFNumberGetType(CFNumberRef number)
{
  return MEMORY[0x1E0C989A8](number);
}

Boolean CFNumberIsFloatType(CFNumberRef number)
{
  return MEMORY[0x1E0C989D0](number);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1E0C98A30](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A60](key, applicationID, userName, hostName);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

unint64_t CFStringConvertEncodingToNSStringEncoding(CFStringEncoding encoding)
{
  return MEMORY[0x1E0C98F30](*(_QWORD *)&encoding);
}

CFStringEncoding CFStringConvertIANACharSetNameToEncoding(CFStringRef theString)
{
  return MEMORY[0x1E0C98F40](theString);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAB0](retstr, t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAE0](retstr, tx, ty);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1E0C9BC78](space, components);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  CGFloat result;

  MEMORY[0x1E0C9BCF8](color);
  return result;
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BD00](color);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1E0C9BD08](color);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x1E0C9BD20](color);
}

CFTypeID CGColorGetTypeID(void)
{
  return MEMORY[0x1E0C9BD38]();
}

void CGColorRelease(CGColorRef color)
{
  MEMORY[0x1E0C9BD60](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceGray(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDE8]();
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef space)
{
  return MEMORY[0x1E0C9BEC8](space);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
  MEMORY[0x1E0C9BF30](space);
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
  MEMORY[0x1E0C9C050](c, transform);
}

uint64_t CGContextDrawPDFPageWithAnnotations()
{
  return MEMORY[0x1E0C9C1A8]();
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGAffineTransform *__cdecl CGContextGetCTM(CGAffineTransform *__return_ptr retstr, CGContextRef c)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9C250](retstr, c);
}

void CGContextRelease(CGContextRef c)
{
  MEMORY[0x1E0C9C340](c);
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
  MEMORY[0x1E0C9C390](c, sx, sy);
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C408](c, color);
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
  MEMORY[0x1E0C9C588](c, tx, ty);
}

CGDataConsumerRef CGDataConsumerCreateWithCFData(CFMutableDataRef data)
{
  return (CGDataConsumerRef)MEMORY[0x1E0C9C5B0](data);
}

void CGDataConsumerRelease(CGDataConsumerRef consumer)
{
  MEMORY[0x1E0C9C5D0](consumer);
}

void CGImageDestinationAddImageFromSource(CGImageDestinationRef idst, CGImageSourceRef isrc, size_t index, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC318](idst, isrc, index, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC338](data, type, count, options);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC348](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1E0CBC358](idst);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBC530](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC590](data, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC5C0](url, options);
}

CFStringRef CGImageSourceGetType(CGImageSourceRef isrc)
{
  return (CFStringRef)MEMORY[0x1E0CBC618](isrc);
}

size_t CGPDFArrayGetCount(CGPDFArrayRef array)
{
  return MEMORY[0x1E0C9CE88](array);
}

BOOL CGPDFArrayGetString(CGPDFArrayRef array, size_t index, CGPDFStringRef *value)
{
  return MEMORY[0x1E0C9CEB0](array, index, value);
}

void CGPDFContextBeginPage(CGContextRef context, CFDictionaryRef pageInfo)
{
  MEMORY[0x1E0C9CEC0](context, pageInfo);
}

void CGPDFContextClose(CGContextRef context)
{
  MEMORY[0x1E0C9CEC8](context);
}

CGContextRef CGPDFContextCreate(CGDataConsumerRef consumer, const CGRect *mediaBox, CFDictionaryRef auxiliaryInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9CED0](consumer, mediaBox, auxiliaryInfo);
}

CGContextRef CGPDFContextCreateWithURL(CFURLRef url, const CGRect *mediaBox, CFDictionaryRef auxiliaryInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9CED8](url, mediaBox, auxiliaryInfo);
}

void CGPDFContextEndPage(CGContextRef context)
{
  MEMORY[0x1E0C9CEE0](context);
}

BOOL CGPDFDictionaryGetArray(CGPDFDictionaryRef dict, const char *key, CGPDFArrayRef *value)
{
  return MEMORY[0x1E0C9CEF8](dict, key, value);
}

BOOL CGPDFDictionaryGetString(CGPDFDictionaryRef dict, const char *key, CGPDFStringRef *value)
{
  return MEMORY[0x1E0C9CF28](dict, key, value);
}

CGPDFDocumentRef CGPDFDocumentCreateWithURL(CFURLRef url)
{
  return (CGPDFDocumentRef)MEMORY[0x1E0C9CF60](url);
}

CGPDFDictionaryRef CGPDFDocumentGetInfo(CGPDFDocumentRef document)
{
  return (CGPDFDictionaryRef)MEMORY[0x1E0C9CF90](document);
}

BOOL CGPDFDocumentIsEncrypted(CGPDFDocumentRef document)
{
  return MEMORY[0x1E0C9CFB0](document);
}

void CGPDFDocumentRelease(CGPDFDocumentRef document)
{
  MEMORY[0x1E0C9CFC8](document);
}

uint64_t CGPDFPageCopyString()
{
  return MEMORY[0x1E0C9D080]();
}

CGRect CGPDFPageGetBoxRect(CGPDFPageRef page, CGPDFBox box)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D090](page, *(_QWORD *)&box);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

CFStringRef CGPDFStringCopyTextString(CGPDFStringRef string)
{
  return (CFStringRef)MEMORY[0x1E0C9D268](string);
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D548](t, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D5F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D5F8]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x1E0C9D618]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D640]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

uint64_t CKDatabaseScopeString()
{
  return MEMORY[0x1E0C94778]();
}

uint64_t CKOperationGroupTransferSizeForBytes()
{
  return MEMORY[0x1E0C94910]();
}

uint64_t CKStringFromAccountStatus()
{
  return MEMORY[0x1E0C94AC8]();
}

OSStatus CMAudioSampleBufferCreateWithPacketDescriptions(CFAllocatorRef allocator, CMBlockBufferRef dataBuffer, Boolean dataReady, CMSampleBufferMakeDataReadyCallback makeDataReadyCallback, void *makeDataReadyRefcon, CMFormatDescriptionRef formatDescription, CMItemCount numSamples, CMTime *presentationTimeStamp, const AudioStreamPacketDescription *packetDescriptions, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1E0C9EAE8](allocator, dataBuffer, dataReady, makeDataReadyCallback, makeDataReadyRefcon, formatDescription, numSamples, presentationTimeStamp);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  Float64 result;

  MEMORY[0x1E0C9F310](time);
  return result;
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return (CMTime *)MEMORY[0x1E0C9F318](retstr, value, *(_QWORD *)&timescale);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return (CMTime *)MEMORY[0x1E0C9F330](retstr, *(_QWORD *)&preferredTimescale, seconds);
}

CMTime *__cdecl CMTimeRangeGetEnd(CMTime *__return_ptr retstr, CMTimeRange *range)
{
  return (CMTime *)MEMORY[0x1E0C9F3D0](retstr, range);
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x1E0CFA6C0]();
}

uint64_t ICCGColorEquivalentToColor()
{
  return MEMORY[0x1E0D63F00]();
}

uint64_t ICCheckedDynamicCast()
{
  return MEMORY[0x1E0D63F10]();
}

uint64_t ICCheckedProtocolCast()
{
  return MEMORY[0x1E0D63F18]();
}

uint64_t ICDataStoreServiceBundleIdentifier()
{
  return MEMORY[0x1E0D63F30]();
}

uint64_t ICDynamicCast()
{
  return MEMORY[0x1E0D63F40]();
}

uint64_t ICEditorExtensionBundleIdentifier()
{
  return MEMORY[0x1E0D63F48]();
}

uint64_t ICGenericError()
{
  return MEMORY[0x1E0D63F78]();
}

uint64_t ICGroupContainerIdentifier()
{
  return MEMORY[0x1E0D63F80]();
}

uint64_t ICIntentsExtensionBundleIdentifier()
{
  return MEMORY[0x1E0D63F88]();
}

uint64_t ICInternalSettingsGetBundleBoolSettingValue()
{
  return MEMORY[0x1E0D63FA0]();
}

uint64_t ICInternalSettingsIsAudioMastihaEnabled()
{
  return MEMORY[0x1E0D63FC8]();
}

uint64_t ICInternalSettingsIsCollapsibleSectionsEnabled()
{
  return MEMORY[0x1E0D63FE0]();
}

uint64_t ICInternalSettingsIsLockedNotesV1NeoEnabled()
{
  return MEMORY[0x1E0D64010]();
}

uint64_t ICInternalSettingsIsOnenessUnlockEnabled()
{
  return MEMORY[0x1E0D64038]();
}

uint64_t ICInternalSettingsIsPDFsInNotesEnabled()
{
  return MEMORY[0x1E0D64040]();
}

uint64_t ICInternalSettingsIsSpotlightSearchSuggestionsEnabled()
{
  return MEMORY[0x1E0D64060]();
}

uint64_t ICInternalSettingsIsTracingEnabled()
{
  return MEMORY[0x1E0D64078]();
}

uint64_t ICInternalSettingsShouldDisableTranscriptPostProcessing()
{
  return MEMORY[0x1E0D64088]();
}

uint64_t ICInternalSettingsShouldPostProcessOnlyTranscriptParagraphs()
{
  return MEMORY[0x1E0D64090]();
}

uint64_t ICIsSandboxModeEnabled()
{
  return MEMORY[0x1E0D64098]();
}

uint64_t ICKeyPathFromSelector()
{
  return MEMORY[0x1E0D640A8]();
}

uint64_t ICNotesAppBundleIdentifier()
{
  return MEMORY[0x1E0D640E0]();
}

uint64_t ICProtocolCast()
{
  return MEMORY[0x1E0D640F8]();
}

uint64_t ICSettingsBundleID()
{
  return MEMORY[0x1E0D64118]();
}

uint64_t ICSharedFrameworkBundleIdentifier()
{
  return MEMORY[0x1E0D64128]();
}

uint64_t ICSharingExtensionBundleIdentifier()
{
  return MEMORY[0x1E0D64130]();
}

uint64_t ICTestHostBundleIdentifier()
{
  return MEMORY[0x1E0D64148]();
}

uint64_t ICUseCoreDataCoreSpotlightIntegration()
{
  return MEMORY[0x1E0D64158]();
}

uint64_t ICVerboseSearchLogging()
{
  return MEMORY[0x1E0D64160]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x1E0DE2C00]();
}

uint64_t MobileGestalt_get_wapiCapability()
{
  return MEMORY[0x1E0DE2C80]();
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2;
  NSUInteger v3;
  NSRange result;

  v2 = MEMORY[0x1E0CB2C58](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

uint64_t NSStringFromNotesVersion()
{
  return MEMORY[0x1E0D64168]();
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1E0CB3220](range.location, range.length);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

NSRange NSUnionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2;
  NSUInteger v3;
  NSRange result;

  v2 = MEMORY[0x1E0CB3400](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef allocator, CFTypeRef protection, SecAccessControlCreateFlags flags, CFErrorRef *error)
{
  return (SecAccessControlRef)MEMORY[0x1E0CD5EA8](allocator, protection, flags, error);
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6290](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6298](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x1E0CD62A0](query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x1E0CD62D8](query, attributesToUpdate);
}

uint64_t TSUDeviceRGBColorSpace()
{
  return MEMORY[0x1E0D64380]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1E0DE4288](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1E0DE4388](this);
}

size_t std::__next_prime(size_t __n)
{
  return MEMORY[0x1E0DE43E8](__n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1E0DE4420](this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1E0DE4428](this, __s, __n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1E0DE4440](this, __s);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1E0DE4448](this, __s, __n);
}

void std::string::resize(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
  MEMORY[0x1E0DE4480](this, __n, __c);
}

void std::string::reserve(std::string *this, std::string::size_type __requested_capacity)
{
  MEMORY[0x1E0DE44A8](this, __requested_capacity);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x1E0DE44D8](this, __str);
}

void std::exception::~exception(std::exception *this)
{
  MEMORY[0x1E0DE4DD8](this);
}

void std::terminate(void)
{
  MEMORY[0x1E0DE4E18]();
}

uint64_t operator delete[]()
{
  return off_1E76C6740();
}

void operator delete(void *__p)
{
  off_1E76C6748(__p);
}

uint64_t operator delete()
{
  return off_1E76C6750();
}

uint64_t operator new[]()
{
  return off_1E76C6758();
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_1E76C6760(__sz);
}

void *__cdecl operator new(size_t __sz, const std::nothrow_t *a2)
{
  return (void *)off_1E76C6768(__sz, a2);
}

uint64_t operator new()
{
  return off_1E76C6770();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1E0DE5068](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1E0DE5080](a1);
}

void __cxa_end_catch(void)
{
  MEMORY[0x1E0DE5098]();
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x1E0DE50A0](a1);
}

void __cxa_rethrow(void)
{
  MEMORY[0x1E0DE50D0]();
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x1E0DE50D8](a1, lptinfo, a3);
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)MEMORY[0x1E0DE50E0](lpsrc, lpstype, lpdtype, s2d);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return MEMORY[0x1E0C80B50](*(_QWORD *)&a1, a2);
}

uint64_t _availability_version_check()
{
  return MEMORY[0x1E0C80CC0]();
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

void _os_activity_initiate(void *dso, const char *description, os_activity_flag_t flags, os_block_t activity_block)
{
  MEMORY[0x1E0C80FD0](dso, description, *(_QWORD *)&flags, activity_block);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1E0DEE9F8]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1E0DEEA50]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x1E0DEEA58]();
}

void abort(void)
{
  MEMORY[0x1E0C813A8]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1E0C813B0]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1E0C81570]();
}

void arc4random_buf(void *__buf, size_t __nbytes)
{
  MEMORY[0x1E0C81580](__buf, __nbytes);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return MEMORY[0x1E0DE7A50](cls, name, imp, types);
}

uint64_t dispatchMainAfterDelay()
{
  return MEMORY[0x1E0D64390]();
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_block_cancel(dispatch_block_t block)
{
  MEMORY[0x1E0C82C58](block);
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C60](flags, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C68](flags, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D10](group, queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
  MEMORY[0x1E0C82E10](predicate, context, function);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E50](label, attr, target);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

int fclose(FILE *a1)
{
  return MEMORY[0x1E0C832F8](a1);
}

int fflush(FILE *a1)
{
  return MEMORY[0x1E0C83370](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x1E0C83460](__filename, __mode);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x1E0C83478](a1, a2);
}

int fputs(const char *a1, FILE *a2)
{
  return MEMORY[0x1E0C83490](a1, a2);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1E0C834A0](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x1E0C83530](a1, a2, *(_QWORD *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x1E0C83580](a1);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1E0C83A20]();
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BB8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_rethrow(void)
{
  MEMORY[0x1E0DE7C98]();
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

void objc_moveWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7D18](to, from);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F98](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t performBlockOnMainThread()
{
  return MEMORY[0x1E0D644A0]();
}

uint64_t performBlockOnMainThreadAndWait()
{
  return MEMORY[0x1E0D644A8]();
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E18](a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x1E0C84E20](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E28](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E38](a1);
}

void rewind(FILE *a1)
{
  MEMORY[0x1E0C85120](a1);
}

int sched_yield(void)
{
  return MEMORY[0x1E0C85270]();
}

int setenv(const char *__name, const char *__value, int __overwrite)
{
  return MEMORY[0x1E0C85328](__name, __value, *(_QWORD *)&__overwrite);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x1E0C85440](__str, __size, __format);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x1E0C85498](a1, a2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocBox()
{
  return MEMORY[0x1E0DEEB48]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getAtPartialKeyPath()
{
  return MEMORY[0x1E0DEEC20]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1E0DEED00]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1E0DEED10]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1E0DEED28]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1E0DEED68]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_taskGroup_wait_next_throwing()
{
  return MEMORY[0x1E0DF0FF0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

int uuid_compare(const uuid_t uu1, const uuid_t uu2)
{
  return MEMORY[0x1E0C85A08](uu1, uu2);
}

void vDSP_maxv(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length __N)
{
  MEMORY[0x1E0C8C1B0](__A, __IA, __C, __N);
}

void vDSP_vabs(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x1E0C8C358](__A, __IA, __C, __IC, __N);
}

